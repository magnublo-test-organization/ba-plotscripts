<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:48:39.010" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:48:42.672" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:48:42.680" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:48:43.847" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:48:42.670" endtime="20201029 12:48:43.848"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:48:46.851" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:48:43.849" endtime="20201029 12:48:46.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.669" endtime="20201029 12:48:46.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:46.858" endtime="20201029 12:48:47.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:46.855" endtime="20201029 12:48:47.081"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:47.094" endtime="20201029 12:48:50.115"></status>
</kw>
<msg timestamp="20201029 12:48:50.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:47.092" endtime="20201029 12:48:50.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.118" endtime="20201029 12:48:50.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:50.124" endtime="20201029 12:48:50.129"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:47.089" endtime="20201029 12:48:50.130"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:47.087" endtime="20201029 12:48:50.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.086" endtime="20201029 12:48:50.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:50.140" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:50.138" endtime="20201029 12:48:50.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.134" endtime="20201029 12:48:50.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.085" endtime="20201029 12:48:50.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.084" endtime="20201029 12:48:50.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.145" endtime="20201029 12:48:50.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.083" endtime="20201029 12:48:50.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.151" endtime="20201029 12:48:50.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:47.081" endtime="20201029 12:48:50.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:42.667" endtime="20201029 12:48:50.156"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:50.169" endtime="20201029 12:48:50.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.166" endtime="20201029 12:48:50.192"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.220" endtime="20201029 12:48:53.241"></status>
</kw>
<msg timestamp="20201029 12:48:53.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.217" endtime="20201029 12:48:53.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.242" endtime="20201029 12:48:53.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.247" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:53.245" endtime="20201029 12:48:53.247"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:50.211" endtime="20201029 12:48:53.248"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:50.206" endtime="20201029 12:48:53.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.202" endtime="20201029 12:48:53.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:53.252" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:53.252" endtime="20201029 12:48:53.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.249" endtime="20201029 12:48:53.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.200" endtime="20201029 12:48:53.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.199" endtime="20201029 12:48:53.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.254" endtime="20201029 12:48:53.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.196" endtime="20201029 12:48:53.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.193" endtime="20201029 12:48:53.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.163" endtime="20201029 12:48:53.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.265" endtime="20201029 12:48:53.279"></status>
</kw>
<msg timestamp="20201029 12:48:53.280" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.262" endtime="20201029 12:48:53.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.285" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:53.282" endtime="20201029 12:48:53.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:53.287" endtime="20201029 12:48:53.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.259" endtime="20201029 12:48:53.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.258" endtime="20201029 12:48:53.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.301" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:48:53.299" endtime="20201029 12:48:53.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.305" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:48:53.303" endtime="20201029 12:48:53.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.294" endtime="20201029 12:48:53.307"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:50.157" endtime="20201029 12:48:53.308" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:48:39.144" endtime="20201029 12:48:53.315"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:48:53.403" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:48:53.411" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:48:54.524" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:48:53.402" endtime="20201029 12:48:54.525"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.528" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:48:54.526" endtime="20201029 12:48:57.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.401" endtime="20201029 12:48:57.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:57.535" endtime="20201029 12:48:57.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.532" endtime="20201029 12:48:57.839"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.852" endtime="20201029 12:49:00.874"></status>
</kw>
<msg timestamp="20201029 12:49:00.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.850" endtime="20201029 12:49:00.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.877" endtime="20201029 12:49:00.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:00.887" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:00.882" endtime="20201029 12:49:00.887"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:57.848" endtime="20201029 12:49:00.889"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:57.845" endtime="20201029 12:49:00.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.844" endtime="20201029 12:49:00.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:00.898" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:00.897" endtime="20201029 12:49:00.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.892" endtime="20201029 12:49:00.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.843" endtime="20201029 12:49:00.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.843" endtime="20201029 12:49:00.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.902" endtime="20201029 12:49:00.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.841" endtime="20201029 12:49:00.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.907" endtime="20201029 12:49:00.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.840" endtime="20201029 12:49:00.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:53.399" endtime="20201029 12:49:00.913"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:00.923" endtime="20201029 12:49:00.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.920" endtime="20201029 12:49:00.943"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:00.956" endtime="20201029 12:49:03.978"></status>
</kw>
<msg timestamp="20201029 12:49:03.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:00.954" endtime="20201029 12:49:03.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.982" endtime="20201029 12:49:03.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.991" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:03.987" endtime="20201029 12:49:03.992"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:00.951" endtime="20201029 12:49:03.994"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:00.949" endtime="20201029 12:49:03.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.948" endtime="20201029 12:49:03.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:04.003" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:04.002" endtime="20201029 12:49:04.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.997" endtime="20201029 12:49:04.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.947" endtime="20201029 12:49:04.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.946" endtime="20201029 12:49:04.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.007" endtime="20201029 12:49:04.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.945" endtime="20201029 12:49:04.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.943" endtime="20201029 12:49:04.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:00.918" endtime="20201029 12:49:04.013"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.031" endtime="20201029 12:49:04.046"></status>
</kw>
<msg timestamp="20201029 12:49:04.046" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.027" endtime="20201029 12:49:04.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.047" endtime="20201029 12:49:04.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.050" endtime="20201029 12:49:04.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.022" endtime="20201029 12:49:04.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.018" endtime="20201029 12:49:04.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.059" endtime="20201029 12:49:04.333"></status>
</kw>
<msg timestamp="20201029 12:49:04.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100947097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.057" endtime="20201029 12:49:04.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100947097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.336" endtime="20201029 12:49:04.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.342" endtime="20201029 12:49:04.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.055" endtime="20201029 12:49:04.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.053" endtime="20201029 12:49:04.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:04.348" level="INFO">${RESULT} = [{'diff': 9.57000000001429e-06}, {'diff': 9.332999999944747e-06}, {'diff': 1.1041000000044932e-05}, {'diff': 7.306000000095736e-06}, {'diff': 6.207999999841007e-06}, {'diff': 7.472000000063872e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:04.346" endtime="20201029 12:49:04.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:04.352" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.57000000001429e-06, 9.332999999944747e-06, 1.1041000000044932e-05, 7.306000000095736e-06, 6.207999999841007e-06, 7.472000000063872e-06, 5.556000000073169e-06, 1.1554999999940918e-05, 8.542...</msg>
<status status="PASS" starttime="20201029 12:49:04.349" endtime="20201029 12:49:04.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.356" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:04.355" endtime="20201029 12:49:04.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.359" level="INFO">VALUE: [9.57000000001429e-06, 9.332999999944747e-06, 1.1041000000044932e-05, 7.306000000095736e-06, 6.207999999841007e-06, 7.472000000063872e-06, 5.556000000073169e-06, 1.1554999999940918e-05, 8.542000000222316e-06, 9.457999999629152e-06, 7.625000000288651e-06, 1.055600000032797e-05, 1.0694000000199821e-05, 8.180000000024279e-06, 6.98600000026417e-06, 7.902999999753746e-06, 8.776999999682289e-06, 8.055999999978525e-06, 8.403000000267724e-06, 5.569999999899267e-06, 9.361999999679682e-06, 8.542000000222316e-06, 1.1041000000044932e-05, 1.0000000000065512e-05, 9.000000000369823e-06]</msg>
<status status="PASS" starttime="20201029 12:49:04.358" endtime="20201029 12:49:04.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.353" endtime="20201029 12:49:04.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.016" endtime="20201029 12:49:04.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.015" endtime="20201029 12:49:04.360"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.369" endtime="20201029 12:49:04.379"></status>
</kw>
<msg timestamp="20201029 12:49:04.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.367" endtime="20201029 12:49:04.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.380" endtime="20201029 12:49:04.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.383" endtime="20201029 12:49:04.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.364" endtime="20201029 12:49:04.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.363" endtime="20201029 12:49:04.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.394" endtime="20201029 12:49:04.690"></status>
</kw>
<msg timestamp="20201029 12:49:04.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100947097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.392" endtime="20201029 12:49:04.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100947097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100956667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.695" endtime="20201029 12:49:04.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.703" endtime="20201029 12:49:04.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.389" endtime="20201029 12:49:04.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.387" endtime="20201029 12:49:04.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:04.709" level="INFO">${RESULT} = [{'diff': 9.57000000001429e-06}, {'diff': 9.332999999944747e-06}, {'diff': 1.1041000000044932e-05}, {'diff': 7.306000000095736e-06}, {'diff': 6.207999999841007e-06}, {'diff': 7.472000000063872e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:04.706" endtime="20201029 12:49:04.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:04.714" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.57000000001429e-06, 9.332999999944747e-06, 1.1041000000044932e-05, 7.306000000095736e-06, 6.207999999841007e-06, 7.472000000063872e-06, 5.556000000073169e-06, 1.1554999999940918e-05, 8.542...</msg>
<status status="PASS" starttime="20201029 12:49:04.710" endtime="20201029 12:49:04.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.718" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:04.717" endtime="20201029 12:49:04.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.721" level="INFO">VALUE: [9.57000000001429e-06, 9.332999999944747e-06, 1.1041000000044932e-05, 7.306000000095736e-06, 6.207999999841007e-06, 7.472000000063872e-06, 5.556000000073169e-06, 1.1554999999940918e-05, 8.542000000222316e-06, 9.457999999629152e-06, 7.625000000288651e-06, 1.055600000032797e-05, 1.0694000000199821e-05, 8.180000000024279e-06, 6.98600000026417e-06, 7.902999999753746e-06, 8.776999999682289e-06, 8.055999999978525e-06, 8.403000000267724e-06, 5.569999999899267e-06, 9.361999999679682e-06, 8.542000000222316e-06, 1.1041000000044932e-05, 1.0000000000065512e-05, 9.000000000369823e-06, 9.250000000182723e-06, 9.179999999719968e-06, 9.486999999808177e-06, 7.652999999940846e-06, 8.082999999992069e-06, 9.444999999885795e-06, 1.0569000000071327e-05, 8.681000000176908e-06, 5.3610000003700975e-06, 1.1638999999785682e-05, 9.138999999880326e-06, 6.916999999884155e-06, 9.180999999802708e-06, 9.791999999730905e-06, 1.061200000007645e-05, 9.332999999944747e-06, 8.263999999869043e-06, 8.098000000344996e-06, 1.1333999999862954e-05, 6.749999999833278e-06, 1.1166999999812077e-05, 8.944999999815906e-06, 8.194999999933117e-06, 7.3469999999353774e-06, 1.0193999999685843e-05]</msg>
<status status="PASS" starttime="20201029 12:49:04.719" endtime="20201029 12:49:04.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.714" endtime="20201029 12:49:04.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.361" endtime="20201029 12:49:04.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.361" endtime="20201029 12:49:04.723"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.731" endtime="20201029 12:49:04.742"></status>
</kw>
<msg timestamp="20201029 12:49:04.743" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.729" endtime="20201029 12:49:04.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.745" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.744" endtime="20201029 12:49:04.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.747" endtime="20201029 12:49:04.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.727" endtime="20201029 12:49:04.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.725" endtime="20201029 12:49:04.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.761" endtime="20201029 12:49:05.083"></status>
</kw>
<msg timestamp="20201029 12:49:05.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101147958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101158514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.758" endtime="20201029 12:49:05.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101147958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.101158514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.088" endtime="20201029 12:49:05.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.098" endtime="20201029 12:49:05.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.753" endtime="20201029 12:49:05.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.750" endtime="20201029 12:49:05.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.105" level="INFO">${RESULT} = [{'diff': 1.055600000032797e-05}, {'diff': 1.0694000000199821e-05}, {'diff': 8.180000000024279e-06}, {'diff': 6.98600000026417e-06}, {'diff': 7.902999999753746e-06}, {'diff': 8.776999999682289e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:05.101" endtime="20201029 12:49:05.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:05.110" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.055600000032797e-05, 1.0694000000199821e-05, 8.180000000024279e-06, 6.98600000026417e-06, 7.902999999753746e-06, 8.776999999682289e-06, 8.055999999978525e-06, 8.403000000267724e-06, 5.5699...</msg>
<status status="PASS" starttime="20201029 12:49:05.106" endtime="20201029 12:49:05.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:05.113" endtime="20201029 12:49:05.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.117" level="INFO">VALUE: [1.055600000032797e-05, 1.0694000000199821e-05, 8.180000000024279e-06, 6.98600000026417e-06, 7.902999999753746e-06, 8.776999999682289e-06, 8.055999999978525e-06, 8.403000000267724e-06, 5.569999999899267e-06, 9.361999999679682e-06, 8.542000000222316e-06, 1.1041000000044932e-05, 1.0000000000065512e-05, 9.000000000369823e-06, 9.250000000182723e-06, 9.179999999719968e-06, 9.486999999808177e-06, 7.652999999940846e-06, 8.082999999992069e-06, 9.444999999885795e-06, 1.0569000000071327e-05, 8.681000000176908e-06, 5.3610000003700975e-06, 1.1638999999785682e-05, 9.138999999880326e-06, 6.916999999884155e-06, 9.180999999802708e-06, 9.791999999730905e-06, 1.061200000007645e-05, 9.332999999944747e-06, 8.263999999869043e-06, 8.098000000344996e-06, 1.1333999999862954e-05, 6.749999999833278e-06, 1.1166999999812077e-05, 8.944999999815906e-06, 8.194999999933117e-06, 7.3469999999353774e-06, 1.0193999999685843e-05, 7.666000000128292e-06, 1.0929999999742535e-05, 8.402999999823635e-06, 9.319000000118649e-06, 9.389000000137315e-06, 8.542000000222316e-06, 8.361000000345342e-06, 8.959000000086093e-06, 8.360999999901253e-06, 8.457999999933463e-06, 7.403000000127946e-06, 1.0791000000232032e-05, 7.999999999785956e-06, 7.694000000224577e-06, 5.792000000059971e-06, 7.040999999929909e-06, 8.847000000145044e-06, 7.222000000250972e-06, 1.2223000000144424e-05, 9.707999999886141e-06, 9.541999999918005e-06, 7.416999999954044e-06, 9.486000000169525e-06, 7.0970000001224776e-06, 7.694000000224577e-06]</msg>
<status status="PASS" starttime="20201029 12:49:05.116" endtime="20201029 12:49:05.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.111" endtime="20201029 12:49:05.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.724" endtime="20201029 12:49:05.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.723" endtime="20201029 12:49:05.119"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.126" endtime="20201029 12:49:05.136"></status>
</kw>
<msg timestamp="20201029 12:49:05.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.125" endtime="20201029 12:49:05.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.138" endtime="20201029 12:49:05.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.140" endtime="20201029 12:49:05.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.122" endtime="20201029 12:49:05.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.121" endtime="20201029 12:49:05.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.149" endtime="20201029 12:49:05.466"></status>
</kw>
<msg timestamp="20201029 12:49:05.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.426378819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.426385736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.148" endtime="20201029 12:49:05.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.426378819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.426385736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.471" endtime="20201029 12:49:05.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.481" endtime="20201029 12:49:05.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.145" endtime="20201029 12:49:05.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.143" endtime="20201029 12:49:05.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.488" level="INFO">${RESULT} = [{'diff': 6.916999999884155e-06}, {'diff': 9.180999999802708e-06}, {'diff': 9.791999999730905e-06}, {'diff': 1.061200000007645e-05}, {'diff': 9.332999999944747e-06}, {'diff': 8.263999999869043e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:05.484" endtime="20201029 12:49:05.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:05.493" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.916999999884155e-06, 9.180999999802708e-06, 9.791999999730905e-06, 1.061200000007645e-05, 9.332999999944747e-06, 8.263999999869043e-06, 8.098000000344996e-06, 1.1333999999862954e-05, 6.749...</msg>
<status status="PASS" starttime="20201029 12:49:05.489" endtime="20201029 12:49:05.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.497" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:05.496" endtime="20201029 12:49:05.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.500" level="INFO">VALUE: [6.916999999884155e-06, 9.180999999802708e-06, 9.791999999730905e-06, 1.061200000007645e-05, 9.332999999944747e-06, 8.263999999869043e-06, 8.098000000344996e-06, 1.1333999999862954e-05, 6.749999999833278e-06, 1.1166999999812077e-05, 8.944999999815906e-06, 8.194999999933117e-06, 7.3469999999353774e-06, 1.0193999999685843e-05, 7.666000000128292e-06, 1.0929999999742535e-05, 8.402999999823635e-06, 9.319000000118649e-06, 9.389000000137315e-06, 8.542000000222316e-06, 8.361000000345342e-06, 8.959000000086093e-06, 8.360999999901253e-06, 8.457999999933463e-06, 7.403000000127946e-06, 1.0791000000232032e-05, 7.999999999785956e-06, 7.694000000224577e-06, 5.792000000059971e-06, 7.040999999929909e-06, 8.847000000145044e-06, 7.222000000250972e-06, 1.2223000000144424e-05, 9.707999999886141e-06, 9.541999999918005e-06, 7.416999999954044e-06, 9.486000000169525e-06, 7.0970000001224776e-06, 7.694000000224577e-06, 1.040200000002045e-05, 7.92999999976729e-06, 8.347999999713807e-06, 8.290999999438498e-06, 1.0763999999774398e-05, 1.0763999999774398e-05, 1.0987000000461933e-05, 7.403000000572035e-06, 5.1809999996876854e-06, 8.125000000802629e-06, 9.597000000027833e-06, 7.111000000392664e-06, 9.930000000046846e-06, 1.0208000000844208e-05, 1.1027000000218834e-05, 9.026999999939278e-06, 5.917000000188466e-06, 7.819999999547633e-06, 9.957999999699041e-06, 6.444000000271899e-06, 8.291999999521238e-06, 1.061099999954962e-05, 1.1625000000847763e-05, 7.819999999547633e-06, 7.763999999355065e-06]</msg>
<status status="PASS" starttime="20201029 12:49:05.498" endtime="20201029 12:49:05.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.493" endtime="20201029 12:49:05.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.119" endtime="20201029 12:49:05.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.119" endtime="20201029 12:49:05.501"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.510" endtime="20201029 12:49:05.521"></status>
</kw>
<msg timestamp="20201029 12:49:05.522" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.507" endtime="20201029 12:49:05.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.524" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.523" endtime="20201029 12:49:05.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.525" endtime="20201029 12:49:05.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.505" endtime="20201029 12:49:05.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.503" endtime="20201029 12:49:05.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.534" endtime="20201029 12:49:05.852"></status>
</kw>
<msg timestamp="20201029 12:49:05.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.778678903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.778689694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.532" endtime="20201029 12:49:05.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.778678903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.778689694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.857" endtime="20201029 12:49:05.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.867" endtime="20201029 12:49:05.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.530" endtime="20201029 12:49:05.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.528" endtime="20201029 12:49:05.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:05.873" level="INFO">${RESULT} = [{'diff': 1.0791000000232032e-05}, {'diff': 7.999999999785956e-06}, {'diff': 7.694000000224577e-06}, {'diff': 5.792000000059971e-06}, {'diff': 7.040999999929909e-06}, {'diff': 8.847000000145044e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:49:05.870" endtime="20201029 12:49:05.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:05.879" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0791000000232032e-05, 7.999999999785956e-06, 7.694000000224577e-06, 5.792000000059971e-06, 7.040999999929909e-06, 8.847000000145044e-06, 7.222000000250972e-06, 1.2223000000144424e-05, 9.70...</msg>
<status status="PASS" starttime="20201029 12:49:05.874" endtime="20201029 12:49:05.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.883" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:05.882" endtime="20201029 12:49:05.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.886" level="INFO">VALUE: [1.0791000000232032e-05, 7.999999999785956e-06, 7.694000000224577e-06, 5.792000000059971e-06, 7.040999999929909e-06, 8.847000000145044e-06, 7.222000000250972e-06, 1.2223000000144424e-05, 9.707999999886141e-06, 9.541999999918005e-06, 7.416999999954044e-06, 9.486000000169525e-06, 7.0970000001224776e-06, 7.694000000224577e-06, 1.040200000002045e-05, 7.92999999976729e-06, 8.347999999713807e-06, 8.290999999438498e-06, 1.0763999999774398e-05, 1.0763999999774398e-05, 1.0987000000461933e-05, 7.403000000572035e-06, 5.1809999996876854e-06, 8.125000000802629e-06, 9.597000000027833e-06, 7.111000000392664e-06, 9.930000000046846e-06, 1.0208000000844208e-05, 1.1027000000218834e-05, 9.026999999939278e-06, 5.917000000188466e-06, 7.819999999547633e-06, 9.957999999699041e-06, 6.444000000271899e-06, 8.291999999521238e-06, 1.061099999954962e-05, 1.1625000000847763e-05, 7.819999999547633e-06, 7.763999999355065e-06, 8.860999999527053e-06, 8.778000000653208e-06, 8.833999999957598e-06, 8.47300000028639e-06, 8.000000000230045e-06, 6.0969999999827e-06, 7.513999999986254e-06, 8.916999999719621e-06, 1.1833999999488753e-05, 7.666000000128292e-06, 1.0249999999878412e-05, 7.985999999959859e-06, 8.861999999609793e-06, 8.055999999534436e-06, 8.16600000064227e-06, 7.596999999748277e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.6939999996407096e-06, 9.61100000029802e-06, 9.083000000131847e-06, 1.1805999999836558e-05, 7.652999999940846e-06, 8.22200000083484e-06]</msg>
<status status="PASS" starttime="20201029 12:49:05.884" endtime="20201029 12:49:05.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.880" endtime="20201029 12:49:05.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.502" endtime="20201029 12:49:05.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.502" endtime="20201029 12:49:05.887"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.895" endtime="20201029 12:49:05.907"></status>
</kw>
<msg timestamp="20201029 12:49:05.907" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.894" endtime="20201029 12:49:05.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:05.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:05.908" endtime="20201029 12:49:05.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.911" endtime="20201029 12:49:05.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.891" endtime="20201029 12:49:05.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.889" endtime="20201029 12:49:05.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:05.919" endtime="20201029 12:49:06.233"></status>
</kw>
<msg timestamp="20201029 12:49:06.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.164854833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.164861944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:05.918" endtime="20201029 12:49:06.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.164854833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.164861944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.238" endtime="20201029 12:49:06.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.247" endtime="20201029 12:49:06.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.915" endtime="20201029 12:49:06.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.914" endtime="20201029 12:49:06.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:06.254" level="INFO">${RESULT} = [{'diff': 7.111000000392664e-06}, {'diff': 9.930000000046846e-06}, {'diff': 1.0208000000844208e-05}, {'diff': 1.1027000000218834e-05}, {'diff': 9.026999999939278e-06}, {'diff': 5.917000000188466e-06},...</msg>
<status status="PASS" starttime="20201029 12:49:06.251" endtime="20201029 12:49:06.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:06.261" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.111000000392664e-06, 9.930000000046846e-06, 1.0208000000844208e-05, 1.1027000000218834e-05, 9.026999999939278e-06, 5.917000000188466e-06, 7.819999999547633e-06, 9.957999999699041e-06, 6.44...</msg>
<status status="PASS" starttime="20201029 12:49:06.255" endtime="20201029 12:49:06.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.266" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:06.265" endtime="20201029 12:49:06.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.268" level="INFO">VALUE: [7.111000000392664e-06, 9.930000000046846e-06, 1.0208000000844208e-05, 1.1027000000218834e-05, 9.026999999939278e-06, 5.917000000188466e-06, 7.819999999547633e-06, 9.957999999699041e-06, 6.444000000271899e-06, 8.291999999521238e-06, 1.061099999954962e-05, 1.1625000000847763e-05, 7.819999999547633e-06, 7.763999999355065e-06, 8.860999999527053e-06, 8.778000000653208e-06, 8.833999999957598e-06, 8.47300000028639e-06, 8.000000000230045e-06, 6.0969999999827e-06, 7.513999999986254e-06, 8.916999999719621e-06, 1.1833999999488753e-05, 7.666000000128292e-06, 1.0249999999878412e-05, 7.985999999959859e-06, 8.861999999609793e-06, 8.055999999534436e-06, 8.16600000064227e-06, 7.596999999748277e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.6939999996407096e-06, 9.61100000029802e-06, 9.083000000131847e-06, 1.1805999999836558e-05, 7.652999999940846e-06, 8.22200000083484e-06, 1.0681000000012375e-05, 7.68100000048122e-06, 6.749999999833278e-06, 6.4310000000844525e-06, 1.0944999999651372e-05, 6.874999999517684e-06, 9.791000000092254e-06, 9.721999999712239e-06, 6.332999999969502e-06, 1.0679999999929635e-05, 1.0554999999357051e-05, 1.115299999998598e-05, 8.082999999992069e-06, 1.0569999999709978e-05, 7.930000000655468e-06, 8.18100000010702e-06, 9.319000000118649e-06, 6.903000000058057e-06, 8.66700000035081e-06, 8.361999999983993e-06, 7.473000000146612e-06, 1.0277000000336045e-05, 1.0264000000148599e-05, 9.777999999904807e-06, 7.693999999780488e-06]</msg>
<status status="PASS" starttime="20201029 12:49:06.267" endtime="20201029 12:49:06.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.262" endtime="20201029 12:49:06.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.888" endtime="20201029 12:49:06.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:05.888" endtime="20201029 12:49:06.270"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.278" endtime="20201029 12:49:06.288"></status>
</kw>
<msg timestamp="20201029 12:49:06.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.276" endtime="20201029 12:49:06.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.291" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.289" endtime="20201029 12:49:06.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.292" endtime="20201029 12:49:06.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.273" endtime="20201029 12:49:06.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.272" endtime="20201029 12:49:06.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.301" endtime="20201029 12:49:06.616"></status>
</kw>
<msg timestamp="20201029 12:49:06.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.537581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.537589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.299" endtime="20201029 12:49:06.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.537581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.537589417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.621" endtime="20201029 12:49:06.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.631" endtime="20201029 12:49:06.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.297" endtime="20201029 12:49:06.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.295" endtime="20201029 12:49:06.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:06.638" level="INFO">${RESULT} = [{'diff': 7.985999999959859e-06}, {'diff': 8.861999999609793e-06}, {'diff': 8.055999999534436e-06}, {'diff': 8.16600000064227e-06}, {'diff': 7.596999999748277e-06}, {'diff': 6.19500000009765e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:49:06.634" endtime="20201029 12:49:06.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:06.643" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.985999999959859e-06, 8.861999999609793e-06, 8.055999999534436e-06, 8.16600000064227e-06, 7.596999999748277e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.69399...</msg>
<status status="PASS" starttime="20201029 12:49:06.639" endtime="20201029 12:49:06.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.647" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:06.646" endtime="20201029 12:49:06.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.650" level="INFO">VALUE: [7.985999999959859e-06, 8.861999999609793e-06, 8.055999999534436e-06, 8.16600000064227e-06, 7.596999999748277e-06, 6.19500000009765e-06, 9.750000000252612e-06, 1.0500000000135401e-05, 6.6939999996407096e-06, 9.61100000029802e-06, 9.083000000131847e-06, 1.1805999999836558e-05, 7.652999999940846e-06, 8.22200000083484e-06, 1.0681000000012375e-05, 7.68100000048122e-06, 6.749999999833278e-06, 6.4310000000844525e-06, 1.0944999999651372e-05, 6.874999999517684e-06, 9.791000000092254e-06, 9.721999999712239e-06, 6.332999999969502e-06, 1.0679999999929635e-05, 1.0554999999357051e-05, 1.115299999998598e-05, 8.082999999992069e-06, 1.0569999999709978e-05, 7.930000000655468e-06, 8.18100000010702e-06, 9.319000000118649e-06, 6.903000000058057e-06, 8.66700000035081e-06, 8.361999999983993e-06, 7.473000000146612e-06, 1.0277000000336045e-05, 1.0264000000148599e-05, 9.777999999904807e-06, 7.693999999780488e-06, 7.458999999876426e-06, 9.902999999589213e-06, 8.735999999842647e-06, 7.92999999976729e-06, 1.1167000000256166e-05, 8.165999999754092e-06, 7.346999999491288e-06, 7.402999999683857e-06, 9.556000000188192e-06, 1.0570000000598156e-05, 9.902999999589213e-06, 8.487000000556577e-06, 9.334000000471576e-06, 8.237000000299588e-06, 8.416000000011081e-06, 6.237000000020032e-06, 1.258400000025972e-05, 1.2041000000628799e-05, 6.0969999999827e-06, 9.653000000220402e-06, 8.097000000262256e-06, 9.153000000594602e-06, 9.013999999751832e-06, 7.971999999689672e-06, 7.764000000243243e-06]</msg>
<status status="PASS" starttime="20201029 12:49:06.648" endtime="20201029 12:49:06.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.644" endtime="20201029 12:49:06.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.270" endtime="20201029 12:49:06.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.270" endtime="20201029 12:49:06.651"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.660" endtime="20201029 12:49:06.671"></status>
</kw>
<msg timestamp="20201029 12:49:06.672" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.658" endtime="20201029 12:49:06.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:06.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:06.673" endtime="20201029 12:49:06.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.677" endtime="20201029 12:49:06.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.655" endtime="20201029 12:49:06.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.653" endtime="20201029 12:49:06.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:06.688" endtime="20201029 12:49:07.006"></status>
</kw>
<msg timestamp="20201029 12:49:07.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.913791819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.913802972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:06.686" endtime="20201029 12:49:07.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.913791819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.913802972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.011" endtime="20201029 12:49:07.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.021" endtime="20201029 12:49:07.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.683" endtime="20201029 12:49:07.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.681" endtime="20201029 12:49:07.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.028" level="INFO">${RESULT} = [{'diff': 1.115299999998598e-05}, {'diff': 8.082999999992069e-06}, {'diff': 1.0569999999709978e-05}, {'diff': 7.930000000655468e-06}, {'diff': 8.18100000010702e-06}, {'diff': 9.319000000118649e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:07.024" endtime="20201029 12:49:07.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:07.033" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.115299999998598e-05, 8.082999999992069e-06, 1.0569999999709978e-05, 7.930000000655468e-06, 8.18100000010702e-06, 9.319000000118649e-06, 6.903000000058057e-06, 8.66700000035081e-06, 8.36199...</msg>
<status status="PASS" starttime="20201029 12:49:07.029" endtime="20201029 12:49:07.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.038" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:07.036" endtime="20201029 12:49:07.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.040" level="INFO">VALUE: [1.115299999998598e-05, 8.082999999992069e-06, 1.0569999999709978e-05, 7.930000000655468e-06, 8.18100000010702e-06, 9.319000000118649e-06, 6.903000000058057e-06, 8.66700000035081e-06, 8.361999999983993e-06, 7.473000000146612e-06, 1.0277000000336045e-05, 1.0264000000148599e-05, 9.777999999904807e-06, 7.693999999780488e-06, 7.458999999876426e-06, 9.902999999589213e-06, 8.735999999842647e-06, 7.92999999976729e-06, 1.1167000000256166e-05, 8.165999999754092e-06, 7.346999999491288e-06, 7.402999999683857e-06, 9.556000000188192e-06, 1.0570000000598156e-05, 9.902999999589213e-06, 8.487000000556577e-06, 9.334000000471576e-06, 8.237000000299588e-06, 8.416000000011081e-06, 6.237000000020032e-06, 1.258400000025972e-05, 1.2041000000628799e-05, 6.0969999999827e-06, 9.653000000220402e-06, 8.097000000262256e-06, 9.153000000594602e-06, 9.013999999751832e-06, 7.971999999689672e-06, 7.764000000243243e-06, 8.401999999740895e-06, 7.026999999659722e-06, 9.429999999532868e-06, 9.375000000311218e-06, 1.1040999999600842e-05, 6.971999999549894e-06, 1.020799999995603e-05, 9.416999999345421e-06, 1.1999999999900979e-05, 8.77799999976503e-06, 1.2125000000473563e-05, 9.722000000600417e-06, 1.1111000000063598e-05, 1.1069000000141216e-05, 9.485999999725436e-06, 7.5420000005266274e-06, 5.69400000038911e-06, 7.83299999973508e-06, 8.805000000222662e-06, 1.040300000010319e-05, 8.861000000415231e-06, 9.028000000022018e-06, 9.013999999751832e-06, 9.332999999500657e-06, 7.903000000197835e-06]</msg>
<status status="PASS" starttime="20201029 12:49:07.039" endtime="20201029 12:49:07.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.034" endtime="20201029 12:49:07.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.652" endtime="20201029 12:49:07.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:06.652" endtime="20201029 12:49:07.042"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.049" endtime="20201029 12:49:07.060"></status>
</kw>
<msg timestamp="20201029 12:49:07.061" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.048" endtime="20201029 12:49:07.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.063" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.062" endtime="20201029 12:49:07.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.064" endtime="20201029 12:49:07.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.045" endtime="20201029 12:49:07.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.044" endtime="20201029 12:49:07.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.073" endtime="20201029 12:49:07.391"></status>
</kw>
<msg timestamp="20201029 12:49:07.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.286175694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.286184181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.072" endtime="20201029 12:49:07.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.286175694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.286184181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.396" endtime="20201029 12:49:07.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.406" endtime="20201029 12:49:07.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.069" endtime="20201029 12:49:07.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.067" endtime="20201029 12:49:07.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.412" level="INFO">${RESULT} = [{'diff': 8.487000000556577e-06}, {'diff': 9.334000000471576e-06}, {'diff': 8.237000000299588e-06}, {'diff': 8.416000000011081e-06}, {'diff': 6.237000000020032e-06}, {'diff': 1.258400000025972e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:07.409" endtime="20201029 12:49:07.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:07.418" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.487000000556577e-06, 9.334000000471576e-06, 8.237000000299588e-06, 8.416000000011081e-06, 6.237000000020032e-06, 1.258400000025972e-05, 1.2041000000628799e-05, 6.0969999999827e-06, 9.65300...</msg>
<status status="PASS" starttime="20201029 12:49:07.413" endtime="20201029 12:49:07.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.423" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:07.422" endtime="20201029 12:49:07.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.425" level="INFO">VALUE: [8.487000000556577e-06, 9.334000000471576e-06, 8.237000000299588e-06, 8.416000000011081e-06, 6.237000000020032e-06, 1.258400000025972e-05, 1.2041000000628799e-05, 6.0969999999827e-06, 9.653000000220402e-06, 8.097000000262256e-06, 9.153000000594602e-06, 9.013999999751832e-06, 7.971999999689672e-06, 7.764000000243243e-06, 8.401999999740895e-06, 7.026999999659722e-06, 9.429999999532868e-06, 9.375000000311218e-06, 1.1040999999600842e-05, 6.971999999549894e-06, 1.020799999995603e-05, 9.416999999345421e-06, 1.1999999999900979e-05, 8.77799999976503e-06, 1.2125000000473563e-05, 9.722000000600417e-06, 1.1111000000063598e-05, 1.1069000000141216e-05, 9.485999999725436e-06, 7.5420000005266274e-06, 5.69400000038911e-06, 7.83299999973508e-06, 8.805000000222662e-06, 1.040300000010319e-05, 8.861000000415231e-06, 9.028000000022018e-06, 9.013999999751832e-06, 9.332999999500657e-06, 7.903000000197835e-06, 1.0389000000721182e-05, 8.596999999888055e-06, 7.0270000005479005e-06, 8.02799999988224e-06, 1.040300000010319e-05, 8.887999999984686e-06, 6.2080000002850966e-06, 9.207999999816252e-06, 6.389000000162071e-06, 9.638999999950215e-06, 8.18100000010702e-06, 6.749999999833278e-06, 7.513999999986254e-06, 9.930999999241408e-06, 7.625000000288651e-06, 7.763000000160503e-06, 7.596999999748277e-06, 1.0624999999819806e-05, 7.791999999895438e-06, 9.181000000246797e-06, 9.735999999982425e-06, 7.111000000392664e-06, 6.2080000002850966e-06, 9.834000000097376e-06, 8.735999999842647e-06]</msg>
<status status="PASS" starttime="20201029 12:49:07.424" endtime="20201029 12:49:07.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.419" endtime="20201029 12:49:07.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.042" endtime="20201029 12:49:07.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.042" endtime="20201029 12:49:07.427"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.434" endtime="20201029 12:49:07.446"></status>
</kw>
<msg timestamp="20201029 12:49:07.446" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.433" endtime="20201029 12:49:07.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.449" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.447" endtime="20201029 12:49:07.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.450" endtime="20201029 12:49:07.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.430" endtime="20201029 12:49:07.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.429" endtime="20201029 12:49:07.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.460" endtime="20201029 12:49:07.780"></status>
</kw>
<msg timestamp="20201029 12:49:07.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.657637681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.657647403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.458" endtime="20201029 12:49:07.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.657637681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.657647403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.785" endtime="20201029 12:49:07.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.799" endtime="20201029 12:49:07.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.455" endtime="20201029 12:49:07.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.453" endtime="20201029 12:49:07.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:07.808" level="INFO">${RESULT} = [{'diff': 9.722000000600417e-06}, {'diff': 1.1111000000063598e-05}, {'diff': 1.1069000000141216e-05}, {'diff': 9.485999999725436e-06}, {'diff': 7.5420000005266274e-06}, {'diff': 5.69400000038911e-06},...</msg>
<status status="PASS" starttime="20201029 12:49:07.804" endtime="20201029 12:49:07.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:07.813" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.722000000600417e-06, 1.1111000000063598e-05, 1.1069000000141216e-05, 9.485999999725436e-06, 7.5420000005266274e-06, 5.69400000038911e-06, 7.83299999973508e-06, 8.805000000222662e-06, 1.040...</msg>
<status status="PASS" starttime="20201029 12:49:07.809" endtime="20201029 12:49:07.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.818" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:07.817" endtime="20201029 12:49:07.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.821" level="INFO">VALUE: [9.722000000600417e-06, 1.1111000000063598e-05, 1.1069000000141216e-05, 9.485999999725436e-06, 7.5420000005266274e-06, 5.69400000038911e-06, 7.83299999973508e-06, 8.805000000222662e-06, 1.040300000010319e-05, 8.861000000415231e-06, 9.028000000022018e-06, 9.013999999751832e-06, 9.332999999500657e-06, 7.903000000197835e-06, 1.0389000000721182e-05, 8.596999999888055e-06, 7.0270000005479005e-06, 8.02799999988224e-06, 1.040300000010319e-05, 8.887999999984686e-06, 6.2080000002850966e-06, 9.207999999816252e-06, 6.389000000162071e-06, 9.638999999950215e-06, 8.18100000010702e-06, 6.749999999833278e-06, 7.513999999986254e-06, 9.930999999241408e-06, 7.625000000288651e-06, 7.763000000160503e-06, 7.596999999748277e-06, 1.0624999999819806e-05, 7.791999999895438e-06, 9.181000000246797e-06, 9.735999999982425e-06, 7.111000000392664e-06, 6.2080000002850966e-06, 9.834000000097376e-06, 8.735999999842647e-06, 1.1332999999780213e-05, 1.0584000000868343e-05, 6.987000000790999e-06, 1.061099999954962e-05, 9.9169999998594e-06, 1.1874999999328395e-05, 1.1222000000365995e-05, 8.360999999901253e-06, 8.889000000067426e-06, 5.917000000188466e-06, 8.318999999978871e-06, 8.499999999855845e-06, 1.0028000000161796e-05, 9.555000000105451e-06, 9.499999999995623e-06, 9.61100000029802e-06, 6.610999999878686e-06, 8.097000000262256e-06, 7.555999999908636e-06, 8.680999999732819e-06, 7.2089999996194365e-06, 8.472999999398212e-06, 9.485999999725436e-06, 7.652999999940846e-06, 9.430999999615608e-06]</msg>
<status status="PASS" starttime="20201029 12:49:07.819" endtime="20201029 12:49:07.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.815" endtime="20201029 12:49:07.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.427" endtime="20201029 12:49:07.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.427" endtime="20201029 12:49:07.823"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.830" endtime="20201029 12:49:07.842"></status>
</kw>
<msg timestamp="20201029 12:49:07.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.829" endtime="20201029 12:49:07.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:07.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:07.844" endtime="20201029 12:49:07.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.846" endtime="20201029 12:49:07.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.826" endtime="20201029 12:49:07.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.825" endtime="20201029 12:49:07.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:07.855" endtime="20201029 12:49:08.173"></status>
</kw>
<msg timestamp="20201029 12:49:08.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.035252472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.035259222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:07.854" endtime="20201029 12:49:08.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.035252472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.035259222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.178" endtime="20201029 12:49:08.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.188" endtime="20201029 12:49:08.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.851" endtime="20201029 12:49:08.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.849" endtime="20201029 12:49:08.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.195" level="INFO">${RESULT} = [{'diff': 6.749999999833278e-06}, {'diff': 7.513999999986254e-06}, {'diff': 9.930999999241408e-06}, {'diff': 7.625000000288651e-06}, {'diff': 7.763000000160503e-06}, {'diff': 7.596999999748277e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:08.191" endtime="20201029 12:49:08.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:08.200" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.749999999833278e-06, 7.513999999986254e-06, 9.930999999241408e-06, 7.625000000288651e-06, 7.763000000160503e-06, 7.596999999748277e-06, 1.0624999999819806e-05, 7.791999999895438e-06, 9.181...</msg>
<status status="PASS" starttime="20201029 12:49:08.195" endtime="20201029 12:49:08.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.205" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:08.203" endtime="20201029 12:49:08.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.207" level="INFO">VALUE: [6.749999999833278e-06, 7.513999999986254e-06, 9.930999999241408e-06, 7.625000000288651e-06, 7.763000000160503e-06, 7.596999999748277e-06, 1.0624999999819806e-05, 7.791999999895438e-06, 9.181000000246797e-06, 9.735999999982425e-06, 7.111000000392664e-06, 6.2080000002850966e-06, 9.834000000097376e-06, 8.735999999842647e-06, 1.1332999999780213e-05, 1.0584000000868343e-05, 6.987000000790999e-06, 1.061099999954962e-05, 9.9169999998594e-06, 1.1874999999328395e-05, 1.1222000000365995e-05, 8.360999999901253e-06, 8.889000000067426e-06, 5.917000000188466e-06, 8.318999999978871e-06, 8.499999999855845e-06, 1.0028000000161796e-05, 9.555000000105451e-06, 9.499999999995623e-06, 9.61100000029802e-06, 6.610999999878686e-06, 8.097000000262256e-06, 7.555999999908636e-06, 8.680999999732819e-06, 7.2089999996194365e-06, 8.472999999398212e-06, 9.485999999725436e-06, 7.652999999940846e-06, 9.430999999615608e-06, 5.819000000073515e-06, 7.346999999491288e-06, 1.095899999992156e-05, 7.2500000003472564e-06, 7.987000000042599e-06, 8.957999999559263e-06, 8.764000000383021e-06, 1.020900000003877e-05, 8.37500000017144e-06, 9.0699999999444e-06, 1.18469999996762e-05, 1.1041999999683583e-05, 8.790999999952476e-06, 7.931000000738209e-06, 7.944000000037477e-06, 9.06899999986166e-06, 1.0070000000084178e-05, 8.778000000653208e-06, 9.152999999706424e-06, 6.568999999956304e-06, 7.569999999290644e-06, 9.181000000246797e-06, 7.985999999959859e-06, 8.764000000383021e-06, 7.944000000037477e-06]</msg>
<status status="PASS" starttime="20201029 12:49:08.206" endtime="20201029 12:49:08.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.201" endtime="20201029 12:49:08.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.823" endtime="20201029 12:49:08.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:07.823" endtime="20201029 12:49:08.209"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.216" endtime="20201029 12:49:08.228"></status>
</kw>
<msg timestamp="20201029 12:49:08.229" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.215" endtime="20201029 12:49:08.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.231" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.230" endtime="20201029 12:49:08.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.232" endtime="20201029 12:49:08.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.212" endtime="20201029 12:49:08.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.211" endtime="20201029 12:49:08.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.241" endtime="20201029 12:49:08.559"></status>
</kw>
<msg timestamp="20201029 12:49:08.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.410371125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.410379625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.240" endtime="20201029 12:49:08.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.410371125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.410379625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.564" endtime="20201029 12:49:08.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.574" endtime="20201029 12:49:08.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.237" endtime="20201029 12:49:08.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.236" endtime="20201029 12:49:08.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.581" level="INFO">${RESULT} = [{'diff': 8.499999999855845e-06}, {'diff': 1.0028000000161796e-05}, {'diff': 9.555000000105451e-06}, {'diff': 9.499999999995623e-06}, {'diff': 9.61100000029802e-06}, {'diff': 6.610999999878686e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:08.577" endtime="20201029 12:49:08.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:08.585" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.499999999855845e-06, 1.0028000000161796e-05, 9.555000000105451e-06, 9.499999999995623e-06, 9.61100000029802e-06, 6.610999999878686e-06, 8.097000000262256e-06, 7.555999999908636e-06, 8.6809...</msg>
<status status="PASS" starttime="20201029 12:49:08.582" endtime="20201029 12:49:08.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.590" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:08.589" endtime="20201029 12:49:08.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.592" level="INFO">VALUE: [8.499999999855845e-06, 1.0028000000161796e-05, 9.555000000105451e-06, 9.499999999995623e-06, 9.61100000029802e-06, 6.610999999878686e-06, 8.097000000262256e-06, 7.555999999908636e-06, 8.680999999732819e-06, 7.2089999996194365e-06, 8.472999999398212e-06, 9.485999999725436e-06, 7.652999999940846e-06, 9.430999999615608e-06, 5.819000000073515e-06, 7.346999999491288e-06, 1.095899999992156e-05, 7.2500000003472564e-06, 7.987000000042599e-06, 8.957999999559263e-06, 8.764000000383021e-06, 1.020900000003877e-05, 8.37500000017144e-06, 9.0699999999444e-06, 1.18469999996762e-05, 1.1041999999683583e-05, 8.790999999952476e-06, 7.931000000738209e-06, 7.944000000037477e-06, 9.06899999986166e-06, 1.0070000000084178e-05, 8.778000000653208e-06, 9.152999999706424e-06, 6.568999999956304e-06, 7.569999999290644e-06, 9.181000000246797e-06, 7.985999999959859e-06, 8.764000000383021e-06, 7.944000000037477e-06, 1.2277999999810163e-05, 8.431000000364008e-06, 7.152000000232306e-06, 9.333000000388836e-06, 8.069999999804622e-06, 7.195000000237428e-06, 5.971999999410116e-06, 1.1139000000603971e-05, 1.0471999999595027e-05, 8.582999999617869e-06, 9.125000000054229e-06, 6.9160000002455035e-06, 8.902999999449435e-06, 9.181000000246797e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.416000000011081e-06, 8.903000000337613e-06, 8.611000000158242e-06, 8.860999999527053e-06, 7.180999999967241e-06, 1.248600000014477e-05, 7.693999999780488e-06, 9.139000000324415e-06, 8.068999999721882e-06]</msg>
<status status="PASS" starttime="20201029 12:49:08.591" endtime="20201029 12:49:08.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.587" endtime="20201029 12:49:08.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.209" endtime="20201029 12:49:08.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.209" endtime="20201029 12:49:08.594"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.603" endtime="20201029 12:49:08.613"></status>
</kw>
<msg timestamp="20201029 12:49:08.614" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.600" endtime="20201029 12:49:08.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.616" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.615" endtime="20201029 12:49:08.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.617" endtime="20201029 12:49:08.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.598" endtime="20201029 12:49:08.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.596" endtime="20201029 12:49:08.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.626" endtime="20201029 12:49:08.943"></status>
</kw>
<msg timestamp="20201029 12:49:08.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.797321333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.797332375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.625" endtime="20201029 12:49:08.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.797321333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.797332375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:08.948" endtime="20201029 12:49:08.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.958" endtime="20201029 12:49:08.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.622" endtime="20201029 12:49:08.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.620" endtime="20201029 12:49:08.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:08.965" level="INFO">${RESULT} = [{'diff': 1.1041999999683583e-05}, {'diff': 8.790999999952476e-06}, {'diff': 7.931000000738209e-06}, {'diff': 7.944000000037477e-06}, {'diff': 9.06899999986166e-06}, {'diff': 1.0070000000084178e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:49:08.961" endtime="20201029 12:49:08.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:08.970" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1041999999683583e-05, 8.790999999952476e-06, 7.931000000738209e-06, 7.944000000037477e-06, 9.06899999986166e-06, 1.0070000000084178e-05, 8.778000000653208e-06, 9.152999999706424e-06, 6.568...</msg>
<status status="PASS" starttime="20201029 12:49:08.966" endtime="20201029 12:49:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.975" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:08.974" endtime="20201029 12:49:08.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:08.977" level="INFO">VALUE: [1.1041999999683583e-05, 8.790999999952476e-06, 7.931000000738209e-06, 7.944000000037477e-06, 9.06899999986166e-06, 1.0070000000084178e-05, 8.778000000653208e-06, 9.152999999706424e-06, 6.568999999956304e-06, 7.569999999290644e-06, 9.181000000246797e-06, 7.985999999959859e-06, 8.764000000383021e-06, 7.944000000037477e-06, 1.2277999999810163e-05, 8.431000000364008e-06, 7.152000000232306e-06, 9.333000000388836e-06, 8.069999999804622e-06, 7.195000000237428e-06, 5.971999999410116e-06, 1.1139000000603971e-05, 1.0471999999595027e-05, 8.582999999617869e-06, 9.125000000054229e-06, 6.9160000002455035e-06, 8.902999999449435e-06, 9.181000000246797e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.416000000011081e-06, 8.903000000337613e-06, 8.611000000158242e-06, 8.860999999527053e-06, 7.180999999967241e-06, 1.248600000014477e-05, 7.693999999780488e-06, 9.139000000324415e-06, 8.068999999721882e-06, 1.0054999999731251e-05, 9.902999999589213e-06, 1.0736000000122203e-05, 7.625000000288651e-06, 7.596999999748277e-06, 9.361000000041031e-06, 1.0194999999768584e-05, 1.1083000000411403e-05, 1.1124999999445606e-05, 8.207999999676474e-06, 6.749999999833278e-06, 8.5700000003186e-06, 7.180999999967241e-06, 7.777999999625251e-06, 1.0737000000204944e-05, 1.0973000000191746e-05, 7.1390000000448595e-06, 1.1985999999630792e-05, 9.583999999840387e-06, 7.166999999697055e-06, 1.0500000000135401e-05, 8.457999999933463e-06, 1.026399999926042e-05, 7.33400000019202e-06, 7.0970000001224776e-06]</msg>
<status status="PASS" starttime="20201029 12:49:08.976" endtime="20201029 12:49:08.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.971" endtime="20201029 12:49:08.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.595" endtime="20201029 12:49:08.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.594" endtime="20201029 12:49:08.979"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:08.986" endtime="20201029 12:49:08.998"></status>
</kw>
<msg timestamp="20201029 12:49:08.999" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:08.985" endtime="20201029 12:49:08.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.001" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.000" endtime="20201029 12:49:09.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.002" endtime="20201029 12:49:09.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.982" endtime="20201029 12:49:09.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.981" endtime="20201029 12:49:09.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.012" endtime="20201029 12:49:09.322"></status>
</kw>
<msg timestamp="20201029 12:49:09.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.172355667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.172362583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.010" endtime="20201029 12:49:09.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.172355667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.172362583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.326" endtime="20201029 12:49:09.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.336" endtime="20201029 12:49:09.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.007" endtime="20201029 12:49:09.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.006" endtime="20201029 12:49:09.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:09.343" level="INFO">${RESULT} = [{'diff': 6.9160000002455035e-06}, {'diff': 8.902999999449435e-06}, {'diff': 9.181000000246797e-06}, {'diff': 1.0000000000509601e-05}, {'diff': 9.26400000000882e-06}, {'diff': 8.416000000011081e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:49:09.340" endtime="20201029 12:49:09.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:09.349" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.9160000002455035e-06, 8.902999999449435e-06, 9.181000000246797e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.416000000011081e-06, 8.903000000337613e-06, 8.611000000158242e-06, 8.860...</msg>
<status status="PASS" starttime="20201029 12:49:09.344" endtime="20201029 12:49:09.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.353" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:09.352" endtime="20201029 12:49:09.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.356" level="INFO">VALUE: [6.9160000002455035e-06, 8.902999999449435e-06, 9.181000000246797e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.416000000011081e-06, 8.903000000337613e-06, 8.611000000158242e-06, 8.860999999527053e-06, 7.180999999967241e-06, 1.248600000014477e-05, 7.693999999780488e-06, 9.139000000324415e-06, 8.068999999721882e-06, 1.0054999999731251e-05, 9.902999999589213e-06, 1.0736000000122203e-05, 7.625000000288651e-06, 7.596999999748277e-06, 9.361000000041031e-06, 1.0194999999768584e-05, 1.1083000000411403e-05, 1.1124999999445606e-05, 8.207999999676474e-06, 6.749999999833278e-06, 8.5700000003186e-06, 7.180999999967241e-06, 7.777999999625251e-06, 1.0737000000204944e-05, 1.0973000000191746e-05, 7.1390000000448595e-06, 1.1985999999630792e-05, 9.583999999840387e-06, 7.166999999697055e-06, 1.0500000000135401e-05, 8.457999999933463e-06, 1.026399999926042e-05, 7.33400000019202e-06, 7.0970000001224776e-06, 8.889000000067426e-06, 9.541999999918005e-06, 1.2235999999887781e-05, 5.374999999752106e-06, 8.957999999559263e-06, 9.902999999589213e-06, 9.0699999999444e-06, 9.902999999589213e-06, 1.0028000000161796e-05, 8.764000000383021e-06, 1.0152999999846202e-05, 6.694000000528888e-06, 1.1680999999263975e-05, 1.1499999999387e-05, 7.639000000558838e-06, 6.652999999801068e-06, 1.0332999999640435e-05, 7.887999999844908e-06, 6.750000000721457e-06, 9.32000000020139e-06, 1.1680999999263975e-05, 5.917000000188466e-06, 1.011099999992382e-05, 9.250000000626812e-06, 1.1097999999876151e-05]</msg>
<status status="PASS" starttime="20201029 12:49:09.354" endtime="20201029 12:49:09.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.350" endtime="20201029 12:49:09.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.979" endtime="20201029 12:49:09.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:08.979" endtime="20201029 12:49:09.357"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.365" endtime="20201029 12:49:09.376"></status>
</kw>
<msg timestamp="20201029 12:49:09.376" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.363" endtime="20201029 12:49:09.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.379" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.377" endtime="20201029 12:49:09.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.380" endtime="20201029 12:49:09.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.361" endtime="20201029 12:49:09.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.359" endtime="20201029 12:49:09.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.389" endtime="20201029 12:49:09.703"></status>
</kw>
<msg timestamp="20201029 12:49:09.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.548738083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.548746653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.387" endtime="20201029 12:49:09.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.548738083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.548746653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:09.708" endtime="20201029 12:49:09.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.717" endtime="20201029 12:49:09.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.385" endtime="20201029 12:49:09.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.383" endtime="20201029 12:49:09.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:09.724" level="INFO">${RESULT} = [{'diff': 8.5700000003186e-06}, {'diff': 7.180999999967241e-06}, {'diff': 7.777999999625251e-06}, {'diff': 1.0737000000204944e-05}, {'diff': 1.0973000000191746e-05}, {'diff': 7.1390000000448595e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:49:09.721" endtime="20201029 12:49:09.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:09.729" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.5700000003186e-06, 7.180999999967241e-06, 7.777999999625251e-06, 1.0737000000204944e-05, 1.0973000000191746e-05, 7.1390000000448595e-06, 1.1985999999630792e-05, 9.583999999840387e-06, 7.16...</msg>
<status status="PASS" starttime="20201029 12:49:09.725" endtime="20201029 12:49:09.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.733" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:09.732" endtime="20201029 12:49:09.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.736" level="INFO">VALUE: [8.5700000003186e-06, 7.180999999967241e-06, 7.777999999625251e-06, 1.0737000000204944e-05, 1.0973000000191746e-05, 7.1390000000448595e-06, 1.1985999999630792e-05, 9.583999999840387e-06, 7.166999999697055e-06, 1.0500000000135401e-05, 8.457999999933463e-06, 1.026399999926042e-05, 7.33400000019202e-06, 7.0970000001224776e-06, 8.889000000067426e-06, 9.541999999918005e-06, 1.2235999999887781e-05, 5.374999999752106e-06, 8.957999999559263e-06, 9.902999999589213e-06, 9.0699999999444e-06, 9.902999999589213e-06, 1.0028000000161796e-05, 8.764000000383021e-06, 1.0152999999846202e-05, 6.694000000528888e-06, 1.1680999999263975e-05, 1.1499999999387e-05, 7.639000000558838e-06, 6.652999999801068e-06, 1.0332999999640435e-05, 7.887999999844908e-06, 6.750000000721457e-06, 9.32000000020139e-06, 1.1680999999263975e-05, 5.917000000188466e-06, 1.011099999992382e-05, 9.250000000626812e-06, 1.1097999999876151e-05, 7.597999999831018e-06, 7.610999999130286e-06, 9.096999999513855e-06, 7.818999998576714e-06, 6.917000000328244e-06, 7.528000001144619e-06, 7.72200000120904e-06, 6.486000000194281e-06, 1.0860999999806609e-05, 1.0445000000913751e-05, 6.3610000005098755e-06, 7.764000001131421e-06, 9.02799999913384e-06, 7.473000000146612e-06, 6.209000000367837e-06, 1.0264000000148599e-05, 9.792000000174994e-06, 7.597999999831018e-06, 7.763999999355065e-06, 1.0375000000450996e-05, 6.750000000721457e-06, 1.040300000099137e-05, 6.0409999989019525e-06, 8.319999999173433e-06, 7.305000000457085e-06]</msg>
<status status="PASS" starttime="20201029 12:49:09.735" endtime="20201029 12:49:09.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.730" endtime="20201029 12:49:09.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.358" endtime="20201029 12:49:09.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.358" endtime="20201029 12:49:09.737"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.746" endtime="20201029 12:49:09.757"></status>
</kw>
<msg timestamp="20201029 12:49:09.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.744" endtime="20201029 12:49:09.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:09.759" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:09.758" endtime="20201029 12:49:09.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.760" endtime="20201029 12:49:09.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.741" endtime="20201029 12:49:09.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.739" endtime="20201029 12:49:09.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:09.769" endtime="20201029 12:49:10.079"></status>
</kw>
<msg timestamp="20201029 12:49:10.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.92344475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.923451444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:09.768" endtime="20201029 12:49:10.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.92344475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.923451444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:10.084" endtime="20201029 12:49:10.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.094" endtime="20201029 12:49:10.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.765" endtime="20201029 12:49:10.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.764" endtime="20201029 12:49:10.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.101" level="INFO">${RESULT} = [{'diff': 6.694000000528888e-06}, {'diff': 1.1680999999263975e-05}, {'diff': 1.1499999999387e-05}, {'diff': 7.639000000558838e-06}, {'diff': 6.652999999801068e-06}, {'diff': 1.0332999999640435e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:49:10.097" endtime="20201029 12:49:10.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:10.106" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.694000000528888e-06, 1.1680999999263975e-05, 1.1499999999387e-05, 7.639000000558838e-06, 6.652999999801068e-06, 1.0332999999640435e-05, 7.887999999844908e-06, 6.750000000721457e-06, 9.3200...</msg>
<status status="PASS" starttime="20201029 12:49:10.102" endtime="20201029 12:49:10.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.111" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:10.110" endtime="20201029 12:49:10.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.113" level="INFO">VALUE: [6.694000000528888e-06, 1.1680999999263975e-05, 1.1499999999387e-05, 7.639000000558838e-06, 6.652999999801068e-06, 1.0332999999640435e-05, 7.887999999844908e-06, 6.750000000721457e-06, 9.32000000020139e-06, 1.1680999999263975e-05, 5.917000000188466e-06, 1.011099999992382e-05, 9.250000000626812e-06, 1.1097999999876151e-05, 7.597999999831018e-06, 7.610999999130286e-06, 9.096999999513855e-06, 7.818999998576714e-06, 6.917000000328244e-06, 7.528000001144619e-06, 7.72200000120904e-06, 6.486000000194281e-06, 1.0860999999806609e-05, 1.0445000000913751e-05, 6.3610000005098755e-06, 7.764000001131421e-06, 9.02799999913384e-06, 7.473000000146612e-06, 6.209000000367837e-06, 1.0264000000148599e-05, 9.792000000174994e-06, 7.597999999831018e-06, 7.763999999355065e-06, 1.0375000000450996e-05, 6.750000000721457e-06, 1.040300000099137e-05, 6.0409999989019525e-06, 8.319999999173433e-06, 7.305000000457085e-06, 9.778000000792986e-06, 6.83300000048348e-06, 8.51400000101421e-06, 1.0500000000135401e-05, 7.082999999852291e-06, 1.1805999999836558e-05, 7.3890000003018486e-06, 1.0916999999110999e-05, 8.583999999700609e-06, 8.000000001118224e-06, 5.681000001089842e-06, 9.638999999950215e-06, 1.154200000108574e-05, 9.611999999492582e-06, 9.667000000490589e-06, 8.70800000107863e-06, 9.013999999751832e-06, 1.0096999998765455e-05, 8.707999999302274e-06, 7.583000000366269e-06, 1.025000000076659e-05, 1.2416999998876577e-05, 6.1389999999050815e-06, 6.570000000039045e-06, 1.036099999929263e-05]</msg>
<status status="PASS" starttime="20201029 12:49:10.112" endtime="20201029 12:49:10.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.107" endtime="20201029 12:49:10.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.738" endtime="20201029 12:49:10.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:09.738" endtime="20201029 12:49:10.115"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.123" endtime="20201029 12:49:10.133"></status>
</kw>
<msg timestamp="20201029 12:49:10.134" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.121" endtime="20201029 12:49:10.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.135" endtime="20201029 12:49:10.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.137" endtime="20201029 12:49:10.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.118" endtime="20201029 12:49:10.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.117" endtime="20201029 12:49:10.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.146" endtime="20201029 12:49:10.460"></status>
</kw>
<msg timestamp="20201029 12:49:10.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.291984, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.291991764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:10.144" endtime="20201029 12:49:10.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.291984, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.291991764, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:10.465" endtime="20201029 12:49:10.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.475" endtime="20201029 12:49:10.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.142" endtime="20201029 12:49:10.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.140" endtime="20201029 12:49:10.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.482" level="INFO">${RESULT} = [{'diff': 7.764000001131421e-06}, {'diff': 9.02799999913384e-06}, {'diff': 7.473000000146612e-06}, {'diff': 6.209000000367837e-06}, {'diff': 1.0264000000148599e-05}, {'diff': 9.792000000174994e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:49:10.478" endtime="20201029 12:49:10.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:10.487" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.764000001131421e-06, 9.02799999913384e-06, 7.473000000146612e-06, 6.209000000367837e-06, 1.0264000000148599e-05, 9.792000000174994e-06, 7.597999999831018e-06, 7.763999999355065e-06, 1.0375...</msg>
<status status="PASS" starttime="20201029 12:49:10.483" endtime="20201029 12:49:10.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.492" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:10.490" endtime="20201029 12:49:10.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.494" level="INFO">VALUE: [7.764000001131421e-06, 9.02799999913384e-06, 7.473000000146612e-06, 6.209000000367837e-06, 1.0264000000148599e-05, 9.792000000174994e-06, 7.597999999831018e-06, 7.763999999355065e-06, 1.0375000000450996e-05, 6.750000000721457e-06, 1.040300000099137e-05, 6.0409999989019525e-06, 8.319999999173433e-06, 7.305000000457085e-06, 9.778000000792986e-06, 6.83300000048348e-06, 8.51400000101421e-06, 1.0500000000135401e-05, 7.082999999852291e-06, 1.1805999999836558e-05, 7.3890000003018486e-06, 1.0916999999110999e-05, 8.583999999700609e-06, 8.000000001118224e-06, 5.681000001089842e-06, 9.638999999950215e-06, 1.154200000108574e-05, 9.611999999492582e-06, 9.667000000490589e-06, 8.70800000107863e-06, 9.013999999751832e-06, 1.0096999998765455e-05, 8.707999999302274e-06, 7.583000000366269e-06, 1.025000000076659e-05, 1.2416999998876577e-05, 6.1389999999050815e-06, 6.570000000039045e-06, 1.036099999929263e-05, 7.249999999459078e-06, 7.264000000617443e-06, 7.874999999657462e-06, 1.0680999999124197e-05, 6.7359999995630915e-06, 8.639000000698616e-06, 1.0181000000386575e-05, 9.02799999913384e-06, 8.263999999869043e-06, 9.597000000027833e-06, 9.222000000974617e-06, 9.874999999937017e-06, 1.2263000000345414e-05, 1.159700000030739e-05, 6.77700000117909e-06, 1.0555999999439791e-05, 1.1193999998937443e-05, 8.791000000840654e-06, 8.430000001169446e-06, 8.847000000145044e-06, 1.0069000000001438e-05, 8.6799999987619e-06, 9.792000000174994e-06, 8.346999999631066e-06, 9.986000000239414e-06]</msg>
<status status="PASS" starttime="20201029 12:49:10.493" endtime="20201029 12:49:10.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.488" endtime="20201029 12:49:10.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.116" endtime="20201029 12:49:10.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.115" endtime="20201029 12:49:10.496"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.503" endtime="20201029 12:49:10.515"></status>
</kw>
<msg timestamp="20201029 12:49:10.515" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.502" endtime="20201029 12:49:10.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.518" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.516" endtime="20201029 12:49:10.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.519" endtime="20201029 12:49:10.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.499" endtime="20201029 12:49:10.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.498" endtime="20201029 12:49:10.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.529" endtime="20201029 12:49:10.843"></status>
</kw>
<msg timestamp="20201029 12:49:10.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.661247375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.661257014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.527" endtime="20201029 12:49:10.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.661247375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.661257014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.848" endtime="20201029 12:49:10.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.858" endtime="20201029 12:49:10.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.524" endtime="20201029 12:49:10.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.522" endtime="20201029 12:49:10.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.865" level="INFO">${RESULT} = [{'diff': 9.638999999950215e-06}, {'diff': 1.154200000108574e-05}, {'diff': 9.611999999492582e-06}, {'diff': 9.667000000490589e-06}, {'diff': 8.70800000107863e-06}, {'diff': 9.013999999751832e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:10.861" endtime="20201029 12:49:10.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:10.869" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.638999999950215e-06, 1.154200000108574e-05, 9.611999999492582e-06, 9.667000000490589e-06, 8.70800000107863e-06, 9.013999999751832e-06, 1.0096999998765455e-05, 8.707999999302274e-06, 7.5830...</msg>
<status status="PASS" starttime="20201029 12:49:10.866" endtime="20201029 12:49:10.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.874" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:10.873" endtime="20201029 12:49:10.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.877" level="INFO">VALUE: [9.638999999950215e-06, 1.154200000108574e-05, 9.611999999492582e-06, 9.667000000490589e-06, 8.70800000107863e-06, 9.013999999751832e-06, 1.0096999998765455e-05, 8.707999999302274e-06, 7.583000000366269e-06, 1.025000000076659e-05, 1.2416999998876577e-05, 6.1389999999050815e-06, 6.570000000039045e-06, 1.036099999929263e-05, 7.249999999459078e-06, 7.264000000617443e-06, 7.874999999657462e-06, 1.0680999999124197e-05, 6.7359999995630915e-06, 8.639000000698616e-06, 1.0181000000386575e-05, 9.02799999913384e-06, 8.263999999869043e-06, 9.597000000027833e-06, 9.222000000974617e-06, 9.874999999937017e-06, 1.2263000000345414e-05, 1.159700000030739e-05, 6.77700000117909e-06, 1.0555999999439791e-05, 1.1193999998937443e-05, 8.791000000840654e-06, 8.430000001169446e-06, 8.847000000145044e-06, 1.0069000000001438e-05, 8.6799999987619e-06, 9.792000000174994e-06, 8.346999999631066e-06, 9.986000000239414e-06, 8.77799999976503e-06, 8.833000000763036e-06, 1.0973000000191746e-05, 1.0987000001350111e-05, 6.88899999978787e-06, 9.013999999751832e-06, 1.1459000001323716e-05, 7.3329999992211015e-06, 8.43099999947583e-06, 7.2909999992987196e-06, 8.124999999026272e-06, 5.790999999533142e-06, 8.068999999721882e-06, 5.5549999995463395e-06, 1.0209000000926949e-05, 8.764000000383021e-06, 9.125000000054229e-06, 9.180000001052235e-06, 1.0028000000161796e-05, 1.130499999923984e-05, 7.819000000353071e-06, 7.749999999973056e-06, 7.846999999117088e-06, 7.597000001524634e-06, 7.444999999606239e-06]</msg>
<status status="PASS" starttime="20201029 12:49:10.876" endtime="20201029 12:49:10.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.870" endtime="20201029 12:49:10.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.496" endtime="20201029 12:49:10.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.496" endtime="20201029 12:49:10.879"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.886" endtime="20201029 12:49:10.898"></status>
</kw>
<msg timestamp="20201029 12:49:10.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.885" endtime="20201029 12:49:10.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.900" endtime="20201029 12:49:10.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.902" endtime="20201029 12:49:10.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.882" endtime="20201029 12:49:10.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.880" endtime="20201029 12:49:10.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.911" endtime="20201029 12:49:11.227"></status>
</kw>
<msg timestamp="20201029 12:49:11.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.027869292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.027879167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.910" endtime="20201029 12:49:11.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.027869292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.027879167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.232" endtime="20201029 12:49:11.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.242" endtime="20201029 12:49:11.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.907" endtime="20201029 12:49:11.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.905" endtime="20201029 12:49:11.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:11.249" level="INFO">${RESULT} = [{'diff': 9.874999999937017e-06}, {'diff': 1.2263000000345414e-05}, {'diff': 1.159700000030739e-05}, {'diff': 6.77700000117909e-06}, {'diff': 1.0555999999439791e-05}, {'diff': 1.1193999998937443e-05},...</msg>
<status status="PASS" starttime="20201029 12:49:11.245" endtime="20201029 12:49:11.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:11.254" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.874999999937017e-06, 1.2263000000345414e-05, 1.159700000030739e-05, 6.77700000117909e-06, 1.0555999999439791e-05, 1.1193999998937443e-05, 8.791000000840654e-06, 8.430000001169446e-06, 8.84...</msg>
<status status="PASS" starttime="20201029 12:49:11.250" endtime="20201029 12:49:11.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.259" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:11.258" endtime="20201029 12:49:11.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.261" level="INFO">VALUE: [9.874999999937017e-06, 1.2263000000345414e-05, 1.159700000030739e-05, 6.77700000117909e-06, 1.0555999999439791e-05, 1.1193999998937443e-05, 8.791000000840654e-06, 8.430000001169446e-06, 8.847000000145044e-06, 1.0069000000001438e-05, 8.6799999987619e-06, 9.792000000174994e-06, 8.346999999631066e-06, 9.986000000239414e-06, 8.77799999976503e-06, 8.833000000763036e-06, 1.0973000000191746e-05, 1.0987000001350111e-05, 6.88899999978787e-06, 9.013999999751832e-06, 1.1459000001323716e-05, 7.3329999992211015e-06, 8.43099999947583e-06, 7.2909999992987196e-06, 8.124999999026272e-06, 5.790999999533142e-06, 8.068999999721882e-06, 5.5549999995463395e-06, 1.0209000000926949e-05, 8.764000000383021e-06, 9.125000000054229e-06, 9.180000001052235e-06, 1.0028000000161796e-05, 1.130499999923984e-05, 7.819000000353071e-06, 7.749999999973056e-06, 7.846999999117088e-06, 7.597000001524634e-06, 7.444999999606239e-06, 6.4029999986559005e-06, 1.0445000000913751e-05, 1.1526999999844634e-05, 8.611000000158242e-06, 7.806000001053803e-06, 1.0487000000836133e-05, 5.999999999062311e-06, 7.612000000989383e-06, 8.806000000305403e-06, 8.597000000776234e-06, 9.472000000343428e-06, 1.0889000000346982e-05, 9.625000000568207e-06, 9.443999999803054e-06, 8.708999999385014e-06, 9.290999999578275e-06, 1.0749999999504212e-05, 6.389000001050249e-06, 1.0555000001133408e-05, 9.027000000827456e-06, 9.944000000317033e-06, 8.180000000024279e-06, 6.83300000048348e-06, 1.0527999998899418e-05, 7.042000000012649e-06]</msg>
<status status="PASS" starttime="20201029 12:49:11.260" endtime="20201029 12:49:11.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.255" endtime="20201029 12:49:11.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.879" endtime="20201029 12:49:11.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.879" endtime="20201029 12:49:11.263"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.271" endtime="20201029 12:49:11.280"></status>
</kw>
<msg timestamp="20201029 12:49:11.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.269" endtime="20201029 12:49:11.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.283" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.282" endtime="20201029 12:49:11.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.284" endtime="20201029 12:49:11.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.267" endtime="20201029 12:49:11.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.265" endtime="20201029 12:49:11.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.293" endtime="20201029 12:49:11.612"></status>
</kw>
<msg timestamp="20201029 12:49:11.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.398577056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.398582847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.292" endtime="20201029 12:49:11.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.398577056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.398582847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:11.617" endtime="20201029 12:49:11.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.627" endtime="20201029 12:49:11.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.289" endtime="20201029 12:49:11.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.287" endtime="20201029 12:49:11.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:11.634" level="INFO">${RESULT} = [{'diff': 5.790999999533142e-06}, {'diff': 8.068999999721882e-06}, {'diff': 5.5549999995463395e-06}, {'diff': 1.0209000000926949e-05}, {'diff': 8.764000000383021e-06}, {'diff': 9.125000000054229e-06},...</msg>
<status status="PASS" starttime="20201029 12:49:11.630" endtime="20201029 12:49:11.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:11.639" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.790999999533142e-06, 8.068999999721882e-06, 5.5549999995463395e-06, 1.0209000000926949e-05, 8.764000000383021e-06, 9.125000000054229e-06, 9.180000001052235e-06, 1.0028000000161796e-05, 1.1...</msg>
<status status="PASS" starttime="20201029 12:49:11.635" endtime="20201029 12:49:11.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.643" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:49:11.642" endtime="20201029 12:49:11.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:11.646" level="INFO">VALUE: [5.790999999533142e-06, 8.068999999721882e-06, 5.5549999995463395e-06, 1.0209000000926949e-05, 8.764000000383021e-06, 9.125000000054229e-06, 9.180000001052235e-06, 1.0028000000161796e-05, 1.130499999923984e-05, 7.819000000353071e-06, 7.749999999973056e-06, 7.846999999117088e-06, 7.597000001524634e-06, 7.444999999606239e-06, 6.4029999986559005e-06, 1.0445000000913751e-05, 1.1526999999844634e-05, 8.611000000158242e-06, 7.806000001053803e-06, 1.0487000000836133e-05, 5.999999999062311e-06, 7.612000000989383e-06, 8.806000000305403e-06, 8.597000000776234e-06, 9.472000000343428e-06, 1.0889000000346982e-05, 9.625000000568207e-06, 9.443999999803054e-06, 8.708999999385014e-06, 9.290999999578275e-06, 1.0749999999504212e-05, 6.389000001050249e-06, 1.0555000001133408e-05, 9.027000000827456e-06, 9.944000000317033e-06, 8.180000000024279e-06, 6.83300000048348e-06, 1.0527999998899418e-05, 7.042000000012649e-06, 7.457999998905507e-06, 1.0277999999530607e-05, 7.29199999938146e-06, 8.416000000011081e-06, 9.125000000054229e-06, 8.124999999026272e-06, 1.1625000000847763e-05, 1.0806000000584959e-05, 6.388999999273892e-06, 7.596999999748277e-06, 1.0749999999504212e-05, 1.1083000000411403e-05, 7.23600000007707e-06, 8.889000000067426e-06, 6.263999999589487e-06, 9.152999998818245e-06, 9.430000000421046e-06, 8.403000000711813e-06, 8.776999999682289e-06, 1.0834000001125332e-05, 7.88899999903947e-06, 1.1332999999780213e-05, 8.347000001407423e-06, 1.1625000000847763e-05, 8.194999999489028e-06]</msg>
<status status="PASS" starttime="20201029 12:49:11.644" endtime="20201029 12:49:11.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.640" endtime="20201029 12:49:11.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.264" endtime="20201029 12:49:11.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.263" endtime="20201029 12:49:11.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.014" endtime="20201029 12:49:11.647"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:49:00.913" endtime="20201029 12:49:11.648" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:11.655" endtime="20201029 12:49:11.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.653" endtime="20201029 12:49:11.675"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:11.689" endtime="20201029 12:49:14.710"></status>
</kw>
<msg timestamp="20201029 12:49:14.711" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:11.687" endtime="20201029 12:49:14.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.716" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.713" endtime="20201029 12:49:14.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.722" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:14.719" endtime="20201029 12:49:14.723"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:11.685" endtime="20201029 12:49:14.724"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:11.682" endtime="20201029 12:49:14.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.681" endtime="20201029 12:49:14.726"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:14.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:14.732" endtime="20201029 12:49:14.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.728" endtime="20201029 12:49:14.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.680" endtime="20201029 12:49:14.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.679" endtime="20201029 12:49:14.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.737" endtime="20201029 12:49:14.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.677" endtime="20201029 12:49:14.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.676" endtime="20201029 12:49:14.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:11.652" endtime="20201029 12:49:14.743"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.761" endtime="20201029 12:49:14.777"></status>
</kw>
<msg timestamp="20201029 12:49:14.778" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.758" endtime="20201029 12:49:14.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:14.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:14.780" endtime="20201029 12:49:14.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.785" endtime="20201029 12:49:14.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.752" endtime="20201029 12:49:14.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.749" endtime="20201029 12:49:14.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:14.805" endtime="20201029 12:49:15.103"></status>
</kw>
<msg timestamp="20201029 12:49:15.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097219306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097220264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:14.803" endtime="20201029 12:49:15.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097219306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097220264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.107" endtime="20201029 12:49:15.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.115" endtime="20201029 12:49:15.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.796" endtime="20201029 12:49:15.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.792" endtime="20201029 12:49:15.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.121" level="INFO">${RESULT} = [{'diff': 9.58000000217396e-07}, {'diff': 9.999999996956888e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.169999999336653e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:15.118" endtime="20201029 12:49:15.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:15.125" level="INFO">${OVERHEAD} = {'diff': [9.58000000217396e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.45000...</msg>
<status status="PASS" starttime="20201029 12:49:15.122" endtime="20201029 12:49:15.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.129" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:15.128" endtime="20201029 12:49:15.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.132" level="INFO">VALUE: [9.58000000217396e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.590000003001364e-07, 8.88999999837381e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.589999998560472e-07, 9.440000003912985e-07, 9.310000002038521e-07, 8.610000001851859e-07, 9.309999997597629e-07, 9.310000002038521e-07, 9.300000001211117e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.439999999472093e-07, 8.750000000112834e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.589999998560472e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.590000003001364e-07, 1.0139999999658755e-06, 9.029999996634785e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999999336653e-07, 9.440000003912985e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 12:49:15.130" endtime="20201029 12:49:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.126" endtime="20201029 12:49:15.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.746" endtime="20201029 12:49:15.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.745" endtime="20201029 12:49:15.134"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.143" endtime="20201029 12:49:15.156"></status>
</kw>
<msg timestamp="20201029 12:49:15.156" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.140" endtime="20201029 12:49:15.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.157" endtime="20201029 12:49:15.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.160" endtime="20201029 12:49:15.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.138" endtime="20201029 12:49:15.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.136" endtime="20201029 12:49:15.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.169" endtime="20201029 12:49:15.490"></status>
</kw>
<msg timestamp="20201029 12:49:15.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097412514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097413458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.167" endtime="20201029 12:49:15.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097412514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097413458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.495" endtime="20201029 12:49:15.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.505" endtime="20201029 12:49:15.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.164" endtime="20201029 12:49:15.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.163" endtime="20201029 12:49:15.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.517" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.999999996956888e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.590000003001364e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:15.509" endtime="20201029 12:49:15.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:15.529" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.299999996770225e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.590000003001364e-07, 1.0139999999658755e-06, 9.029999996634785e-07, 9.310...</msg>
<status status="PASS" starttime="20201029 12:49:15.519" endtime="20201029 12:49:15.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.538" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:15.535" endtime="20201029 12:49:15.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.543" level="INFO">VALUE: [9.439999999472093e-07, 9.299999996770225e-07, 9.999999996956888e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.590000003001364e-07, 1.0139999999658755e-06, 9.029999996634785e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999999336653e-07, 9.440000003912985e-07, 9.450000000299497e-07, 9.449999995858605e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.299999996770225e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.579999997733069e-07, 9.310000002038521e-07, 9.300000001211117e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000003912985e-07, 9.300000001211117e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.309999997597629e-07, 9.73000000126234e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.300000001211117e-07, 9.440000003912985e-07, 9.300000001211117e-07, 1.000000000139778e-06, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.859999998695912e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 12:49:15.540" endtime="20201029 12:49:15.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.531" endtime="20201029 12:49:15.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.135" endtime="20201029 12:49:15.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.134" endtime="20201029 12:49:15.547"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.564" endtime="20201029 12:49:15.580"></status>
</kw>
<msg timestamp="20201029 12:49:15.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.561" endtime="20201029 12:49:15.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.586" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.583" endtime="20201029 12:49:15.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.588" endtime="20201029 12:49:15.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.555" endtime="20201029 12:49:15.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.551" endtime="20201029 12:49:15.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.607" endtime="20201029 12:49:15.927"></status>
</kw>
<msg timestamp="20201029 12:49:15.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.4685635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.468564444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:15.604" endtime="20201029 12:49:15.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.4685635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.468564444, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:15.932" endtime="20201029 12:49:15.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.942" endtime="20201029 12:49:15.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.599" endtime="20201029 12:49:15.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.595" endtime="20201029 12:49:15.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:15.949" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.310000002038521e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:15.945" endtime="20201029 12:49:15.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:15.956" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.859999998695912e-07, 9.3099...</msg>
<status status="PASS" starttime="20201029 12:49:15.950" endtime="20201029 12:49:15.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.960" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:15.959" endtime="20201029 12:49:15.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.963" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.859999998695912e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.15999999850925e-07, 9.300000001211117e-07, 9.579999997733069e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000002038521e-07, 9.439999999472093e-07, 9.300000001211117e-07, 9.310000002038521e-07, 9.579999997733069e-07, 9.300000001211117e-07, 8.890000002814702e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.169999999336653e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.449999995858605e-07, 9.300000001211117e-07, 9.310000002038521e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.169999999336653e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999997733069e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.310000002038521e-07]</msg>
<status status="PASS" starttime="20201029 12:49:15.961" endtime="20201029 12:49:15.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.957" endtime="20201029 12:49:15.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.549" endtime="20201029 12:49:15.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.548" endtime="20201029 12:49:15.965"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.973" endtime="20201029 12:49:15.986"></status>
</kw>
<msg timestamp="20201029 12:49:15.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.971" endtime="20201029 12:49:15.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:15.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:15.987" endtime="20201029 12:49:15.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.990" endtime="20201029 12:49:15.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.969" endtime="20201029 12:49:15.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.967" endtime="20201029 12:49:15.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:15.999" endtime="20201029 12:49:16.315"></status>
</kw>
<msg timestamp="20201029 12:49:16.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.880663014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.880663944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:15.997" endtime="20201029 12:49:16.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.880663014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.880663944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.320" endtime="20201029 12:49:16.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.330" endtime="20201029 12:49:16.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.995" endtime="20201029 12:49:16.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.993" endtime="20201029 12:49:16.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:16.337" level="INFO">${RESULT} = [{'diff': 9.300000001211117e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.309999997597629e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:16.333" endtime="20201029 12:49:16.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:16.341" level="INFO">${OVERHEAD} = {'diff': [9.300000001211117e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.5799...</msg>
<status status="PASS" starttime="20201029 12:49:16.338" endtime="20201029 12:49:16.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.345" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:16.344" endtime="20201029 12:49:16.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.348" level="INFO">VALUE: [9.300000001211117e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999997733069e-07, 9.300000001211117e-07, 9.300000001211117e-07, 9.439999999472093e-07, 9.310000002038521e-07, 9.310000002038521e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.169999994895761e-07, 9.590000003001364e-07]</msg>
<status status="PASS" starttime="20201029 12:49:16.347" endtime="20201029 12:49:16.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.342" endtime="20201029 12:49:16.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.966" endtime="20201029 12:49:16.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:15.965" endtime="20201029 12:49:16.350"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.359" endtime="20201029 12:49:16.371"></status>
</kw>
<msg timestamp="20201029 12:49:16.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.357" endtime="20201029 12:49:16.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.372" endtime="20201029 12:49:16.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.375" endtime="20201029 12:49:16.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.354" endtime="20201029 12:49:16.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.352" endtime="20201029 12:49:16.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.384" endtime="20201029 12:49:16.705"></status>
</kw>
<msg timestamp="20201029 12:49:16.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.277035181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.277036125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.382" endtime="20201029 12:49:16.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.277035181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.277036125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.710" endtime="20201029 12:49:16.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.720" endtime="20201029 12:49:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.380" endtime="20201029 12:49:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.378" endtime="20201029 12:49:16.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:16.727" level="INFO">${RESULT} = [{'diff': 9.440000008353877e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:16.723" endtime="20201029 12:49:16.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:16.732" level="INFO">${OVERHEAD} = {'diff': [9.440000008353877e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.43999...</msg>
<status status="PASS" starttime="20201029 12:49:16.728" endtime="20201029 12:49:16.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.737" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:16.735" endtime="20201029 12:49:16.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.739" level="INFO">VALUE: [9.440000008353877e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.859999998695912e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.169999994895761e-07, 9.590000003001364e-07, 9.300000005652009e-07, 8.88000000642819e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.58999999411958e-07, 9.169999994895761e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 1.000000000139778e-06, 9.029999992193893e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 12:49:16.738" endtime="20201029 12:49:16.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.733" endtime="20201029 12:49:16.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.351" endtime="20201029 12:49:16.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.350" endtime="20201029 12:49:16.746"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.754" endtime="20201029 12:49:16.766"></status>
</kw>
<msg timestamp="20201029 12:49:16.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.752" endtime="20201029 12:49:16.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:16.769" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:16.767" endtime="20201029 12:49:16.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.770" endtime="20201029 12:49:16.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.749" endtime="20201029 12:49:16.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.748" endtime="20201029 12:49:16.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:16.779" endtime="20201029 12:49:17.105"></status>
</kw>
<msg timestamp="20201029 12:49:17.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.652069653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.652070583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:16.777" endtime="20201029 12:49:17.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.652069653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.652070583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.109" endtime="20201029 12:49:17.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.119" endtime="20201029 12:49:17.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.775" endtime="20201029 12:49:17.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.773" endtime="20201029 12:49:17.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:17.126" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.310000006479413e-07}, {'diff': 1.000000000139778e-06}, {'diff': 9.029999992193893e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:17.123" endtime="20201029 12:49:17.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:17.132" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 1.000000000139778e-06, 9.029999992193893e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.3099...</msg>
<status status="PASS" starttime="20201029 12:49:17.127" endtime="20201029 12:49:17.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.136" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:17.135" endtime="20201029 12:49:17.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.139" level="INFO">VALUE: [9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 1.000000000139778e-06, 9.029999992193893e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.590000003001364e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.169999994895761e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.890000007255594e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 8.88000000642819e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.720000004875828e-07, 9.579999993292176e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 12:49:17.137" endtime="20201029 12:49:17.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.133" endtime="20201029 12:49:17.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.746" endtime="20201029 12:49:17.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:16.746" endtime="20201029 12:49:17.141"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.149" endtime="20201029 12:49:17.162"></status>
</kw>
<msg timestamp="20201029 12:49:17.162" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.147" endtime="20201029 12:49:17.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.163" endtime="20201029 12:49:17.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.166" endtime="20201029 12:49:17.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.145" endtime="20201029 12:49:17.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.143" endtime="20201029 12:49:17.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.176" endtime="20201029 12:49:17.492"></status>
</kw>
<msg timestamp="20201029 12:49:17.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.036852264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.036853208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.173" endtime="20201029 12:49:17.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.036852264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.036853208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:17.496" endtime="20201029 12:49:17.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.506" endtime="20201029 12:49:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.171" endtime="20201029 12:49:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.169" endtime="20201029 12:49:17.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:17.513" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.720000004875828e-07}, {'diff': 9.579999993292176e-07}, {'diff': 9.300000005652009e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.299999996770225e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:17.510" endtime="20201029 12:49:17.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:17.518" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.720000004875828e-07, 9.579999993292176e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.3100...</msg>
<status status="PASS" starttime="20201029 12:49:17.514" endtime="20201029 12:49:17.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:17.521" endtime="20201029 12:49:17.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.525" level="INFO">VALUE: [9.439999999472093e-07, 9.720000004875828e-07, 9.579999993292176e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.309999997597629e-07, 8.750000004553726e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 8.749999995671942e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.879999997546406e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.58000000217396e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.169999994895761e-07]</msg>
<status status="PASS" starttime="20201029 12:49:17.523" endtime="20201029 12:49:17.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.519" endtime="20201029 12:49:17.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.142" endtime="20201029 12:49:17.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.141" endtime="20201029 12:49:17.527"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.536" endtime="20201029 12:49:17.547"></status>
</kw>
<msg timestamp="20201029 12:49:17.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.534" endtime="20201029 12:49:17.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.550" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.548" endtime="20201029 12:49:17.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.551" endtime="20201029 12:49:17.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.531" endtime="20201029 12:49:17.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.529" endtime="20201029 12:49:17.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.560" endtime="20201029 12:49:17.881"></status>
</kw>
<msg timestamp="20201029 12:49:17.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.421881069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.421882, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:17.558" endtime="20201029 12:49:17.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.421881069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.421882, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:49:17.886" endtime="20201029 12:49:17.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.896" endtime="20201029 12:49:17.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.556" endtime="20201029 12:49:17.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.554" endtime="20201029 12:49:17.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:17.903" level="INFO">${RESULT} = [{'diff': 9.309999997597629e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:17.899" endtime="20201029 12:49:17.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:17.908" level="INFO">${OVERHEAD} = {'diff': [9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.879999997546406e-07, 9.450000000299497e-07, 9.5800...</msg>
<status status="PASS" starttime="20201029 12:49:17.904" endtime="20201029 12:49:17.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.913" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:17.912" endtime="20201029 12:49:17.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.915" level="INFO">VALUE: [9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.879999997546406e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.58000000217396e-07, 9.58000000217396e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.58000000217396e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.169999994895761e-07, 9.590000003001364e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.58000000217396e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.030000001075678e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.58000000217396e-07, 9.590000003001364e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 12:49:17.914" endtime="20201029 12:49:17.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.909" endtime="20201029 12:49:17.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.528" endtime="20201029 12:49:17.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.527" endtime="20201029 12:49:17.917"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.925" endtime="20201029 12:49:17.936"></status>
</kw>
<msg timestamp="20201029 12:49:17.937" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.924" endtime="20201029 12:49:17.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:17.939" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:17.938" endtime="20201029 12:49:17.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.940" endtime="20201029 12:49:17.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.921" endtime="20201029 12:49:17.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.919" endtime="20201029 12:49:17.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:17.950" endtime="20201029 12:49:18.274"></status>
</kw>
<msg timestamp="20201029 12:49:18.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.79881775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.798818694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:17.948" endtime="20201029 12:49:18.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.79881775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.798818694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:18.279" endtime="20201029 12:49:18.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.289" endtime="20201029 12:49:18.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.945" endtime="20201029 12:49:18.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.944" endtime="20201029 12:49:18.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:18.297" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.58000000217396e-07}, {'diff': 9.590000003001364e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:18.293" endtime="20201029 12:49:18.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:18.302" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.58000000217396e-07, 9.590000003001364e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.45000...</msg>
<status status="PASS" starttime="20201029 12:49:18.298" endtime="20201029 12:49:18.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.306" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:18.305" endtime="20201029 12:49:18.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.309" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.299999996770225e-07, 9.58000000217396e-07, 9.590000003001364e-07, 9.170000003777545e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.160000002950142e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.58999999411958e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.439999999472093e-07, 1.0140000004099647e-06, 9.590000003001364e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.300000005652009e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.58000000217396e-07]</msg>
<status status="PASS" starttime="20201029 12:49:18.307" endtime="20201029 12:49:18.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.303" endtime="20201029 12:49:18.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.918" endtime="20201029 12:49:18.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:17.917" endtime="20201029 12:49:18.310"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.318" endtime="20201029 12:49:18.331"></status>
</kw>
<msg timestamp="20201029 12:49:18.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.317" endtime="20201029 12:49:18.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.334" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.332" endtime="20201029 12:49:18.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.335" endtime="20201029 12:49:18.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.314" endtime="20201029 12:49:18.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.313" endtime="20201029 12:49:18.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.345" endtime="20201029 12:49:18.654"></status>
</kw>
<msg timestamp="20201029 12:49:18.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.177591556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.1775925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:18.343" endtime="20201029 12:49:18.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.177591556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.1775925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:18.659" endtime="20201029 12:49:18.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.669" endtime="20201029 12:49:18.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.340" endtime="20201029 12:49:18.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.338" endtime="20201029 12:49:18.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:18.676" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.299999996770225e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:18.673" endtime="20201029 12:49:18.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:18.681" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 12:49:18.677" endtime="20201029 12:49:18.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:18.684" endtime="20201029 12:49:18.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.688" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.299999996770225e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.300000005652009e-07, 8.88999999837381e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.169999994895761e-07, 1.000000000139778e-06, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.450000000299497e-07, 8.750000004553726e-07, 9.450000000299497e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 12:49:18.687" endtime="20201029 12:49:18.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.682" endtime="20201029 12:49:18.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.311" endtime="20201029 12:49:18.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.311" endtime="20201029 12:49:18.690"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.698" endtime="20201029 12:49:18.711"></status>
</kw>
<msg timestamp="20201029 12:49:18.711" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.697" endtime="20201029 12:49:18.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:18.714" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:18.712" endtime="20201029 12:49:18.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.715" endtime="20201029 12:49:18.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.694" endtime="20201029 12:49:18.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.692" endtime="20201029 12:49:18.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:18.724" endtime="20201029 12:49:19.034"></status>
</kw>
<msg timestamp="20201029 12:49:19.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.560012042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.560012986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:18.722" endtime="20201029 12:49:19.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.560012042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.560012986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.039" endtime="20201029 12:49:19.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.049" endtime="20201029 12:49:19.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.719" endtime="20201029 12:49:19.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.718" endtime="20201029 12:49:19.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.056" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:19.052" endtime="20201029 12:49:19.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:19.062" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.3100...</msg>
<status status="PASS" starttime="20201029 12:49:19.057" endtime="20201029 12:49:19.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.066" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:19.065" endtime="20201029 12:49:19.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.068" level="INFO">VALUE: [9.439999999472093e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.450000000299497e-07, 8.750000004553726e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.860000007577696e-07, 8.88999999837381e-07, 9.439999999472093e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.309999997597629e-07, 1.0140000004099647e-06, 9.579999993292176e-07, 9.449999991417712e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.030000001075678e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.309999997597629e-07]</msg>
<status status="PASS" starttime="20201029 12:49:19.067" endtime="20201029 12:49:19.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.062" endtime="20201029 12:49:19.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.691" endtime="20201029 12:49:19.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:18.691" endtime="20201029 12:49:19.070"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.078" endtime="20201029 12:49:19.091"></status>
</kw>
<msg timestamp="20201029 12:49:19.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.077" endtime="20201029 12:49:19.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.093" endtime="20201029 12:49:19.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.095" endtime="20201029 12:49:19.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.074" endtime="20201029 12:49:19.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.073" endtime="20201029 12:49:19.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.105" endtime="20201029 12:49:19.421"></status>
</kw>
<msg timestamp="20201029 12:49:19.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.928781097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.928782042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.103" endtime="20201029 12:49:19.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.928781097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.928782042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:19.429" endtime="20201029 12:49:19.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.441" endtime="20201029 12:49:19.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.100" endtime="20201029 12:49:19.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.098" endtime="20201029 12:49:19.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.448" level="INFO">${RESULT} = [{'diff': 9.450000000299497e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.440000008353877e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.299999996770225e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:19.444" endtime="20201029 12:49:19.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:19.453" level="INFO">${OVERHEAD} = {'diff': [9.450000000299497e-07, 9.309999997597629e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 12:49:19.449" endtime="20201029 12:49:19.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.457" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:19.456" endtime="20201029 12:49:19.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.460" level="INFO">VALUE: [9.450000000299497e-07, 9.309999997597629e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58000000217396e-07, 9.439999999472093e-07, 9.170000003777545e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.999999992515995e-07, 9.300000005652009e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.729999996821448e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.309999997597629e-07, 9.300000005652009e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.309999997597629e-07, 9.030000001075678e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.720000004875828e-07, 9.590000003001364e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.590000003001364e-07, 9.160000002950142e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.729999996821448e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.020000000248274e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.449999991417712e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 12:49:19.458" endtime="20201029 12:49:19.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.454" endtime="20201029 12:49:19.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.071" endtime="20201029 12:49:19.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.071" endtime="20201029 12:49:19.462"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.470" endtime="20201029 12:49:19.482"></status>
</kw>
<msg timestamp="20201029 12:49:19.482" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.468" endtime="20201029 12:49:19.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.485" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.483" endtime="20201029 12:49:19.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.486" endtime="20201029 12:49:19.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.465" endtime="20201029 12:49:19.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.464" endtime="20201029 12:49:19.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.495" endtime="20201029 12:49:19.815"></status>
</kw>
<msg timestamp="20201029 12:49:19.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.29980675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.299807694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:19.493" endtime="20201029 12:49:19.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.29980675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.299807694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:19.819" endtime="20201029 12:49:19.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.829" endtime="20201029 12:49:19.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.491" endtime="20201029 12:49:19.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.489" endtime="20201029 12:49:19.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:19.836" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.309999997597629e-07}, {'diff': 9.729999996821448e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:19.833" endtime="20201029 12:49:19.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:19.842" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.729999996821448e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.0200...</msg>
<status status="PASS" starttime="20201029 12:49:19.837" endtime="20201029 12:49:19.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.846" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:19.845" endtime="20201029 12:49:19.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.848" level="INFO">VALUE: [9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.309999997597629e-07, 9.729999996821448e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.020000000248274e-07, 9.170000003777545e-07, 9.299999996770225e-07, 9.590000003001364e-07, 9.449999991417712e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.440000008353877e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.309999997597629e-07, 9.299999996770225e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.160000002950142e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 8.88999999837381e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.170000003777545e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 1.000000000139778e-06, 9.859999998695912e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.299999996770225e-07, 9.309999997597629e-07, 9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.720000004875828e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.300000005652009e-07]</msg>
<status status="PASS" starttime="20201029 12:49:19.847" endtime="20201029 12:49:19.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.842" endtime="20201029 12:49:19.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.462" endtime="20201029 12:49:19.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.462" endtime="20201029 12:49:19.850"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.858" endtime="20201029 12:49:19.870"></status>
</kw>
<msg timestamp="20201029 12:49:19.871" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.857" endtime="20201029 12:49:19.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:19.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:19.872" endtime="20201029 12:49:19.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.874" endtime="20201029 12:49:19.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.854" endtime="20201029 12:49:19.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.852" endtime="20201029 12:49:19.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:19.884" endtime="20201029 12:49:20.207"></status>
</kw>
<msg timestamp="20201029 12:49:20.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.679139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.67914025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:19.882" endtime="20201029 12:49:20.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.679139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.67914025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:20.212" endtime="20201029 12:49:20.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.222" endtime="20201029 12:49:20.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.879" endtime="20201029 12:49:20.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.878" endtime="20201029 12:49:20.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.229" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.299999996770225e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:20.225" endtime="20201029 12:49:20.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:20.234" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 12:49:20.230" endtime="20201029 12:49:20.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.239" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:20.238" endtime="20201029 12:49:20.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.241" level="INFO">VALUE: [9.439999999472093e-07, 9.299999996770225e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999997597629e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.58000000217396e-07, 9.720000004875828e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.590000011883149e-07, 9.58999999411958e-07, 9.450000000299497e-07, 9.580000011055745e-07, 9.439999999472093e-07, 9.309999988715845e-07, 8.749999995671942e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.580000011055745e-07, 9.169999994895761e-07, 8.890000007255594e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.859999998695912e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07]</msg>
<status status="PASS" starttime="20201029 12:49:20.240" endtime="20201029 12:49:20.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.235" endtime="20201029 12:49:20.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.851" endtime="20201029 12:49:20.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:19.851" endtime="20201029 12:49:20.243"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.251" endtime="20201029 12:49:20.263"></status>
</kw>
<msg timestamp="20201029 12:49:20.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.249" endtime="20201029 12:49:20.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.265" endtime="20201029 12:49:20.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.267" endtime="20201029 12:49:20.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.247" endtime="20201029 12:49:20.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.245" endtime="20201029 12:49:20.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.277" endtime="20201029 12:49:20.588"></status>
</kw>
<msg timestamp="20201029 12:49:20.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.056184389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.056185319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.275" endtime="20201029 12:49:20.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.056184389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.056185319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:20.593" endtime="20201029 12:49:20.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.603" endtime="20201029 12:49:20.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.272" endtime="20201029 12:49:20.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.270" endtime="20201029 12:49:20.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.610" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.859999998695912e-07}, {'diff': 9.58999999411958e-07}, {'...</msg>
<status status="PASS" starttime="20201029 12:49:20.607" endtime="20201029 12:49:20.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:20.615" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.859999998695912e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.16999...</msg>
<status status="PASS" starttime="20201029 12:49:20.611" endtime="20201029 12:49:20.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.619" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:20.618" endtime="20201029 12:49:20.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.622" level="INFO">VALUE: [9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.859999998695912e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.579999993292176e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.309999988715845e-07, 9.450000000299497e-07, 8.60999998408829e-07, 9.999999992515995e-07, 9.299999987888441e-07, 9.17000001265933e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.580000011055745e-07, 9.450000000299497e-07, 9.17000001265933e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.299999987888441e-07, 9.299999987888441e-07, 9.590000011883149e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.159999994068357e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.859999998695912e-07, 9.580000011055745e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.310000006479413e-07]</msg>
<status status="PASS" starttime="20201029 12:49:20.620" endtime="20201029 12:49:20.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.616" endtime="20201029 12:49:20.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.244" endtime="20201029 12:49:20.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.244" endtime="20201029 12:49:20.623"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.632" endtime="20201029 12:49:20.644"></status>
</kw>
<msg timestamp="20201029 12:49:20.644" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.631" endtime="20201029 12:49:20.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.647" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:20.645" endtime="20201029 12:49:20.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.648" endtime="20201029 12:49:20.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.627" endtime="20201029 12:49:20.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.626" endtime="20201029 12:49:20.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.657" endtime="20201029 12:49:20.969"></status>
</kw>
<msg timestamp="20201029 12:49:20.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.439617569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.4396185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:20.655" endtime="20201029 12:49:20.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:20.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.439617569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.4396185, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:49:20.974" endtime="20201029 12:49:20.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:20.986" endtime="20201029 12:49:20.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.653" endtime="20201029 12:49:20.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.651" endtime="20201029 12:49:20.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:20.999" level="INFO">${RESULT} = [{'diff': 9.310000006479413e-07}, {'diff': 9.310000006479413e-07}, {'diff': 9.159999994068357e-07}, {'diff': 9.169999994895761e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.030000001075678e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:20.993" endtime="20201029 12:49:21.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:21.008" level="INFO">${OVERHEAD} = {'diff': [9.310000006479413e-07, 9.310000006479413e-07, 9.159999994068357e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.859999998695912e-07, 9.580000011055745e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 12:49:21.001" endtime="20201029 12:49:21.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.013" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:21.012" endtime="20201029 12:49:21.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.015" level="INFO">VALUE: [9.310000006479413e-07, 9.310000006479413e-07, 9.159999994068357e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.859999998695912e-07, 9.580000011055745e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.169999994895761e-07, 1.027999999791973e-06, 9.300000005652009e-07, 9.310000006479413e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.58999999411958e-07, 9.869999999523316e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 8.889999989492026e-07, 9.450000000299497e-07, 1.0129999985508675e-06, 9.450000000299497e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.17000001265933e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 1.013999998633608e-06, 9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.999999992515995e-07, 9.439999999472093e-07]</msg>
<status status="PASS" starttime="20201029 12:49:21.014" endtime="20201029 12:49:21.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.009" endtime="20201029 12:49:21.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.624" endtime="20201029 12:49:21.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:20.624" endtime="20201029 12:49:21.017"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.025" endtime="20201029 12:49:21.037"></status>
</kw>
<msg timestamp="20201029 12:49:21.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.024" endtime="20201029 12:49:21.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.040" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.038" endtime="20201029 12:49:21.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.041" endtime="20201029 12:49:21.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.021" endtime="20201029 12:49:21.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.019" endtime="20201029 12:49:21.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.050" endtime="20201029 12:49:21.365"></status>
</kw>
<msg timestamp="20201029 12:49:21.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.809474917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.809475847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.048" endtime="20201029 12:49:21.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.809474917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.809475847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.369" endtime="20201029 12:49:21.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.379" endtime="20201029 12:49:21.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.046" endtime="20201029 12:49:21.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.044" endtime="20201029 12:49:21.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:21.386" level="INFO">${RESULT} = [{'diff': 9.300000005652009e-07}, {'diff': 9.299999987888441e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.169999994895761e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:21.383" endtime="20201029 12:49:21.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:21.392" level="INFO">${OVERHEAD} = {'diff': [9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.440000017235661e-07, 9.4399...</msg>
<status status="PASS" starttime="20201029 12:49:21.387" endtime="20201029 12:49:21.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.396" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:21.395" endtime="20201029 12:49:21.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.399" level="INFO">VALUE: [9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.999999992515995e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.300000005652009e-07, 9.58999999411958e-07, 9.309999988715845e-07, 9.169999994895761e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.579999993292176e-07, 9.310000006479413e-07, 9.17000001265933e-07, 9.159999994068357e-07, 9.859999998695912e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.580000011055745e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.309999988715845e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.580000011055745e-07, 9.300000005652009e-07, 9.169999994895761e-07, 9.309999988715845e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.17000001265933e-07]</msg>
<status status="PASS" starttime="20201029 12:49:21.397" endtime="20201029 12:49:21.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.393" endtime="20201029 12:49:21.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.018" endtime="20201029 12:49:21.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.017" endtime="20201029 12:49:21.401"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.409" endtime="20201029 12:49:21.421"></status>
</kw>
<msg timestamp="20201029 12:49:21.422" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.407" endtime="20201029 12:49:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.423" endtime="20201029 12:49:21.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.425" endtime="20201029 12:49:21.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.404" endtime="20201029 12:49:21.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.403" endtime="20201029 12:49:21.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.436" endtime="20201029 12:49:21.740"></status>
</kw>
<msg timestamp="20201029 12:49:21.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.191562806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.19156375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:21.434" endtime="20201029 12:49:21.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.191562806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.19156375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:49:21.745" endtime="20201029 12:49:21.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.755" endtime="20201029 12:49:21.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.430" endtime="20201029 12:49:21.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.429" endtime="20201029 12:49:21.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:21.762" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.299999987888441e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.450000000299497e-07}, {'diff': 9.579999993292176e-07}, {'diff': 9.310000006479413e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:21.758" endtime="20201029 12:49:21.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:21.767" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.580000011055745e-07, 9.3000...</msg>
<status status="PASS" starttime="20201029 12:49:21.763" endtime="20201029 12:49:21.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.771" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:21.770" endtime="20201029 12:49:21.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.774" level="INFO">VALUE: [9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.580000011055745e-07, 9.300000005652009e-07, 9.169999994895761e-07, 9.309999988715845e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.17000001265933e-07, 8.749999995671942e-07, 9.580000011055745e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 1.0140000004099647e-06, 9.71999998711226e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.300000005652009e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.58999999411958e-07, 9.310000006479413e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.720000004875828e-07, 9.309999988715845e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.160000011831926e-07, 9.450000000299497e-07, 9.449999982535928e-07, 9.030000001075678e-07, 9.58999999411958e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.580000011055745e-07, 9.030000001075678e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.300000005652009e-07, 9.17000001265933e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.159999994068357e-07, 9.590000011883149e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000011831926e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999988715845e-07]</msg>
<status status="PASS" starttime="20201029 12:49:21.772" endtime="20201029 12:49:21.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.767" endtime="20201029 12:49:21.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.402" endtime="20201029 12:49:21.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.401" endtime="20201029 12:49:21.780"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.788" endtime="20201029 12:49:21.799"></status>
</kw>
<msg timestamp="20201029 12:49:21.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.786" endtime="20201029 12:49:21.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:21.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:21.801" endtime="20201029 12:49:21.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.804" endtime="20201029 12:49:21.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.784" endtime="20201029 12:49:21.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.782" endtime="20201029 12:49:21.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:21.813" endtime="20201029 12:49:22.129"></status>
</kw>
<msg timestamp="20201029 12:49:22.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.564851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.564852903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:21.811" endtime="20201029 12:49:22.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.564851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.564852903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.134" endtime="20201029 12:49:22.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.144" endtime="20201029 12:49:22.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.808" endtime="20201029 12:49:22.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.807" endtime="20201029 12:49:22.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:22.150" level="INFO">${RESULT} = [{'diff': 9.310000006479413e-07}, {'diff': 9.159999994068357e-07}, {'diff': 9.590000011883149e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.300000005652009e-07}, {'diff': 9.439999999472093e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:22.147" endtime="20201029 12:49:22.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:22.156" level="INFO">${OVERHEAD} = {'diff': [9.310000006479413e-07, 9.159999994068357e-07, 9.590000011883149e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.4500...</msg>
<status status="PASS" starttime="20201029 12:49:22.151" endtime="20201029 12:49:22.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.160" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:22.159" endtime="20201029 12:49:22.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.163" level="INFO">VALUE: [9.310000006479413e-07, 9.159999994068357e-07, 9.590000011883149e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.160000011831926e-07, 9.310000006479413e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.309999988715845e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.729999987939664e-07, 9.439999999472093e-07, 9.030000001075678e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.579999993292176e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.169999994895761e-07, 9.439999999472093e-07, 9.17000001265933e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.440000017235661e-07, 9.020000000248274e-07, 9.450000000299497e-07, 9.159999994068357e-07, 9.17000001265933e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.440000017235661e-07, 9.440000017235661e-07, 9.439999999472093e-07, 9.159999994068357e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07]</msg>
<status status="PASS" starttime="20201029 12:49:22.161" endtime="20201029 12:49:22.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.157" endtime="20201029 12:49:22.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.781" endtime="20201029 12:49:22.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:21.780" endtime="20201029 12:49:22.165"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.172" endtime="20201029 12:49:22.185"></status>
</kw>
<msg timestamp="20201029 12:49:22.185" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.171" endtime="20201029 12:49:22.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.188" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.186" endtime="20201029 12:49:22.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.189" endtime="20201029 12:49:22.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.168" endtime="20201029 12:49:22.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.167" endtime="20201029 12:49:22.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.198" endtime="20201029 12:49:22.508"></status>
</kw>
<msg timestamp="20201029 12:49:22.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.935036681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.935037625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.196" endtime="20201029 12:49:22.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.935036681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.935037625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:22.513" endtime="20201029 12:49:22.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.523" endtime="20201029 12:49:22.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.194" endtime="20201029 12:49:22.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.192" endtime="20201029 12:49:22.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:22.530" level="INFO">${RESULT} = [{'diff': 9.439999999472093e-07}, {'diff': 9.300000005652009e-07}, {'diff': 9.299999987888441e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.439999999472093e-07}, {'diff': 9.309999988715845e-07}, {...</msg>
<status status="PASS" starttime="20201029 12:49:22.526" endtime="20201029 12:49:22.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:22.535" level="INFO">${OVERHEAD} = {'diff': [9.439999999472093e-07, 9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.3100...</msg>
<status status="PASS" starttime="20201029 12:49:22.531" endtime="20201029 12:49:22.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.539" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:49:22.538" endtime="20201029 12:49:22.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:22.542" level="INFO">VALUE: [9.439999999472093e-07, 9.300000005652009e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.309999988715845e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.300000005652009e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.580000011055745e-07, 9.71999998711226e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.579999993292176e-07, 9.169999994895761e-07, 9.159999994068357e-07, 9.450000000299497e-07, 9.299999987888441e-07, 9.299999987888441e-07, 9.439999999472093e-07, 9.299999987888441e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.590000011883149e-07, 9.450000000299497e-07, 9.310000006479413e-07, 9.169999994895761e-07, 9.310000006479413e-07, 9.030000001075678e-07, 9.439999999472093e-07, 9.169999994895761e-07, 9.300000005652009e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.450000000299497e-07, 9.030000001075678e-07, 9.299999987888441e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.439999999472093e-07, 9.310000006479413e-07, 9.439999999472093e-07, 9.300000005652009e-07]</msg>
<status status="PASS" starttime="20201029 12:49:22.540" endtime="20201029 12:49:22.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.536" endtime="20201029 12:49:22.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.165" endtime="20201029 12:49:22.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.165" endtime="20201029 12:49:22.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:14.744" endtime="20201029 12:49:22.544"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:49:11.649" endtime="20201029 12:49:22.544" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:22.551" endtime="20201029 12:49:22.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.550" endtime="20201029 12:49:22.571"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:22.587" endtime="20201029 12:49:25.609"></status>
</kw>
<msg timestamp="20201029 12:49:25.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:22.586" endtime="20201029 12:49:25.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.613" endtime="20201029 12:49:25.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.626" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:25.621" endtime="20201029 12:49:25.627"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:22.583" endtime="20201029 12:49:25.629"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:22.581" endtime="20201029 12:49:25.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.579" endtime="20201029 12:49:25.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:25.643" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:25.641" endtime="20201029 12:49:25.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.634" endtime="20201029 12:49:25.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.578" endtime="20201029 12:49:25.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.578" endtime="20201029 12:49:25.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.648" endtime="20201029 12:49:25.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.574" endtime="20201029 12:49:25.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.572" endtime="20201029 12:49:25.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:22.548" endtime="20201029 12:49:25.657"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.675" endtime="20201029 12:49:25.699"></status>
</kw>
<msg timestamp="20201029 12:49:25.700" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.672" endtime="20201029 12:49:25.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.705" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:25.702" endtime="20201029 12:49:25.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.707" endtime="20201029 12:49:25.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.666" endtime="20201029 12:49:25.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.662" endtime="20201029 12:49:25.713"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.718" endtime="20201029 12:49:25.721"></status>
</kw>
<msg timestamp="20201029 12:49:25.722" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:49:25.715" endtime="20201029 12:49:25.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.731" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:49:25.729" endtime="20201029 12:49:25.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.738" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:49:25.733" endtime="20201029 12:49:25.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.724" endtime="20201029 12:49:25.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.743" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:49:25.742" endtime="20201029 12:49:25.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:25.745" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:49:25.744" endtime="20201029 12:49:25.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.739" endtime="20201029 12:49:25.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:25.752" endtime="20201029 12:49:26.044"></status>
</kw>
<msg timestamp="20201029 12:49:26.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115668958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115673042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:25.750" endtime="20201029 12:49:26.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.115668958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.115673042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:26.049" endtime="20201029 12:49:26.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.057" endtime="20201029 12:49:26.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.748" endtime="20201029 12:49:26.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.746" endtime="20201029 12:49:26.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:26.064" level="INFO">${RESULT} = [{'diff': 4.0839999999597865e-06}, {'diff': 4.987000000067354e-06}, {'diff': 4.985999999984614e-06}, {'diff': 4.985999999984614e-06}, {'diff': 4.987000000067354e-06}, {'diff': 4.985999999984614e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:49:26.060" endtime="20201029 12:49:26.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:49:26.068" level="INFO">${OVERHEAD} = {'diff': [4.0839999999597865e-06, 4.987000000067354e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.987000000067354e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.9579999998883295e-06, 4.97...</msg>
<status status="PASS" starttime="20201029 12:49:26.065" endtime="20201029 12:49:26.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.073" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:49:26.072" endtime="20201029 12:49:26.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:26.076" level="INFO">VALUE: [4.0839999999597865e-06, 4.987000000067354e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.987000000067354e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.9579999998883295e-06, 4.972000000158516e-06, 4.999999999810711e-06, 4.971999999714427e-06, 4.985999999984614e-06, 4.999999999810711e-06, 4.999999999810711e-06, 4.985999999984614e-06, 4.999999999810711e-06, 4.985999999984614e-06, 4.999999999810711e-06, 4.985999999984614e-06, 5.0420000001771825e-06, 5.014000000080898e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.987000000067354e-06, 5.0690000001907265e-06, 5.000000000254801e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.987000000067354e-06, 4.973000000241257e-06, 4.985999999984614e-06, 4.985999999984614e-06, 5.000000000254801e-06, 5.041999999733093e-06, 4.985999999984614e-06, 4.972000000158516e-06, 4.958000000332419e-06, 4.985999999984614e-06, 4.959000000415159e-06, 4.999999999810711e-06, 5.013999999636809e-06, 5.000000000254801e-06, 4.999999999810711e-06, 4.987000000067354e-06, 4.985999999984614e-06, 4.985999999984614e-06, 4.985999999984614e-06, 5.014000000080898e-06, 4.971999999714427e-06, 5.013999999636809e-06]</msg>
<status status="PASS" starttime="20201029 12:49:26.074" endtime="20201029 12:49:26.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.068" endtime="20201029 12:49:26.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:25.658" endtime="20201029 12:49:26.077"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:49:22.546" endtime="20201029 12:49:26.078" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:26.085" endtime="20201029 12:49:26.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.083" endtime="20201029 12:49:26.105"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:26.119" endtime="20201029 12:49:29.136"></status>
</kw>
<msg timestamp="20201029 12:49:29.137" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:26.117" endtime="20201029 12:49:29.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.143" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:29.140" endtime="20201029 12:49:29.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:29.149" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:29.145" endtime="20201029 12:49:29.150"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:26.115" endtime="20201029 12:49:29.151"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:26.112" endtime="20201029 12:49:29.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.111" endtime="20201029 12:49:29.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:29.161" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:29.159" endtime="20201029 12:49:29.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:29.155" endtime="20201029 12:49:29.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.110" endtime="20201029 12:49:29.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.109" endtime="20201029 12:49:29.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.164" endtime="20201029 12:49:29.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.107" endtime="20201029 12:49:29.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.106" endtime="20201029 12:49:29.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:26.082" endtime="20201029 12:49:29.170"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:29.199" endtime="20201029 12:49:33.235"></status>
</kw>
<msg timestamp="20201029 12:49:33.236" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201029 12:49:29.192" endtime="20201029 12:49:33.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.242" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201029 12:49:33.239" endtime="20201029 12:49:33.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:33.249" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:49:33.245" endtime="20201029 12:49:33.249"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:29.182" endtime="20201029 12:49:33.251"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:29.175" endtime="20201029 12:49:33.252"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:29.171" endtime="20201029 12:49:33.254"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 12:49:26.079" endtime="20201029 12:49:33.255" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:33.270" endtime="20201029 12:49:33.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.267" endtime="20201029 12:49:33.293"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:33.312" endtime="20201029 12:49:40.325"></status>
</kw>
<msg timestamp="20201029 12:49:40.326" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:33.310" endtime="20201029 12:49:40.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:40.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:40.328" endtime="20201029 12:49:40.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.333" endtime="20201029 12:49:40.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.308" endtime="20201029 12:49:40.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.305" endtime="20201029 12:49:40.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.304" endtime="20201029 12:49:40.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.341" endtime="20201029 12:49:40.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.303" endtime="20201029 12:49:40.345"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:40.365" endtime="20201029 12:49:44.375"></status>
</kw>
<msg timestamp="20201029 12:49:44.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:40.360" endtime="20201029 12:49:44.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:44.381" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:44.378" endtime="20201029 12:49:44.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.384" endtime="20201029 12:49:44.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.355" endtime="20201029 12:49:44.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.350" endtime="20201029 12:49:44.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.347" endtime="20201029 12:49:44.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.391" endtime="20201029 12:49:44.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:40.345" endtime="20201029 12:49:44.395"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:44.415" endtime="20201029 12:49:48.424"></status>
</kw>
<msg timestamp="20201029 12:49:48.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:44.410" endtime="20201029 12:49:48.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:48.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:48.428" endtime="20201029 12:49:48.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.433" endtime="20201029 12:49:48.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.405" endtime="20201029 12:49:48.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.400" endtime="20201029 12:49:48.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.397" endtime="20201029 12:49:48.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.441" endtime="20201029 12:49:48.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:44.396" endtime="20201029 12:49:48.444"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:48.463" endtime="20201029 12:49:52.473"></status>
</kw>
<msg timestamp="20201029 12:49:52.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:48.460" endtime="20201029 12:49:52.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:52.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:52.476" endtime="20201029 12:49:52.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.481" endtime="20201029 12:49:52.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.454" endtime="20201029 12:49:52.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.449" endtime="20201029 12:49:52.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.447" endtime="20201029 12:49:52.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.489" endtime="20201029 12:49:52.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:48.445" endtime="20201029 12:49:52.492"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:52.511" endtime="20201029 12:49:56.521"></status>
</kw>
<msg timestamp="20201029 12:49:56.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:52.508" endtime="20201029 12:49:56.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:56.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:56.524" endtime="20201029 12:49:56.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.529" endtime="20201029 12:49:56.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.502" endtime="20201029 12:49:56.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.497" endtime="20201029 12:49:56.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.495" endtime="20201029 12:49:56.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.537" endtime="20201029 12:49:56.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:52.493" endtime="20201029 12:49:56.540"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:56.563" endtime="20201029 12:50:00.572"></status>
</kw>
<msg timestamp="20201029 12:50:00.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:49:56.559" endtime="20201029 12:50:00.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:00.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:00.576" endtime="20201029 12:50:00.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:00.582" endtime="20201029 12:50:00.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.551" endtime="20201029 12:50:00.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.546" endtime="20201029 12:50:00.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.543" endtime="20201029 12:50:00.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:00.589" endtime="20201029 12:50:00.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:56.541" endtime="20201029 12:50:00.593"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:00.613" endtime="20201029 12:50:04.622"></status>
</kw>
<msg timestamp="20201029 12:50:04.623" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:00.609" endtime="20201029 12:50:04.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:04.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:04.625" endtime="20201029 12:50:04.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:04.630" endtime="20201029 12:50:04.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:00.603" endtime="20201029 12:50:04.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:00.598" endtime="20201029 12:50:04.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:00.596" endtime="20201029 12:50:04.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:04.638" endtime="20201029 12:50:04.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:00.594" endtime="20201029 12:50:04.641"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:04.660" endtime="20201029 12:50:08.670"></status>
</kw>
<msg timestamp="20201029 12:50:08.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:04.657" endtime="20201029 12:50:08.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:08.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:08.673" endtime="20201029 12:50:08.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:08.678" endtime="20201029 12:50:08.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:04.651" endtime="20201029 12:50:08.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:04.646" endtime="20201029 12:50:08.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:04.644" endtime="20201029 12:50:08.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:08.686" endtime="20201029 12:50:08.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:04.642" endtime="20201029 12:50:08.691"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:08.709" endtime="20201029 12:50:12.719"></status>
</kw>
<msg timestamp="20201029 12:50:12.720" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:08.706" endtime="20201029 12:50:12.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:12.725" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:12.722" endtime="20201029 12:50:12.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:12.727" endtime="20201029 12:50:12.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.701" endtime="20201029 12:50:12.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.696" endtime="20201029 12:50:12.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.693" endtime="20201029 12:50:12.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:12.737" endtime="20201029 12:50:12.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:08.691" endtime="20201029 12:50:12.741"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:12.760" endtime="20201029 12:50:16.770"></status>
</kw>
<msg timestamp="20201029 12:50:16.771" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:12.757" endtime="20201029 12:50:16.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:16.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:16.773" endtime="20201029 12:50:16.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.778" endtime="20201029 12:50:16.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:12.751" endtime="20201029 12:50:16.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:12.746" endtime="20201029 12:50:16.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:12.744" endtime="20201029 12:50:16.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.786" endtime="20201029 12:50:16.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:12.742" endtime="20201029 12:50:16.789"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:16.808" endtime="20201029 12:50:20.818"></status>
</kw>
<msg timestamp="20201029 12:50:20.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:16.805" endtime="20201029 12:50:20.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:20.824" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:20.821" endtime="20201029 12:50:20.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:20.826" endtime="20201029 12:50:20.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.799" endtime="20201029 12:50:20.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.794" endtime="20201029 12:50:20.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.792" endtime="20201029 12:50:20.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:20.835" endtime="20201029 12:50:20.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:16.790" endtime="20201029 12:50:20.838"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:20.857" endtime="20201029 12:50:24.867"></status>
</kw>
<msg timestamp="20201029 12:50:24.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:20.854" endtime="20201029 12:50:24.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:24.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:24.870" endtime="20201029 12:50:24.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:24.876" endtime="20201029 12:50:24.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:20.848" endtime="20201029 12:50:24.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:20.843" endtime="20201029 12:50:24.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:20.841" endtime="20201029 12:50:24.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:24.883" endtime="20201029 12:50:24.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:20.839" endtime="20201029 12:50:24.887"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:24.909" endtime="20201029 12:50:28.919"></status>
</kw>
<msg timestamp="20201029 12:50:28.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:24.906" endtime="20201029 12:50:28.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:28.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:28.922" endtime="20201029 12:50:28.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:28.927" endtime="20201029 12:50:28.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:24.898" endtime="20201029 12:50:28.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:24.892" endtime="20201029 12:50:28.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:24.889" endtime="20201029 12:50:28.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:28.935" endtime="20201029 12:50:28.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:24.888" endtime="20201029 12:50:28.939"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:28.958" endtime="20201029 12:50:32.967"></status>
</kw>
<msg timestamp="20201029 12:50:32.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:28.954" endtime="20201029 12:50:32.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:32.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:32.971" endtime="20201029 12:50:32.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:32.976" endtime="20201029 12:50:32.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:28.949" endtime="20201029 12:50:32.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:28.944" endtime="20201029 12:50:32.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:28.941" endtime="20201029 12:50:32.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:32.984" endtime="20201029 12:50:32.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:28.940" endtime="20201029 12:50:32.988"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:33.007" endtime="20201029 12:50:37.016"></status>
</kw>
<msg timestamp="20201029 12:50:37.017" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:33.004" endtime="20201029 12:50:37.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:37.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:37.020" endtime="20201029 12:50:37.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:37.025" endtime="20201029 12:50:37.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:32.998" endtime="20201029 12:50:37.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:32.993" endtime="20201029 12:50:37.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:32.990" endtime="20201029 12:50:37.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:37.033" endtime="20201029 12:50:37.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:32.988" endtime="20201029 12:50:37.036"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:37.055" endtime="20201029 12:50:41.065"></status>
</kw>
<msg timestamp="20201029 12:50:41.066" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:37.052" endtime="20201029 12:50:41.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:41.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:41.068" endtime="20201029 12:50:41.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:41.073" endtime="20201029 12:50:41.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:37.046" endtime="20201029 12:50:41.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:37.041" endtime="20201029 12:50:41.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:37.039" endtime="20201029 12:50:41.079"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:41.081" endtime="20201029 12:50:41.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:37.037" endtime="20201029 12:50:41.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:33.301" endtime="20201029 12:50:41.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 12:50:41.090" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:50:41.087" endtime="20201029 12:50:41.091"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:33.298" endtime="20201029 12:50:41.092"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:33.294" endtime="20201029 12:50:41.093"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:33.264" endtime="20201029 12:50:41.094"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 12:49:33.259" endtime="20201029 12:50:41.095" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:50:41.113" endtime="20201029 12:50:41.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:41.110" endtime="20201029 12:50:41.136"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:41.157" endtime="20201029 12:50:48.170"></status>
</kw>
<msg timestamp="20201029 12:50:48.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:41.156" endtime="20201029 12:50:48.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:48.176" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:48.173" endtime="20201029 12:50:48.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:48.178" endtime="20201029 12:50:48.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:41.153" endtime="20201029 12:50:48.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:41.149" endtime="20201029 12:50:48.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:41.147" endtime="20201029 12:50:48.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:48.186" endtime="20201029 12:50:48.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:41.145" endtime="20201029 12:50:48.189"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:48.208" endtime="20201029 12:50:52.218"></status>
</kw>
<msg timestamp="20201029 12:50:52.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:48.205" endtime="20201029 12:50:52.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:52.224" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:52.221" endtime="20201029 12:50:52.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:52.226" endtime="20201029 12:50:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:48.199" endtime="20201029 12:50:52.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:48.194" endtime="20201029 12:50:52.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:48.192" endtime="20201029 12:50:52.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:52.234" endtime="20201029 12:50:52.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:48.190" endtime="20201029 12:50:52.238"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:52.258" endtime="20201029 12:50:56.269"></status>
</kw>
<msg timestamp="20201029 12:50:56.270" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:52.255" endtime="20201029 12:50:56.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:50:56.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:56.272" endtime="20201029 12:50:56.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:56.277" endtime="20201029 12:50:56.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:52.250" endtime="20201029 12:50:56.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:52.243" endtime="20201029 12:50:56.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:52.240" endtime="20201029 12:50:56.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:56.285" endtime="20201029 12:50:56.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:52.238" endtime="20201029 12:50:56.289"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:50:56.308" endtime="20201029 12:51:00.317"></status>
</kw>
<msg timestamp="20201029 12:51:00.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:50:56.304" endtime="20201029 12:51:00.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:00.323" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:00.320" endtime="20201029 12:51:00.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:00.325" endtime="20201029 12:51:00.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:56.299" endtime="20201029 12:51:00.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:56.294" endtime="20201029 12:51:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:56.291" endtime="20201029 12:51:00.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:00.333" endtime="20201029 12:51:00.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:56.290" endtime="20201029 12:51:00.337"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:00.356" endtime="20201029 12:51:04.366"></status>
</kw>
<msg timestamp="20201029 12:51:04.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:00.353" endtime="20201029 12:51:04.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:04.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:04.369" endtime="20201029 12:51:04.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:04.374" endtime="20201029 12:51:04.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:00.347" endtime="20201029 12:51:04.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:00.342" endtime="20201029 12:51:04.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:00.339" endtime="20201029 12:51:04.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:04.382" endtime="20201029 12:51:04.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:00.338" endtime="20201029 12:51:04.385"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:04.405" endtime="20201029 12:51:08.416"></status>
</kw>
<msg timestamp="20201029 12:51:08.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:04.402" endtime="20201029 12:51:08.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:08.422" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:08.419" endtime="20201029 12:51:08.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:08.424" endtime="20201029 12:51:08.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:04.396" endtime="20201029 12:51:08.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:04.390" endtime="20201029 12:51:08.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:04.388" endtime="20201029 12:51:08.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:08.432" endtime="20201029 12:51:08.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:04.386" endtime="20201029 12:51:08.436"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:08.455" endtime="20201029 12:51:12.464"></status>
</kw>
<msg timestamp="20201029 12:51:12.465" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:08.451" endtime="20201029 12:51:12.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:12.470" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:12.467" endtime="20201029 12:51:12.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:12.473" endtime="20201029 12:51:12.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:08.446" endtime="20201029 12:51:12.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:08.441" endtime="20201029 12:51:12.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:08.438" endtime="20201029 12:51:12.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:12.480" endtime="20201029 12:51:12.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:08.436" endtime="20201029 12:51:12.484"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:12.503" endtime="20201029 12:51:16.512"></status>
</kw>
<msg timestamp="20201029 12:51:16.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:12.499" endtime="20201029 12:51:16.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:16.518" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:16.515" endtime="20201029 12:51:16.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:16.520" endtime="20201029 12:51:16.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:12.494" endtime="20201029 12:51:16.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:12.489" endtime="20201029 12:51:16.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:12.486" endtime="20201029 12:51:16.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:16.528" endtime="20201029 12:51:16.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:12.485" endtime="20201029 12:51:16.533"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:16.552" endtime="20201029 12:51:20.561"></status>
</kw>
<msg timestamp="20201029 12:51:20.562" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:16.548" endtime="20201029 12:51:20.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:20.567" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:20.565" endtime="20201029 12:51:20.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:20.570" endtime="20201029 12:51:20.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:16.543" endtime="20201029 12:51:20.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:16.538" endtime="20201029 12:51:20.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:16.535" endtime="20201029 12:51:20.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:20.577" endtime="20201029 12:51:20.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:16.533" endtime="20201029 12:51:20.581"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:20.603" endtime="20201029 12:51:24.613"></status>
</kw>
<msg timestamp="20201029 12:51:24.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:20.600" endtime="20201029 12:51:24.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:24.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:24.616" endtime="20201029 12:51:24.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:24.622" endtime="20201029 12:51:24.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:20.591" endtime="20201029 12:51:24.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:20.586" endtime="20201029 12:51:24.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:20.584" endtime="20201029 12:51:24.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:24.629" endtime="20201029 12:51:24.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:20.582" endtime="20201029 12:51:24.633"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:24.654" endtime="20201029 12:51:28.664"></status>
</kw>
<msg timestamp="20201029 12:51:28.665" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:24.649" endtime="20201029 12:51:28.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:28.670" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:28.667" endtime="20201029 12:51:28.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:28.673" endtime="20201029 12:51:28.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:24.643" endtime="20201029 12:51:28.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:24.638" endtime="20201029 12:51:28.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:24.635" endtime="20201029 12:51:28.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:28.681" endtime="20201029 12:51:28.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:24.634" endtime="20201029 12:51:28.685"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:28.704" endtime="20201029 12:51:32.713"></status>
</kw>
<msg timestamp="20201029 12:51:32.714" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:28.700" endtime="20201029 12:51:32.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:32.719" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:32.716" endtime="20201029 12:51:32.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:32.721" endtime="20201029 12:51:32.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:28.695" endtime="20201029 12:51:32.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:28.690" endtime="20201029 12:51:32.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:28.687" endtime="20201029 12:51:32.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:32.729" endtime="20201029 12:51:32.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:28.685" endtime="20201029 12:51:32.733"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:32.752" endtime="20201029 12:51:36.761"></status>
</kw>
<msg timestamp="20201029 12:51:36.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:32.748" endtime="20201029 12:51:36.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:36.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:36.764" endtime="20201029 12:51:36.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:36.769" endtime="20201029 12:51:36.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:32.743" endtime="20201029 12:51:36.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:32.738" endtime="20201029 12:51:36.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:32.735" endtime="20201029 12:51:36.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:36.777" endtime="20201029 12:51:36.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:32.734" endtime="20201029 12:51:36.781"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:36.806" endtime="20201029 12:51:40.816"></status>
</kw>
<msg timestamp="20201029 12:51:40.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:36.803" endtime="20201029 12:51:40.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:40.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:40.819" endtime="20201029 12:51:40.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:40.825" endtime="20201029 12:51:40.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:36.796" endtime="20201029 12:51:40.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:36.786" endtime="20201029 12:51:40.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:36.783" endtime="20201029 12:51:40.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:40.833" endtime="20201029 12:51:40.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:36.782" endtime="20201029 12:51:40.837"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:40.855" endtime="20201029 12:51:44.865"></status>
</kw>
<msg timestamp="20201029 12:51:44.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:40.852" endtime="20201029 12:51:44.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:44.871" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:44.868" endtime="20201029 12:51:44.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:44.873" endtime="20201029 12:51:44.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:40.847" endtime="20201029 12:51:44.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:40.842" endtime="20201029 12:51:44.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:40.839" endtime="20201029 12:51:44.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:44.881" endtime="20201029 12:51:44.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:40.837" endtime="20201029 12:51:44.885"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:44.903" endtime="20201029 12:51:48.913"></status>
</kw>
<msg timestamp="20201029 12:51:48.914" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:44.900" endtime="20201029 12:51:48.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:48.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:48.916" endtime="20201029 12:51:48.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:48.921" endtime="20201029 12:51:48.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:44.895" endtime="20201029 12:51:48.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:44.890" endtime="20201029 12:51:48.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:44.887" endtime="20201029 12:51:48.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:48.929" endtime="20201029 12:51:48.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:44.885" endtime="20201029 12:51:48.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:50:41.144" endtime="20201029 12:51:48.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 12:51:48.938" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:51:48.935" endtime="20201029 12:51:48.939"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:41.141" endtime="20201029 12:51:48.940"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:41.137" endtime="20201029 12:51:48.941"></status>
</kw>
<status status="FAIL" starttime="20201029 12:50:41.107" endtime="20201029 12:51:48.942"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 12:50:41.099" endtime="20201029 12:51:48.943" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:51:48.959" endtime="20201029 12:51:48.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:48.956" endtime="20201029 12:51:48.982"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:49.012" endtime="20201029 12:51:56.027"></status>
</kw>
<msg timestamp="20201029 12:51:56.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:49.009" endtime="20201029 12:51:56.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:51:56.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:56.030" endtime="20201029 12:51:56.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:56.035" endtime="20201029 12:51:56.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:49.004" endtime="20201029 12:51:56.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:48.997" endtime="20201029 12:51:56.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:48.995" endtime="20201029 12:51:56.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:56.043" endtime="20201029 12:51:56.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:48.993" endtime="20201029 12:51:56.047"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:51:56.066" endtime="20201029 12:52:00.076"></status>
</kw>
<msg timestamp="20201029 12:52:00.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:51:56.062" endtime="20201029 12:52:00.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:00.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:00.079" endtime="20201029 12:52:00.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:00.084" endtime="20201029 12:52:00.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:56.057" endtime="20201029 12:52:00.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:56.052" endtime="20201029 12:52:00.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:56.049" endtime="20201029 12:52:00.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:00.091" endtime="20201029 12:52:00.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:56.047" endtime="20201029 12:52:00.095"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:00.113" endtime="20201029 12:52:04.123"></status>
</kw>
<msg timestamp="20201029 12:52:04.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:00.110" endtime="20201029 12:52:04.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:04.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:04.127" endtime="20201029 12:52:04.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:04.132" endtime="20201029 12:52:04.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:00.105" endtime="20201029 12:52:04.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:00.100" endtime="20201029 12:52:04.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:00.097" endtime="20201029 12:52:04.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:04.139" endtime="20201029 12:52:04.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:00.096" endtime="20201029 12:52:04.143"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:04.163" endtime="20201029 12:52:08.173"></status>
</kw>
<msg timestamp="20201029 12:52:08.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:04.160" endtime="20201029 12:52:08.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:08.179" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:08.176" endtime="20201029 12:52:08.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:08.181" endtime="20201029 12:52:08.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:04.155" endtime="20201029 12:52:08.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:04.148" endtime="20201029 12:52:08.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:04.145" endtime="20201029 12:52:08.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:08.188" endtime="20201029 12:52:08.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:04.144" endtime="20201029 12:52:08.192"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:08.210" endtime="20201029 12:52:12.220"></status>
</kw>
<msg timestamp="20201029 12:52:12.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:08.207" endtime="20201029 12:52:12.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:12.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:12.223" endtime="20201029 12:52:12.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:12.228" endtime="20201029 12:52:12.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:08.202" endtime="20201029 12:52:12.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:08.197" endtime="20201029 12:52:12.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:08.194" endtime="20201029 12:52:12.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:12.236" endtime="20201029 12:52:12.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:08.193" endtime="20201029 12:52:12.239"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:12.252" endtime="20201029 12:52:16.260"></status>
</kw>
<msg timestamp="20201029 12:52:16.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:12.250" endtime="20201029 12:52:16.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:16.266" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:16.263" endtime="20201029 12:52:16.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:16.268" endtime="20201029 12:52:16.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:12.247" endtime="20201029 12:52:16.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:12.245" endtime="20201029 12:52:16.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:12.242" endtime="20201029 12:52:16.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:16.276" endtime="20201029 12:52:16.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:12.240" endtime="20201029 12:52:16.279"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:16.302" endtime="20201029 12:52:20.310"></status>
</kw>
<msg timestamp="20201029 12:52:20.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:16.294" endtime="20201029 12:52:20.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:20.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:20.313" endtime="20201029 12:52:20.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:20.318" endtime="20201029 12:52:20.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:16.289" endtime="20201029 12:52:20.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:16.284" endtime="20201029 12:52:20.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:16.282" endtime="20201029 12:52:20.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:20.328" endtime="20201029 12:52:20.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:16.280" endtime="20201029 12:52:20.331"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:20.350" endtime="20201029 12:52:24.359"></status>
</kw>
<msg timestamp="20201029 12:52:24.360" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:20.347" endtime="20201029 12:52:24.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:24.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:24.363" endtime="20201029 12:52:24.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:24.367" endtime="20201029 12:52:24.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:20.341" endtime="20201029 12:52:24.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:20.336" endtime="20201029 12:52:24.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:20.334" endtime="20201029 12:52:24.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:24.375" endtime="20201029 12:52:24.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:20.332" endtime="20201029 12:52:24.379"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:24.398" endtime="20201029 12:52:28.408"></status>
</kw>
<msg timestamp="20201029 12:52:28.409" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:24.395" endtime="20201029 12:52:28.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:28.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:28.411" endtime="20201029 12:52:28.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:28.416" endtime="20201029 12:52:28.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:24.390" endtime="20201029 12:52:28.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:24.384" endtime="20201029 12:52:28.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:24.382" endtime="20201029 12:52:28.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:28.424" endtime="20201029 12:52:28.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:24.379" endtime="20201029 12:52:28.427"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:28.446" endtime="20201029 12:52:32.454"></status>
</kw>
<msg timestamp="20201029 12:52:32.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:28.443" endtime="20201029 12:52:32.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:32.460" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:32.457" endtime="20201029 12:52:32.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:32.462" endtime="20201029 12:52:32.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:28.437" endtime="20201029 12:52:32.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:28.432" endtime="20201029 12:52:32.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:28.430" endtime="20201029 12:52:32.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:32.469" endtime="20201029 12:52:32.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:28.428" endtime="20201029 12:52:32.473"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:32.494" endtime="20201029 12:52:36.503"></status>
</kw>
<msg timestamp="20201029 12:52:36.504" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:32.490" endtime="20201029 12:52:36.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:36.509" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:36.506" endtime="20201029 12:52:36.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:36.511" endtime="20201029 12:52:36.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:32.483" endtime="20201029 12:52:36.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:32.478" endtime="20201029 12:52:36.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:32.476" endtime="20201029 12:52:36.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:36.520" endtime="20201029 12:52:36.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:32.474" endtime="20201029 12:52:36.523"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:36.542" endtime="20201029 12:52:40.551"></status>
</kw>
<msg timestamp="20201029 12:52:40.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:36.539" endtime="20201029 12:52:40.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:40.554" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:40.553" endtime="20201029 12:52:40.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:40.555" endtime="20201029 12:52:40.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:36.533" endtime="20201029 12:52:40.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:36.528" endtime="20201029 12:52:40.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:36.526" endtime="20201029 12:52:40.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:40.559" endtime="20201029 12:52:40.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:36.524" endtime="20201029 12:52:40.560"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:40.569" endtime="20201029 12:52:44.577"></status>
</kw>
<msg timestamp="20201029 12:52:44.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:40.568" endtime="20201029 12:52:44.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:44.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:44.580" endtime="20201029 12:52:44.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:44.585" endtime="20201029 12:52:44.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:40.565" endtime="20201029 12:52:44.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:40.563" endtime="20201029 12:52:44.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:40.562" endtime="20201029 12:52:44.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:44.593" endtime="20201029 12:52:44.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:40.561" endtime="20201029 12:52:44.597"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:44.615" endtime="20201029 12:52:48.624"></status>
</kw>
<msg timestamp="20201029 12:52:48.625" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:44.612" endtime="20201029 12:52:48.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:48.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:48.628" endtime="20201029 12:52:48.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:48.633" endtime="20201029 12:52:48.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:44.606" endtime="20201029 12:52:48.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:44.601" endtime="20201029 12:52:48.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:44.599" endtime="20201029 12:52:48.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:48.641" endtime="20201029 12:52:48.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:44.597" endtime="20201029 12:52:48.645"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:48.666" endtime="20201029 12:52:52.675"></status>
</kw>
<msg timestamp="20201029 12:52:52.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:48.662" endtime="20201029 12:52:52.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:52.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:52.678" endtime="20201029 12:52:52.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:52.683" endtime="20201029 12:52:52.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:48.657" endtime="20201029 12:52:52.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:48.650" endtime="20201029 12:52:52.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:48.647" endtime="20201029 12:52:52.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:52.691" endtime="20201029 12:52:52.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:48.646" endtime="20201029 12:52:52.695"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:52.713" endtime="20201029 12:52:56.722"></status>
</kw>
<msg timestamp="20201029 12:52:56.723" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:52.710" endtime="20201029 12:52:56.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:52:56.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:56.725" endtime="20201029 12:52:56.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:56.730" endtime="20201029 12:52:56.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:52.704" endtime="20201029 12:52:56.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:52.699" endtime="20201029 12:52:56.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:52.697" endtime="20201029 12:52:56.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:56.740" endtime="20201029 12:52:56.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:52.695" endtime="20201029 12:52:56.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:51:48.992" endtime="20201029 12:52:56.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 12:52:56.750" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:52:56.746" endtime="20201029 12:52:56.750"></status>
</kw>
<status status="FAIL" starttime="20201029 12:51:48.986" endtime="20201029 12:52:56.752"></status>
</kw>
<status status="FAIL" starttime="20201029 12:51:48.983" endtime="20201029 12:52:56.753"></status>
</kw>
<status status="FAIL" starttime="20201029 12:51:48.953" endtime="20201029 12:52:56.754"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 12:51:48.947" endtime="20201029 12:52:56.755" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:52:56.770" endtime="20201029 12:52:56.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:56.767" endtime="20201029 12:52:56.793"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:52:56.822" endtime="20201029 12:53:03.836"></status>
</kw>
<msg timestamp="20201029 12:53:03.837" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:52:56.819" endtime="20201029 12:53:03.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:03.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:03.839" endtime="20201029 12:53:03.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:03.844" endtime="20201029 12:53:03.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:56.811" endtime="20201029 12:53:03.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:56.806" endtime="20201029 12:53:03.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:56.804" endtime="20201029 12:53:03.850"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:03.852" endtime="20201029 12:53:03.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:56.802" endtime="20201029 12:53:03.856"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:03.874" endtime="20201029 12:53:07.884"></status>
</kw>
<msg timestamp="20201029 12:53:07.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:03.871" endtime="20201029 12:53:07.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:07.890" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:07.887" endtime="20201029 12:53:07.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:07.892" endtime="20201029 12:53:07.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:03.865" endtime="20201029 12:53:07.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:03.861" endtime="20201029 12:53:07.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:03.858" endtime="20201029 12:53:07.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:07.900" endtime="20201029 12:53:07.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:03.856" endtime="20201029 12:53:07.904"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:07.924" endtime="20201029 12:53:11.933"></status>
</kw>
<msg timestamp="20201029 12:53:11.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:07.920" endtime="20201029 12:53:11.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:11.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:11.935" endtime="20201029 12:53:11.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:11.937" endtime="20201029 12:53:11.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:07.914" endtime="20201029 12:53:11.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:07.909" endtime="20201029 12:53:11.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:07.907" endtime="20201029 12:53:11.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:11.941" endtime="20201029 12:53:11.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:07.905" endtime="20201029 12:53:11.943"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:11.951" endtime="20201029 12:53:15.962"></status>
</kw>
<msg timestamp="20201029 12:53:15.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:11.950" endtime="20201029 12:53:15.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:15.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:15.965" endtime="20201029 12:53:15.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:15.970" endtime="20201029 12:53:15.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:11.947" endtime="20201029 12:53:15.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:11.945" endtime="20201029 12:53:15.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:11.944" endtime="20201029 12:53:15.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:15.977" endtime="20201029 12:53:15.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:11.943" endtime="20201029 12:53:15.981"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:15.999" endtime="20201029 12:53:20.009"></status>
</kw>
<msg timestamp="20201029 12:53:20.010" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:15.996" endtime="20201029 12:53:20.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:20.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:20.012" endtime="20201029 12:53:20.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:20.017" endtime="20201029 12:53:20.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:15.991" endtime="20201029 12:53:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:15.986" endtime="20201029 12:53:20.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:15.983" endtime="20201029 12:53:20.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:20.025" endtime="20201029 12:53:20.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:15.982" endtime="20201029 12:53:20.028"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:20.047" endtime="20201029 12:53:24.057"></status>
</kw>
<msg timestamp="20201029 12:53:24.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:20.043" endtime="20201029 12:53:24.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:24.063" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:24.060" endtime="20201029 12:53:24.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:24.065" endtime="20201029 12:53:24.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:20.038" endtime="20201029 12:53:24.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:20.033" endtime="20201029 12:53:24.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:20.031" endtime="20201029 12:53:24.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:24.073" endtime="20201029 12:53:24.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:20.029" endtime="20201029 12:53:24.076"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:24.095" endtime="20201029 12:53:28.104"></status>
</kw>
<msg timestamp="20201029 12:53:28.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:24.091" endtime="20201029 12:53:28.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:28.111" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:28.108" endtime="20201029 12:53:28.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:28.113" endtime="20201029 12:53:28.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:24.086" endtime="20201029 12:53:28.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:24.081" endtime="20201029 12:53:28.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:24.079" endtime="20201029 12:53:28.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:28.121" endtime="20201029 12:53:28.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:24.077" endtime="20201029 12:53:28.125"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:28.149" endtime="20201029 12:53:32.160"></status>
</kw>
<msg timestamp="20201029 12:53:32.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:28.144" endtime="20201029 12:53:32.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:32.167" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:32.164" endtime="20201029 12:53:32.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:32.169" endtime="20201029 12:53:32.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:28.136" endtime="20201029 12:53:32.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:28.130" endtime="20201029 12:53:32.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:28.128" endtime="20201029 12:53:32.175"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:32.177" endtime="20201029 12:53:32.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:28.126" endtime="20201029 12:53:32.181"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:32.202" endtime="20201029 12:53:36.212"></status>
</kw>
<msg timestamp="20201029 12:53:36.213" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:32.199" endtime="20201029 12:53:36.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:36.218" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:36.215" endtime="20201029 12:53:36.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:36.221" endtime="20201029 12:53:36.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:32.193" endtime="20201029 12:53:36.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:32.187" endtime="20201029 12:53:36.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:32.184" endtime="20201029 12:53:36.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:36.229" endtime="20201029 12:53:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:32.182" endtime="20201029 12:53:36.233"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:36.253" endtime="20201029 12:53:40.261"></status>
</kw>
<msg timestamp="20201029 12:53:40.262" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:36.249" endtime="20201029 12:53:40.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:40.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:40.264" endtime="20201029 12:53:40.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:40.269" endtime="20201029 12:53:40.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:36.243" endtime="20201029 12:53:40.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:36.238" endtime="20201029 12:53:40.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:36.235" endtime="20201029 12:53:40.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:40.278" endtime="20201029 12:53:40.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:36.234" endtime="20201029 12:53:40.281"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:40.301" endtime="20201029 12:53:44.311"></status>
</kw>
<msg timestamp="20201029 12:53:44.312" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:40.298" endtime="20201029 12:53:44.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:44.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:44.314" endtime="20201029 12:53:44.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:44.320" endtime="20201029 12:53:44.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:40.292" endtime="20201029 12:53:44.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:40.287" endtime="20201029 12:53:44.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:40.284" endtime="20201029 12:53:44.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:44.328" endtime="20201029 12:53:44.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:40.282" endtime="20201029 12:53:44.339"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:44.362" endtime="20201029 12:53:48.372"></status>
</kw>
<msg timestamp="20201029 12:53:48.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:44.358" endtime="20201029 12:53:48.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:48.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:48.375" endtime="20201029 12:53:48.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:48.380" endtime="20201029 12:53:48.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:44.352" endtime="20201029 12:53:48.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:44.345" endtime="20201029 12:53:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:44.342" endtime="20201029 12:53:48.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:48.388" endtime="20201029 12:53:48.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:44.340" endtime="20201029 12:53:48.392"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:48.412" endtime="20201029 12:53:52.422"></status>
</kw>
<msg timestamp="20201029 12:53:52.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:48.409" endtime="20201029 12:53:52.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:52.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:52.425" endtime="20201029 12:53:52.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:52.431" endtime="20201029 12:53:52.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:48.403" endtime="20201029 12:53:52.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:48.397" endtime="20201029 12:53:52.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:48.395" endtime="20201029 12:53:52.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:52.439" endtime="20201029 12:53:52.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:48.393" endtime="20201029 12:53:52.443"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:52.463" endtime="20201029 12:53:56.472"></status>
</kw>
<msg timestamp="20201029 12:53:56.473" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:52.459" endtime="20201029 12:53:56.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:53:56.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:56.476" endtime="20201029 12:53:56.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:56.481" endtime="20201029 12:53:56.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:52.453" endtime="20201029 12:53:56.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:52.448" endtime="20201029 12:53:56.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:52.445" endtime="20201029 12:53:56.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:56.496" endtime="20201029 12:53:56.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:52.444" endtime="20201029 12:53:56.499"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:53:56.519" endtime="20201029 12:54:00.532"></status>
</kw>
<msg timestamp="20201029 12:54:00.533" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:53:56.516" endtime="20201029 12:54:00.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:00.538" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:00.535" endtime="20201029 12:54:00.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:00.540" endtime="20201029 12:54:00.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:56.510" endtime="20201029 12:54:00.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:56.505" endtime="20201029 12:54:00.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:56.502" endtime="20201029 12:54:00.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:00.548" endtime="20201029 12:54:00.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:53:56.500" endtime="20201029 12:54:00.552"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:00.572" endtime="20201029 12:54:04.582"></status>
</kw>
<msg timestamp="20201029 12:54:04.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:00.569" endtime="20201029 12:54:04.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:04.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:04.585" endtime="20201029 12:54:04.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:04.591" endtime="20201029 12:54:04.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:00.563" endtime="20201029 12:54:04.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:00.557" endtime="20201029 12:54:04.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:00.555" endtime="20201029 12:54:04.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:04.599" endtime="20201029 12:54:04.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:00.553" endtime="20201029 12:54:04.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:52:56.800" endtime="20201029 12:54:04.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 12:54:04.609" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:54:04.605" endtime="20201029 12:54:04.609"></status>
</kw>
<status status="FAIL" starttime="20201029 12:52:56.797" endtime="20201029 12:54:04.611"></status>
</kw>
<status status="FAIL" starttime="20201029 12:52:56.794" endtime="20201029 12:54:04.612"></status>
</kw>
<status status="FAIL" starttime="20201029 12:52:56.764" endtime="20201029 12:54:04.613"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 12:52:56.758" endtime="20201029 12:54:04.614" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:54:04.630" endtime="20201029 12:54:04.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:04.627" endtime="20201029 12:54:04.654"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:04.683" endtime="20201029 12:54:11.699"></status>
</kw>
<msg timestamp="20201029 12:54:11.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:04.680" endtime="20201029 12:54:11.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:11.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:11.700" endtime="20201029 12:54:11.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:11.703" endtime="20201029 12:54:11.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:04.674" endtime="20201029 12:54:11.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:04.668" endtime="20201029 12:54:11.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:04.666" endtime="20201029 12:54:11.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:11.707" endtime="20201029 12:54:11.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:04.664" endtime="20201029 12:54:11.709"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:11.718" endtime="20201029 12:54:15.726"></status>
</kw>
<msg timestamp="20201029 12:54:15.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:11.716" endtime="20201029 12:54:15.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:15.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:15.730" endtime="20201029 12:54:15.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:15.735" endtime="20201029 12:54:15.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:11.714" endtime="20201029 12:54:15.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:11.711" endtime="20201029 12:54:15.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:11.710" endtime="20201029 12:54:15.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:15.743" endtime="20201029 12:54:15.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:11.709" endtime="20201029 12:54:15.747"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:15.767" endtime="20201029 12:54:19.777"></status>
</kw>
<msg timestamp="20201029 12:54:19.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:15.763" endtime="20201029 12:54:19.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:19.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:19.780" endtime="20201029 12:54:19.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:19.786" endtime="20201029 12:54:19.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:15.758" endtime="20201029 12:54:19.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:15.752" endtime="20201029 12:54:19.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:15.749" endtime="20201029 12:54:19.793"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:19.794" endtime="20201029 12:54:19.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:15.748" endtime="20201029 12:54:19.798"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:19.818" endtime="20201029 12:54:23.828"></status>
</kw>
<msg timestamp="20201029 12:54:23.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:19.815" endtime="20201029 12:54:23.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:23.834" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:23.831" endtime="20201029 12:54:23.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:23.837" endtime="20201029 12:54:23.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:19.809" endtime="20201029 12:54:23.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:19.804" endtime="20201029 12:54:23.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:19.801" endtime="20201029 12:54:23.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:23.845" endtime="20201029 12:54:23.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:19.799" endtime="20201029 12:54:23.849"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:23.875" endtime="20201029 12:54:27.884"></status>
</kw>
<msg timestamp="20201029 12:54:27.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:23.871" endtime="20201029 12:54:27.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:27.890" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:27.887" endtime="20201029 12:54:27.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:27.892" endtime="20201029 12:54:27.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:23.859" endtime="20201029 12:54:27.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:23.854" endtime="20201029 12:54:27.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:23.851" endtime="20201029 12:54:27.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:27.899" endtime="20201029 12:54:27.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:23.849" endtime="20201029 12:54:27.903"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:27.922" endtime="20201029 12:54:31.932"></status>
</kw>
<msg timestamp="20201029 12:54:31.933" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:27.918" endtime="20201029 12:54:31.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:31.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:31.935" endtime="20201029 12:54:31.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:31.940" endtime="20201029 12:54:31.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:27.913" endtime="20201029 12:54:31.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:27.908" endtime="20201029 12:54:31.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:27.905" endtime="20201029 12:54:31.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:31.948" endtime="20201029 12:54:31.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:27.904" endtime="20201029 12:54:31.951"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:31.970" endtime="20201029 12:54:35.979"></status>
</kw>
<msg timestamp="20201029 12:54:35.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:31.967" endtime="20201029 12:54:35.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:35.985" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:35.982" endtime="20201029 12:54:35.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:35.987" endtime="20201029 12:54:35.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:31.961" endtime="20201029 12:54:35.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:31.956" endtime="20201029 12:54:35.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:31.954" endtime="20201029 12:54:35.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:35.995" endtime="20201029 12:54:35.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:31.952" endtime="20201029 12:54:35.998"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:36.017" endtime="20201029 12:54:40.027"></status>
</kw>
<msg timestamp="20201029 12:54:40.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:36.014" endtime="20201029 12:54:40.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:40.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:40.030" endtime="20201029 12:54:40.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:40.035" endtime="20201029 12:54:40.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:36.009" endtime="20201029 12:54:40.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:36.004" endtime="20201029 12:54:40.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:36.001" endtime="20201029 12:54:40.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:40.042" endtime="20201029 12:54:40.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:35.999" endtime="20201029 12:54:40.046"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:40.068" endtime="20201029 12:54:44.077"></status>
</kw>
<msg timestamp="20201029 12:54:44.078" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:40.064" endtime="20201029 12:54:44.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:44.083" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:44.080" endtime="20201029 12:54:44.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:44.085" endtime="20201029 12:54:44.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:40.059" endtime="20201029 12:54:44.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:40.051" endtime="20201029 12:54:44.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:40.048" endtime="20201029 12:54:44.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:44.093" endtime="20201029 12:54:44.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:40.047" endtime="20201029 12:54:44.096"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:44.115" endtime="20201029 12:54:48.122"></status>
</kw>
<msg timestamp="20201029 12:54:48.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:44.112" endtime="20201029 12:54:48.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:48.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:48.125" endtime="20201029 12:54:48.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:48.130" endtime="20201029 12:54:48.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:44.106" endtime="20201029 12:54:48.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:44.101" endtime="20201029 12:54:48.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:44.099" endtime="20201029 12:54:48.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:48.138" endtime="20201029 12:54:48.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:44.097" endtime="20201029 12:54:48.141"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:48.160" endtime="20201029 12:54:52.169"></status>
</kw>
<msg timestamp="20201029 12:54:52.170" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:48.157" endtime="20201029 12:54:52.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:52.175" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:52.173" endtime="20201029 12:54:52.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:52.177" endtime="20201029 12:54:52.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:48.151" endtime="20201029 12:54:52.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:48.146" endtime="20201029 12:54:52.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:48.144" endtime="20201029 12:54:52.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:52.185" endtime="20201029 12:54:52.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:48.142" endtime="20201029 12:54:52.190"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:52.209" endtime="20201029 12:54:56.219"></status>
</kw>
<msg timestamp="20201029 12:54:56.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:52.206" endtime="20201029 12:54:56.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:54:56.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:56.222" endtime="20201029 12:54:56.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:56.227" endtime="20201029 12:54:56.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:52.200" endtime="20201029 12:54:56.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:52.196" endtime="20201029 12:54:56.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:52.193" endtime="20201029 12:54:56.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:56.237" endtime="20201029 12:54:56.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:52.191" endtime="20201029 12:54:56.240"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:54:56.259" endtime="20201029 12:55:00.269"></status>
</kw>
<msg timestamp="20201029 12:55:00.270" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:54:56.256" endtime="20201029 12:55:00.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:00.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:00.272" endtime="20201029 12:55:00.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:00.277" endtime="20201029 12:55:00.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:56.250" endtime="20201029 12:55:00.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:56.245" endtime="20201029 12:55:00.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:56.243" endtime="20201029 12:55:00.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:00.284" endtime="20201029 12:55:00.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:56.241" endtime="20201029 12:55:00.288"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:00.308" endtime="20201029 12:55:04.318"></status>
</kw>
<msg timestamp="20201029 12:55:04.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:00.304" endtime="20201029 12:55:04.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:04.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:04.321" endtime="20201029 12:55:04.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:04.326" endtime="20201029 12:55:04.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:00.299" endtime="20201029 12:55:04.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:00.293" endtime="20201029 12:55:04.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:00.291" endtime="20201029 12:55:04.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:04.334" endtime="20201029 12:55:04.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:00.289" endtime="20201029 12:55:04.338"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:04.356" endtime="20201029 12:55:08.366"></status>
</kw>
<msg timestamp="20201029 12:55:08.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:04.353" endtime="20201029 12:55:08.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:08.372" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:08.369" endtime="20201029 12:55:08.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:08.374" endtime="20201029 12:55:08.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:04.348" endtime="20201029 12:55:08.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:04.343" endtime="20201029 12:55:08.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:04.340" endtime="20201029 12:55:08.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:08.382" endtime="20201029 12:55:08.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:04.338" endtime="20201029 12:55:08.385"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:08.407" endtime="20201029 12:55:12.417"></status>
</kw>
<msg timestamp="20201029 12:55:12.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:08.404" endtime="20201029 12:55:12.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:12.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:55:12.420" endtime="20201029 12:55:12.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:12.425" endtime="20201029 12:55:12.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:08.396" endtime="20201029 12:55:12.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:08.390" endtime="20201029 12:55:12.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:08.388" endtime="20201029 12:55:12.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:12.433" endtime="20201029 12:55:12.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:08.386" endtime="20201029 12:55:12.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:54:04.663" endtime="20201029 12:55:12.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201029 12:55:12.442" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:55:12.438" endtime="20201029 12:55:12.442"></status>
</kw>
<status status="FAIL" starttime="20201029 12:54:04.659" endtime="20201029 12:55:12.444"></status>
</kw>
<status status="FAIL" starttime="20201029 12:54:04.656" endtime="20201029 12:55:12.445"></status>
</kw>
<status status="FAIL" starttime="20201029 12:54:04.623" endtime="20201029 12:55:12.445"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201029 12:54:04.618" endtime="20201029 12:55:12.447" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201029 12:48:53.329" endtime="20201029 12:55:12.468"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:55:12.599" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:55:12.607" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:55:13.716" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:55:12.598" endtime="20201029 12:55:13.716"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:55:16.719" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:55:13.717" endtime="20201029 12:55:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:12.596" endtime="20201029 12:55:16.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:16.726" endtime="20201029 12:55:16.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:16.723" endtime="20201029 12:55:16.993"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:17.005" endtime="20201029 12:55:20.026"></status>
</kw>
<msg timestamp="20201029 12:55:20.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:17.004" endtime="20201029 12:55:20.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:20.032" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:20.029" endtime="20201029 12:55:20.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:55:20.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:55:20.035" endtime="20201029 12:55:20.039"></status>
</kw>
<status status="FAIL" starttime="20201029 12:55:17.001" endtime="20201029 12:55:20.041"></status>
</kw>
<status status="FAIL" starttime="20201029 12:55:16.999" endtime="20201029 12:55:20.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:16.998" endtime="20201029 12:55:20.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:55:20.052" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:55:20.051" endtime="20201029 12:55:20.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.044" endtime="20201029 12:55:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:16.997" endtime="20201029 12:55:20.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:16.996" endtime="20201029 12:55:20.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:20.056" endtime="20201029 12:55:20.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:16.995" endtime="20201029 12:55:20.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:20.062" endtime="20201029 12:55:20.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:16.994" endtime="20201029 12:55:20.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:12.595" endtime="20201029 12:55:20.067"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:20.078" endtime="20201029 12:55:20.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.075" endtime="20201029 12:55:20.101"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:20.129" endtime="20201029 12:55:23.152"></status>
</kw>
<msg timestamp="20201029 12:55:23.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:20.125" endtime="20201029 12:55:23.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:23.155" endtime="20201029 12:55:23.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.164" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:55:23.160" endtime="20201029 12:55:23.165"></status>
</kw>
<status status="FAIL" starttime="20201029 12:55:20.119" endtime="20201029 12:55:23.166"></status>
</kw>
<status status="FAIL" starttime="20201029 12:55:20.114" endtime="20201029 12:55:23.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.112" endtime="20201029 12:55:23.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:55:23.175" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:55:23.174" endtime="20201029 12:55:23.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.170" endtime="20201029 12:55:23.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.110" endtime="20201029 12:55:23.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.109" endtime="20201029 12:55:23.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.179" endtime="20201029 12:55:23.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.106" endtime="20201029 12:55:23.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.103" endtime="20201029 12:55:23.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:20.073" endtime="20201029 12:55:23.185"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.207" endtime="20201029 12:55:23.224"></status>
</kw>
<msg timestamp="20201029 12:55:23.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:23.203" endtime="20201029 12:55:23.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:23.227" endtime="20201029 12:55:23.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.232" endtime="20201029 12:55:23.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.196" endtime="20201029 12:55:23.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.191" endtime="20201029 12:55:23.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.247" endtime="20201029 12:55:23.547"></status>
</kw>
<msg timestamp="20201029 12:55:23.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.119456986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.119471458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:23.245" endtime="20201029 12:55:23.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.119456986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.119471458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:23.551" endtime="20201029 12:55:23.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.559" endtime="20201029 12:55:23.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.243" endtime="20201029 12:55:23.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.239" endtime="20201029 12:55:23.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:23.567" level="INFO">${RESULT} = [{'diff': 1.447200000015414e-05}, {'diff': 1.4513999999632432e-05}, {'diff': 1.4763999999889421e-05}, {'diff': 1.4763999999889421e-05}, {'diff': 1.4263999999819532e-05}, {'diff': 1.4638000000122275e-0...</msg>
<status status="PASS" starttime="20201029 12:55:23.563" endtime="20201029 12:55:23.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:23.571" level="INFO">${ACCURACY} = {'diff': [1.447200000015414e-05, 1.4513999999632432e-05, 1.4763999999889421e-05, 1.4763999999889421e-05, 1.4263999999819532e-05, 1.4638000000122275e-05, 1.49170000001142e-05, 1.4638999999760927e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:55:23.567" endtime="20201029 12:55:23.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.576" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:55:23.575" endtime="20201029 12:55:23.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.579" level="INFO">VALUE: [1.447200000015414e-05, 1.4513999999632432e-05, 1.4763999999889421e-05, 1.4763999999889421e-05, 1.4263999999819532e-05, 1.4638000000122275e-05, 1.49170000001142e-05, 1.4638999999760927e-05, 1.4332999999755458e-05, 1.4681000000127398e-05, 1.5152000000018262e-05, 1.472300000004978e-05, 1.49170000001142e-05, 1.4611999999747383e-05, 1.4957999999953842e-05, 1.472199999996704e-05, 1.4263999999819532e-05, 1.5054999999986052e-05, 1.4514000000076521e-05, 1.4903000000288102e-05, 1.4736000000237226e-05, 1.506899999981215e-05, 1.4278000000089719e-05, 1.4847000000095534e-05, 1.5125000000004718e-05, 1.4889000000017916e-05, 1.4235999999723248e-05, 1.4736000000237226e-05, 1.4542000000172806e-05, 1.4624999999934829e-05, 1.4514000000076521e-05, 1.4847000000095534e-05, 1.5056000000068792e-05, 1.5180000000114546e-05, 1.4972000000224028e-05, 1.4457999999883953e-05, 1.4902999999844013e-05, 1.51669999999271e-05, 1.5125000000004718e-05, 1.4735999999793137e-05, 1.4485999999980237e-05, 1.4791999999985705e-05, 1.4208000000071053e-05, 1.4902999999844013e-05, 1.4735999999793137e-05, 1.5084000000165076e-05, 1.5139000000274905e-05, 1.4847000000095534e-05, 1.4791999999985705e-05, 1.4542000000172806e-05]</msg>
<status status="PASS" starttime="20201029 12:55:23.577" endtime="20201029 12:55:23.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.572" endtime="20201029 12:55:23.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:23.583" endtime="20201029 12:55:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.582" endtime="20201029 12:55:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.580" endtime="20201029 12:55:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.188" endtime="20201029 12:55:23.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.187" endtime="20201029 12:55:23.604"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.613" endtime="20201029 12:55:23.627"></status>
</kw>
<msg timestamp="20201029 12:55:23.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:23.611" endtime="20201029 12:55:23.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:23.629" endtime="20201029 12:55:23.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.631" endtime="20201029 12:55:23.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.608" endtime="20201029 12:55:23.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.606" endtime="20201029 12:55:23.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.640" endtime="20201029 12:55:23.928"></status>
</kw>
<msg timestamp="20201029 12:55:23.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:23.639" endtime="20201029 12:55:23.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:23.932" endtime="20201029 12:55:23.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.940" endtime="20201029 12:55:23.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.636" endtime="20201029 12:55:23.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.635" endtime="20201029 12:55:23.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:23.947" level="INFO">${RESULT} = [{'diff': 1.5014000000000693e-05}, {'diff': 1.4652999999999888e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.5138999999997349e-05}, {'diff': 1.4402999999999638e-05}, {'diff': 1.4611000000001179e-...</msg>
<status status="PASS" starttime="20201029 12:55:23.944" endtime="20201029 12:55:23.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:23.952" level="INFO">${ACCURACY} = {'diff': [1.5014000000000693e-05, 1.4652999999999888e-05, 1.5041999999999833e-05, 1.5138999999997349e-05, 1.4402999999999638e-05, 1.4611000000001179e-05, 1.430499999999918e-05, 1.4764000000000443e-05,...</msg>
<status status="PASS" starttime="20201029 12:55:23.948" endtime="20201029 12:55:23.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.957" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:55:23.956" endtime="20201029 12:55:23.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:23.959" level="INFO">VALUE: [1.5014000000000693e-05, 1.4652999999999888e-05, 1.5041999999999833e-05, 1.5138999999997349e-05, 1.4402999999999638e-05, 1.4611000000001179e-05, 1.430499999999918e-05, 1.4764000000000443e-05, 1.508299999999907e-05, 1.5153000000000388e-05, 1.4639000000000318e-05, 1.4666999999999458e-05, 1.5166999999999958e-05, 1.4597000000001609e-05, 1.5055999999999403e-05, 1.4291999999999083e-05, 1.4666999999999458e-05, 1.4652999999999888e-05, 1.5013999999997224e-05, 1.459699999999814e-05, 1.5083999999998543e-05, 1.4444999999998348e-05, 1.5014000000000693e-05, 1.5139000000000818e-05, 1.4263999999999943e-05, 1.4624999999997279e-05, 1.454099999999986e-05, 1.4250000000000373e-05, 1.5014000000000693e-05, 1.4694999999998598e-05, 1.5166000000000485e-05, 1.5153000000000388e-05, 1.4223000000000707e-05, 1.4223000000000707e-05, 1.4333000000001789e-05, 1.4333000000001789e-05, 1.4887999999997625e-05, 1.4763999999996974e-05, 1.4679999999999555e-05, 1.4889000000000568e-05, 1.486099999999796e-05, 1.4888999999997099e-05, 1.5000000000001124e-05, 1.480499999999968e-05, 1.5083999999998543e-05, 1.4569000000002469e-05, 1.5041999999999833e-05, 1.4889000000000568e-05, 1.4875000000000999e-05, 1.4847000000001859e-05]</msg>
<status status="PASS" starttime="20201029 12:55:23.958" endtime="20201029 12:55:23.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.953" endtime="20201029 12:55:23.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:23.964" endtime="20201029 12:55:23.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.962" endtime="20201029 12:55:23.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.961" endtime="20201029 12:55:23.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.605" endtime="20201029 12:55:23.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.604" endtime="20201029 12:55:23.985"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:23.994" endtime="20201029 12:55:24.009"></status>
</kw>
<msg timestamp="20201029 12:55:24.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:23.993" endtime="20201029 12:55:24.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:24.010" endtime="20201029 12:55:24.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.013" endtime="20201029 12:55:24.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.990" endtime="20201029 12:55:24.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.988" endtime="20201029 12:55:24.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.022" endtime="20201029 12:55:24.307"></status>
</kw>
<msg timestamp="20201029 12:55:24.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:24.020" endtime="20201029 12:55:24.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:24.312" endtime="20201029 12:55:24.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.320" endtime="20201029 12:55:24.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.018" endtime="20201029 12:55:24.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.016" endtime="20201029 12:55:24.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:24.327" level="INFO">${RESULT} = [{'diff': 1.481899999999925e-05}, {'diff': 1.4805999999999153e-05}, {'diff': 1.4764000000000443e-05}, {'diff': 1.4542000000002803e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.4402999999999638e-0...</msg>
<status status="PASS" starttime="20201029 12:55:24.323" endtime="20201029 12:55:24.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:24.331" level="INFO">${ACCURACY} = {'diff': [1.481899999999925e-05, 1.4805999999999153e-05, 1.4764000000000443e-05, 1.4542000000002803e-05, 1.5028000000000263e-05, 1.4402999999999638e-05, 1.4291999999999083e-05, 1.4389000000000068e-05,...</msg>
<status status="PASS" starttime="20201029 12:55:24.328" endtime="20201029 12:55:24.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.335" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:55:24.334" endtime="20201029 12:55:24.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.338" level="INFO">VALUE: [1.481899999999925e-05, 1.4805999999999153e-05, 1.4764000000000443e-05, 1.4542000000002803e-05, 1.5028000000000263e-05, 1.4402999999999638e-05, 1.4291999999999083e-05, 1.4389000000000068e-05, 1.4306000000002123e-05, 1.4639000000000318e-05, 1.461099999999771e-05, 1.4778000000000013e-05, 1.5055999999999403e-05, 1.4721999999998264e-05, 1.4555999999998903e-05, 1.4388999999996599e-05, 1.4458999999997918e-05, 1.4805999999999153e-05, 1.4973000000001457e-05, 1.4693999999999124e-05, 1.4652999999999888e-05, 1.4887999999997625e-05, 1.4388000000000595e-05, 1.4556000000002373e-05, 1.5207999999999194e-05, 1.4903000000000138e-05, 1.4250000000000373e-05, 1.486099999999796e-05, 1.4986000000001554e-05, 1.5125000000001249e-05, 1.4958000000002414e-05, 1.4929999999999805e-05, 1.4250000000000373e-05, 1.4180000000002524e-05, 1.4250000000000373e-05, 1.4292000000002553e-05, 1.5180000000000055e-05, 1.4707999999998694e-05, 1.4527999999999763e-05, 1.4694000000002594e-05, 1.5083000000002539e-05, 1.508299999999907e-05, 1.459699999999814e-05, 1.5041999999999833e-05, 1.4388999999996599e-05, 1.4514000000000193e-05, 1.4319000000002219e-05, 1.509699999999864e-05, 1.4721999999998264e-05, 1.4791999999999583e-05]</msg>
<status status="PASS" starttime="20201029 12:55:24.336" endtime="20201029 12:55:24.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.332" endtime="20201029 12:55:24.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:24.342" endtime="20201029 12:55:24.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.341" endtime="20201029 12:55:24.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.340" endtime="20201029 12:55:24.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.986" endtime="20201029 12:55:24.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.985" endtime="20201029 12:55:24.363"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.372" endtime="20201029 12:55:24.386"></status>
</kw>
<msg timestamp="20201029 12:55:24.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:24.370" endtime="20201029 12:55:24.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:24.388" endtime="20201029 12:55:24.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.390" endtime="20201029 12:55:24.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.367" endtime="20201029 12:55:24.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.365" endtime="20201029 12:55:24.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.400" endtime="20201029 12:55:24.687"></status>
</kw>
<msg timestamp="20201029 12:55:24.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:24.398" endtime="20201029 12:55:24.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203735, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:24.691" endtime="20201029 12:55:24.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.699" endtime="20201029 12:55:24.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.395" endtime="20201029 12:55:24.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.394" endtime="20201029 12:55:24.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:24.706" level="INFO">${RESULT} = [{'diff': 1.4930999999999278e-05}, {'diff': 1.4471999999998014e-05}, {'diff': 1.4471999999998014e-05}, {'diff': 1.4680999999999028e-05}, {'diff': 1.4306000000002123e-05}, {'diff': 1.4277999999999513e-...</msg>
<status status="PASS" starttime="20201029 12:55:24.702" endtime="20201029 12:55:24.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:24.711" level="INFO">${ACCURACY} = {'diff': [1.4930999999999278e-05, 1.4471999999998014e-05, 1.4471999999998014e-05, 1.4680999999999028e-05, 1.4306000000002123e-05, 1.4277999999999513e-05, 1.4917000000003178e-05, 1.4527999999999763e-05...</msg>
<status status="PASS" starttime="20201029 12:55:24.707" endtime="20201029 12:55:24.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.718" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:55:24.716" endtime="20201029 12:55:24.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.722" level="INFO">VALUE: [1.4930999999999278e-05, 1.4471999999998014e-05, 1.4471999999998014e-05, 1.4680999999999028e-05, 1.4306000000002123e-05, 1.4277999999999513e-05, 1.4917000000003178e-05, 1.4527999999999763e-05, 1.4597000000001609e-05, 1.4556000000002373e-05, 1.4320000000001692e-05, 1.4945000000002318e-05, 1.4555999999998903e-05, 1.5056000000002873e-05, 1.4805999999999153e-05, 1.4749999999997404e-05, 1.4848000000001332e-05, 1.455499999999943e-05, 1.4708999999998168e-05, 1.5014000000000693e-05, 1.4723000000001207e-05, 1.4847999999997863e-05, 1.4889000000000568e-05, 1.4902999999996669e-05, 1.4569999999998473e-05, 1.4652999999999888e-05, 1.502700000000079e-05, 1.4263999999999943e-05, 1.479100000000011e-05, 1.5166999999999958e-05, 1.5125000000001249e-05, 1.4819000000002719e-05, 1.4889000000000568e-05, 1.4222000000001234e-05, 1.4665999999999985e-05, 1.4652000000000415e-05, 1.4222000000001234e-05, 1.4916000000000235e-05, 1.4500000000000624e-05, 1.483299999999882e-05, 1.4707999999998694e-05, 1.5193999999999624e-05, 1.4360999999997459e-05, 1.4819999999998723e-05, 1.4638999999996849e-05, 1.5193999999999624e-05, 1.4833000000002289e-05, 1.4402999999999638e-05, 1.4250000000000373e-05, 1.4221999999997764e-05]</msg>
<status status="PASS" starttime="20201029 12:55:24.719" endtime="20201029 12:55:24.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.712" endtime="20201029 12:55:24.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:24.729" endtime="20201029 12:55:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.728" endtime="20201029 12:55:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.726" endtime="20201029 12:55:24.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.364" endtime="20201029 12:55:24.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.363" endtime="20201029 12:55:24.750"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.759" endtime="20201029 12:55:24.775"></status>
</kw>
<msg timestamp="20201029 12:55:24.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:24.757" endtime="20201029 12:55:24.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:24.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:24.777" endtime="20201029 12:55:24.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.779" endtime="20201029 12:55:24.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.755" endtime="20201029 12:55:24.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.752" endtime="20201029 12:55:24.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:24.788" endtime="20201029 12:55:25.076"></status>
</kw>
<msg timestamp="20201029 12:55:25.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020621792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:24.787" endtime="20201029 12:55:25.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020621792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:25.080" endtime="20201029 12:55:25.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.088" endtime="20201029 12:55:25.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.784" endtime="20201029 12:55:25.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.783" endtime="20201029 12:55:25.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:25.095" level="INFO">${RESULT} = [{'diff': 1.4903000000000138e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.4764000000000443e-05}, {'diff': 1.4889000000000568e-05}, {'diff': 1.4638000000000845e-05}, {'diff': 1.4847999999997863e-...</msg>
<status status="PASS" starttime="20201029 12:55:25.092" endtime="20201029 12:55:25.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:25.100" level="INFO">${ACCURACY} = {'diff': [1.4903000000000138e-05, 1.4361000000000929e-05, 1.4764000000000443e-05, 1.4889000000000568e-05, 1.4638000000000845e-05, 1.4847999999997863e-05, 1.4985999999998084e-05, 1.4763999999996974e-05...</msg>
<status status="PASS" starttime="20201029 12:55:25.096" endtime="20201029 12:55:25.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.104" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:55:25.103" endtime="20201029 12:55:25.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.107" level="INFO">VALUE: [1.4903000000000138e-05, 1.4361000000000929e-05, 1.4764000000000443e-05, 1.4889000000000568e-05, 1.4638000000000845e-05, 1.4847999999997863e-05, 1.4985999999998084e-05, 1.4763999999996974e-05, 1.4250000000000373e-05, 1.4416999999999208e-05, 1.5014000000000693e-05, 1.4486000000001054e-05, 1.4750000000000874e-05, 1.452700000000029e-05, 1.505499999999993e-05, 1.5153000000000388e-05, 1.4249999999996904e-05, 1.5097000000002109e-05, 1.4250000000000373e-05, 1.4222000000001234e-05, 1.4652000000000415e-05, 1.4693999999999124e-05, 1.4541000000003329e-05, 1.4957999999998944e-05, 1.4444999999998348e-05, 1.4999999999997654e-05, 1.4417000000002678e-05, 1.4568999999999e-05, 1.454099999999986e-05, 1.4360999999997459e-05, 1.4541999999999333e-05, 1.508299999999907e-05, 1.4416999999999208e-05, 1.4430999999998778e-05, 1.50689999999995e-05, 1.509699999999864e-05, 1.4708000000002164e-05, 1.4221999999997764e-05, 1.5055999999999403e-05, 1.4986000000001554e-05, 1.4791999999999583e-05, 1.4570000000001943e-05, 1.4778000000000013e-05, 1.5166999999999958e-05, 1.5111000000001679e-05, 1.5041999999999833e-05, 1.4958999999998418e-05, 1.5098000000001582e-05, 1.4416999999999208e-05, 1.5180999999999528e-05]</msg>
<status status="PASS" starttime="20201029 12:55:25.105" endtime="20201029 12:55:25.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.101" endtime="20201029 12:55:25.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:25.111" endtime="20201029 12:55:25.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.110" endtime="20201029 12:55:25.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.109" endtime="20201029 12:55:25.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.751" endtime="20201029 12:55:25.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:24.750" endtime="20201029 12:55:25.132"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.141" endtime="20201029 12:55:25.156"></status>
</kw>
<msg timestamp="20201029 12:55:25.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:25.139" endtime="20201029 12:55:25.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:25.157" endtime="20201029 12:55:25.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.160" endtime="20201029 12:55:25.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.137" endtime="20201029 12:55:25.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.135" endtime="20201029 12:55:25.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.169" endtime="20201029 12:55:25.476"></status>
</kw>
<msg timestamp="20201029 12:55:25.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:25.168" endtime="20201029 12:55:25.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:25.480" endtime="20201029 12:55:25.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.488" endtime="20201029 12:55:25.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.165" endtime="20201029 12:55:25.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.164" endtime="20201029 12:55:25.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:25.495" level="INFO">${RESULT} = [{'diff': 1.5014000000000693e-05}, {'diff': 1.4917000000003178e-05}, {'diff': 1.434699999999789e-05}, {'diff': 1.511099999999821e-05}, {'diff': 1.504099999999689e-05}, {'diff': 1.4957999999998944e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:25.492" endtime="20201029 12:55:25.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:25.499" level="INFO">${ACCURACY} = {'diff': [1.5014000000000693e-05, 1.4917000000003178e-05, 1.434699999999789e-05, 1.511099999999821e-05, 1.504099999999689e-05, 1.4957999999998944e-05, 1.4722000000001734e-05, 1.5139000000000818e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:55:25.496" endtime="20201029 12:55:25.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.503" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:55:25.502" endtime="20201029 12:55:25.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.506" level="INFO">VALUE: [1.5014000000000693e-05, 1.4917000000003178e-05, 1.434699999999789e-05, 1.511099999999821e-05, 1.504099999999689e-05, 1.4957999999998944e-05, 1.4722000000001734e-05, 1.5139000000000818e-05, 1.4736000000001304e-05, 1.4527999999999763e-05, 1.4833000000002289e-05, 1.5180999999999528e-05, 1.4583000000002039e-05, 1.4750000000000874e-05, 1.4750000000000874e-05, 1.5194999999999098e-05, 1.484699999999839e-05, 1.4472000000001484e-05, 1.5028000000000263e-05, 1.4222000000001234e-05, 1.4236000000000804e-05, 1.5195000000002568e-05, 1.4916999999999708e-05, 1.4916999999999708e-05, 1.4639000000000318e-05, 1.4778000000000013e-05, 1.4819999999998723e-05, 1.4639000000000318e-05, 1.4514000000000193e-05, 1.4263999999999943e-05, 1.4570000000001943e-05, 1.4709000000001637e-05, 1.4500000000000624e-05, 1.4889000000000568e-05, 1.4360999999997459e-05, 1.452700000000029e-05, 1.480499999999968e-05, 1.4874999999997529e-05, 1.430499999999918e-05, 1.4236000000000804e-05, 1.5014000000000693e-05, 1.5180000000000055e-05, 1.5193999999999624e-05, 1.455499999999943e-05, 1.505499999999993e-05, 1.4957999999998944e-05, 1.4263999999999943e-05, 1.5125000000001249e-05, 1.4916999999999708e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201029 12:55:25.505" endtime="20201029 12:55:25.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.500" endtime="20201029 12:55:25.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:25.510" endtime="20201029 12:55:25.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.509" endtime="20201029 12:55:25.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.508" endtime="20201029 12:55:25.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.133" endtime="20201029 12:55:25.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.132" endtime="20201029 12:55:25.531"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.540" endtime="20201029 12:55:25.557"></status>
</kw>
<msg timestamp="20201029 12:55:25.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:25.538" endtime="20201029 12:55:25.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:25.558" endtime="20201029 12:55:25.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.561" endtime="20201029 12:55:25.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.536" endtime="20201029 12:55:25.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.534" endtime="20201029 12:55:25.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.570" endtime="20201029 12:55:25.856"></status>
</kw>
<msg timestamp="20201029 12:55:25.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021215194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021229528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:25.568" endtime="20201029 12:55:25.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021215194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021229528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:25.860" endtime="20201029 12:55:25.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.868" endtime="20201029 12:55:25.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.566" endtime="20201029 12:55:25.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.564" endtime="20201029 12:55:25.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:25.875" level="INFO">${RESULT} = [{'diff': 1.4334000000001262e-05}, {'diff': 1.4652999999999888e-05}, {'diff': 1.4708999999998168e-05}, {'diff': 1.4250000000000373e-05}, {'diff': 1.4722000000001734e-05}, {'diff': 1.5181000000002998e-...</msg>
<status status="PASS" starttime="20201029 12:55:25.872" endtime="20201029 12:55:25.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:25.879" level="INFO">${ACCURACY} = {'diff': [1.4334000000001262e-05, 1.4652999999999888e-05, 1.4708999999998168e-05, 1.4250000000000373e-05, 1.4722000000001734e-05, 1.5181000000002998e-05, 1.4721999999998264e-05, 1.4223000000000707e-05...</msg>
<status status="PASS" starttime="20201029 12:55:25.876" endtime="20201029 12:55:25.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.884" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:55:25.883" endtime="20201029 12:55:25.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.886" level="INFO">VALUE: [1.4334000000001262e-05, 1.4652999999999888e-05, 1.4708999999998168e-05, 1.4250000000000373e-05, 1.4722000000001734e-05, 1.5181000000002998e-05, 1.4721999999998264e-05, 1.4223000000000707e-05, 1.4680999999999028e-05, 1.4249999999996904e-05, 1.4250000000000373e-05, 1.426300000000047e-05, 1.4611000000001179e-05, 1.501300000000122e-05, 1.4569000000002469e-05, 1.5221999999998764e-05, 1.4957999999998944e-05, 1.4485999999997584e-05, 1.4514000000000193e-05, 1.4429999999999304e-05, 1.4693999999999124e-05, 1.5014000000000693e-05, 1.5111000000001679e-05, 1.5125000000001249e-05, 1.5166999999999958e-05, 1.4943999999999374e-05, 1.4929999999999805e-05, 1.458299999999857e-05, 1.4263999999999943e-05, 1.4764000000000443e-05, 1.4569000000002469e-05, 1.4389000000000068e-05, 1.4514000000000193e-05, 1.4250000000000373e-05, 1.4430999999998778e-05, 1.4221999999997764e-05, 1.4986999999997558e-05, 1.4986000000001554e-05, 1.4778000000000013e-05, 1.4750000000000874e-05, 1.4458999999997918e-05, 1.4750000000000874e-05, 1.4541999999999333e-05, 1.4389000000000068e-05, 1.5139000000000818e-05, 1.4263999999999943e-05, 1.4471999999998014e-05, 1.4735999999997834e-05, 1.4348000000000832e-05, 1.4487000000000527e-05]</msg>
<status status="PASS" starttime="20201029 12:55:25.885" endtime="20201029 12:55:25.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.880" endtime="20201029 12:55:25.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:25.892" endtime="20201029 12:55:25.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.890" endtime="20201029 12:55:25.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.889" endtime="20201029 12:55:25.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.532" endtime="20201029 12:55:25.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.532" endtime="20201029 12:55:25.913"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.922" endtime="20201029 12:55:25.937"></status>
</kw>
<msg timestamp="20201029 12:55:25.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:25.920" endtime="20201029 12:55:25.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:25.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:25.939" endtime="20201029 12:55:25.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.942" endtime="20201029 12:55:25.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.918" endtime="20201029 12:55:25.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.916" endtime="20201029 12:55:25.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:25.951" endtime="20201029 12:55:26.254"></status>
</kw>
<msg timestamp="20201029 12:55:26.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:25.949" endtime="20201029 12:55:26.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:26.264" endtime="20201029 12:55:26.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.277" endtime="20201029 12:55:26.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.946" endtime="20201029 12:55:26.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.945" endtime="20201029 12:55:26.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:26.284" level="INFO">${RESULT} = [{'diff': 1.4319000000002219e-05}, {'diff': 1.4972000000001984e-05}, {'diff': 1.4500000000000624e-05}, {'diff': 1.4624999999997279e-05}, {'diff': 1.4929999999999805e-05}, {'diff': 1.4957999999998944e-...</msg>
<status status="PASS" starttime="20201029 12:55:26.280" endtime="20201029 12:55:26.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:26.289" level="INFO">${ACCURACY} = {'diff': [1.4319000000002219e-05, 1.4972000000001984e-05, 1.4500000000000624e-05, 1.4624999999997279e-05, 1.4929999999999805e-05, 1.4957999999998944e-05, 1.508299999999907e-05, 1.50689999999995e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:55:26.285" endtime="20201029 12:55:26.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.293" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:55:26.292" endtime="20201029 12:55:26.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.296" level="INFO">VALUE: [1.4319000000002219e-05, 1.4972000000001984e-05, 1.4500000000000624e-05, 1.4624999999997279e-05, 1.4929999999999805e-05, 1.4957999999998944e-05, 1.508299999999907e-05, 1.50689999999995e-05, 1.4679999999999555e-05, 1.4764000000000443e-05, 1.459699999999814e-05, 1.4638999999996849e-05, 1.5055999999999403e-05, 1.4597000000001609e-05, 1.4666999999999458e-05, 1.5014000000000693e-05, 1.4903000000000138e-05, 1.4721999999998264e-05, 1.4361000000000929e-05, 1.4208000000001664e-05, 1.4778000000000013e-05, 1.4972999999997988e-05, 1.4222000000001234e-05, 1.4721999999998264e-05, 1.5083999999998543e-05, 1.4680999999999028e-05, 1.4514000000000193e-05, 1.5194999999999098e-05, 1.4209000000001137e-05, 1.4681000000002498e-05, 1.486099999999796e-05, 1.5166999999999958e-05, 1.4319999999998223e-05, 1.4736000000001304e-05, 1.4862000000000902e-05, 1.5166999999999958e-05, 1.5041999999999833e-05, 1.4833999999998293e-05, 1.4471999999998014e-05, 1.4903000000000138e-05, 1.429099999999961e-05, 1.5069999999998973e-05, 1.4707999999998694e-05, 1.4443999999998874e-05, 1.4388000000000595e-05, 1.4721999999998264e-05, 1.481899999999925e-05, 1.4916000000000235e-05, 1.5165999999997015e-05, 1.4778000000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:55:26.294" endtime="20201029 12:55:26.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.289" endtime="20201029 12:55:26.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:26.301" endtime="20201029 12:55:26.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.299" endtime="20201029 12:55:26.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.297" endtime="20201029 12:55:26.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.914" endtime="20201029 12:55:26.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:25.913" endtime="20201029 12:55:26.321"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.330" endtime="20201029 12:55:26.344"></status>
</kw>
<msg timestamp="20201029 12:55:26.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:26.328" endtime="20201029 12:55:26.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:26.346" endtime="20201029 12:55:26.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.348" endtime="20201029 12:55:26.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.326" endtime="20201029 12:55:26.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.324" endtime="20201029 12:55:26.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.357" endtime="20201029 12:55:26.643"></status>
</kw>
<msg timestamp="20201029 12:55:26.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019421875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:26.356" endtime="20201029 12:55:26.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019421875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:26.647" endtime="20201029 12:55:26.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.655" endtime="20201029 12:55:26.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.353" endtime="20201029 12:55:26.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.351" endtime="20201029 12:55:26.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:26.662" level="INFO">${RESULT} = [{'diff': 1.5111000000001679e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.4541999999999333e-05}, {'diff': 1.431899999999875e-05}, {'diff': 1.459699999999814e-05}, {'diff': 1.4207999999998194e-05...</msg>
<status status="PASS" starttime="20201029 12:55:26.659" endtime="20201029 12:55:26.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:26.666" level="INFO">${ACCURACY} = {'diff': [1.5111000000001679e-05, 1.4291999999999083e-05, 1.4541999999999333e-05, 1.431899999999875e-05, 1.459699999999814e-05, 1.4207999999998194e-05, 1.4680999999999028e-05, 1.5083000000002539e-05, ...</msg>
<status status="PASS" starttime="20201029 12:55:26.663" endtime="20201029 12:55:26.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.670" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:55:26.669" endtime="20201029 12:55:26.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.673" level="INFO">VALUE: [1.5111000000001679e-05, 1.4291999999999083e-05, 1.4541999999999333e-05, 1.431899999999875e-05, 1.459699999999814e-05, 1.4207999999998194e-05, 1.4680999999999028e-05, 1.5083000000002539e-05, 1.4875000000000999e-05, 1.5069999999998973e-05, 1.4930999999999278e-05, 1.4652999999999888e-05, 1.4430999999998778e-05, 1.4750000000000874e-05, 1.4514000000000193e-05, 1.4221999999997764e-05, 1.4514000000000193e-05, 1.4541999999999333e-05, 1.4334000000001262e-05, 1.4972000000001984e-05, 1.4764000000000443e-05, 1.4820000000002193e-05, 1.4916000000000235e-05, 1.4848000000001332e-05, 1.502699999999732e-05, 1.4930999999999278e-05, 1.4362000000000402e-05, 1.4362000000000402e-05, 1.427700000000004e-05, 1.501300000000122e-05, 1.4902000000000665e-05, 1.4236000000000804e-05, 1.454099999999986e-05, 1.5139000000000818e-05, 1.4735999999997834e-05, 1.484699999999839e-05, 1.504100000000036e-05, 1.5193999999999624e-05, 1.5028000000000263e-05, 1.508299999999907e-05, 1.4625000000000749e-05, 1.4486000000001054e-05, 1.4985999999998084e-05, 1.4958000000002414e-05, 1.481899999999925e-05, 1.4541999999999333e-05, 1.4250000000000373e-05, 1.4957999999998944e-05, 1.4445000000001817e-05, 1.4249999999996904e-05]</msg>
<status status="PASS" starttime="20201029 12:55:26.671" endtime="20201029 12:55:26.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.667" endtime="20201029 12:55:26.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:26.678" endtime="20201029 12:55:26.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.676" endtime="20201029 12:55:26.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.675" endtime="20201029 12:55:26.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.322" endtime="20201029 12:55:26.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.322" endtime="20201029 12:55:26.698"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.707" endtime="20201029 12:55:26.724"></status>
</kw>
<msg timestamp="20201029 12:55:26.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:26.706" endtime="20201029 12:55:26.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:26.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:26.726" endtime="20201029 12:55:26.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.728" endtime="20201029 12:55:26.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.703" endtime="20201029 12:55:26.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.701" endtime="20201029 12:55:26.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:26.737" endtime="20201029 12:55:27.023"></status>
</kw>
<msg timestamp="20201029 12:55:27.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021004097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:26.736" endtime="20201029 12:55:27.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021004097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:27.027" endtime="20201029 12:55:27.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.035" endtime="20201029 12:55:27.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.733" endtime="20201029 12:55:27.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.731" endtime="20201029 12:55:27.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:27.042" level="INFO">${RESULT} = [{'diff': 1.4375000000000498e-05}, {'diff': 1.4708000000002164e-05}, {'diff': 1.484699999999839e-05}, {'diff': 1.5069000000002969e-05}, {'diff': 1.4722000000001734e-05}, {'diff': 1.4903000000000138e-0...</msg>
<status status="PASS" starttime="20201029 12:55:27.039" endtime="20201029 12:55:27.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:27.046" level="INFO">${ACCURACY} = {'diff': [1.4375000000000498e-05, 1.4708000000002164e-05, 1.484699999999839e-05, 1.5069000000002969e-05, 1.4722000000001734e-05, 1.4903000000000138e-05, 1.4693999999999124e-05, 1.4250000000000373e-05,...</msg>
<status status="PASS" starttime="20201029 12:55:27.043" endtime="20201029 12:55:27.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.051" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:55:27.050" endtime="20201029 12:55:27.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.053" level="INFO">VALUE: [1.4375000000000498e-05, 1.4708000000002164e-05, 1.484699999999839e-05, 1.5069000000002969e-05, 1.4722000000001734e-05, 1.4903000000000138e-05, 1.4693999999999124e-05, 1.4250000000000373e-05, 1.4402999999999638e-05, 1.4319999999998223e-05, 1.4555999999998903e-05, 1.4944000000002844e-05, 1.4236000000000804e-05, 1.4972000000001984e-05, 1.433299999999832e-05, 1.4389000000000068e-05, 1.5166999999999958e-05, 1.4555999999998903e-05, 1.4820000000002193e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.5069999999998973e-05, 1.5070000000002443e-05, 1.4223000000000707e-05, 1.5000000000001124e-05, 1.4334000000001262e-05, 1.4862000000000902e-05, 1.4486999999997058e-05, 1.4652999999999888e-05, 1.4222000000001234e-05, 1.4736999999997308e-05, 1.4902000000000665e-05, 1.4263999999999943e-05, 1.461099999999771e-05, 1.47629999999975e-05, 1.4472000000001484e-05, 1.4236000000000804e-05, 1.5000000000001124e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4333000000001789e-05, 1.480499999999968e-05, 1.429099999999961e-05, 1.429099999999961e-05, 1.4735999999997834e-05, 1.50689999999995e-05, 1.5139000000000818e-05, 1.4916999999999708e-05, 1.4611000000001179e-05, 1.430499999999918e-05]</msg>
<status status="PASS" starttime="20201029 12:55:27.052" endtime="20201029 12:55:27.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.047" endtime="20201029 12:55:27.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:27.059" endtime="20201029 12:55:27.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.057" endtime="20201029 12:55:27.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.056" endtime="20201029 12:55:27.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.699" endtime="20201029 12:55:27.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:26.699" endtime="20201029 12:55:27.080"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.088" endtime="20201029 12:55:27.103"></status>
</kw>
<msg timestamp="20201029 12:55:27.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:27.087" endtime="20201029 12:55:27.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:27.104" endtime="20201029 12:55:27.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.107" endtime="20201029 12:55:27.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.084" endtime="20201029 12:55:27.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.082" endtime="20201029 12:55:27.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.116" endtime="20201029 12:55:27.404"></status>
</kw>
<msg timestamp="20201029 12:55:27.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:27.114" endtime="20201029 12:55:27.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:27.408" endtime="20201029 12:55:27.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.416" endtime="20201029 12:55:27.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.112" endtime="20201029 12:55:27.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.110" endtime="20201029 12:55:27.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:27.423" level="INFO">${RESULT} = [{'diff': 1.5944999999999848e-05}, {'diff': 1.608300000000007e-05}, {'diff': 1.6014000000001694e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.5806000000000153e-05}, {'diff': 1.591700000000071e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:27.420" endtime="20201029 12:55:27.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:27.428" level="INFO">${ACCURACY} = {'diff': [1.5944999999999848e-05, 1.608300000000007e-05, 1.6014000000001694e-05, 1.565300000000089e-05, 1.5806000000000153e-05, 1.591700000000071e-05, 1.612500000000225e-05, 1.6013999999998224e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:55:27.424" endtime="20201029 12:55:27.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.432" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:55:27.431" endtime="20201029 12:55:27.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.435" level="INFO">VALUE: [1.5944999999999848e-05, 1.608300000000007e-05, 1.6014000000001694e-05, 1.565300000000089e-05, 1.5806000000000153e-05, 1.591700000000071e-05, 1.612500000000225e-05, 1.6013999999998224e-05, 1.6042000000000833e-05, 1.5875000000002e-05, 1.6195000000000098e-05, 1.536100000000193e-05, 1.562500000000175e-05, 1.604100000000136e-05, 1.5221999999998764e-05, 1.581900000000025e-05, 1.6194000000000625e-05, 1.559700000000261e-05, 1.534700000000236e-05, 1.534699999999889e-05, 1.5666000000000985e-05, 1.5292000000000083e-05, 1.5750000000001874e-05, 1.613900000000182e-05, 1.5971999999999514e-05, 1.588900000000157e-05, 1.5999999999998654e-05, 1.5971999999999514e-05, 1.5569999999999473e-05, 1.6028000000001263e-05, 1.6013999999998224e-05, 1.5957999999999944e-05, 1.530499999999671e-05, 1.5277999999997044e-05, 1.6194000000000625e-05, 1.5957999999999944e-05, 1.5292000000000083e-05, 1.533299999999932e-05, 1.5694000000000125e-05, 1.590300000000114e-05, 1.5542000000000333e-05, 1.5292000000000083e-05, 1.5931000000000278e-05, 1.5221999999998764e-05, 1.586099999999896e-05, 1.588900000000157e-05, 1.5735999999998834e-05, 1.566700000000046e-05, 1.5931000000000278e-05, 1.5569999999999473e-05]</msg>
<status status="PASS" starttime="20201029 12:55:27.433" endtime="20201029 12:55:27.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.429" endtime="20201029 12:55:27.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:27.440" endtime="20201029 12:55:27.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.438" endtime="20201029 12:55:27.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.437" endtime="20201029 12:55:27.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.081" endtime="20201029 12:55:27.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.080" endtime="20201029 12:55:27.460"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.469" endtime="20201029 12:55:27.483"></status>
</kw>
<msg timestamp="20201029 12:55:27.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:27.467" endtime="20201029 12:55:27.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:27.485" endtime="20201029 12:55:27.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.487" endtime="20201029 12:55:27.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.465" endtime="20201029 12:55:27.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.463" endtime="20201029 12:55:27.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.496" endtime="20201029 12:55:27.799"></status>
</kw>
<msg timestamp="20201029 12:55:27.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:27.495" endtime="20201029 12:55:27.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:27.804" endtime="20201029 12:55:27.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.812" endtime="20201029 12:55:27.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.492" endtime="20201029 12:55:27.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.490" endtime="20201029 12:55:27.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:27.818" level="INFO">${RESULT} = [{'diff': 1.6250000000002374e-05}, {'diff': 1.68889999999991e-05}, {'diff': 1.6735999999999834e-05}, {'diff': 1.6569000000001e-05}, {'diff': 1.668100000000103e-05}, {'diff': 1.716700000000196e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:27.815" endtime="20201029 12:55:27.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:27.822" level="INFO">${ACCURACY} = {'diff': [1.6250000000002374e-05, 1.68889999999991e-05, 1.6735999999999834e-05, 1.6569000000001e-05, 1.668100000000103e-05, 1.716700000000196e-05, 1.6694000000001125e-05, 1.6528000000001764e-05, 1.630...</msg>
<status status="PASS" starttime="20201029 12:55:27.819" endtime="20201029 12:55:27.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.827" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:55:27.826" endtime="20201029 12:55:27.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.829" level="INFO">VALUE: [1.6250000000002374e-05, 1.68889999999991e-05, 1.6735999999999834e-05, 1.6569000000001e-05, 1.668100000000103e-05, 1.716700000000196e-05, 1.6694000000001125e-05, 1.6528000000001764e-05, 1.6306000000000653e-05, 1.6458999999999918e-05, 1.643100000000078e-05, 1.6320000000000223e-05, 1.6320000000000223e-05, 1.668099999999756e-05, 1.686100000000343e-05, 1.7195000000001098e-05, 1.627700000000204e-05, 1.6722999999999738e-05, 1.693100000000128e-05, 1.6986000000000084e-05, 1.6820000000000723e-05, 1.681900000000125e-05, 1.6708000000000695e-05, 1.688900000000257e-05, 1.6264000000001944e-05, 1.637499999999903e-05, 1.708300000000107e-05, 1.6944000000001375e-05, 1.655500000000143e-05, 1.6569000000001e-05, 1.656899999999753e-05, 1.6957999999997475e-05, 1.630500000000118e-05, 1.6901999999999195e-05, 1.631900000000075e-05, 1.6665999999998515e-05, 1.680500000000168e-05, 1.636099999999946e-05, 1.712499999999978e-05, 1.7000000000003124e-05, 1.658300000000057e-05, 1.691699999999824e-05, 1.6430000000001305e-05, 1.6444000000000875e-05, 1.663900000000232e-05, 1.6750000000002874e-05, 1.712499999999978e-05, 1.6735999999999834e-05, 1.636100000000293e-05, 1.683299999999735e-05]</msg>
<status status="PASS" starttime="20201029 12:55:27.828" endtime="20201029 12:55:27.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.823" endtime="20201029 12:55:27.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:27.834" endtime="20201029 12:55:27.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.833" endtime="20201029 12:55:27.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.832" endtime="20201029 12:55:27.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.461" endtime="20201029 12:55:27.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.461" endtime="20201029 12:55:27.855"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.864" endtime="20201029 12:55:27.879"></status>
</kw>
<msg timestamp="20201029 12:55:27.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:27.862" endtime="20201029 12:55:27.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:27.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:27.881" endtime="20201029 12:55:27.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.883" endtime="20201029 12:55:27.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.859" endtime="20201029 12:55:27.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.857" endtime="20201029 12:55:27.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:27.892" endtime="20201029 12:55:28.179"></status>
</kw>
<msg timestamp="20201029 12:55:28.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:27.891" endtime="20201029 12:55:28.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:28.183" endtime="20201029 12:55:28.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.191" endtime="20201029 12:55:28.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.888" endtime="20201029 12:55:28.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.887" endtime="20201029 12:55:28.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:28.198" level="INFO">${RESULT} = [{'diff': 1.8084000000001543e-05}, {'diff': 1.7915999999999765e-05}, {'diff': 1.737500000000003e-05}, {'diff': 1.7777999999999544e-05}, {'diff': 1.741699999999874e-05}, {'diff': 1.787499999999706e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:28.194" endtime="20201029 12:55:28.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:28.202" level="INFO">${ACCURACY} = {'diff': [1.8084000000001543e-05, 1.7915999999999765e-05, 1.737500000000003e-05, 1.7777999999999544e-05, 1.741699999999874e-05, 1.787499999999706e-05, 1.8056000000002403e-05, 1.7915999999999765e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:55:28.199" endtime="20201029 12:55:28.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.206" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:55:28.205" endtime="20201029 12:55:28.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.211" level="INFO">VALUE: [1.8084000000001543e-05, 1.7915999999999765e-05, 1.737500000000003e-05, 1.7777999999999544e-05, 1.741699999999874e-05, 1.787499999999706e-05, 1.8056000000002403e-05, 1.7915999999999765e-05, 1.7749999999996935e-05, 1.7888000000000626e-05, 1.813900000000035e-05, 1.7721999999997795e-05, 1.736100000000046e-05, 1.805499999999946e-05, 1.787500000000053e-05, 1.7457999999997975e-05, 1.7528000000002764e-05, 1.7916000000003235e-05, 1.7763999999999974e-05, 1.812500000000078e-05, 1.7222000000000764e-05, 1.7458000000001445e-05, 1.8055999999998934e-05, 1.815299999999992e-05, 1.758300000000157e-05, 1.7277999999999044e-05, 1.7221999999997295e-05, 1.7805999999998684e-05, 1.762500000000028e-05, 1.761100000000071e-05, 1.765299999999942e-05, 1.7959000000001418e-05, 1.7707999999998225e-05, 1.737500000000003e-05, 1.7915999999999765e-05, 1.7319999999997754e-05, 1.7584000000001043e-05, 1.7986000000001084e-05, 1.7236000000000334e-05, 1.7500000000000154e-05, 1.794499999999838e-05, 1.8014000000000224e-05, 1.7973000000000988e-05, 1.7848000000000863e-05, 1.777700000000007e-05, 1.7459000000000918e-05, 1.7820000000001723e-05, 1.7707999999998225e-05, 1.7902000000000196e-05, 1.787500000000053e-05]</msg>
<status status="PASS" starttime="20201029 12:55:28.207" endtime="20201029 12:55:28.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.203" endtime="20201029 12:55:28.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:28.217" endtime="20201029 12:55:28.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.215" endtime="20201029 12:55:28.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.214" endtime="20201029 12:55:28.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.856" endtime="20201029 12:55:28.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:27.855" endtime="20201029 12:55:28.237"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.246" endtime="20201029 12:55:28.260"></status>
</kw>
<msg timestamp="20201029 12:55:28.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:28.244" endtime="20201029 12:55:28.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:28.262" endtime="20201029 12:55:28.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.264" endtime="20201029 12:55:28.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.242" endtime="20201029 12:55:28.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.240" endtime="20201029 12:55:28.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.273" endtime="20201029 12:55:28.559"></status>
</kw>
<msg timestamp="20201029 12:55:28.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:28.272" endtime="20201029 12:55:28.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:28.564" endtime="20201029 12:55:28.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.572" endtime="20201029 12:55:28.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.269" endtime="20201029 12:55:28.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.268" endtime="20201029 12:55:28.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:28.578" level="INFO">${RESULT} = [{'diff': 1.886100000000196e-05}, {'diff': 1.852700000000082e-05}, {'diff': 1.8887999999998156e-05}, {'diff': 1.909699999999917e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.8735999999998365e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:28.575" endtime="20201029 12:55:28.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:28.583" level="INFO">${ACCURACY} = {'diff': [1.886100000000196e-05, 1.852700000000082e-05, 1.8887999999998156e-05, 1.909699999999917e-05, 1.8443999999999405e-05, 1.8735999999998365e-05, 1.88890000000011e-05, 1.8514000000000724e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:55:28.579" endtime="20201029 12:55:28.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.588" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:55:28.586" endtime="20201029 12:55:28.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.590" level="INFO">VALUE: [1.886100000000196e-05, 1.852700000000082e-05, 1.8887999999998156e-05, 1.909699999999917e-05, 1.8443999999999405e-05, 1.8735999999998365e-05, 1.88890000000011e-05, 1.8514000000000724e-05, 1.8722000000002265e-05, 1.831899999999928e-05, 1.83890000000006e-05, 1.8264000000000474e-05, 1.8263999999997005e-05, 1.888899999999763e-05, 1.854100000000039e-05, 1.8570000000002473e-05, 1.8514000000000724e-05, 1.869499999999913e-05, 1.8764000000000974e-05, 1.862500000000128e-05, 1.911100000000221e-05, 1.9014000000001224e-05, 1.8806000000003154e-05, 1.8278000000000044e-05, 1.836100000000146e-05, 1.8819999999999254e-05, 1.8236000000001334e-05, 1.893099999999981e-05, 1.916700000000049e-05, 1.887500000000153e-05, 1.891700000000024e-05, 1.8486000000001584e-05, 1.919499999999963e-05, 1.911099999999874e-05, 1.8957999999999475e-05, 1.8987000000001558e-05, 1.8569000000003e-05, 1.9166000000001016e-05, 1.8306000000002653e-05, 1.8764000000000974e-05, 1.9028000000000794e-05, 1.830499999999971e-05, 1.85829999999991e-05, 1.8902000000001196e-05, 1.881899999999978e-05, 1.859699999999867e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.866699999999999e-05, 1.912499999999831e-05]</msg>
<status status="PASS" starttime="20201029 12:55:28.589" endtime="20201029 12:55:28.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.584" endtime="20201029 12:55:28.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:28.595" endtime="20201029 12:55:28.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.594" endtime="20201029 12:55:28.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.593" endtime="20201029 12:55:28.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.238" endtime="20201029 12:55:28.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.238" endtime="20201029 12:55:28.616"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.625" endtime="20201029 12:55:28.639"></status>
</kw>
<msg timestamp="20201029 12:55:28.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:28.623" endtime="20201029 12:55:28.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:28.640" endtime="20201029 12:55:28.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.643" endtime="20201029 12:55:28.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.621" endtime="20201029 12:55:28.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.619" endtime="20201029 12:55:28.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.652" endtime="20201029 12:55:28.939"></status>
</kw>
<msg timestamp="20201029 12:55:28.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:28.650" endtime="20201029 12:55:28.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:28.943" endtime="20201029 12:55:28.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:28.951" endtime="20201029 12:55:28.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.647" endtime="20201029 12:55:28.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.646" endtime="20201029 12:55:28.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:28.958" level="INFO">${RESULT} = [{'diff': 1.986099999999949e-05}, {'diff': 1.9348000000002363e-05}, {'diff': 1.9999999999999185e-05}, {'diff': 1.9806000000000684e-05}, {'diff': 1.99029999999982e-05}, {'diff': 1.972300000000274e-05},...</msg>
<status status="PASS" starttime="20201029 12:55:28.955" endtime="20201029 12:55:28.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:28.962" level="INFO">${ACCURACY} = {'diff': [1.986099999999949e-05, 1.9348000000002363e-05, 1.9999999999999185e-05, 1.9806000000000684e-05, 1.99029999999982e-05, 1.972300000000274e-05, 1.9987000000002558e-05, 1.9444000000000405e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:55:28.959" endtime="20201029 12:55:28.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.967" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:55:28.965" endtime="20201029 12:55:28.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:28.969" level="INFO">VALUE: [1.986099999999949e-05, 1.9348000000002363e-05, 1.9999999999999185e-05, 1.9806000000000684e-05, 1.99029999999982e-05, 1.972300000000274e-05, 1.9987000000002558e-05, 1.9444000000000405e-05, 1.9652000000001946e-05, 1.9680000000001086e-05, 1.9735999999999365e-05, 2.013899999999888e-05, 2.00830000000006e-05, 1.936100000000246e-05, 2.012499999999931e-05, 1.9693999999997186e-05, 1.9429999999997366e-05, 2.009700000000017e-05, 1.9721999999999795e-05, 2.0027999999998325e-05, 1.9929999999997866e-05, 1.986100000000296e-05, 2.0028000000001794e-05, 1.961099999999924e-05, 1.9958000000000475e-05, 2.00830000000006e-05, 1.9570000000000004e-05, 1.997299999999952e-05, 1.9944000000000905e-05, 1.919499999999963e-05, 2.0056000000000934e-05, 1.9735999999999365e-05, 1.9972000000000045e-05, 1.9763999999998505e-05, 2.0028000000001794e-05, 1.9235999999998865e-05, 2.0179999999998116e-05, 1.9972000000000045e-05, 1.993100000000081e-05, 1.9250000000001904e-05, 1.9292000000000614e-05, 2.0028000000001794e-05, 1.9820000000000254e-05, 1.94029999999977e-05, 1.9541999999997395e-05, 2.005499999999799e-05, 1.990300000000167e-05, 1.9249999999998435e-05, 1.9485999999999115e-05, 1.9499999999998685e-05]</msg>
<status status="PASS" starttime="20201029 12:55:28.968" endtime="20201029 12:55:28.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.963" endtime="20201029 12:55:28.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:28.974" endtime="20201029 12:55:28.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.973" endtime="20201029 12:55:28.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.971" endtime="20201029 12:55:28.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.617" endtime="20201029 12:55:28.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.617" endtime="20201029 12:55:28.995"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.004" endtime="20201029 12:55:29.020"></status>
</kw>
<msg timestamp="20201029 12:55:29.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:29.002" endtime="20201029 12:55:29.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:29.022" endtime="20201029 12:55:29.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.024" endtime="20201029 12:55:29.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.999" endtime="20201029 12:55:29.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.997" endtime="20201029 12:55:29.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.033" endtime="20201029 12:55:29.337"></status>
</kw>
<msg timestamp="20201029 12:55:29.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:29.032" endtime="20201029 12:55:29.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:29.342" endtime="20201029 12:55:29.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.350" endtime="20201029 12:55:29.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.029" endtime="20201029 12:55:29.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.027" endtime="20201029 12:55:29.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:29.356" level="INFO">${RESULT} = [{'diff': 2.0652000000002946e-05}, {'diff': 2.1042000000002364e-05}, {'diff': 2.0320000000000754e-05}, {'diff': 2.0292000000001614e-05}, {'diff': 2.0387999999999656e-05}, {'diff': 2.0708000000001225e-...</msg>
<status status="PASS" starttime="20201029 12:55:29.353" endtime="20201029 12:55:29.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:29.360" level="INFO">${ACCURACY} = {'diff': [2.0652000000002946e-05, 2.1042000000002364e-05, 2.0320000000000754e-05, 2.0292000000001614e-05, 2.0387999999999656e-05, 2.0708000000001225e-05, 2.0806000000001684e-05, 2.031900000000128e-05,...</msg>
<status status="PASS" starttime="20201029 12:55:29.357" endtime="20201029 12:55:29.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.365" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:55:29.364" endtime="20201029 12:55:29.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.368" level="INFO">VALUE: [2.0652000000002946e-05, 2.1042000000002364e-05, 2.0320000000000754e-05, 2.0292000000001614e-05, 2.0387999999999656e-05, 2.0708000000001225e-05, 2.0806000000001684e-05, 2.031900000000128e-05, 2.1000000000000185e-05, 2.079099999999917e-05, 2.034700000000042e-05, 2.037499999999956e-05, 2.08890000000031e-05, 2.0416000000002266e-05, 2.059700000000067e-05, 2.084699999999745e-05, 2.031899999999781e-05, 2.0429999999998366e-05, 2.1179999999999116e-05, 2.106900000000203e-05, 2.1013999999999755e-05, 2.062499999999981e-05, 2.0277999999998575e-05, 2.066699999999852e-05, 2.04029999999987e-05, 2.0222000000000295e-05, 2.083300000000135e-05, 2.0986000000000615e-05, 2.0472000000000545e-05, 2.072300000000027e-05, 2.0249999999999435e-05, 2.1013999999999755e-05, 2.093100000000181e-05, 2.0306000000001184e-05, 2.094500000000138e-05, 2.0320000000000754e-05, 2.0499999999999685e-05, 2.080499999999874e-05, 2.072300000000027e-05, 2.072300000000027e-05, 2.0986000000000615e-05, 2.1041999999998895e-05, 2.07769999999996e-05, 2.066700000000199e-05, 2.088899999999963e-05, 2.084699999999745e-05, 2.1000000000000185e-05, 2.083300000000135e-05, 2.113899999999988e-05, 2.0679999999998616e-05]</msg>
<status status="PASS" starttime="20201029 12:55:29.366" endtime="20201029 12:55:29.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.361" endtime="20201029 12:55:29.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:29.373" endtime="20201029 12:55:29.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.372" endtime="20201029 12:55:29.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.371" endtime="20201029 12:55:29.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.996" endtime="20201029 12:55:29.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:28.995" endtime="20201029 12:55:29.394"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.403" endtime="20201029 12:55:29.420"></status>
</kw>
<msg timestamp="20201029 12:55:29.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:29.401" endtime="20201029 12:55:29.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:29.421" endtime="20201029 12:55:29.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.424" endtime="20201029 12:55:29.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.399" endtime="20201029 12:55:29.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.397" endtime="20201029 12:55:29.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.433" endtime="20201029 12:55:29.719"></status>
</kw>
<msg timestamp="20201029 12:55:29.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:29.431" endtime="20201029 12:55:29.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020365792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:29.724" endtime="20201029 12:55:29.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.732" endtime="20201029 12:55:29.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.429" endtime="20201029 12:55:29.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.427" endtime="20201029 12:55:29.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:29.738" level="INFO">${RESULT} = [{'diff': 2.2069999999999035e-05}, {'diff': 2.169499999999866e-05}, {'diff': 2.168099999999909e-05}, {'diff': 2.156899999999906e-05}, {'diff': 2.15830000000021e-05}, {'diff': 2.1514000000000255e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:29.735" endtime="20201029 12:55:29.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:29.743" level="INFO">${ACCURACY} = {'diff': [2.2069999999999035e-05, 2.169499999999866e-05, 2.168099999999909e-05, 2.156899999999906e-05, 2.15830000000021e-05, 2.1514000000000255e-05, 2.162499999999734e-05, 2.176300000000103e-05, 2.206...</msg>
<status status="PASS" starttime="20201029 12:55:29.739" endtime="20201029 12:55:29.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.748" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:55:29.747" endtime="20201029 12:55:29.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.750" level="INFO">VALUE: [2.2069999999999035e-05, 2.169499999999866e-05, 2.168099999999909e-05, 2.156899999999906e-05, 2.15830000000021e-05, 2.1514000000000255e-05, 2.162499999999734e-05, 2.176300000000103e-05, 2.2069999999999035e-05, 2.2014000000000755e-05, 2.184700000000192e-05, 2.1236000000000865e-05, 2.1888000000001157e-05, 2.181899999999931e-05, 2.1971999999998576e-05, 2.180499999999974e-05, 2.184699999999845e-05, 2.1707999999998756e-05, 2.1652000000000476e-05, 2.130500000000271e-05, 2.180499999999974e-05, 2.1971999999998576e-05, 2.184699999999845e-05, 2.215300000000045e-05, 2.19030000000002e-05, 2.137500000000056e-05, 2.215300000000045e-05, 2.1957999999999006e-05, 2.193099999999934e-05, 2.1527999999999825e-05, 2.2027999999996856e-05, 2.219499999999916e-05, 2.1707999999998756e-05, 2.218099999999959e-05, 2.120899999999773e-05, 2.1778000000000075e-05, 2.1555999999998965e-05, 2.1778000000000075e-05, 2.216700000000002e-05, 2.19030000000002e-05, 2.165299999999995e-05, 2.1208000000001725e-05, 2.137500000000056e-05, 2.209700000000217e-05, 2.1500000000000685e-05, 2.218099999999959e-05, 2.1833999999998355e-05, 2.181899999999931e-05, 2.161099999999777e-05, 2.1707999999998756e-05]</msg>
<status status="PASS" starttime="20201029 12:55:29.749" endtime="20201029 12:55:29.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.744" endtime="20201029 12:55:29.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:29.755" endtime="20201029 12:55:29.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.754" endtime="20201029 12:55:29.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.753" endtime="20201029 12:55:29.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.395" endtime="20201029 12:55:29.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.394" endtime="20201029 12:55:29.776"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.785" endtime="20201029 12:55:29.801"></status>
</kw>
<msg timestamp="20201029 12:55:29.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:29.783" endtime="20201029 12:55:29.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:29.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:29.803" endtime="20201029 12:55:29.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.805" endtime="20201029 12:55:29.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.781" endtime="20201029 12:55:29.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.779" endtime="20201029 12:55:29.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:29.814" endtime="20201029 12:55:30.102"></status>
</kw>
<msg timestamp="20201029 12:55:30.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020511319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:29.813" endtime="20201029 12:55:30.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020511319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:30.106" endtime="20201029 12:55:30.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.114" endtime="20201029 12:55:30.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.810" endtime="20201029 12:55:30.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.809" endtime="20201029 12:55:30.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:30.121" level="INFO">${RESULT} = [{'diff': 2.262500000000181e-05}, {'diff': 2.293100000000034e-05}, {'diff': 2.237499999999809e-05}, {'diff': 2.220899999999873e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.2861999999998495e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:30.118" endtime="20201029 12:55:30.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:30.125" level="INFO">${ACCURACY} = {'diff': [2.262500000000181e-05, 2.293100000000034e-05, 2.237499999999809e-05, 2.220899999999873e-05, 2.265300000000095e-05, 2.2861999999998495e-05, 2.2540999999997452e-05, 2.2388000000001657e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:55:30.122" endtime="20201029 12:55:30.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.130" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:55:30.128" endtime="20201029 12:55:30.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.132" level="INFO">VALUE: [2.262500000000181e-05, 2.293100000000034e-05, 2.237499999999809e-05, 2.220899999999873e-05, 2.265300000000095e-05, 2.2861999999998495e-05, 2.2540999999997452e-05, 2.2388000000001657e-05, 2.2652000000001477e-05, 2.2651999999998007e-05, 2.2888000000002157e-05, 2.255500000000049e-05, 2.2486000000002115e-05, 2.2290999999997202e-05, 2.2486000000002115e-05, 2.312500000000231e-05, 2.30969999999997e-05, 2.2514000000001255e-05, 2.2305999999999715e-05, 2.24030000000007e-05, 2.262499999999834e-05, 2.2555999999999965e-05, 2.306900000000056e-05, 2.25969999999992e-05, 2.234700000000242e-05, 2.312499999999884e-05, 2.2555999999999965e-05, 2.263900000000138e-05, 2.286099999999902e-05, 2.2735999999998896e-05, 2.2264000000001005e-05, 2.265300000000095e-05, 2.238900000000113e-05, 2.2319999999999285e-05, 2.2569999999999535e-05, 2.247300000000202e-05, 2.311099999999927e-05, 2.2833999999999355e-05, 2.263900000000138e-05, 2.2333999999998855e-05, 2.2207999999999256e-05, 2.2290999999997202e-05, 2.273699999999837e-05, 2.2764000000001505e-05, 2.2221999999998826e-05, 2.2207999999999256e-05, 2.315299999999798e-05, 2.2249999999997966e-05, 2.2749999999998466e-05, 2.2486000000002115e-05]</msg>
<status status="PASS" starttime="20201029 12:55:30.131" endtime="20201029 12:55:30.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.126" endtime="20201029 12:55:30.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:30.137" endtime="20201029 12:55:30.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.136" endtime="20201029 12:55:30.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.134" endtime="20201029 12:55:30.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.777" endtime="20201029 12:55:30.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:29.777" endtime="20201029 12:55:30.158"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.166" endtime="20201029 12:55:30.183"></status>
</kw>
<msg timestamp="20201029 12:55:30.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:30.165" endtime="20201029 12:55:30.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:30.184" endtime="20201029 12:55:30.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.187" endtime="20201029 12:55:30.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.162" endtime="20201029 12:55:30.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.160" endtime="20201029 12:55:30.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.196" endtime="20201029 12:55:30.482"></status>
</kw>
<msg timestamp="20201029 12:55:30.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:30.194" endtime="20201029 12:55:30.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:30.486" endtime="20201029 12:55:30.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.494" endtime="20201029 12:55:30.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.191" endtime="20201029 12:55:30.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.190" endtime="20201029 12:55:30.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:30.501" level="INFO">${RESULT} = [{'diff': 2.3999999999999716e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.3776999999999132e-05}, {'diff': 2.363899999999891e-05}, {'diff': 2.3276999999998632e-05}, {'diff': 2.361099999999977e-05...</msg>
<status status="PASS" starttime="20201029 12:55:30.498" endtime="20201029 12:55:30.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:30.505" level="INFO">${ACCURACY} = {'diff': [2.3999999999999716e-05, 2.3735999999999896e-05, 2.3776999999999132e-05, 2.363899999999891e-05, 2.3276999999998632e-05, 2.361099999999977e-05, 2.3707999999997287e-05, 2.3276999999998632e-05, ...</msg>
<status status="PASS" starttime="20201029 12:55:30.502" endtime="20201029 12:55:30.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.509" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:55:30.508" endtime="20201029 12:55:30.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.512" level="INFO">VALUE: [2.3999999999999716e-05, 2.3735999999999896e-05, 2.3776999999999132e-05, 2.363899999999891e-05, 2.3276999999998632e-05, 2.361099999999977e-05, 2.3707999999997287e-05, 2.3276999999998632e-05, 2.340299999999823e-05, 2.3249999999998966e-05, 2.35970000000002e-05, 2.3485999999999646e-05, 2.366699999999805e-05, 2.3958000000001006e-05, 2.3305999999997246e-05, 2.394500000000091e-05, 2.3944000000001436e-05, 2.3901999999999257e-05, 2.3972000000000576e-05, 2.363899999999891e-05, 2.3542000000001395e-05, 2.35970000000002e-05, 2.3277999999998106e-05, 2.365299999999848e-05, 2.363899999999891e-05, 2.4056000000001465e-05, 2.348700000000259e-05, 2.368100000000109e-05, 2.413899999999941e-05, 2.341700000000127e-05, 2.40970000000007e-05, 2.319500000000016e-05, 2.3832999999997412e-05, 2.3540999999998452e-05, 2.333300000000038e-05, 2.3401999999998757e-05, 2.4208000000001256e-05, 2.418100000000159e-05, 2.3652000000002477e-05, 2.3999999999999716e-05, 2.406900000000156e-05, 2.331900000000081e-05, 2.4165999999999077e-05, 2.3292000000001145e-05, 2.3318999999997342e-05, 2.338899999999866e-05, 2.393099999999787e-05, 2.3235999999999396e-05, 2.3457999999997037e-05, 2.39030000000022e-05]</msg>
<status status="PASS" starttime="20201029 12:55:30.510" endtime="20201029 12:55:30.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.506" endtime="20201029 12:55:30.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:30.518" endtime="20201029 12:55:30.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.516" endtime="20201029 12:55:30.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.515" endtime="20201029 12:55:30.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.159" endtime="20201029 12:55:30.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.158" endtime="20201029 12:55:30.539"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.547" endtime="20201029 12:55:30.563"></status>
</kw>
<msg timestamp="20201029 12:55:30.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:30.546" endtime="20201029 12:55:30.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:30.565" endtime="20201029 12:55:30.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.567" endtime="20201029 12:55:30.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.543" endtime="20201029 12:55:30.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.541" endtime="20201029 12:55:30.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.577" endtime="20201029 12:55:30.863"></status>
</kw>
<msg timestamp="20201029 12:55:30.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020340431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:30.575" endtime="20201029 12:55:30.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020315431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020340431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:30.867" endtime="20201029 12:55:30.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.875" endtime="20201029 12:55:30.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.572" endtime="20201029 12:55:30.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.571" endtime="20201029 12:55:30.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:30.882" level="INFO">${RESULT} = [{'diff': 2.5000000000000716e-05}, {'diff': 2.5012999999997343e-05}, {'diff': 2.4999999999997247e-05}, {'diff': 2.4665999999999577e-05}, {'diff': 2.4513999999999786e-05}, {'diff': 2.433300000000138e-0...</msg>
<status status="PASS" starttime="20201029 12:55:30.879" endtime="20201029 12:55:30.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:30.887" level="INFO">${ACCURACY} = {'diff': [2.5000000000000716e-05, 2.5012999999997343e-05, 2.4999999999997247e-05, 2.4665999999999577e-05, 2.4513999999999786e-05, 2.433300000000138e-05, 2.4929999999999397e-05, 2.4777999999999606e-05,...</msg>
<status status="PASS" starttime="20201029 12:55:30.883" endtime="20201029 12:55:30.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.891" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:55:30.890" endtime="20201029 12:55:30.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.894" level="INFO">VALUE: [2.5000000000000716e-05, 2.5012999999997343e-05, 2.4999999999997247e-05, 2.4665999999999577e-05, 2.4513999999999786e-05, 2.433300000000138e-05, 2.4929999999999397e-05, 2.4777999999999606e-05, 2.462500000000034e-05, 2.4278000000002575e-05, 2.4750000000000466e-05, 2.4860999999997552e-05, 2.4304999999998772e-05, 2.4292000000002145e-05, 2.4764000000000036e-05, 2.4555999999998496e-05, 2.4750000000000466e-05, 2.4249999999999966e-05, 2.490299999999973e-05, 2.4541999999998926e-05, 2.519499999999869e-05, 2.473700000000037e-05, 2.441700000000227e-05, 2.491700000000277e-05, 2.4263999999999536e-05, 2.5070000000002035e-05, 2.5013999999996817e-05, 2.463899999999991e-05, 2.4471999999997607e-05, 2.512500000000084e-05, 2.49169999999993e-05, 2.5084000000001605e-05, 2.462500000000034e-05, 2.4958000000002006e-05, 2.5084000000001605e-05, 2.5069999999998566e-05, 2.4290999999999202e-05, 2.5054999999999522e-05, 2.505500000000299e-05, 2.4943999999998967e-05, 2.4290999999999202e-05, 2.4222000000000826e-05, 2.463899999999991e-05, 2.513900000000041e-05, 2.5014000000000286e-05, 2.463899999999991e-05, 2.4929999999999397e-05, 2.437500000000009e-05, 2.486100000000102e-05, 2.438899999999966e-05]</msg>
<status status="PASS" starttime="20201029 12:55:30.892" endtime="20201029 12:55:30.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.888" endtime="20201029 12:55:30.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:30.899" endtime="20201029 12:55:30.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.897" endtime="20201029 12:55:30.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.896" endtime="20201029 12:55:30.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.539" endtime="20201029 12:55:30.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.539" endtime="20201029 12:55:30.920"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.928" endtime="20201029 12:55:30.944"></status>
</kw>
<msg timestamp="20201029 12:55:30.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:30.927" endtime="20201029 12:55:30.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:30.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:30.945" endtime="20201029 12:55:30.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.948" endtime="20201029 12:55:30.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.924" endtime="20201029 12:55:30.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.922" endtime="20201029 12:55:30.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:30.957" endtime="20201029 12:55:31.244"></status>
</kw>
<msg timestamp="20201029 12:55:31.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:30.955" endtime="20201029 12:55:31.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:31.248" endtime="20201029 12:55:31.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.256" endtime="20201029 12:55:31.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.953" endtime="20201029 12:55:31.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.951" endtime="20201029 12:55:31.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:31.263" level="INFO">${RESULT} = [{'diff': 2.6014000000001286e-05}, {'diff': 2.6235999999998927e-05}, {'diff': 2.5777000000001132e-05}, {'diff': 2.587500000000159e-05}, {'diff': 2.5846999999998982e-05}, {'diff': 2.534700000000195e-05...</msg>
<status status="PASS" starttime="20201029 12:55:31.260" endtime="20201029 12:55:31.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:31.267" level="INFO">${ACCURACY} = {'diff': [2.6014000000001286e-05, 2.6235999999998927e-05, 2.5777000000001132e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.534700000000195e-05, 2.6110999999998802e-05, 2.5916000000000827e-05, ...</msg>
<status status="PASS" starttime="20201029 12:55:31.264" endtime="20201029 12:55:31.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.272" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:55:31.270" endtime="20201029 12:55:31.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.274" level="INFO">VALUE: [2.6014000000001286e-05, 2.6235999999998927e-05, 2.5777000000001132e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.534700000000195e-05, 2.6110999999998802e-05, 2.5916000000000827e-05, 2.5764000000001036e-05, 2.5778000000000606e-05, 2.6124999999998372e-05, 2.5930000000000397e-05, 2.5346999999998482e-05, 2.5207999999998787e-05, 2.5236000000001396e-05, 2.5264000000000536e-05, 2.6179999999997178e-05, 2.5250000000000966e-05, 2.5541999999999926e-05, 2.5721999999998857e-05, 2.536100000000152e-05, 2.5291999999999676e-05, 2.545899999999851e-05, 2.540300000000023e-05, 2.5457999999999037e-05, 2.613900000000141e-05, 2.5763999999997567e-05, 2.561100000000177e-05, 2.5500000000001216e-05, 2.5874999999998122e-05, 2.568099999999962e-05, 2.6098000000002175e-05, 2.5943999999999967e-05, 2.611100000000227e-05, 2.540300000000023e-05, 2.5319999999998816e-05, 2.5652000000001007e-05, 2.5818999999999842e-05, 2.5846999999998982e-05, 2.6069000000000092e-05, 2.5721999999998857e-05, 2.5541000000000452e-05, 2.5250000000000966e-05, 2.565300000000048e-05, 2.540299999999676e-05, 2.5848000000001925e-05, 2.5860999999998552e-05, 2.568099999999962e-05, 2.612500000000184e-05, 2.5861999999998025e-05]</msg>
<status status="PASS" starttime="20201029 12:55:31.273" endtime="20201029 12:55:31.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.268" endtime="20201029 12:55:31.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:31.279" endtime="20201029 12:55:31.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.277" endtime="20201029 12:55:31.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.276" endtime="20201029 12:55:31.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.920" endtime="20201029 12:55:31.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:30.920" endtime="20201029 12:55:31.300"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.308" endtime="20201029 12:55:31.325"></status>
</kw>
<msg timestamp="20201029 12:55:31.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:31.307" endtime="20201029 12:55:31.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:31.326" endtime="20201029 12:55:31.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.329" endtime="20201029 12:55:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.304" endtime="20201029 12:55:31.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.302" endtime="20201029 12:55:31.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.338" endtime="20201029 12:55:31.624"></status>
</kw>
<msg timestamp="20201029 12:55:31.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:31.336" endtime="20201029 12:55:31.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:31.628" endtime="20201029 12:55:31.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.636" endtime="20201029 12:55:31.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.334" endtime="20201029 12:55:31.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.332" endtime="20201029 12:55:31.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:31.643" level="INFO">${RESULT} = [{'diff': 2.669500000000019e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.6305000000000772e-05}, {'diff': 2.6596999999999732e-05}, {'diff': 2.6846999999999982e-0...</msg>
<status status="PASS" starttime="20201029 12:55:31.640" endtime="20201029 12:55:31.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:31.647" level="INFO">${ACCURACY} = {'diff': [2.669500000000019e-05, 2.6458000000000037e-05, 2.7013999999998817e-05, 2.6305000000000772e-05, 2.6596999999999732e-05, 2.6846999999999982e-05, 2.6528000000001356e-05, 2.665300000000148e-05, ...</msg>
<status status="PASS" starttime="20201029 12:55:31.644" endtime="20201029 12:55:31.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.652" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:55:31.650" endtime="20201029 12:55:31.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.657" level="INFO">VALUE: [2.669500000000019e-05, 2.6458000000000037e-05, 2.7013999999998817e-05, 2.6305000000000772e-05, 2.6596999999999732e-05, 2.6846999999999982e-05, 2.6528000000001356e-05, 2.665300000000148e-05, 2.720900000000026e-05, 2.6332999999999912e-05, 2.6708000000000287e-05, 2.6721999999999857e-05, 2.6985999999999677e-05, 2.6999999999999247e-05, 2.7070000000000566e-05, 2.6764000000002036e-05, 2.7084000000000136e-05, 2.694500000000044e-05, 2.647299999999908e-05, 2.6570000000000066e-05, 2.643100000000037e-05, 2.6901999999998788e-05, 2.6833999999999886e-05, 2.672299999999933e-05, 2.69170000000013e-05, 2.6596999999999732e-05, 2.6596999999999732e-05, 2.6972000000000107e-05, 2.6332999999999912e-05, 2.6929999999997928e-05, 2.6721999999999857e-05, 2.7180000000001647e-05, 2.7027999999998387e-05, 2.6972000000000107e-05, 2.644499999999994e-05, 2.6583000000000162e-05, 2.6930000000001397e-05, 2.7014000000002286e-05, 2.690300000000173e-05, 2.6721999999999857e-05, 2.7056000000000996e-05, 2.6750000000002466e-05, 2.669500000000019e-05, 2.6263999999998067e-05, 2.6721999999999857e-05, 2.636100000000252e-05, 2.6249999999998497e-05, 2.690299999999826e-05, 2.694500000000044e-05, 2.6374999999998622e-05]</msg>
<status status="PASS" starttime="20201029 12:55:31.653" endtime="20201029 12:55:31.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.648" endtime="20201029 12:55:31.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:31.662" endtime="20201029 12:55:31.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.661" endtime="20201029 12:55:31.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.659" endtime="20201029 12:55:31.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.301" endtime="20201029 12:55:31.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.300" endtime="20201029 12:55:31.683"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.692" endtime="20201029 12:55:31.706"></status>
</kw>
<msg timestamp="20201029 12:55:31.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:31.690" endtime="20201029 12:55:31.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:31.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:31.708" endtime="20201029 12:55:31.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.710" endtime="20201029 12:55:31.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.687" endtime="20201029 12:55:31.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.685" endtime="20201029 12:55:31.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:31.719" endtime="20201029 12:55:32.004"></status>
</kw>
<msg timestamp="20201029 12:55:32.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:31.718" endtime="20201029 12:55:32.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:32.009" endtime="20201029 12:55:32.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.017" endtime="20201029 12:55:32.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.715" endtime="20201029 12:55:32.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.713" endtime="20201029 12:55:32.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:32.024" level="INFO">${RESULT} = [{'diff': 2.7943999999998498e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.7819000000001842e-05}, {'diff': 2.766699999999858e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.7848000000000456e-0...</msg>
<status status="PASS" starttime="20201029 12:55:32.020" endtime="20201029 12:55:32.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:32.028" level="INFO">${ACCURACY} = {'diff': [2.7943999999998498e-05, 2.7749999999999997e-05, 2.7819000000001842e-05, 2.766699999999858e-05, 2.8000000000000247e-05, 2.7848000000000456e-05, 2.7499999999999747e-05, 2.8028000000002856e-05,...</msg>
<status status="PASS" starttime="20201029 12:55:32.025" endtime="20201029 12:55:32.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.033" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:55:32.032" endtime="20201029 12:55:32.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.035" level="INFO">VALUE: [2.7943999999998498e-05, 2.7749999999999997e-05, 2.7819000000001842e-05, 2.766699999999858e-05, 2.8000000000000247e-05, 2.7848000000000456e-05, 2.7499999999999747e-05, 2.8028000000002856e-05, 2.7638999999999442e-05, 2.8138999999999942e-05, 2.7361000000000052e-05, 2.7790999999999233e-05, 2.8013999999999817e-05, 2.794500000000144e-05, 2.7597000000000732e-05, 2.7861000000000552e-05, 2.7334000000000386e-05, 2.819499999999822e-05, 2.7584000000000636e-05, 2.772300000000033e-05, 2.7319000000001342e-05, 2.7722000000000857e-05, 2.7749999999999997e-05, 2.7222000000000357e-05, 2.7666000000002577e-05, 2.7666000000002577e-05, 2.720900000000026e-05, 2.7249999999999497e-05, 2.8125000000000372e-05, 2.8222000000001357e-05, 2.7514000000002786e-05, 2.7944000000001967e-05, 2.7305000000001772e-05, 2.7624999999999872e-05, 2.7541999999998457e-05, 2.7818999999998373e-05, 2.8152999999999512e-05, 2.7222000000000357e-05, 2.7875000000000122e-05, 2.7888999999999692e-05, 2.7278000000002106e-05, 2.7958000000001537e-05, 2.7638999999999442e-05, 2.7514000000002786e-05, 2.7320000000000816e-05, 2.7597000000000732e-05, 2.722299999999983e-05, 2.740299999999876e-05, 2.7763999999999567e-05, 2.7611999999999776e-05]</msg>
<status status="PASS" starttime="20201029 12:55:32.034" endtime="20201029 12:55:32.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.029" endtime="20201029 12:55:32.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:32.040" endtime="20201029 12:55:32.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.039" endtime="20201029 12:55:32.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.038" endtime="20201029 12:55:32.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.684" endtime="20201029 12:55:32.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:31.683" endtime="20201029 12:55:32.061"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.070" endtime="20201029 12:55:32.086"></status>
</kw>
<msg timestamp="20201029 12:55:32.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:32.068" endtime="20201029 12:55:32.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:32.087" endtime="20201029 12:55:32.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.090" endtime="20201029 12:55:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.066" endtime="20201029 12:55:32.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.064" endtime="20201029 12:55:32.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.100" endtime="20201029 12:55:32.387"></status>
</kw>
<msg timestamp="20201029 12:55:32.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:32.098" endtime="20201029 12:55:32.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:32.391" endtime="20201029 12:55:32.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.400" endtime="20201029 12:55:32.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.096" endtime="20201029 12:55:32.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.094" endtime="20201029 12:55:32.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:32.406" level="INFO">${RESULT} = [{'diff': 2.9263000000001593e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8360999999997583e-05}, {'diff': 2.894499999999897e-05}, {'diff': 2.869500000000219e-05}, {'diff': 2.8806000000002746e-05...</msg>
<status status="PASS" starttime="20201029 12:55:32.403" endtime="20201029 12:55:32.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:32.410" level="INFO">${ACCURACY} = {'diff': [2.9263000000001593e-05, 2.8332999999998443e-05, 2.8360999999997583e-05, 2.894499999999897e-05, 2.869500000000219e-05, 2.8806000000002746e-05, 2.8833999999998416e-05, 2.822299999999736e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:55:32.407" endtime="20201029 12:55:32.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.415" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:55:32.414" endtime="20201029 12:55:32.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.417" level="INFO">VALUE: [2.9263000000001593e-05, 2.8332999999998443e-05, 2.8360999999997583e-05, 2.894499999999897e-05, 2.869500000000219e-05, 2.8806000000002746e-05, 2.8833999999998416e-05, 2.822299999999736e-05, 2.8540999999999983e-05, 2.8306000000002246e-05, 2.84309999999989e-05, 2.8554999999999553e-05, 2.895899999999854e-05, 2.8943999999999498e-05, 2.8804999999999803e-05, 2.8500000000000747e-05, 2.8818999999999373e-05, 2.8847000000001982e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8472000000001607e-05, 2.8804999999999803e-05, 2.8805000000003272e-05, 2.8653000000000012e-05, 2.8375000000000622e-05, 2.9098000000001706e-05, 2.8778000000000137e-05, 2.8805999999999277e-05, 2.9069999999999097e-05, 2.8750000000000997e-05, 2.8666999999999582e-05, 2.8236000000000927e-05, 2.845900000000151e-05, 2.8778000000000137e-05, 2.9056000000002996e-05, 2.8625000000000872e-05, 2.869499999999872e-05, 2.8778000000000137e-05, 2.8348000000000956e-05, 2.893100000000287e-05, 2.9152000000001038e-05, 2.872299999999786e-05, 2.9153000000000512e-05, 2.9069000000003092e-05, 2.8582999999998693e-05, 2.8457999999998568e-05, 2.8652000000000538e-05, 2.8429999999999428e-05, 2.8264000000000067e-05, 2.9111000000001802e-05]</msg>
<status status="PASS" starttime="20201029 12:55:32.416" endtime="20201029 12:55:32.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.411" endtime="20201029 12:55:32.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:32.422" endtime="20201029 12:55:32.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.420" endtime="20201029 12:55:32.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.419" endtime="20201029 12:55:32.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.062" endtime="20201029 12:55:32.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.062" endtime="20201029 12:55:32.443"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.452" endtime="20201029 12:55:32.467"></status>
</kw>
<msg timestamp="20201029 12:55:32.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:32.450" endtime="20201029 12:55:32.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:32.469" endtime="20201029 12:55:32.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.472" endtime="20201029 12:55:32.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.447" endtime="20201029 12:55:32.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.445" endtime="20201029 12:55:32.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.481" endtime="20201029 12:55:32.766"></status>
</kw>
<msg timestamp="20201029 12:55:32.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:32.479" endtime="20201029 12:55:32.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020452278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:32.770" endtime="20201029 12:55:32.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.779" endtime="20201029 12:55:32.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.477" endtime="20201029 12:55:32.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.475" endtime="20201029 12:55:32.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:32.785" level="INFO">${RESULT} = [{'diff': 2.9721999999999388e-05}, {'diff': 3.0083000000000193e-05}, {'diff': 2.9750000000001997e-05}, {'diff': 2.9486000000002177e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 2.9889000000001692e-...</msg>
<status status="PASS" starttime="20201029 12:55:32.782" endtime="20201029 12:55:32.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:32.790" level="INFO">${ACCURACY} = {'diff': [2.9721999999999388e-05, 3.0083000000000193e-05, 2.9750000000001997e-05, 2.9486000000002177e-05, 2.9610999999998833e-05, 2.9889000000001692e-05, 3.0042000000000957e-05, 2.9249999999998028e-05...</msg>
<status status="PASS" starttime="20201029 12:55:32.786" endtime="20201029 12:55:32.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.794" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:55:32.793" endtime="20201029 12:55:32.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.796" level="INFO">VALUE: [2.9721999999999388e-05, 3.0083000000000193e-05, 2.9750000000001997e-05, 2.9486000000002177e-05, 2.9610999999998833e-05, 2.9889000000001692e-05, 3.0042000000000957e-05, 2.9249999999998028e-05, 3.0167000000001082e-05, 2.922299999999836e-05, 2.9875000000002122e-05, 2.9528000000000887e-05, 2.9819000000000373e-05, 2.9528000000000887e-05, 2.9624999999998403e-05, 2.9374999999998153e-05, 2.9277000000001163e-05, 2.9486000000002177e-05, 2.9624999999998403e-05, 2.9361000000002052e-05, 2.9806000000000277e-05, 2.9999999999998778e-05, 2.9443999999999998e-05, 2.9763999999998098e-05, 2.9792000000000707e-05, 2.9819000000000373e-05, 2.9818999999996904e-05, 2.9318999999999873e-05, 2.9222000000002357e-05, 2.9958000000000068e-05, 2.9583999999999167e-05, 2.9930999999996932e-05, 2.918099999999965e-05, 2.969499999999972e-05, 2.9999999999998778e-05, 2.9610999999998833e-05, 3.0153000000001512e-05, 2.9833999999999417e-05, 2.9764000000001567e-05, 2.9833999999999417e-05, 3.0194000000000748e-05, 2.9764000000001567e-05, 2.9347000000002482e-05, 3.0069000000000623e-05, 2.9846999999999513e-05, 2.9291000000000733e-05, 2.9902999999997792e-05, 2.991599999999789e-05, 2.9291000000000733e-05, 2.9971999999999638e-05]</msg>
<status status="PASS" starttime="20201029 12:55:32.795" endtime="20201029 12:55:32.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.790" endtime="20201029 12:55:32.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:32.802" endtime="20201029 12:55:32.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.801" endtime="20201029 12:55:32.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.800" endtime="20201029 12:55:32.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.444" endtime="20201029 12:55:32.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.443" endtime="20201029 12:55:32.823"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.832" endtime="20201029 12:55:32.848"></status>
</kw>
<msg timestamp="20201029 12:55:32.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:32.830" endtime="20201029 12:55:32.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:32.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:32.849" endtime="20201029 12:55:32.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.852" endtime="20201029 12:55:32.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.828" endtime="20201029 12:55:32.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.826" endtime="20201029 12:55:32.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:32.861" endtime="20201029 12:55:33.148"></status>
</kw>
<msg timestamp="20201029 12:55:33.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:32.859" endtime="20201029 12:55:33.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:33.152" endtime="20201029 12:55:33.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.160" endtime="20201029 12:55:33.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.857" endtime="20201029 12:55:33.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.855" endtime="20201029 12:55:33.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:33.167" level="INFO">${RESULT} = [{'diff': 3.055500000000155e-05}, {'diff': 3.0263999999998598e-05}, {'diff': 3.111100000000033e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.069399999999778e-05}, {'diff': 3.041599999999839e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:33.164" endtime="20201029 12:55:33.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:33.172" level="INFO">${ACCURACY} = {'diff': [3.055500000000155e-05, 3.0263999999998598e-05, 3.111100000000033e-05, 3.042999999999796e-05, 3.069399999999778e-05, 3.041599999999839e-05, 3.0818999999997904e-05, 3.070800000000082e-05, 3.03...</msg>
<status status="PASS" starttime="20201029 12:55:33.168" endtime="20201029 12:55:33.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.177" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:55:33.176" endtime="20201029 12:55:33.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.179" level="INFO">VALUE: [3.055500000000155e-05, 3.0263999999998598e-05, 3.111100000000033e-05, 3.042999999999796e-05, 3.069399999999778e-05, 3.041599999999839e-05, 3.0818999999997904e-05, 3.070800000000082e-05, 3.0360999999999583e-05, 3.0472000000000138e-05, 3.118100000000165e-05, 3.07639999999991e-05, 3.111100000000033e-05, 3.077799999999867e-05, 3.0333000000000443e-05, 3.090299999999879e-05, 3.073599999999996e-05, 3.105600000000153e-05, 3.0263999999998598e-05, 3.063900000000244e-05, 3.113899999999947e-05, 3.0320000000000347e-05, 3.098600000000021e-05, 3.0249999999999028e-05, 3.099999999999978e-05, 3.1040999999999014e-05, 3.0472000000000138e-05, 3.0306000000000777e-05, 3.0305000000001303e-05, 3.059700000000026e-05, 3.105500000000205e-05, 3.1138e-05, 3.118000000000218e-05, 3.0375000000002622e-05, 3.070800000000082e-05, 3.086100000000008e-05, 3.0499999999999278e-05, 3.0389000000002192e-05, 3.055600000000103e-05, 3.113899999999947e-05, 3.0278000000001637e-05, 3.066599999999864e-05, 3.052799999999842e-05, 3.090299999999879e-05, 3.063899999999897e-05, 3.066599999999864e-05, 3.0235999999999458e-05, 3.0249999999999028e-05, 3.0416999999997862e-05, 3.063900000000244e-05]</msg>
<status status="PASS" starttime="20201029 12:55:33.178" endtime="20201029 12:55:33.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.173" endtime="20201029 12:55:33.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:33.184" endtime="20201029 12:55:33.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.183" endtime="20201029 12:55:33.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.182" endtime="20201029 12:55:33.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.824" endtime="20201029 12:55:33.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:32.824" endtime="20201029 12:55:33.205"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.214" endtime="20201029 12:55:33.229"></status>
</kw>
<msg timestamp="20201029 12:55:33.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:33.212" endtime="20201029 12:55:33.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:33.231" endtime="20201029 12:55:33.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.233" endtime="20201029 12:55:33.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.209" endtime="20201029 12:55:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.207" endtime="20201029 12:55:33.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.244" endtime="20201029 12:55:33.533"></status>
</kw>
<msg timestamp="20201029 12:55:33.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:33.243" endtime="20201029 12:55:33.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:33.537" endtime="20201029 12:55:33.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.545" endtime="20201029 12:55:33.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.240" endtime="20201029 12:55:33.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.238" endtime="20201029 12:55:33.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:33.552" level="INFO">${RESULT} = [{'diff': 3.193099999999893e-05}, {'diff': 3.1276999999999694e-05}, {'diff': 3.170800000000182e-05}, {'diff': 3.2054999999999584e-05}, {'diff': 3.198600000000121e-05}, {'diff': 3.2054999999999584e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:33.548" endtime="20201029 12:55:33.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:33.556" level="INFO">${ACCURACY} = {'diff': [3.193099999999893e-05, 3.1276999999999694e-05, 3.170800000000182e-05, 3.2054999999999584e-05, 3.198600000000121e-05, 3.2054999999999584e-05, 3.2082999999998724e-05, 3.16250000000004e-05, 3.1...</msg>
<status status="PASS" starttime="20201029 12:55:33.552" endtime="20201029 12:55:33.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.560" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:55:33.559" endtime="20201029 12:55:33.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.562" level="INFO">VALUE: [3.193099999999893e-05, 3.1276999999999694e-05, 3.170800000000182e-05, 3.2054999999999584e-05, 3.198600000000121e-05, 3.2054999999999584e-05, 3.2082999999998724e-05, 3.16250000000004e-05, 3.197200000000164e-05, 3.184700000000151e-05, 3.180599999999881e-05, 3.123600000000046e-05, 3.125000000000003e-05, 3.2096999999998294e-05, 3.123599999999699e-05, 3.145800000000157e-05, 3.137500000000015e-05, 3.159700000000126e-05, 3.125000000000003e-05, 3.19579999999986e-05, 3.195900000000154e-05, 3.172199999999792e-05, 3.215300000000004e-05, 3.148600000000071e-05, 3.1832999999998474e-05, 3.15700000000016e-05, 3.209800000000124e-05, 3.122300000000036e-05, 3.131999999999788e-05, 3.145900000000104e-05, 3.138800000000025e-05, 3.1332999999997974e-05, 3.187499999999718e-05, 3.138899999999972e-05, 3.12639999999996e-05, 3.123599999999699e-05, 3.197199999999817e-05, 3.202799999999992e-05, 3.197200000000164e-05, 3.180600000000228e-05, 3.137500000000015e-05, 3.120800000000132e-05, 3.1318999999998404e-05, 3.125000000000003e-05, 3.1846999999998044e-05, 3.2096999999998294e-05, 3.208400000000167e-05, 3.133300000000144e-05, 3.184700000000151e-05, 3.182000000000185e-05]</msg>
<status status="PASS" starttime="20201029 12:55:33.561" endtime="20201029 12:55:33.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.556" endtime="20201029 12:55:33.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:33.567" endtime="20201029 12:55:33.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.566" endtime="20201029 12:55:33.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.565" endtime="20201029 12:55:33.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.206" endtime="20201029 12:55:33.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.205" endtime="20201029 12:55:33.588"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.597" endtime="20201029 12:55:33.613"></status>
</kw>
<msg timestamp="20201029 12:55:33.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:33.595" endtime="20201029 12:55:33.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:33.615" endtime="20201029 12:55:33.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.617" endtime="20201029 12:55:33.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.593" endtime="20201029 12:55:33.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.591" endtime="20201029 12:55:33.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.627" endtime="20201029 12:55:33.913"></status>
</kw>
<msg timestamp="20201029 12:55:33.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:33.625" endtime="20201029 12:55:33.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:33.917" endtime="20201029 12:55:33.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.925" endtime="20201029 12:55:33.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.622" endtime="20201029 12:55:33.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.621" endtime="20201029 12:55:33.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:33.932" level="INFO">${RESULT} = [{'diff': 3.245899999999857e-05}, {'diff': 3.300000000000178e-05}, {'diff': 3.240300000000029e-05}, {'diff': 3.258300000000269e-05}, {'diff': 3.26389999999975e-05}, {'diff': 3.3082999999999724e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:33.928" endtime="20201029 12:55:33.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:33.936" level="INFO">${ACCURACY} = {'diff': [3.245899999999857e-05, 3.300000000000178e-05, 3.240300000000029e-05, 3.258300000000269e-05, 3.26389999999975e-05, 3.3082999999999724e-05, 3.2360999999998113e-05, 3.2624999999997933e-05, 3.25...</msg>
<status status="PASS" starttime="20201029 12:55:33.932" endtime="20201029 12:55:33.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.940" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:55:33.939" endtime="20201029 12:55:33.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:33.943" level="INFO">VALUE: [3.245899999999857e-05, 3.300000000000178e-05, 3.240300000000029e-05, 3.258300000000269e-05, 3.26389999999975e-05, 3.3082999999999724e-05, 3.2360999999998113e-05, 3.2624999999997933e-05, 3.2582999999999224e-05, 3.266600000000064e-05, 3.2360999999998113e-05, 3.222200000000189e-05, 3.2832999999999474e-05, 3.240300000000029e-05, 3.224999999999756e-05, 3.283300000000294e-05, 3.2568999999999654e-05, 3.255599999999956e-05, 3.313900000000147e-05, 3.29449999999995e-05, 3.298600000000221e-05, 3.29579999999996e-05, 3.248600000000171e-05, 3.254199999999999e-05, 3.250000000000128e-05, 3.291700000000036e-05, 3.27640000000011e-05, 3.317999999999724e-05, 3.230599999999931e-05, 3.3096999999999294e-05, 3.29579999999996e-05, 3.270799999999935e-05, 3.238800000000125e-05, 3.2360999999998113e-05, 3.300000000000178e-05, 3.291599999999742e-05, 3.299999999999831e-05, 3.315300000000104e-05, 3.2555000000000084e-05, 3.243099999999943e-05, 3.318000000000071e-05, 3.269399999999978e-05, 3.244399999999953e-05, 3.301399999999788e-05, 3.2582999999999224e-05, 3.293099999999993e-05, 3.306999999999963e-05, 3.297199999999917e-05, 3.26389999999975e-05, 3.268099999999968e-05]</msg>
<status status="PASS" starttime="20201029 12:55:33.941" endtime="20201029 12:55:33.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.936" endtime="20201029 12:55:33.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:33.954" endtime="20201029 12:55:33.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.952" endtime="20201029 12:55:33.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.951" endtime="20201029 12:55:33.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.589" endtime="20201029 12:55:33.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.588" endtime="20201029 12:55:33.974"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:33.983" endtime="20201029 12:55:34.000"></status>
</kw>
<msg timestamp="20201029 12:55:34.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:33.982" endtime="20201029 12:55:34.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:34.002" endtime="20201029 12:55:34.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.004" endtime="20201029 12:55:34.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.979" endtime="20201029 12:55:34.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.977" endtime="20201029 12:55:34.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.013" endtime="20201029 12:55:34.299"></status>
</kw>
<msg timestamp="20201029 12:55:34.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:34.012" endtime="20201029 12:55:34.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020622653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:34.303" endtime="20201029 12:55:34.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.311" endtime="20201029 12:55:34.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.009" endtime="20201029 12:55:34.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.007" endtime="20201029 12:55:34.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:34.318" level="INFO">${RESULT} = [{'diff': 3.419399999999781e-05}, {'diff': 3.323699999999846e-05}, {'diff': 3.398599999999974e-05}, {'diff': 3.3833000000000474e-05}, {'diff': 3.4069000000001154e-05}, {'diff': 3.3833000000000474e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:34.315" endtime="20201029 12:55:34.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:34.323" level="INFO">${ACCURACY} = {'diff': [3.419399999999781e-05, 3.323699999999846e-05, 3.398599999999974e-05, 3.3833000000000474e-05, 3.4069000000001154e-05, 3.3833000000000474e-05, 3.343000000000096e-05, 3.347199999999967e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 12:55:34.319" endtime="20201029 12:55:34.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.328" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:55:34.326" endtime="20201029 12:55:34.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.330" level="INFO">VALUE: [3.419399999999781e-05, 3.323699999999846e-05, 3.398599999999974e-05, 3.3833000000000474e-05, 3.4069000000001154e-05, 3.3833000000000474e-05, 3.343000000000096e-05, 3.347199999999967e-05, 3.340200000000182e-05, 3.374999999999906e-05, 3.394400000000103e-05, 3.3805000000001334e-05, 3.416699999999814e-05, 3.379200000000124e-05, 3.4152999999998573e-05, 3.374999999999906e-05, 3.347199999999967e-05, 3.3610999999999364e-05, 3.323599999999899e-05, 3.376399999999863e-05, 3.393000000000146e-05, 3.363900000000197e-05, 3.352800000000142e-05, 3.35839999999997e-05, 3.372300000000286e-05, 3.390199999999885e-05, 3.411100000000333e-05, 3.363900000000197e-05, 3.40840000000002e-05, 3.388799999999928e-05, 3.3305000000000834e-05, 3.372199999999992e-05, 3.3818999999997434e-05, 3.390299999999832e-05, 3.395799999999713e-05, 3.398599999999974e-05, 3.419400000000128e-05, 3.370799999999688e-05, 3.368099999999721e-05, 3.323599999999899e-05, 3.39580000000006e-05, 3.340200000000182e-05, 3.4069000000001154e-05, 3.319499999999975e-05, 3.4110999999999864e-05, 3.370899999999982e-05, 3.330600000000031e-05, 3.398600000000321e-05, 3.345899999999957e-05, 3.347299999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:55:34.329" endtime="20201029 12:55:34.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.324" endtime="20201029 12:55:34.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:34.335" endtime="20201029 12:55:34.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.333" endtime="20201029 12:55:34.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.332" endtime="20201029 12:55:34.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.975" endtime="20201029 12:55:34.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:33.975" endtime="20201029 12:55:34.356"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.364" endtime="20201029 12:55:34.381"></status>
</kw>
<msg timestamp="20201029 12:55:34.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:34.363" endtime="20201029 12:55:34.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:34.382" endtime="20201029 12:55:34.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.385" endtime="20201029 12:55:34.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.360" endtime="20201029 12:55:34.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.358" endtime="20201029 12:55:34.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.394" endtime="20201029 12:55:34.681"></status>
</kw>
<msg timestamp="20201029 12:55:34.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:34.392" endtime="20201029 12:55:34.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:34.685" endtime="20201029 12:55:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.693" endtime="20201029 12:55:34.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.390" endtime="20201029 12:55:34.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.388" endtime="20201029 12:55:34.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:34.700" level="INFO">${RESULT} = [{'diff': 3.443100000000143e-05}, {'diff': 3.491700000000236e-05}, {'diff': 3.505599999999859e-05}, {'diff': 3.451400000000285e-05}, {'diff': 3.480600000000181e-05}, {'diff': 3.505600000000206e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:34.697" endtime="20201029 12:55:34.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:34.704" level="INFO">${ACCURACY} = {'diff': [3.443100000000143e-05, 3.491700000000236e-05, 3.505599999999859e-05, 3.451400000000285e-05, 3.480600000000181e-05, 3.505600000000206e-05, 3.452799999999895e-05, 3.4611000000000364e-05, 3.500...</msg>
<status status="PASS" starttime="20201029 12:55:34.701" endtime="20201029 12:55:34.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.708" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:55:34.707" endtime="20201029 12:55:34.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.711" level="INFO">VALUE: [3.443100000000143e-05, 3.491700000000236e-05, 3.505599999999859e-05, 3.451400000000285e-05, 3.480600000000181e-05, 3.505600000000206e-05, 3.452799999999895e-05, 3.4611000000000364e-05, 3.500000000000031e-05, 3.520799999999838e-05, 3.511200000000034e-05, 3.5013000000000405e-05, 3.4611000000000364e-05, 3.463800000000003e-05, 3.51520000000001e-05, 3.5139000000000004e-05, 3.4861000000000614e-05, 3.441599999999892e-05, 3.472200000000092e-05, 3.4555000000002084e-05, 3.454200000000199e-05, 3.470800000000135e-05, 3.495799999999813e-05, 3.4388999999999253e-05, 3.4638999999999504e-05, 3.507000000000163e-05, 3.455599999999809e-05, 3.4388999999999253e-05, 3.501399999999988e-05, 3.475000000000006e-05, 3.469400000000178e-05, 3.4805000000002334e-05, 3.4319000000001404e-05, 3.434800000000002e-05, 3.493099999999846e-05, 3.5013000000000405e-05, 3.447300000000014e-05, 3.4276999999999225e-05, 3.4388999999999253e-05, 3.4333000000000974e-05, 3.4554999999998615e-05, 3.491600000000289e-05, 3.468000000000221e-05, 3.4554999999998615e-05, 3.4902999999999323e-05, 3.4597000000000794e-05, 3.448600000000024e-05, 3.515300000000304e-05, 3.4347000000000544e-05, 3.500000000000031e-05]</msg>
<status status="PASS" starttime="20201029 12:55:34.709" endtime="20201029 12:55:34.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.705" endtime="20201029 12:55:34.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:34.716" endtime="20201029 12:55:34.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.714" endtime="20201029 12:55:34.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.713" endtime="20201029 12:55:34.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.357" endtime="20201029 12:55:34.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.356" endtime="20201029 12:55:34.737"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.745" endtime="20201029 12:55:34.762"></status>
</kw>
<msg timestamp="20201029 12:55:34.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:34.744" endtime="20201029 12:55:34.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:34.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:34.763" endtime="20201029 12:55:34.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.766" endtime="20201029 12:55:34.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.741" endtime="20201029 12:55:34.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.739" endtime="20201029 12:55:34.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:34.775" endtime="20201029 12:55:35.061"></status>
</kw>
<msg timestamp="20201029 12:55:35.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:34.773" endtime="20201029 12:55:35.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:35.065" endtime="20201029 12:55:35.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.073" endtime="20201029 12:55:35.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.771" endtime="20201029 12:55:35.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.769" endtime="20201029 12:55:35.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:35.080" level="INFO">${RESULT} = [{'diff': 3.593099999999946e-05}, {'diff': 3.6041000000000545e-05}, {'diff': 3.601399999999741e-05}, {'diff': 3.618000000000024e-05}, {'diff': 3.541599999999992e-05}, {'diff': 3.5332999999998504e-05},...</msg>
<status status="PASS" starttime="20201029 12:55:35.076" endtime="20201029 12:55:35.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:35.084" level="INFO">${ACCURACY} = {'diff': [3.593099999999946e-05, 3.6041000000000545e-05, 3.601399999999741e-05, 3.618000000000024e-05, 3.541599999999992e-05, 3.5332999999998504e-05, 3.570800000000235e-05, 3.5804999999999865e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 12:55:35.081" endtime="20201029 12:55:35.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.088" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:55:35.087" endtime="20201029 12:55:35.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.094" level="INFO">VALUE: [3.593099999999946e-05, 3.6041000000000545e-05, 3.601399999999741e-05, 3.618000000000024e-05, 3.541599999999992e-05, 3.5332999999998504e-05, 3.570800000000235e-05, 3.5804999999999865e-05, 3.566600000000017e-05, 3.5347000000001544e-05, 3.598600000000174e-05, 3.552799999999995e-05, 3.5639000000000504e-05, 3.575000000000106e-05, 3.555599999999909e-05, 3.5847000000002044e-05, 3.602800000000045e-05, 3.548600000000124e-05, 3.520800000000185e-05, 3.552799999999995e-05, 3.5903000000000324e-05, 3.568100000000268e-05, 3.5319000000002404e-05, 3.597300000000164e-05, 3.5639000000000504e-05, 3.575000000000106e-05, 3.5639000000000504e-05, 3.5666999999999643e-05, 3.570800000000235e-05, 3.6041000000000545e-05, 3.572200000000192e-05, 3.5554999999999615e-05, 3.569399999999931e-05, 3.5332999999998504e-05, 3.5916999999999893e-05, 3.595799999999913e-05, 3.5889000000000754e-05, 3.57780000000002e-05, 3.5875000000001184e-05, 3.555599999999909e-05, 3.5318999999998935e-05, 3.598599999999827e-05, 3.6153000000000574e-05, 3.570899999999835e-05, 3.605599999999959e-05, 3.604200000000002e-05, 3.598699999999774e-05, 3.534800000000102e-05, 3.5875000000001184e-05, 3.544400000000253e-05]</msg>
<status status="PASS" starttime="20201029 12:55:35.089" endtime="20201029 12:55:35.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.085" endtime="20201029 12:55:35.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:35.099" endtime="20201029 12:55:35.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.097" endtime="20201029 12:55:35.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.096" endtime="20201029 12:55:35.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.737" endtime="20201029 12:55:35.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:34.737" endtime="20201029 12:55:35.120"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.128" endtime="20201029 12:55:35.143"></status>
</kw>
<msg timestamp="20201029 12:55:35.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:35.127" endtime="20201029 12:55:35.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:35.145" endtime="20201029 12:55:35.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.147" endtime="20201029 12:55:35.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.124" endtime="20201029 12:55:35.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.122" endtime="20201029 12:55:35.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.156" endtime="20201029 12:55:35.442"></status>
</kw>
<msg timestamp="20201029 12:55:35.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019588806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:35.155" endtime="20201029 12:55:35.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019588806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:35.446" endtime="20201029 12:55:35.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.455" endtime="20201029 12:55:35.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.152" endtime="20201029 12:55:35.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.151" endtime="20201029 12:55:35.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:35.461" level="INFO">${RESULT} = [{'diff': 3.686199999999862e-05}, {'diff': 3.656999999999966e-05}, {'diff': 3.690199999999838e-05}, {'diff': 3.674999999999859e-05}, {'diff': 3.645799999999963e-05}, {'diff': 3.6861000000002614e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:35.458" endtime="20201029 12:55:35.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:35.466" level="INFO">${ACCURACY} = {'diff': [3.686199999999862e-05, 3.656999999999966e-05, 3.690199999999838e-05, 3.674999999999859e-05, 3.645799999999963e-05, 3.6861000000002614e-05, 3.7110999999999394e-05, 3.672199999999945e-05, 3.63...</msg>
<status status="PASS" starttime="20201029 12:55:35.462" endtime="20201029 12:55:35.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.471" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:55:35.470" endtime="20201029 12:55:35.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.473" level="INFO">VALUE: [3.686199999999862e-05, 3.656999999999966e-05, 3.690199999999838e-05, 3.674999999999859e-05, 3.645799999999963e-05, 3.6861000000002614e-05, 3.7110999999999394e-05, 3.672199999999945e-05, 3.6389000000001254e-05, 3.652799999999748e-05, 3.7124999999998964e-05, 3.6653000000001074e-05, 3.64719999999992e-05, 3.695800000000013e-05, 3.701400000000188e-05, 3.645799999999963e-05, 3.630599999999984e-05, 3.647200000000267e-05, 3.6667000000000644e-05, 3.7152999999998104e-05, 3.6596999999999325e-05, 3.6791000000001295e-05, 3.654200000000052e-05, 3.6374999999998214e-05, 3.6653000000001074e-05, 3.6374999999998214e-05, 3.69589999999996e-05, 3.669400000000031e-05, 3.648599999999877e-05, 3.71520000000021e-05, 3.674999999999859e-05, 3.652800000000095e-05, 3.7083000000000255e-05, 3.7153000000001574e-05, 3.7124999999998964e-05, 3.6652999999997604e-05, 3.669400000000031e-05, 3.6347000000002544e-05, 3.694500000000003e-05, 3.684799999999905e-05, 3.681999999999991e-05, 3.697299999999917e-05, 3.723699999999899e-05, 3.6403000000000824e-05, 3.681999999999991e-05, 3.6888999999998284e-05, 3.6624999999998464e-05, 3.697300000000264e-05, 3.6417000000000394e-05, 3.624999999999809e-05]</msg>
<status status="PASS" starttime="20201029 12:55:35.472" endtime="20201029 12:55:35.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.467" endtime="20201029 12:55:35.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:35.478" endtime="20201029 12:55:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.477" endtime="20201029 12:55:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.475" endtime="20201029 12:55:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.120" endtime="20201029 12:55:35.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.120" endtime="20201029 12:55:35.499"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.507" endtime="20201029 12:55:35.524"></status>
</kw>
<msg timestamp="20201029 12:55:35.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:35.506" endtime="20201029 12:55:35.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:35.525" endtime="20201029 12:55:35.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.528" endtime="20201029 12:55:35.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.503" endtime="20201029 12:55:35.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.501" endtime="20201029 12:55:35.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.538" endtime="20201029 12:55:35.824"></status>
</kw>
<msg timestamp="20201029 12:55:35.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:35.536" endtime="20201029 12:55:35.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:35.828" endtime="20201029 12:55:35.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.837" endtime="20201029 12:55:35.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.533" endtime="20201029 12:55:35.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.531" endtime="20201029 12:55:35.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:35.846" level="INFO">${RESULT} = [{'diff': 3.740199999999888e-05}, {'diff': 3.770800000000088e-05}, {'diff': 3.776399999999916e-05}, {'diff': 3.742999999999802e-05}, {'diff': 3.798600000000027e-05}, {'diff': 3.72780000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:35.841" endtime="20201029 12:55:35.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:35.853" level="INFO">${ACCURACY} = {'diff': [3.740199999999888e-05, 3.770800000000088e-05, 3.776399999999916e-05, 3.742999999999802e-05, 3.798600000000027e-05, 3.72780000000017e-05, 3.722199999999995e-05, 3.730600000000084e-05, 3.78329...</msg>
<status status="PASS" starttime="20201029 12:55:35.847" endtime="20201029 12:55:35.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.860" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:55:35.858" endtime="20201029 12:55:35.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.864" level="INFO">VALUE: [3.740199999999888e-05, 3.770800000000088e-05, 3.776399999999916e-05, 3.742999999999802e-05, 3.798600000000027e-05, 3.72780000000017e-05, 3.722199999999995e-05, 3.730600000000084e-05, 3.7832999999997535e-05, 3.79590000000006e-05, 3.807000000000116e-05, 3.7902999999998854e-05, 3.8110999999996925e-05, 3.7681000000001214e-05, 3.748599999999977e-05, 3.81659999999992e-05, 3.811199999999987e-05, 3.8054999999998645e-05, 3.8054999999998645e-05, 3.732000000000041e-05, 3.7847000000000575e-05, 3.741599999999845e-05, 3.7818999999997965e-05, 3.723599999999952e-05, 3.801399999999941e-05, 3.791599999999895e-05, 3.772200000000045e-05, 3.722199999999995e-05, 3.768000000000174e-05, 3.774999999999959e-05, 3.8083000000001255e-05, 3.7652999999998604e-05, 3.755600000000109e-05, 3.773600000000002e-05, 3.777799999999873e-05, 3.7874999999999714e-05, 3.815199999999963e-05, 3.794400000000156e-05, 3.730600000000084e-05, 3.7681000000001214e-05, 3.723600000000299e-05, 3.7610999999999895e-05, 3.7874999999999714e-05, 3.7902999999998854e-05, 3.7305000000001365e-05, 3.8138999999999534e-05, 3.772199999999698e-05, 3.726399999999866e-05, 3.74720000000002e-05, 3.7874999999999714e-05]</msg>
<status status="PASS" starttime="20201029 12:55:35.862" endtime="20201029 12:55:35.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.854" endtime="20201029 12:55:35.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:35.872" endtime="20201029 12:55:35.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.870" endtime="20201029 12:55:35.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.868" endtime="20201029 12:55:35.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.500" endtime="20201029 12:55:35.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.499" endtime="20201029 12:55:35.893"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.902" endtime="20201029 12:55:35.918"></status>
</kw>
<msg timestamp="20201029 12:55:35.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:35.900" endtime="20201029 12:55:35.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:35.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:35.919" endtime="20201029 12:55:35.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.922" endtime="20201029 12:55:35.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.897" endtime="20201029 12:55:35.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.895" endtime="20201029 12:55:35.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:35.931" endtime="20201029 12:55:36.217"></status>
</kw>
<msg timestamp="20201029 12:55:36.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020395972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020434722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:35.929" endtime="20201029 12:55:36.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020395972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020434722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:36.222" endtime="20201029 12:55:36.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.230" endtime="20201029 12:55:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.926" endtime="20201029 12:55:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.925" endtime="20201029 12:55:36.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:36.237" level="INFO">${RESULT} = [{'diff': 3.875000000000059e-05}, {'diff': 3.822200000000095e-05}, {'diff': 3.844399999999859e-05}, {'diff': 3.91660000000002e-05}, {'diff': 3.9110999999997925e-05}, {'diff': 3.851399999999991e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:36.233" endtime="20201029 12:55:36.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:36.241" level="INFO">${ACCURACY} = {'diff': [3.875000000000059e-05, 3.822200000000095e-05, 3.844399999999859e-05, 3.91660000000002e-05, 3.9110999999997925e-05, 3.851399999999991e-05, 3.867999999999927e-05, 3.822200000000095e-05, 3.8818...</msg>
<status status="PASS" starttime="20201029 12:55:36.238" endtime="20201029 12:55:36.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.247" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:55:36.246" endtime="20201029 12:55:36.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.249" level="INFO">VALUE: [3.875000000000059e-05, 3.822200000000095e-05, 3.844399999999859e-05, 3.91660000000002e-05, 3.9110999999997925e-05, 3.851399999999991e-05, 3.867999999999927e-05, 3.822200000000095e-05, 3.8818999999998965e-05, 3.8652999999999604e-05, 3.872200000000145e-05, 3.875000000000059e-05, 3.8402999999999354e-05, 3.8402999999999354e-05, 3.823600000000052e-05, 3.8889000000000284e-05, 3.857000000000166e-05, 3.826399999999966e-05, 3.902799999999998e-05, 3.8695000000001784e-05, 3.8375000000000214e-05, 3.85980000000008e-05, 3.85980000000008e-05, 3.8652999999999604e-05, 3.873600000000102e-05, 3.851399999999991e-05, 3.890200000000038e-05, 3.8847000000001575e-05, 3.890200000000038e-05, 3.87919999999993e-05, 3.8875000000000715e-05, 3.855599999999862e-05, 3.904199999999955e-05, 3.8333000000001505e-05, 3.8304999999998895e-05, 3.907000000000216e-05, 3.89859999999978e-05, 3.894399999999909e-05, 3.8833000000002005e-05, 3.8430999999998494e-05, 3.8639000000000034e-05, 3.874999999999712e-05, 3.8666999999999174e-05, 3.8361000000000645e-05, 3.9139000000000534e-05, 3.879200000000277e-05, 3.823699999999999e-05, 3.8527000000000006e-05, 3.8291000000002795e-05, 3.9110999999997925e-05]</msg>
<status status="PASS" starttime="20201029 12:55:36.248" endtime="20201029 12:55:36.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.242" endtime="20201029 12:55:36.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:36.255" endtime="20201029 12:55:36.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.254" endtime="20201029 12:55:36.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.253" endtime="20201029 12:55:36.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.894" endtime="20201029 12:55:36.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:35.893" endtime="20201029 12:55:36.276"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.285" endtime="20201029 12:55:36.301"></status>
</kw>
<msg timestamp="20201029 12:55:36.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:36.283" endtime="20201029 12:55:36.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:36.303" endtime="20201029 12:55:36.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.305" endtime="20201029 12:55:36.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.281" endtime="20201029 12:55:36.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.278" endtime="20201029 12:55:36.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.314" endtime="20201029 12:55:36.599"></status>
</kw>
<msg timestamp="20201029 12:55:36.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:36.313" endtime="20201029 12:55:36.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020065472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:36.603" endtime="20201029 12:55:36.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.611" endtime="20201029 12:55:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.310" endtime="20201029 12:55:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.308" endtime="20201029 12:55:36.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:36.618" level="INFO">${RESULT} = [{'diff': 3.9889000000001285e-05}, {'diff': 3.948600000000177e-05}, {'diff': 3.950000000000134e-05}, {'diff': 3.943000000000002e-05}, {'diff': 3.922199999999848e-05}, {'diff': 3.925000000000109e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:36.615" endtime="20201029 12:55:36.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:36.623" level="INFO">${ACCURACY} = {'diff': [3.9889000000001285e-05, 3.948600000000177e-05, 3.950000000000134e-05, 3.943000000000002e-05, 3.922199999999848e-05, 3.925000000000109e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 12:55:36.619" endtime="20201029 12:55:36.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.627" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:55:36.626" endtime="20201029 12:55:36.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.630" level="INFO">VALUE: [3.9889000000001285e-05, 3.948600000000177e-05, 3.950000000000134e-05, 3.943000000000002e-05, 3.922199999999848e-05, 3.925000000000109e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 3.9638999999997565e-05, 3.923599999999805e-05, 3.9582999999999285e-05, 3.951400000000091e-05, 3.9416999999999924e-05, 3.9445000000002534e-05, 3.932000000000241e-05, 4.0125000000001965e-05, 3.9930999999999994e-05, 3.972200000000245e-05, 3.925000000000109e-05, 3.9596999999998855e-05, 3.9360999999998175e-05, 3.963799999999809e-05, 4.0138999999998065e-05, 3.9818999999999966e-05, 3.9846999999999105e-05, 3.9889000000001285e-05, 3.9416999999999924e-05, 4.004200000000055e-05, 3.975000000000159e-05, 3.92919999999998e-05, 4.008400000000273e-05, 3.995799999999966e-05, 3.955599999999962e-05, 3.9903000000000854e-05, 3.9375000000001215e-05, 3.981999999999944e-05, 3.9360999999998175e-05, 4.0110999999998925e-05, 3.9389000000000784e-05, 3.988799999999834e-05, 3.931999999999894e-05, 3.9430999999999494e-05, 4.020799999999991e-05, 3.995799999999966e-05, 4.0054999999997176e-05, 3.995799999999966e-05, 4.001399999999794e-05, 3.9832999999999535e-05, 4.0125000000001965e-05, 3.9346999999998605e-05]</msg>
<status status="PASS" starttime="20201029 12:55:36.628" endtime="20201029 12:55:36.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.624" endtime="20201029 12:55:36.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:36.635" endtime="20201029 12:55:36.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.633" endtime="20201029 12:55:36.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.632" endtime="20201029 12:55:36.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.277" endtime="20201029 12:55:36.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.276" endtime="20201029 12:55:36.656"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.664" endtime="20201029 12:55:36.679"></status>
</kw>
<msg timestamp="20201029 12:55:36.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:36.663" endtime="20201029 12:55:36.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:36.681" endtime="20201029 12:55:36.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.683" endtime="20201029 12:55:36.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.660" endtime="20201029 12:55:36.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.658" endtime="20201029 12:55:36.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.692" endtime="20201029 12:55:36.981"></status>
</kw>
<msg timestamp="20201029 12:55:36.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019477042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:36.691" endtime="20201029 12:55:36.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:36.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019477042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:36.985" endtime="20201029 12:55:36.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:36.993" endtime="20201029 12:55:36.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.688" endtime="20201029 12:55:36.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.687" endtime="20201029 12:55:36.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:37.000" level="INFO">${RESULT} = [{'diff': 4.034799999999908e-05}, {'diff': 4.083400000000001e-05}, {'diff': 4.105599999999765e-05}, {'diff': 4.0972999999999704e-05}, {'diff': 4.1181000000001244e-05}, {'diff': 4.0667000000001174e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:36.997" endtime="20201029 12:55:37.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:37.004" level="INFO">${ACCURACY} = {'diff': [4.034799999999908e-05, 4.083400000000001e-05, 4.105599999999765e-05, 4.0972999999999704e-05, 4.1181000000001244e-05, 4.0667000000001174e-05, 4.099999999999937e-05, 4.023600000000252e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 12:55:37.001" endtime="20201029 12:55:37.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.008" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:55:37.007" endtime="20201029 12:55:37.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.011" level="INFO">VALUE: [4.034799999999908e-05, 4.083400000000001e-05, 4.105599999999765e-05, 4.0972999999999704e-05, 4.1181000000001244e-05, 4.0667000000001174e-05, 4.099999999999937e-05, 4.023600000000252e-05, 4.0347000000003075e-05, 4.022199999999948e-05, 4.051400000000191e-05, 4.0555000000001146e-05, 4.044400000000059e-05, 4.0554999999997676e-05, 4.095800000000066e-05, 4.1068999999997746e-05, 4.0652999999998135e-05, 4.068000000000127e-05, 4.1195000000000814e-05, 4.02920000000008e-05, 4.0194999999999814e-05, 4.1138999999999065e-05, 4.054199999999758e-05, 4.0417000000000924e-05, 4.030600000000037e-05, 4.0610999999999425e-05, 4.09859999999998e-05, 4.094399999999762e-05, 4.045800000000016e-05, 4.072199999999998e-05, 4.1027000000002506e-05, 4.0346999999999605e-05, 4.06660000000017e-05, 4.0290999999997856e-05, 4.0596999999999855e-05, 4.09859999999998e-05, 4.1083000000000786e-05, 4.0583000000000286e-05, 4.0708999999999884e-05, 4.072199999999998e-05, 4.1083000000000786e-05, 4.0931000000000994e-05, 4.1195000000000814e-05, 4.0653000000001605e-05, 4.0653000000001605e-05, 4.082000000000044e-05, 4.105599999999765e-05, 4.0708999999999884e-05, 4.0610999999999425e-05, 4.1139000000002535e-05]</msg>
<status status="PASS" starttime="20201029 12:55:37.009" endtime="20201029 12:55:37.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.005" endtime="20201029 12:55:37.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:37.016" endtime="20201029 12:55:37.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.014" endtime="20201029 12:55:37.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.013" endtime="20201029 12:55:37.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.656" endtime="20201029 12:55:37.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:36.656" endtime="20201029 12:55:37.037"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.045" endtime="20201029 12:55:37.063"></status>
</kw>
<msg timestamp="20201029 12:55:37.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:37.044" endtime="20201029 12:55:37.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:37.064" endtime="20201029 12:55:37.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.067" endtime="20201029 12:55:37.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.041" endtime="20201029 12:55:37.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.039" endtime="20201029 12:55:37.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.076" endtime="20201029 12:55:37.361"></status>
</kw>
<msg timestamp="20201029 12:55:37.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020623208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020664792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:37.074" endtime="20201029 12:55:37.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020623208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020664792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:37.365" endtime="20201029 12:55:37.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.373" endtime="20201029 12:55:37.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.071" endtime="20201029 12:55:37.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.070" endtime="20201029 12:55:37.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:37.380" level="INFO">${RESULT} = [{'diff': 4.158400000000076e-05}, {'diff': 4.172199999999751e-05}, {'diff': 4.158400000000076e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.154200000000205e-05}, {'diff': 4.1417000000001924e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:37.376" endtime="20201029 12:55:37.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:37.384" level="INFO">${ACCURACY} = {'diff': [4.158400000000076e-05, 4.172199999999751e-05, 4.158400000000076e-05, 4.201399999999994e-05, 4.154200000000205e-05, 4.1417000000001924e-05, 4.200000000000037e-05, 4.1333000000001036e-05, 4.16...</msg>
<status status="PASS" starttime="20201029 12:55:37.381" endtime="20201029 12:55:37.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.388" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:55:37.387" endtime="20201029 12:55:37.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.391" level="INFO">VALUE: [4.158400000000076e-05, 4.172199999999751e-05, 4.158400000000076e-05, 4.201399999999994e-05, 4.154200000000205e-05, 4.1417000000001924e-05, 4.200000000000037e-05, 4.1333000000001036e-05, 4.1694999999997845e-05, 4.1832999999998066e-05, 4.1430999999998025e-05, 4.1388999999999315e-05, 4.193000000000252e-05, 4.176399999999969e-05, 4.14860000000003e-05, 4.141599999999898e-05, 4.1888999999999815e-05, 4.142999999999855e-05, 4.155600000000162e-05, 4.1888999999999815e-05, 4.123600000000005e-05, 4.1402999999998885e-05, 4.176400000000316e-05, 4.208399999999779e-05, 4.201399999999994e-05, 4.126399999999919e-05, 4.155599999999815e-05, 4.1459000000000634e-05, 4.151399999999944e-05, 4.208400000000126e-05, 4.200000000000037e-05, 4.1236999999999524e-05, 4.165199999999966e-05, 4.2096999999997886e-05, 4.191599999999948e-05, 4.1305000000001896e-05, 4.1680999999998275e-05, 4.1333000000001036e-05, 4.1819000000001966e-05, 4.177800000000273e-05, 4.179199999999883e-05, 4.170800000000141e-05, 4.1681000000001744e-05, 4.1903000000002855e-05, 4.179199999999883e-05, 4.2166999999999205e-05, 4.176399999999969e-05, 4.14860000000003e-05, 4.17920000000023e-05, 4.155600000000162e-05]</msg>
<status status="PASS" starttime="20201029 12:55:37.389" endtime="20201029 12:55:37.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.385" endtime="20201029 12:55:37.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:37.397" endtime="20201029 12:55:37.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.395" endtime="20201029 12:55:37.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.394" endtime="20201029 12:55:37.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.037" endtime="20201029 12:55:37.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.037" endtime="20201029 12:55:37.417"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.426" endtime="20201029 12:55:37.441"></status>
</kw>
<msg timestamp="20201029 12:55:37.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:37.424" endtime="20201029 12:55:37.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:37.443" endtime="20201029 12:55:37.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.445" endtime="20201029 12:55:37.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.422" endtime="20201029 12:55:37.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.420" endtime="20201029 12:55:37.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.454" endtime="20201029 12:55:37.740"></status>
</kw>
<msg timestamp="20201029 12:55:37.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:37.452" endtime="20201029 12:55:37.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:37.744" endtime="20201029 12:55:37.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.752" endtime="20201029 12:55:37.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.450" endtime="20201029 12:55:37.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.448" endtime="20201029 12:55:37.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:37.759" level="INFO">${RESULT} = [{'diff': 4.3180999999999775e-05}, {'diff': 4.2818999999999496e-05}, {'diff': 4.29999999999979e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.219400000000234e-05}, {'diff': 4.2903000000000385e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:37.756" endtime="20201029 12:55:37.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:37.764" level="INFO">${ACCURACY} = {'diff': [4.3180999999999775e-05, 4.2818999999999496e-05, 4.29999999999979e-05, 4.3096999999998886e-05, 4.219400000000234e-05, 4.2903000000000385e-05, 4.2889000000000815e-05, 4.225000000000062e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:55:37.760" endtime="20201029 12:55:37.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.768" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:55:37.767" endtime="20201029 12:55:37.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.771" level="INFO">VALUE: [4.3180999999999775e-05, 4.2818999999999496e-05, 4.29999999999979e-05, 4.3096999999998886e-05, 4.219400000000234e-05, 4.2903000000000385e-05, 4.2889000000000815e-05, 4.225000000000062e-05, 4.2818999999999496e-05, 4.2625000000000995e-05, 4.277800000000026e-05, 4.254199999999958e-05, 4.2972999999998235e-05, 4.291600000000048e-05, 4.291600000000048e-05, 4.254199999999958e-05, 4.2555000000003146e-05, 4.2832999999999066e-05, 4.3041000000000607e-05, 4.223600000000105e-05, 4.307000000000269e-05, 4.21799999999993e-05, 4.305599999999965e-05, 4.2305000000002896e-05, 4.2874999999997776e-05, 4.2568999999999246e-05, 4.276400000000069e-05, 4.2361000000001175e-05, 4.250000000000087e-05, 4.2431000000002494e-05, 4.2846999999998636e-05, 4.301400000000094e-05, 4.291600000000048e-05, 4.2430999999999025e-05, 4.2430999999999025e-05, 4.31120000000014e-05, 4.24860000000013e-05, 4.315200000000116e-05, 4.2818999999999496e-05, 4.2611000000001426e-05, 4.2375000000000745e-05, 4.3055000000000176e-05, 4.225000000000062e-05, 4.293000000000005e-05, 4.229199999999933e-05, 4.319399999999987e-05, 4.231999999999847e-05, 4.2375000000000745e-05, 4.2375000000000745e-05, 4.2582999999998816e-05]</msg>
<status status="PASS" starttime="20201029 12:55:37.769" endtime="20201029 12:55:37.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.765" endtime="20201029 12:55:37.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:37.776" endtime="20201029 12:55:37.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.774" endtime="20201029 12:55:37.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.773" endtime="20201029 12:55:37.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.418" endtime="20201029 12:55:37.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.418" endtime="20201029 12:55:37.796"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.805" endtime="20201029 12:55:37.821"></status>
</kw>
<msg timestamp="20201029 12:55:37.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:37.804" endtime="20201029 12:55:37.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:37.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:37.823" endtime="20201029 12:55:37.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.825" endtime="20201029 12:55:37.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.801" endtime="20201029 12:55:37.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.799" endtime="20201029 12:55:37.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:37.834" endtime="20201029 12:55:38.120"></status>
</kw>
<msg timestamp="20201029 12:55:38.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:37.833" endtime="20201029 12:55:38.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:38.125" endtime="20201029 12:55:38.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.133" endtime="20201029 12:55:38.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.830" endtime="20201029 12:55:38.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.828" endtime="20201029 12:55:38.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:38.140" level="INFO">${RESULT} = [{'diff': 4.398599999999933e-05}, {'diff': 4.365200000000166e-05}, {'diff': 4.380499999999746e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3846999999999636e-05}, {'diff': 4.397199999999976e-05},...</msg>
<status status="PASS" starttime="20201029 12:55:38.137" endtime="20201029 12:55:38.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:38.145" level="INFO">${ACCURACY} = {'diff': [4.398599999999933e-05, 4.365200000000166e-05, 4.380499999999746e-05, 4.3638999999998096e-05, 4.3846999999999636e-05, 4.397199999999976e-05, 4.3555000000000677e-05, 4.3846999999999636e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:55:38.141" endtime="20201029 12:55:38.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.149" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:55:38.148" endtime="20201029 12:55:38.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.151" level="INFO">VALUE: [4.398599999999933e-05, 4.365200000000166e-05, 4.380499999999746e-05, 4.3638999999998096e-05, 4.3846999999999636e-05, 4.397199999999976e-05, 4.3555000000000677e-05, 4.3846999999999636e-05, 4.419400000000087e-05, 4.4110999999999456e-05, 4.3346999999999136e-05, 4.3681000000000275e-05, 4.352799999999754e-05, 4.386200000000215e-05, 4.3611000000002426e-05, 4.3305000000000426e-05, 4.333399999999904e-05, 4.4124999999999026e-05, 4.350000000000187e-05, 4.41800000000013e-05, 4.3846999999999636e-05, 4.39999999999989e-05, 4.372199999999951e-05, 4.391600000000148e-05, 4.376400000000169e-05, 4.340199999999794e-05, 4.3833000000000066e-05, 4.351399999999797e-05, 4.3346999999999136e-05, 4.4167000000001205e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.326400000000119e-05, 4.4180999999997306e-05, 4.322199999999901e-05, 4.325000000000162e-05, 4.3389000000001315e-05, 4.38060000000004e-05, 4.329199999999686e-05, 4.379200000000083e-05, 4.404200000000108e-05, 4.4166999999997736e-05, 4.3903000000001385e-05, 4.408299999999685e-05, 4.3597000000002856e-05, 4.323599999999858e-05, 4.345799999999969e-05, 4.4167000000001205e-05, 4.319399999999987e-05, 4.3361000000002176e-05]</msg>
<status status="PASS" starttime="20201029 12:55:38.150" endtime="20201029 12:55:38.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.145" endtime="20201029 12:55:38.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:38.156" endtime="20201029 12:55:38.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.155" endtime="20201029 12:55:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.154" endtime="20201029 12:55:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.797" endtime="20201029 12:55:38.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:37.797" endtime="20201029 12:55:38.177"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.187" endtime="20201029 12:55:38.203"></status>
</kw>
<msg timestamp="20201029 12:55:38.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:38.185" endtime="20201029 12:55:38.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:38.205" endtime="20201029 12:55:38.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.207" endtime="20201029 12:55:38.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.182" endtime="20201029 12:55:38.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.180" endtime="20201029 12:55:38.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.216" endtime="20201029 12:55:38.503"></status>
</kw>
<msg timestamp="20201029 12:55:38.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:38.214" endtime="20201029 12:55:38.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:38.507" endtime="20201029 12:55:38.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.515" endtime="20201029 12:55:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.212" endtime="20201029 12:55:38.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.210" endtime="20201029 12:55:38.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:38.522" level="INFO">${RESULT} = [{'diff': 4.506999999999775e-05}, {'diff': 4.527799999999929e-05}, {'diff': 4.4360999999999706e-05}, {'diff': 4.438799999999937e-05}, {'diff': 4.447200000000026e-05}, {'diff': 4.451399999999897e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:38.518" endtime="20201029 12:55:38.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:38.526" level="INFO">${ACCURACY} = {'diff': [4.506999999999775e-05, 4.527799999999929e-05, 4.4360999999999706e-05, 4.438799999999937e-05, 4.447200000000026e-05, 4.451399999999897e-05, 4.494399999999815e-05, 4.4833000000001066e-05, 4.47...</msg>
<status status="PASS" starttime="20201029 12:55:38.523" endtime="20201029 12:55:38.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.530" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:55:38.529" endtime="20201029 12:55:38.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.537" level="INFO">VALUE: [4.506999999999775e-05, 4.527799999999929e-05, 4.4360999999999706e-05, 4.438799999999937e-05, 4.447200000000026e-05, 4.451399999999897e-05, 4.494399999999815e-05, 4.4833000000001066e-05, 4.470799999999747e-05, 4.508299999999785e-05, 4.4374999999999276e-05, 4.494399999999815e-05, 4.46939999999979e-05, 4.5111000000000456e-05, 4.448599999999983e-05, 4.4959000000000665e-05, 4.4402999999998416e-05, 4.4861000000000206e-05, 4.4431000000001025e-05, 4.476399999999922e-05, 4.4681000000001275e-05, 4.4555000000001677e-05, 4.4916999999998486e-05, 4.473600000000008e-05, 4.43329999999971e-05, 4.479099999999889e-05, 4.477700000000279e-05, 4.49999999999999e-05, 4.497200000000076e-05, 4.4389000000002315e-05, 4.4889000000002816e-05, 4.522200000000101e-05, 4.4583000000000816e-05, 4.452800000000201e-05, 4.4709000000000415e-05, 4.479199999999836e-05, 4.4652999999998666e-05, 4.498600000000033e-05, 4.4973000000000235e-05, 4.422200000000001e-05, 4.509800000000036e-05, 4.454099999999864e-05, 4.4624999999999526e-05, 4.452699999999907e-05, 4.463799999999962e-05, 4.498600000000033e-05, 4.49999999999999e-05, 4.424999999999915e-05, 4.4459000000000165e-05, 4.426399999999872e-05]</msg>
<status status="PASS" starttime="20201029 12:55:38.531" endtime="20201029 12:55:38.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.527" endtime="20201029 12:55:38.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:38.542" endtime="20201029 12:55:38.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.540" endtime="20201029 12:55:38.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.539" endtime="20201029 12:55:38.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.178" endtime="20201029 12:55:38.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.178" endtime="20201029 12:55:38.563"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.571" endtime="20201029 12:55:38.588"></status>
</kw>
<msg timestamp="20201029 12:55:38.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:38.570" endtime="20201029 12:55:38.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:38.590" endtime="20201029 12:55:38.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.592" endtime="20201029 12:55:38.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.567" endtime="20201029 12:55:38.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.565" endtime="20201029 12:55:38.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.601" endtime="20201029 12:55:38.886"></status>
</kw>
<msg timestamp="20201029 12:55:38.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:38.599" endtime="20201029 12:55:38.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019387194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:38.891" endtime="20201029 12:55:38.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.899" endtime="20201029 12:55:38.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.597" endtime="20201029 12:55:38.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.595" endtime="20201029 12:55:38.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:38.905" level="INFO">${RESULT} = [{'diff': 4.552799999999954e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.609699999999842e-05}, {'diff': 4.567999999999933e-05}, {'diff': 4.592999999999958e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:38.902" endtime="20201029 12:55:38.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:38.910" level="INFO">${ACCURACY} = {'diff': [4.552799999999954e-05, 4.617999999999983e-05, 4.5597000000001386e-05, 4.609699999999842e-05, 4.567999999999933e-05, 4.592999999999958e-05, 4.531899999999853e-05, 4.5916999999999486e-05, 4.57...</msg>
<status status="PASS" starttime="20201029 12:55:38.906" endtime="20201029 12:55:38.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.915" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:55:38.914" endtime="20201029 12:55:38.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.917" level="INFO">VALUE: [4.552799999999954e-05, 4.617999999999983e-05, 4.5597000000001386e-05, 4.609699999999842e-05, 4.567999999999933e-05, 4.592999999999958e-05, 4.531899999999853e-05, 4.5916999999999486e-05, 4.579199999999936e-05, 4.5666999999999236e-05, 4.530599999999843e-05, 4.58060000000024e-05, 4.527799999999929e-05, 4.558400000000129e-05, 4.583400000000154e-05, 4.609800000000136e-05, 4.5708999999997946e-05, 4.5875000000000776e-05, 4.565200000000019e-05, 4.5388999999999846e-05, 4.606899999999928e-05, 4.594400000000262e-05, 4.542999999999908e-05, 4.573599999999761e-05, 4.6111000000001456e-05, 4.545799999999822e-05, 4.5889000000000346e-05, 4.601400000000047e-05, 4.575000000000065e-05, 4.523600000000058e-05, 4.5361000000000706e-05, 4.5223000000000485e-05, 4.5875000000000776e-05, 4.6013999999997e-05, 4.573600000000108e-05, 4.5319999999998e-05, 4.611099999999799e-05, 4.5889000000000346e-05, 4.579199999999936e-05, 4.534699999999767e-05, 4.5833000000002067e-05, 4.566599999999976e-05, 4.5361000000000706e-05, 4.608299999999885e-05, 4.617999999999983e-05, 4.599999999999743e-05, 4.6125000000001026e-05, 4.60000000000009e-05, 4.575000000000065e-05, 4.522199999999754e-05]</msg>
<status status="PASS" starttime="20201029 12:55:38.916" endtime="20201029 12:55:38.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.911" endtime="20201029 12:55:38.919"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:38.922" endtime="20201029 12:55:38.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.921" endtime="20201029 12:55:38.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.920" endtime="20201029 12:55:38.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.564" endtime="20201029 12:55:38.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.563" endtime="20201029 12:55:38.943"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.952" endtime="20201029 12:55:38.969"></status>
</kw>
<msg timestamp="20201029 12:55:38.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:38.950" endtime="20201029 12:55:38.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:38.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:38.970" endtime="20201029 12:55:38.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.973" endtime="20201029 12:55:38.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.948" endtime="20201029 12:55:38.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.946" endtime="20201029 12:55:38.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:38.982" endtime="20201029 12:55:39.289"></status>
</kw>
<msg timestamp="20201029 12:55:39.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:38.980" endtime="20201029 12:55:39.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:39.293" endtime="20201029 12:55:39.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.301" endtime="20201029 12:55:39.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.978" endtime="20201029 12:55:39.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.976" endtime="20201029 12:55:39.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:39.308" level="INFO">${RESULT} = [{'diff': 4.716699999999727e-05}, {'diff': 4.6222999999998016e-05}, {'diff': 4.625000000000115e-05}, {'diff': 4.626399999999725e-05}, {'diff': 4.6487000000001305e-05}, {'diff': 4.717999999999736e-05},...</msg>
<status status="PASS" starttime="20201029 12:55:39.305" endtime="20201029 12:55:39.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:39.312" level="INFO">${ACCURACY} = {'diff': [4.716699999999727e-05, 4.6222999999998016e-05, 4.625000000000115e-05, 4.626399999999725e-05, 4.6487000000001305e-05, 4.717999999999736e-05, 4.6903000000000916e-05, 4.640200000000094e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 12:55:39.309" endtime="20201029 12:55:39.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.316" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:55:39.315" endtime="20201029 12:55:39.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.319" level="INFO">VALUE: [4.716699999999727e-05, 4.6222999999998016e-05, 4.625000000000115e-05, 4.626399999999725e-05, 4.6487000000001305e-05, 4.717999999999736e-05, 4.6903000000000916e-05, 4.640200000000094e-05, 4.670799999999947e-05, 4.655500000000021e-05, 4.681900000000003e-05, 4.6903000000000916e-05, 4.695799999999972e-05, 4.6639000000001096e-05, 4.7139000000001596e-05, 4.66939999999999e-05, 4.687499999999831e-05, 4.697199999999929e-05, 4.7194999999999876e-05, 4.6625000000001526e-05, 4.6389000000000846e-05, 4.6208999999998446e-05, 4.661200000000143e-05, 4.629199999999986e-05, 4.627799999999682e-05, 4.643000000000008e-05, 4.709699999999942e-05, 4.661099999999849e-05, 4.718000000000083e-05, 4.6389000000000846e-05, 4.695799999999972e-05, 4.658299999999935e-05, 4.673599999999861e-05, 4.668000000000033e-05, 4.68329999999996e-05, 4.629199999999986e-05, 4.638899999999738e-05, 4.6875000000001776e-05, 4.6694999999999376e-05, 4.6361000000001706e-05, 4.6917000000000486e-05, 4.698599999999886e-05, 4.702799999999757e-05, 4.667999999999686e-05, 4.652800000000054e-05, 4.716600000000126e-05, 4.640299999999695e-05, 4.648599999999836e-05, 4.68329999999996e-05, 4.634699999999867e-05]</msg>
<status status="PASS" starttime="20201029 12:55:39.317" endtime="20201029 12:55:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.313" endtime="20201029 12:55:39.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:39.324" endtime="20201029 12:55:39.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.322" endtime="20201029 12:55:39.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.321" endtime="20201029 12:55:39.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.944" endtime="20201029 12:55:39.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:38.943" endtime="20201029 12:55:39.345"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.353" endtime="20201029 12:55:39.370"></status>
</kw>
<msg timestamp="20201029 12:55:39.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:39.352" endtime="20201029 12:55:39.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:39.372" endtime="20201029 12:55:39.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.374" endtime="20201029 12:55:39.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.349" endtime="20201029 12:55:39.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.347" endtime="20201029 12:55:39.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.383" endtime="20201029 12:55:39.669"></status>
</kw>
<msg timestamp="20201029 12:55:39.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:39.382" endtime="20201029 12:55:39.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:39.673" endtime="20201029 12:55:39.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.681" endtime="20201029 12:55:39.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.379" endtime="20201029 12:55:39.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.377" endtime="20201029 12:55:39.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:39.688" level="INFO">${RESULT} = [{'diff': 4.737499999999881e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.809700000000042e-05}, {'diff': 4.777699999999885e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:39.685" endtime="20201029 12:55:39.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:39.692" level="INFO">${ACCURACY} = {'diff': [4.737499999999881e-05, 4.797200000000029e-05, 4.734699999999967e-05, 4.755500000000121e-05, 4.809700000000042e-05, 4.777699999999885e-05, 4.816600000000226e-05, 4.776399999999875e-05, 4.7972...</msg>
<status status="PASS" starttime="20201029 12:55:39.689" endtime="20201029 12:55:39.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.696" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:55:39.695" endtime="20201029 12:55:39.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.699" level="INFO">VALUE: [4.737499999999881e-05, 4.797200000000029e-05, 4.734699999999967e-05, 4.755500000000121e-05, 4.809700000000042e-05, 4.777699999999885e-05, 4.816600000000226e-05, 4.776399999999875e-05, 4.797200000000029e-05, 4.809700000000042e-05, 4.761099999999949e-05, 4.808300000000085e-05, 4.723599999999911e-05, 4.779199999999789e-05, 4.804199999999814e-05, 4.790299999999845e-05, 4.748599999999936e-05, 4.757000000000025e-05, 4.8013999999999e-05, 4.813899999999913e-05, 4.78200000000005e-05, 4.797200000000029e-05, 4.740200000000194e-05, 4.773599999999961e-05, 4.781900000000103e-05, 4.805500000000171e-05, 4.781900000000103e-05, 4.773599999999961e-05, 4.788899999999888e-05, 4.776400000000222e-05, 4.7681000000000806e-05, 4.759699999999992e-05, 4.818099999999784e-05, 4.759699999999992e-05, 4.7931000000001056e-05, 4.7972999999999766e-05, 4.730600000000043e-05, 4.7708999999999946e-05, 4.8194999999997407e-05, 4.754100000000164e-05, 4.749999999999893e-05, 4.812499999999956e-05, 4.769399999999743e-05, 4.80269999999991e-05, 4.756900000000078e-05, 4.736099999999924e-05, 4.71940000000004e-05, 4.730500000000096e-05, 4.812499999999956e-05, 4.756899999999731e-05]</msg>
<status status="PASS" starttime="20201029 12:55:39.697" endtime="20201029 12:55:39.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.693" endtime="20201029 12:55:39.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:39.705" endtime="20201029 12:55:39.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.703" endtime="20201029 12:55:39.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.702" endtime="20201029 12:55:39.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.345" endtime="20201029 12:55:39.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.345" endtime="20201029 12:55:39.725"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.735" endtime="20201029 12:55:39.751"></status>
</kw>
<msg timestamp="20201029 12:55:39.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:39.733" endtime="20201029 12:55:39.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:39.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:39.753" endtime="20201029 12:55:39.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.755" endtime="20201029 12:55:39.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.730" endtime="20201029 12:55:39.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.728" endtime="20201029 12:55:39.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:39.764" endtime="20201029 12:55:40.049"></status>
</kw>
<msg timestamp="20201029 12:55:40.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020694889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:39.762" endtime="20201029 12:55:40.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020646319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020694889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:40.054" endtime="20201029 12:55:40.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.062" endtime="20201029 12:55:40.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.760" endtime="20201029 12:55:40.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.758" endtime="20201029 12:55:40.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:40.068" level="INFO">${RESULT} = [{'diff': 4.857000000000125e-05}, {'diff': 4.83469999999972e-05}, {'diff': 4.862500000000006e-05}, {'diff': 4.890299999999945e-05}, {'diff': 4.919499999999841e-05}, {'diff': 4.866699999999877e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:40.065" endtime="20201029 12:55:40.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:40.073" level="INFO">${ACCURACY} = {'diff': [4.857000000000125e-05, 4.83469999999972e-05, 4.862500000000006e-05, 4.890299999999945e-05, 4.919499999999841e-05, 4.866699999999877e-05, 4.852799999999907e-05, 4.848600000000036e-05, 4.88199...</msg>
<status status="PASS" starttime="20201029 12:55:40.069" endtime="20201029 12:55:40.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.078" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:55:40.077" endtime="20201029 12:55:40.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.080" level="INFO">VALUE: [4.857000000000125e-05, 4.83469999999972e-05, 4.862500000000006e-05, 4.890299999999945e-05, 4.919499999999841e-05, 4.866699999999877e-05, 4.852799999999907e-05, 4.848600000000036e-05, 4.881999999999803e-05, 4.888899999999988e-05, 4.840299999999895e-05, 4.879199999999889e-05, 4.825000000000315e-05, 4.900000000000043e-05, 4.858300000000135e-05, 4.844400000000165e-05, 4.873599999999714e-05, 4.900000000000043e-05, 4.834700000000067e-05, 4.881999999999803e-05, 4.88330000000016e-05, 4.881899999999856e-05, 4.8959000000001196e-05, 4.8653000000002666e-05, 4.88330000000016e-05, 4.888899999999988e-05, 4.909699999999795e-05, 4.862500000000006e-05, 4.880499999999899e-05, 4.881899999999856e-05, 4.849999999999993e-05, 4.872200000000104e-05, 4.875000000000018e-05, 4.845799999999775e-05, 4.908299999999838e-05, 4.888899999999988e-05, 4.886100000000074e-05, 4.862500000000006e-05, 4.843099999999809e-05, 4.836100000000024e-05, 4.868099999999834e-05, 4.841699999999852e-05, 4.83330000000011e-05, 4.824999999999968e-05, 4.894499999999816e-05, 4.877799999999932e-05, 4.861100000000049e-05, 4.83469999999972e-05, 4.888899999999988e-05, 4.886200000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:55:40.079" endtime="20201029 12:55:40.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.074" endtime="20201029 12:55:40.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:40.085" endtime="20201029 12:55:40.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.083" endtime="20201029 12:55:40.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.082" endtime="20201029 12:55:40.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.726" endtime="20201029 12:55:40.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:39.726" endtime="20201029 12:55:40.106"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.114" endtime="20201029 12:55:40.131"></status>
</kw>
<msg timestamp="20201029 12:55:40.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:40.113" endtime="20201029 12:55:40.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:40.133" endtime="20201029 12:55:40.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.136" endtime="20201029 12:55:40.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.110" endtime="20201029 12:55:40.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.108" endtime="20201029 12:55:40.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.145" endtime="20201029 12:55:40.433"></status>
</kw>
<msg timestamp="20201029 12:55:40.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:40.144" endtime="20201029 12:55:40.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:40.437" endtime="20201029 12:55:40.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.445" endtime="20201029 12:55:40.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.141" endtime="20201029 12:55:40.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.140" endtime="20201029 12:55:40.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:40.452" level="INFO">${RESULT} = [{'diff': 4.966699999999977e-05}, {'diff': 4.979100000000042e-05}, {'diff': 4.956899999999931e-05}, {'diff': 4.994399999999968e-05}, {'diff': 4.976399999999728e-05}, {'diff': 4.936099999999777e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:40.449" endtime="20201029 12:55:40.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:40.456" level="INFO">${ACCURACY} = {'diff': [4.966699999999977e-05, 4.979100000000042e-05, 4.956899999999931e-05, 4.994399999999968e-05, 4.976399999999728e-05, 4.936099999999777e-05, 4.966699999999977e-05, 5.008299999999938e-05, 4.9903...</msg>
<status status="PASS" starttime="20201029 12:55:40.453" endtime="20201029 12:55:40.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.460" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:55:40.459" endtime="20201029 12:55:40.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.463" level="INFO">VALUE: [4.966699999999977e-05, 4.979100000000042e-05, 4.956899999999931e-05, 4.994399999999968e-05, 4.976399999999728e-05, 4.936099999999777e-05, 4.966699999999977e-05, 5.008299999999938e-05, 4.990300000000045e-05, 4.962499999999759e-05, 4.980599999999946e-05, 4.958299999999888e-05, 4.961100000000149e-05, 4.95140000000005e-05, 4.963900000000063e-05, 4.993099999999959e-05, 4.929099999999992e-05, 4.958399999999835e-05, 5.013900000000113e-05, 4.975000000000118e-05, 4.958300000000235e-05, 5.0151999999997754e-05, 4.990300000000045e-05, 4.948600000000136e-05, 5.005500000000024e-05, 4.945800000000222e-05, 4.955599999999921e-05, 4.981899999999956e-05, 4.999999999999796e-05, 4.95140000000005e-05, 4.931999999999853e-05, 4.919499999999841e-05, 5.013899999999766e-05, 4.988900000000088e-05, 4.959800000000139e-05, 4.988899999999741e-05, 4.933299999999863e-05, 5.004200000000014e-05, 4.940299999999995e-05, 4.981899999999956e-05, 4.925000000000068e-05, 4.998599999999839e-05, 4.926399999999678e-05, 5.006899999999981e-05, 4.941699999999952e-05, 4.923600000000111e-05, 4.944399999999918e-05, 4.988900000000088e-05, 4.969399999999943e-05, 4.958299999999888e-05]</msg>
<status status="PASS" starttime="20201029 12:55:40.462" endtime="20201029 12:55:40.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.457" endtime="20201029 12:55:40.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:40.468" endtime="20201029 12:55:40.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.466" endtime="20201029 12:55:40.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.465" endtime="20201029 12:55:40.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.107" endtime="20201029 12:55:40.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.106" endtime="20201029 12:55:40.489"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.497" endtime="20201029 12:55:40.513"></status>
</kw>
<msg timestamp="20201029 12:55:40.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:40.496" endtime="20201029 12:55:40.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:40.515" endtime="20201029 12:55:40.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.517" endtime="20201029 12:55:40.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.493" endtime="20201029 12:55:40.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.491" endtime="20201029 12:55:40.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.526" endtime="20201029 12:55:40.812"></status>
</kw>
<msg timestamp="20201029 12:55:40.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:40.525" endtime="20201029 12:55:40.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:40.816" endtime="20201029 12:55:40.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.824" endtime="20201029 12:55:40.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.522" endtime="20201029 12:55:40.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.521" endtime="20201029 12:55:40.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:40.831" level="INFO">${RESULT} = [{'diff': 5.037500000000181e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.054200000000064e-05}, {'diff': 5.065299999999773e-05}, {'diff': 5.056999999999978e-05}, {'diff': 5.086100000000274e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:40.828" endtime="20201029 12:55:40.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:40.835" level="INFO">${ACCURACY} = {'diff': [5.037500000000181e-05, 5.026400000000125e-05, 5.054200000000064e-05, 5.065299999999773e-05, 5.056999999999978e-05, 5.086100000000274e-05, 5.023599999999864e-05, 5.074999999999871e-05, 5.0514...</msg>
<status status="PASS" starttime="20201029 12:55:40.832" endtime="20201029 12:55:40.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.839" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:55:40.838" endtime="20201029 12:55:40.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.842" level="INFO">VALUE: [5.037500000000181e-05, 5.026400000000125e-05, 5.054200000000064e-05, 5.065299999999773e-05, 5.056999999999978e-05, 5.086100000000274e-05, 5.023599999999864e-05, 5.074999999999871e-05, 5.05140000000015e-05, 5.084800000000264e-05, 5.041699999999705e-05, 5.061200000000196e-05, 5.106899999999734e-05, 5.113900000000213e-05, 5.077700000000185e-05, 5.038900000000138e-05, 5.111099999999952e-05, 5.029199999999692e-05, 5.079100000000142e-05, 5.1179999999997894e-05, 5.101399999999853e-05, 5.06530000000012e-05, 5.109699999999995e-05, 5.070899999999948e-05, 5.088899999999841e-05, 5.082000000000003e-05, 5.051399999999803e-05, 5.08339999999996e-05, 5.027800000000082e-05, 5.125000000000268e-05, 5.062500000000206e-05, 5.1014000000002e-05, 5.102699999999863e-05, 5.099999999999896e-05, 5.106899999999734e-05, 5.088899999999841e-05, 5.105499999999777e-05, 5.074999999999871e-05, 5.088900000000188e-05, 5.023600000000211e-05, 5.081900000000056e-05, 5.095899999999973e-05, 5.097199999999982e-05, 5.120899999999998e-05, 5.112499999999909e-05, 5.068099999999687e-05, 5.043100000000009e-05, 5.070899999999948e-05, 5.118000000000136e-05, 5.10270000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:55:40.840" endtime="20201029 12:55:40.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.836" endtime="20201029 12:55:40.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:40.848" endtime="20201029 12:55:40.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.846" endtime="20201029 12:55:40.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.845" endtime="20201029 12:55:40.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.490" endtime="20201029 12:55:40.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.489" endtime="20201029 12:55:40.868"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.877" endtime="20201029 12:55:40.894"></status>
</kw>
<msg timestamp="20201029 12:55:40.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:40.875" endtime="20201029 12:55:40.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:40.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:40.895" endtime="20201029 12:55:40.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.898" endtime="20201029 12:55:40.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.873" endtime="20201029 12:55:40.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.871" endtime="20201029 12:55:40.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:40.907" endtime="20201029 12:55:41.193"></status>
</kw>
<msg timestamp="20201029 12:55:41.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019965875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:40.905" endtime="20201029 12:55:41.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019965875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:41.198" endtime="20201029 12:55:41.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.206" endtime="20201029 12:55:41.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.903" endtime="20201029 12:55:41.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.901" endtime="20201029 12:55:41.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:41.212" level="INFO">${RESULT} = [{'diff': 5.181899999999809e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.130599999999749e-05}, {'diff': 5.130499999999802e-05}, {'diff': 5.1415999999998574e-05}, {'diff': 5.122200000000007e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:55:41.209" endtime="20201029 12:55:41.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:41.217" level="INFO">${ACCURACY} = {'diff': [5.181899999999809e-05, 5.138899999999891e-05, 5.130599999999749e-05, 5.130499999999802e-05, 5.1415999999998574e-05, 5.122200000000007e-05, 5.20279999999991e-05, 5.176399999999928e-05, 5.1749...</msg>
<status status="PASS" starttime="20201029 12:55:41.213" endtime="20201029 12:55:41.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.222" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:55:41.221" endtime="20201029 12:55:41.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.224" level="INFO">VALUE: [5.181899999999809e-05, 5.138899999999891e-05, 5.130599999999749e-05, 5.130499999999802e-05, 5.1415999999998574e-05, 5.122200000000007e-05, 5.20279999999991e-05, 5.176399999999928e-05, 5.174999999999971e-05, 5.191700000000202e-05, 5.122200000000007e-05, 5.154199999999817e-05, 5.215299999999923e-05, 5.147200000000032e-05, 5.119500000000041e-05, 5.13340000000001e-05, 5.213899999999966e-05, 5.120899999999998e-05, 5.208400000000085e-05, 5.219500000000141e-05, 5.1401999999999004e-05, 5.1637999999999684e-05, 5.1415999999998574e-05, 5.13470000000002e-05, 5.1416000000002043e-05, 5.1193999999997464e-05, 5.130500000000149e-05, 5.16530000000022e-05, 5.123599999999964e-05, 5.132000000000053e-05, 5.208300000000138e-05, 5.176399999999928e-05, 5.176400000000275e-05, 5.194499999999769e-05, 5.208300000000138e-05, 5.15279999999986e-05, 5.173699999999962e-05, 5.195900000000073e-05, 5.1387999999999434e-05, 5.169400000000143e-05, 5.183300000000113e-05, 5.155500000000174e-05, 5.1401999999999004e-05, 5.205500000000224e-05, 5.158300000000088e-05, 5.148599999999989e-05, 5.155499999999827e-05, 5.222300000000055e-05, 5.173600000000014e-05, 5.138900000000238e-05]</msg>
<status status="PASS" starttime="20201029 12:55:41.223" endtime="20201029 12:55:41.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.218" endtime="20201029 12:55:41.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:41.229" endtime="20201029 12:55:41.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.228" endtime="20201029 12:55:41.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.227" endtime="20201029 12:55:41.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.869" endtime="20201029 12:55:41.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:40.869" endtime="20201029 12:55:41.250"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.259" endtime="20201029 12:55:41.275"></status>
</kw>
<msg timestamp="20201029 12:55:41.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:41.257" endtime="20201029 12:55:41.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:41.276" endtime="20201029 12:55:41.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.279" endtime="20201029 12:55:41.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.255" endtime="20201029 12:55:41.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.253" endtime="20201029 12:55:41.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.288" endtime="20201029 12:55:41.576"></status>
</kw>
<msg timestamp="20201029 12:55:41.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:41.286" endtime="20201029 12:55:41.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:41.580" endtime="20201029 12:55:41.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.588" endtime="20201029 12:55:41.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.284" endtime="20201029 12:55:41.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.282" endtime="20201029 12:55:41.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:41.595" level="INFO">${RESULT} = [{'diff': 5.298600000000139e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.236100000000077e-05}, {'diff': 5.240300000000295e-05}, {'diff': 5.231999999999806e-05}, {'diff': 5.226400000000325e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:41.591" endtime="20201029 12:55:41.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:41.599" level="INFO">${ACCURACY} = {'diff': [5.298600000000139e-05, 5.23470000000012e-05, 5.236100000000077e-05, 5.240300000000295e-05, 5.231999999999806e-05, 5.226400000000325e-05, 5.26669999999993e-05, 5.277799999999985e-05, 5.273600...</msg>
<status status="PASS" starttime="20201029 12:55:41.596" endtime="20201029 12:55:41.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.603" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:55:41.602" endtime="20201029 12:55:41.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.606" level="INFO">VALUE: [5.298600000000139e-05, 5.23470000000012e-05, 5.236100000000077e-05, 5.240300000000295e-05, 5.231999999999806e-05, 5.226400000000325e-05, 5.26669999999993e-05, 5.277799999999985e-05, 5.273600000000114e-05, 5.236100000000077e-05, 5.263900000000016e-05, 5.315300000000023e-05, 5.240299999999948e-05, 5.291699999999955e-05, 5.3166000000000324e-05, 5.255499999999927e-05, 5.255500000000274e-05, 5.273600000000114e-05, 5.2693999999998964e-05, 5.306899999999934e-05, 5.2443999999998714e-05, 5.281999999999856e-05, 5.304199999999967e-05, 5.223600000000064e-05, 5.309699999999848e-05, 5.295900000000173e-05, 5.28340000000016e-05, 5.286100000000127e-05, 5.279199999999942e-05, 5.304199999999967e-05, 5.262499999999712e-05, 5.256899999999884e-05, 5.223600000000064e-05, 5.2457999999998284e-05, 5.223600000000064e-05, 5.2402000000000004e-05, 5.259700000000145e-05, 5.231899999999859e-05, 5.3179999999999894e-05, 5.229199999999892e-05, 5.2943999999999214e-05, 5.304200000000314e-05, 5.24730000000008e-05, 5.2985999999997924e-05, 5.30280000000001e-05, 5.284800000000117e-05, 5.23340000000011e-05, 5.2957999999998784e-05, 5.265299999999973e-05, 5.222300000000055e-05]</msg>
<status status="PASS" starttime="20201029 12:55:41.604" endtime="20201029 12:55:41.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.600" endtime="20201029 12:55:41.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:41.611" endtime="20201029 12:55:41.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.609" endtime="20201029 12:55:41.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.608" endtime="20201029 12:55:41.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.251" endtime="20201029 12:55:41.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.251" endtime="20201029 12:55:41.632"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.640" endtime="20201029 12:55:41.658"></status>
</kw>
<msg timestamp="20201029 12:55:41.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:41.639" endtime="20201029 12:55:41.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:41.660" endtime="20201029 12:55:41.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.662" endtime="20201029 12:55:41.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.636" endtime="20201029 12:55:41.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.634" endtime="20201029 12:55:41.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.671" endtime="20201029 12:55:41.957"></status>
</kw>
<msg timestamp="20201029 12:55:41.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:41.670" endtime="20201029 12:55:41.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:41.961" endtime="20201029 12:55:41.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:41.970" endtime="20201029 12:55:41.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.667" endtime="20201029 12:55:41.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.665" endtime="20201029 12:55:41.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:41.976" level="INFO">${RESULT} = [{'diff': 5.35280000000006e-05}, {'diff': 5.400000000000196e-05}, {'diff': 5.3235999999998174e-05}, {'diff': 5.347200000000232e-05}, {'diff': 5.387500000000184e-05}, {'diff': 5.340300000000048e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:41.973" endtime="20201029 12:55:41.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:41.980" level="INFO">${ACCURACY} = {'diff': [5.35280000000006e-05, 5.400000000000196e-05, 5.3235999999998174e-05, 5.347200000000232e-05, 5.387500000000184e-05, 5.340300000000048e-05, 5.411100000000252e-05, 5.359700000000245e-05, 5.3610...</msg>
<status status="PASS" starttime="20201029 12:55:41.977" endtime="20201029 12:55:41.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.985" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:55:41.984" endtime="20201029 12:55:41.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:41.990" level="INFO">VALUE: [5.35280000000006e-05, 5.400000000000196e-05, 5.3235999999998174e-05, 5.347200000000232e-05, 5.387500000000184e-05, 5.340300000000048e-05, 5.411100000000252e-05, 5.359700000000245e-05, 5.361099999999855e-05, 5.320900000000198e-05, 5.408399999999938e-05, 5.348600000000189e-05, 5.3749999999998244e-05, 5.356899999999984e-05, 5.3929999999997175e-05, 5.358299999999941e-05, 5.405500000000077e-05, 5.3749999999998244e-05, 5.3416000000000574e-05, 5.3235999999998174e-05, 5.355500000000027e-05, 5.355500000000027e-05, 5.387499999999837e-05, 5.391700000000055e-05, 5.393100000000012e-05, 5.376400000000128e-05, 5.383299999999966e-05, 5.322299999999808e-05, 5.327800000000035e-05, 5.413900000000166e-05, 5.368099999999987e-05, 5.355500000000027e-05, 5.332000000000253e-05, 5.3430000000000144e-05, 5.3902000000001504e-05, 5.3485999999998424e-05, 5.356899999999984e-05, 5.381900000000009e-05, 5.3499999999997994e-05, 5.383299999999966e-05, 5.365299999999726e-05, 5.355600000000321e-05, 5.319499999999894e-05, 5.370900000000248e-05, 5.419499999999994e-05, 5.394499999999969e-05, 5.405600000000024e-05, 5.395899999999926e-05, 5.3679999999996925e-05, 5.384800000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:55:41.986" endtime="20201029 12:55:41.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.981" endtime="20201029 12:55:41.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:41.996" endtime="20201029 12:55:42.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.994" endtime="20201029 12:55:42.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.993" endtime="20201029 12:55:42.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.633" endtime="20201029 12:55:42.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:41.632" endtime="20201029 12:55:42.016"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.025" endtime="20201029 12:55:42.042"></status>
</kw>
<msg timestamp="20201029 12:55:42.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:42.023" endtime="20201029 12:55:42.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:42.043" endtime="20201029 12:55:42.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.046" endtime="20201029 12:55:42.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.021" endtime="20201029 12:55:42.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.019" endtime="20201029 12:55:42.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.055" endtime="20201029 12:55:42.356"></status>
</kw>
<msg timestamp="20201029 12:55:42.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:55:42.053" endtime="20201029 12:55:42.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:55:42.360" endtime="20201029 12:55:42.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.368" endtime="20201029 12:55:42.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.050" endtime="20201029 12:55:42.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.049" endtime="20201029 12:55:42.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:42.375" level="INFO">${RESULT} = [{'diff': 5.51670000000018e-05}, {'diff': 5.5027999999998634e-05}, {'diff': 5.430600000000049e-05}, {'diff': 5.481900000000109e-05}, {'diff': 5.468100000000087e-05}, {'diff': 5.475000000000271e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:42.372" endtime="20201029 12:55:42.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:42.380" level="INFO">${ACCURACY} = {'diff': [5.51670000000018e-05, 5.5027999999998634e-05, 5.430600000000049e-05, 5.481900000000109e-05, 5.468100000000087e-05, 5.475000000000271e-05, 5.509799999999995e-05, 5.48609999999998e-05, 5.45139...</msg>
<status status="PASS" starttime="20201029 12:55:42.376" endtime="20201029 12:55:42.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.384" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:55:42.383" endtime="20201029 12:55:42.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.387" level="INFO">VALUE: [5.51670000000018e-05, 5.5027999999998634e-05, 5.430600000000049e-05, 5.481900000000109e-05, 5.468100000000087e-05, 5.475000000000271e-05, 5.509799999999995e-05, 5.48609999999998e-05, 5.4513999999998564e-05, 5.5027999999998634e-05, 5.461099999999955e-05, 5.487499999999937e-05, 5.480500000000152e-05, 5.511100000000005e-05, 5.4416000000001574e-05, 5.461100000000302e-05, 5.4930000000001644e-05, 5.5180000000001894e-05, 5.430600000000049e-05, 5.4221999999999604e-05, 5.4208000000000034e-05, 5.4291999999997453e-05, 5.505600000000124e-05, 5.445899999999976e-05, 5.462499999999912e-05, 5.459699999999998e-05, 5.4499999999998994e-05, 5.4722000000000104e-05, 5.509799999999995e-05, 5.520900000000051e-05, 5.4208000000000034e-05, 5.465299999999826e-05, 5.4680000000001394e-05, 5.4999999999999494e-05, 5.430600000000049e-05, 5.426400000000178e-05, 5.433399999999963e-05, 5.450000000000246e-05, 5.505600000000124e-05, 5.430600000000049e-05, 5.444500000000019e-05, 5.519499999999747e-05, 5.4235999999999174e-05, 5.426400000000178e-05, 5.441700000000105e-05, 5.491700000000155e-05, 5.48609999999998e-05, 5.4708000000000534e-05, 5.4958000000000784e-05, 5.5180000000001894e-05]</msg>
<status status="PASS" starttime="20201029 12:55:42.385" endtime="20201029 12:55:42.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.381" endtime="20201029 12:55:42.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:42.392" endtime="20201029 12:55:42.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.390" endtime="20201029 12:55:42.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.389" endtime="20201029 12:55:42.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.017" endtime="20201029 12:55:42.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.017" endtime="20201029 12:55:42.413"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.421" endtime="20201029 12:55:42.438"></status>
</kw>
<msg timestamp="20201029 12:55:42.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:42.420" endtime="20201029 12:55:42.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:42.440" endtime="20201029 12:55:42.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.442" endtime="20201029 12:55:42.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.417" endtime="20201029 12:55:42.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.415" endtime="20201029 12:55:42.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.451" endtime="20201029 12:55:42.738"></status>
</kw>
<msg timestamp="20201029 12:55:42.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:42.450" endtime="20201029 12:55:42.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019467097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:42.742" endtime="20201029 12:55:42.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.750" endtime="20201029 12:55:42.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.447" endtime="20201029 12:55:42.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.446" endtime="20201029 12:55:42.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:42.757" level="INFO">${RESULT} = [{'diff': 5.534700000000073e-05}, {'diff': 5.588899999999994e-05}, {'diff': 5.608299999999844e-05}, {'diff': 5.6027999999999634e-05}, {'diff': 5.6249999999997274e-05}, {'diff': 5.606899999999887e-05},...</msg>
<status status="PASS" starttime="20201029 12:55:42.753" endtime="20201029 12:55:42.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:42.761" level="INFO">${ACCURACY} = {'diff': [5.534700000000073e-05, 5.588899999999994e-05, 5.608299999999844e-05, 5.6027999999999634e-05, 5.6249999999997274e-05, 5.606899999999887e-05, 5.5929999999999175e-05, 5.5277999999998884e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:55:42.758" endtime="20201029 12:55:42.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.765" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:55:42.764" endtime="20201029 12:55:42.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.768" level="INFO">VALUE: [5.534700000000073e-05, 5.588899999999994e-05, 5.608299999999844e-05, 5.6027999999999634e-05, 5.6249999999997274e-05, 5.606899999999887e-05, 5.5929999999999175e-05, 5.5277999999998884e-05, 5.534700000000073e-05, 5.53610000000003e-05, 5.540299999999901e-05, 5.590299999999951e-05, 5.6014000000000064e-05, 5.58619999999968e-05, 5.581999999999809e-05, 5.606999999999834e-05, 5.5652000000003254e-05, 5.5736000000000674e-05, 5.5679999999998925e-05, 5.53610000000003e-05, 5.5221999999997134e-05, 5.529099999999898e-05, 5.583300000000166e-05, 5.5749999999996774e-05, 5.537499999999987e-05, 5.538899999999944e-05, 5.5694000000001964e-05, 5.587500000000037e-05, 5.581999999999809e-05, 5.613900000000019e-05, 5.5249999999999744e-05, 5.563899999999969e-05, 5.5750000000000244e-05, 5.5651999999999785e-05, 5.540300000000248e-05, 5.5208000000001034e-05, 5.558300000000141e-05, 5.5722000000001104e-05, 5.563899999999969e-05, 5.5513999999999564e-05, 5.5263999999999314e-05, 5.5291999999998453e-05, 5.581899999999862e-05, 5.5291999999998453e-05, 5.577800000000285e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.540299999999901e-05, 5.5249999999999744e-05, 5.562500000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:55:42.766" endtime="20201029 12:55:42.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.762" endtime="20201029 12:55:42.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:42.773" endtime="20201029 12:55:42.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.771" endtime="20201029 12:55:42.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.770" endtime="20201029 12:55:42.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.413" endtime="20201029 12:55:42.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.413" endtime="20201029 12:55:42.793"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.802" endtime="20201029 12:55:42.819"></status>
</kw>
<msg timestamp="20201029 12:55:42.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:42.800" endtime="20201029 12:55:42.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:42.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:42.821" endtime="20201029 12:55:42.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.824" endtime="20201029 12:55:42.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.798" endtime="20201029 12:55:42.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.796" endtime="20201029 12:55:42.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:42.832" endtime="20201029 12:55:43.119"></status>
</kw>
<msg timestamp="20201029 12:55:43.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:42.831" endtime="20201029 12:55:43.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:43.123" endtime="20201029 12:55:43.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.132" endtime="20201029 12:55:43.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.828" endtime="20201029 12:55:43.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.827" endtime="20201029 12:55:43.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:43.138" level="INFO">${RESULT} = [{'diff': 5.706899999999987e-05}, {'diff': 5.6750000000001244e-05}, {'diff': 5.669499999999897e-05}, {'diff': 5.6986000000001924e-05}, {'diff': 5.6999999999998024e-05}, {'diff': 5.669500000000244e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:43.135" endtime="20201029 12:55:43.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:43.142" level="INFO">${ACCURACY} = {'diff': [5.706899999999987e-05, 5.6750000000001244e-05, 5.669499999999897e-05, 5.6986000000001924e-05, 5.6999999999998024e-05, 5.669500000000244e-05, 5.66809999999994e-05, 5.6305999999999023e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:55:43.139" endtime="20201029 12:55:43.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.147" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:55:43.146" endtime="20201029 12:55:43.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.149" level="INFO">VALUE: [5.706899999999987e-05, 5.6750000000001244e-05, 5.669499999999897e-05, 5.6986000000001924e-05, 5.6999999999998024e-05, 5.669500000000244e-05, 5.66809999999994e-05, 5.6305999999999023e-05, 5.7013999999997594e-05, 5.6555999999999274e-05, 5.638900000000044e-05, 5.681899999999962e-05, 5.6472000000001854e-05, 5.65549999999998e-05, 5.70550000000003e-05, 5.711099999999858e-05, 5.631899999999912e-05, 5.6555999999999274e-05, 5.6972000000002354e-05, 5.665300000000026e-05, 5.659699999999851e-05, 5.658299999999894e-05, 5.6305999999999023e-05, 5.6930000000000175e-05, 5.6555999999999274e-05, 5.6555999999999274e-05, 5.677699999999744e-05, 5.690300000000051e-05, 5.6457999999998815e-05, 5.715300000000076e-05, 5.638900000000044e-05, 5.684700000000223e-05, 5.6277999999999884e-05, 5.6458000000002284e-05, 5.7000000000001494e-05, 5.6277999999999884e-05, 5.657000000000231e-05, 5.6721999999998635e-05, 5.6319999999998593e-05, 5.6235999999997704e-05, 5.695899999999879e-05, 5.622299999999761e-05, 5.6986000000001924e-05, 5.647300000000133e-05, 5.6736000000001674e-05, 5.6693999999999495e-05, 5.630499999999955e-05, 5.654100000000023e-05, 5.6207999999998565e-05, 5.690300000000051e-05]</msg>
<status status="PASS" starttime="20201029 12:55:43.148" endtime="20201029 12:55:43.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.143" endtime="20201029 12:55:43.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:43.155" endtime="20201029 12:55:43.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.154" endtime="20201029 12:55:43.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.152" endtime="20201029 12:55:43.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.794" endtime="20201029 12:55:43.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:42.794" endtime="20201029 12:55:43.176"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.184" endtime="20201029 12:55:43.201"></status>
</kw>
<msg timestamp="20201029 12:55:43.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:43.183" endtime="20201029 12:55:43.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:43.202" endtime="20201029 12:55:43.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.205" endtime="20201029 12:55:43.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.180" endtime="20201029 12:55:43.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.178" endtime="20201029 12:55:43.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.217" endtime="20201029 12:55:43.504"></status>
</kw>
<msg timestamp="20201029 12:55:43.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:43.212" endtime="20201029 12:55:43.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:55:43.508" endtime="20201029 12:55:43.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.516" endtime="20201029 12:55:43.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.209" endtime="20201029 12:55:43.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.208" endtime="20201029 12:55:43.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:43.522" level="INFO">${RESULT} = [{'diff': 5.762500000000212e-05}, {'diff': 5.791700000000108e-05}, {'diff': 5.784799999999923e-05}, {'diff': 5.8000000000002494e-05}, {'diff': 5.720899999999904e-05}, {'diff': 5.7569999999999844e-05},...</msg>
<status status="PASS" starttime="20201029 12:55:43.519" endtime="20201029 12:55:43.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:43.527" level="INFO">${ACCURACY} = {'diff': [5.762500000000212e-05, 5.791700000000108e-05, 5.784799999999923e-05, 5.8000000000002494e-05, 5.720899999999904e-05, 5.7569999999999844e-05, 5.812499999999915e-05, 5.793100000000065e-05, 5.74...</msg>
<status status="PASS" starttime="20201029 12:55:43.523" endtime="20201029 12:55:43.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.532" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:55:43.531" endtime="20201029 12:55:43.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.535" level="INFO">VALUE: [5.762500000000212e-05, 5.791700000000108e-05, 5.784799999999923e-05, 5.8000000000002494e-05, 5.720899999999904e-05, 5.7569999999999844e-05, 5.812499999999915e-05, 5.793100000000065e-05, 5.7401999999998066e-05, 5.8165999999998386e-05, 5.806900000000087e-05, 5.736099999999883e-05, 5.7999999999999025e-05, 5.815300000000176e-05, 5.788900000000194e-05, 5.736099999999883e-05, 5.791700000000108e-05, 5.7749999999998775e-05, 5.81810000000009e-05, 5.813899999999872e-05, 5.7499999999998525e-05, 5.738900000000144e-05, 5.738899999999797e-05, 5.73610000000023e-05, 5.7833999999999663e-05, 5.738900000000144e-05, 5.809700000000001e-05, 5.809700000000001e-05, 5.790299999999804e-05, 5.7972000000003354e-05, 5.733299999999969e-05, 5.7264000000001314e-05, 5.7792000000000954e-05, 5.797300000000283e-05, 5.7499999999998525e-05, 5.8013999999998594e-05, 5.7736000000002674e-05, 5.7583999999999413e-05, 5.786099999999933e-05, 5.766700000000083e-05, 5.7930000000001175e-05, 5.806900000000087e-05, 5.7735999999999205e-05, 5.8166000000001855e-05, 5.8194000000000995e-05, 5.730500000000055e-05, 5.7999999999999025e-05, 5.8027999999998164e-05, 5.811099999999958e-05, 5.7764000000001814e-05]</msg>
<status status="PASS" starttime="20201029 12:55:43.533" endtime="20201029 12:55:43.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.528" endtime="20201029 12:55:43.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:43.540" endtime="20201029 12:55:43.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.539" endtime="20201029 12:55:43.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.538" endtime="20201029 12:55:43.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.177" endtime="20201029 12:55:43.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.176" endtime="20201029 12:55:43.561"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.570" endtime="20201029 12:55:43.586"></status>
</kw>
<msg timestamp="20201029 12:55:43.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:43.568" endtime="20201029 12:55:43.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:43.588" endtime="20201029 12:55:43.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.591" endtime="20201029 12:55:43.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.566" endtime="20201029 12:55:43.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.564" endtime="20201029 12:55:43.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.600" endtime="20201029 12:55:43.902"></status>
</kw>
<msg timestamp="20201029 12:55:43.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:43.598" endtime="20201029 12:55:43.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019569639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:43.906" endtime="20201029 12:55:43.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.915" endtime="20201029 12:55:43.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.596" endtime="20201029 12:55:43.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.594" endtime="20201029 12:55:43.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:43.921" level="INFO">${RESULT} = [{'diff': 5.894500000000122e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.862500000000312e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.820900000000004e-05}, {'diff': 5.8334000000000163e-05}...</msg>
<status status="PASS" starttime="20201029 12:55:43.918" endtime="20201029 12:55:43.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:43.925" level="INFO">${ACCURACY} = {'diff': [5.894500000000122e-05, 5.9013999999999595e-05, 5.862500000000312e-05, 5.9013999999999595e-05, 5.820900000000004e-05, 5.8334000000000163e-05, 5.88749999999999e-05, 5.873699999999968e-05, 5.88...</msg>
<status status="PASS" starttime="20201029 12:55:43.922" endtime="20201029 12:55:43.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.930" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:55:43.929" endtime="20201029 12:55:43.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.932" level="INFO">VALUE: [5.894500000000122e-05, 5.9013999999999595e-05, 5.862500000000312e-05, 5.9013999999999595e-05, 5.820900000000004e-05, 5.8334000000000163e-05, 5.88749999999999e-05, 5.873699999999968e-05, 5.884700000000076e-05, 5.886100000000033e-05, 5.9194000000001995e-05, 5.911100000000058e-05, 5.880500000000205e-05, 5.8263999999998844e-05, 5.884699999999729e-05, 5.8249999999999275e-05, 5.881900000000162e-05, 5.836099999999983e-05, 5.9194999999998e-05, 5.834700000000026e-05, 5.8986000000000455e-05, 5.8250000000002744e-05, 5.8555999999997804e-05, 5.902699999999969e-05, 5.861199999999955e-05, 5.830499999999808e-05, 5.8305999999997554e-05, 5.858299999999747e-05, 5.861100000000008e-05, 5.884700000000076e-05, 5.9000000000000025e-05, 5.838899999999897e-05, 5.8555999999997804e-05, 5.884700000000076e-05, 5.834700000000026e-05, 5.8499999999999525e-05, 5.8749999999999775e-05, 5.888899999999947e-05, 5.8806000000001524e-05, 5.8597999999999983e-05, 5.890299999999904e-05, 5.912500000000015e-05, 5.8666000000002355e-05, 5.9013999999999595e-05, 5.8306000000001024e-05, 5.881899999999815e-05, 5.912500000000015e-05, 5.9027999999999164e-05, 5.913899999999972e-05, 5.8472000000000385e-05]</msg>
<status status="PASS" starttime="20201029 12:55:43.931" endtime="20201029 12:55:43.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.926" endtime="20201029 12:55:43.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:43.938" endtime="20201029 12:55:43.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.937" endtime="20201029 12:55:43.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.936" endtime="20201029 12:55:43.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.562" endtime="20201029 12:55:43.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.562" endtime="20201029 12:55:43.959"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.968" endtime="20201029 12:55:43.986"></status>
</kw>
<msg timestamp="20201029 12:55:43.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:43.966" endtime="20201029 12:55:43.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:43.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:43.988" endtime="20201029 12:55:43.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:43.990" endtime="20201029 12:55:43.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.964" endtime="20201029 12:55:43.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.962" endtime="20201029 12:55:43.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.000" endtime="20201029 12:55:44.286"></status>
</kw>
<msg timestamp="20201029 12:55:44.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:43.998" endtime="20201029 12:55:44.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020482375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:44.290" endtime="20201029 12:55:44.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.299" endtime="20201029 12:55:44.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.996" endtime="20201029 12:55:44.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.994" endtime="20201029 12:55:44.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:44.306" level="INFO">${RESULT} = [{'diff': 5.9764000000000345e-05}, {'diff': 5.9707999999998596e-05}, {'diff': 5.986099999999786e-05}, {'diff': 5.9514000000000095e-05}, {'diff': 5.988900000000047e-05}, {'diff': 5.9834000000001664e-05...</msg>
<status status="PASS" starttime="20201029 12:55:44.302" endtime="20201029 12:55:44.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:44.310" level="INFO">${ACCURACY} = {'diff': [5.9764000000000345e-05, 5.9707999999998596e-05, 5.986099999999786e-05, 5.9514000000000095e-05, 5.988900000000047e-05, 5.9834000000001664e-05, 5.994499999999875e-05, 5.9320000000001594e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:55:44.307" endtime="20201029 12:55:44.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.314" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:55:44.313" endtime="20201029 12:55:44.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.316" level="INFO">VALUE: [5.9764000000000345e-05, 5.9707999999998596e-05, 5.986099999999786e-05, 5.9514000000000095e-05, 5.988900000000047e-05, 5.9834000000001664e-05, 5.994499999999875e-05, 5.9320000000001594e-05, 5.9348000000000734e-05, 5.948700000000043e-05, 5.9499999999997055e-05, 5.9929999999999706e-05, 5.9722000000001635e-05, 5.930500000000255e-05, 5.9777999999999915e-05, 5.936099999999736e-05, 5.986100000000133e-05, 5.988900000000047e-05, 6.0014000000000595e-05, 6.0028000000000165e-05, 5.966699999999936e-05, 5.943099999999868e-05, 5.940300000000301e-05, 5.9319999999998124e-05, 5.9847999999997764e-05, 5.966700000000283e-05, 6.00689999999994e-05, 6.0166000000000386e-05, 5.9764000000000345e-05, 5.968099999999893e-05, 5.988900000000047e-05, 5.965299999999979e-05, 5.959700000000151e-05, 5.931900000000212e-05, 5.9806000000002524e-05, 6.008300000000244e-05, 5.9999999999997555e-05, 5.991699999999961e-05, 5.9999999999997555e-05, 5.9805999999999054e-05, 5.995899999999832e-05, 5.965299999999979e-05, 6.0137999999997777e-05, 5.980499999999958e-05, 5.9985999999997985e-05, 5.929100000000298e-05, 6.0041999999999734e-05, 6.013900000000072e-05, 5.9471999999997915e-05, 5.934700000000126e-05]</msg>
<status status="PASS" starttime="20201029 12:55:44.315" endtime="20201029 12:55:44.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.310" endtime="20201029 12:55:44.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:44.326" endtime="20201029 12:55:44.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.324" endtime="20201029 12:55:44.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.323" endtime="20201029 12:55:44.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.960" endtime="20201029 12:55:44.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:43.959" endtime="20201029 12:55:44.347"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.356" endtime="20201029 12:55:44.372"></status>
</kw>
<msg timestamp="20201029 12:55:44.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:44.354" endtime="20201029 12:55:44.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:44.374" endtime="20201029 12:55:44.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.376" endtime="20201029 12:55:44.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.352" endtime="20201029 12:55:44.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.349" endtime="20201029 12:55:44.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.385" endtime="20201029 12:55:44.670"></status>
</kw>
<msg timestamp="20201029 12:55:44.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:44.383" endtime="20201029 12:55:44.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:44.675" endtime="20201029 12:55:44.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.683" endtime="20201029 12:55:44.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.381" endtime="20201029 12:55:44.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.379" endtime="20201029 12:55:44.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:44.689" level="INFO">${RESULT} = [{'diff': 6.0542000000000235e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 6.076300000000187e-05}, {'diff': 6.0652000000001316e-05}, {'diff': 6.108299999999997e-05}, {'diff': 6.0971999999999416e-05...</msg>
<status status="PASS" starttime="20201029 12:55:44.686" endtime="20201029 12:55:44.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:44.694" level="INFO">${ACCURACY} = {'diff': [6.0542000000000235e-05, 6.0250000000001275e-05, 6.076300000000187e-05, 6.0652000000001316e-05, 6.108299999999997e-05, 6.0971999999999416e-05, 6.033300000000269e-05, 6.055500000000033e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:55:44.690" endtime="20201029 12:55:44.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.699" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:55:44.698" endtime="20201029 12:55:44.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.701" level="INFO">VALUE: [6.0542000000000235e-05, 6.0250000000001275e-05, 6.076300000000187e-05, 6.0652000000001316e-05, 6.108299999999997e-05, 6.0971999999999416e-05, 6.033300000000269e-05, 6.055500000000033e-05, 6.037499999999793e-05, 6.036099999999836e-05, 6.111099999999911e-05, 6.061099999999861e-05, 6.0416000000000636e-05, 6.111099999999911e-05, 6.0320000000002594e-05, 6.0598000000001984e-05, 6.0749999999998305e-05, 6.101299999999865e-05, 6.0749999999998305e-05, 6.108299999999997e-05, 6.105499999999736e-05, 6.115300000000129e-05, 6.0680000000000456e-05, 6.0957999999999846e-05, 6.0777999999997445e-05, 6.116699999999739e-05, 6.0472000000002385e-05, 6.0971999999999416e-05, 6.0250000000001275e-05, 6.0819999999999624e-05, 6.0820000000003094e-05, 6.0264000000000845e-05, 6.0598000000001984e-05, 6.112499999999868e-05, 6.031900000000312e-05, 6.062500000000165e-05, 6.055500000000033e-05, 6.0222000000002135e-05, 6.105500000000083e-05, 6.047300000000186e-05, 6.063899999999775e-05, 6.0221999999998665e-05, 6.0291999999999984e-05, 6.113900000000172e-05, 6.0291999999999984e-05, 6.0236000000001705e-05, 6.03750000000014e-05, 6.0570000000002844e-05, 6.059699999999904e-05, 6.093100000000018e-05]</msg>
<status status="PASS" starttime="20201029 12:55:44.700" endtime="20201029 12:55:44.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.695" endtime="20201029 12:55:44.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:44.706" endtime="20201029 12:55:44.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.705" endtime="20201029 12:55:44.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.704" endtime="20201029 12:55:44.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.348" endtime="20201029 12:55:44.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.347" endtime="20201029 12:55:44.727"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.737" endtime="20201029 12:55:44.753"></status>
</kw>
<msg timestamp="20201029 12:55:44.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:44.735" endtime="20201029 12:55:44.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:44.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:44.754" endtime="20201029 12:55:44.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.757" endtime="20201029 12:55:44.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.731" endtime="20201029 12:55:44.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.729" endtime="20201029 12:55:44.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:44.766" endtime="20201029 12:55:45.057"></status>
</kw>
<msg timestamp="20201029 12:55:45.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:44.764" endtime="20201029 12:55:45.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:45.062" endtime="20201029 12:55:45.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.071" endtime="20201029 12:55:45.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.762" endtime="20201029 12:55:45.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.760" endtime="20201029 12:55:45.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:45.078" level="INFO">${RESULT} = [{'diff': 6.165300000000179e-05}, {'diff': 6.163799999999928e-05}, {'diff': 6.122199999999967e-05}, {'diff': 6.141599999999817e-05}, {'diff': 6.14300000000012e-05}, {'diff': 6.172200000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:45.074" endtime="20201029 12:55:45.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:45.083" level="INFO">${ACCURACY} = {'diff': [6.165300000000179e-05, 6.163799999999928e-05, 6.122199999999967e-05, 6.141599999999817e-05, 6.14300000000012e-05, 6.172200000000017e-05, 6.154199999999777e-05, 6.154200000000123e-05, 6.15830...</msg>
<status status="PASS" starttime="20201029 12:55:45.079" endtime="20201029 12:55:45.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.088" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:55:45.086" endtime="20201029 12:55:45.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.090" level="INFO">VALUE: [6.165300000000179e-05, 6.163799999999928e-05, 6.122199999999967e-05, 6.141599999999817e-05, 6.14300000000012e-05, 6.172200000000017e-05, 6.154199999999777e-05, 6.154200000000123e-05, 6.158300000000047e-05, 6.209699999999707e-05, 6.15560000000008e-05, 6.198599999999999e-05, 6.168100000000093e-05, 6.13889999999985e-05, 6.209800000000001e-05, 6.184799999999976e-05, 6.218099999999796e-05, 6.20690000000014e-05, 6.136099999999936e-05, 6.216600000000239e-05, 6.169400000000103e-05, 6.177799999999845e-05, 6.197200000000042e-05, 6.20140000000026e-05, 6.141699999999764e-05, 6.176399999999888e-05, 6.193100000000118e-05, 6.125000000000227e-05, 6.13889999999985e-05, 6.138900000000197e-05, 6.159799999999951e-05, 6.204099999999879e-05, 6.170900000000007e-05, 6.161099999999961e-05, 6.212499999999968e-05, 6.144400000000078e-05, 6.195800000000085e-05, 6.126400000000184e-05, 6.123599999999924e-05, 6.183300000000072e-05, 6.179200000000148e-05, 6.216699999999839e-05, 6.143099999999721e-05, 6.154200000000123e-05, 6.133400000000316e-05, 6.190299999999857e-05, 6.213900000000272e-05, 6.219400000000153e-05, 6.181900000000115e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:55:45.089" endtime="20201029 12:55:45.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.084" endtime="20201029 12:55:45.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:45.095" endtime="20201029 12:55:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.094" endtime="20201029 12:55:45.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.093" endtime="20201029 12:55:45.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.728" endtime="20201029 12:55:45.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:44.727" endtime="20201029 12:55:45.116"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.126" endtime="20201029 12:55:45.146"></status>
</kw>
<msg timestamp="20201029 12:55:45.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:45.124" endtime="20201029 12:55:45.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:45.150" endtime="20201029 12:55:45.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.155" endtime="20201029 12:55:45.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.121" endtime="20201029 12:55:45.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.119" endtime="20201029 12:55:45.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.176" endtime="20201029 12:55:45.472"></status>
</kw>
<msg timestamp="20201029 12:55:45.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021225444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:45.173" endtime="20201029 12:55:45.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021225444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021288194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:45.476" endtime="20201029 12:55:45.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.484" endtime="20201029 12:55:45.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.166" endtime="20201029 12:55:45.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.163" endtime="20201029 12:55:45.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:45.490" level="INFO">${RESULT} = [{'diff': 6.27500000000003e-05}, {'diff': 6.251399999999963e-05}, {'diff': 6.300000000000056e-05}, {'diff': 6.226399999999938e-05}, {'diff': 6.265199999999985e-05}, {'diff': 6.313900000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:45.487" endtime="20201029 12:55:45.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:45.494" level="INFO">${ACCURACY} = {'diff': [6.27500000000003e-05, 6.251399999999963e-05, 6.300000000000056e-05, 6.226399999999938e-05, 6.265199999999985e-05, 6.313900000000025e-05, 6.273600000000074e-05, 6.219399999999806e-05, 6.30279...</msg>
<status status="PASS" starttime="20201029 12:55:45.491" endtime="20201029 12:55:45.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.499" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:55:45.498" endtime="20201029 12:55:45.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.505" level="INFO">VALUE: [6.27500000000003e-05, 6.251399999999963e-05, 6.300000000000056e-05, 6.226399999999938e-05, 6.265199999999985e-05, 6.313900000000025e-05, 6.273600000000074e-05, 6.219399999999806e-05, 6.30279999999997e-05, 6.298600000000099e-05, 6.297200000000142e-05, 6.270900000000107e-05, 6.25279999999992e-05, 6.263899999999975e-05, 6.23340000000007e-05, 6.23889999999995e-05, 6.245800000000135e-05, 6.317999999999949e-05, 6.24439999999983e-05, 6.302700000000022e-05, 6.27500000000003e-05, 6.248600000000049e-05, 6.300000000000056e-05, 6.276399999999988e-05, 6.230600000000155e-05, 6.231999999999766e-05, 6.290299999999957e-05, 6.223600000000024e-05, 6.22499999999998e-05, 6.261200000000008e-05, 6.309799999999754e-05, 6.276399999999988e-05, 6.263799999999681e-05, 6.233300000000122e-05, 6.247200000000092e-05, 6.304199999999927e-05, 6.313900000000025e-05, 6.234700000000079e-05, 6.259700000000104e-05, 6.313900000000025e-05, 6.25560000000018e-05, 6.250000000000006e-05, 6.263899999999975e-05, 6.312499999999721e-05, 6.247200000000092e-05, 6.254199999999877e-05, 6.304199999999927e-05, 6.226399999999938e-05, 6.269399999999856e-05, 6.24439999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:55:45.500" endtime="20201029 12:55:45.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.495" endtime="20201029 12:55:45.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:45.510" endtime="20201029 12:55:45.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.508" endtime="20201029 12:55:45.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.507" endtime="20201029 12:55:45.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.117" endtime="20201029 12:55:45.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.117" endtime="20201029 12:55:45.531"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.540" endtime="20201029 12:55:45.558"></status>
</kw>
<msg timestamp="20201029 12:55:45.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:45.539" endtime="20201029 12:55:45.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:45.560" endtime="20201029 12:55:45.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.562" endtime="20201029 12:55:45.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.536" endtime="20201029 12:55:45.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.533" endtime="20201029 12:55:45.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.571" endtime="20201029 12:55:45.858"></status>
</kw>
<msg timestamp="20201029 12:55:45.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:45.570" endtime="20201029 12:55:45.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020635681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:45.862" endtime="20201029 12:55:45.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.870" endtime="20201029 12:55:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.567" endtime="20201029 12:55:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.565" endtime="20201029 12:55:45.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:45.877" level="INFO">${RESULT} = [{'diff': 6.348700000000096e-05}, {'diff': 6.417999999999702e-05}, {'diff': 6.336099999999789e-05}, {'diff': 6.401400000000113e-05}, {'diff': 6.422200000000267e-05}, {'diff': 6.340300000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:45.873" endtime="20201029 12:55:45.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:45.882" level="INFO">${ACCURACY} = {'diff': [6.348700000000096e-05, 6.417999999999702e-05, 6.336099999999789e-05, 6.401400000000113e-05, 6.422200000000267e-05, 6.340300000000007e-05, 6.337499999999746e-05, 6.406899999999993e-05, 6.3389...</msg>
<status status="PASS" starttime="20201029 12:55:45.878" endtime="20201029 12:55:45.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.886" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:55:45.885" endtime="20201029 12:55:45.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.888" level="INFO">VALUE: [6.348700000000096e-05, 6.417999999999702e-05, 6.336099999999789e-05, 6.401400000000113e-05, 6.422200000000267e-05, 6.340300000000007e-05, 6.337499999999746e-05, 6.406899999999993e-05, 6.33890000000005e-05, 6.40280000000007e-05, 6.400000000000156e-05, 6.326400000000038e-05, 6.377800000000045e-05, 6.372200000000217e-05, 6.361200000000108e-05, 6.393100000000318e-05, 6.333300000000222e-05, 6.413900000000125e-05, 6.333299999999875e-05, 6.336100000000136e-05, 6.331899999999918e-05, 6.351399999999716e-05, 6.419400000000006e-05, 6.324999999999734e-05, 6.384699999999882e-05, 6.323599999999777e-05, 6.373600000000174e-05, 6.327799999999995e-05, 6.409699999999907e-05, 6.406899999999993e-05, 6.32500000000008e-05, 6.334700000000179e-05, 6.37639999999974e-05, 6.330500000000308e-05, 6.34439999999993e-05, 6.341699999999964e-05, 6.415300000000082e-05, 6.342999999999974e-05, 6.413899999999778e-05, 6.412499999999821e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.349999999999759e-05, 6.384800000000176e-05, 6.348600000000149e-05, 6.373599999999827e-05, 6.345799999999888e-05, 6.336100000000136e-05, 6.384699999999882e-05, 6.412500000000168e-05]</msg>
<status status="PASS" starttime="20201029 12:55:45.887" endtime="20201029 12:55:45.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.882" endtime="20201029 12:55:45.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:45.894" endtime="20201029 12:55:45.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.892" endtime="20201029 12:55:45.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.891" endtime="20201029 12:55:45.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.532" endtime="20201029 12:55:45.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.531" endtime="20201029 12:55:45.914"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.923" endtime="20201029 12:55:45.942"></status>
</kw>
<msg timestamp="20201029 12:55:45.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:45.921" endtime="20201029 12:55:45.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:45.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:45.945" endtime="20201029 12:55:45.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.950" endtime="20201029 12:55:45.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.919" endtime="20201029 12:55:45.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.917" endtime="20201029 12:55:45.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:45.969" endtime="20201029 12:55:46.263"></status>
</kw>
<msg timestamp="20201029 12:55:46.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:45.966" endtime="20201029 12:55:46.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:46.267" endtime="20201029 12:55:46.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.276" endtime="20201029 12:55:46.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.960" endtime="20201029 12:55:46.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.957" endtime="20201029 12:55:46.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:46.282" level="INFO">${RESULT} = [{'diff': 6.459699999999957e-05}, {'diff': 6.461099999999914e-05}, {'diff': 6.493100000000071e-05}, {'diff': 6.440300000000107e-05}, {'diff': 6.518100000000096e-05}, {'diff': 6.47219999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:46.279" endtime="20201029 12:55:46.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:46.286" level="INFO">${ACCURACY} = {'diff': [6.459699999999957e-05, 6.461099999999914e-05, 6.493100000000071e-05, 6.440300000000107e-05, 6.518100000000096e-05, 6.47219999999997e-05, 6.505599999999737e-05, 6.440300000000107e-05, 6.43609...</msg>
<status status="PASS" starttime="20201029 12:55:46.283" endtime="20201029 12:55:46.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.291" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:55:46.290" endtime="20201029 12:55:46.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.293" level="INFO">VALUE: [6.459699999999957e-05, 6.461099999999914e-05, 6.493100000000071e-05, 6.440300000000107e-05, 6.518100000000096e-05, 6.47219999999997e-05, 6.505599999999737e-05, 6.440300000000107e-05, 6.436099999999889e-05, 6.487499999999896e-05, 6.43890000000015e-05, 6.431999999999966e-05, 6.454200000000077e-05, 6.480600000000059e-05, 6.422200000000267e-05, 6.445799999999988e-05, 6.430500000000061e-05, 6.515300000000182e-05, 6.463900000000175e-05, 6.469500000000003e-05, 6.488899999999853e-05, 6.482000000000016e-05, 6.494500000000028e-05, 6.497199999999995e-05, 6.513899999999878e-05, 6.497299999999942e-05, 6.468100000000046e-05, 6.508399999999998e-05, 6.440300000000107e-05, 6.445799999999988e-05, 6.468000000000099e-05, 6.513899999999878e-05, 6.459700000000304e-05, 6.470800000000013e-05, 6.416700000000039e-05, 6.483300000000025e-05, 6.423599999999877e-05, 6.436099999999889e-05, 6.466700000000089e-05, 6.480499999999764e-05, 6.466599999999795e-05, 6.461199999999861e-05, 6.482000000000016e-05, 6.468100000000046e-05, 6.437499999999846e-05, 6.484699999999982e-05, 6.500000000000256e-05, 6.483300000000025e-05, 6.495800000000038e-05, 6.49440000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:55:46.292" endtime="20201029 12:55:46.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.287" endtime="20201029 12:55:46.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:46.298" endtime="20201029 12:55:46.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.297" endtime="20201029 12:55:46.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.296" endtime="20201029 12:55:46.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.915" endtime="20201029 12:55:46.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:45.915" endtime="20201029 12:55:46.319"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.328" endtime="20201029 12:55:46.346"></status>
</kw>
<msg timestamp="20201029 12:55:46.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:46.326" endtime="20201029 12:55:46.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:46.348" endtime="20201029 12:55:46.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.350" endtime="20201029 12:55:46.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.324" endtime="20201029 12:55:46.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.322" endtime="20201029 12:55:46.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.359" endtime="20201029 12:55:46.645"></status>
</kw>
<msg timestamp="20201029 12:55:46.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020666278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:46.358" endtime="20201029 12:55:46.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020666278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:46.649" endtime="20201029 12:55:46.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.658" endtime="20201029 12:55:46.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.355" endtime="20201029 12:55:46.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.354" endtime="20201029 12:55:46.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:46.664" level="INFO">${RESULT} = [{'diff': 6.538899999999903e-05}, {'diff': 6.59029999999991e-05}, {'diff': 6.568100000000146e-05}, {'diff': 6.548699999999949e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.609700000000107e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:46.661" endtime="20201029 12:55:46.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:46.668" level="INFO">${ACCURACY} = {'diff': [6.538899999999903e-05, 6.59029999999991e-05, 6.568100000000146e-05, 6.548699999999949e-05, 6.587499999999996e-05, 6.609700000000107e-05, 6.57769999999995e-05, 6.590199999999963e-05, 6.551399...</msg>
<status status="PASS" starttime="20201029 12:55:46.665" endtime="20201029 12:55:46.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.673" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:55:46.672" endtime="20201029 12:55:46.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.675" level="INFO">VALUE: [6.538899999999903e-05, 6.59029999999991e-05, 6.568100000000146e-05, 6.548699999999949e-05, 6.587499999999996e-05, 6.609700000000107e-05, 6.57769999999995e-05, 6.590199999999963e-05, 6.551399999999916e-05, 6.547199999999698e-05, 6.534700000000032e-05, 6.515299999999835e-05, 6.566699999999842e-05, 6.605599999999837e-05, 6.55700000000009e-05, 6.569399999999809e-05, 6.593099999999824e-05, 6.569500000000103e-05, 6.568100000000146e-05, 6.618099999999849e-05, 6.590199999999963e-05, 6.573600000000027e-05, 6.555500000000186e-05, 6.611100000000064e-05, 6.545800000000088e-05, 6.556899999999796e-05, 6.559700000000057e-05, 6.595800000000138e-05, 6.60830000000015e-05, 6.558400000000048e-05, 6.555600000000134e-05, 6.598600000000052e-05, 6.580599999999812e-05, 6.604099999999932e-05, 6.527700000000247e-05, 6.533300000000075e-05, 6.609700000000107e-05, 6.598600000000052e-05, 6.611100000000064e-05, 6.520800000000063e-05, 6.5583000000001e-05, 6.591700000000214e-05, 6.608299999999803e-05, 6.537499999999946e-05, 6.593099999999824e-05, 6.568100000000146e-05, 6.527799999999848e-05, 6.530599999999762e-05, 6.537499999999946e-05, 6.55969999999971e-05]</msg>
<status status="PASS" starttime="20201029 12:55:46.674" endtime="20201029 12:55:46.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.669" endtime="20201029 12:55:46.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:46.681" endtime="20201029 12:55:46.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.680" endtime="20201029 12:55:46.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.678" endtime="20201029 12:55:46.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.320" endtime="20201029 12:55:46.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.320" endtime="20201029 12:55:46.702"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.710" endtime="20201029 12:55:46.727"></status>
</kw>
<msg timestamp="20201029 12:55:46.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:46.709" endtime="20201029 12:55:46.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:46.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:46.729" endtime="20201029 12:55:46.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.731" endtime="20201029 12:55:46.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.706" endtime="20201029 12:55:46.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.704" endtime="20201029 12:55:46.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:46.740" endtime="20201029 12:55:47.027"></status>
</kw>
<msg timestamp="20201029 12:55:47.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:46.739" endtime="20201029 12:55:47.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:47.031" endtime="20201029 12:55:47.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.039" endtime="20201029 12:55:47.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.736" endtime="20201029 12:55:47.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.735" endtime="20201029 12:55:47.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:47.045" level="INFO">${RESULT} = [{'diff': 6.715300000000035e-05}, {'diff': 6.683399999999826e-05}, {'diff': 6.665299999999985e-05}, {'diff': 6.712499999999774e-05}, {'diff': 6.687499999999749e-05}, {'diff': 6.659700000000157e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:47.042" endtime="20201029 12:55:47.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:47.050" level="INFO">${ACCURACY} = {'diff': [6.715300000000035e-05, 6.683399999999826e-05, 6.665299999999985e-05, 6.712499999999774e-05, 6.687499999999749e-05, 6.659700000000157e-05, 6.67359999999978e-05, 6.69030000000001e-05, 6.652799...</msg>
<status status="PASS" starttime="20201029 12:55:47.046" endtime="20201029 12:55:47.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.055" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:55:47.054" endtime="20201029 12:55:47.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.057" level="INFO">VALUE: [6.715300000000035e-05, 6.683399999999826e-05, 6.665299999999985e-05, 6.712499999999774e-05, 6.687499999999749e-05, 6.659700000000157e-05, 6.67359999999978e-05, 6.69030000000001e-05, 6.652799999999973e-05, 6.662500000000071e-05, 6.620800000000163e-05, 6.638900000000003e-05, 6.716699999999992e-05, 6.691699999999967e-05, 6.701400000000066e-05, 6.680599999999912e-05, 6.683400000000173e-05, 6.699999999999762e-05, 6.675000000000084e-05, 6.633299999999828e-05, 6.712499999999774e-05, 6.716699999999992e-05, 6.676399999999694e-05, 6.661100000000114e-05, 6.666699999999942e-05, 6.67220000000017e-05, 6.695899999999838e-05, 6.648600000000102e-05, 6.623600000000077e-05, 6.68480000000013e-05, 6.718000000000002e-05, 6.695799999999891e-05, 6.67640000000004e-05, 6.684699999999835e-05, 6.644499999999831e-05, 6.648600000000102e-05, 6.64159999999997e-05, 6.713900000000078e-05, 6.683299999999878e-05, 6.661100000000114e-05, 6.65419999999993e-05, 6.65419999999993e-05, 6.665299999999985e-05, 6.65700000000019e-05, 6.655600000000234e-05, 6.706899999999946e-05, 6.638900000000003e-05, 6.644399999999884e-05, 6.626300000000043e-05, 6.715300000000035e-05]</msg>
<status status="PASS" starttime="20201029 12:55:47.056" endtime="20201029 12:55:47.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.051" endtime="20201029 12:55:47.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:47.062" endtime="20201029 12:55:47.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.061" endtime="20201029 12:55:47.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.060" endtime="20201029 12:55:47.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.703" endtime="20201029 12:55:47.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:46.702" endtime="20201029 12:55:47.083"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.092" endtime="20201029 12:55:47.108"></status>
</kw>
<msg timestamp="20201029 12:55:47.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:47.090" endtime="20201029 12:55:47.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:47.110" endtime="20201029 12:55:47.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.112" endtime="20201029 12:55:47.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.088" endtime="20201029 12:55:47.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.086" endtime="20201029 12:55:47.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.121" endtime="20201029 12:55:47.408"></status>
</kw>
<msg timestamp="20201029 12:55:47.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:47.120" endtime="20201029 12:55:47.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019483125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019550833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:47.413" endtime="20201029 12:55:47.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.421" endtime="20201029 12:55:47.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.117" endtime="20201029 12:55:47.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.116" endtime="20201029 12:55:47.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:47.427" level="INFO">${RESULT} = [{'diff': 6.770799999999966e-05}, {'diff': 6.806900000000046e-05}, {'diff': 6.748600000000202e-05}, {'diff': 6.756999999999944e-05}, {'diff': 6.791700000000067e-05}, {'diff': 6.751399999999769e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:47.424" endtime="20201029 12:55:47.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:47.431" level="INFO">${ACCURACY} = {'diff': [6.770799999999966e-05, 6.806900000000046e-05, 6.748600000000202e-05, 6.756999999999944e-05, 6.791700000000067e-05, 6.751399999999769e-05, 6.786099999999892e-05, 6.762499999999824e-05, 6.8068...</msg>
<status status="PASS" starttime="20201029 12:55:47.428" endtime="20201029 12:55:47.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.436" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:55:47.435" endtime="20201029 12:55:47.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.438" level="INFO">VALUE: [6.770799999999966e-05, 6.806900000000046e-05, 6.748600000000202e-05, 6.756999999999944e-05, 6.791700000000067e-05, 6.751399999999769e-05, 6.786099999999892e-05, 6.762499999999824e-05, 6.806899999999699e-05, 6.770899999999913e-05, 6.772199999999923e-05, 6.776399999999794e-05, 6.747200000000245e-05, 6.723600000000177e-05, 6.737499999999799e-05, 6.756899999999996e-05, 6.806900000000046e-05, 6.805600000000037e-05, 6.720799999999916e-05, 6.727800000000048e-05, 6.793100000000024e-05, 6.795799999999991e-05, 6.726399999999744e-05, 6.793100000000024e-05, 6.722300000000167e-05, 6.773600000000227e-05, 6.773700000000174e-05, 6.720799999999916e-05, 6.775000000000184e-05, 6.801399999999819e-05, 6.754199999999683e-05, 6.80969999999996e-05, 6.777800000000098e-05, 6.802799999999776e-05, 6.75969999999991e-05, 6.730599999999962e-05, 6.794499999999981e-05, 6.729200000000005e-05, 6.72909999999971e-05, 6.815300000000135e-05, 6.766600000000095e-05, 6.802699999999828e-05, 6.776399999999794e-05, 6.798599999999905e-05, 6.815300000000135e-05, 6.80420000000008e-05, 6.794400000000034e-05, 6.731899999999971e-05, 6.736100000000189e-05, 6.765300000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:55:47.437" endtime="20201029 12:55:47.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.432" endtime="20201029 12:55:47.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:47.443" endtime="20201029 12:55:47.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.442" endtime="20201029 12:55:47.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.441" endtime="20201029 12:55:47.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.084" endtime="20201029 12:55:47.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.084" endtime="20201029 12:55:47.464"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.473" endtime="20201029 12:55:47.492"></status>
</kw>
<msg timestamp="20201029 12:55:47.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:47.471" endtime="20201029 12:55:47.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:47.493" endtime="20201029 12:55:47.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.496" endtime="20201029 12:55:47.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.469" endtime="20201029 12:55:47.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.467" endtime="20201029 12:55:47.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.505" endtime="20201029 12:55:47.790"></status>
</kw>
<msg timestamp="20201029 12:55:47.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:47.503" endtime="20201029 12:55:47.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020397472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:47.795" endtime="20201029 12:55:47.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.803" endtime="20201029 12:55:47.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.500" endtime="20201029 12:55:47.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.499" endtime="20201029 12:55:47.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:47.809" level="INFO">${RESULT} = [{'diff': 6.847199999999998e-05}, {'diff': 6.869500000000056e-05}, {'diff': 6.87359999999998e-05}, {'diff': 6.82359999999993e-05}, {'diff': 6.865299999999838e-05}, {'diff': 6.851400000000216e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:47.806" endtime="20201029 12:55:47.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:47.813" level="INFO">${ACCURACY} = {'diff': [6.847199999999998e-05, 6.869500000000056e-05, 6.87359999999998e-05, 6.82359999999993e-05, 6.865299999999838e-05, 6.851400000000216e-05, 6.912500000000321e-05, 6.845800000000041e-05, 6.890299...</msg>
<status status="PASS" starttime="20201029 12:55:47.810" endtime="20201029 12:55:47.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.818" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:55:47.817" endtime="20201029 12:55:47.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.820" level="INFO">VALUE: [6.847199999999998e-05, 6.869500000000056e-05, 6.87359999999998e-05, 6.82359999999993e-05, 6.865299999999838e-05, 6.851400000000216e-05, 6.912500000000321e-05, 6.845800000000041e-05, 6.890299999999863e-05, 6.848599999999955e-05, 6.85970000000001e-05, 6.868100000000099e-05, 6.90840000000005e-05, 6.82359999999993e-05, 6.905600000000137e-05, 6.840200000000213e-05, 6.874999999999937e-05, 6.906900000000146e-05, 6.82359999999993e-05, 6.908300000000103e-05, 6.90970000000006e-05, 6.912499999999974e-05, 6.833300000000028e-05, 6.838899999999856e-05, 6.836099999999942e-05, 6.852799999999826e-05, 6.883399999999679e-05, 6.865300000000185e-05, 6.869500000000056e-05, 6.855500000000139e-05, 6.861099999999967e-05, 6.834699999999985e-05, 6.890199999999916e-05, 6.844400000000084e-05, 6.856899999999749e-05, 6.913899999999931e-05, 6.844400000000084e-05, 6.881999999999722e-05, 6.888899999999906e-05, 6.869500000000056e-05, 6.909800000000008e-05, 6.843000000000127e-05, 6.909800000000008e-05, 6.863900000000228e-05, 6.831900000000071e-05, 6.872200000000023e-05, 6.872200000000023e-05, 6.894400000000134e-05, 6.898600000000005e-05, 6.837499999999899e-05]</msg>
<status status="PASS" starttime="20201029 12:55:47.819" endtime="20201029 12:55:47.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.814" endtime="20201029 12:55:47.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:47.826" endtime="20201029 12:55:47.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.825" endtime="20201029 12:55:47.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.823" endtime="20201029 12:55:47.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.465" endtime="20201029 12:55:47.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.465" endtime="20201029 12:55:47.847"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.855" endtime="20201029 12:55:47.873"></status>
</kw>
<msg timestamp="20201029 12:55:47.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:47.854" endtime="20201029 12:55:47.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:47.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:47.875" endtime="20201029 12:55:47.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.877" endtime="20201029 12:55:47.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.851" endtime="20201029 12:55:47.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.849" endtime="20201029 12:55:47.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:47.886" endtime="20201029 12:55:48.172"></status>
</kw>
<msg timestamp="20201029 12:55:48.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:47.884" endtime="20201029 12:55:48.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:48.176" endtime="20201029 12:55:48.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.184" endtime="20201029 12:55:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.882" endtime="20201029 12:55:48.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.880" endtime="20201029 12:55:48.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:48.191" level="INFO">${RESULT} = [{'diff': 6.981900000000221e-05}, {'diff': 6.930599999999815e-05}, {'diff': 6.993099999999877e-05}, {'diff': 6.988900000000006e-05}, {'diff': 6.9584000000001e-05}, {'diff': 7.020900000000163e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:48.188" endtime="20201029 12:55:48.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:48.196" level="INFO">${ACCURACY} = {'diff': [6.981900000000221e-05, 6.930599999999815e-05, 6.993099999999877e-05, 6.988900000000006e-05, 6.9584000000001e-05, 7.020900000000163e-05, 7.018099999999902e-05, 6.994400000000234e-05, 6.926299...</msg>
<status status="PASS" starttime="20201029 12:55:48.192" endtime="20201029 12:55:48.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.200" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:55:48.199" endtime="20201029 12:55:48.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.203" level="INFO">VALUE: [6.981900000000221e-05, 6.930599999999815e-05, 6.993099999999877e-05, 6.988900000000006e-05, 6.9584000000001e-05, 7.020900000000163e-05, 7.018099999999902e-05, 6.994400000000234e-05, 6.926299999999996e-05, 6.997199999999801e-05, 6.941599999999923e-05, 6.980499999999917e-05, 7.008300000000203e-05, 6.997200000000148e-05, 6.94169999999987e-05, 6.988900000000006e-05, 6.995899999999791e-05, 6.962500000000024e-05, 7.018100000000249e-05, 6.924999999999987e-05, 7.020899999999816e-05, 6.980499999999917e-05, 6.981900000000221e-05, 7.019399999999912e-05, 6.922200000000073e-05, 6.99299999999993e-05, 6.943000000000227e-05, 7.016699999999945e-05, 6.998599999999758e-05, 6.97360000000008e-05, 6.943100000000174e-05, 6.965300000000285e-05, 6.988900000000006e-05, 6.968100000000199e-05, 6.980499999999917e-05, 7.018099999999902e-05, 6.963800000000034e-05, 7.016599999999998e-05, 6.94299999999988e-05, 6.948600000000055e-05, 6.924999999999987e-05, 6.955499999999892e-05, 6.933300000000128e-05, 7.00420000000028e-05, 6.980600000000212e-05, 6.947200000000098e-05, 7.011100000000117e-05, 6.936099999999695e-05, 6.965300000000285e-05, 7.009800000000108e-05]</msg>
<status status="PASS" starttime="20201029 12:55:48.201" endtime="20201029 12:55:48.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.197" endtime="20201029 12:55:48.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:48.208" endtime="20201029 12:55:48.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.206" endtime="20201029 12:55:48.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.205" endtime="20201029 12:55:48.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.848" endtime="20201029 12:55:48.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:47.847" endtime="20201029 12:55:48.228"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.237" endtime="20201029 12:55:48.255"></status>
</kw>
<msg timestamp="20201029 12:55:48.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:48.236" endtime="20201029 12:55:48.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:48.256" endtime="20201029 12:55:48.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.259" endtime="20201029 12:55:48.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.233" endtime="20201029 12:55:48.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.231" endtime="20201029 12:55:48.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.269" endtime="20201029 12:55:48.557"></status>
</kw>
<msg timestamp="20201029 12:55:48.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:48.266" endtime="20201029 12:55:48.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:48.561" endtime="20201029 12:55:48.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.569" endtime="20201029 12:55:48.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.264" endtime="20201029 12:55:48.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.262" endtime="20201029 12:55:48.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:48.576" level="INFO">${RESULT} = [{'diff': 7.02360000000013e-05}, {'diff': 7.05979999999981e-05}, {'diff': 7.080599999999965e-05}, {'diff': 7.087499999999802e-05}, {'diff': 7.054100000000035e-05}, {'diff': 7.079200000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:48.572" endtime="20201029 12:55:48.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:48.580" level="INFO">${ACCURACY} = {'diff': [7.02360000000013e-05, 7.05979999999981e-05, 7.080599999999965e-05, 7.087499999999802e-05, 7.054100000000035e-05, 7.079200000000008e-05, 7.069399999999962e-05, 7.108299999999956e-05, 7.077800...</msg>
<status status="PASS" starttime="20201029 12:55:48.577" endtime="20201029 12:55:48.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.584" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:55:48.583" endtime="20201029 12:55:48.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.587" level="INFO">VALUE: [7.02360000000013e-05, 7.05979999999981e-05, 7.080599999999965e-05, 7.087499999999802e-05, 7.054100000000035e-05, 7.079200000000008e-05, 7.069399999999962e-05, 7.108299999999956e-05, 7.077800000000051e-05, 7.09170000000002e-05, 7.050000000000112e-05, 7.044399999999937e-05, 7.098599999999858e-05, 7.036100000000142e-05, 7.101400000000119e-05, 7.102800000000076e-05, 7.025000000000087e-05, 7.088900000000106e-05, 7.077700000000103e-05, 7.05970000000021e-05, 7.084699999999888e-05, 7.054100000000035e-05, 7.113899999999784e-05, 7.031899999999924e-05, 7.034700000000185e-05, 7.113900000000131e-05, 7.027800000000001e-05, 7.026400000000044e-05, 7.104200000000033e-05, 7.07360000000018e-05, 7.112500000000174e-05, 7.098599999999858e-05, 7.026300000000096e-05, 7.112500000000174e-05, 7.062499999999777e-05, 7.116600000000098e-05, 7.073599999999833e-05, 7.031899999999924e-05, 7.079200000000008e-05, 7.025000000000087e-05, 7.02499999999974e-05, 7.052800000000026e-05, 7.075000000000137e-05, 7.098599999999858e-05, 7.102699999999781e-05, 7.07230000000017e-05, 7.106999999999947e-05, 7.080500000000017e-05, 7.079200000000008e-05, 7.065200000000091e-05]</msg>
<status status="PASS" starttime="20201029 12:55:48.585" endtime="20201029 12:55:48.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.581" endtime="20201029 12:55:48.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:48.592" endtime="20201029 12:55:48.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.590" endtime="20201029 12:55:48.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.589" endtime="20201029 12:55:48.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.229" endtime="20201029 12:55:48.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.229" endtime="20201029 12:55:48.613"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.621" endtime="20201029 12:55:48.639"></status>
</kw>
<msg timestamp="20201029 12:55:48.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:48.620" endtime="20201029 12:55:48.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:48.641" endtime="20201029 12:55:48.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.643" endtime="20201029 12:55:48.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.617" endtime="20201029 12:55:48.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.615" endtime="20201029 12:55:48.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.652" endtime="20201029 12:55:48.938"></status>
</kw>
<msg timestamp="20201029 12:55:48.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020909819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:48.651" endtime="20201029 12:55:48.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020838181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020909819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:48.942" endtime="20201029 12:55:48.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:48.950" endtime="20201029 12:55:48.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.648" endtime="20201029 12:55:48.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.647" endtime="20201029 12:55:48.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:48.957" level="INFO">${RESULT} = [{'diff': 7.163799999999887e-05}, {'diff': 7.17910000000016e-05}, {'diff': 7.155500000000092e-05}, {'diff': 7.191599999999826e-05}, {'diff': 7.162499999999877e-05}, {'diff': 7.2069000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:55:48.954" endtime="20201029 12:55:48.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:48.961" level="INFO">${ACCURACY} = {'diff': [7.163799999999887e-05, 7.17910000000016e-05, 7.155500000000092e-05, 7.191599999999826e-05, 7.162499999999877e-05, 7.2069000000001e-05, 7.131900000000024e-05, 7.173599999999933e-05, 7.2000000...</msg>
<status status="PASS" starttime="20201029 12:55:48.958" endtime="20201029 12:55:48.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.965" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:55:48.964" endtime="20201029 12:55:48.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:48.971" level="INFO">VALUE: [7.163799999999887e-05, 7.17910000000016e-05, 7.155500000000092e-05, 7.191599999999826e-05, 7.162499999999877e-05, 7.2069000000001e-05, 7.131900000000024e-05, 7.173599999999933e-05, 7.200000000000262e-05, 7.156999999999997e-05, 7.126400000000144e-05, 7.143100000000027e-05, 7.138799999999862e-05, 7.216700000000145e-05, 7.215199999999894e-05, 7.188899999999859e-05, 7.133299999999981e-05, 7.216600000000198e-05, 7.172199999999976e-05, 7.123599999999883e-05, 7.183399999999979e-05, 7.186099999999945e-05, 7.152800000000126e-05, 7.166700000000095e-05, 7.191699999999773e-05, 7.20560000000009e-05, 7.183399999999979e-05, 7.130500000000067e-05, 7.130500000000067e-05, 7.144400000000037e-05, 7.173599999999933e-05, 7.201400000000219e-05, 7.123599999999883e-05, 7.179199999999761e-05, 7.182000000000022e-05, 7.188899999999859e-05, 7.182000000000022e-05, 7.207000000000047e-05, 7.119500000000306e-05, 7.212500000000274e-05, 7.177800000000151e-05, 7.148599999999908e-05, 7.134700000000285e-05, 7.213899999999884e-05, 7.158300000000006e-05, 7.176399999999847e-05, 7.218000000000155e-05, 7.15560000000004e-05, 7.162500000000224e-05, 7.158300000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:55:48.966" endtime="20201029 12:55:48.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.962" endtime="20201029 12:55:48.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:48.976" endtime="20201029 12:55:48.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.975" endtime="20201029 12:55:48.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.973" endtime="20201029 12:55:48.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.613" endtime="20201029 12:55:48.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.613" endtime="20201029 12:55:48.997"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.006" endtime="20201029 12:55:49.023"></status>
</kw>
<msg timestamp="20201029 12:55:49.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:49.004" endtime="20201029 12:55:49.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:49.025" endtime="20201029 12:55:49.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.027" endtime="20201029 12:55:49.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.001" endtime="20201029 12:55:49.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.999" endtime="20201029 12:55:49.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.036" endtime="20201029 12:55:49.322"></status>
</kw>
<msg timestamp="20201029 12:55:49.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:49.035" endtime="20201029 12:55:49.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:49.326" endtime="20201029 12:55:49.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.334" endtime="20201029 12:55:49.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.032" endtime="20201029 12:55:49.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.030" endtime="20201029 12:55:49.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:49.341" level="INFO">${RESULT} = [{'diff': 7.313899999999984e-05}, {'diff': 7.309699999999766e-05}, {'diff': 7.304099999999938e-05}, {'diff': 7.244400000000137e-05}, {'diff': 7.267999999999858e-05}, {'diff': 7.222200000000026e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:49.337" endtime="20201029 12:55:49.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:49.346" level="INFO">${ACCURACY} = {'diff': [7.313899999999984e-05, 7.309699999999766e-05, 7.304099999999938e-05, 7.244400000000137e-05, 7.267999999999858e-05, 7.222200000000026e-05, 7.25690000000015e-05, 7.222199999999679e-05, 7.22359...</msg>
<status status="PASS" starttime="20201029 12:55:49.342" endtime="20201029 12:55:49.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.350" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:55:49.349" endtime="20201029 12:55:49.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.353" level="INFO">VALUE: [7.313899999999984e-05, 7.309699999999766e-05, 7.304099999999938e-05, 7.244400000000137e-05, 7.267999999999858e-05, 7.222200000000026e-05, 7.25690000000015e-05, 7.222199999999679e-05, 7.223599999999983e-05, 7.284700000000088e-05, 7.297200000000101e-05, 7.272300000000023e-05, 7.280500000000217e-05, 7.252799999999879e-05, 7.222200000000026e-05, 7.304099999999938e-05, 7.300000000000015e-05, 7.226399999999897e-05, 7.298600000000058e-05, 7.279199999999861e-05, 7.261099999999673e-05, 7.276400000000294e-05, 7.244400000000137e-05, 7.226399999999897e-05, 7.254199999999836e-05, 7.298599999999711e-05, 7.256899999999802e-05, 7.31110000000007e-05, 7.298599999999711e-05, 7.305599999999843e-05, 7.252800000000226e-05, 7.284699999999741e-05, 7.272200000000076e-05, 7.231900000000124e-05, 7.255599999999793e-05, 7.294499999999787e-05, 7.281900000000174e-05, 7.276399999999947e-05, 7.30560000000019e-05, 7.259700000000063e-05, 7.281899999999827e-05, 7.222200000000026e-05, 7.245799999999747e-05, 7.27499999999999e-05, 7.294400000000187e-05, 7.273600000000033e-05, 7.272200000000076e-05, 7.298600000000058e-05, 7.265300000000238e-05, 7.297300000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:55:49.352" endtime="20201029 12:55:49.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.346" endtime="20201029 12:55:49.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:49.359" endtime="20201029 12:55:49.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.357" endtime="20201029 12:55:49.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.356" endtime="20201029 12:55:49.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.998" endtime="20201029 12:55:49.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:48.997" endtime="20201029 12:55:49.380"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.389" endtime="20201029 12:55:49.407"></status>
</kw>
<msg timestamp="20201029 12:55:49.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:49.387" endtime="20201029 12:55:49.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:49.408" endtime="20201029 12:55:49.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.411" endtime="20201029 12:55:49.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.385" endtime="20201029 12:55:49.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.383" endtime="20201029 12:55:49.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.420" endtime="20201029 12:55:49.707"></status>
</kw>
<msg timestamp="20201029 12:55:49.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019766306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:49.418" endtime="20201029 12:55:49.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019766306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:49.711" endtime="20201029 12:55:49.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.719" endtime="20201029 12:55:49.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.416" endtime="20201029 12:55:49.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.414" endtime="20201029 12:55:49.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:49.726" level="INFO">${RESULT} = [{'diff': 7.32500000000004e-05}, {'diff': 7.38049999999997e-05}, {'diff': 7.354099999999988e-05}, {'diff': 7.409700000000213e-05}, {'diff': 7.416699999999998e-05}, {'diff': 7.388900000000059e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:49.723" endtime="20201029 12:55:49.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:49.730" level="INFO">${ACCURACY} = {'diff': [7.32500000000004e-05, 7.38049999999997e-05, 7.354099999999988e-05, 7.409700000000213e-05, 7.416699999999998e-05, 7.388900000000059e-05, 7.39309999999993e-05, 7.402799999999682e-05, 7.3763999...</msg>
<status status="PASS" starttime="20201029 12:55:49.727" endtime="20201029 12:55:49.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.734" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:55:49.733" endtime="20201029 12:55:49.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.737" level="INFO">VALUE: [7.32500000000004e-05, 7.38049999999997e-05, 7.354099999999988e-05, 7.409700000000213e-05, 7.416699999999998e-05, 7.388900000000059e-05, 7.39309999999993e-05, 7.402799999999682e-05, 7.3763999999997e-05, 7.337500000000052e-05, 7.352799999999979e-05, 7.394500000000234e-05, 7.41110000000017e-05, 7.366699999999948e-05, 7.388800000000112e-05, 7.365299999999991e-05, 7.33049999999992e-05, 7.415300000000041e-05, 7.373600000000133e-05, 7.356899999999902e-05, 7.4069000000003e-05, 7.412500000000127e-05, 7.34309999999988e-05, 7.331999999999825e-05, 7.37370000000008e-05, 7.369499999999862e-05, 7.383300000000231e-05, 7.394500000000234e-05, 7.41110000000017e-05, 7.322199999999779e-05, 7.40829999999991e-05, 7.392999999999983e-05, 7.400000000000115e-05, 7.365299999999991e-05, 7.333299999999834e-05, 7.365299999999991e-05, 7.412500000000127e-05, 7.407000000000247e-05, 7.326399999999997e-05, 7.409800000000161e-05, 7.351400000000022e-05, 7.376299999999752e-05, 7.395799999999897e-05, 7.317999999999908e-05, 7.333300000000181e-05, 7.387500000000102e-05, 7.388900000000059e-05, 7.373599999999786e-05, 7.387500000000102e-05, 7.398600000000158e-05]</msg>
<status status="PASS" starttime="20201029 12:55:49.735" endtime="20201029 12:55:49.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.731" endtime="20201029 12:55:49.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:49.742" endtime="20201029 12:55:49.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.740" endtime="20201029 12:55:49.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.739" endtime="20201029 12:55:49.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.381" endtime="20201029 12:55:49.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.380" endtime="20201029 12:55:49.763"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.771" endtime="20201029 12:55:49.791"></status>
</kw>
<msg timestamp="20201029 12:55:49.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:49.770" endtime="20201029 12:55:49.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:49.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:49.792" endtime="20201029 12:55:49.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.795" endtime="20201029 12:55:49.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.767" endtime="20201029 12:55:49.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.765" endtime="20201029 12:55:49.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:49.804" endtime="20201029 12:55:50.089"></status>
</kw>
<msg timestamp="20201029 12:55:50.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020347806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:49.802" endtime="20201029 12:55:50.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020347806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:50.093" endtime="20201029 12:55:50.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.101" endtime="20201029 12:55:50.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.799" endtime="20201029 12:55:50.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.798" endtime="20201029 12:55:50.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:50.108" level="INFO">${RESULT} = [{'diff': 7.422199999999879e-05}, {'diff': 7.456900000000002e-05}, {'diff': 7.466699999999701e-05}, {'diff': 7.455500000000045e-05}, {'diff': 7.434699999999891e-05}, {'diff': 7.42630000000015e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:50.105" endtime="20201029 12:55:50.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:50.112" level="INFO">${ACCURACY} = {'diff': [7.422199999999879e-05, 7.456900000000002e-05, 7.466699999999701e-05, 7.455500000000045e-05, 7.434699999999891e-05, 7.42630000000015e-05, 7.438899999999762e-05, 7.44029999999972e-05, 7.461100...</msg>
<status status="PASS" starttime="20201029 12:55:50.109" endtime="20201029 12:55:50.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.116" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:55:50.115" endtime="20201029 12:55:50.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.119" level="INFO">VALUE: [7.422199999999879e-05, 7.456900000000002e-05, 7.466699999999701e-05, 7.455500000000045e-05, 7.434699999999891e-05, 7.42630000000015e-05, 7.438899999999762e-05, 7.44029999999972e-05, 7.46110000000022e-05, 7.473599999999886e-05, 7.49310000000003e-05, 7.469499999999962e-05, 7.488899999999812e-05, 7.468100000000005e-05, 7.430599999999968e-05, 7.502799999999782e-05, 7.498600000000258e-05, 7.419400000000312e-05, 7.448599999999861e-05, 7.438899999999762e-05, 7.45829999999996e-05, 7.481900000000027e-05, 7.497199999999954e-05, 7.434700000000238e-05, 7.490300000000116e-05, 7.430599999999968e-05, 7.4763999999998e-05, 7.513900000000184e-05, 7.520800000000022e-05, 7.433299999999934e-05, 7.423599999999836e-05, 7.45829999999996e-05, 7.429100000000063e-05, 7.483299999999984e-05, 7.481900000000027e-05, 7.50830000000001e-05, 7.483299999999984e-05, 7.433299999999934e-05, 7.462500000000177e-05, 7.507e-05, 7.481999999999975e-05, 7.441700000000023e-05, 7.480499999999723e-05, 7.511199999999871e-05, 7.504100000000138e-05, 7.43050000000002e-05, 7.458300000000306e-05, 7.515299999999794e-05, 7.450000000000165e-05, 7.469499999999962e-05]</msg>
<status status="PASS" starttime="20201029 12:55:50.117" endtime="20201029 12:55:50.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.113" endtime="20201029 12:55:50.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:50.125" endtime="20201029 12:55:50.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.123" endtime="20201029 12:55:50.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.122" endtime="20201029 12:55:50.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.764" endtime="20201029 12:55:50.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:49.763" endtime="20201029 12:55:50.145"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.154" endtime="20201029 12:55:50.172"></status>
</kw>
<msg timestamp="20201029 12:55:50.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:50.152" endtime="20201029 12:55:50.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:50.173" endtime="20201029 12:55:50.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.176" endtime="20201029 12:55:50.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.150" endtime="20201029 12:55:50.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.148" endtime="20201029 12:55:50.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.185" endtime="20201029 12:55:50.471"></status>
</kw>
<msg timestamp="20201029 12:55:50.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019435708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019511042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:50.183" endtime="20201029 12:55:50.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019435708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019511042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:50.475" endtime="20201029 12:55:50.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.484" endtime="20201029 12:55:50.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.181" endtime="20201029 12:55:50.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.179" endtime="20201029 12:55:50.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:50.490" level="INFO">${RESULT} = [{'diff': 7.533399999999982e-05}, {'diff': 7.613899999999937e-05}, {'diff': 7.609800000000014e-05}, {'diff': 7.556900000000102e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.529200000000111e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:50.487" endtime="20201029 12:55:50.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:50.495" level="INFO">${ACCURACY} = {'diff': [7.533399999999982e-05, 7.613899999999937e-05, 7.609800000000014e-05, 7.556900000000102e-05, 7.609700000000066e-05, 7.529200000000111e-05, 7.591700000000173e-05, 7.538899999999862e-05, 7.5624...</msg>
<status status="PASS" starttime="20201029 12:55:50.491" endtime="20201029 12:55:50.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.500" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:55:50.499" endtime="20201029 12:55:50.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.502" level="INFO">VALUE: [7.533399999999982e-05, 7.613899999999937e-05, 7.609800000000014e-05, 7.556900000000102e-05, 7.609700000000066e-05, 7.529200000000111e-05, 7.591700000000173e-05, 7.538899999999862e-05, 7.56249999999993e-05, 7.54310000000008e-05, 7.586099999999998e-05, 7.572200000000029e-05, 7.559700000000016e-05, 7.523599999999936e-05, 7.558400000000007e-05, 7.550000000000265e-05, 7.620799999999775e-05, 7.569400000000115e-05, 7.618000000000208e-05, 7.53050000000012e-05, 7.555499999999798e-05, 7.616700000000198e-05, 7.599999999999968e-05, 7.523599999999936e-05, 7.60830000000011e-05, 7.561099999999973e-05, 7.591699999999826e-05, 7.566699999999801e-05, 7.551299999999928e-05, 7.542999999999786e-05, 7.533300000000034e-05, 7.57500000000029e-05, 7.538899999999862e-05, 7.565299999999844e-05, 7.568099999999758e-05, 7.548599999999961e-05, 7.590300000000216e-05, 7.531900000000077e-05, 7.588899999999912e-05, 7.616700000000198e-05, 7.6070000000001e-05, 7.556899999999755e-05, 7.523599999999936e-05, 7.533299999999687e-05, 7.591600000000226e-05, 7.541599999999829e-05, 7.602799999999882e-05, 7.586099999999998e-05, 7.598600000000011e-05, 7.537499999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:55:50.501" endtime="20201029 12:55:50.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.496" endtime="20201029 12:55:50.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:50.507" endtime="20201029 12:55:50.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.506" endtime="20201029 12:55:50.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.504" endtime="20201029 12:55:50.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.146" endtime="20201029 12:55:50.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.146" endtime="20201029 12:55:50.528"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.537" endtime="20201029 12:55:50.556"></status>
</kw>
<msg timestamp="20201029 12:55:50.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:50.535" endtime="20201029 12:55:50.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:50.557" endtime="20201029 12:55:50.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.560" endtime="20201029 12:55:50.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.532" endtime="20201029 12:55:50.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.530" endtime="20201029 12:55:50.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.569" endtime="20201029 12:55:50.856"></status>
</kw>
<msg timestamp="20201029 12:55:50.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:50.567" endtime="20201029 12:55:50.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:50.860" endtime="20201029 12:55:50.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.868" endtime="20201029 12:55:50.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.565" endtime="20201029 12:55:50.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.563" endtime="20201029 12:55:50.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:50.875" level="INFO">${RESULT} = [{'diff': 7.717999999999961e-05}, {'diff': 7.636100000000048e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.654099999999942e-05}, {'diff': 7.629100000000263e-05}, {'diff': 7.706999999999853e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:50.871" endtime="20201029 12:55:50.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:50.879" level="INFO">${ACCURACY} = {'diff': [7.717999999999961e-05, 7.636100000000048e-05, 7.624999999999993e-05, 7.654099999999942e-05, 7.629100000000263e-05, 7.706999999999853e-05, 7.705599999999896e-05, 7.665300000000291e-05, 7.6361...</msg>
<status status="PASS" starttime="20201029 12:55:50.876" endtime="20201029 12:55:50.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.883" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:55:50.882" endtime="20201029 12:55:50.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.886" level="INFO">VALUE: [7.717999999999961e-05, 7.636100000000048e-05, 7.624999999999993e-05, 7.654099999999942e-05, 7.629100000000263e-05, 7.706999999999853e-05, 7.705599999999896e-05, 7.665300000000291e-05, 7.636100000000048e-05, 7.70129999999973e-05, 7.71250000000008e-05, 7.661100000000073e-05, 7.627799999999907e-05, 7.676299999999706e-05, 7.648600000000061e-05, 7.63189999999983e-05, 7.697199999999807e-05, 7.65830000000016e-05, 7.694399999999893e-05, 7.63189999999983e-05, 7.697199999999807e-05, 7.654200000000236e-05, 7.702700000000035e-05, 7.695900000000144e-05, 7.659800000000064e-05, 7.71250000000008e-05, 7.650000000000018e-05, 7.623600000000036e-05, 7.719399999999918e-05, 7.686100000000098e-05, 7.725000000000093e-05, 7.719400000000265e-05, 7.637500000000005e-05, 7.669499999999815e-05, 7.693099999999883e-05, 7.666699999999901e-05, 7.683400000000132e-05, 7.663899999999987e-05, 7.711100000000123e-05, 7.688900000000012e-05, 7.68189999999988e-05, 7.70830000000021e-05, 7.702799999999982e-05, 7.666699999999901e-05, 7.713900000000037e-05, 7.64310000000018e-05, 7.650000000000018e-05, 7.648600000000061e-05, 7.691699999999926e-05, 7.655499999999898e-05]</msg>
<status status="PASS" starttime="20201029 12:55:50.884" endtime="20201029 12:55:50.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.880" endtime="20201029 12:55:50.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:50.891" endtime="20201029 12:55:50.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.889" endtime="20201029 12:55:50.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.888" endtime="20201029 12:55:50.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.529" endtime="20201029 12:55:50.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.528" endtime="20201029 12:55:50.912"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.920" endtime="20201029 12:55:50.941"></status>
</kw>
<msg timestamp="20201029 12:55:50.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:50.919" endtime="20201029 12:55:50.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:50.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:50.942" endtime="20201029 12:55:50.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.945" endtime="20201029 12:55:50.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.916" endtime="20201029 12:55:50.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.914" endtime="20201029 12:55:50.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:50.954" endtime="20201029 12:55:51.240"></status>
</kw>
<msg timestamp="20201029 12:55:51.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02132025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:55:50.952" endtime="20201029 12:55:51.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02132025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:55:51.244" endtime="20201029 12:55:51.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.252" endtime="20201029 12:55:51.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.950" endtime="20201029 12:55:51.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.948" endtime="20201029 12:55:51.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:51.259" level="INFO">${RESULT} = [{'diff': 7.763900000000087e-05}, {'diff': 7.805599999999996e-05}, {'diff': 7.727800000000007e-05}, {'diff': 7.768099999999958e-05}, {'diff': 7.801399999999778e-05}, {'diff': 7.788900000000112e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:51.255" endtime="20201029 12:55:51.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:51.263" level="INFO">${ACCURACY} = {'diff': [7.763900000000087e-05, 7.805599999999996e-05, 7.727800000000007e-05, 7.768099999999958e-05, 7.801399999999778e-05, 7.788900000000112e-05, 7.784799999999842e-05, 7.742999999999986e-05, 7.8124...</msg>
<status status="PASS" starttime="20201029 12:55:51.260" endtime="20201029 12:55:51.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.267" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:55:51.266" endtime="20201029 12:55:51.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.270" level="INFO">VALUE: [7.763900000000087e-05, 7.805599999999996e-05, 7.727800000000007e-05, 7.768099999999958e-05, 7.801399999999778e-05, 7.788900000000112e-05, 7.784799999999842e-05, 7.742999999999986e-05, 7.812499999999833e-05, 7.761100000000173e-05, 7.768000000000011e-05, 7.776399999999753e-05, 7.729199999999964e-05, 7.76250000000013e-05, 7.77770000000011e-05, 7.819500000000312e-05, 7.800000000000168e-05, 7.79449999999994e-05, 7.820899999999922e-05, 7.73189999999993e-05, 7.752699999999738e-05, 7.729100000000017e-05, 7.7457999999999e-05, 7.738900000000062e-05, 7.780500000000024e-05, 7.773599999999839e-05, 7.755599999999946e-05, 7.7764000000001e-05, 7.79030000000007e-05, 7.750000000000118e-05, 7.743099999999933e-05, 7.748700000000108e-05, 7.787499999999808e-05, 7.772200000000229e-05, 7.816600000000104e-05, 7.815299999999747e-05, 7.74030000000002e-05, 7.787499999999808e-05, 7.784700000000241e-05, 7.79579999999995e-05, 7.748599999999814e-05, 7.77229999999983e-05, 7.730599999999921e-05, 7.723600000000136e-05, 7.72229999999978e-05, 7.80129999999983e-05, 7.800000000000168e-05, 7.791600000000079e-05, 7.729199999999964e-05, 7.733300000000234e-05]</msg>
<status status="PASS" starttime="20201029 12:55:51.268" endtime="20201029 12:55:51.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.264" endtime="20201029 12:55:51.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:51.277" endtime="20201029 12:55:51.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.275" endtime="20201029 12:55:51.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.273" endtime="20201029 12:55:51.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.912" endtime="20201029 12:55:51.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:50.912" endtime="20201029 12:55:51.299"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.307" endtime="20201029 12:55:51.326"></status>
</kw>
<msg timestamp="20201029 12:55:51.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:51.306" endtime="20201029 12:55:51.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:51.327" endtime="20201029 12:55:51.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.330" endtime="20201029 12:55:51.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.303" endtime="20201029 12:55:51.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.301" endtime="20201029 12:55:51.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.339" endtime="20201029 12:55:51.624"></status>
</kw>
<msg timestamp="20201029 12:55:51.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:51.337" endtime="20201029 12:55:51.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:51.629" endtime="20201029 12:55:51.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.637" endtime="20201029 12:55:51.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.335" endtime="20201029 12:55:51.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.333" endtime="20201029 12:55:51.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:51.643" level="INFO">${RESULT} = [{'diff': 7.831899999999684e-05}, {'diff': 7.861100000000273e-05}, {'diff': 7.88190000000008e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.847199999999957e-05}, {'diff': 7.915299999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:51.640" endtime="20201029 12:55:51.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:51.648" level="INFO">${ACCURACY} = {'diff': [7.831899999999684e-05, 7.861100000000273e-05, 7.88190000000008e-05, 7.856900000000056e-05, 7.847199999999957e-05, 7.915299999999847e-05, 7.8764000000002e-05, 7.913900000000237e-05, 7.8958000...</msg>
<status status="PASS" starttime="20201029 12:55:51.644" endtime="20201029 12:55:51.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.653" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:55:51.652" endtime="20201029 12:55:51.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.655" level="INFO">VALUE: [7.831899999999684e-05, 7.861100000000273e-05, 7.88190000000008e-05, 7.856900000000056e-05, 7.847199999999957e-05, 7.915299999999847e-05, 7.8764000000002e-05, 7.913900000000237e-05, 7.89580000000005e-05, 7.829200000000064e-05, 7.895899999999997e-05, 7.901400000000225e-05, 7.879200000000114e-05, 7.897299999999954e-05, 7.898599999999964e-05, 7.819400000000018e-05, 7.836099999999901e-05, 7.838899999999815e-05, 7.902800000000182e-05, 7.868100000000058e-05, 7.87779999999981e-05, 7.837499999999858e-05, 7.866700000000101e-05, 7.854200000000089e-05, 7.865300000000144e-05, 7.829200000000064e-05, 7.884699999999994e-05, 7.901399999999878e-05, 7.823599999999889e-05, 7.856900000000056e-05, 7.898600000000311e-05, 7.897200000000007e-05, 7.872199999999982e-05, 7.915299999999847e-05, 7.888900000000212e-05, 7.824999999999846e-05, 7.836199999999849e-05, 7.830600000000021e-05, 7.858400000000307e-05, 7.872199999999982e-05, 7.85969999999997e-05, 7.873599999999939e-05, 7.897200000000007e-05, 7.893000000000136e-05, 7.848599999999914e-05, 7.824999999999846e-05, 7.913900000000237e-05, 7.833399999999935e-05, 7.848599999999914e-05, 7.880600000000071e-05]</msg>
<status status="PASS" starttime="20201029 12:55:51.654" endtime="20201029 12:55:51.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.649" endtime="20201029 12:55:51.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:51.660" endtime="20201029 12:55:51.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.659" endtime="20201029 12:55:51.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.658" endtime="20201029 12:55:51.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.300" endtime="20201029 12:55:51.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.299" endtime="20201029 12:55:51.681"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.690" endtime="20201029 12:55:51.708"></status>
</kw>
<msg timestamp="20201029 12:55:51.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:51.688" endtime="20201029 12:55:51.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:51.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:51.709" endtime="20201029 12:55:51.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.712" endtime="20201029 12:55:51.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.686" endtime="20201029 12:55:51.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.684" endtime="20201029 12:55:51.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:51.721" endtime="20201029 12:55:52.007"></status>
</kw>
<msg timestamp="20201029 12:55:52.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:51.719" endtime="20201029 12:55:52.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020066083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:52.011" endtime="20201029 12:55:52.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.019" endtime="20201029 12:55:52.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.717" endtime="20201029 12:55:52.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.715" endtime="20201029 12:55:52.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:52.026" level="INFO">${RESULT} = [{'diff': 7.943100000000133e-05}, {'diff': 7.94169999999983e-05}, {'diff': 7.94030000000022e-05}, {'diff': 7.934799999999992e-05}, {'diff': 7.983399999999738e-05}, {'diff': 8.00979999999972e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:55:52.022" endtime="20201029 12:55:52.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:52.030" level="INFO">${ACCURACY} = {'diff': [7.943100000000133e-05, 7.94169999999983e-05, 7.94030000000022e-05, 7.934799999999992e-05, 7.983399999999738e-05, 8.00979999999972e-05, 8.018000000000261e-05, 7.923599999999989e-05, 7.9318999...</msg>
<status status="PASS" starttime="20201029 12:55:52.027" endtime="20201029 12:55:52.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.034" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:55:52.033" endtime="20201029 12:55:52.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.037" level="INFO">VALUE: [7.943100000000133e-05, 7.94169999999983e-05, 7.94030000000022e-05, 7.934799999999992e-05, 7.983399999999738e-05, 8.00979999999972e-05, 8.018000000000261e-05, 7.923599999999989e-05, 7.931899999999784e-05, 8.012500000000033e-05, 7.961100000000026e-05, 8.000000000000021e-05, 7.980600000000171e-05, 8.005600000000196e-05, 7.981999999999781e-05, 7.990199999999975e-05, 7.96389999999994e-05, 7.993100000000183e-05, 7.929199999999817e-05, 7.958300000000113e-05, 7.97779999999991e-05, 7.980499999999877e-05, 7.922200000000032e-05, 7.974999999999996e-05, 7.927800000000207e-05, 7.966700000000201e-05, 7.938900000000262e-05, 7.965299999999897e-05, 8.004200000000239e-05, 7.923599999999989e-05, 7.976399999999953e-05, 7.990299999999922e-05, 7.933300000000088e-05, 7.988899999999965e-05, 7.951399999999928e-05, 7.937499999999958e-05, 8.000000000000021e-05, 7.94169999999983e-05, 7.927800000000207e-05, 7.986100000000051e-05, 7.994499999999793e-05, 8.00979999999972e-05, 7.941700000000176e-05, 8.001399999999978e-05, 8.006899999999859e-05, 7.930500000000174e-05, 7.968000000000211e-05, 7.965299999999897e-05, 8.000000000000021e-05, 7.961100000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:55:52.035" endtime="20201029 12:55:52.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.031" endtime="20201029 12:55:52.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:52.042" endtime="20201029 12:55:52.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.040" endtime="20201029 12:55:52.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.039" endtime="20201029 12:55:52.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.682" endtime="20201029 12:55:52.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:51.682" endtime="20201029 12:55:52.062"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.071" endtime="20201029 12:55:52.091"></status>
</kw>
<msg timestamp="20201029 12:55:52.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:52.069" endtime="20201029 12:55:52.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:52.093" endtime="20201029 12:55:52.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.095" endtime="20201029 12:55:52.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.067" endtime="20201029 12:55:52.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.065" endtime="20201029 12:55:52.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.104" endtime="20201029 12:55:52.390"></status>
</kw>
<msg timestamp="20201029 12:55:52.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:52.103" endtime="20201029 12:55:52.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:52.394" endtime="20201029 12:55:52.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.403" endtime="20201029 12:55:52.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.100" endtime="20201029 12:55:52.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.099" endtime="20201029 12:55:52.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:52.409" level="INFO">${RESULT} = [{'diff': 8.041700000000276e-05}, {'diff': 8.044399999999896e-05}, {'diff': 8.026400000000003e-05}, {'diff': 8.112499999999787e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.084700000000195e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:52.406" endtime="20201029 12:55:52.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:52.414" level="INFO">${ACCURACY} = {'diff': [8.041700000000276e-05, 8.044399999999896e-05, 8.026400000000003e-05, 8.112499999999787e-05, 8.11109999999983e-05, 8.084700000000195e-05, 8.067999999999964e-05, 8.097200000000207e-05, 8.10140...</msg>
<status status="PASS" starttime="20201029 12:55:52.410" endtime="20201029 12:55:52.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.418" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:55:52.417" endtime="20201029 12:55:52.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.424" level="INFO">VALUE: [8.041700000000276e-05, 8.044399999999896e-05, 8.026400000000003e-05, 8.112499999999787e-05, 8.11109999999983e-05, 8.084700000000195e-05, 8.067999999999964e-05, 8.097200000000207e-05, 8.101400000000078e-05, 8.09169999999998e-05, 8.040299999999972e-05, 8.054199999999942e-05, 8.111199999999777e-05, 8.088800000000118e-05, 8.055499999999952e-05, 8.087499999999762e-05, 8.108299999999916e-05, 8.023600000000089e-05, 8.067999999999964e-05, 8.088900000000065e-05, 8.115300000000047e-05, 8.045799999999853e-05, 8.04169999999993e-05, 8.066699999999954e-05, 8.094499999999893e-05, 8.03329999999984e-05, 8.069399999999921e-05, 8.084700000000195e-05, 8.031899999999884e-05, 8.08329999999989e-05, 8.072200000000182e-05, 8.030600000000221e-05, 8.073600000000139e-05, 8.083400000000185e-05, 8.036099999999755e-05, 8.119500000000265e-05, 8.105599999999949e-05, 8.11390000000009e-05, 8.076300000000106e-05, 8.10970000000022e-05, 8.065299999999997e-05, 8.057000000000203e-05, 8.036100000000101e-05, 8.094400000000293e-05, 8.069400000000268e-05, 8.119499999999918e-05, 8.072200000000182e-05, 8.116700000000004e-05, 8.094499999999893e-05, 8.100000000000121e-05]</msg>
<status status="PASS" starttime="20201029 12:55:52.419" endtime="20201029 12:55:52.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.415" endtime="20201029 12:55:52.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:52.429" endtime="20201029 12:55:52.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.427" endtime="20201029 12:55:52.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.426" endtime="20201029 12:55:52.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.063" endtime="20201029 12:55:52.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.063" endtime="20201029 12:55:52.450"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.458" endtime="20201029 12:55:52.476"></status>
</kw>
<msg timestamp="20201029 12:55:52.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:52.457" endtime="20201029 12:55:52.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:52.478" endtime="20201029 12:55:52.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.481" endtime="20201029 12:55:52.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.454" endtime="20201029 12:55:52.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.452" endtime="20201029 12:55:52.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.489" endtime="20201029 12:55:52.775"></status>
</kw>
<msg timestamp="20201029 12:55:52.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:52.488" endtime="20201029 12:55:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:52.779" endtime="20201029 12:55:52.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.787" endtime="20201029 12:55:52.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.485" endtime="20201029 12:55:52.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.484" endtime="20201029 12:55:52.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:52.794" level="INFO">${RESULT} = [{'diff': 8.158399999999913e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.144499999999943e-05}, {'diff': 8.193000000000089e-05}, {'diff': 8.17780000000011e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:52.791" endtime="20201029 12:55:52.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:52.799" level="INFO">${ACCURACY} = {'diff': [8.158399999999913e-05, 8.152800000000085e-05, 8.144499999999943e-05, 8.144499999999943e-05, 8.193000000000089e-05, 8.17780000000011e-05, 8.138900000000115e-05, 8.21390000000019e-05, 8.191599...</msg>
<status status="PASS" starttime="20201029 12:55:52.795" endtime="20201029 12:55:52.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.803" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:55:52.802" endtime="20201029 12:55:52.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.806" level="INFO">VALUE: [8.158399999999913e-05, 8.152800000000085e-05, 8.144499999999943e-05, 8.144499999999943e-05, 8.193000000000089e-05, 8.17780000000011e-05, 8.138900000000115e-05, 8.21390000000019e-05, 8.191599999999785e-05, 8.180500000000077e-05, 8.129200000000017e-05, 8.21390000000019e-05, 8.143100000000333e-05, 8.204200000000092e-05, 8.175000000000196e-05, 8.173599999999892e-05, 8.180600000000024e-05, 8.219499999999672e-05, 8.215300000000147e-05, 8.155500000000052e-05, 8.176400000000153e-05, 8.122199999999885e-05, 8.208300000000016e-05, 8.13329999999994e-05, 8.172199999999935e-05, 8.127799999999713e-05, 8.134700000000245e-05, 8.131999999999931e-05, 8.21390000000019e-05, 8.218100000000061e-05, 8.206899999999712e-05, 8.215199999999853e-05, 8.154100000000095e-05, 8.124999999999799e-05, 8.148600000000214e-05, 8.206900000000059e-05, 8.186099999999905e-05, 8.163899999999794e-05, 8.168100000000011e-05, 8.136099999999855e-05, 8.130500000000027e-05, 8.140300000000072e-05, 8.140200000000125e-05, 8.209699999999973e-05, 8.172199999999935e-05, 8.173599999999892e-05, 8.219500000000018e-05, 8.144399999999996e-05, 8.155599999999999e-05, 8.195800000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:55:52.804" endtime="20201029 12:55:52.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.800" endtime="20201029 12:55:52.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:52.811" endtime="20201029 12:55:52.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.809" endtime="20201029 12:55:52.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.808" endtime="20201029 12:55:52.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.451" endtime="20201029 12:55:52.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.450" endtime="20201029 12:55:52.832"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.840" endtime="20201029 12:55:52.858"></status>
</kw>
<msg timestamp="20201029 12:55:52.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:52.839" endtime="20201029 12:55:52.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:52.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:52.860" endtime="20201029 12:55:52.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.862" endtime="20201029 12:55:52.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.836" endtime="20201029 12:55:52.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.834" endtime="20201029 12:55:52.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:52.871" endtime="20201029 12:55:53.159"></status>
</kw>
<msg timestamp="20201029 12:55:53.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:52.870" endtime="20201029 12:55:53.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:53.163" endtime="20201029 12:55:53.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.172" endtime="20201029 12:55:53.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.867" endtime="20201029 12:55:53.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.865" endtime="20201029 12:55:53.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:53.178" level="INFO">${RESULT} = [{'diff': 8.2459e-05}, {'diff': 8.290199999999928e-05}, {'diff': 8.26109999999998e-05}, {'diff': 8.290200000000275e-05}, {'diff': 8.240300000000172e-05}, {'diff': 8.313899999999944e-05}, {'diff': 8.25...</msg>
<status status="PASS" starttime="20201029 12:55:53.175" endtime="20201029 12:55:53.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:53.182" level="INFO">${ACCURACY} = {'diff': [8.2459e-05, 8.290199999999928e-05, 8.26109999999998e-05, 8.290200000000275e-05, 8.240300000000172e-05, 8.313899999999944e-05, 8.251399999999881e-05, 8.270800000000078e-05, 8.274999999999949e...</msg>
<status status="PASS" starttime="20201029 12:55:53.179" endtime="20201029 12:55:53.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.187" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:55:53.186" endtime="20201029 12:55:53.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.189" level="INFO">VALUE: [8.2459e-05, 8.290199999999928e-05, 8.26109999999998e-05, 8.290200000000275e-05, 8.240300000000172e-05, 8.313899999999944e-05, 8.251399999999881e-05, 8.270800000000078e-05, 8.274999999999949e-05, 8.254200000000142e-05, 8.222200000000332e-05, 8.305600000000149e-05, 8.218100000000061e-05, 8.22910000000017e-05, 8.255499999999805e-05, 8.230500000000127e-05, 8.255599999999752e-05, 8.222199999999985e-05, 8.26520000000025e-05, 8.287499999999962e-05, 8.281999999999734e-05, 8.266699999999808e-05, 8.298600000000017e-05, 8.304200000000192e-05, 8.223700000000236e-05, 8.272200000000035e-05, 8.273599999999992e-05, 8.259700000000023e-05, 8.280599999999777e-05, 8.23330000000004e-05, 8.266700000000154e-05, 8.309700000000073e-05, 8.2459e-05, 8.257000000000056e-05, 8.233399999999988e-05, 8.312499999999987e-05, 8.276399999999906e-05, 8.223599999999942e-05, 8.259700000000023e-05, 8.268100000000111e-05, 8.224999999999899e-05, 8.294400000000146e-05, 8.288899999999919e-05, 8.306900000000159e-05, 8.268100000000111e-05, 8.301399999999931e-05, 8.236099999999955e-05, 8.248599999999967e-05, 8.257000000000056e-05, 8.308300000000116e-05]</msg>
<status status="PASS" starttime="20201029 12:55:53.188" endtime="20201029 12:55:53.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.183" endtime="20201029 12:55:53.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:53.194" endtime="20201029 12:55:53.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.192" endtime="20201029 12:55:53.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.191" endtime="20201029 12:55:53.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.833" endtime="20201029 12:55:53.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:52.832" endtime="20201029 12:55:53.215"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.224" endtime="20201029 12:55:53.243"></status>
</kw>
<msg timestamp="20201029 12:55:53.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:53.222" endtime="20201029 12:55:53.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:53.245" endtime="20201029 12:55:53.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.247" endtime="20201029 12:55:53.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.219" endtime="20201029 12:55:53.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.217" endtime="20201029 12:55:53.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.256" endtime="20201029 12:55:53.542"></status>
</kw>
<msg timestamp="20201029 12:55:53.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:53.255" endtime="20201029 12:55:53.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020701972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:53.547" endtime="20201029 12:55:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.555" endtime="20201029 12:55:53.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.252" endtime="20201029 12:55:53.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.251" endtime="20201029 12:55:53.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:53.561" level="INFO">${RESULT} = [{'diff': 8.327799999999913e-05}, {'diff': 8.320800000000128e-05}, {'diff': 8.405499999999955e-05}, {'diff': 8.416699999999958e-05}, {'diff': 8.394499999999847e-05}, {'diff': 8.39720000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:53.558" endtime="20201029 12:55:53.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:53.565" level="INFO">${ACCURACY} = {'diff': [8.327799999999913e-05, 8.320800000000128e-05, 8.405499999999955e-05, 8.416699999999958e-05, 8.394499999999847e-05, 8.39720000000016e-05, 8.376400000000006e-05, 8.37919999999992e-05, 8.395900...</msg>
<status status="PASS" starttime="20201029 12:55:53.562" endtime="20201029 12:55:53.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.570" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:55:53.569" endtime="20201029 12:55:53.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.572" level="INFO">VALUE: [8.327799999999913e-05, 8.320800000000128e-05, 8.405499999999955e-05, 8.416699999999958e-05, 8.394499999999847e-05, 8.39720000000016e-05, 8.376400000000006e-05, 8.37919999999992e-05, 8.39590000000015e-05, 8.367999999999917e-05, 8.355499999999905e-05, 8.33330000000014e-05, 8.324999999999999e-05, 8.354099999999948e-05, 8.405599999999902e-05, 8.363899999999994e-05, 8.394500000000193e-05, 8.394500000000193e-05, 8.404199999999945e-05, 8.340300000000272e-05, 8.420799999999881e-05, 8.395799999999856e-05, 8.408300000000216e-05, 8.373600000000092e-05, 8.361099999999733e-05, 8.38330000000019e-05, 8.331900000000184e-05, 8.354199999999895e-05, 8.32919999999987e-05, 8.343100000000186e-05, 8.373599999999745e-05, 8.336200000000002e-05, 8.381899999999887e-05, 8.39170000000028e-05, 8.404099999999998e-05, 8.376400000000006e-05, 8.408299999999869e-05, 8.376400000000006e-05, 8.375000000000049e-05, 8.369400000000221e-05, 8.41249999999974e-05, 8.409700000000173e-05, 8.348600000000067e-05, 8.388900000000019e-05, 8.375000000000049e-05, 8.36529999999995e-05, 8.326300000000009e-05, 8.334700000000098e-05, 8.362500000000037e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201029 12:55:53.571" endtime="20201029 12:55:53.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.566" endtime="20201029 12:55:53.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:53.578" endtime="20201029 12:55:53.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.577" endtime="20201029 12:55:53.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.576" endtime="20201029 12:55:53.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.216" endtime="20201029 12:55:53.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.215" endtime="20201029 12:55:53.599"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.608" endtime="20201029 12:55:53.626"></status>
</kw>
<msg timestamp="20201029 12:55:53.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:53.606" endtime="20201029 12:55:53.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:53.627" endtime="20201029 12:55:53.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.629" endtime="20201029 12:55:53.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.604" endtime="20201029 12:55:53.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.602" endtime="20201029 12:55:53.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.638" endtime="20201029 12:55:53.943"></status>
</kw>
<msg timestamp="20201029 12:55:53.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:53.637" endtime="20201029 12:55:53.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019487708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:53.947" endtime="20201029 12:55:53.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:53.955" endtime="20201029 12:55:53.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.634" endtime="20201029 12:55:53.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.633" endtime="20201029 12:55:53.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:53.962" level="INFO">${RESULT} = [{'diff': 8.488900000000119e-05}, {'diff': 8.468000000000017e-05}, {'diff': 8.473599999999845e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.483400000000238e-05}, {'diff': 8.419500000000218e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:53.958" endtime="20201029 12:55:53.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:53.967" level="INFO">${ACCURACY} = {'diff': [8.488900000000119e-05, 8.468000000000017e-05, 8.473599999999845e-05, 8.455599999999952e-05, 8.483400000000238e-05, 8.419500000000218e-05, 8.434799999999798e-05, 8.520799999999981e-05, 8.5235...</msg>
<status status="PASS" starttime="20201029 12:55:53.963" endtime="20201029 12:55:53.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.971" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:55:53.970" endtime="20201029 12:55:53.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:53.974" level="INFO">VALUE: [8.488900000000119e-05, 8.468000000000017e-05, 8.473599999999845e-05, 8.455599999999952e-05, 8.483400000000238e-05, 8.419500000000218e-05, 8.434799999999798e-05, 8.520799999999981e-05, 8.523599999999895e-05, 8.447199999999863e-05, 8.46530000000005e-05, 8.461099999999833e-05, 8.477800000000063e-05, 8.476400000000106e-05, 8.475000000000149e-05, 8.518100000000015e-05, 8.477799999999716e-05, 8.488799999999824e-05, 8.46530000000005e-05, 8.472199999999888e-05, 8.465299999999704e-05, 8.509699999999926e-05, 8.440300000000026e-05, 8.452800000000038e-05, 8.466700000000008e-05, 8.488899999999772e-05, 8.486100000000205e-05, 8.488899999999772e-05, 8.504200000000045e-05, 8.459799999999823e-05, 8.455599999999952e-05, 8.513899999999797e-05, 8.505500000000055e-05, 8.431899999999937e-05, 8.497199999999913e-05, 8.444399999999949e-05, 8.477800000000063e-05, 8.518100000000015e-05, 8.477800000000063e-05, 8.513900000000144e-05, 8.438900000000069e-05, 8.465200000000103e-05, 8.470799999999931e-05, 8.487500000000162e-05, 8.48050000000003e-05, 8.502699999999794e-05, 8.51110000000023e-05, 8.49859999999987e-05, 8.422200000000185e-05, 8.51249999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:55:53.972" endtime="20201029 12:55:53.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.967" endtime="20201029 12:55:53.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:53.979" endtime="20201029 12:55:53.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.977" endtime="20201029 12:55:53.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.976" endtime="20201029 12:55:53.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.600" endtime="20201029 12:55:53.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:53.599" endtime="20201029 12:55:53.999"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.008" endtime="20201029 12:55:54.027"></status>
</kw>
<msg timestamp="20201029 12:55:54.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:54.007" endtime="20201029 12:55:54.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:54.028" endtime="20201029 12:55:54.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.031" endtime="20201029 12:55:54.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.004" endtime="20201029 12:55:54.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.002" endtime="20201029 12:55:54.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.040" endtime="20201029 12:55:54.325"></status>
</kw>
<msg timestamp="20201029 12:55:54.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020466042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:54.038" endtime="20201029 12:55:54.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020466042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:54.329" endtime="20201029 12:55:54.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.338" endtime="20201029 12:55:54.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.036" endtime="20201029 12:55:54.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.034" endtime="20201029 12:55:54.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:54.344" level="INFO">${RESULT} = [{'diff': 8.54859999999992e-05}, {'diff': 8.552800000000138e-05}, {'diff': 8.581999999999687e-05}, {'diff': 8.559799999999923e-05}, {'diff': 8.526300000000209e-05}, {'diff': 8.56660000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:54.341" endtime="20201029 12:55:54.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:54.348" level="INFO">${ACCURACY} = {'diff': [8.54859999999992e-05, 8.552800000000138e-05, 8.581999999999687e-05, 8.559799999999923e-05, 8.526300000000209e-05, 8.56660000000016e-05, 8.527799999999766e-05, 8.547199999999963e-05, 8.5847e-...</msg>
<status status="PASS" starttime="20201029 12:55:54.345" endtime="20201029 12:55:54.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.353" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:55:54.352" endtime="20201029 12:55:54.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.355" level="INFO">VALUE: [8.54859999999992e-05, 8.552800000000138e-05, 8.581999999999687e-05, 8.559799999999923e-05, 8.526300000000209e-05, 8.56660000000016e-05, 8.527799999999766e-05, 8.547199999999963e-05, 8.5847e-05, 8.599999999999927e-05, 8.602800000000188e-05, 8.583300000000044e-05, 8.544499999999997e-05, 8.568100000000065e-05, 8.537499999999865e-05, 8.530600000000027e-05, 8.586199999999905e-05, 8.56799999999977e-05, 8.61249999999994e-05, 8.545800000000006e-05, 8.605499999999808e-05, 8.605599999999755e-05, 8.551399999999834e-05, 8.559699999999976e-05, 8.615299999999854e-05, 8.531999999999984e-05, 8.540299999999779e-05, 8.568100000000065e-05, 8.523599999999895e-05, 8.540199999999831e-05, 8.558300000000019e-05, 8.613899999999897e-05, 8.555600000000052e-05, 8.607000000000059e-05, 8.554200000000095e-05, 8.555600000000052e-05, 8.605600000000102e-05, 8.533299999999994e-05, 8.604100000000198e-05, 8.602800000000188e-05, 8.599999999999927e-05, 8.540200000000178e-05, 8.579100000000173e-05, 8.565299999999804e-05, 8.59310000000009e-05, 8.523599999999895e-05, 8.602799999999841e-05, 8.533299999999994e-05, 8.52920000000007e-05, 8.597200000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:55:54.354" endtime="20201029 12:55:54.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.349" endtime="20201029 12:55:54.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:54.361" endtime="20201029 12:55:54.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.359" endtime="20201029 12:55:54.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.358" endtime="20201029 12:55:54.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.000" endtime="20201029 12:55:54.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.000" endtime="20201029 12:55:54.382"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.391" endtime="20201029 12:55:54.410"></status>
</kw>
<msg timestamp="20201029 12:55:54.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:54.389" endtime="20201029 12:55:54.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:54.412" endtime="20201029 12:55:54.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.414" endtime="20201029 12:55:54.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.386" endtime="20201029 12:55:54.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.384" endtime="20201029 12:55:54.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.427" endtime="20201029 12:55:54.738"></status>
</kw>
<msg timestamp="20201029 12:55:54.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020787708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:54.425" endtime="20201029 12:55:54.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020701139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020787708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:54.742" endtime="20201029 12:55:54.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.750" endtime="20201029 12:55:54.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.422" endtime="20201029 12:55:54.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.417" endtime="20201029 12:55:54.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:54.757" level="INFO">${RESULT} = [{'diff': 8.656899999999815e-05}, {'diff': 8.652799999999891e-05}, {'diff': 8.672200000000088e-05}, {'diff': 8.722300000000086e-05}, {'diff': 8.697199999999766e-05}, {'diff': 8.681999999999787e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:54.754" endtime="20201029 12:55:54.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:54.761" level="INFO">${ACCURACY} = {'diff': [8.656899999999815e-05, 8.652799999999891e-05, 8.672200000000088e-05, 8.722300000000086e-05, 8.697199999999766e-05, 8.681999999999787e-05, 8.655600000000152e-05, 8.676399999999959e-05, 8.7013...</msg>
<status status="PASS" starttime="20201029 12:55:54.758" endtime="20201029 12:55:54.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.766" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:55:54.765" endtime="20201029 12:55:54.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.769" level="INFO">VALUE: [8.656899999999815e-05, 8.652799999999891e-05, 8.672200000000088e-05, 8.722300000000086e-05, 8.697199999999766e-05, 8.681999999999787e-05, 8.655600000000152e-05, 8.676399999999959e-05, 8.701399999999984e-05, 8.636100000000008e-05, 8.643000000000192e-05, 8.672200000000088e-05, 8.695800000000156e-05, 8.66249999999999e-05, 8.695799999999809e-05, 8.709699999999779e-05, 8.694500000000147e-05, 8.637499999999965e-05, 8.715200000000006e-05, 8.663899999999947e-05, 8.691699999999886e-05, 8.622200000000038e-05, 8.66799999999987e-05, 8.651399999999934e-05, 8.673600000000045e-05, 8.691599999999938e-05, 8.63189999999979e-05, 8.688899999999972e-05, 8.672200000000088e-05, 8.702799999999941e-05, 8.694500000000147e-05, 8.638899999999922e-05, 8.68189999999984e-05, 8.668100000000165e-05, 8.694400000000199e-05, 8.63189999999979e-05, 8.658300000000119e-05, 8.663899999999947e-05, 8.66249999999999e-05, 8.672200000000088e-05, 8.723600000000095e-05, 8.701399999999984e-05, 8.637499999999965e-05, 8.62920000000017e-05, 8.68189999999984e-05, 8.677699999999969e-05, 8.622200000000038e-05, 8.687500000000015e-05, 8.711099999999736e-05, 8.624999999999952e-05]</msg>
<status status="PASS" starttime="20201029 12:55:54.767" endtime="20201029 12:55:54.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.762" endtime="20201029 12:55:54.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:54.775" endtime="20201029 12:55:54.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.773" endtime="20201029 12:55:54.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.772" endtime="20201029 12:55:54.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.383" endtime="20201029 12:55:54.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.382" endtime="20201029 12:55:54.796"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.805" endtime="20201029 12:55:54.823"></status>
</kw>
<msg timestamp="20201029 12:55:54.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:54.803" endtime="20201029 12:55:54.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:54.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:54.825" endtime="20201029 12:55:54.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.828" endtime="20201029 12:55:54.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.800" endtime="20201029 12:55:54.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.798" endtime="20201029 12:55:54.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:54.837" endtime="20201029 12:55:55.123"></status>
</kw>
<msg timestamp="20201029 12:55:55.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:54.835" endtime="20201029 12:55:55.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:55.127" endtime="20201029 12:55:55.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.135" endtime="20201029 12:55:55.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.833" endtime="20201029 12:55:55.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.831" endtime="20201029 12:55:55.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:55.142" level="INFO">${RESULT} = [{'diff': 8.819399999999977e-05}, {'diff': 8.737500000000065e-05}, {'diff': 8.79860000000017e-05}, {'diff': 8.722200000000138e-05}, {'diff': 8.783300000000244e-05}, {'diff': 8.770799999999884e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:55.139" endtime="20201029 12:55:55.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:55.147" level="INFO">${ACCURACY} = {'diff': [8.819399999999977e-05, 8.737500000000065e-05, 8.79860000000017e-05, 8.722200000000138e-05, 8.783300000000244e-05, 8.770799999999884e-05, 8.795899999999857e-05, 8.723600000000095e-05, 8.73469...</msg>
<status status="PASS" starttime="20201029 12:55:55.143" endtime="20201029 12:55:55.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.152" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:55:55.151" endtime="20201029 12:55:55.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.155" level="INFO">VALUE: [8.819399999999977e-05, 8.737500000000065e-05, 8.79860000000017e-05, 8.722200000000138e-05, 8.783300000000244e-05, 8.770799999999884e-05, 8.795899999999857e-05, 8.723600000000095e-05, 8.734699999999804e-05, 8.775000000000102e-05, 8.806899999999965e-05, 8.786100000000158e-05, 8.766600000000013e-05, 8.736099999999761e-05, 8.788900000000072e-05, 8.787500000000115e-05, 8.720899999999782e-05, 8.78059999999993e-05, 8.783399999999844e-05, 8.79999999999978e-05, 8.763800000000099e-05, 8.744399999999902e-05, 8.758299999999872e-05, 8.755499999999958e-05, 8.769399999999927e-05, 8.823600000000195e-05, 8.775000000000102e-05, 8.738900000000022e-05, 8.774999999999755e-05, 8.741700000000283e-05, 8.736100000000108e-05, 8.73059999999988e-05, 8.817999999999673e-05, 8.761100000000133e-05, 8.722199999999791e-05, 8.805599999999955e-05, 8.730499999999933e-05, 8.747200000000163e-05, 8.73059999999988e-05, 8.759700000000176e-05, 8.808399999999869e-05, 8.805599999999955e-05, 8.765300000000004e-05, 8.811199999999783e-05, 8.78189999999994e-05, 8.740200000000031e-05, 8.74310000000024e-05, 8.787500000000115e-05, 8.76669999999996e-05, 8.751400000000034e-05]</msg>
<status status="PASS" starttime="20201029 12:55:55.153" endtime="20201029 12:55:55.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.148" endtime="20201029 12:55:55.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:55.160" endtime="20201029 12:55:55.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.158" endtime="20201029 12:55:55.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.157" endtime="20201029 12:55:55.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.797" endtime="20201029 12:55:55.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:54.796" endtime="20201029 12:55:55.181"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.190" endtime="20201029 12:55:55.209"></status>
</kw>
<msg timestamp="20201029 12:55:55.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:55.188" endtime="20201029 12:55:55.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:55.211" endtime="20201029 12:55:55.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.214" endtime="20201029 12:55:55.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.185" endtime="20201029 12:55:55.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.183" endtime="20201029 12:55:55.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.223" endtime="20201029 12:55:55.512"></status>
</kw>
<msg timestamp="20201029 12:55:55.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:55.222" endtime="20201029 12:55:55.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020082236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:55.516" endtime="20201029 12:55:55.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.525" endtime="20201029 12:55:55.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.219" endtime="20201029 12:55:55.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.217" endtime="20201029 12:55:55.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:55.532" level="INFO">${RESULT} = [{'diff': 8.911099999999936e-05}, {'diff': 8.900000000000227e-05}, {'diff': 8.876399999999812e-05}, {'diff': 8.858399999999919e-05}, {'diff': 8.823600000000195e-05}, {'diff': 8.918100000000068e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:55.528" endtime="20201029 12:55:55.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:55.536" level="INFO">${ACCURACY} = {'diff': [8.911099999999936e-05, 8.900000000000227e-05, 8.876399999999812e-05, 8.858399999999919e-05, 8.823600000000195e-05, 8.918100000000068e-05, 8.868100000000018e-05, 8.881999999999987e-05, 8.8625...</msg>
<status status="PASS" starttime="20201029 12:55:55.533" endtime="20201029 12:55:55.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.540" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:55:55.539" endtime="20201029 12:55:55.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.543" level="INFO">VALUE: [8.911099999999936e-05, 8.900000000000227e-05, 8.876399999999812e-05, 8.858399999999919e-05, 8.823600000000195e-05, 8.918100000000068e-05, 8.868100000000018e-05, 8.881999999999987e-05, 8.86250000000019e-05, 8.84999999999983e-05, 8.908300000000022e-05, 8.837499999999818e-05, 8.877799999999769e-05, 8.830500000000033e-05, 8.898599999999923e-05, 8.863900000000147e-05, 8.902800000000141e-05, 8.888899999999825e-05, 8.820900000000229e-05, 8.880499999999736e-05, 8.86250000000019e-05, 8.900000000000227e-05, 8.895800000000009e-05, 8.91250000000024e-05, 8.845799999999959e-05, 8.906899999999718e-05, 8.879200000000073e-05, 8.904200000000098e-05, 8.84860000000022e-05, 8.845899999999907e-05, 8.91519999999986e-05, 8.85129999999984e-05, 8.855499999999711e-05, 8.88190000000004e-05, 8.906900000000065e-05, 8.824999999999805e-05, 8.891699999999739e-05, 8.827800000000066e-05, 8.91389999999985e-05, 8.888900000000172e-05, 8.905600000000055e-05, 8.83189999999999e-05, 8.851399999999787e-05, 8.916699999999764e-05, 8.916599999999816e-05, 8.876400000000159e-05, 8.869400000000027e-05, 8.916699999999764e-05, 8.826400000000109e-05, 8.897199999999966e-05]</msg>
<status status="PASS" starttime="20201029 12:55:55.542" endtime="20201029 12:55:55.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.537" endtime="20201029 12:55:55.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:55.548" endtime="20201029 12:55:55.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.547" endtime="20201029 12:55:55.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.546" endtime="20201029 12:55:55.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.182" endtime="20201029 12:55:55.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.181" endtime="20201029 12:55:55.569"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.578" endtime="20201029 12:55:55.598"></status>
</kw>
<msg timestamp="20201029 12:55:55.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:55.577" endtime="20201029 12:55:55.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:55.600" endtime="20201029 12:55:55.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.602" endtime="20201029 12:55:55.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.574" endtime="20201029 12:55:55.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.572" endtime="20201029 12:55:55.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.612" endtime="20201029 12:55:55.898"></status>
</kw>
<msg timestamp="20201029 12:55:55.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021138653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021228736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:55.610" endtime="20201029 12:55:55.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021138653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021228736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:55.903" endtime="20201029 12:55:55.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.911" endtime="20201029 12:55:55.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.607" endtime="20201029 12:55:55.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.605" endtime="20201029 12:55:55.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:55.918" level="INFO">${RESULT} = [{'diff': 9.008300000000122e-05}, {'diff': 9.009700000000079e-05}, {'diff': 8.995800000000109e-05}, {'diff': 8.957000000000062e-05}, {'diff': 8.984699999999707e-05}, {'diff': 8.933399999999994e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:55.915" endtime="20201029 12:55:55.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:55.922" level="INFO">${ACCURACY} = {'diff': [9.008300000000122e-05, 9.009700000000079e-05, 8.995800000000109e-05, 8.957000000000062e-05, 8.984699999999707e-05, 8.933399999999994e-05, 8.922299999999939e-05, 8.973700000000293e-05, 8.9999...</msg>
<status status="PASS" starttime="20201029 12:55:55.919" endtime="20201029 12:55:55.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.927" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:55:55.926" endtime="20201029 12:55:55.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.933" level="INFO">VALUE: [9.008300000000122e-05, 9.009700000000079e-05, 8.995800000000109e-05, 8.957000000000062e-05, 8.984699999999707e-05, 8.933399999999994e-05, 8.922299999999939e-05, 8.973700000000293e-05, 8.99999999999998e-05, 8.942999999999798e-05, 9.018100000000168e-05, 9.016599999999916e-05, 8.984700000000054e-05, 9.002799999999894e-05, 8.98060000000013e-05, 8.991699999999839e-05, 9.015299999999907e-05, 8.969500000000075e-05, 8.988899999999925e-05, 8.99999999999998e-05, 8.98190000000014e-05, 8.945800000000059e-05, 9.01670000000021e-05, 8.94999999999993e-05, 8.923599999999948e-05, 9.018099999999821e-05, 9.001399999999937e-05, 8.982000000000087e-05, 8.926400000000209e-05, 8.956900000000115e-05, 8.997200000000066e-05, 8.956899999999768e-05, 8.988899999999925e-05, 9.012499999999993e-05, 9.008299999999775e-05, 9.01389999999995e-05, 8.961099999999986e-05, 8.997200000000066e-05, 8.998599999999676e-05, 8.995900000000057e-05, 8.998600000000023e-05, 9.01519999999996e-05, 8.990199999999934e-05, 8.974999999999955e-05, 8.940300000000179e-05, 8.997200000000066e-05, 8.93060000000008e-05, 8.972200000000041e-05, 8.922299999999939e-05, 9.019500000000125e-05]</msg>
<status status="PASS" starttime="20201029 12:55:55.928" endtime="20201029 12:55:55.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.923" endtime="20201029 12:55:55.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:55.938" endtime="20201029 12:55:55.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.937" endtime="20201029 12:55:55.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.936" endtime="20201029 12:55:55.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.570" endtime="20201029 12:55:55.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.570" endtime="20201029 12:55:55.959"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.968" endtime="20201029 12:55:55.987"></status>
</kw>
<msg timestamp="20201029 12:55:55.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:55.967" endtime="20201029 12:55:55.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:55.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:55.989" endtime="20201029 12:55:55.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:55.992" endtime="20201029 12:55:55.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.964" endtime="20201029 12:55:55.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.962" endtime="20201029 12:55:55.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.001" endtime="20201029 12:55:56.288"></status>
</kw>
<msg timestamp="20201029 12:55:56.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:55.999" endtime="20201029 12:55:56.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020164583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:56.292" endtime="20201029 12:55:56.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.301" endtime="20201029 12:55:56.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.997" endtime="20201029 12:55:56.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.995" endtime="20201029 12:55:56.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:56.308" level="INFO">${RESULT} = [{'diff': 9.055599999999858e-05}, {'diff': 9.102800000000341e-05}, {'diff': 9.111100000000136e-05}, {'diff': 9.059800000000076e-05}, {'diff': 9.094499999999853e-05}, {'diff': 9.10000000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:56.304" endtime="20201029 12:55:56.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:56.313" level="INFO">${ACCURACY} = {'diff': [9.055599999999858e-05, 9.102800000000341e-05, 9.111100000000136e-05, 9.059800000000076e-05, 9.094499999999853e-05, 9.10000000000008e-05, 9.075000000000055e-05, 9.038899999999975e-05, 9.03050...</msg>
<status status="PASS" starttime="20201029 12:55:56.309" endtime="20201029 12:55:56.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.318" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:55:56.317" endtime="20201029 12:55:56.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.320" level="INFO">VALUE: [9.055599999999858e-05, 9.102800000000341e-05, 9.111100000000136e-05, 9.059800000000076e-05, 9.094499999999853e-05, 9.10000000000008e-05, 9.075000000000055e-05, 9.038899999999975e-05, 9.030500000000233e-05, 9.097200000000166e-05, 9.090300000000329e-05, 9.023600000000048e-05, 9.105499999999961e-05, 9.040299999999932e-05, 9.079199999999926e-05, 9.115300000000007e-05, 9.032000000000137e-05, 9.091700000000286e-05, 9.084699999999807e-05, 9.043000000000245e-05, 9.066600000000313e-05, 9.117999999999973e-05, 9.112500000000093e-05, 9.123599999999801e-05, 9.11939999999993e-05, 9.037500000000018e-05, 9.091699999999939e-05, 9.061200000000033e-05, 9.10130000000009e-05, 9.101400000000037e-05, 9.038899999999975e-05, 9.067999999999923e-05, 9.055499999999911e-05, 9.056899999999868e-05, 9.091699999999939e-05, 9.08329999999985e-05, 9.097200000000166e-05, 9.084700000000154e-05, 9.068100000000218e-05, 9.066599999999966e-05, 9.091599999999991e-05, 9.061100000000086e-05, 9.036100000000061e-05, 9.091700000000286e-05, 9.020800000000134e-05, 9.120900000000182e-05, 9.023600000000048e-05, 9.079199999999926e-05, 9.068099999999871e-05, 9.038899999999975e-05]</msg>
<status status="PASS" starttime="20201029 12:55:56.319" endtime="20201029 12:55:56.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.314" endtime="20201029 12:55:56.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:56.326" endtime="20201029 12:55:56.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.324" endtime="20201029 12:55:56.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.323" endtime="20201029 12:55:56.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.960" endtime="20201029 12:55:56.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:55.960" endtime="20201029 12:55:56.346"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.355" endtime="20201029 12:55:56.373"></status>
</kw>
<msg timestamp="20201029 12:55:56.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:56.354" endtime="20201029 12:55:56.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:56.375" endtime="20201029 12:55:56.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.378" endtime="20201029 12:55:56.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.351" endtime="20201029 12:55:56.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.349" endtime="20201029 12:55:56.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.387" endtime="20201029 12:55:56.674"></status>
</kw>
<msg timestamp="20201029 12:55:56.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02048075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02057275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:56.385" endtime="20201029 12:55:56.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02048075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02057275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:56.678" endtime="20201029 12:55:56.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.686" endtime="20201029 12:55:56.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.383" endtime="20201029 12:55:56.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.381" endtime="20201029 12:55:56.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:56.693" level="INFO">${RESULT} = [{'diff': 9.20000000000018e-05}, {'diff': 9.155600000000305e-05}, {'diff': 9.209700000000279e-05}, {'diff': 9.159800000000176e-05}, {'diff': 9.18879999999983e-05}, {'diff': 9.191600000000091e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:56.690" endtime="20201029 12:55:56.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:56.698" level="INFO">${ACCURACY} = {'diff': [9.20000000000018e-05, 9.155600000000305e-05, 9.209700000000279e-05, 9.159800000000176e-05, 9.18879999999983e-05, 9.191600000000091e-05, 9.16520000000011e-05, 9.174999999999808e-05, 9.1304999...</msg>
<status status="PASS" starttime="20201029 12:55:56.694" endtime="20201029 12:55:56.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.702" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:55:56.701" endtime="20201029 12:55:56.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.705" level="INFO">VALUE: [9.20000000000018e-05, 9.155600000000305e-05, 9.209700000000279e-05, 9.159800000000176e-05, 9.18879999999983e-05, 9.191600000000091e-05, 9.16520000000011e-05, 9.174999999999808e-05, 9.130499999999986e-05, 9.148599999999826e-05, 9.205600000000008e-05, 9.191600000000091e-05, 9.143100000000293e-05, 9.202800000000094e-05, 9.181899999999993e-05, 9.205500000000061e-05, 9.1332999999999e-05, 9.147200000000216e-05, 9.144399999999955e-05, 9.176400000000112e-05, 9.202800000000094e-05, 9.127800000000019e-05, 9.216700000000064e-05, 9.152800000000044e-05, 9.19589999999991e-05, 9.130599999999933e-05, 9.170799999999937e-05, 9.173599999999851e-05, 9.218100000000021e-05, 9.184700000000254e-05, 9.1639000000001e-05, 9.216700000000064e-05, 9.156999999999915e-05, 9.201400000000137e-05, 9.170900000000232e-05, 9.18199999999994e-05, 9.133399999999847e-05, 9.213799999999855e-05, 9.218000000000073e-05, 9.194400000000005e-05, 9.21659999999977e-05, 9.138900000000075e-05, 9.170799999999937e-05, 9.129199999999976e-05, 9.174999999999808e-05, 9.201400000000137e-05, 9.21390000000015e-05, 9.176399999999765e-05, 9.141699999999989e-05, 9.14719999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:55:56.703" endtime="20201029 12:55:56.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.698" endtime="20201029 12:55:56.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:56.710" endtime="20201029 12:55:56.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.708" endtime="20201029 12:55:56.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.707" endtime="20201029 12:55:56.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.347" endtime="20201029 12:55:56.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.347" endtime="20201029 12:55:56.731"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.740" endtime="20201029 12:55:56.760"></status>
</kw>
<msg timestamp="20201029 12:55:56.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:56.738" endtime="20201029 12:55:56.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:56.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:56.761" endtime="20201029 12:55:56.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.764" endtime="20201029 12:55:56.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.736" endtime="20201029 12:55:56.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.734" endtime="20201029 12:55:56.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:56.774" endtime="20201029 12:55:57.062"></status>
</kw>
<msg timestamp="20201029 12:55:57.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214125, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:55:56.772" endtime="20201029 12:55:57.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214125, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:55:57.066" endtime="20201029 12:55:57.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.075" endtime="20201029 12:55:57.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.769" endtime="20201029 12:55:57.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.767" endtime="20201029 12:55:57.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:57.082" level="INFO">${RESULT} = [{'diff': 9.299999999999933e-05}, {'diff': 9.29720000000002e-05}, {'diff': 9.224999999999858e-05}, {'diff': 9.24719999999997e-05}, {'diff': 9.265300000000157e-05}, {'diff': 9.227799999999772e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:57.078" endtime="20201029 12:55:57.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:57.086" level="INFO">${ACCURACY} = {'diff': [9.299999999999933e-05, 9.29720000000002e-05, 9.224999999999858e-05, 9.24719999999997e-05, 9.265300000000157e-05, 9.227799999999772e-05, 9.241699999999742e-05, 9.318100000000121e-05, 9.315299...</msg>
<status status="PASS" starttime="20201029 12:55:57.083" endtime="20201029 12:55:57.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.091" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:55:57.090" endtime="20201029 12:55:57.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.093" level="INFO">VALUE: [9.299999999999933e-05, 9.29720000000002e-05, 9.224999999999858e-05, 9.24719999999997e-05, 9.265300000000157e-05, 9.227799999999772e-05, 9.241699999999742e-05, 9.318100000000121e-05, 9.31529999999986e-05, 9.299999999999933e-05, 9.301400000000237e-05, 9.291600000000191e-05, 9.230500000000086e-05, 9.322200000000044e-05, 9.222200000000291e-05, 9.269500000000028e-05, 9.229100000000129e-05, 9.288899999999878e-05, 9.262499999999896e-05, 9.240199999999837e-05, 9.279099999999832e-05, 9.306899999999771e-05, 9.232000000000337e-05, 9.284700000000007e-05, 9.267999999999776e-05, 9.320900000000035e-05, 9.226400000000162e-05, 9.230600000000033e-05, 9.279200000000126e-05, 9.226399999999815e-05, 9.226299999999868e-05, 9.240200000000184e-05, 9.322200000000044e-05, 9.305599999999761e-05, 9.290299999999835e-05, 9.257000000000015e-05, 9.313899999999903e-05, 9.261099999999939e-05, 9.254200000000101e-05, 9.248599999999926e-05, 9.269500000000028e-05, 9.259800000000276e-05, 9.316600000000216e-05, 9.258399999999972e-05, 9.259699999999982e-05, 9.286100000000311e-05, 9.320800000000087e-05, 9.230600000000033e-05, 9.224999999999858e-05, 9.236099999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:55:57.092" endtime="20201029 12:55:57.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.087" endtime="20201029 12:55:57.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:57.099" endtime="20201029 12:55:57.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.098" endtime="20201029 12:55:57.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.097" endtime="20201029 12:55:57.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.732" endtime="20201029 12:55:57.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:56.731" endtime="20201029 12:55:57.120"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.129" endtime="20201029 12:55:57.148"></status>
</kw>
<msg timestamp="20201029 12:55:57.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:57.128" endtime="20201029 12:55:57.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:57.150" endtime="20201029 12:55:57.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.153" endtime="20201029 12:55:57.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.125" endtime="20201029 12:55:57.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.123" endtime="20201029 12:55:57.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.162" endtime="20201029 12:55:57.449"></status>
</kw>
<msg timestamp="20201029 12:55:57.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021060181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:57.161" endtime="20201029 12:55:57.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021060181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:57.453" endtime="20201029 12:55:57.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.462" endtime="20201029 12:55:57.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.158" endtime="20201029 12:55:57.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.156" endtime="20201029 12:55:57.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:57.469" level="INFO">${RESULT} = [{'diff': 9.409699999999785e-05}, {'diff': 9.402799999999947e-05}, {'diff': 9.373600000000051e-05}, {'diff': 9.412499999999699e-05}, {'diff': 9.390299999999935e-05}, {'diff': 9.408300000000175e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:57.466" endtime="20201029 12:55:57.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:57.475" level="INFO">${ACCURACY} = {'diff': [9.409699999999785e-05, 9.402799999999947e-05, 9.373600000000051e-05, 9.412499999999699e-05, 9.390299999999935e-05, 9.408300000000175e-05, 9.376399999999965e-05, 9.41529999999996e-05, 9.41529...</msg>
<status status="PASS" starttime="20201029 12:55:57.470" endtime="20201029 12:55:57.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.480" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:55:57.479" endtime="20201029 12:55:57.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.483" level="INFO">VALUE: [9.409699999999785e-05, 9.402799999999947e-05, 9.373600000000051e-05, 9.412499999999699e-05, 9.390299999999935e-05, 9.408300000000175e-05, 9.376399999999965e-05, 9.41529999999996e-05, 9.41529999999996e-05, 9.334700000000057e-05, 9.368099999999824e-05, 9.33200000000009e-05, 9.409699999999785e-05, 9.338900000000275e-05, 9.406900000000218e-05, 9.338899999999928e-05, 9.411100000000089e-05, 9.341599999999894e-05, 9.381899999999846e-05, 9.33200000000009e-05, 9.391700000000239e-05, 9.34720000000007e-05, 9.3333999999997e-05, 9.330600000000133e-05, 9.41529999999996e-05, 9.413800000000055e-05, 9.379099999999932e-05, 9.372200000000094e-05, 9.344399999999808e-05, 9.3333000000001e-05, 9.381899999999846e-05, 9.320800000000087e-05, 9.40139999999999e-05, 9.366699999999867e-05, 9.404199999999904e-05, 9.365199999999962e-05, 9.362499999999996e-05, 9.347199999999722e-05, 9.340299999999885e-05, 9.324999999999958e-05, 9.419500000000178e-05, 9.412500000000046e-05, 9.409700000000132e-05, 9.400000000000033e-05, 9.351400000000287e-05, 9.327699999999925e-05, 9.375000000000008e-05, 9.406900000000218e-05, 9.404200000000251e-05, 9.326399999999915e-05]</msg>
<status status="PASS" starttime="20201029 12:55:57.481" endtime="20201029 12:55:57.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.476" endtime="20201029 12:55:57.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:57.488" endtime="20201029 12:55:57.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.486" endtime="20201029 12:55:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.485" endtime="20201029 12:55:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.121" endtime="20201029 12:55:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.121" endtime="20201029 12:55:57.509"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.518" endtime="20201029 12:55:57.536"></status>
</kw>
<msg timestamp="20201029 12:55:57.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:57.516" endtime="20201029 12:55:57.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:57.538" endtime="20201029 12:55:57.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.540" endtime="20201029 12:55:57.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.513" endtime="20201029 12:55:57.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.511" endtime="20201029 12:55:57.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.550" endtime="20201029 12:55:57.837"></status>
</kw>
<msg timestamp="20201029 12:55:57.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:57.548" endtime="20201029 12:55:57.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:57.841" endtime="20201029 12:55:57.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.850" endtime="20201029 12:55:57.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.546" endtime="20201029 12:55:57.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.544" endtime="20201029 12:55:57.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:57.857" level="INFO">${RESULT} = [{'diff': 9.500000000000133e-05}, {'diff': 9.459700000000182e-05}, {'diff': 9.491600000000044e-05}, {'diff': 9.423600000000101e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.50140000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:57.853" endtime="20201029 12:55:57.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:57.861" level="INFO">${ACCURACY} = {'diff': [9.500000000000133e-05, 9.459700000000182e-05, 9.491600000000044e-05, 9.423600000000101e-05, 9.490300000000035e-05, 9.50140000000009e-05, 9.502800000000047e-05, 9.480600000000283e-05, 9.42370...</msg>
<status status="PASS" starttime="20201029 12:55:57.858" endtime="20201029 12:55:57.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.866" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:55:57.865" endtime="20201029 12:55:57.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.868" level="INFO">VALUE: [9.500000000000133e-05, 9.459700000000182e-05, 9.491600000000044e-05, 9.423600000000101e-05, 9.490300000000035e-05, 9.50140000000009e-05, 9.502800000000047e-05, 9.480600000000283e-05, 9.423700000000049e-05, 9.470899999999838e-05, 9.443099999999899e-05, 9.508299999999928e-05, 9.499999999999786e-05, 9.458299999999878e-05, 9.490300000000035e-05, 9.50140000000009e-05, 9.512500000000146e-05, 9.486100000000164e-05, 9.51530000000006e-05, 9.423599999999754e-05, 9.450000000000083e-05, 9.513800000000155e-05, 9.508299999999928e-05, 9.522199999999897e-05, 9.495799999999915e-05, 9.483299999999903e-05, 9.51940000000033e-05, 9.480599999999936e-05, 9.48469999999986e-05, 9.458300000000225e-05, 9.505599999999961e-05, 9.479199999999979e-05, 9.515199999999766e-05, 9.46660000000002e-05, 9.419399999999883e-05, 9.423599999999754e-05, 9.430600000000233e-05, 9.456999999999868e-05, 9.504200000000004e-05, 9.501399999999743e-05, 9.504200000000004e-05, 9.481899999999946e-05, 9.515200000000112e-05, 9.476400000000065e-05, 9.469399999999933e-05, 9.475000000000108e-05, 9.495799999999915e-05, 9.443099999999899e-05, 9.433299999999853e-05, 9.422199999999797e-05]</msg>
<status status="PASS" starttime="20201029 12:55:57.867" endtime="20201029 12:55:57.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.862" endtime="20201029 12:55:57.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:57.874" endtime="20201029 12:55:57.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.872" endtime="20201029 12:55:57.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.871" endtime="20201029 12:55:57.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.510" endtime="20201029 12:55:57.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.509" endtime="20201029 12:55:57.894"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.904" endtime="20201029 12:55:57.924"></status>
</kw>
<msg timestamp="20201029 12:55:57.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:57.902" endtime="20201029 12:55:57.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:57.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:57.926" endtime="20201029 12:55:57.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.928" endtime="20201029 12:55:57.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.899" endtime="20201029 12:55:57.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.897" endtime="20201029 12:55:57.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:57.938" endtime="20201029 12:55:58.224"></status>
</kw>
<msg timestamp="20201029 12:55:58.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:57.936" endtime="20201029 12:55:58.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021427083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:58.228" endtime="20201029 12:55:58.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.237" endtime="20201029 12:55:58.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.933" endtime="20201029 12:55:58.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.932" endtime="20201029 12:55:58.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:58.243" level="INFO">${RESULT} = [{'diff': 9.536100000000214e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.526399999999768e-05}, {'diff': 9.555600000000011e-05}, {'diff': 9.531899999999996e-05}, {'diff': 9.53469999999991e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:55:58.240" endtime="20201029 12:55:58.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:58.248" level="INFO">${ACCURACY} = {'diff': [9.536100000000214e-05, 9.58469999999996e-05, 9.526399999999768e-05, 9.555600000000011e-05, 9.531899999999996e-05, 9.53469999999991e-05, 9.568100000000024e-05, 9.595899999999963e-05, 9.602800...</msg>
<status status="PASS" starttime="20201029 12:55:58.244" endtime="20201029 12:55:58.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.252" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:55:58.251" endtime="20201029 12:55:58.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.255" level="INFO">VALUE: [9.536100000000214e-05, 9.58469999999996e-05, 9.526399999999768e-05, 9.555600000000011e-05, 9.531899999999996e-05, 9.53469999999991e-05, 9.568100000000024e-05, 9.595899999999963e-05, 9.602800000000147e-05, 9.613899999999856e-05, 9.565199999999816e-05, 9.612499999999899e-05, 9.527800000000072e-05, 9.588900000000178e-05, 9.543000000000051e-05, 9.588899999999831e-05, 9.60140000000019e-05, 9.593099999999702e-05, 9.536099999999867e-05, 9.616599999999823e-05, 9.541600000000094e-05, 9.597199999999972e-05, 9.59859999999993e-05, 9.586099999999917e-05, 9.545799999999965e-05, 9.588900000000178e-05, 9.597199999999972e-05, 9.604199999999757e-05, 9.573700000000199e-05, 9.601399999999843e-05, 9.559799999999882e-05, 9.61799999999978e-05, 9.53469999999991e-05, 9.613900000000203e-05, 9.56530000000011e-05, 9.558399999999925e-05, 9.611099999999942e-05, 9.559700000000282e-05, 9.588899999999831e-05, 9.573699999999852e-05, 9.579200000000079e-05, 9.613899999999856e-05, 9.573599999999904e-05, 9.543000000000051e-05, 9.57079999999999e-05, 9.579200000000079e-05, 9.526399999999768e-05, 9.575000000000208e-05, 9.527800000000072e-05, 9.570900000000285e-05]</msg>
<status status="PASS" starttime="20201029 12:55:58.254" endtime="20201029 12:55:58.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.249" endtime="20201029 12:55:58.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:58.261" endtime="20201029 12:55:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.259" endtime="20201029 12:55:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.258" endtime="20201029 12:55:58.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.895" endtime="20201029 12:55:58.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:57.895" endtime="20201029 12:55:58.282"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.291" endtime="20201029 12:55:58.310"></status>
</kw>
<msg timestamp="20201029 12:55:58.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:58.289" endtime="20201029 12:55:58.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:58.312" endtime="20201029 12:55:58.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.315" endtime="20201029 12:55:58.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.287" endtime="20201029 12:55:58.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.285" endtime="20201029 12:55:58.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.324" endtime="20201029 12:55:58.611"></status>
</kw>
<msg timestamp="20201029 12:55:58.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02024175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:55:58.323" endtime="20201029 12:55:58.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020145528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02024175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:55:58.616" endtime="20201029 12:55:58.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.624" endtime="20201029 12:55:58.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.320" endtime="20201029 12:55:58.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.318" endtime="20201029 12:55:58.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:58.631" level="INFO">${RESULT} = [{'diff': 9.622199999999997e-05}, {'diff': 9.709700000000085e-05}, {'diff': 9.659700000000035e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.719499999999784e-05}, {'diff': 9.673600000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:58.628" endtime="20201029 12:55:58.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:58.636" level="INFO">${ACCURACY} = {'diff': [9.622199999999997e-05, 9.709700000000085e-05, 9.659700000000035e-05, 9.643100000000099e-05, 9.719499999999784e-05, 9.673600000000004e-05, 9.643099999999752e-05, 9.637500000000271e-05, 9.6722...</msg>
<status status="PASS" starttime="20201029 12:55:58.632" endtime="20201029 12:55:58.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.641" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:55:58.640" endtime="20201029 12:55:58.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.644" level="INFO">VALUE: [9.622199999999997e-05, 9.709700000000085e-05, 9.659700000000035e-05, 9.643100000000099e-05, 9.719499999999784e-05, 9.673600000000004e-05, 9.643099999999752e-05, 9.637500000000271e-05, 9.672200000000047e-05, 9.627800000000172e-05, 9.643000000000151e-05, 9.711100000000042e-05, 9.7027999999999e-05, 9.641699999999795e-05, 9.655599999999764e-05, 9.711199999999989e-05, 9.655500000000164e-05, 9.72080000000014e-05, 9.631899999999749e-05, 9.701399999999943e-05, 9.643000000000151e-05, 9.702800000000247e-05, 9.647200000000022e-05, 9.687500000000321e-05, 9.684800000000007e-05, 9.669500000000081e-05, 9.698699999999977e-05, 9.722200000000097e-05, 9.677699999999928e-05, 9.718000000000226e-05, 9.706899999999824e-05, 9.706899999999824e-05, 9.672200000000047e-05, 9.627800000000172e-05, 9.655599999999764e-05, 9.690300000000235e-05, 9.64859999999998e-05, 9.6334e-05, 9.669400000000133e-05, 9.633300000000053e-05, 9.681899999999799e-05, 9.677799999999875e-05, 9.687499999999974e-05, 9.656900000000121e-05, 9.684800000000007e-05, 9.659799999999982e-05, 9.674999999999961e-05, 9.706900000000171e-05, 9.681900000000146e-05, 9.647200000000022e-05]</msg>
<status status="PASS" starttime="20201029 12:55:58.642" endtime="20201029 12:55:58.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.637" endtime="20201029 12:55:58.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:58.649" endtime="20201029 12:55:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.647" endtime="20201029 12:55:58.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.646" endtime="20201029 12:55:58.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.283" endtime="20201029 12:55:58.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.282" endtime="20201029 12:55:58.670"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.679" endtime="20201029 12:55:58.699"></status>
</kw>
<msg timestamp="20201029 12:55:58.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:58.677" endtime="20201029 12:55:58.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:58.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:58.700" endtime="20201029 12:55:58.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.703" endtime="20201029 12:55:58.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.675" endtime="20201029 12:55:58.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.672" endtime="20201029 12:55:58.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:58.713" endtime="20201029 12:55:59.000"></status>
</kw>
<msg timestamp="20201029 12:55:59.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020989097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:58.711" endtime="20201029 12:55:59.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0208915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020989097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:59.005" endtime="20201029 12:55:59.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.013" endtime="20201029 12:55:59.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.708" endtime="20201029 12:55:59.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.706" endtime="20201029 12:55:59.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:59.020" level="INFO">${RESULT} = [{'diff': 9.759700000000135e-05}, {'diff': 9.818000000000326e-05}, {'diff': 9.776400000000018e-05}, {'diff': 9.800000000000086e-05}, {'diff': 9.784699999999813e-05}, {'diff': 9.798599999999782e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:55:59.017" endtime="20201029 12:55:59.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:59.024" level="INFO">${ACCURACY} = {'diff': [9.759700000000135e-05, 9.818000000000326e-05, 9.776400000000018e-05, 9.800000000000086e-05, 9.784699999999813e-05, 9.798599999999782e-05, 9.74730000000007e-05, 9.797299999999773e-05, 9.80690...</msg>
<status status="PASS" starttime="20201029 12:55:59.021" endtime="20201029 12:55:59.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.029" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:55:59.028" endtime="20201029 12:55:59.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.032" level="INFO">VALUE: [9.759700000000135e-05, 9.818000000000326e-05, 9.776400000000018e-05, 9.800000000000086e-05, 9.784699999999813e-05, 9.798599999999782e-05, 9.74730000000007e-05, 9.797299999999773e-05, 9.806900000000271e-05, 9.809700000000185e-05, 9.791599999999998e-05, 9.730499999999892e-05, 9.788900000000031e-05, 9.804199999999957e-05, 9.795899999999816e-05, 9.762500000000049e-05, 9.748700000000027e-05, 9.801400000000043e-05, 9.813900000000056e-05, 9.774999999999714e-05, 9.801400000000043e-05, 9.773600000000104e-05, 9.786199999999717e-05, 9.722200000000097e-05, 9.818099999999927e-05, 9.783399999999803e-05, 9.790299999999988e-05, 9.78340000000015e-05, 9.792999999999955e-05, 9.775000000000061e-05, 9.738899999999981e-05, 9.812499999999752e-05, 9.8028e-05, 9.76669999999992e-05, 9.790299999999988e-05, 9.770900000000138e-05, 9.783299999999856e-05, 9.765299999999963e-05, 9.773599999999757e-05, 9.808299999999881e-05, 9.77080000000019e-05, 9.737500000000024e-05, 9.744399999999862e-05, 9.808300000000228e-05, 9.813900000000056e-05, 9.72920000000023e-05, 9.794499999999859e-05, 9.723600000000054e-05, 9.8028e-05, 9.73479999999971e-05]</msg>
<status status="PASS" starttime="20201029 12:55:59.030" endtime="20201029 12:55:59.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.025" endtime="20201029 12:55:59.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:59.037" endtime="20201029 12:55:59.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.035" endtime="20201029 12:55:59.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.034" endtime="20201029 12:55:59.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.671" endtime="20201029 12:55:59.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:58.670" endtime="20201029 12:55:59.058"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.067" endtime="20201029 12:55:59.087"></status>
</kw>
<msg timestamp="20201029 12:55:59.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:59.065" endtime="20201029 12:55:59.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:59.089" endtime="20201029 12:55:59.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.091" endtime="20201029 12:55:59.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.063" endtime="20201029 12:55:59.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.060" endtime="20201029 12:55:59.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.101" endtime="20201029 12:55:59.389"></status>
</kw>
<msg timestamp="20201029 12:55:59.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021399167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:59.099" endtime="20201029 12:55:59.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021399167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:59.393" endtime="20201029 12:55:59.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.402" endtime="20201029 12:55:59.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.097" endtime="20201029 12:55:59.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.095" endtime="20201029 12:55:59.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:59.409" level="INFO">${RESULT} = [{'diff': 9.854200000000007e-05}, {'diff': 9.890300000000088e-05}, {'diff': 9.862500000000149e-05}, {'diff': 9.858399999999878e-05}, {'diff': 9.894499999999959e-05}, {'diff': 9.89020000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:55:59.405" endtime="20201029 12:55:59.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:59.413" level="INFO">${ACCURACY} = {'diff': [9.854200000000007e-05, 9.890300000000088e-05, 9.862500000000149e-05, 9.858399999999878e-05, 9.894499999999959e-05, 9.89020000000014e-05, 9.819399999999937e-05, 9.905600000000014e-05, 9.92080...</msg>
<status status="PASS" starttime="20201029 12:55:59.410" endtime="20201029 12:55:59.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.418" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:55:59.417" endtime="20201029 12:55:59.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.424" level="INFO">VALUE: [9.854200000000007e-05, 9.890300000000088e-05, 9.862500000000149e-05, 9.858399999999878e-05, 9.894499999999959e-05, 9.89020000000014e-05, 9.819399999999937e-05, 9.905600000000014e-05, 9.92080000000034e-05, 9.843100000000299e-05, 9.826400000000068e-05, 9.919499999999984e-05, 9.890300000000088e-05, 9.89159999999975e-05, 9.859800000000182e-05, 9.85410000000006e-05, 9.89020000000014e-05, 9.91800000000008e-05, 9.883299999999956e-05, 9.876400000000118e-05, 9.847200000000222e-05, 9.875000000000161e-05, 9.913900000000156e-05, 9.856999999999921e-05, 9.881999999999946e-05, 9.858300000000278e-05, 9.831899999999949e-05, 9.902699999999806e-05, 9.894400000000012e-05, 9.833300000000253e-05, 9.913900000000156e-05, 9.88470000000026e-05, 9.8334000000002e-05, 9.862499999999802e-05, 9.858299999999931e-05, 9.876399999999771e-05, 9.915200000000166e-05, 9.873599999999857e-05, 9.845799999999919e-05, 9.841699999999995e-05, 9.915300000000113e-05, 9.838899999999734e-05, 9.919499999999984e-05, 9.915300000000113e-05, 9.823600000000154e-05, 9.841699999999995e-05, 9.888900000000131e-05, 9.861100000000192e-05, 9.836100000000167e-05, 9.917999999999733e-05]</msg>
<status status="PASS" starttime="20201029 12:55:59.419" endtime="20201029 12:55:59.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.414" endtime="20201029 12:55:59.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:59.433" endtime="20201029 12:55:59.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.431" endtime="20201029 12:55:59.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.430" endtime="20201029 12:55:59.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.059" endtime="20201029 12:55:59.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.058" endtime="20201029 12:55:59.454"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.463" endtime="20201029 12:55:59.481"></status>
</kw>
<msg timestamp="20201029 12:55:59.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:59.461" endtime="20201029 12:55:59.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:59.483" endtime="20201029 12:55:59.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.486" endtime="20201029 12:55:59.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.459" endtime="20201029 12:55:59.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.456" endtime="20201029 12:55:59.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.496" endtime="20201029 12:55:59.783"></status>
</kw>
<msg timestamp="20201029 12:55:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:59.494" endtime="20201029 12:55:59.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:55:59.788" endtime="20201029 12:55:59.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.796" endtime="20201029 12:55:59.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.491" endtime="20201029 12:55:59.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.489" endtime="20201029 12:55:59.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:55:59.803" level="INFO">${RESULT} = [{'diff': 9.966600000000173e-05}, {'diff': 9.9722e-05}, {'diff': 9.98609999999997e-05}, {'diff': 9.940299999999791e-05}, {'diff': 9.954200000000107e-05}, {'diff': 9.984700000000013e-05}, {'diff': 9.97...</msg>
<status status="PASS" starttime="20201029 12:55:59.800" endtime="20201029 12:55:59.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:55:59.808" level="INFO">${ACCURACY} = {'diff': [9.966600000000173e-05, 9.9722e-05, 9.98609999999997e-05, 9.940299999999791e-05, 9.954200000000107e-05, 9.984700000000013e-05, 9.972299999999948e-05, 0.00010000000000000286, 9.972299999999948...</msg>
<status status="PASS" starttime="20201029 12:55:59.804" endtime="20201029 12:55:59.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.813" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:55:59.812" endtime="20201029 12:55:59.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.815" level="INFO">VALUE: [9.966600000000173e-05, 9.9722e-05, 9.98609999999997e-05, 9.940299999999791e-05, 9.954200000000107e-05, 9.984700000000013e-05, 9.972299999999948e-05, 0.00010000000000000286, 9.972299999999948e-05, 9.982000000000046e-05, 9.926299999999874e-05, 9.931900000000049e-05, 0.00010006900000000124, 9.99159999999985e-05, 9.997200000000026e-05, 9.933300000000006e-05, 9.988900000000231e-05, 9.959699999999988e-05, 9.93060000000004e-05, 9.957000000000021e-05, 9.951299999999899e-05, 0.00010013899999999909, 9.965200000000216e-05, 9.997200000000026e-05, 9.983300000000056e-05, 9.933300000000006e-05, 9.922200000000297e-05, 9.938900000000181e-05, 9.987500000000274e-05, 9.98609999999997e-05, 9.974999999999914e-05, 0.00010006900000000124, 9.944399999999715e-05, 9.977700000000228e-05, 9.99999999999994e-05, 9.927800000000125e-05, 9.9722e-05, 9.990300000000188e-05, 9.92219999999995e-05, 0.00010018100000000127, 9.956900000000074e-05, 9.981899999999752e-05, 9.958300000000031e-05, 9.931900000000049e-05, 9.977799999999828e-05, 9.923599999999907e-05, 9.945800000000019e-05, 9.934699999999963e-05, 9.927800000000125e-05, 9.954200000000107e-05]</msg>
<status status="PASS" starttime="20201029 12:55:59.814" endtime="20201029 12:55:59.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.809" endtime="20201029 12:55:59.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:55:59.820" endtime="20201029 12:55:59.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.819" endtime="20201029 12:55:59.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.818" endtime="20201029 12:55:59.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.455" endtime="20201029 12:55:59.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.454" endtime="20201029 12:55:59.841"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.850" endtime="20201029 12:55:59.871"></status>
</kw>
<msg timestamp="20201029 12:55:59.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:59.849" endtime="20201029 12:55:59.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:55:59.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:55:59.872" endtime="20201029 12:55:59.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.875" endtime="20201029 12:55:59.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.846" endtime="20201029 12:55:59.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.844" endtime="20201029 12:55:59.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:55:59.884" endtime="20201029 12:56:00.171"></status>
</kw>
<msg timestamp="20201029 12:56:00.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:55:59.883" endtime="20201029 12:56:00.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:00.175" endtime="20201029 12:56:00.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.183" endtime="20201029 12:56:00.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.880" endtime="20201029 12:56:00.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.878" endtime="20201029 12:56:00.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:00.190" level="INFO">${RESULT} = [{'diff': 0.00010055600000000164}, {'diff': 0.0001003060000000014}, {'diff': 0.00010055500000000217}, {'diff': 0.0001010000000000004}, {'diff': 0.00010098600000000083}, {'diff': 0.00010059700000000088...</msg>
<status status="PASS" starttime="20201029 12:56:00.187" endtime="20201029 12:56:00.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:00.194" level="INFO">${ACCURACY} = {'diff': [0.00010055600000000164, 0.0001003060000000014, 0.00010055500000000217, 0.0001010000000000004, 0.00010098600000000083, 0.00010059700000000088, 0.00010056999999999774, 0.00010033299999999759, ...</msg>
<status status="PASS" starttime="20201029 12:56:00.191" endtime="20201029 12:56:00.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.199" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:56:00.198" endtime="20201029 12:56:00.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.202" level="INFO">VALUE: [0.00010055600000000164, 0.0001003060000000014, 0.00010055500000000217, 0.0001010000000000004, 0.00010098600000000083, 0.00010059700000000088, 0.00010056999999999774, 0.00010033299999999759, 0.00010066599999999926, 0.00010031900000000149, 0.00010090299999999941, 0.00010115300000000313, 0.00010083299999999809, 0.00010041699999999848, 0.00010090299999999941, 0.00010062500000000002, 0.00010090199999999994, 0.00010116599999999976, 0.00010058300000000131, 0.00010112500000000052, 0.000100415999999999, 0.00010073600000000058, 0.00010088899999999984, 0.00010048600000000033, 0.00010038899999999934, 0.00010065299999999916, 0.0001003480000000001, 0.00010101300000000049, 0.0001003610000000002, 0.00010024999999999964, 0.00010084700000000113, 0.00010056900000000174, 0.00010052799999999903, 0.00010080599999999842, 0.0001006939999999984, 0.0001005419999999986, 0.00010097200000000126, 0.00010112500000000052, 0.00010090199999999994, 0.00010069400000000187, 0.00010094399999999865, 0.0001010419999999991, 0.00010109700000000138, 0.00010058300000000131, 0.00010057000000000121, 0.00010054099999999913, 0.0001003480000000001, 0.0001008749999999968, 0.00010058299999999784, 0.000100415999999999]</msg>
<status status="PASS" starttime="20201029 12:56:00.200" endtime="20201029 12:56:00.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.195" endtime="20201029 12:56:00.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:00.207" endtime="20201029 12:56:00.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.205" endtime="20201029 12:56:00.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.204" endtime="20201029 12:56:00.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.842" endtime="20201029 12:56:00.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:59.842" endtime="20201029 12:56:00.228"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.236" endtime="20201029 12:56:00.256"></status>
</kw>
<msg timestamp="20201029 12:56:00.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:00.235" endtime="20201029 12:56:00.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:00.258" endtime="20201029 12:56:00.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.260" endtime="20201029 12:56:00.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.232" endtime="20201029 12:56:00.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.230" endtime="20201029 12:56:00.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.269" endtime="20201029 12:56:00.580"></status>
</kw>
<msg timestamp="20201029 12:56:00.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02079775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:00.268" endtime="20201029 12:56:00.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02079775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:00.585" endtime="20201029 12:56:00.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.592" endtime="20201029 12:56:00.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.265" endtime="20201029 12:56:00.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.263" endtime="20201029 12:56:00.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:00.599" level="INFO">${RESULT} = [{'diff': 0.00010180599999999942}, {'diff': 0.00010143099999999905}, {'diff': 0.00010179199999999985}, {'diff': 0.00010220899999999894}, {'diff': 0.00010138800000000087}, {'diff': 0.000102180999999999...</msg>
<status status="PASS" starttime="20201029 12:56:00.596" endtime="20201029 12:56:00.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:00.603" level="INFO">${ACCURACY} = {'diff': [0.00010180599999999942, 0.00010143099999999905, 0.00010179199999999985, 0.00010220899999999894, 0.00010138800000000087, 0.0001021809999999998, 0.00010126400000000021, 0.00010202700000000106,...</msg>
<status status="PASS" starttime="20201029 12:56:00.600" endtime="20201029 12:56:00.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.607" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:56:00.606" endtime="20201029 12:56:00.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.610" level="INFO">VALUE: [0.00010180599999999942, 0.00010143099999999905, 0.00010179199999999985, 0.00010220899999999894, 0.00010138800000000087, 0.0001021809999999998, 0.00010126400000000021, 0.00010202700000000106, 0.00010220899999999894, 0.00010209700000000238, 0.00010208299999999934, 0.00010191699999999998, 0.00010152800000000003, 0.00010202800000000053, 0.00010175000000000115, 0.00010126400000000021, 0.00010154100000000013, 0.00010202699999999759, 0.00010133299999999859, 0.00010173600000000158, 0.00010156899999999927, 0.00010198599999999836, 0.0001018749999999978, 0.0001013199999999985, 0.00010205599999999967, 0.0001013480000000011, 0.0001018749999999978, 0.00010209699999999891, 0.00010148600000000133, 0.00010130499999999945, 0.0001013199999999985, 0.00010195799999999922, 0.00010130599999999892, 0.00010129200000000282, 0.00010140200000000044, 0.00010141699999999948, 0.00010162499999999755, 0.00010148600000000133, 0.00010180499999999995, 0.00010163900000000059, 0.00010151400000000046, 0.00010186200000000117, 0.00010143099999999905, 0.0001015419999999996, 0.0001017359999999981, 0.00010132000000000196, 0.0001013610000000012, 0.00010213900000000109, 0.00010138900000000034, 0.00010166699999999973]</msg>
<status status="PASS" starttime="20201029 12:56:00.608" endtime="20201029 12:56:00.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.604" endtime="20201029 12:56:00.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:00.615" endtime="20201029 12:56:00.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.614" endtime="20201029 12:56:00.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.613" endtime="20201029 12:56:00.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.229" endtime="20201029 12:56:00.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.228" endtime="20201029 12:56:00.636"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.645" endtime="20201029 12:56:00.665"></status>
</kw>
<msg timestamp="20201029 12:56:00.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:00.643" endtime="20201029 12:56:00.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:00.666" endtime="20201029 12:56:00.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.669" endtime="20201029 12:56:00.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.641" endtime="20201029 12:56:00.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.639" endtime="20201029 12:56:00.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.678" endtime="20201029 12:56:00.964"></status>
</kw>
<msg timestamp="20201029 12:56:00.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:00.677" endtime="20201029 12:56:00.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:00.968" endtime="20201029 12:56:00.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:00.976" endtime="20201029 12:56:00.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.674" endtime="20201029 12:56:00.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.672" endtime="20201029 12:56:00.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:00.983" level="INFO">${RESULT} = [{'diff': 0.00010247199999999929}, {'diff': 0.00010297199999999979}, {'diff': 0.00010291700000000098}, {'diff': 0.00010265300000000116}, {'diff': 0.00010312499999999905}, {'diff': 0.000102749999999998...</msg>
<status status="PASS" starttime="20201029 12:56:00.979" endtime="20201029 12:56:00.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:00.987" level="INFO">${ACCURACY} = {'diff': [0.00010247199999999929, 0.00010297199999999979, 0.00010291700000000098, 0.00010265300000000116, 0.00010312499999999905, 0.00010274999999999868, 0.00010248600000000233, 0.00010240300000000091...</msg>
<status status="PASS" starttime="20201029 12:56:00.984" endtime="20201029 12:56:00.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.992" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:56:00.991" endtime="20201029 12:56:00.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:00.994" level="INFO">VALUE: [0.00010247199999999929, 0.00010297199999999979, 0.00010291700000000098, 0.00010265300000000116, 0.00010312499999999905, 0.00010274999999999868, 0.00010248600000000233, 0.00010240300000000091, 0.00010269499999999987, 0.0001029160000000015, 0.00010223600000000208, 0.00010261099999999898, 0.00010218000000000033, 0.00010294400000000065, 0.00010269399999999693, 0.00010302699999999859, 0.00010290300000000141, 0.00010298600000000283, 0.00010277699999999834, 0.00010255499999999723, 0.00010286099999999923, 0.00010259699999999941, 0.00010316599999999829, 0.00010324999999999918, 0.00010259699999999941, 0.0001023749999999983, 0.00010247300000000223, 0.0001023610000000022, 0.00010263800000000212, 0.00010318099999999733, 0.0001027359999999991, 0.00010230500000000045, 0.00010263900000000159, 0.00010230599999999992, 0.00010238899999999787, 0.00010307000000000024, 0.00010283300000000009, 0.00010247299999999876, 0.00010282, 0.00010283300000000009, 0.00010309699999999991, 0.00010277800000000128, 0.00010273600000000258, 0.00010287500000000227, 0.00010295899999999969, 0.0001022359999999986, 0.0001028480000000026, 0.00010297299999999926, 0.00010226300000000174, 0.0001025550000000007]</msg>
<status status="PASS" starttime="20201029 12:56:00.993" endtime="20201029 12:56:00.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.988" endtime="20201029 12:56:00.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:00.999" endtime="20201029 12:56:01.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.998" endtime="20201029 12:56:01.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.997" endtime="20201029 12:56:01.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.637" endtime="20201029 12:56:01.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:00.637" endtime="20201029 12:56:01.020"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.029" endtime="20201029 12:56:01.050"></status>
</kw>
<msg timestamp="20201029 12:56:01.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:01.027" endtime="20201029 12:56:01.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:01.051" endtime="20201029 12:56:01.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.054" endtime="20201029 12:56:01.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.025" endtime="20201029 12:56:01.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.023" endtime="20201029 12:56:01.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.063" endtime="20201029 12:56:01.351"></status>
</kw>
<msg timestamp="20201029 12:56:01.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020609722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:01.061" endtime="20201029 12:56:01.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020505778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020609722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:01.355" endtime="20201029 12:56:01.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.363" endtime="20201029 12:56:01.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.059" endtime="20201029 12:56:01.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.057" endtime="20201029 12:56:01.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:01.369" level="INFO">${RESULT} = [{'diff': 0.00010394400000000165}, {'diff': 0.00010347199999999682}, {'diff': 0.00010326399999999875}, {'diff': 0.00010399999999999993}, {'diff': 0.0001041810000000018}, {'diff': 0.0001038469999999971...</msg>
<status status="PASS" starttime="20201029 12:56:01.366" endtime="20201029 12:56:01.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:01.373" level="INFO">${ACCURACY} = {'diff': [0.00010394400000000165, 0.00010347199999999682, 0.00010326399999999875, 0.00010399999999999993, 0.0001041810000000018, 0.00010384699999999719, 0.00010347299999999976, 0.00010345800000000072,...</msg>
<status status="PASS" starttime="20201029 12:56:01.370" endtime="20201029 12:56:01.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.378" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:56:01.377" endtime="20201029 12:56:01.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.380" level="INFO">VALUE: [0.00010394400000000165, 0.00010347199999999682, 0.00010326399999999875, 0.00010399999999999993, 0.0001041810000000018, 0.00010384699999999719, 0.00010347299999999976, 0.00010345800000000072, 0.00010376299999999977, 0.00010381899999999805, 0.00010342999999999811, 0.00010348599999999986, 0.00010418099999999833, 0.00010409699999999744, 0.0001041949999999979, 0.00010343100000000105, 0.00010395800000000122, 0.00010326399999999875, 0.00010345800000000072, 0.00010333300000000059, 0.00010359700000000041, 0.00010391700000000198, 0.00010402799999999907, 0.00010327800000000179, 0.00010372200000000054, 0.00010388899999999937, 0.00010361199999999945, 0.00010401300000000002, 0.00010377699999999934, 0.0001041940000000019, 0.00010342999999999811, 0.00010365299999999869, 0.00010402799999999907, 0.00010391700000000198, 0.0001032359999999996, 0.00010366599999999879, 0.00010340300000000191, 0.00010324999999999918, 0.00010391599999999904, 0.00010352699999999909, 0.00010355499999999823, 0.00010333300000000059, 0.00010327799999999832, 0.00010322200000000004, 0.00010419500000000137, 0.00010412500000000005, 0.00010376399999999925, 0.00010411100000000048, 0.00010379099999999891, 0.00010416700000000223]</msg>
<status status="PASS" starttime="20201029 12:56:01.379" endtime="20201029 12:56:01.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.374" endtime="20201029 12:56:01.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:01.385" endtime="20201029 12:56:01.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.384" endtime="20201029 12:56:01.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.383" endtime="20201029 12:56:01.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.021" endtime="20201029 12:56:01.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.021" endtime="20201029 12:56:01.406"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.415" endtime="20201029 12:56:01.435"></status>
</kw>
<msg timestamp="20201029 12:56:01.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:01.413" endtime="20201029 12:56:01.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:01.436" endtime="20201029 12:56:01.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.439" endtime="20201029 12:56:01.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.411" endtime="20201029 12:56:01.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.409" endtime="20201029 12:56:01.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.448" endtime="20201029 12:56:01.734"></status>
</kw>
<msg timestamp="20201029 12:56:01.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:01.446" endtime="20201029 12:56:01.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:01.738" endtime="20201029 12:56:01.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.746" endtime="20201029 12:56:01.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.444" endtime="20201029 12:56:01.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.442" endtime="20201029 12:56:01.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:01.753" level="INFO">${RESULT} = [{'diff': 0.00010509700000000191}, {'diff': 0.00010470900000000144}, {'diff': 0.00010447199999999782}, {'diff': 0.00010448700000000033}, {'diff': 0.00010470800000000197}, {'diff': 0.000104958000000002...</msg>
<status status="PASS" starttime="20201029 12:56:01.750" endtime="20201029 12:56:01.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:01.757" level="INFO">${ACCURACY} = {'diff': [0.00010509700000000191, 0.00010470900000000144, 0.00010447199999999782, 0.00010448700000000033, 0.00010470800000000197, 0.00010495800000000222, 0.00010486100000000123, 0.00010490299999999994...</msg>
<status status="PASS" starttime="20201029 12:56:01.754" endtime="20201029 12:56:01.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.761" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:56:01.760" endtime="20201029 12:56:01.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:01.764" level="INFO">VALUE: [0.00010509700000000191, 0.00010470900000000144, 0.00010447199999999782, 0.00010448700000000033, 0.00010470800000000197, 0.00010495800000000222, 0.00010486100000000123, 0.00010490299999999994, 0.00010477800000000329, 0.0001050689999999993, 0.00010441699999999901, 0.00010440299999999944, 0.00010433299999999812, 0.00010463900000000012, 0.0001042360000000006, 0.00010443000000000258, 0.00010440199999999997, 0.00010522200000000204, 0.00010513900000000062, 0.0001047360000000011, 0.00010481999999999853, 0.00010511100000000148, 0.00010516699999999976, 0.00010454199999999914, 0.00010488900000000037, 0.00010519399999999943, 0.00010431900000000202, 0.00010420800000000147, 0.00010430499999999898, 0.00010472199999999807, 0.00010512499999999758, 0.00010423700000000008, 0.00010440299999999944, 0.00010520899999999847, 0.00010498599999999789, 0.0001047079999999985, 0.00010434700000000116, 0.00010513900000000062, 0.00010455600000000217, 0.00010447300000000076, 0.00010502800000000007, 0.000104514, 0.00010507000000000224, 0.00010434700000000116, 0.00010472199999999807, 0.00010430499999999898, 0.00010425000000000018, 0.00010454199999999914, 0.00010445799999999825, 0.00010422200000000104]</msg>
<status status="PASS" starttime="20201029 12:56:01.762" endtime="20201029 12:56:01.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.757" endtime="20201029 12:56:01.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:01.769" endtime="20201029 12:56:01.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.768" endtime="20201029 12:56:01.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.767" endtime="20201029 12:56:01.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.407" endtime="20201029 12:56:01.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.407" endtime="20201029 12:56:01.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:55:23.186" endtime="20201029 12:56:01.790"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:55:20.068" endtime="20201029 12:56:01.791" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:01.797" endtime="20201029 12:56:01.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.796" endtime="20201029 12:56:01.817"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:01.830" endtime="20201029 12:56:04.851"></status>
</kw>
<msg timestamp="20201029 12:56:04.852" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:01.829" endtime="20201029 12:56:04.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:04.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:04.855" endtime="20201029 12:56:04.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:56:04.864" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:56:04.860" endtime="20201029 12:56:04.864"></status>
</kw>
<status status="FAIL" starttime="20201029 12:56:01.826" endtime="20201029 12:56:04.866"></status>
</kw>
<status status="FAIL" starttime="20201029 12:56:01.824" endtime="20201029 12:56:04.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.823" endtime="20201029 12:56:04.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:56:04.875" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:56:04.874" endtime="20201029 12:56:04.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.869" endtime="20201029 12:56:04.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.822" endtime="20201029 12:56:04.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.821" endtime="20201029 12:56:04.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:04.879" endtime="20201029 12:56:04.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.820" endtime="20201029 12:56:04.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.818" endtime="20201029 12:56:04.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:01.795" endtime="20201029 12:56:04.884"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:04.907" endtime="20201029 12:56:04.927"></status>
</kw>
<msg timestamp="20201029 12:56:04.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:04.904" endtime="20201029 12:56:04.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:04.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:04.931" endtime="20201029 12:56:04.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:04.936" endtime="20201029 12:56:04.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.895" endtime="20201029 12:56:04.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.891" endtime="20201029 12:56:04.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:04.946" endtime="20201029 12:56:05.242"></status>
</kw>
<msg timestamp="20201029 12:56:05.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102185319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.10220775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:04.945" endtime="20201029 12:56:05.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102185319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.10220775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:05.247" endtime="20201029 12:56:05.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.255" endtime="20201029 12:56:05.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.942" endtime="20201029 12:56:05.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.940" endtime="20201029 12:56:05.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:05.261" level="INFO">${RESULT} = [{'diff': 2.2430999999656365e-05}, {'diff': 2.21109999998248e-05}, {'diff': 2.215300000019127e-05}, {'diff': 2.2471999999940095e-05}, {'diff': 2.269399999965671e-05}, {'diff': 2.219400000003091e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:05.258" endtime="20201029 12:56:05.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:05.266" level="INFO">${ACCURACY} = {'diff': [2.2430999999656365e-05, 2.21109999998248e-05, 2.215300000019127e-05, 2.2471999999940095e-05, 2.269399999965671e-05, 2.219400000003091e-05, 2.2680999999913354e-05, 2.2389000000178072e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:56:05.262" endtime="20201029 12:56:05.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.271" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:56:05.270" endtime="20201029 12:56:05.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.273" level="INFO">VALUE: [2.2430999999656365e-05, 2.21109999998248e-05, 2.215300000019127e-05, 2.2471999999940095e-05, 2.269399999965671e-05, 2.219400000003091e-05, 2.2680999999913354e-05, 2.2389000000178072e-05, 2.2888999999803872e-05, 2.2235999999953293e-05, 2.224999999977939e-05, 2.2389000000178072e-05, 2.2528000000132664e-05, 2.2222999999765847e-05, 2.234799999989434e-05, 2.2485999999766193e-05, 2.3070000000124935e-05, 2.2222000000127196e-05, 2.2833999999694043e-05, 2.250000000003638e-05, 2.300000000010627e-05, 2.2722000000197085e-05, 2.2638999999990972e-05, 2.2819000000229295e-05, 2.2874999999977774e-05, 2.3054999999772008e-05, 2.234800000033843e-05, 2.26940000001008e-05, 2.2736000000023182e-05, 2.2818999999785206e-05, 2.215200000010853e-05, 2.263799999990823e-05, 2.2276999999792935e-05, 2.21109999998248e-05, 2.2332999999985503e-05, 2.2958000000183887e-05, 2.2277999999875675e-05, 2.2165999999934627e-05, 2.2610999999894688e-05, 2.2916000000261505e-05, 2.2068999999902417e-05, 2.2638999999990972e-05, 2.2874999999977774e-05, 2.309700000013848e-05, 2.2667000000087256e-05, 2.3055999999854748e-05, 2.2416999999830267e-05, 2.2180999999843465e-05, 2.280600000004185e-05, 2.2680999999913354e-05]</msg>
<status status="PASS" starttime="20201029 12:56:05.272" endtime="20201029 12:56:05.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.266" endtime="20201029 12:56:05.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:05.278" endtime="20201029 12:56:05.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.276" endtime="20201029 12:56:05.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.275" endtime="20201029 12:56:05.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.887" endtime="20201029 12:56:05.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.886" endtime="20201029 12:56:05.300"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.308" endtime="20201029 12:56:05.323"></status>
</kw>
<msg timestamp="20201029 12:56:05.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:05.307" endtime="20201029 12:56:05.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:05.325" endtime="20201029 12:56:05.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.327" endtime="20201029 12:56:05.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.304" endtime="20201029 12:56:05.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.302" endtime="20201029 12:56:05.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.336" endtime="20201029 12:56:05.622"></status>
</kw>
<msg timestamp="20201029 12:56:05.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020984583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021007431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:05.334" endtime="20201029 12:56:05.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020984583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021007431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:05.626" endtime="20201029 12:56:05.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.634" endtime="20201029 12:56:05.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.332" endtime="20201029 12:56:05.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.330" endtime="20201029 12:56:05.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:05.641" level="INFO">${RESULT} = [{'diff': 2.2847999999998925e-05}, {'diff': 2.2401999999997757e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.211099999999827e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.2193999999999686e-05...</msg>
<status status="PASS" starttime="20201029 12:56:05.638" endtime="20201029 12:56:05.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:05.647" level="INFO">${ACCURACY} = {'diff': [2.2847999999998925e-05, 2.2401999999997757e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.2250000000001435e-05, 2.2193999999999686e-05, 2.305500000000099e-05, 2.2166000000000546e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:56:05.642" endtime="20201029 12:56:05.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.651" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:56:05.650" endtime="20201029 12:56:05.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.654" level="INFO">VALUE: [2.2847999999998925e-05, 2.2401999999997757e-05, 2.208299999999913e-05, 2.211099999999827e-05, 2.2250000000001435e-05, 2.2193999999999686e-05, 2.305500000000099e-05, 2.2166000000000546e-05, 2.2457999999999506e-05, 2.20969999999987e-05, 2.2166000000000546e-05, 2.2193999999999686e-05, 2.2930000000000866e-05, 2.304100000000142e-05, 2.2944000000000436e-05, 2.287500000000206e-05, 2.263900000000138e-05, 2.20830000000026e-05, 2.24030000000007e-05, 2.2707999999999756e-05, 2.306900000000056e-05, 2.261100000000224e-05, 2.2735999999998896e-05, 2.3028000000001325e-05, 2.284700000000292e-05, 2.2236000000001865e-05, 2.212500000000131e-05, 2.218099999999959e-05, 2.220899999999873e-05, 2.2083999999998605e-05, 2.2249999999997966e-05, 2.2347999999998425e-05, 2.2333999999998855e-05, 2.248700000000159e-05, 2.2985999999999146e-05, 2.236100000000199e-05, 2.244499999999941e-05, 2.2916000000001296e-05, 2.2958000000000006e-05, 2.2792000000000645e-05, 2.234699999999895e-05, 2.2290999999997202e-05, 2.3028000000001325e-05, 2.2290999999997202e-05, 2.2693999999996717e-05, 2.2985999999999146e-05, 2.209700000000217e-05, 2.258299999999963e-05, 2.234699999999895e-05, 2.2735999999998896e-05]</msg>
<status status="PASS" starttime="20201029 12:56:05.653" endtime="20201029 12:56:05.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.648" endtime="20201029 12:56:05.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:05.658" endtime="20201029 12:56:05.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.657" endtime="20201029 12:56:05.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.656" endtime="20201029 12:56:05.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.301" endtime="20201029 12:56:05.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.300" endtime="20201029 12:56:05.679"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.688" endtime="20201029 12:56:05.703"></status>
</kw>
<msg timestamp="20201029 12:56:05.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:05.687" endtime="20201029 12:56:05.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:05.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:05.705" endtime="20201029 12:56:05.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.707" endtime="20201029 12:56:05.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.684" endtime="20201029 12:56:05.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.682" endtime="20201029 12:56:05.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:05.716" endtime="20201029 12:56:06.004"></status>
</kw>
<msg timestamp="20201029 12:56:06.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020136083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:05.715" endtime="20201029 12:56:06.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020136083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:06.008" endtime="20201029 12:56:06.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.016" endtime="20201029 12:56:06.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.712" endtime="20201029 12:56:06.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.710" endtime="20201029 12:56:06.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:06.023" level="INFO">${RESULT} = [{'diff': 2.262499999999834e-05}, {'diff': 2.3040999999997952e-05}, {'diff': 2.2958000000000006e-05}, {'diff': 2.2500000000001685e-05}, {'diff': 2.261099999999877e-05}, {'diff': 2.2679999999997147e-05...</msg>
<status status="PASS" starttime="20201029 12:56:06.019" endtime="20201029 12:56:06.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:06.027" level="INFO">${ACCURACY} = {'diff': [2.262499999999834e-05, 2.3040999999997952e-05, 2.2958000000000006e-05, 2.2500000000001685e-05, 2.261099999999877e-05, 2.2679999999997147e-05, 2.2666000000001046e-05, 2.256900000000006e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:56:06.024" endtime="20201029 12:56:06.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.031" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:56:06.030" endtime="20201029 12:56:06.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.034" level="INFO">VALUE: [2.262499999999834e-05, 2.3040999999997952e-05, 2.2958000000000006e-05, 2.2500000000001685e-05, 2.261099999999877e-05, 2.2679999999997147e-05, 2.2666000000001046e-05, 2.256900000000006e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.3056000000000465e-05, 2.216700000000002e-05, 2.261099999999877e-05, 2.234699999999895e-05, 2.2542000000000395e-05, 2.3026999999998382e-05, 2.2457999999999506e-05, 2.2527999999997356e-05, 2.2305999999999715e-05, 2.258299999999963e-05, 2.2598000000002144e-05, 2.211100000000174e-05, 2.3013999999998286e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.2292000000000145e-05, 2.27229999999988e-05, 2.223700000000134e-05, 2.2222000000002295e-05, 2.2999999999998716e-05, 2.3054999999997522e-05, 2.2750000000001935e-05, 2.2416000000000796e-05, 2.25969999999992e-05, 2.2750000000001935e-05, 2.262500000000181e-05, 2.233299999999938e-05, 2.262500000000181e-05, 2.2402000000001226e-05, 2.2264000000001005e-05, 2.2500000000001685e-05, 2.2402000000001226e-05, 2.280500000000074e-05, 2.290299999999773e-05, 2.2680000000000616e-05, 2.234700000000242e-05, 2.2736000000002365e-05, 2.2999999999998716e-05, 2.209700000000217e-05, 2.3027999999997856e-05]</msg>
<status status="PASS" starttime="20201029 12:56:06.032" endtime="20201029 12:56:06.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.028" endtime="20201029 12:56:06.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:06.038" endtime="20201029 12:56:06.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.037" endtime="20201029 12:56:06.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.035" endtime="20201029 12:56:06.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.680" endtime="20201029 12:56:06.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:05.679" endtime="20201029 12:56:06.059"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.069" endtime="20201029 12:56:06.084"></status>
</kw>
<msg timestamp="20201029 12:56:06.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:06.066" endtime="20201029 12:56:06.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:06.085" endtime="20201029 12:56:06.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.088" endtime="20201029 12:56:06.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.064" endtime="20201029 12:56:06.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.062" endtime="20201029 12:56:06.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.097" endtime="20201029 12:56:06.383"></status>
</kw>
<msg timestamp="20201029 12:56:06.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020873847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020896292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:06.095" endtime="20201029 12:56:06.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020873847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020896292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:06.387" endtime="20201029 12:56:06.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.395" endtime="20201029 12:56:06.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.093" endtime="20201029 12:56:06.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.091" endtime="20201029 12:56:06.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:06.402" level="INFO">${RESULT} = [{'diff': 2.244499999999941e-05}, {'diff': 2.263899999999791e-05}, {'diff': 2.2098000000001644e-05}, {'diff': 2.2569999999999535e-05}, {'diff': 2.226300000000153e-05}, {'diff': 2.3040999999997952e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:06.398" endtime="20201029 12:56:06.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:06.406" level="INFO">${ACCURACY} = {'diff': [2.244499999999941e-05, 2.263899999999791e-05, 2.2098000000001644e-05, 2.2569999999999535e-05, 2.226300000000153e-05, 2.3040999999997952e-05, 2.2334000000002324e-05, 2.269499999999966e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:56:06.403" endtime="20201029 12:56:06.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.410" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:56:06.409" endtime="20201029 12:56:06.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.414" level="INFO">VALUE: [2.244499999999941e-05, 2.263899999999791e-05, 2.2098000000001644e-05, 2.2569999999999535e-05, 2.226300000000153e-05, 2.3040999999997952e-05, 2.2334000000002324e-05, 2.269499999999966e-05, 2.2193999999999686e-05, 2.2180000000000116e-05, 2.286099999999902e-05, 2.2776999999998132e-05, 2.255500000000049e-05, 2.2264000000001005e-05, 2.2166000000000546e-05, 2.2443999999999936e-05, 2.2707999999999756e-05, 2.258299999999963e-05, 2.2443999999999936e-05, 2.2278000000000575e-05, 2.2986000000002615e-05, 2.2694000000000186e-05, 2.2915999999997827e-05, 2.2514000000001255e-05, 2.2278000000000575e-05, 2.3000000000002185e-05, 2.2985999999999146e-05, 2.2819999999999785e-05, 2.2764000000001505e-05, 2.240299999999723e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.212500000000131e-05, 2.2235999999998396e-05, 2.2985999999999146e-05, 2.3056000000000465e-05, 2.3028000000001325e-05, 2.3014000000001755e-05, 2.236099999999852e-05, 2.2305999999999715e-05, 2.238900000000113e-05, 2.215300000000045e-05, 2.269499999999966e-05, 2.2833999999999355e-05, 2.2542000000000395e-05, 2.3014000000001755e-05, 2.2750000000001935e-05, 2.245900000000245e-05, 2.215300000000045e-05, 2.229100000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:56:06.411" endtime="20201029 12:56:06.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.407" endtime="20201029 12:56:06.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:06.418" endtime="20201029 12:56:06.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.417" endtime="20201029 12:56:06.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.416" endtime="20201029 12:56:06.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.060" endtime="20201029 12:56:06.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.060" endtime="20201029 12:56:06.439"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.448" endtime="20201029 12:56:06.462"></status>
</kw>
<msg timestamp="20201029 12:56:06.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:06.446" endtime="20201029 12:56:06.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:06.463" endtime="20201029 12:56:06.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.466" endtime="20201029 12:56:06.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.444" endtime="20201029 12:56:06.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.442" endtime="20201029 12:56:06.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.475" endtime="20201029 12:56:06.761"></status>
</kw>
<msg timestamp="20201029 12:56:06.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:06.473" endtime="20201029 12:56:06.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:06.765" endtime="20201029 12:56:06.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.773" endtime="20201029 12:56:06.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.471" endtime="20201029 12:56:06.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.469" endtime="20201029 12:56:06.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:06.780" level="INFO">${RESULT} = [{'diff': 2.2542000000000395e-05}, {'diff': 2.2583999999999105e-05}, {'diff': 2.2764000000001505e-05}, {'diff': 2.244500000000288e-05}, {'diff': 2.2583999999999105e-05}, {'diff': 2.2305999999999715e-0...</msg>
<status status="PASS" starttime="20201029 12:56:06.776" endtime="20201029 12:56:06.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:06.785" level="INFO">${ACCURACY} = {'diff': [2.2542000000000395e-05, 2.2583999999999105e-05, 2.2764000000001505e-05, 2.244500000000288e-05, 2.2583999999999105e-05, 2.2305999999999715e-05, 2.2500000000001685e-05, 2.27229999999988e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:56:06.780" endtime="20201029 12:56:06.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.789" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:56:06.788" endtime="20201029 12:56:06.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.792" level="INFO">VALUE: [2.2542000000000395e-05, 2.2583999999999105e-05, 2.2764000000001505e-05, 2.244500000000288e-05, 2.2583999999999105e-05, 2.2305999999999715e-05, 2.2500000000001685e-05, 2.27229999999988e-05, 2.2958000000000006e-05, 2.284699999999945e-05, 2.22229999999983e-05, 2.2528000000000825e-05, 2.248699999999812e-05, 2.252700000000135e-05, 2.234699999999895e-05, 2.2221999999998826e-05, 2.229100000000067e-05, 2.2207999999999256e-05, 2.29030000000012e-05, 2.262499999999834e-05, 2.286099999999902e-05, 2.262499999999834e-05, 2.261100000000224e-05, 2.268100000000009e-05, 2.265300000000095e-05, 2.279100000000117e-05, 2.2958000000000006e-05, 2.211100000000174e-05, 2.312499999999884e-05, 2.24030000000007e-05, 2.262499999999834e-05, 2.291700000000077e-05, 2.2777999999997606e-05, 2.206899999999956e-05, 2.2749999999998466e-05, 2.233299999999938e-05, 2.262500000000181e-05, 2.208299999999913e-05, 2.3042000000000895e-05, 2.294499999999991e-05, 2.238900000000113e-05, 2.209700000000217e-05, 2.295899999999948e-05, 2.240299999999723e-05, 2.294499999999991e-05, 2.262499999999834e-05, 2.2721999999999326e-05, 2.2430000000000366e-05, 2.2722000000002796e-05, 2.2763999999998036e-05]</msg>
<status status="PASS" starttime="20201029 12:56:06.790" endtime="20201029 12:56:06.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.785" endtime="20201029 12:56:06.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:06.797" endtime="20201029 12:56:06.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.795" endtime="20201029 12:56:06.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.794" endtime="20201029 12:56:06.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.440" endtime="20201029 12:56:06.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.440" endtime="20201029 12:56:06.817"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.826" endtime="20201029 12:56:06.841"></status>
</kw>
<msg timestamp="20201029 12:56:06.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:06.824" endtime="20201029 12:56:06.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:06.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:06.843" endtime="20201029 12:56:06.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.845" endtime="20201029 12:56:06.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.822" endtime="20201029 12:56:06.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.820" endtime="20201029 12:56:06.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:06.854" endtime="20201029 12:56:07.158"></status>
</kw>
<msg timestamp="20201029 12:56:07.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:06.853" endtime="20201029 12:56:07.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019905458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:07.162" endtime="20201029 12:56:07.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.170" endtime="20201029 12:56:07.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.850" endtime="20201029 12:56:07.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.849" endtime="20201029 12:56:07.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:07.177" level="INFO">${RESULT} = [{'diff': 2.213900000000088e-05}, {'diff': 2.2221999999998826e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.2401999999997757e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.229100000000067e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:07.174" endtime="20201029 12:56:07.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:07.181" level="INFO">${ACCURACY} = {'diff': [2.213900000000088e-05, 2.2221999999998826e-05, 2.20969999999987e-05, 2.2401999999997757e-05, 2.2249999999997966e-05, 2.229100000000067e-05, 2.22770000000011e-05, 2.2972000000003046e-05, 2.24...</msg>
<status status="PASS" starttime="20201029 12:56:07.178" endtime="20201029 12:56:07.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.185" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:56:07.184" endtime="20201029 12:56:07.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.188" level="INFO">VALUE: [2.213900000000088e-05, 2.2221999999998826e-05, 2.20969999999987e-05, 2.2401999999997757e-05, 2.2249999999997966e-05, 2.229100000000067e-05, 2.22770000000011e-05, 2.2972000000003046e-05, 2.2485999999998646e-05, 2.3013999999998286e-05, 2.2804999999997272e-05, 2.234699999999895e-05, 2.243099999999984e-05, 2.2792000000000645e-05, 2.212500000000131e-05, 2.2305999999999715e-05, 2.3028000000001325e-05, 2.2985999999999146e-05, 2.2985999999999146e-05, 2.240299999999723e-05, 2.2791999999997176e-05, 2.213899999999741e-05, 2.213900000000088e-05, 2.234700000000242e-05, 2.29169999999973e-05, 2.2555999999999965e-05, 2.215300000000045e-05, 2.2971999999999576e-05, 2.291700000000077e-05, 2.294499999999991e-05, 2.298699999999862e-05, 2.293100000000034e-05, 2.236099999999852e-05, 2.2278000000000575e-05, 2.263900000000138e-05, 2.2166000000000546e-05, 2.2348000000001894e-05, 2.2694000000000186e-05, 2.2278000000000575e-05, 2.213900000000088e-05, 2.211100000000174e-05, 2.20969999999987e-05, 2.2694000000000186e-05, 2.2944000000000436e-05, 2.2971999999999576e-05, 2.2221999999998826e-05, 2.2665999999997577e-05, 2.2207999999999256e-05, 2.2707999999999756e-05, 2.209700000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:56:07.187" endtime="20201029 12:56:07.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.182" endtime="20201029 12:56:07.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:07.193" endtime="20201029 12:56:07.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.192" endtime="20201029 12:56:07.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.190" endtime="20201029 12:56:07.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.818" endtime="20201029 12:56:07.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:06.818" endtime="20201029 12:56:07.214"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.223" endtime="20201029 12:56:07.240"></status>
</kw>
<msg timestamp="20201029 12:56:07.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:07.221" endtime="20201029 12:56:07.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:07.242" endtime="20201029 12:56:07.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.244" endtime="20201029 12:56:07.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.218" endtime="20201029 12:56:07.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.216" endtime="20201029 12:56:07.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.253" endtime="20201029 12:56:07.539"></status>
</kw>
<msg timestamp="20201029 12:56:07.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:07.252" endtime="20201029 12:56:07.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021489542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:07.544" endtime="20201029 12:56:07.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.552" endtime="20201029 12:56:07.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.249" endtime="20201029 12:56:07.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.248" endtime="20201029 12:56:07.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:07.558" level="INFO">${RESULT} = [{'diff': 2.287499999999859e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.293100000000034e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.223700000000134e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:07.555" endtime="20201029 12:56:07.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:07.563" level="INFO">${ACCURACY} = {'diff': [2.287499999999859e-05, 2.2985999999999146e-05, 2.293100000000034e-05, 2.262500000000181e-05, 2.2305999999999715e-05, 2.223700000000134e-05, 2.2569999999999535e-05, 2.234699999999895e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:56:07.559" endtime="20201029 12:56:07.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.567" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:56:07.566" endtime="20201029 12:56:07.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.570" level="INFO">VALUE: [2.287499999999859e-05, 2.2985999999999146e-05, 2.293100000000034e-05, 2.262500000000181e-05, 2.2305999999999715e-05, 2.223700000000134e-05, 2.2569999999999535e-05, 2.234699999999895e-05, 2.2236000000001865e-05, 2.2320000000002754e-05, 2.234699999999895e-05, 2.2652000000001477e-05, 2.208299999999913e-05, 2.2735999999998896e-05, 2.234699999999895e-05, 2.211099999999827e-05, 2.308300000000013e-05, 2.240299999999723e-05, 2.3014000000001755e-05, 2.286099999999902e-05, 2.255500000000049e-05, 2.281900000000031e-05, 2.229100000000067e-05, 2.230500000000024e-05, 2.2791999999997176e-05, 2.256900000000006e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.262499999999834e-05, 2.218100000000306e-05, 2.234699999999895e-05, 2.2985999999999146e-05, 2.262499999999834e-05, 2.2735999999998896e-05, 2.2236000000001865e-05, 2.2555999999999965e-05, 2.2278000000000575e-05, 2.262500000000181e-05, 2.234700000000242e-05, 2.2986000000002615e-05, 2.270899999999923e-05, 2.219500000000263e-05, 2.269499999999966e-05, 2.2304999999996772e-05, 2.3014000000001755e-05, 2.2861999999998495e-05, 2.240299999999723e-05, 2.293100000000034e-05, 2.2500000000001685e-05, 2.2569999999999535e-05]</msg>
<status status="PASS" starttime="20201029 12:56:07.568" endtime="20201029 12:56:07.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.563" endtime="20201029 12:56:07.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:07.576" endtime="20201029 12:56:07.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.574" endtime="20201029 12:56:07.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.573" endtime="20201029 12:56:07.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.215" endtime="20201029 12:56:07.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.214" endtime="20201029 12:56:07.596"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.605" endtime="20201029 12:56:07.621"></status>
</kw>
<msg timestamp="20201029 12:56:07.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:07.604" endtime="20201029 12:56:07.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:07.622" endtime="20201029 12:56:07.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.625" endtime="20201029 12:56:07.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.601" endtime="20201029 12:56:07.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.599" endtime="20201029 12:56:07.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.634" endtime="20201029 12:56:07.934"></status>
</kw>
<msg timestamp="20201029 12:56:07.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:07.632" endtime="20201029 12:56:07.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:07.944" endtime="20201029 12:56:07.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:07.962" endtime="20201029 12:56:07.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.630" endtime="20201029 12:56:07.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.628" endtime="20201029 12:56:07.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:07.969" level="INFO">${RESULT} = [{'diff': 2.3013999999998286e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.2555999999999965e-05}, {'diff': 2.283299999999988e-05}, {'diff': 2.2750000000001935e-05...</msg>
<status status="PASS" starttime="20201029 12:56:07.966" endtime="20201029 12:56:07.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:07.974" level="INFO">${ACCURACY} = {'diff': [2.3013999999998286e-05, 2.263900000000138e-05, 2.2792000000000645e-05, 2.2555999999999965e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.2999999999998716e-05, 2.2499999999998216e-05, ...</msg>
<status status="PASS" starttime="20201029 12:56:07.970" endtime="20201029 12:56:07.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.979" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:56:07.978" endtime="20201029 12:56:07.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:07.981" level="INFO">VALUE: [2.3013999999998286e-05, 2.263900000000138e-05, 2.2792000000000645e-05, 2.2555999999999965e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.2999999999998716e-05, 2.2499999999998216e-05, 2.263900000000138e-05, 2.2513999999997786e-05, 2.2542000000000395e-05, 2.240299999999723e-05, 2.220899999999873e-05, 2.286099999999902e-05, 2.266700000000052e-05, 2.223699999999787e-05, 2.2098000000001644e-05, 2.2597999999998675e-05, 2.213899999999741e-05, 2.302700000000185e-05, 2.2500000000001685e-05, 2.288899999999816e-05, 2.2416000000000796e-05, 2.234699999999895e-05, 2.291700000000077e-05, 2.226300000000153e-05, 2.2666000000001046e-05, 2.2458000000002976e-05, 2.284699999999945e-05, 2.3056000000000465e-05, 2.263899999999791e-05, 2.2985999999999146e-05, 2.2264000000001005e-05, 2.213900000000088e-05, 2.2985999999999146e-05, 2.24030000000007e-05, 2.3042000000000895e-05, 2.305500000000099e-05, 2.2972000000003046e-05, 2.3042000000000895e-05, 2.2985999999999146e-05, 2.2221999999998826e-05, 2.290299999999773e-05, 2.2735999999998896e-05, 2.269499999999966e-05, 2.216700000000002e-05, 2.265299999999748e-05, 2.2236000000001865e-05, 2.2471999999999076e-05, 2.2985999999999146e-05]</msg>
<status status="PASS" starttime="20201029 12:56:07.980" endtime="20201029 12:56:07.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.975" endtime="20201029 12:56:07.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:07.986" endtime="20201029 12:56:08.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.985" endtime="20201029 12:56:08.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.983" endtime="20201029 12:56:08.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.597" endtime="20201029 12:56:08.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:07.597" endtime="20201029 12:56:08.007"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.016" endtime="20201029 12:56:08.031"></status>
</kw>
<msg timestamp="20201029 12:56:08.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:08.014" endtime="20201029 12:56:08.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:08.032" endtime="20201029 12:56:08.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.035" endtime="20201029 12:56:08.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.011" endtime="20201029 12:56:08.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.009" endtime="20201029 12:56:08.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.044" endtime="20201029 12:56:08.329"></status>
</kw>
<msg timestamp="20201029 12:56:08.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:08.042" endtime="20201029 12:56:08.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:08.333" endtime="20201029 12:56:08.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.342" endtime="20201029 12:56:08.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.040" endtime="20201029 12:56:08.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.038" endtime="20201029 12:56:08.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:08.348" level="INFO">${RESULT} = [{'diff': 2.231899999999981e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.280500000000074e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.2499999999998216e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:08.345" endtime="20201029 12:56:08.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:08.352" level="INFO">${ACCURACY} = {'diff': [2.231899999999981e-05, 2.2999999999998716e-05, 2.20969999999987e-05, 2.280500000000074e-05, 2.2235999999998396e-05, 2.2499999999998216e-05, 2.2443999999999936e-05, 2.2929999999997397e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:56:08.349" endtime="20201029 12:56:08.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.357" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:56:08.356" endtime="20201029 12:56:08.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.359" level="INFO">VALUE: [2.231899999999981e-05, 2.2999999999998716e-05, 2.20969999999987e-05, 2.280500000000074e-05, 2.2235999999998396e-05, 2.2499999999998216e-05, 2.2443999999999936e-05, 2.2929999999997397e-05, 2.2943999999996967e-05, 2.2457999999999506e-05, 2.3054999999997522e-05, 2.3027999999997856e-05, 2.2457999999999506e-05, 2.3013999999998286e-05, 2.286099999999902e-05, 2.2278000000000575e-05, 2.2944000000000436e-05, 2.2166000000000546e-05, 2.2457999999999506e-05, 2.29030000000012e-05, 2.265300000000095e-05, 2.2971999999999576e-05, 2.287500000000206e-05, 2.269499999999966e-05, 2.2278000000000575e-05, 2.287500000000206e-05, 2.218100000000306e-05, 2.236099999999852e-05, 2.24030000000007e-05, 2.2819999999999785e-05, 2.2278000000000575e-05, 2.297299999999905e-05, 2.2527999999997356e-05, 2.2612000000001714e-05, 2.294499999999991e-05, 2.211100000000174e-05, 2.2735999999998896e-05, 2.236099999999852e-05, 2.2221999999998826e-05, 2.2152000000000976e-05, 2.261099999999877e-05, 2.2764000000001505e-05, 2.233299999999938e-05, 2.234700000000242e-05, 2.213900000000088e-05, 2.2193999999999686e-05, 2.2929999999997397e-05, 2.2278000000000575e-05, 2.238900000000113e-05, 2.2999999999998716e-05]</msg>
<status status="PASS" starttime="20201029 12:56:08.358" endtime="20201029 12:56:08.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.353" endtime="20201029 12:56:08.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:08.364" endtime="20201029 12:56:08.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.363" endtime="20201029 12:56:08.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.362" endtime="20201029 12:56:08.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.008" endtime="20201029 12:56:08.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.007" endtime="20201029 12:56:08.385"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.394" endtime="20201029 12:56:08.411"></status>
</kw>
<msg timestamp="20201029 12:56:08.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:08.392" endtime="20201029 12:56:08.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:08.413" endtime="20201029 12:56:08.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.416" endtime="20201029 12:56:08.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.389" endtime="20201029 12:56:08.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.387" endtime="20201029 12:56:08.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.438" endtime="20201029 12:56:08.754"></status>
</kw>
<msg timestamp="20201029 12:56:08.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020676597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:08.436" endtime="20201029 12:56:08.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020676597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:08.763" endtime="20201029 12:56:08.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.777" endtime="20201029 12:56:08.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.429" endtime="20201029 12:56:08.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.425" endtime="20201029 12:56:08.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:08.783" level="INFO">${RESULT} = [{'diff': 2.2250000000001435e-05}, {'diff': 2.2250000000001435e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.2430000000000366e-05}, {'diff': 2.3055999999996996e-05}, {'diff': 2.2457999999999506e-...</msg>
<status status="PASS" starttime="20201029 12:56:08.780" endtime="20201029 12:56:08.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:08.787" level="INFO">${ACCURACY} = {'diff': [2.2250000000001435e-05, 2.2250000000001435e-05, 2.2193999999999686e-05, 2.2430000000000366e-05, 2.3055999999996996e-05, 2.2457999999999506e-05, 2.3070000000000035e-05, 2.3068999999997092e-05...</msg>
<status status="PASS" starttime="20201029 12:56:08.784" endtime="20201029 12:56:08.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.792" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:56:08.791" endtime="20201029 12:56:08.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.794" level="INFO">VALUE: [2.2250000000001435e-05, 2.2250000000001435e-05, 2.2193999999999686e-05, 2.2430000000000366e-05, 2.3055999999996996e-05, 2.2457999999999506e-05, 2.3070000000000035e-05, 2.3068999999997092e-05, 2.2999999999998716e-05, 2.288899999999816e-05, 2.2999999999998716e-05, 2.2207999999999256e-05, 2.2292000000000145e-05, 2.211099999999827e-05, 2.245900000000245e-05, 2.234699999999895e-05, 2.2971999999999576e-05, 2.268100000000009e-05, 2.2084000000002074e-05, 2.2763999999998036e-05, 2.212500000000131e-05, 2.2500000000001685e-05, 2.2763999999998036e-05, 2.219499999999916e-05, 2.2819999999999785e-05, 2.2278000000000575e-05, 2.263899999999791e-05, 2.273699999999837e-05, 2.2222000000002295e-05, 2.2804999999997272e-05, 2.237499999999809e-05, 2.229100000000067e-05, 2.305500000000099e-05, 2.2944000000000436e-05, 2.2152000000000976e-05, 2.280500000000074e-05, 2.2180000000000116e-05, 2.2443999999999936e-05, 2.204100000000042e-05, 2.254100000000092e-05, 2.208299999999913e-05, 2.293100000000034e-05, 2.233299999999938e-05, 2.238900000000113e-05, 2.2943999999996967e-05, 2.2499999999998216e-05, 2.2819999999999785e-05, 2.2292000000000145e-05, 2.3027999999997856e-05, 2.2514000000001255e-05]</msg>
<status status="PASS" starttime="20201029 12:56:08.793" endtime="20201029 12:56:08.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.788" endtime="20201029 12:56:08.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:08.800" endtime="20201029 12:56:08.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.799" endtime="20201029 12:56:08.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.797" endtime="20201029 12:56:08.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.386" endtime="20201029 12:56:08.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.385" endtime="20201029 12:56:08.821"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.829" endtime="20201029 12:56:08.845"></status>
</kw>
<msg timestamp="20201029 12:56:08.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:08.828" endtime="20201029 12:56:08.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:08.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:08.846" endtime="20201029 12:56:08.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.849" endtime="20201029 12:56:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.825" endtime="20201029 12:56:08.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.823" endtime="20201029 12:56:08.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:08.857" endtime="20201029 12:56:09.144"></status>
</kw>
<msg timestamp="20201029 12:56:09.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019807778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:08.856" endtime="20201029 12:56:09.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019807778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:09.148" endtime="20201029 12:56:09.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.156" endtime="20201029 12:56:09.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.853" endtime="20201029 12:56:09.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.852" endtime="20201029 12:56:09.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:09.163" level="INFO">${RESULT} = [{'diff': 2.3665999999998577e-05}, {'diff': 2.387499999999959e-05}, {'diff': 2.35970000000002e-05}, {'diff': 2.3166000000001546e-05}, {'diff': 2.3957999999997537e-05}, {'diff': 2.388899999999916e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:09.159" endtime="20201029 12:56:09.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:09.168" level="INFO">${ACCURACY} = {'diff': [2.3665999999998577e-05, 2.387499999999959e-05, 2.35970000000002e-05, 2.3166000000001546e-05, 2.3957999999997537e-05, 2.388899999999916e-05, 2.3582999999997162e-05, 2.308300000000013e-05, 2.3...</msg>
<status status="PASS" starttime="20201029 12:56:09.164" endtime="20201029 12:56:09.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.172" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:56:09.171" endtime="20201029 12:56:09.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.174" level="INFO">VALUE: [2.3665999999998577e-05, 2.387499999999959e-05, 2.35970000000002e-05, 2.3166000000001546e-05, 2.3957999999997537e-05, 2.388899999999916e-05, 2.3582999999997162e-05, 2.308300000000013e-05, 2.358300000000063e-05, 2.3277999999998106e-05, 2.394500000000091e-05, 2.39169999999983e-05, 2.318099999999712e-05, 2.361099999999977e-05, 2.319500000000016e-05, 2.311099999999927e-05, 2.3806000000001215e-05, 2.3194000000000686e-05, 2.3221999999999826e-05, 2.4070000000001035e-05, 2.3458000000000506e-05, 2.4041999999998426e-05, 2.3097999999999175e-05, 2.3749999999999466e-05, 2.393100000000134e-05, 2.4056000000001465e-05, 2.3235999999999396e-05, 2.4056000000001465e-05, 2.368099999999762e-05, 2.345899999999998e-05, 2.366699999999805e-05, 2.4041999999998426e-05, 2.326300000000253e-05, 2.3776999999999132e-05, 2.341700000000127e-05, 2.3735999999999896e-05, 2.3513999999998786e-05, 2.3500000000002685e-05, 2.358300000000063e-05, 2.311099999999927e-05, 2.362499999999934e-05, 2.336099999999952e-05, 2.3901999999999257e-05, 2.333300000000038e-05, 2.3292000000001145e-05, 2.311100000000274e-05, 2.3180000000001116e-05, 2.390299999999873e-05, 2.3763999999999036e-05, 2.388899999999916e-05]</msg>
<status status="PASS" starttime="20201029 12:56:09.173" endtime="20201029 12:56:09.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.168" endtime="20201029 12:56:09.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:09.179" endtime="20201029 12:56:09.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.178" endtime="20201029 12:56:09.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.177" endtime="20201029 12:56:09.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.822" endtime="20201029 12:56:09.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:08.821" endtime="20201029 12:56:09.200"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.209" endtime="20201029 12:56:09.223"></status>
</kw>
<msg timestamp="20201029 12:56:09.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:09.207" endtime="20201029 12:56:09.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:09.225" endtime="20201029 12:56:09.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.227" endtime="20201029 12:56:09.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.205" endtime="20201029 12:56:09.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.203" endtime="20201029 12:56:09.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.236" endtime="20201029 12:56:09.527"></status>
</kw>
<msg timestamp="20201029 12:56:09.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:09.235" endtime="20201029 12:56:09.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:09.531" endtime="20201029 12:56:09.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.539" endtime="20201029 12:56:09.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.232" endtime="20201029 12:56:09.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.230" endtime="20201029 12:56:09.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:09.546" level="INFO">${RESULT} = [{'diff': 2.411100000000027e-05}, {'diff': 2.4221999999997357e-05}, {'diff': 2.419500000000116e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.4513999999999786e-05}, {'diff': 2.42230000000003e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:09.542" endtime="20201029 12:56:09.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:09.550" level="INFO">${ACCURACY} = {'diff': [2.411100000000027e-05, 2.4221999999997357e-05, 2.419500000000116e-05, 2.490299999999973e-05, 2.4513999999999786e-05, 2.42230000000003e-05, 2.486100000000102e-05, 2.5056000000002465e-05, 2.42...</msg>
<status status="PASS" starttime="20201029 12:56:09.547" endtime="20201029 12:56:09.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.554" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:56:09.553" endtime="20201029 12:56:09.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.557" level="INFO">VALUE: [2.411100000000027e-05, 2.4221999999997357e-05, 2.419500000000116e-05, 2.490299999999973e-05, 2.4513999999999786e-05, 2.42230000000003e-05, 2.486100000000102e-05, 2.5056000000002465e-05, 2.423699999999987e-05, 2.419500000000116e-05, 2.4221999999997357e-05, 2.5014000000000286e-05, 2.4986000000001146e-05, 2.4693999999998717e-05, 2.4429999999998897e-05, 2.480500000000274e-05, 2.461100000000077e-05, 2.484700000000145e-05, 2.4277999999999106e-05, 2.5000000000000716e-05, 2.4665999999999577e-05, 2.4221999999997357e-05, 2.4278000000002575e-05, 2.497300000000105e-05, 2.468099999999862e-05, 2.433300000000138e-05, 2.4528000000002825e-05, 2.4777999999999606e-05, 2.4319999999997816e-05, 2.4971999999998107e-05, 2.490299999999973e-05, 2.4527999999999356e-05, 2.4527999999999356e-05, 2.4805999999998746e-05, 2.493100000000234e-05, 2.5027999999999856e-05, 2.5055999999998996e-05, 2.487500000000059e-05, 2.488900000000016e-05, 2.4819999999998316e-05, 2.413899999999941e-05, 2.4236000000000396e-05, 2.445900000000098e-05, 2.4791999999999176e-05, 2.462500000000034e-05, 2.4041999999998426e-05, 2.4430000000002366e-05, 2.4513999999999786e-05, 2.5027999999999856e-05, 2.4750000000000466e-05]</msg>
<status status="PASS" starttime="20201029 12:56:09.555" endtime="20201029 12:56:09.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.550" endtime="20201029 12:56:09.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:09.562" endtime="20201029 12:56:09.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.560" endtime="20201029 12:56:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.559" endtime="20201029 12:56:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.201" endtime="20201029 12:56:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.201" endtime="20201029 12:56:09.582"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.591" endtime="20201029 12:56:09.608"></status>
</kw>
<msg timestamp="20201029 12:56:09.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:09.589" endtime="20201029 12:56:09.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:09.609" endtime="20201029 12:56:09.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.612" endtime="20201029 12:56:09.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.587" endtime="20201029 12:56:09.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.585" endtime="20201029 12:56:09.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.621" endtime="20201029 12:56:09.906"></status>
</kw>
<msg timestamp="20201029 12:56:09.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:09.619" endtime="20201029 12:56:09.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:09.913" endtime="20201029 12:56:09.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.921" endtime="20201029 12:56:09.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.617" endtime="20201029 12:56:09.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.615" endtime="20201029 12:56:09.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:09.928" level="INFO">${RESULT} = [{'diff': 2.518099999999912e-05}, {'diff': 2.55970000000022e-05}, {'diff': 2.5610999999998302e-05}, {'diff': 2.566700000000005e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.533300000000238e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:09.925" endtime="20201029 12:56:09.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:09.932" level="INFO">${ACCURACY} = {'diff': [2.518099999999912e-05, 2.55970000000022e-05, 2.5610999999998302e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.533300000000238e-05, 2.5332999999998912e-05, 2.6028000000000856e-05, 2.59...</msg>
<status status="PASS" starttime="20201029 12:56:09.929" endtime="20201029 12:56:09.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.936" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:56:09.935" endtime="20201029 12:56:09.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.939" level="INFO">VALUE: [2.518099999999912e-05, 2.55970000000022e-05, 2.5610999999998302e-05, 2.566700000000005e-05, 2.565300000000048e-05, 2.533300000000238e-05, 2.5332999999998912e-05, 2.6028000000000856e-05, 2.5985999999998677e-05, 2.513900000000041e-05, 2.5541999999999926e-05, 2.5221999999998357e-05, 2.597299999999858e-05, 2.5514000000000786e-05, 2.5569999999999066e-05, 2.5833999999998886e-05, 2.5264000000000536e-05, 2.5637999999997968e-05, 2.6000000000001716e-05, 2.5624999999997872e-05, 2.5764000000001036e-05, 2.6028000000000856e-05, 2.6110999999998802e-05, 2.561100000000177e-05, 2.5291000000000202e-05, 2.5541000000000452e-05, 2.6055000000000522e-05, 2.5388000000001187e-05, 2.5179999999999647e-05, 2.6041000000000952e-05, 2.538900000000066e-05, 2.586100000000202e-05, 2.5736000000001896e-05, 2.5957999999999537e-05, 2.5750000000001466e-05, 2.5582999999999162e-05, 2.6042000000000426e-05, 2.513900000000041e-05, 2.5584000000002105e-05, 2.5986000000002146e-05, 2.5360999999998052e-05, 2.569499999999919e-05, 2.6000000000001716e-05, 2.5749999999997997e-05, 2.518100000000259e-05, 2.5749999999997997e-05, 2.5472000000002076e-05, 2.5986000000002146e-05, 2.534700000000195e-05, 2.538900000000066e-05]</msg>
<status status="PASS" starttime="20201029 12:56:09.937" endtime="20201029 12:56:09.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.933" endtime="20201029 12:56:09.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:09.950" endtime="20201029 12:56:09.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.949" endtime="20201029 12:56:09.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.948" endtime="20201029 12:56:09.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.583" endtime="20201029 12:56:09.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.583" endtime="20201029 12:56:09.971"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:09.980" endtime="20201029 12:56:09.996"></status>
</kw>
<msg timestamp="20201029 12:56:09.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:09.978" endtime="20201029 12:56:09.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:09.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:09.997" endtime="20201029 12:56:09.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.000" endtime="20201029 12:56:10.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.976" endtime="20201029 12:56:10.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.974" endtime="20201029 12:56:10.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.009" endtime="20201029 12:56:10.295"></status>
</kw>
<msg timestamp="20201029 12:56:10.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:10.007" endtime="20201029 12:56:10.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020165792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:10.299" endtime="20201029 12:56:10.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.308" endtime="20201029 12:56:10.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.005" endtime="20201029 12:56:10.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.003" endtime="20201029 12:56:10.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:10.314" level="INFO">${RESULT} = [{'diff': 2.613899999999794e-05}, {'diff': 2.6348000000002425e-05}, {'diff': 2.690300000000173e-05}, {'diff': 2.691699999999783e-05}, {'diff': 2.6860999999999552e-05}, {'diff': 2.6833999999999886e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:10.311" endtime="20201029 12:56:10.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:10.319" level="INFO">${ACCURACY} = {'diff': [2.613899999999794e-05, 2.6348000000002425e-05, 2.690300000000173e-05, 2.691699999999783e-05, 2.6860999999999552e-05, 2.6833999999999886e-05, 2.6333999999999386e-05, 2.6292000000000676e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:56:10.315" endtime="20201029 12:56:10.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.324" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:56:10.323" endtime="20201029 12:56:10.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.326" level="INFO">VALUE: [2.613899999999794e-05, 2.6348000000002425e-05, 2.690300000000173e-05, 2.691699999999783e-05, 2.6860999999999552e-05, 2.6833999999999886e-05, 2.6333999999999386e-05, 2.6292000000000676e-05, 2.6735999999999427e-05, 2.647300000000255e-05, 2.615299999999751e-05, 2.7042000000001426e-05, 2.6388000000002187e-05, 2.6610999999999302e-05, 2.7028000000001856e-05, 2.6083999999999136e-05, 2.698699999999915e-05, 2.6221999999999357e-05, 2.6762999999999093e-05, 2.6332999999999912e-05, 2.7014000000002286e-05, 2.7041999999997957e-05, 2.6916000000001827e-05, 2.6874999999999122e-05, 2.6846999999999982e-05, 2.6944000000000967e-05, 2.6069000000000092e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.69170000000013e-05, 2.6500000000002216e-05, 2.7042000000001426e-05, 2.616699999999708e-05, 2.611100000000227e-05, 2.662500000000234e-05, 2.640300000000123e-05, 2.6721999999999857e-05, 2.7070000000000566e-05, 2.6514000000001786e-05, 2.6499999999998747e-05, 2.6847999999999456e-05, 2.6721999999999857e-05, 2.7013000000002813e-05, 2.6235999999998927e-05, 2.640299999999776e-05, 2.6985999999999677e-05, 2.6083999999999136e-05, 2.694500000000044e-05, 2.669500000000019e-05, 2.6999999999999247e-05]</msg>
<status status="PASS" starttime="20201029 12:56:10.325" endtime="20201029 12:56:10.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.320" endtime="20201029 12:56:10.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:10.331" endtime="20201029 12:56:10.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.329" endtime="20201029 12:56:10.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.328" endtime="20201029 12:56:10.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.972" endtime="20201029 12:56:10.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:09.972" endtime="20201029 12:56:10.352"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.360" endtime="20201029 12:56:10.377"></status>
</kw>
<msg timestamp="20201029 12:56:10.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:10.359" endtime="20201029 12:56:10.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:10.378" endtime="20201029 12:56:10.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.381" endtime="20201029 12:56:10.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.356" endtime="20201029 12:56:10.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.354" endtime="20201029 12:56:10.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.390" endtime="20201029 12:56:10.678"></status>
</kw>
<msg timestamp="20201029 12:56:10.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020219347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:10.388" endtime="20201029 12:56:10.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020219347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:10.682" endtime="20201029 12:56:10.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.691" endtime="20201029 12:56:10.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.386" endtime="20201029 12:56:10.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.384" endtime="20201029 12:56:10.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:10.697" level="INFO">${RESULT} = [{'diff': 2.740299999999876e-05}, {'diff': 2.7999999999996777e-05}, {'diff': 2.7222000000000357e-05}, {'diff': 2.7819000000001842e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.7305000000001772e-0...</msg>
<status status="PASS" starttime="20201029 12:56:10.694" endtime="20201029 12:56:10.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:10.702" level="INFO">${ACCURACY} = {'diff': [2.740299999999876e-05, 2.7999999999996777e-05, 2.7222000000000357e-05, 2.7819000000001842e-05, 2.7763999999999567e-05, 2.7305000000001772e-05, 2.7179999999998178e-05, 2.7361000000000052e-05,...</msg>
<status status="PASS" starttime="20201029 12:56:10.698" endtime="20201029 12:56:10.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.706" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:56:10.705" endtime="20201029 12:56:10.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.708" level="INFO">VALUE: [2.740299999999876e-05, 2.7999999999996777e-05, 2.7222000000000357e-05, 2.7819000000001842e-05, 2.7763999999999567e-05, 2.7305000000001772e-05, 2.7179999999998178e-05, 2.7361000000000052e-05, 2.7791999999998707e-05, 2.7777999999999137e-05, 2.790300000000273e-05, 2.7346999999997013e-05, 2.7806000000001746e-05, 2.7235999999999927e-05, 2.7528000000002356e-05, 2.766699999999858e-05, 2.74170000000018e-05, 2.716700000000155e-05, 2.7598000000000206e-05, 2.766700000000205e-05, 2.7570000000001066e-05, 2.766699999999858e-05, 2.795900000000101e-05, 2.7347999999999956e-05, 2.8056000000001996e-05, 2.7902999999999262e-05, 2.7361999999999526e-05, 2.7222000000000357e-05, 2.7138999999998942e-05, 2.8027999999999387e-05, 2.7902999999999262e-05, 2.7512999999999843e-05, 2.7764000000003036e-05, 2.7512999999999843e-05, 2.7276999999999163e-05, 2.7180000000001647e-05, 2.7972000000001107e-05, 2.7915999999999358e-05, 2.7291999999998207e-05, 2.7861000000000552e-05, 2.7790999999999233e-05, 2.7736000000000427e-05, 2.7582999999997693e-05, 2.716700000000155e-05, 2.7235999999999927e-05, 2.7624999999999872e-05, 2.7791999999998707e-05, 2.7806000000001746e-05, 2.7528000000002356e-05, 2.7277999999998637e-05]</msg>
<status status="PASS" starttime="20201029 12:56:10.707" endtime="20201029 12:56:10.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.702" endtime="20201029 12:56:10.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:10.713" endtime="20201029 12:56:10.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.712" endtime="20201029 12:56:10.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.711" endtime="20201029 12:56:10.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.353" endtime="20201029 12:56:10.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.352" endtime="20201029 12:56:10.734"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.743" endtime="20201029 12:56:10.759"></status>
</kw>
<msg timestamp="20201029 12:56:10.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:10.742" endtime="20201029 12:56:10.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:10.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:10.760" endtime="20201029 12:56:10.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.763" endtime="20201029 12:56:10.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.739" endtime="20201029 12:56:10.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.737" endtime="20201029 12:56:10.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:10.772" endtime="20201029 12:56:11.059"></status>
</kw>
<msg timestamp="20201029 12:56:11.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021282097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:10.770" endtime="20201029 12:56:11.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021282097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:11.063" endtime="20201029 12:56:11.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.071" endtime="20201029 12:56:11.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.768" endtime="20201029 12:56:11.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.766" endtime="20201029 12:56:11.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:11.078" level="INFO">${RESULT} = [{'diff': 2.8389000000000192e-05}, {'diff': 2.8318999999998873e-05}, {'diff': 2.84309999999989e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8402999999999762e-05}, {'diff': 2.8778000000000137e-05...</msg>
<status status="PASS" starttime="20201029 12:56:11.074" endtime="20201029 12:56:11.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:11.082" level="INFO">${ACCURACY} = {'diff': [2.8389000000000192e-05, 2.8318999999998873e-05, 2.84309999999989e-05, 2.8527999999999887e-05, 2.8402999999999762e-05, 2.8778000000000137e-05, 2.8097000000001232e-05, 2.8875000000001122e-05, ...</msg>
<status status="PASS" starttime="20201029 12:56:11.079" endtime="20201029 12:56:11.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.089" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:56:11.087" endtime="20201029 12:56:11.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.093" level="INFO">VALUE: [2.8389000000000192e-05, 2.8318999999998873e-05, 2.84309999999989e-05, 2.8527999999999887e-05, 2.8402999999999762e-05, 2.8778000000000137e-05, 2.8097000000001232e-05, 2.8875000000001122e-05, 2.8957999999999068e-05, 2.8556000000002496e-05, 2.8111000000000802e-05, 2.8457999999998568e-05, 2.8111000000000802e-05, 2.8888999999997222e-05, 2.8389000000000192e-05, 2.8125000000000372e-05, 2.9000000000001247e-05, 2.8569999999998597e-05, 2.869499999999872e-05, 2.8235999999997458e-05, 2.8083999999997666e-05, 2.9040999999997014e-05, 2.8584000000001636e-05, 2.8319999999998346e-05, 2.8958000000002537e-05, 2.8277000000000163e-05, 2.8986000000001677e-05, 2.8208000000001787e-05, 2.9026999999997444e-05, 2.8111000000000802e-05, 2.8971999999998638e-05, 2.8861000000001552e-05, 2.9014000000000817e-05, 2.9041000000000483e-05, 2.8818999999999373e-05, 2.8750000000000997e-05, 2.8693999999999248e-05, 2.8750000000000997e-05, 2.8611000000001302e-05, 2.8792000000003176e-05, 2.8457999999998568e-05, 2.89170000000033e-05, 2.8721999999998388e-05, 2.8875000000001122e-05, 2.869499999999872e-05, 2.9055999999999527e-05, 2.8111000000000802e-05, 2.8221999999997888e-05, 2.89309999999994e-05, 2.8666999999999582e-05]</msg>
<status status="PASS" starttime="20201029 12:56:11.090" endtime="20201029 12:56:11.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.083" endtime="20201029 12:56:11.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:11.102" endtime="20201029 12:56:11.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.100" endtime="20201029 12:56:11.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.099" endtime="20201029 12:56:11.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.735" endtime="20201029 12:56:11.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:10.735" endtime="20201029 12:56:11.124"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.133" endtime="20201029 12:56:11.148"></status>
</kw>
<msg timestamp="20201029 12:56:11.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:11.131" endtime="20201029 12:56:11.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:11.150" endtime="20201029 12:56:11.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.152" endtime="20201029 12:56:11.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.129" endtime="20201029 12:56:11.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.127" endtime="20201029 12:56:11.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.161" endtime="20201029 12:56:11.448"></status>
</kw>
<msg timestamp="20201029 12:56:11.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01984225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:11.159" endtime="20201029 12:56:11.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01984225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019871431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:11.452" endtime="20201029 12:56:11.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.460" endtime="20201029 12:56:11.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.157" endtime="20201029 12:56:11.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.155" endtime="20201029 12:56:11.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:11.467" level="INFO">${RESULT} = [{'diff': 2.918099999999965e-05}, {'diff': 2.9639000000001442e-05}, {'diff': 2.969499999999972e-05}, {'diff': 2.9069000000003092e-05}, {'diff': 2.920899999999879e-05}, {'diff': 2.9305999999999777e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:11.464" endtime="20201029 12:56:11.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:11.472" level="INFO">${ACCURACY} = {'diff': [2.918099999999965e-05, 2.9639000000001442e-05, 2.969499999999972e-05, 2.9069000000003092e-05, 2.920899999999879e-05, 2.9305999999999777e-05, 2.9917000000000832e-05, 2.969499999999972e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:56:11.468" endtime="20201029 12:56:11.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.476" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:56:11.475" endtime="20201029 12:56:11.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.479" level="INFO">VALUE: [2.918099999999965e-05, 2.9639000000001442e-05, 2.969499999999972e-05, 2.9069000000003092e-05, 2.920899999999879e-05, 2.9305999999999777e-05, 2.9917000000000832e-05, 2.969499999999972e-05, 2.9348000000001956e-05, 2.9457999999999568e-05, 2.96379999999985e-05, 2.9180000000000178e-05, 2.9139000000000942e-05, 2.9971999999999638e-05, 2.9276999999997694e-05, 3.0000000000002247e-05, 2.9874999999998653e-05, 2.9916000000001358e-05, 2.9402999999997292e-05, 2.9264000000001067e-05, 2.9041999999999957e-05, 2.9264000000001067e-05, 2.9638999999997973e-05, 2.9153000000000512e-05, 3.0069000000000623e-05, 2.919499999999922e-05, 2.9360999999998583e-05, 2.9471999999999138e-05, 2.9596999999999263e-05, 2.9235999999998458e-05, 2.9417000000000332e-05, 2.9097999999998236e-05, 2.9402999999997292e-05, 2.9624999999998403e-05, 2.969499999999972e-05, 2.9653000000001012e-05, 2.9930000000000928e-05, 3.0083000000000193e-05, 2.9624999999998403e-05, 2.9721999999999388e-05, 2.9333999999998916e-05, 2.9916000000001358e-05, 3.0041000000001483e-05, 2.9082999999999193e-05, 2.9139000000000942e-05, 2.9166000000000608e-05, 2.9916000000001358e-05, 2.9819000000000373e-05, 3.0040999999998014e-05, 2.9653000000001012e-05]</msg>
<status status="PASS" starttime="20201029 12:56:11.477" endtime="20201029 12:56:11.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.473" endtime="20201029 12:56:11.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:11.484" endtime="20201029 12:56:11.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.482" endtime="20201029 12:56:11.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.481" endtime="20201029 12:56:11.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.125" endtime="20201029 12:56:11.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.125" endtime="20201029 12:56:11.505"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.513" endtime="20201029 12:56:11.528"></status>
</kw>
<msg timestamp="20201029 12:56:11.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:11.512" endtime="20201029 12:56:11.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:11.530" endtime="20201029 12:56:11.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.532" endtime="20201029 12:56:11.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.509" endtime="20201029 12:56:11.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.507" endtime="20201029 12:56:11.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.541" endtime="20201029 12:56:11.828"></status>
</kw>
<msg timestamp="20201029 12:56:11.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:11.540" endtime="20201029 12:56:11.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:11.832" endtime="20201029 12:56:11.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.841" endtime="20201029 12:56:11.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.537" endtime="20201029 12:56:11.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.536" endtime="20201029 12:56:11.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:11.847" level="INFO">${RESULT} = [{'diff': 3.066600000000211e-05}, {'diff': 3.068000000000168e-05}, {'diff': 3.067999999999821e-05}, {'diff': 3.099999999999978e-05}, {'diff': 3.0208000000000318e-05}, {'diff': 3.087499999999965e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:11.844" endtime="20201029 12:56:11.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:11.851" level="INFO">${ACCURACY} = {'diff': [3.066600000000211e-05, 3.068000000000168e-05, 3.067999999999821e-05, 3.099999999999978e-05, 3.0208000000000318e-05, 3.087499999999965e-05, 3.0096999999999763e-05, 3.056900000000112e-05, 3.06...</msg>
<status status="PASS" starttime="20201029 12:56:11.848" endtime="20201029 12:56:11.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.856" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:56:11.855" endtime="20201029 12:56:11.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.858" level="INFO">VALUE: [3.066600000000211e-05, 3.068000000000168e-05, 3.067999999999821e-05, 3.099999999999978e-05, 3.0208000000000318e-05, 3.087499999999965e-05, 3.0096999999999763e-05, 3.056900000000112e-05, 3.066700000000158e-05, 3.052800000000189e-05, 3.084700000000051e-05, 3.087499999999965e-05, 3.0347000000000013e-05, 3.095800000000107e-05, 3.079199999999824e-05, 3.105600000000153e-05, 3.0110999999999333e-05, 3.068100000000115e-05, 3.105599999999806e-05, 3.0250000000002497e-05, 3.079199999999824e-05, 3.098600000000021e-05, 3.065299999999854e-05, 3.0264000000002067e-05, 3.06249999999994e-05, 3.094500000000097e-05, 3.080600000000128e-05, 3.0485999999999708e-05, 3.099999999999978e-05, 3.0402999999998293e-05, 3.0513000000002843e-05, 3.063899999999897e-05, 3.072200000000039e-05, 3.0208000000000318e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.016599999999814e-05, 3.0388999999998723e-05, 3.0013999999998348e-05, 3.063900000000244e-05, 3.079199999999824e-05, 3.0249999999999028e-05, 3.056900000000112e-05, 3.072299999999986e-05, 3.072200000000039e-05, 3.079200000000171e-05, 3.072200000000039e-05, 3.074999999999953e-05, 3.05839999999967e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201029 12:56:11.857" endtime="20201029 12:56:11.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.852" endtime="20201029 12:56:11.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:11.867" endtime="20201029 12:56:11.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.865" endtime="20201029 12:56:11.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.861" endtime="20201029 12:56:11.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.505" endtime="20201029 12:56:11.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.505" endtime="20201029 12:56:11.889"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.898" endtime="20201029 12:56:11.915"></status>
</kw>
<msg timestamp="20201029 12:56:11.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:11.897" endtime="20201029 12:56:11.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:11.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:11.916" endtime="20201029 12:56:11.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.919" endtime="20201029 12:56:11.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.894" endtime="20201029 12:56:11.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.892" endtime="20201029 12:56:11.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:11.928" endtime="20201029 12:56:12.213"></status>
</kw>
<msg timestamp="20201029 12:56:12.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:11.926" endtime="20201029 12:56:12.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:12.218" endtime="20201029 12:56:12.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.226" endtime="20201029 12:56:12.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.924" endtime="20201029 12:56:12.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.922" endtime="20201029 12:56:12.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:12.232" level="INFO">${RESULT} = [{'diff': 3.154200000000246e-05}, {'diff': 3.191699999999936e-05}, {'diff': 3.11249999999999e-05}, {'diff': 3.184800000000099e-05}, {'diff': 3.1540999999999514e-05}, {'diff': 3.156999999999813e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:12.229" endtime="20201029 12:56:12.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:12.237" level="INFO">${ACCURACY} = {'diff': [3.154200000000246e-05, 3.191699999999936e-05, 3.11249999999999e-05, 3.184800000000099e-05, 3.1540999999999514e-05, 3.156999999999813e-05, 3.140300000000276e-05, 3.172299999999739e-05, 3.1832...</msg>
<status status="PASS" starttime="20201029 12:56:12.233" endtime="20201029 12:56:12.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.241" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:56:12.240" endtime="20201029 12:56:12.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.243" level="INFO">VALUE: [3.154200000000246e-05, 3.191699999999936e-05, 3.11249999999999e-05, 3.184800000000099e-05, 3.1540999999999514e-05, 3.156999999999813e-05, 3.140300000000276e-05, 3.172299999999739e-05, 3.1832999999998474e-05, 3.111100000000033e-05, 3.173599999999749e-05, 3.1554999999999084e-05, 3.122200000000089e-05, 3.197199999999817e-05, 3.148599999999724e-05, 3.197200000000164e-05, 3.166599999999964e-05, 3.148600000000071e-05, 3.136100000000058e-05, 3.184700000000151e-05, 3.131900000000187e-05, 3.154199999999899e-05, 3.154200000000246e-05, 3.193099999999893e-05, 3.1082999999997724e-05, 3.147199999999767e-05, 3.123600000000046e-05, 3.1263000000000124e-05, 3.138899999999972e-05, 3.16250000000004e-05, 3.132000000000135e-05, 3.109700000000076e-05, 3.150000000000028e-05, 3.138899999999972e-05, 3.172299999999739e-05, 3.187500000000065e-05, 3.115299999999904e-05, 3.1513000000000374e-05, 3.2068999999999154e-05, 3.190200000000032e-05, 3.111100000000033e-05, 3.115200000000304e-05, 3.161100000000083e-05, 3.140299999999929e-05, 3.2041000000000014e-05, 3.191699999999936e-05, 3.19579999999986e-05, 3.167999999999921e-05, 3.1082999999997724e-05, 3.188900000000022e-05]</msg>
<status status="PASS" starttime="20201029 12:56:12.242" endtime="20201029 12:56:12.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.237" endtime="20201029 12:56:12.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:12.249" endtime="20201029 12:56:12.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.248" endtime="20201029 12:56:12.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.247" endtime="20201029 12:56:12.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.890" endtime="20201029 12:56:12.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:11.890" endtime="20201029 12:56:12.270"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.279" endtime="20201029 12:56:12.295"></status>
</kw>
<msg timestamp="20201029 12:56:12.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:12.277" endtime="20201029 12:56:12.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:12.296" endtime="20201029 12:56:12.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.299" endtime="20201029 12:56:12.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.275" endtime="20201029 12:56:12.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.273" endtime="20201029 12:56:12.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.308" endtime="20201029 12:56:12.595"></status>
</kw>
<msg timestamp="20201029 12:56:12.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:12.306" endtime="20201029 12:56:12.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:12.599" endtime="20201029 12:56:12.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.607" endtime="20201029 12:56:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.304" endtime="20201029 12:56:12.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.302" endtime="20201029 12:56:12.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:12.614" level="INFO">${RESULT} = [{'diff': 3.279200000000024e-05}, {'diff': 3.218099999999918e-05}, {'diff': 3.273600000000196e-05}, {'diff': 3.21250000000009e-05}, {'diff': 3.216699999999961e-05}, {'diff': 3.231999999999888e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:12.610" endtime="20201029 12:56:12.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:12.619" level="INFO">${ACCURACY} = {'diff': [3.279200000000024e-05, 3.218099999999918e-05, 3.273600000000196e-05, 3.21250000000009e-05, 3.216699999999961e-05, 3.231999999999888e-05, 3.229199999999974e-05, 3.232000000000235e-05, 3.25280...</msg>
<status status="PASS" starttime="20201029 12:56:12.615" endtime="20201029 12:56:12.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.623" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:56:12.622" endtime="20201029 12:56:12.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.625" level="INFO">VALUE: [3.279200000000024e-05, 3.218099999999918e-05, 3.273600000000196e-05, 3.21250000000009e-05, 3.216699999999961e-05, 3.231999999999888e-05, 3.229199999999974e-05, 3.232000000000235e-05, 3.252800000000042e-05, 3.273599999999849e-05, 3.274999999999806e-05, 3.276399999999763e-05, 3.220899999999832e-05, 3.274999999999806e-05, 3.269499999999925e-05, 3.2304999999999834e-05, 3.274999999999806e-05, 3.223600000000146e-05, 3.2277000000000694e-05, 3.291600000000089e-05, 3.277800000000067e-05, 3.2805000000000334e-05, 3.237500000000115e-05, 3.276399999999763e-05, 3.269399999999978e-05, 3.2304999999999834e-05, 3.211100000000133e-05, 3.223600000000146e-05, 3.2068999999999154e-05, 3.293099999999993e-05, 3.258400000000217e-05, 3.268099999999968e-05, 3.286100000000208e-05, 3.230600000000278e-05, 3.29579999999996e-05, 3.291700000000036e-05, 3.305600000000006e-05, 3.220899999999832e-05, 3.25700000000026e-05, 3.2360999999998113e-05, 3.223700000000093e-05, 3.24310000000029e-05, 3.22640000000006e-05, 3.269399999999978e-05, 3.223700000000093e-05, 3.220899999999832e-05, 3.2860999999998614e-05, 3.244399999999953e-05, 3.256900000000312e-05, 3.3055000000000584e-05]</msg>
<status status="PASS" starttime="20201029 12:56:12.624" endtime="20201029 12:56:12.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.619" endtime="20201029 12:56:12.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:12.630" endtime="20201029 12:56:12.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.629" endtime="20201029 12:56:12.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.628" endtime="20201029 12:56:12.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.271" endtime="20201029 12:56:12.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.270" endtime="20201029 12:56:12.651"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.660" endtime="20201029 12:56:12.676"></status>
</kw>
<msg timestamp="20201029 12:56:12.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:12.658" endtime="20201029 12:56:12.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:12.677" endtime="20201029 12:56:12.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.680" endtime="20201029 12:56:12.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.656" endtime="20201029 12:56:12.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.654" endtime="20201029 12:56:12.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.689" endtime="20201029 12:56:12.979"></status>
</kw>
<msg timestamp="20201029 12:56:12.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:12.687" endtime="20201029 12:56:12.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:12.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:12.983" endtime="20201029 12:56:12.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:12.991" endtime="20201029 12:56:12.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.684" endtime="20201029 12:56:12.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.683" endtime="20201029 12:56:12.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:12.997" level="INFO">${RESULT} = [{'diff': 3.395900000000007e-05}, {'diff': 3.363799999999903e-05}, {'diff': 3.375000000000253e-05}, {'diff': 3.404200000000149e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.318000000000071e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:12.994" endtime="20201029 12:56:12.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:13.002" level="INFO">${ACCURACY} = {'diff': [3.395900000000007e-05, 3.363799999999903e-05, 3.375000000000253e-05, 3.404200000000149e-05, 3.3583000000000224e-05, 3.318000000000071e-05, 3.404199999999802e-05, 3.368000000000121e-05, 3.401...</msg>
<status status="PASS" starttime="20201029 12:56:12.998" endtime="20201029 12:56:13.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.006" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:56:13.005" endtime="20201029 12:56:13.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.009" level="INFO">VALUE: [3.395900000000007e-05, 3.363799999999903e-05, 3.375000000000253e-05, 3.404200000000149e-05, 3.3583000000000224e-05, 3.318000000000071e-05, 3.404199999999802e-05, 3.368000000000121e-05, 3.401399999999888e-05, 3.323600000000246e-05, 3.31250000000019e-05, 3.340300000000129e-05, 3.3138999999998e-05, 3.343000000000096e-05, 3.319400000000028e-05, 3.39580000000006e-05, 3.315300000000104e-05, 3.386100000000308e-05, 3.3110999999998864e-05, 3.372199999999992e-05, 3.357000000000013e-05, 3.398599999999974e-05, 3.361100000000283e-05, 3.341700000000086e-05, 3.377800000000167e-05, 3.3874999999999184e-05, 3.320899999999932e-05, 3.386100000000308e-05, 3.39450000000005e-05, 3.363900000000197e-05, 3.36250000000024e-05, 3.4026999999998975e-05, 3.399999999999931e-05, 3.318000000000071e-05, 3.36380000000025e-05, 3.323600000000246e-05, 3.3526999999998475e-05, 3.398599999999974e-05, 3.370800000000035e-05, 3.394399999999756e-05, 3.340299999999782e-05, 3.3874999999999184e-05, 3.3791000000001764e-05, 3.3346999999999544e-05, 3.4069000000001154e-05, 3.3596999999999794e-05, 3.323599999999899e-05, 3.341700000000086e-05, 3.402800000000192e-05, 3.373599999999949e-05]</msg>
<status status="PASS" starttime="20201029 12:56:13.007" endtime="20201029 12:56:13.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.003" endtime="20201029 12:56:13.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:13.014" endtime="20201029 12:56:13.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.012" endtime="20201029 12:56:13.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.011" endtime="20201029 12:56:13.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.652" endtime="20201029 12:56:13.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:12.652" endtime="20201029 12:56:13.034"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.043" endtime="20201029 12:56:13.060"></status>
</kw>
<msg timestamp="20201029 12:56:13.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:13.041" endtime="20201029 12:56:13.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:13.062" endtime="20201029 12:56:13.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.064" endtime="20201029 12:56:13.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.039" endtime="20201029 12:56:13.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.037" endtime="20201029 12:56:13.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.073" endtime="20201029 12:56:13.357"></status>
</kw>
<msg timestamp="20201029 12:56:13.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020952083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:13.071" endtime="20201029 12:56:13.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020952083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020986375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:13.361" endtime="20201029 12:56:13.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.369" endtime="20201029 12:56:13.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.069" endtime="20201029 12:56:13.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.067" endtime="20201029 12:56:13.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:13.376" level="INFO">${RESULT} = [{'diff': 3.429200000000174e-05}, {'diff': 3.422200000000042e-05}, {'diff': 3.4638999999999504e-05}, {'diff': 3.481999999999791e-05}, {'diff': 3.493099999999846e-05}, {'diff': 3.473600000000049e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:13.373" endtime="20201029 12:56:13.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:13.380" level="INFO">${ACCURACY} = {'diff': [3.429200000000174e-05, 3.422200000000042e-05, 3.4638999999999504e-05, 3.481999999999791e-05, 3.493099999999846e-05, 3.473600000000049e-05, 3.493099999999846e-05, 3.4138999999999003e-05, 3.47...</msg>
<status status="PASS" starttime="20201029 12:56:13.377" endtime="20201029 12:56:13.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.384" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:56:13.383" endtime="20201029 12:56:13.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.387" level="INFO">VALUE: [3.429200000000174e-05, 3.422200000000042e-05, 3.4638999999999504e-05, 3.481999999999791e-05, 3.493099999999846e-05, 3.473600000000049e-05, 3.493099999999846e-05, 3.4138999999999003e-05, 3.47779999999992e-05, 3.484799999999705e-05, 3.434800000000002e-05, 3.418100000000118e-05, 3.411199999999934e-05, 3.444499999999753e-05, 3.475000000000006e-05, 3.4861000000000614e-05, 3.4763000000000155e-05, 3.4875000000000184e-05, 3.452800000000242e-05, 3.4833000000001474e-05, 3.466600000000264e-05, 3.4611000000000364e-05, 3.466599999999917e-05, 3.4347000000000544e-05, 3.423599999999999e-05, 3.50979999999973e-05, 3.504199999999902e-05, 3.479200000000224e-05, 3.4361000000000114e-05, 3.4361000000000114e-05, 3.4347000000000544e-05, 3.49719999999977e-05, 3.498599999999727e-05, 3.448600000000024e-05, 3.4138999999999003e-05, 3.4860999999997144e-05, 3.4124999999999434e-05, 3.4624999999999934e-05, 3.409799999999977e-05, 3.469400000000178e-05, 3.494399999999856e-05, 3.455599999999809e-05, 3.470800000000135e-05, 3.440200000000282e-05, 3.463800000000003e-05, 3.4374999999999684e-05, 3.424999999999956e-05, 3.4624999999999934e-05, 3.4818999999998435e-05, 3.4347000000000544e-05]</msg>
<status status="PASS" starttime="20201029 12:56:13.385" endtime="20201029 12:56:13.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.381" endtime="20201029 12:56:13.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:13.393" endtime="20201029 12:56:13.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.391" endtime="20201029 12:56:13.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.390" endtime="20201029 12:56:13.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.035" endtime="20201029 12:56:13.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.035" endtime="20201029 12:56:13.413"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.422" endtime="20201029 12:56:13.438"></status>
</kw>
<msg timestamp="20201029 12:56:13.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:13.420" endtime="20201029 12:56:13.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:13.439" endtime="20201029 12:56:13.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.442" endtime="20201029 12:56:13.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.418" endtime="20201029 12:56:13.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.416" endtime="20201029 12:56:13.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.450" endtime="20201029 12:56:13.736"></status>
</kw>
<msg timestamp="20201029 12:56:13.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:13.449" endtime="20201029 12:56:13.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:13.740" endtime="20201029 12:56:13.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.749" endtime="20201029 12:56:13.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.446" endtime="20201029 12:56:13.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.445" endtime="20201029 12:56:13.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:13.755" level="INFO">${RESULT} = [{'diff': 3.598600000000174e-05}, {'diff': 3.5860999999998144e-05}, {'diff': 3.5861000000001614e-05}, {'diff': 3.580600000000281e-05}, {'diff': 3.5874999999997714e-05}, {'diff': 3.525000000000056e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:13.752" endtime="20201029 12:56:13.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:13.760" level="INFO">${ACCURACY} = {'diff': [3.598600000000174e-05, 3.5860999999998144e-05, 3.5861000000001614e-05, 3.580600000000281e-05, 3.5874999999997714e-05, 3.525000000000056e-05, 3.529199999999927e-05, 3.5874999999997714e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:56:13.756" endtime="20201029 12:56:13.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.765" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:56:13.764" endtime="20201029 12:56:13.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.768" level="INFO">VALUE: [3.598600000000174e-05, 3.5860999999998144e-05, 3.5861000000001614e-05, 3.580600000000281e-05, 3.5874999999997714e-05, 3.525000000000056e-05, 3.529199999999927e-05, 3.5874999999997714e-05, 3.519500000000175e-05, 3.5097000000001294e-05, 3.567999999999974e-05, 3.5568999999999185e-05, 3.5861000000001614e-05, 3.573600000000149e-05, 3.566600000000017e-05, 3.52779999999997e-05, 3.5290999999999795e-05, 3.551400000000038e-05, 3.5402999999999823e-05, 3.5360999999997644e-05, 3.569400000000278e-05, 3.5903000000000324e-05, 3.576400000000063e-05, 3.5125000000000434e-05, 3.5653000000000074e-05, 3.584799999999805e-05, 3.523600000000099e-05, 3.5333000000001974e-05, 3.5332999999998504e-05, 3.5639000000000504e-05, 3.5625000000000934e-05, 3.594499999999903e-05, 3.51520000000001e-05, 3.6055000000000115e-05, 3.595900000000207e-05, 3.572199999999845e-05, 3.522300000000089e-05, 3.570899999999835e-05, 3.5277000000000225e-05, 3.573599999999802e-05, 3.523600000000099e-05, 3.5111000000000864e-05, 3.5861000000001614e-05, 3.591600000000042e-05, 3.5346999999998074e-05, 3.516599999999967e-05, 3.544399999999906e-05, 3.5096999999997824e-05, 3.570799999999888e-05, 3.515300000000304e-05]</msg>
<status status="PASS" starttime="20201029 12:56:13.766" endtime="20201029 12:56:13.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.761" endtime="20201029 12:56:13.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:13.773" endtime="20201029 12:56:13.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.772" endtime="20201029 12:56:13.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.770" endtime="20201029 12:56:13.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.414" endtime="20201029 12:56:13.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.414" endtime="20201029 12:56:13.794"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.803" endtime="20201029 12:56:13.818"></status>
</kw>
<msg timestamp="20201029 12:56:13.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:13.801" endtime="20201029 12:56:13.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:13.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:13.820" endtime="20201029 12:56:13.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.822" endtime="20201029 12:56:13.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.799" endtime="20201029 12:56:13.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.797" endtime="20201029 12:56:13.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:13.831" endtime="20201029 12:56:14.118"></status>
</kw>
<msg timestamp="20201029 12:56:14.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:13.830" endtime="20201029 12:56:14.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020056264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:14.122" endtime="20201029 12:56:14.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.130" endtime="20201029 12:56:14.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.827" endtime="20201029 12:56:14.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.826" endtime="20201029 12:56:14.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:14.137" level="INFO">${RESULT} = [{'diff': 3.6125000000001434e-05}, {'diff': 3.6874999999998714e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.6138999999997534e-05}, {'diff': 3.676400000000163e-05}, {'diff': 3.6888999999998284e-0...</msg>
<status status="PASS" starttime="20201029 12:56:14.134" endtime="20201029 12:56:14.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:14.141" level="INFO">${ACCURACY} = {'diff': [3.6125000000001434e-05, 3.6874999999998714e-05, 3.6596999999999325e-05, 3.6138999999997534e-05, 3.676400000000163e-05, 3.6888999999998284e-05, 3.634800000000202e-05, 3.6389000000001254e-05, ...</msg>
<status status="PASS" starttime="20201029 12:56:14.138" endtime="20201029 12:56:14.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.145" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:56:14.144" endtime="20201029 12:56:14.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.148" level="INFO">VALUE: [3.6125000000001434e-05, 3.6874999999998714e-05, 3.6596999999999325e-05, 3.6138999999997534e-05, 3.676400000000163e-05, 3.6888999999998284e-05, 3.634800000000202e-05, 3.6389000000001254e-05, 3.675000000000206e-05, 3.693000000000099e-05, 3.676400000000163e-05, 3.6333000000002974e-05, 3.618000000000024e-05, 3.619399999999981e-05, 3.6652999999997604e-05, 3.620799999999938e-05, 3.6111000000001864e-05, 3.668000000000074e-05, 3.6569000000000185e-05, 3.669400000000031e-05, 3.701399999999841e-05, 3.629200000000027e-05, 3.679200000000077e-05, 3.669400000000031e-05, 3.6374999999998214e-05, 3.6360999999998644e-05, 3.674999999999859e-05, 3.648600000000224e-05, 3.6874999999998714e-05, 3.631999999999941e-05, 3.6403000000000824e-05, 3.6931000000000463e-05, 3.6652999999997604e-05, 3.680600000000034e-05, 3.6833000000000005e-05, 3.622299999999842e-05, 3.6860999999999144e-05, 3.6347000000002544e-05, 3.6610999999998894e-05, 3.666600000000117e-05, 3.626400000000113e-05, 3.683399999999948e-05, 3.7055000000001115e-05, 3.6639000000001504e-05, 3.702800000000145e-05, 3.629200000000027e-05, 3.679200000000077e-05, 3.6153000000000574e-05, 3.670799999999988e-05, 3.6903000000001324e-05]</msg>
<status status="PASS" starttime="20201029 12:56:14.147" endtime="20201029 12:56:14.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.142" endtime="20201029 12:56:14.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:14.153" endtime="20201029 12:56:14.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.151" endtime="20201029 12:56:14.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.150" endtime="20201029 12:56:14.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.795" endtime="20201029 12:56:14.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:13.795" endtime="20201029 12:56:14.174"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.183" endtime="20201029 12:56:14.199"></status>
</kw>
<msg timestamp="20201029 12:56:14.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:14.181" endtime="20201029 12:56:14.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:14.200" endtime="20201029 12:56:14.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.203" endtime="20201029 12:56:14.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.178" endtime="20201029 12:56:14.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.176" endtime="20201029 12:56:14.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.212" endtime="20201029 12:56:14.499"></status>
</kw>
<msg timestamp="20201029 12:56:14.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020632625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020669958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:14.210" endtime="20201029 12:56:14.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020632625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020669958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:14.503" endtime="20201029 12:56:14.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.512" endtime="20201029 12:56:14.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.208" endtime="20201029 12:56:14.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.206" endtime="20201029 12:56:14.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:14.518" level="INFO">${RESULT} = [{'diff': 3.7332999999997035e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.7124999999998964e-05}, {'diff': 3.7597000000000325e-05}, {'diff': 3.752799999999848e-05}, {'diff': 3.7347000000000075e-0...</msg>
<status status="PASS" starttime="20201029 12:56:14.515" endtime="20201029 12:56:14.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:14.522" level="INFO">${ACCURACY} = {'diff': [3.7332999999997035e-05, 3.7652999999998604e-05, 3.7124999999998964e-05, 3.7597000000000325e-05, 3.752799999999848e-05, 3.7347000000000075e-05, 3.7861000000000145e-05, 3.749999999999934e-05, ...</msg>
<status status="PASS" starttime="20201029 12:56:14.519" endtime="20201029 12:56:14.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.527" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:56:14.526" endtime="20201029 12:56:14.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.529" level="INFO">VALUE: [3.7332999999997035e-05, 3.7652999999998604e-05, 3.7124999999998964e-05, 3.7597000000000325e-05, 3.752799999999848e-05, 3.7347000000000075e-05, 3.7861000000000145e-05, 3.749999999999934e-05, 3.77919999999983e-05, 3.724999999999909e-05, 3.754200000000152e-05, 3.7624999999999464e-05, 3.752799999999848e-05, 3.7403000000001824e-05, 3.755600000000109e-05, 3.7124999999998964e-05, 3.729200000000127e-05, 3.7374999999999214e-05, 3.726399999999866e-05, 3.74590000000001e-05, 3.7930999999997994e-05, 3.727799999999823e-05, 3.799999999999984e-05, 3.74720000000002e-05, 3.7819000000001435e-05, 3.718000000000124e-05, 3.7347000000000075e-05, 3.7790999999998826e-05, 3.745800000000063e-05, 3.802799999999898e-05, 3.745800000000063e-05, 3.7096999999999825e-05, 3.801399999999941e-05, 3.7069000000000685e-05, 3.755599999999762e-05, 3.7861000000000145e-05, 3.805600000000159e-05, 3.7944999999997564e-05, 3.7583000000000755e-05, 3.751400000000238e-05, 3.7181000000000713e-05, 3.730600000000084e-05, 3.74720000000002e-05, 3.797300000000017e-05, 3.720900000000332e-05, 3.747299999999967e-05, 3.727799999999823e-05, 3.802799999999898e-05, 3.8124999999999964e-05, 3.725000000000256e-05]</msg>
<status status="PASS" starttime="20201029 12:56:14.528" endtime="20201029 12:56:14.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.523" endtime="20201029 12:56:14.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:14.535" endtime="20201029 12:56:14.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.533" endtime="20201029 12:56:14.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.532" endtime="20201029 12:56:14.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.175" endtime="20201029 12:56:14.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.174" endtime="20201029 12:56:14.556"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.564" endtime="20201029 12:56:14.580"></status>
</kw>
<msg timestamp="20201029 12:56:14.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:14.563" endtime="20201029 12:56:14.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:14.581" endtime="20201029 12:56:14.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.584" endtime="20201029 12:56:14.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.560" endtime="20201029 12:56:14.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.558" endtime="20201029 12:56:14.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.593" endtime="20201029 12:56:14.879"></status>
</kw>
<msg timestamp="20201029 12:56:14.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:14.591" endtime="20201029 12:56:14.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:14.883" endtime="20201029 12:56:14.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.891" endtime="20201029 12:56:14.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.589" endtime="20201029 12:56:14.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.587" endtime="20201029 12:56:14.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:14.898" level="INFO">${RESULT} = [{'diff': 3.829200000000227e-05}, {'diff': 3.881999999999844e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.8889000000000284e-05}, {'diff': 3.904199999999955e-05}, {'diff': 3.830599999999837e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:14.894" endtime="20201029 12:56:14.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:14.903" level="INFO">${ACCURACY} = {'diff': [3.829200000000227e-05, 3.881999999999844e-05, 3.8875000000000715e-05, 3.8889000000000284e-05, 3.904199999999955e-05, 3.830599999999837e-05, 3.8166999999998674e-05, 3.8194999999997814e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:56:14.899" endtime="20201029 12:56:14.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.907" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:56:14.906" endtime="20201029 12:56:14.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.910" level="INFO">VALUE: [3.829200000000227e-05, 3.881999999999844e-05, 3.8875000000000715e-05, 3.8889000000000284e-05, 3.904199999999955e-05, 3.830599999999837e-05, 3.8166999999998674e-05, 3.8194999999997814e-05, 3.8167000000002144e-05, 3.8375000000000214e-05, 3.822200000000095e-05, 3.8290999999999326e-05, 3.9027000000000506e-05, 3.84720000000012e-05, 3.8361000000000645e-05, 3.875000000000059e-05, 3.852799999999948e-05, 3.904199999999955e-05, 3.8124999999999964e-05, 3.8346999999997605e-05, 3.826399999999966e-05, 3.8431000000001964e-05, 3.8833000000002005e-05, 3.825000000000009e-05, 3.8680999999998744e-05, 3.8930999999998994e-05, 3.8097000000000825e-05, 3.9012999999997466e-05, 3.858400000000123e-05, 3.8459000000001103e-05, 3.8388999999999784e-05, 3.799999999999984e-05, 3.8709000000001353e-05, 3.858400000000123e-05, 3.840199999999988e-05, 3.8804999999999396e-05, 3.8582999999998285e-05, 3.844399999999859e-05, 3.893000000000299e-05, 3.8388999999999784e-05, 3.8777000000000256e-05, 3.8889000000000284e-05, 3.8832999999998535e-05, 3.86659999999997e-05, 3.832000000000141e-05, 3.8889000000000284e-05, 3.8930999999998994e-05, 3.8639000000000034e-05, 3.8597000000001325e-05, 3.89720000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:56:14.908" endtime="20201029 12:56:14.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.904" endtime="20201029 12:56:14.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:14.915" endtime="20201029 12:56:14.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.913" endtime="20201029 12:56:14.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.912" endtime="20201029 12:56:14.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.557" endtime="20201029 12:56:14.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.556" endtime="20201029 12:56:14.935"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.944" endtime="20201029 12:56:14.960"></status>
</kw>
<msg timestamp="20201029 12:56:14.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:14.943" endtime="20201029 12:56:14.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:14.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:14.962" endtime="20201029 12:56:14.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.964" endtime="20201029 12:56:14.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.940" endtime="20201029 12:56:14.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.938" endtime="20201029 12:56:14.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:14.973" endtime="20201029 12:56:15.261"></status>
</kw>
<msg timestamp="20201029 12:56:15.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:14.972" endtime="20201029 12:56:15.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:15.266" endtime="20201029 12:56:15.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.274" endtime="20201029 12:56:15.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.969" endtime="20201029 12:56:15.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.967" endtime="20201029 12:56:15.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:15.280" level="INFO">${RESULT} = [{'diff': 3.958400000000223e-05}, {'diff': 3.97920000000003e-05}, {'diff': 3.9930999999999994e-05}, {'diff': 3.980599999999987e-05}, {'diff': 3.993000000000052e-05}, {'diff': 3.923700000000099e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:15.277" endtime="20201029 12:56:15.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:15.284" level="INFO">${ACCURACY} = {'diff': [3.958400000000223e-05, 3.97920000000003e-05, 3.9930999999999994e-05, 3.980599999999987e-05, 3.993000000000052e-05, 3.923700000000099e-05, 3.908400000000173e-05, 3.9653000000000604e-05, 4.000...</msg>
<status status="PASS" starttime="20201029 12:56:15.281" endtime="20201029 12:56:15.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.289" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:56:15.288" endtime="20201029 12:56:15.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.291" level="INFO">VALUE: [3.958400000000223e-05, 3.97920000000003e-05, 3.9930999999999994e-05, 3.980599999999987e-05, 3.993000000000052e-05, 3.923700000000099e-05, 3.908400000000173e-05, 3.9653000000000604e-05, 4.000000000000184e-05, 3.970800000000288e-05, 3.915200000000063e-05, 3.9680999999999744e-05, 3.995799999999966e-05, 3.972199999999898e-05, 3.9555000000000146e-05, 3.969399999999984e-05, 3.9694999999999314e-05, 3.9153000000000104e-05, 3.9680999999999744e-05, 3.9930999999999994e-05, 3.995799999999966e-05, 3.9860999999998675e-05, 3.9874999999998245e-05, 3.995799999999966e-05, 3.974999999999812e-05, 3.9222999999997954e-05, 3.974999999999812e-05, 3.9403000000000354e-05, 3.9903000000000854e-05, 3.9153000000000104e-05, 3.9403000000000354e-05, 3.9874999999998245e-05, 3.9416999999999924e-05, 3.9846999999999105e-05, 4.001400000000141e-05, 3.9611000000001895e-05, 3.9527000000001006e-05, 3.9875000000001715e-05, 3.9375000000001215e-05, 3.9361000000001645e-05, 3.9346999999998605e-05, 4.004200000000055e-05, 3.998600000000227e-05, 3.9096999999998355e-05, 3.9332999999999035e-05, 3.973600000000202e-05, 3.980599999999987e-05, 3.9625000000001465e-05, 3.981999999999944e-05, 3.9846999999999105e-05]</msg>
<status status="PASS" starttime="20201029 12:56:15.290" endtime="20201029 12:56:15.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.285" endtime="20201029 12:56:15.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:15.297" endtime="20201029 12:56:15.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.295" endtime="20201029 12:56:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.294" endtime="20201029 12:56:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.936" endtime="20201029 12:56:15.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:14.936" endtime="20201029 12:56:15.317"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.328" endtime="20201029 12:56:15.346"></status>
</kw>
<msg timestamp="20201029 12:56:15.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:15.326" endtime="20201029 12:56:15.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:15.347" endtime="20201029 12:56:15.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.350" endtime="20201029 12:56:15.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.322" endtime="20201029 12:56:15.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.320" endtime="20201029 12:56:15.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.359" endtime="20201029 12:56:15.645"></status>
</kw>
<msg timestamp="20201029 12:56:15.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:15.357" endtime="20201029 12:56:15.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022357194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:15.649" endtime="20201029 12:56:15.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.658" endtime="20201029 12:56:15.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.355" endtime="20201029 12:56:15.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.353" endtime="20201029 12:56:15.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:15.664" level="INFO">${RESULT} = [{'diff': 4.009799999999883e-05}, {'diff': 4.023599999999905e-05}, {'diff': 4.0166999999997205e-05}, {'diff': 4.0208999999999384e-05}, {'diff': 4.074999999999912e-05}, {'diff': 4.1026999999999036e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:15.661" endtime="20201029 12:56:15.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:15.668" level="INFO">${ACCURACY} = {'diff': [4.009799999999883e-05, 4.023599999999905e-05, 4.0166999999997205e-05, 4.0208999999999384e-05, 4.074999999999912e-05, 4.1026999999999036e-05, 4.0153000000001104e-05, 4.0388999999998315e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:56:15.665" endtime="20201029 12:56:15.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.673" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:56:15.672" endtime="20201029 12:56:15.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.675" level="INFO">VALUE: [4.009799999999883e-05, 4.023599999999905e-05, 4.0166999999997205e-05, 4.0208999999999384e-05, 4.074999999999912e-05, 4.1026999999999036e-05, 4.0153000000001104e-05, 4.0388999999998315e-05, 4.069400000000084e-05, 4.0305000000000896e-05, 4.0374999999998745e-05, 4.101399999999894e-05, 4.0596999999999855e-05, 4.0346999999999605e-05, 4.0346999999999605e-05, 4.0931000000000994e-05, 4.0708999999999884e-05, 4.09859999999998e-05, 4.0402999999997885e-05, 4.104200000000155e-05, 4.057000000000019e-05, 4.077799999999826e-05, 4.0959000000000134e-05, 4.034799999999908e-05, 4.0903000000001855e-05, 4.0945000000000564e-05, 4.0652999999998135e-05, 4.080600000000087e-05, 4.041599999999798e-05, 4.0139000000001535e-05, 4.06660000000017e-05, 4.01660000000012e-05, 4.0888999999998815e-05, 4.0110999999998925e-05, 4.0791000000001826e-05, 4.0403000000001354e-05, 4.076400000000216e-05, 4.0931000000000994e-05, 4.019400000000034e-05, 4.0360999999999175e-05, 4.052799999999801e-05, 4.073599999999955e-05, 4.104199999999808e-05, 4.049999999999887e-05, 4.0945000000000564e-05, 4.0973000000003174e-05, 4.065199999999866e-05, 4.0208999999999384e-05, 4.0374999999998745e-05, 4.1026999999999036e-05]</msg>
<status status="PASS" starttime="20201029 12:56:15.674" endtime="20201029 12:56:15.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.669" endtime="20201029 12:56:15.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:15.681" endtime="20201029 12:56:15.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.679" endtime="20201029 12:56:15.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.678" endtime="20201029 12:56:15.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.318" endtime="20201029 12:56:15.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.318" endtime="20201029 12:56:15.702"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.710" endtime="20201029 12:56:15.727"></status>
</kw>
<msg timestamp="20201029 12:56:15.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:15.709" endtime="20201029 12:56:15.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:15.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:15.729" endtime="20201029 12:56:15.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.731" endtime="20201029 12:56:15.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.706" endtime="20201029 12:56:15.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.704" endtime="20201029 12:56:15.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:15.740" endtime="20201029 12:56:16.025"></status>
</kw>
<msg timestamp="20201029 12:56:16.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:15.739" endtime="20201029 12:56:16.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019938597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:16.029" endtime="20201029 12:56:16.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.037" endtime="20201029 12:56:16.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.736" endtime="20201029 12:56:16.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.735" endtime="20201029 12:56:16.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:16.044" level="INFO">${RESULT} = [{'diff': 4.201399999999994e-05}, {'diff': 4.169399999999837e-05}, {'diff': 4.1611000000000425e-05}, {'diff': 4.105600000000112e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.1723000000000454e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:16.041" endtime="20201029 12:56:16.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:16.049" level="INFO">${ACCURACY} = {'diff': [4.201399999999994e-05, 4.169399999999837e-05, 4.1611000000000425e-05, 4.105600000000112e-05, 4.202799999999951e-05, 4.1723000000000454e-05, 4.1902999999999385e-05, 4.19860000000008e-05, 4.14...</msg>
<status status="PASS" starttime="20201029 12:56:16.045" endtime="20201029 12:56:16.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.054" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:56:16.053" endtime="20201029 12:56:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.056" level="INFO">VALUE: [4.201399999999994e-05, 4.169399999999837e-05, 4.1611000000000425e-05, 4.105600000000112e-05, 4.202799999999951e-05, 4.1723000000000454e-05, 4.1902999999999385e-05, 4.19860000000008e-05, 4.1402999999998885e-05, 4.1903000000002855e-05, 4.129199999999833e-05, 4.1819000000001966e-05, 4.1181000000001244e-05, 4.1152999999998635e-05, 4.109799999999983e-05, 4.2054999999999176e-05, 4.1791000000002826e-05, 4.19999999999969e-05, 4.1333000000001036e-05, 4.116599999999873e-05, 4.1375000000003215e-05, 4.175000000000012e-05, 4.120799999999744e-05, 4.200000000000037e-05, 4.18059999999984e-05, 4.197200000000123e-05, 4.1097000000000355e-05, 4.1916999999998955e-05, 4.1695000000001314e-05, 4.200000000000037e-05, 4.1638999999999565e-05, 4.1195000000000814e-05, 4.1416999999998455e-05, 4.19860000000008e-05, 4.1973000000000704e-05, 4.1167000000001674e-05, 4.108400000000026e-05, 4.2054999999999176e-05, 4.17920000000023e-05, 4.120800000000091e-05, 4.151399999999944e-05, 4.170800000000141e-05, 4.1833000000001536e-05, 4.175000000000012e-05, 4.202799999999951e-05, 4.1611000000000425e-05, 4.16799999999988e-05, 4.200000000000037e-05, 4.1110999999999925e-05, 4.120800000000091e-05]</msg>
<status status="PASS" starttime="20201029 12:56:16.055" endtime="20201029 12:56:16.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.050" endtime="20201029 12:56:16.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:16.061" endtime="20201029 12:56:16.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.060" endtime="20201029 12:56:16.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.058" endtime="20201029 12:56:16.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.703" endtime="20201029 12:56:16.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:15.702" endtime="20201029 12:56:16.082"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.091" endtime="20201029 12:56:16.107"></status>
</kw>
<msg timestamp="20201029 12:56:16.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:16.089" endtime="20201029 12:56:16.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:16.108" endtime="20201029 12:56:16.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.111" endtime="20201029 12:56:16.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.086" endtime="20201029 12:56:16.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.084" endtime="20201029 12:56:16.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.120" endtime="20201029 12:56:16.408"></status>
</kw>
<msg timestamp="20201029 12:56:16.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:16.118" endtime="20201029 12:56:16.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:16.412" endtime="20201029 12:56:16.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.420" endtime="20201029 12:56:16.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.116" endtime="20201029 12:56:16.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.114" endtime="20201029 12:56:16.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:16.427" level="INFO">${RESULT} = [{'diff': 4.2333000000002036e-05}, {'diff': 4.269399999999937e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.2625000000000995e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.28059999999994e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:16.423" endtime="20201029 12:56:16.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:16.431" level="INFO">${ACCURACY} = {'diff': [4.2333000000002036e-05, 4.269399999999937e-05, 4.276400000000069e-05, 4.2625000000000995e-05, 4.304200000000008e-05, 4.28059999999994e-05, 4.274999999999765e-05, 4.229199999999933e-05, 4.283...</msg>
<status status="PASS" starttime="20201029 12:56:16.428" endtime="20201029 12:56:16.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.435" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:56:16.434" endtime="20201029 12:56:16.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.438" level="INFO">VALUE: [4.2333000000002036e-05, 4.269399999999937e-05, 4.276400000000069e-05, 4.2625000000000995e-05, 4.304200000000008e-05, 4.28059999999994e-05, 4.274999999999765e-05, 4.229199999999933e-05, 4.283399999999854e-05, 4.28059999999994e-05, 4.2374999999997276e-05, 4.270799999999894e-05, 4.2166999999999205e-05, 4.2903000000000385e-05, 4.2639000000000565e-05, 4.2333000000002036e-05, 4.2332999999998566e-05, 4.2347000000001606e-05, 4.229199999999933e-05, 4.2653000000000135e-05, 4.275000000000112e-05, 4.2597000000001856e-05, 4.2416999999999455e-05, 4.223600000000105e-05, 4.2223000000000954e-05, 4.277800000000026e-05, 4.29860000000018e-05, 4.273600000000155e-05, 4.2195000000001814e-05, 4.251400000000044e-05, 4.2903000000000385e-05, 4.2708999999998415e-05, 4.276400000000069e-05, 4.2818999999999496e-05, 4.2791000000000357e-05, 4.2972999999998235e-05, 4.219399999999887e-05, 4.2125000000000495e-05, 4.276300000000122e-05, 4.3041000000000607e-05, 4.276400000000069e-05, 4.270799999999894e-05, 4.227799999999976e-05, 4.2666999999999705e-05, 4.302800000000051e-05, 4.2846999999998636e-05, 4.29860000000018e-05, 4.2903000000000385e-05, 4.270799999999894e-05, 4.2096999999997886e-05]</msg>
<status status="PASS" starttime="20201029 12:56:16.436" endtime="20201029 12:56:16.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.432" endtime="20201029 12:56:16.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:16.443" endtime="20201029 12:56:16.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.441" endtime="20201029 12:56:16.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.440" endtime="20201029 12:56:16.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.083" endtime="20201029 12:56:16.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.082" endtime="20201029 12:56:16.463"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.472" endtime="20201029 12:56:16.489"></status>
</kw>
<msg timestamp="20201029 12:56:16.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:16.470" endtime="20201029 12:56:16.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:16.491" endtime="20201029 12:56:16.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.493" endtime="20201029 12:56:16.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.468" endtime="20201029 12:56:16.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.466" endtime="20201029 12:56:16.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.503" endtime="20201029 12:56:16.794"></status>
</kw>
<msg timestamp="20201029 12:56:16.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020502306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02054625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:16.501" endtime="20201029 12:56:16.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020502306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02054625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:16.799" endtime="20201029 12:56:16.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.811" endtime="20201029 12:56:16.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.498" endtime="20201029 12:56:16.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.497" endtime="20201029 12:56:16.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:16.818" level="INFO">${RESULT} = [{'diff': 4.394399999999715e-05}, {'diff': 4.3888999999998346e-05}, {'diff': 4.3931000000000525e-05}, {'diff': 4.400000000000237e-05}, {'diff': 4.3874999999998776e-05}, {'diff': 4.3874999999998776e-05...</msg>
<status status="PASS" starttime="20201029 12:56:16.815" endtime="20201029 12:56:16.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:16.823" level="INFO">${ACCURACY} = {'diff': [4.394399999999715e-05, 4.3888999999998346e-05, 4.3931000000000525e-05, 4.400000000000237e-05, 4.3874999999998776e-05, 4.3874999999998776e-05, 4.3459000000002634e-05, 4.3403000000000885e-05, ...</msg>
<status status="PASS" starttime="20201029 12:56:16.819" endtime="20201029 12:56:16.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.827" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:56:16.826" endtime="20201029 12:56:16.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.830" level="INFO">VALUE: [4.394399999999715e-05, 4.3888999999998346e-05, 4.3931000000000525e-05, 4.400000000000237e-05, 4.3874999999998776e-05, 4.3874999999998776e-05, 4.3459000000002634e-05, 4.3403000000000885e-05, 4.377800000000126e-05, 4.3208999999998915e-05, 4.3694999999999845e-05, 4.334800000000208e-05, 4.3124999999998026e-05, 4.4069000000000746e-05, 4.352700000000154e-05, 4.397199999999976e-05, 4.4083000000000316e-05, 4.370799999999994e-05, 4.3625000000001996e-05, 4.379099999999789e-05, 4.4055000000001177e-05, 4.3167000000000205e-05, 4.404200000000108e-05, 4.345799999999969e-05, 4.3167000000000205e-05, 4.3582999999999816e-05, 4.3625000000001996e-05, 4.326399999999772e-05, 4.3152999999997166e-05, 4.3694999999999845e-05, 4.3139000000001065e-05, 4.3945000000000095e-05, 4.379200000000083e-05, 4.3874999999998776e-05, 4.3652999999997666e-05, 4.3180999999999775e-05, 4.391599999999801e-05, 4.3860999999999206e-05, 4.3847000000003106e-05, 4.376400000000169e-05, 4.3332999999999566e-05, 4.3305000000000426e-05, 4.377800000000126e-05, 4.393000000000105e-05, 4.3875000000002246e-05, 4.3153000000000635e-05, 4.326400000000119e-05, 4.3375000000001745e-05, 4.374999999999865e-05, 4.3332999999999566e-05]</msg>
<status status="PASS" starttime="20201029 12:56:16.828" endtime="20201029 12:56:16.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.824" endtime="20201029 12:56:16.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:16.835" endtime="20201029 12:56:16.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.834" endtime="20201029 12:56:16.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.833" endtime="20201029 12:56:16.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.464" endtime="20201029 12:56:16.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.464" endtime="20201029 12:56:16.856"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.865" endtime="20201029 12:56:16.881"></status>
</kw>
<msg timestamp="20201029 12:56:16.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:16.864" endtime="20201029 12:56:16.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:16.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:16.883" endtime="20201029 12:56:16.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.885" endtime="20201029 12:56:16.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.861" endtime="20201029 12:56:16.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.859" endtime="20201029 12:56:16.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:16.894" endtime="20201029 12:56:17.184"></status>
</kw>
<msg timestamp="20201029 12:56:17.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020046597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:16.893" endtime="20201029 12:56:17.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020046597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:17.189" endtime="20201029 12:56:17.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.197" endtime="20201029 12:56:17.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.890" endtime="20201029 12:56:17.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.888" endtime="20201029 12:56:17.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:17.203" level="INFO">${RESULT} = [{'diff': 4.504099999999914e-05}, {'diff': 4.408299999999685e-05}, {'diff': 4.4083000000000316e-05}, {'diff': 4.4180999999997306e-05}, {'diff': 4.4195000000000345e-05}, {'diff': 4.454199999999811e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:17.200" endtime="20201029 12:56:17.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:17.208" level="INFO">${ACCURACY} = {'diff': [4.504099999999914e-05, 4.408299999999685e-05, 4.4083000000000316e-05, 4.4180999999997306e-05, 4.4195000000000345e-05, 4.454199999999811e-05, 4.504200000000208e-05, 4.423599999999958e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:56:17.204" endtime="20201029 12:56:17.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.213" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:56:17.212" endtime="20201029 12:56:17.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.215" level="INFO">VALUE: [4.504099999999914e-05, 4.408299999999685e-05, 4.4083000000000316e-05, 4.4180999999997306e-05, 4.4195000000000345e-05, 4.454199999999811e-05, 4.504200000000208e-05, 4.423599999999958e-05, 4.4666999999998236e-05, 4.4624999999999526e-05, 4.473600000000008e-05, 4.424999999999915e-05, 4.4903000000002385e-05, 4.480599999999793e-05, 4.433400000000004e-05, 4.492999999999858e-05, 4.426299999999925e-05, 4.424999999999915e-05, 4.4874999999999776e-05, 4.469400000000137e-05, 4.4152999999998166e-05, 4.427799999999829e-05, 4.424999999999915e-05, 4.4902999999998916e-05, 4.4153000000001635e-05, 4.454199999999811e-05, 4.48060000000014e-05, 4.422200000000001e-05, 4.423600000000305e-05, 4.423599999999958e-05, 4.4110999999999456e-05, 4.4459000000000165e-05, 4.4681000000001275e-05, 4.452800000000201e-05, 4.4124999999999026e-05, 4.457000000000072e-05, 4.441600000000198e-05, 4.4333000000000566e-05, 4.4361000000003176e-05, 4.498600000000033e-05, 4.458299999999735e-05, 4.493000000000205e-05, 4.4361000000003176e-05, 4.452800000000201e-05, 4.444399999999765e-05, 4.49999999999999e-05, 4.5111000000000456e-05, 4.4874999999999776e-05, 4.477800000000226e-05, 4.4569000000001247e-05]</msg>
<status status="PASS" starttime="20201029 12:56:17.214" endtime="20201029 12:56:17.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.209" endtime="20201029 12:56:17.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:17.221" endtime="20201029 12:56:17.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.219" endtime="20201029 12:56:17.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.218" endtime="20201029 12:56:17.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.857" endtime="20201029 12:56:17.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:16.857" endtime="20201029 12:56:17.242"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.250" endtime="20201029 12:56:17.267"></status>
</kw>
<msg timestamp="20201029 12:56:17.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:17.249" endtime="20201029 12:56:17.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:17.269" endtime="20201029 12:56:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.271" endtime="20201029 12:56:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.246" endtime="20201029 12:56:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.244" endtime="20201029 12:56:17.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.280" endtime="20201029 12:56:17.568"></status>
</kw>
<msg timestamp="20201029 12:56:17.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019718417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:17.279" endtime="20201029 12:56:17.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019718417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:17.572" endtime="20201029 12:56:17.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.580" endtime="20201029 12:56:17.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.276" endtime="20201029 12:56:17.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.274" endtime="20201029 12:56:17.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:17.586" level="INFO">${RESULT} = [{'diff': 4.519400000000187e-05}, {'diff': 4.533399999999757e-05}, {'diff': 4.5652999999999666e-05}, {'diff': 4.5416999999998986e-05}, {'diff': 4.5875000000000776e-05}, {'diff': 4.605600000000265e-05}...</msg>
<status status="PASS" starttime="20201029 12:56:17.583" endtime="20201029 12:56:17.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:17.591" level="INFO">${ACCURACY} = {'diff': [4.519400000000187e-05, 4.533399999999757e-05, 4.5652999999999666e-05, 4.5416999999998986e-05, 4.5875000000000776e-05, 4.605600000000265e-05, 4.584699999999817e-05, 4.5375000000000276e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:56:17.587" endtime="20201029 12:56:17.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.595" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:56:17.594" endtime="20201029 12:56:17.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.598" level="INFO">VALUE: [4.519400000000187e-05, 4.533399999999757e-05, 4.5652999999999666e-05, 4.5416999999998986e-05, 4.5875000000000776e-05, 4.605600000000265e-05, 4.584699999999817e-05, 4.5375000000000276e-05, 4.5195000000001345e-05, 4.5473000000000735e-05, 4.5138999999999596e-05, 4.584799999999764e-05, 4.544399999999865e-05, 4.5583000000001817e-05, 4.575000000000065e-05, 4.590199999999697e-05, 4.5388999999999846e-05, 4.53329999999981e-05, 4.534699999999767e-05, 4.570799999999847e-05, 4.5680999999998806e-05, 4.5597000000001386e-05, 4.5459000000001165e-05, 4.525000000000015e-05, 4.523599999999711e-05, 4.577799999999979e-05, 4.605599999999918e-05, 4.580599999999893e-05, 4.5402999999999416e-05, 4.586099999999774e-05, 4.523600000000058e-05, 4.5639000000000096e-05, 4.5388999999999846e-05, 4.53879999999969e-05, 4.526300000000025e-05, 4.534699999999767e-05, 4.594399999999915e-05, 4.551399999999997e-05, 4.531899999999853e-05, 4.5402999999999416e-05, 4.5111000000000456e-05, 4.5611000000000956e-05, 4.5333000000001566e-05, 4.534699999999767e-05, 4.511099999999699e-05, 4.575000000000065e-05, 4.5583000000001817e-05, 4.599999999999743e-05, 4.55000000000004e-05, 4.527799999999929e-05]</msg>
<status status="PASS" starttime="20201029 12:56:17.596" endtime="20201029 12:56:17.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.592" endtime="20201029 12:56:17.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:17.603" endtime="20201029 12:56:17.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.601" endtime="20201029 12:56:17.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.600" endtime="20201029 12:56:17.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.242" endtime="20201029 12:56:17.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.242" endtime="20201029 12:56:17.623"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.632" endtime="20201029 12:56:17.649"></status>
</kw>
<msg timestamp="20201029 12:56:17.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:17.630" endtime="20201029 12:56:17.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:17.650" endtime="20201029 12:56:17.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.653" endtime="20201029 12:56:17.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.628" endtime="20201029 12:56:17.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.626" endtime="20201029 12:56:17.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.662" endtime="20201029 12:56:17.949"></status>
</kw>
<msg timestamp="20201029 12:56:17.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:17.660" endtime="20201029 12:56:17.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020571042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:17.953" endtime="20201029 12:56:17.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:17.961" endtime="20201029 12:56:17.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.658" endtime="20201029 12:56:17.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.656" endtime="20201029 12:56:17.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:17.968" level="INFO">${RESULT} = [{'diff': 4.66939999999999e-05}, {'diff': 4.647199999999879e-05}, {'diff': 4.636099999999824e-05}, {'diff': 4.668000000000033e-05}, {'diff': 4.6639000000001096e-05}, {'diff': 4.68329999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:17.965" endtime="20201029 12:56:17.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:17.972" level="INFO">${ACCURACY} = {'diff': [4.66939999999999e-05, 4.647199999999879e-05, 4.636099999999824e-05, 4.668000000000033e-05, 4.6639000000001096e-05, 4.68329999999996e-05, 4.617999999999983e-05, 4.6319000000003e-05, 4.6125000...</msg>
<status status="PASS" starttime="20201029 12:56:17.969" endtime="20201029 12:56:17.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.976" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:56:17.975" endtime="20201029 12:56:17.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:17.979" level="INFO">VALUE: [4.66939999999999e-05, 4.647199999999879e-05, 4.636099999999824e-05, 4.668000000000033e-05, 4.6639000000001096e-05, 4.68329999999996e-05, 4.617999999999983e-05, 4.6319000000003e-05, 4.6125000000001026e-05, 4.627799999999682e-05, 4.6680999999999806e-05, 4.629100000000039e-05, 4.6680999999999806e-05, 4.636099999999824e-05, 4.659800000000186e-05, 4.658399999999882e-05, 4.636200000000118e-05, 4.6875000000001776e-05, 4.679200000000036e-05, 4.625000000000115e-05, 4.627700000000082e-05, 4.686099999999874e-05, 4.676400000000122e-05, 4.6361000000001706e-05, 4.61939999999994e-05, 4.609699999999842e-05, 4.656999999999925e-05, 4.680599999999993e-05, 4.6583000000002817e-05, 4.661099999999849e-05, 4.6111000000001456e-05, 4.6097000000001886e-05, 4.633400000000204e-05, 4.6416999999999986e-05, 4.6166999999999736e-05, 4.625000000000115e-05, 4.6194999999998876e-05, 4.66939999999999e-05, 4.70000000000019e-05, 4.629199999999986e-05, 4.677700000000132e-05, 4.647199999999879e-05, 4.630499999999996e-05, 4.640200000000094e-05, 4.627700000000082e-05, 4.6889000000001346e-05, 4.6639000000001096e-05, 4.627800000000029e-05, 4.623599999999811e-05, 4.6111000000001456e-05]</msg>
<status status="PASS" starttime="20201029 12:56:17.977" endtime="20201029 12:56:17.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.973" endtime="20201029 12:56:17.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:17.985" endtime="20201029 12:56:18.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.983" endtime="20201029 12:56:18.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.982" endtime="20201029 12:56:18.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.624" endtime="20201029 12:56:18.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:17.624" endtime="20201029 12:56:18.006"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.014" endtime="20201029 12:56:18.030"></status>
</kw>
<msg timestamp="20201029 12:56:18.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:18.013" endtime="20201029 12:56:18.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:18.031" endtime="20201029 12:56:18.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.034" endtime="20201029 12:56:18.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.010" endtime="20201029 12:56:18.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.008" endtime="20201029 12:56:18.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.043" endtime="20201029 12:56:18.329"></status>
</kw>
<msg timestamp="20201029 12:56:18.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019842083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:18.041" endtime="20201029 12:56:18.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019842083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:18.334" endtime="20201029 12:56:18.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.342" endtime="20201029 12:56:18.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.039" endtime="20201029 12:56:18.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.037" endtime="20201029 12:56:18.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:18.348" level="INFO">${RESULT} = [{'diff': 4.737499999999881e-05}, {'diff': 4.779200000000136e-05}, {'diff': 4.7389000000001846e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.75139999999985e-05}, {'diff': 4.798599999999986e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:18.345" endtime="20201029 12:56:18.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:18.353" level="INFO">${ACCURACY} = {'diff': [4.737499999999881e-05, 4.779200000000136e-05, 4.7389000000001846e-05, 4.798599999999986e-05, 4.75139999999985e-05, 4.798599999999986e-05, 4.741699999999752e-05, 4.761099999999949e-05, 4.7945...</msg>
<status status="PASS" starttime="20201029 12:56:18.349" endtime="20201029 12:56:18.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.358" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:56:18.357" endtime="20201029 12:56:18.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.360" level="INFO">VALUE: [4.737499999999881e-05, 4.779200000000136e-05, 4.7389000000001846e-05, 4.798599999999986e-05, 4.75139999999985e-05, 4.798599999999986e-05, 4.741699999999752e-05, 4.761099999999949e-05, 4.7945000000000626e-05, 4.757000000000025e-05, 4.704200000000061e-05, 4.7458999999999696e-05, 4.726299999999878e-05, 4.723599999999911e-05, 4.779099999999842e-05, 4.7139000000001596e-05, 4.794400000000115e-05, 4.748599999999936e-05, 4.7389000000001846e-05, 4.776400000000222e-05, 4.770800000000047e-05, 4.716599999999779e-05, 4.797200000000029e-05, 4.736099999999924e-05, 4.722199999999954e-05, 4.780599999999746e-05, 4.787499999999931e-05, 4.7153000000001166e-05, 4.763899999999863e-05, 4.7167000000000736e-05, 4.7181000000000306e-05, 4.797200000000029e-05, 4.729200000000086e-05, 4.748599999999936e-05, 4.732e-05, 4.780600000000093e-05, 4.751400000000197e-05, 4.777799999999832e-05, 4.708399999999932e-05, 4.726300000000225e-05, 4.798599999999986e-05, 4.747199999999979e-05, 4.718000000000083e-05, 4.7139000000001596e-05, 4.712499999999856e-05, 4.773599999999961e-05, 4.711099999999899e-05, 4.736099999999924e-05, 4.804200000000161e-05, 4.770800000000047e-05]</msg>
<status status="PASS" starttime="20201029 12:56:18.359" endtime="20201029 12:56:18.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.354" endtime="20201029 12:56:18.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:18.365" endtime="20201029 12:56:18.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.364" endtime="20201029 12:56:18.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.363" endtime="20201029 12:56:18.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.007" endtime="20201029 12:56:18.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.006" endtime="20201029 12:56:18.386"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.395" endtime="20201029 12:56:18.410"></status>
</kw>
<msg timestamp="20201029 12:56:18.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:18.393" endtime="20201029 12:56:18.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:18.412" endtime="20201029 12:56:18.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.414" endtime="20201029 12:56:18.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.391" endtime="20201029 12:56:18.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.389" endtime="20201029 12:56:18.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.424" endtime="20201029 12:56:18.712"></status>
</kw>
<msg timestamp="20201029 12:56:18.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:18.422" endtime="20201029 12:56:18.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:18.717" endtime="20201029 12:56:18.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.725" endtime="20201029 12:56:18.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.419" endtime="20201029 12:56:18.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.418" endtime="20201029 12:56:18.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:18.731" level="INFO">${RESULT} = [{'diff': 4.881899999999856e-05}, {'diff': 4.897199999999782e-05}, {'diff': 4.906899999999881e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.8681000000001806e-05}, {'diff': 4.811099999999999e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:18.728" endtime="20201029 12:56:18.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:18.735" level="INFO">${ACCURACY} = {'diff': [4.881899999999856e-05, 4.897199999999782e-05, 4.906899999999881e-05, 4.845800000000122e-05, 4.8681000000001806e-05, 4.811099999999999e-05, 4.8667000000002236e-05, 4.894399999999868e-05, 4.86...</msg>
<status status="PASS" starttime="20201029 12:56:18.732" endtime="20201029 12:56:18.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.740" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:56:18.739" endtime="20201029 12:56:18.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.743" level="INFO">VALUE: [4.881899999999856e-05, 4.897199999999782e-05, 4.906899999999881e-05, 4.845800000000122e-05, 4.8681000000001806e-05, 4.811099999999999e-05, 4.8667000000002236e-05, 4.894399999999868e-05, 4.868000000000233e-05, 4.893099999999859e-05, 4.861100000000049e-05, 4.811099999999999e-05, 4.908400000000132e-05, 4.8181000000001306e-05, 4.863899999999963e-05, 4.880600000000193e-05, 4.858400000000082e-05, 4.8167000000001736e-05, 4.875000000000018e-05, 4.876300000000028e-05, 4.908299999999838e-05, 4.845799999999775e-05, 4.867999999999886e-05, 4.815200000000269e-05, 4.886100000000074e-05, 4.83330000000011e-05, 4.866600000000276e-05, 4.829199999999839e-05, 4.891699999999902e-05, 4.872200000000104e-05, 4.877800000000279e-05, 4.827799999999882e-05, 4.898600000000086e-05, 4.898600000000086e-05, 4.822199999999707e-05, 4.812499999999956e-05, 4.812499999999956e-05, 4.873599999999714e-05, 4.8209000000000446e-05, 4.813899999999913e-05, 4.819399999999793e-05, 4.863800000000015e-05, 4.88469999999977e-05, 4.840199999999947e-05, 4.881900000000203e-05, 4.867999999999886e-05, 4.86940000000019e-05, 4.852799999999907e-05, 4.829200000000186e-05, 4.83469999999972e-05]</msg>
<status status="PASS" starttime="20201029 12:56:18.741" endtime="20201029 12:56:18.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.736" endtime="20201029 12:56:18.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:18.748" endtime="20201029 12:56:18.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.746" endtime="20201029 12:56:18.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.745" endtime="20201029 12:56:18.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.387" endtime="20201029 12:56:18.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.387" endtime="20201029 12:56:18.769"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.777" endtime="20201029 12:56:18.794"></status>
</kw>
<msg timestamp="20201029 12:56:18.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:18.776" endtime="20201029 12:56:18.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:18.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:18.796" endtime="20201029 12:56:18.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.798" endtime="20201029 12:56:18.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.773" endtime="20201029 12:56:18.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.771" endtime="20201029 12:56:18.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:18.807" endtime="20201029 12:56:19.093"></status>
</kw>
<msg timestamp="20201029 12:56:19.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020898375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:18.806" endtime="20201029 12:56:19.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020898375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020947972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:19.097" endtime="20201029 12:56:19.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.106" endtime="20201029 12:56:19.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.803" endtime="20201029 12:56:19.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.802" endtime="20201029 12:56:19.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:19.112" level="INFO">${RESULT} = [{'diff': 4.959699999999845e-05}, {'diff': 4.93469999999982e-05}, {'diff': 4.940299999999995e-05}, {'diff': 4.948600000000136e-05}, {'diff': 4.947200000000179e-05}, {'diff': 4.96530000000002e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:19.109" endtime="20201029 12:56:19.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:19.116" level="INFO">${ACCURACY} = {'diff': [4.959699999999845e-05, 4.93469999999982e-05, 4.940299999999995e-05, 4.948600000000136e-05, 4.947200000000179e-05, 4.96530000000002e-05, 4.966699999999977e-05, 4.970899999999848e-05, 5.012499...</msg>
<status status="PASS" starttime="20201029 12:56:19.113" endtime="20201029 12:56:19.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.121" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:56:19.120" endtime="20201029 12:56:19.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.123" level="INFO">VALUE: [4.959699999999845e-05, 4.93469999999982e-05, 4.940299999999995e-05, 4.948600000000136e-05, 4.947200000000179e-05, 4.96530000000002e-05, 4.966699999999977e-05, 4.970899999999848e-05, 5.012499999999809e-05, 4.994499999999916e-05, 4.958400000000182e-05, 4.926400000000025e-05, 4.998600000000186e-05, 4.9222999999997546e-05, 4.9638000000001153e-05, 4.911099999999752e-05, 5.004100000000067e-05, 4.934700000000167e-05, 4.922200000000154e-05, 4.916699999999927e-05, 5.005500000000024e-05, 5.006899999999981e-05, 4.936099999999777e-05, 4.931900000000253e-05, 4.991700000000002e-05, 4.923600000000111e-05, 4.945799999999875e-05, 4.993099999999959e-05, 4.941699999999952e-05, 4.912500000000056e-05, 4.956999999999878e-05, 4.956999999999878e-05, 4.973599999999814e-05, 4.990200000000097e-05, 4.911100000000099e-05, 4.920800000000197e-05, 4.987500000000131e-05, 4.963900000000063e-05, 4.931900000000253e-05, 4.95140000000005e-05, 4.974999999999771e-05, 4.962500000000106e-05, 4.9681000000002806e-05, 4.987499999999784e-05, 4.952800000000007e-05, 4.906999999999828e-05, 4.938899999999691e-05, 4.922199999999807e-05, 4.995899999999873e-05, 4.925000000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:56:19.122" endtime="20201029 12:56:19.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.117" endtime="20201029 12:56:19.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:19.129" endtime="20201029 12:56:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.128" endtime="20201029 12:56:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.126" endtime="20201029 12:56:19.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.769" endtime="20201029 12:56:19.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:18.769" endtime="20201029 12:56:19.150"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.158" endtime="20201029 12:56:19.175"></status>
</kw>
<msg timestamp="20201029 12:56:19.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:19.157" endtime="20201029 12:56:19.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:19.177" endtime="20201029 12:56:19.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.179" endtime="20201029 12:56:19.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.154" endtime="20201029 12:56:19.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.152" endtime="20201029 12:56:19.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.188" endtime="20201029 12:56:19.472"></status>
</kw>
<msg timestamp="20201029 12:56:19.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:19.187" endtime="20201029 12:56:19.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020030653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:19.476" endtime="20201029 12:56:19.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.484" endtime="20201029 12:56:19.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.184" endtime="20201029 12:56:19.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.182" endtime="20201029 12:56:19.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:19.491" level="INFO">${RESULT} = [{'diff': 5.023599999999864e-05}, {'diff': 5.024999999999821e-05}, {'diff': 5.034799999999867e-05}, {'diff': 5.018099999999984e-05}, {'diff': 5.0222999999998547e-05}, {'diff': 5.075000000000218e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:19.487" endtime="20201029 12:56:19.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:19.496" level="INFO">${ACCURACY} = {'diff': [5.023599999999864e-05, 5.024999999999821e-05, 5.034799999999867e-05, 5.018099999999984e-05, 5.0222999999998547e-05, 5.075000000000218e-05, 5.026300000000178e-05, 5.049999999999846e-05, 5.051...</msg>
<status status="PASS" starttime="20201029 12:56:19.492" endtime="20201029 12:56:19.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.500" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:56:19.499" endtime="20201029 12:56:19.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.503" level="INFO">VALUE: [5.023599999999864e-05, 5.024999999999821e-05, 5.034799999999867e-05, 5.018099999999984e-05, 5.0222999999998547e-05, 5.075000000000218e-05, 5.026300000000178e-05, 5.049999999999846e-05, 5.051399999999803e-05, 5.0402000000001473e-05, 5.0708e-05, 5.087500000000231e-05, 5.020899999999898e-05, 5.009699999999895e-05, 5.045799999999975e-05, 5.074999999999871e-05, 5.075000000000218e-05, 5.058299999999988e-05, 5.05140000000015e-05, 5.074999999999871e-05, 5.079200000000089e-05, 5.102800000000157e-05, 5.020899999999898e-05, 5.080600000000046e-05, 5.10279999999981e-05, 5.10270000000021e-05, 5.079099999999795e-05, 5.087499999999884e-05, 5.005500000000024e-05, 5.038900000000138e-05, 5.038900000000138e-05, 5.037499999999834e-05, 5.056900000000031e-05, 5.027800000000082e-05, 5.024999999999821e-05, 5.079200000000089e-05, 5.026400000000125e-05, 5.099999999999896e-05, 5.011100000000199e-05, 5.03339999999991e-05, 5.012499999999809e-05, 5.074999999999871e-05, 5.059799999999892e-05, 5.034799999999867e-05, 5.095800000000025e-05, 5.027800000000082e-05, 5.076299999999881e-05, 5.025000000000168e-05, 5.0651999999998254e-05, 5.097199999999982e-05]</msg>
<status status="PASS" starttime="20201029 12:56:19.501" endtime="20201029 12:56:19.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.496" endtime="20201029 12:56:19.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:19.507" endtime="20201029 12:56:19.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.506" endtime="20201029 12:56:19.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.505" endtime="20201029 12:56:19.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.151" endtime="20201029 12:56:19.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.150" endtime="20201029 12:56:19.528"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.537" endtime="20201029 12:56:19.553"></status>
</kw>
<msg timestamp="20201029 12:56:19.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:19.535" endtime="20201029 12:56:19.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:19.554" endtime="20201029 12:56:19.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.557" endtime="20201029 12:56:19.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.533" endtime="20201029 12:56:19.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.531" endtime="20201029 12:56:19.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.566" endtime="20201029 12:56:19.855"></status>
</kw>
<msg timestamp="20201029 12:56:19.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:19.564" endtime="20201029 12:56:19.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:19.859" endtime="20201029 12:56:19.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.867" endtime="20201029 12:56:19.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.562" endtime="20201029 12:56:19.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.560" endtime="20201029 12:56:19.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:19.874" level="INFO">${RESULT} = [{'diff': 5.193099999999812e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.127799999999835e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.198600000000039e-05}, {'diff': 5.123599999999964e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:19.871" endtime="20201029 12:56:19.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:19.878" level="INFO">${ACCURACY} = {'diff': [5.193099999999812e-05, 5.111099999999952e-05, 5.127799999999835e-05, 5.123599999999964e-05, 5.198600000000039e-05, 5.123599999999964e-05, 5.177799999999885e-05, 5.143000000000161e-05, 5.1167...</msg>
<status status="PASS" starttime="20201029 12:56:19.875" endtime="20201029 12:56:19.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.882" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:56:19.881" endtime="20201029 12:56:19.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.885" level="INFO">VALUE: [5.193099999999812e-05, 5.111099999999952e-05, 5.127799999999835e-05, 5.123599999999964e-05, 5.198600000000039e-05, 5.123599999999964e-05, 5.177799999999885e-05, 5.143000000000161e-05, 5.116700000000127e-05, 5.199999999999996e-05, 5.129199999999792e-05, 5.194499999999769e-05, 5.195800000000125e-05, 5.207000000000128e-05, 5.1387999999999434e-05, 5.130600000000096e-05, 5.147200000000032e-05, 5.141699999999805e-05, 5.163899999999916e-05, 5.195800000000125e-05, 5.174999999999971e-05, 5.187499999999984e-05, 5.131900000000106e-05, 5.111099999999952e-05, 5.187499999999984e-05, 5.205600000000171e-05, 5.163899999999916e-05, 5.14729999999998e-05, 5.141699999999805e-05, 5.18470000000007e-05, 5.136099999999977e-05, 5.177800000000232e-05, 5.170900000000048e-05, 5.179200000000189e-05, 5.18340000000006e-05, 5.199999999999996e-05, 5.188899999999941e-05, 5.179200000000189e-05, 5.119400000000093e-05, 5.163900000000263e-05, 5.122200000000007e-05, 5.1915999999999074e-05, 5.199999999999996e-05, 5.206900000000181e-05, 5.136099999999977e-05, 5.195800000000125e-05, 5.148599999999989e-05, 5.127800000000182e-05, 5.177799999999885e-05, 5.151399999999903e-05]</msg>
<status status="PASS" starttime="20201029 12:56:19.884" endtime="20201029 12:56:19.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.879" endtime="20201029 12:56:19.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:19.890" endtime="20201029 12:56:19.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.888" endtime="20201029 12:56:19.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.887" endtime="20201029 12:56:19.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.529" endtime="20201029 12:56:19.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.529" endtime="20201029 12:56:19.911"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.919" endtime="20201029 12:56:19.937"></status>
</kw>
<msg timestamp="20201029 12:56:19.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:19.918" endtime="20201029 12:56:19.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:19.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:19.938" endtime="20201029 12:56:19.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.941" endtime="20201029 12:56:19.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.915" endtime="20201029 12:56:19.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.913" endtime="20201029 12:56:19.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:19.950" endtime="20201029 12:56:20.235"></status>
</kw>
<msg timestamp="20201029 12:56:20.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021005306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021058292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:19.948" endtime="20201029 12:56:20.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021005306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021058292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:20.239" endtime="20201029 12:56:20.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.247" endtime="20201029 12:56:20.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.946" endtime="20201029 12:56:20.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.944" endtime="20201029 12:56:20.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:20.254" level="INFO">${RESULT} = [{'diff': 5.2985999999997924e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.247200000000132e-05}, {'diff': 5.237499999999687e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:20.251" endtime="20201029 12:56:20.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:20.258" level="INFO">${ACCURACY} = {'diff': [5.2985999999997924e-05, 5.290299999999998e-05, 5.284699999999823e-05, 5.259700000000145e-05, 5.247200000000132e-05, 5.237499999999687e-05, 5.208300000000138e-05, 5.2679999999999394e-05, 5.21...</msg>
<status status="PASS" starttime="20201029 12:56:20.255" endtime="20201029 12:56:20.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.263" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:56:20.262" endtime="20201029 12:56:20.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.265" level="INFO">VALUE: [5.2985999999997924e-05, 5.290299999999998e-05, 5.284699999999823e-05, 5.259700000000145e-05, 5.247200000000132e-05, 5.237499999999687e-05, 5.208300000000138e-05, 5.2679999999999394e-05, 5.2179999999998894e-05, 5.222200000000107e-05, 5.301400000000053e-05, 5.241699999999905e-05, 5.2707999999998534e-05, 5.300000000000096e-05, 5.259700000000145e-05, 5.268099999999887e-05, 5.223600000000064e-05, 5.244499999999819e-05, 5.227799999999935e-05, 5.283399999999813e-05, 5.213900000000313e-05, 5.29730000000013e-05, 5.291699999999955e-05, 5.2402000000000004e-05, 5.218000000000236e-05, 5.295800000000225e-05, 5.2707999999998534e-05, 5.2985999999997924e-05, 5.231900000000206e-05, 5.211100000000052e-05, 5.223600000000064e-05, 5.247200000000132e-05, 5.293099999999912e-05, 5.268099999999887e-05, 5.227799999999935e-05, 5.265299999999973e-05, 5.2221999999997604e-05, 5.2999999999997494e-05, 5.286100000000127e-05, 5.232000000000153e-05, 5.2179999999998894e-05, 5.259700000000145e-05, 5.256899999999884e-05, 5.213900000000313e-05, 5.263900000000016e-05, 5.2902000000000504e-05, 5.23470000000012e-05, 5.265299999999973e-05, 5.227799999999935e-05, 5.222200000000107e-05]</msg>
<status status="PASS" starttime="20201029 12:56:20.264" endtime="20201029 12:56:20.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.259" endtime="20201029 12:56:20.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:20.271" endtime="20201029 12:56:20.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.269" endtime="20201029 12:56:20.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.268" endtime="20201029 12:56:20.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.912" endtime="20201029 12:56:20.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:19.911" endtime="20201029 12:56:20.292"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.300" endtime="20201029 12:56:20.317"></status>
</kw>
<msg timestamp="20201029 12:56:20.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:20.299" endtime="20201029 12:56:20.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:20.319" endtime="20201029 12:56:20.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.321" endtime="20201029 12:56:20.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.296" endtime="20201029 12:56:20.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.294" endtime="20201029 12:56:20.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.330" endtime="20201029 12:56:20.617"></status>
</kw>
<msg timestamp="20201029 12:56:20.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:20.329" endtime="20201029 12:56:20.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:20.621" endtime="20201029 12:56:20.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.630" endtime="20201029 12:56:20.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.326" endtime="20201029 12:56:20.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.325" endtime="20201029 12:56:20.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:20.636" level="INFO">${RESULT} = [{'diff': 5.320900000000198e-05}, {'diff': 5.397200000000282e-05}, {'diff': 5.40280000000011e-05}, {'diff': 5.351300000000156e-05}, {'diff': 5.329100000000045e-05}, {'diff': 5.337500000000134e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:20.633" endtime="20201029 12:56:20.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:20.641" level="INFO">${ACCURACY} = {'diff': [5.320900000000198e-05, 5.397200000000282e-05, 5.40280000000011e-05, 5.351300000000156e-05, 5.329100000000045e-05, 5.337500000000134e-05, 5.3665999999997355e-05, 5.3985999999998924e-05, 5.345...</msg>
<status status="PASS" starttime="20201029 12:56:20.637" endtime="20201029 12:56:20.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.646" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:56:20.645" endtime="20201029 12:56:20.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.648" level="INFO">VALUE: [5.320900000000198e-05, 5.397200000000282e-05, 5.40280000000011e-05, 5.351300000000156e-05, 5.329100000000045e-05, 5.337500000000134e-05, 5.3665999999997355e-05, 5.3985999999998924e-05, 5.3457999999999284e-05, 5.3944000000000214e-05, 5.387499999999837e-05, 5.340300000000048e-05, 5.4027999999997633e-05, 5.3957999999999784e-05, 5.404200000000067e-05, 5.33609999999983e-05, 5.406999999999981e-05, 5.34869999999979e-05, 5.381999999999956e-05, 5.331899999999959e-05, 5.332000000000253e-05, 5.348700000000137e-05, 5.359700000000245e-05, 5.358299999999941e-05, 5.329100000000045e-05, 5.362500000000159e-05, 5.327800000000035e-05, 5.3707999999999534e-05, 5.38609999999988e-05, 5.3693999999999964e-05, 5.3193999999999464e-05, 5.397200000000282e-05, 5.3957999999999784e-05, 5.377800000000085e-05, 5.350000000000146e-05, 5.373600000000214e-05, 5.372300000000205e-05, 5.336199999999777e-05, 5.355500000000027e-05, 5.3749999999998244e-05, 5.337500000000134e-05, 5.362500000000159e-05, 5.3221999999998604e-05, 5.325000000000121e-05, 5.3207999999999034e-05, 5.308299999999891e-05, 5.337500000000134e-05, 5.383299999999966e-05, 5.3721999999999104e-05, 5.383299999999966e-05]</msg>
<status status="PASS" starttime="20201029 12:56:20.647" endtime="20201029 12:56:20.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.642" endtime="20201029 12:56:20.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:20.653" endtime="20201029 12:56:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.652" endtime="20201029 12:56:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.650" endtime="20201029 12:56:20.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.293" endtime="20201029 12:56:20.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.292" endtime="20201029 12:56:20.674"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.683" endtime="20201029 12:56:20.699"></status>
</kw>
<msg timestamp="20201029 12:56:20.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:20.681" endtime="20201029 12:56:20.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:20.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:20.701" endtime="20201029 12:56:20.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.703" endtime="20201029 12:56:20.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.679" endtime="20201029 12:56:20.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.677" endtime="20201029 12:56:20.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:20.712" endtime="20201029 12:56:20.999"></status>
</kw>
<msg timestamp="20201029 12:56:21.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:20.711" endtime="20201029 12:56:21.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020032625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:21.003" endtime="20201029 12:56:21.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.011" endtime="20201029 12:56:21.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.708" endtime="20201029 12:56:21.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.707" endtime="20201029 12:56:21.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:21.018" level="INFO">${RESULT} = [{'diff': 5.468100000000087e-05}, {'diff': 5.434800000000267e-05}, {'diff': 5.454200000000117e-05}, {'diff': 5.4929999999998175e-05}, {'diff': 5.481900000000109e-05}, {'diff': 5.4249999999998744e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:21.015" endtime="20201029 12:56:21.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:21.022" level="INFO">${ACCURACY} = {'diff': [5.468100000000087e-05, 5.434800000000267e-05, 5.454200000000117e-05, 5.4929999999998175e-05, 5.481900000000109e-05, 5.4249999999998744e-05, 5.4735999999999674e-05, 5.4944000000001214e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:56:21.019" endtime="20201029 12:56:21.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.027" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:56:21.026" endtime="20201029 12:56:21.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.029" level="INFO">VALUE: [5.468100000000087e-05, 5.434800000000267e-05, 5.454200000000117e-05, 5.4929999999998175e-05, 5.481900000000109e-05, 5.4249999999998744e-05, 5.4735999999999674e-05, 5.4944000000001214e-05, 5.4999999999999494e-05, 5.45280000000016e-05, 5.4944000000001214e-05, 5.46670000000013e-05, 5.429200000000092e-05, 5.484700000000023e-05, 5.41670000000008e-05, 5.475000000000271e-05, 5.494500000000069e-05, 5.444500000000019e-05, 5.4749999999999244e-05, 5.412499999999862e-05, 5.493100000000112e-05, 5.426299999999884e-05, 5.491700000000155e-05, 5.4194000000000464e-05, 5.480499999999805e-05, 5.4693999999997495e-05, 5.481900000000109e-05, 5.4513999999998564e-05, 5.430499999999755e-05, 5.477800000000185e-05, 5.456899999999737e-05, 5.508300000000091e-05, 5.461100000000302e-05, 5.418100000000037e-05, 5.468100000000087e-05, 5.506999999999734e-05, 5.48609999999998e-05, 5.494499999999722e-05, 5.440299999999801e-05, 5.411199999999852e-05, 5.45280000000016e-05, 5.4458000000000284e-05, 5.4972000000000354e-05, 5.4249999999998744e-05, 5.4166000000001324e-05, 5.48609999999998e-05, 5.4444000000000714e-05, 5.412499999999862e-05, 5.4763999999998814e-05, 5.4235999999999174e-05]</msg>
<status status="PASS" starttime="20201029 12:56:21.028" endtime="20201029 12:56:21.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.023" endtime="20201029 12:56:21.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:21.034" endtime="20201029 12:56:21.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.033" endtime="20201029 12:56:21.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.031" endtime="20201029 12:56:21.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.675" endtime="20201029 12:56:21.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:20.674" endtime="20201029 12:56:21.055"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.064" endtime="20201029 12:56:21.081"></status>
</kw>
<msg timestamp="20201029 12:56:21.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:21.062" endtime="20201029 12:56:21.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:21.082" endtime="20201029 12:56:21.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.085" endtime="20201029 12:56:21.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.059" endtime="20201029 12:56:21.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.057" endtime="20201029 12:56:21.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.094" endtime="20201029 12:56:21.381"></status>
</kw>
<msg timestamp="20201029 12:56:21.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020995667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:21.092" endtime="20201029 12:56:21.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020995667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021051431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:21.385" endtime="20201029 12:56:21.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.393" endtime="20201029 12:56:21.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.090" endtime="20201029 12:56:21.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.088" endtime="20201029 12:56:21.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:21.400" level="INFO">${RESULT} = [{'diff': 5.5763999999999814e-05}, {'diff': 5.527699999999941e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.5165999999998855e-05}, {'diff': 5.558300000000141e-05}, {'diff': 5.516699999999833e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:56:21.397" endtime="20201029 12:56:21.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:21.404" level="INFO">${ACCURACY} = {'diff': [5.5763999999999814e-05, 5.527699999999941e-05, 5.60549999999993e-05, 5.5165999999998855e-05, 5.558300000000141e-05, 5.516699999999833e-05, 5.53610000000003e-05, 5.5513999999999564e-05, 5.565...</msg>
<status status="PASS" starttime="20201029 12:56:21.401" endtime="20201029 12:56:21.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.409" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:56:21.407" endtime="20201029 12:56:21.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.411" level="INFO">VALUE: [5.5763999999999814e-05, 5.527699999999941e-05, 5.60549999999993e-05, 5.5165999999998855e-05, 5.558300000000141e-05, 5.516699999999833e-05, 5.53610000000003e-05, 5.5513999999999564e-05, 5.565299999999926e-05, 5.581900000000209e-05, 5.53610000000003e-05, 5.5236000000000174e-05, 5.534700000000073e-05, 5.6027999999999634e-05, 5.5750000000000244e-05, 5.509700000000048e-05, 5.515299999999876e-05, 5.597300000000083e-05, 5.520900000000051e-05, 5.591700000000255e-05, 5.5985999999997454e-05, 5.565299999999926e-05, 5.5763999999999814e-05, 5.561100000000055e-05, 5.5777999999999384e-05, 5.6027999999999634e-05, 5.511100000000005e-05, 5.5277999999998884e-05, 5.509700000000048e-05, 5.527800000000235e-05, 5.5763999999999814e-05, 5.588899999999994e-05, 5.605600000000224e-05, 5.55280000000026e-05, 5.569500000000144e-05, 5.522300000000008e-05, 5.512499999999962e-05, 5.5457999999997815e-05, 5.5222000000000604e-05, 5.604099999999973e-05, 5.581899999999862e-05, 5.5985999999997454e-05, 5.5249999999999744e-05, 5.5165999999998855e-05, 5.590299999999951e-05, 5.607000000000181e-05, 5.554099999999923e-05, 5.529200000000192e-05, 5.587500000000037e-05, 5.505600000000124e-05]</msg>
<status status="PASS" starttime="20201029 12:56:21.410" endtime="20201029 12:56:21.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.405" endtime="20201029 12:56:21.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:21.417" endtime="20201029 12:56:21.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.415" endtime="20201029 12:56:21.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.414" endtime="20201029 12:56:21.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.056" endtime="20201029 12:56:21.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.055" endtime="20201029 12:56:21.438"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.446" endtime="20201029 12:56:21.463"></status>
</kw>
<msg timestamp="20201029 12:56:21.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:21.445" endtime="20201029 12:56:21.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:21.465" endtime="20201029 12:56:21.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.467" endtime="20201029 12:56:21.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.442" endtime="20201029 12:56:21.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.440" endtime="20201029 12:56:21.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.476" endtime="20201029 12:56:21.762"></status>
</kw>
<msg timestamp="20201029 12:56:21.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:21.475" endtime="20201029 12:56:21.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:21.766" endtime="20201029 12:56:21.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.775" endtime="20201029 12:56:21.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.472" endtime="20201029 12:56:21.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.470" endtime="20201029 12:56:21.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:21.781" level="INFO">${RESULT} = [{'diff': 5.709699999999901e-05}, {'diff': 5.616699999999933e-05}, {'diff': 5.656899999999937e-05}, {'diff': 5.6930000000000175e-05}, {'diff': 5.704100000000073e-05}, {'diff': 5.6666000000000355e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:21.778" endtime="20201029 12:56:21.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:21.786" level="INFO">${ACCURACY} = {'diff': [5.709699999999901e-05, 5.616699999999933e-05, 5.656899999999937e-05, 5.6930000000000175e-05, 5.704100000000073e-05, 5.6666000000000355e-05, 5.6165999999999855e-05, 5.634699999999826e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 12:56:21.782" endtime="20201029 12:56:21.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.791" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:56:21.790" endtime="20201029 12:56:21.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.793" level="INFO">VALUE: [5.709699999999901e-05, 5.616699999999933e-05, 5.656899999999937e-05, 5.6930000000000175e-05, 5.704100000000073e-05, 5.6666000000000355e-05, 5.6165999999999855e-05, 5.634699999999826e-05, 5.640300000000001e-05, 5.629200000000292e-05, 5.6291999999999454e-05, 5.6486000000001424e-05, 5.634699999999826e-05, 5.6527999999996664e-05, 5.6263999999996844e-05, 5.6528000000000134e-05, 5.6805999999999524e-05, 5.7042000000000204e-05, 5.616699999999933e-05, 5.641699999999958e-05, 5.6999999999998024e-05, 5.70550000000003e-05, 5.6430000000003144e-05, 5.606900000000234e-05, 5.60549999999993e-05, 5.665300000000026e-05, 5.638900000000044e-05, 5.662499999999765e-05, 5.6679999999999925e-05, 5.6930000000000175e-05, 5.6722000000002104e-05, 5.631899999999912e-05, 5.659700000000198e-05, 5.6805999999999524e-05, 5.6943999999999745e-05, 5.669499999999897e-05, 5.6236000000001174e-05, 5.647299999999786e-05, 5.6416000000000105e-05, 5.612500000000062e-05, 5.6472000000001854e-05, 5.704100000000073e-05, 5.6764000000000814e-05, 5.612500000000062e-05, 5.6264000000000314e-05, 5.606899999999887e-05, 5.633300000000216e-05, 5.6471999999998385e-05, 5.6957999999999315e-05, 5.686099999999833e-05]</msg>
<status status="PASS" starttime="20201029 12:56:21.792" endtime="20201029 12:56:21.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.787" endtime="20201029 12:56:21.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:21.798" endtime="20201029 12:56:21.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.797" endtime="20201029 12:56:21.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.796" endtime="20201029 12:56:21.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.438" endtime="20201029 12:56:21.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.438" endtime="20201029 12:56:21.819"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.829" endtime="20201029 12:56:21.847"></status>
</kw>
<msg timestamp="20201029 12:56:21.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:21.827" endtime="20201029 12:56:21.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:21.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:21.848" endtime="20201029 12:56:21.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.850" endtime="20201029 12:56:21.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.825" endtime="20201029 12:56:21.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.822" endtime="20201029 12:56:21.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:21.860" endtime="20201029 12:56:22.148"></status>
</kw>
<msg timestamp="20201029 12:56:22.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020798194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020855694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:21.858" endtime="20201029 12:56:22.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020798194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020855694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:22.152" endtime="20201029 12:56:22.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.160" endtime="20201029 12:56:22.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.856" endtime="20201029 12:56:22.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.854" endtime="20201029 12:56:22.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:22.167" level="INFO">${RESULT} = [{'diff': 5.7500000000001994e-05}, {'diff': 5.733299999999969e-05}, {'diff': 5.711099999999858e-05}, {'diff': 5.738899999999797e-05}, {'diff': 5.7306000000000024e-05}, {'diff': 5.783300000000019e-05},...</msg>
<status status="PASS" starttime="20201029 12:56:22.164" endtime="20201029 12:56:22.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:22.172" level="INFO">${ACCURACY} = {'diff': [5.7500000000001994e-05, 5.733299999999969e-05, 5.711099999999858e-05, 5.738899999999797e-05, 5.7306000000000024e-05, 5.783300000000019e-05, 5.7680000000000925e-05, 5.7471999999999385e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:56:22.168" endtime="20201029 12:56:22.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.176" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:56:22.175" endtime="20201029 12:56:22.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.179" level="INFO">VALUE: [5.7500000000001994e-05, 5.733299999999969e-05, 5.711099999999858e-05, 5.738899999999797e-05, 5.7306000000000024e-05, 5.783300000000019e-05, 5.7680000000000925e-05, 5.7471999999999385e-05, 5.78610000000028e-05, 5.80550000000013e-05, 5.794500000000022e-05, 5.744499999999972e-05, 5.7292000000000454e-05, 5.740300000000101e-05, 5.7888000000002465e-05, 5.711100000000205e-05, 5.804099999999826e-05, 5.73610000000023e-05, 5.731900000000012e-05, 5.761099999999908e-05, 5.715300000000076e-05, 5.7514000000001564e-05, 5.7500000000001994e-05, 5.7556000000000274e-05, 5.7528000000001134e-05, 5.8042000000001204e-05, 5.784699999999976e-05, 5.740300000000101e-05, 5.7721999999999635e-05, 5.7806000000000524e-05, 5.794500000000022e-05, 5.7764000000001814e-05, 5.7527999999997664e-05, 5.7278000000000884e-05, 5.7583999999999413e-05, 5.711099999999858e-05, 5.759699999999951e-05, 5.7180000000000425e-05, 5.758299999999994e-05, 5.8014000000002064e-05, 5.7930000000001175e-05, 5.7764000000001814e-05, 5.7986000000002924e-05, 5.719499999999947e-05, 5.741700000000058e-05, 5.744499999999972e-05, 5.763899999999822e-05, 5.7235999999998705e-05, 5.7583999999999413e-05, 5.747300000000233e-05]</msg>
<status status="PASS" starttime="20201029 12:56:22.178" endtime="20201029 12:56:22.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.173" endtime="20201029 12:56:22.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:22.184" endtime="20201029 12:56:22.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.183" endtime="20201029 12:56:22.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.181" endtime="20201029 12:56:22.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.820" endtime="20201029 12:56:22.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:21.819" endtime="20201029 12:56:22.209"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.229" endtime="20201029 12:56:22.251"></status>
</kw>
<msg timestamp="20201029 12:56:22.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:22.225" endtime="20201029 12:56:22.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:22.254" endtime="20201029 12:56:22.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.260" endtime="20201029 12:56:22.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.219" endtime="20201029 12:56:22.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.214" endtime="20201029 12:56:22.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.280" endtime="20201029 12:56:22.568"></status>
</kw>
<msg timestamp="20201029 12:56:22.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037819819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037878306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:22.277" endtime="20201029 12:56:22.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037819819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037878306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:22.572" endtime="20201029 12:56:22.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.581" endtime="20201029 12:56:22.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.271" endtime="20201029 12:56:22.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.267" endtime="20201029 12:56:22.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:22.588" level="INFO">${RESULT} = [{'diff': 5.84870000000029e-05}, {'diff': 5.886100000000033e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.8165999999998386e-05}, {'diff': 5.831900000000112e-05}, {'diff': 5.883299999999425e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:22.584" endtime="20201029 12:56:22.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:22.592" level="INFO">${ACCURACY} = {'diff': [5.84870000000029e-05, 5.886100000000033e-05, 5.813899999999872e-05, 5.8165999999998386e-05, 5.831900000000112e-05, 5.883299999999425e-05, 5.890299999999904e-05, 5.8443999999997776e-05, 5.897...</msg>
<status status="PASS" starttime="20201029 12:56:22.589" endtime="20201029 12:56:22.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.597" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:56:22.596" endtime="20201029 12:56:22.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.599" level="INFO">VALUE: [5.84870000000029e-05, 5.886100000000033e-05, 5.813899999999872e-05, 5.8165999999998386e-05, 5.831900000000112e-05, 5.883299999999425e-05, 5.890299999999904e-05, 5.8443999999997776e-05, 5.8971999999997415e-05, 5.886100000000033e-05, 5.8278000000001884e-05, 5.8306000000001024e-05, 5.811099999999958e-05, 5.88749999999999e-05, 5.841700000000505e-05, 5.8943999999998276e-05, 5.818099999999743e-05, 5.8485999999996485e-05, 5.811199999999905e-05, 5.8193999999997525e-05, 5.8443999999997776e-05, 5.8415999999998636e-05, 5.809700000000001e-05, 5.8528000000002134e-05, 5.8528000000002134e-05, 5.9000000000003494e-05, 5.88749999999999e-05, 5.861100000000008e-05, 5.9028000000002634e-05, 5.894499999999775e-05, 5.8458000000004284e-05, 5.8834000000000664e-05, 5.890299999999904e-05, 5.8500000000002994e-05, 5.840299999999854e-05, 5.8528000000002134e-05, 5.8236000000003174e-05, 5.884699999999382e-05, 5.902700000000316e-05, 5.8402000000006005e-05, 5.8693999999998026e-05, 5.879099999999554e-05, 5.8929999999998706e-05, 5.836099999999983e-05, 5.818099999999743e-05, 5.834700000000026e-05, 5.8721999999997165e-05, 5.808300000000044e-05, 5.8320000000000594e-05, 5.8278000000001884e-05]</msg>
<status status="PASS" starttime="20201029 12:56:22.598" endtime="20201029 12:56:22.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.593" endtime="20201029 12:56:22.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:22.605" endtime="20201029 12:56:22.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.604" endtime="20201029 12:56:22.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.603" endtime="20201029 12:56:22.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.211" endtime="20201029 12:56:22.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.210" endtime="20201029 12:56:22.626"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.635" endtime="20201029 12:56:22.654"></status>
</kw>
<msg timestamp="20201029 12:56:22.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:22.634" endtime="20201029 12:56:22.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:22.655" endtime="20201029 12:56:22.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.658" endtime="20201029 12:56:22.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.631" endtime="20201029 12:56:22.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.629" endtime="20201029 12:56:22.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.667" endtime="20201029 12:56:22.955"></status>
</kw>
<msg timestamp="20201029 12:56:22.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021272375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:22.666" endtime="20201029 12:56:22.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021272375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0213315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:22.959" endtime="20201029 12:56:22.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:22.967" endtime="20201029 12:56:22.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.663" endtime="20201029 12:56:22.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.661" endtime="20201029 12:56:22.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:22.974" level="INFO">${RESULT} = [{'diff': 5.912500000000015e-05}, {'diff': 5.970899999999807e-05}, {'diff': 5.9222000000001135e-05}, {'diff': 5.96810000000024e-05}, {'diff': 5.962500000000065e-05}, {'diff': 5.961100000000108e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:22.971" endtime="20201029 12:56:22.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:22.980" level="INFO">${ACCURACY} = {'diff': [5.912500000000015e-05, 5.970899999999807e-05, 5.9222000000001135e-05, 5.96810000000024e-05, 5.962500000000065e-05, 5.961100000000108e-05, 5.961100000000108e-05, 5.941699999999911e-05, 5.9805...</msg>
<status status="PASS" starttime="20201029 12:56:22.975" endtime="20201029 12:56:22.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.984" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:56:22.983" endtime="20201029 12:56:22.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:22.987" level="INFO">VALUE: [5.912500000000015e-05, 5.970899999999807e-05, 5.9222000000001135e-05, 5.96810000000024e-05, 5.962500000000065e-05, 5.961100000000108e-05, 5.961100000000108e-05, 5.941699999999911e-05, 5.9805999999999054e-05, 5.9235999999997235e-05, 5.963900000000022e-05, 5.986100000000133e-05, 5.981899999999915e-05, 6.004100000000026e-05, 5.958299999999847e-05, 5.9736000000001205e-05, 5.983299999999872e-05, 5.941700000000258e-05, 5.9250000000000275e-05, 5.991699999999961e-05, 5.9764000000000345e-05, 5.961100000000108e-05, 5.986099999999786e-05, 5.9443999999998776e-05, 5.9570000000001844e-05, 5.9707999999998596e-05, 5.9179999999998956e-05, 5.9250000000000275e-05, 5.9222000000001135e-05, 5.9693999999999026e-05, 5.984699999999829e-05, 5.983299999999872e-05, 5.9194000000001995e-05, 5.9193999999998526e-05, 5.986099999999786e-05, 5.916699999999886e-05, 5.9805999999999054e-05, 5.9528000000003134e-05, 5.9750000000000775e-05, 6.0028000000000165e-05, 5.936100000000083e-05, 5.916700000000233e-05, 5.963900000000022e-05, 5.9888000000000996e-05, 5.9902000000000566e-05, 5.9443999999998776e-05, 5.9236000000000705e-05, 5.9486000000000955e-05, 5.9221999999997665e-05, 5.934700000000126e-05]</msg>
<status status="PASS" starttime="20201029 12:56:22.985" endtime="20201029 12:56:22.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.980" endtime="20201029 12:56:22.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:22.992" endtime="20201029 12:56:23.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.990" endtime="20201029 12:56:23.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.989" endtime="20201029 12:56:23.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.627" endtime="20201029 12:56:23.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:22.627" endtime="20201029 12:56:23.013"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.022" endtime="20201029 12:56:23.039"></status>
</kw>
<msg timestamp="20201029 12:56:23.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:23.021" endtime="20201029 12:56:23.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:23.041" endtime="20201029 12:56:23.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.044" endtime="20201029 12:56:23.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.018" endtime="20201029 12:56:23.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.016" endtime="20201029 12:56:23.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.053" endtime="20201029 12:56:23.344"></status>
</kw>
<msg timestamp="20201029 12:56:23.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021087639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021148222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:23.052" endtime="20201029 12:56:23.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021087639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021148222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:23.348" endtime="20201029 12:56:23.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.357" endtime="20201029 12:56:23.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.049" endtime="20201029 12:56:23.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.047" endtime="20201029 12:56:23.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:23.364" level="INFO">${RESULT} = [{'diff': 6.058300000000294e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.0819999999999624e-05}, {'diff': 6.081900000000015e-05}, {'diff': 6.0194000000002995e-05}, {'diff': 6.0222000000002135e-05...</msg>
<status status="PASS" starttime="20201029 12:56:23.360" endtime="20201029 12:56:23.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:23.368" level="INFO">${ACCURACY} = {'diff': [6.058300000000294e-05, 6.0707999999999596e-05, 6.0819999999999624e-05, 6.081900000000015e-05, 6.0194000000002995e-05, 6.0222000000002135e-05, 6.068099999999993e-05, 6.070899999999907e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:56:23.365" endtime="20201029 12:56:23.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.373" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:56:23.371" endtime="20201029 12:56:23.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.375" level="INFO">VALUE: [6.058300000000294e-05, 6.0707999999999596e-05, 6.0819999999999624e-05, 6.081900000000015e-05, 6.0194000000002995e-05, 6.0222000000002135e-05, 6.068099999999993e-05, 6.070899999999907e-05, 6.083299999999972e-05, 6.040299999999707e-05, 6.0820000000003094e-05, 6.0750000000001775e-05, 6.062500000000165e-05, 6.0207999999999096e-05, 6.027700000000094e-05, 6.0930000000000706e-05, 6.102700000000169e-05, 6.083299999999972e-05, 6.0986000000002455e-05, 6.0430000000000206e-05, 6.0721999999999166e-05, 6.0278000000000415e-05, 6.0514000000001095e-05, 6.0513999999997625e-05, 6.041700000000011e-05, 6.093100000000018e-05, 6.087499999999843e-05, 6.0819999999999624e-05, 6.0569999999999374e-05, 6.072300000000211e-05, 6.093100000000018e-05, 6.080499999999711e-05, 6.068099999999993e-05, 6.011100000000158e-05, 6.0179999999999956e-05, 6.037499999999793e-05, 6.0236000000001705e-05, 6.0985999999998985e-05, 6.015300000000029e-05, 6.0999999999998555e-05, 6.090300000000104e-05, 6.041700000000011e-05, 6.040300000000054e-05, 6.0194999999999e-05, 6.106999999999987e-05, 6.0848000000002234e-05, 6.081900000000015e-05, 6.0347999999998264e-05, 6.027699999999747e-05, 6.059699999999904e-05]</msg>
<status status="PASS" starttime="20201029 12:56:23.374" endtime="20201029 12:56:23.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.369" endtime="20201029 12:56:23.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:23.380" endtime="20201029 12:56:23.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.379" endtime="20201029 12:56:23.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.378" endtime="20201029 12:56:23.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.014" endtime="20201029 12:56:23.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.014" endtime="20201029 12:56:23.401"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.410" endtime="20201029 12:56:23.429"></status>
</kw>
<msg timestamp="20201029 12:56:23.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:23.409" endtime="20201029 12:56:23.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:23.430" endtime="20201029 12:56:23.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.433" endtime="20201029 12:56:23.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.406" endtime="20201029 12:56:23.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.404" endtime="20201029 12:56:23.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.443" endtime="20201029 12:56:23.729"></status>
</kw>
<msg timestamp="20201029 12:56:23.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021312597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:23.441" endtime="20201029 12:56:23.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021312597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:23.733" endtime="20201029 12:56:23.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.741" endtime="20201029 12:56:23.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.438" endtime="20201029 12:56:23.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.436" endtime="20201029 12:56:23.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:23.748" level="INFO">${RESULT} = [{'diff': 6.16950000000005e-05}, {'diff': 6.182000000000062e-05}, {'diff': 6.207000000000087e-05}, {'diff': 6.197299999999989e-05}, {'diff': 6.183299999999725e-05}, {'diff': 6.134699999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:23.745" endtime="20201029 12:56:23.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:23.753" level="INFO">${ACCURACY} = {'diff': [6.16950000000005e-05, 6.182000000000062e-05, 6.207000000000087e-05, 6.197299999999989e-05, 6.183299999999725e-05, 6.134699999999979e-05, 6.201399999999913e-05, 6.147199999999992e-05, 6.12219...</msg>
<status status="PASS" starttime="20201029 12:56:23.749" endtime="20201029 12:56:23.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.757" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:56:23.756" endtime="20201029 12:56:23.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.760" level="INFO">VALUE: [6.16950000000005e-05, 6.182000000000062e-05, 6.207000000000087e-05, 6.197299999999989e-05, 6.183299999999725e-05, 6.134699999999979e-05, 6.201399999999913e-05, 6.147199999999992e-05, 6.122199999999967e-05, 6.132000000000012e-05, 6.187499999999943e-05, 6.122199999999967e-05, 6.130599999999709e-05, 6.193100000000118e-05, 6.191699999999814e-05, 6.149999999999906e-05, 6.159799999999951e-05, 6.202800000000216e-05, 6.184799999999976e-05, 6.197299999999989e-05, 6.163899999999875e-05, 6.17080000000006e-05, 6.19019999999991e-05, 6.19439999999978e-05, 6.173599999999974e-05, 6.109699999999954e-05, 6.204099999999879e-05, 6.172200000000017e-05, 6.12080000000001e-05, 6.108299999999997e-05, 6.122199999999967e-05, 6.197299999999989e-05, 6.198599999999999e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.195900000000032e-05, 6.180599999999759e-05, 6.14300000000012e-05, 6.190299999999857e-05, 6.187499999999943e-05, 6.180499999999811e-05, 6.109699999999954e-05, 6.176400000000234e-05, 6.181899999999768e-05, 6.112500000000215e-05, 6.134699999999979e-05, 6.138900000000197e-05, 6.15560000000008e-05, 6.140300000000154e-05, 6.162500000000265e-05]</msg>
<status status="PASS" starttime="20201029 12:56:23.758" endtime="20201029 12:56:23.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.753" endtime="20201029 12:56:23.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:23.766" endtime="20201029 12:56:23.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.764" endtime="20201029 12:56:23.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.763" endtime="20201029 12:56:23.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.402" endtime="20201029 12:56:23.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.402" endtime="20201029 12:56:23.787"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.796" endtime="20201029 12:56:23.813"></status>
</kw>
<msg timestamp="20201029 12:56:23.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:23.794" endtime="20201029 12:56:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:23.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:23.816" endtime="20201029 12:56:23.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.819" endtime="20201029 12:56:23.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.792" endtime="20201029 12:56:23.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.789" endtime="20201029 12:56:23.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:23.832" endtime="20201029 12:56:24.118"></status>
</kw>
<msg timestamp="20201029 12:56:24.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:23.829" endtime="20201029 12:56:24.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:24.122" endtime="20201029 12:56:24.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.131" endtime="20201029 12:56:24.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.826" endtime="20201029 12:56:24.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.824" endtime="20201029 12:56:24.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:24.137" level="INFO">${RESULT} = [{'diff': 6.281899999999868e-05}, {'diff': 6.245799999999788e-05}, {'diff': 6.286100000000086e-05}, {'diff': 6.305499999999936e-05}, {'diff': 6.300000000000056e-05}, {'diff': 6.262500000000018e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:24.134" endtime="20201029 12:56:24.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:24.143" level="INFO">${ACCURACY} = {'diff': [6.281899999999868e-05, 6.245799999999788e-05, 6.286100000000086e-05, 6.305499999999936e-05, 6.300000000000056e-05, 6.262500000000018e-05, 6.237499999999993e-05, 6.300000000000056e-05, 6.2458...</msg>
<status status="PASS" starttime="20201029 12:56:24.138" endtime="20201029 12:56:24.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.147" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:56:24.146" endtime="20201029 12:56:24.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.150" level="INFO">VALUE: [6.281899999999868e-05, 6.245799999999788e-05, 6.286100000000086e-05, 6.305499999999936e-05, 6.300000000000056e-05, 6.262500000000018e-05, 6.237499999999993e-05, 6.300000000000056e-05, 6.245899999999735e-05, 6.261100000000061e-05, 6.229099999999904e-05, 6.30279999999997e-05, 6.286199999999686e-05, 6.305599999999884e-05, 6.298600000000099e-05, 6.248599999999702e-05, 6.266599999999942e-05, 6.236100000000036e-05, 6.233299999999775e-05, 6.255499999999886e-05, 6.301300000000065e-05, 6.286100000000086e-05, 6.298600000000099e-05, 6.287500000000043e-05, 6.270900000000107e-05, 6.300000000000056e-05, 6.254199999999877e-05, 6.240300000000254e-05, 6.252699999999972e-05, 6.252699999999972e-05, 6.227699999999947e-05, 6.220799999999763e-05, 6.279099999999954e-05, 6.292999999999924e-05, 6.227800000000241e-05, 6.233299999999775e-05, 6.234700000000079e-05, 6.212499999999968e-05, 6.233300000000122e-05, 6.291699999999914e-05, 6.218100000000143e-05, 6.232000000000112e-05, 6.269499999999803e-05, 6.236199999999983e-05, 6.229099999999904e-05, 6.300000000000056e-05, 6.287500000000043e-05, 6.250000000000006e-05, 6.24439999999983e-05, 6.269400000000203e-05]</msg>
<status status="PASS" starttime="20201029 12:56:24.148" endtime="20201029 12:56:24.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.144" endtime="20201029 12:56:24.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:24.155" endtime="20201029 12:56:24.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.154" endtime="20201029 12:56:24.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.152" endtime="20201029 12:56:24.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.788" endtime="20201029 12:56:24.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:23.787" endtime="20201029 12:56:24.176"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.185" endtime="20201029 12:56:24.202"></status>
</kw>
<msg timestamp="20201029 12:56:24.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:24.184" endtime="20201029 12:56:24.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:24.203" endtime="20201029 12:56:24.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.206" endtime="20201029 12:56:24.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.181" endtime="20201029 12:56:24.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.179" endtime="20201029 12:56:24.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.216" endtime="20201029 12:56:24.504"></status>
</kw>
<msg timestamp="20201029 12:56:24.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020765167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:24.214" endtime="20201029 12:56:24.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020765167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:24.508" endtime="20201029 12:56:24.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.517" endtime="20201029 12:56:24.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.211" endtime="20201029 12:56:24.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.209" endtime="20201029 12:56:24.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:24.523" level="INFO">${RESULT} = [{'diff': 6.313900000000025e-05}, {'diff': 6.370799999999913e-05}, {'diff': 6.35699999999989e-05}, {'diff': 6.361099999999814e-05}, {'diff': 6.333299999999875e-05}, {'diff': 6.342999999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:24.520" endtime="20201029 12:56:24.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:24.528" level="INFO">${ACCURACY} = {'diff': [6.313900000000025e-05, 6.370799999999913e-05, 6.35699999999989e-05, 6.361099999999814e-05, 6.333299999999875e-05, 6.342999999999974e-05, 6.39439999999998e-05, 6.337499999999746e-05, 6.308299...</msg>
<status status="PASS" starttime="20201029 12:56:24.525" endtime="20201029 12:56:24.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.532" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:56:24.531" endtime="20201029 12:56:24.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.535" level="INFO">VALUE: [6.313900000000025e-05, 6.370799999999913e-05, 6.35699999999989e-05, 6.361099999999814e-05, 6.333299999999875e-05, 6.342999999999974e-05, 6.39439999999998e-05, 6.337499999999746e-05, 6.30829999999985e-05, 6.386099999999839e-05, 6.312500000000068e-05, 6.357000000000237e-05, 6.383299999999925e-05, 6.373599999999827e-05, 6.329199999999952e-05, 6.374999999999784e-05, 6.333299999999875e-05, 6.380599999999959e-05, 6.326400000000038e-05, 6.37630000000014e-05, 6.341600000000017e-05, 6.34020000000006e-05, 6.377800000000045e-05, 6.361100000000161e-05, 6.330599999999909e-05, 6.387500000000143e-05, 6.334699999999832e-05, 6.404200000000027e-05, 6.318099999999896e-05, 6.361199999999761e-05, 6.366699999999989e-05, 6.361099999999814e-05, 6.38340000000022e-05, 6.386200000000133e-05, 6.356899999999943e-05, 6.329199999999952e-05, 6.384699999999882e-05, 6.393000000000024e-05, 6.355499999999986e-05, 6.381899999999968e-05, 6.37080000000026e-05, 6.397199999999895e-05, 6.380599999999959e-05, 6.384699999999882e-05, 6.312500000000068e-05, 6.309699999999807e-05, 6.400000000000156e-05, 6.348700000000096e-05, 6.368099999999946e-05, 6.376299999999793e-05]</msg>
<status status="PASS" starttime="20201029 12:56:24.534" endtime="20201029 12:56:24.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.529" endtime="20201029 12:56:24.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:24.540" endtime="20201029 12:56:24.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.539" endtime="20201029 12:56:24.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.537" endtime="20201029 12:56:24.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.177" endtime="20201029 12:56:24.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.176" endtime="20201029 12:56:24.561"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.570" endtime="20201029 12:56:24.588"></status>
</kw>
<msg timestamp="20201029 12:56:24.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:24.569" endtime="20201029 12:56:24.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:24.590" endtime="20201029 12:56:24.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.592" endtime="20201029 12:56:24.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.566" endtime="20201029 12:56:24.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.564" endtime="20201029 12:56:24.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.602" endtime="20201029 12:56:24.888"></status>
</kw>
<msg timestamp="20201029 12:56:24.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02130625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:24.600" endtime="20201029 12:56:24.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02130625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:24.895" endtime="20201029 12:56:24.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.905" endtime="20201029 12:56:24.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.598" endtime="20201029 12:56:24.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.596" endtime="20201029 12:56:24.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:24.913" level="INFO">${RESULT} = [{'diff': 6.413900000000125e-05}, {'diff': 6.504200000000127e-05}, {'diff': 6.47089999999996e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.454200000000077e-05}, {'diff': 6.468100000000046e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:24.909" endtime="20201029 12:56:24.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:24.918" level="INFO">${ACCURACY} = {'diff': [6.413900000000125e-05, 6.504200000000127e-05, 6.47089999999996e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.468100000000046e-05, 6.480499999999764e-05, 6.493000000000124e-05, 6.41660...</msg>
<status status="PASS" starttime="20201029 12:56:24.914" endtime="20201029 12:56:24.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.922" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:56:24.921" endtime="20201029 12:56:24.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.925" level="INFO">VALUE: [6.413900000000125e-05, 6.504200000000127e-05, 6.47089999999996e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.468100000000046e-05, 6.480499999999764e-05, 6.493000000000124e-05, 6.416600000000092e-05, 6.480499999999764e-05, 6.495800000000038e-05, 6.445799999999988e-05, 6.481900000000068e-05, 6.426400000000138e-05, 6.505600000000084e-05, 6.45280000000012e-05, 6.482000000000016e-05, 6.466700000000089e-05, 6.436100000000236e-05, 6.409799999999855e-05, 6.479200000000102e-05, 6.488899999999853e-05, 6.506899999999746e-05, 6.463900000000175e-05, 6.44029999999976e-05, 6.484699999999982e-05, 6.477799999999798e-05, 6.49440000000008e-05, 6.462499999999871e-05, 6.42500000000018e-05, 6.419499999999953e-05, 6.426400000000138e-05, 6.458399999999948e-05, 6.447199999999945e-05, 6.43340000000027e-05, 6.43340000000027e-05, 6.451400000000163e-05, 6.429100000000104e-05, 6.44440000000003e-05, 6.436099999999889e-05, 6.440300000000107e-05, 6.465299999999785e-05, 6.423599999999877e-05, 6.481900000000068e-05, 6.497199999999995e-05, 6.483300000000025e-05, 6.476400000000188e-05, 6.436199999999836e-05, 6.413900000000125e-05, 6.502799999999823e-05]</msg>
<status status="PASS" starttime="20201029 12:56:24.924" endtime="20201029 12:56:24.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.919" endtime="20201029 12:56:24.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:24.932" endtime="20201029 12:56:24.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.930" endtime="20201029 12:56:24.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.929" endtime="20201029 12:56:24.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.562" endtime="20201029 12:56:24.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.562" endtime="20201029 12:56:24.953"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.961" endtime="20201029 12:56:24.979"></status>
</kw>
<msg timestamp="20201029 12:56:24.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:24.960" endtime="20201029 12:56:24.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:24.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:24.980" endtime="20201029 12:56:24.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.983" endtime="20201029 12:56:24.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.957" endtime="20201029 12:56:24.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.955" endtime="20201029 12:56:24.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:24.993" endtime="20201029 12:56:25.295"></status>
</kw>
<msg timestamp="20201029 12:56:25.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:24.991" endtime="20201029 12:56:25.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:25.299" endtime="20201029 12:56:25.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.308" endtime="20201029 12:56:25.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.988" endtime="20201029 12:56:25.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.986" endtime="20201029 12:56:25.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:25.315" level="INFO">${RESULT} = [{'diff': 6.573600000000027e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.588800000000006e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.55969999999971e-05}, {'diff': 6.59440000000018e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:25.312" endtime="20201029 12:56:25.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:25.320" level="INFO">${ACCURACY} = {'diff': [6.573600000000027e-05, 6.512499999999921e-05, 6.588800000000006e-05, 6.509700000000007e-05, 6.55969999999971e-05, 6.59440000000018e-05, 6.57220000000007e-05, 6.591699999999867e-05, 6.5611000...</msg>
<status status="PASS" starttime="20201029 12:56:25.316" endtime="20201029 12:56:25.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.325" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:56:25.324" endtime="20201029 12:56:25.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.328" level="INFO">VALUE: [6.573600000000027e-05, 6.512499999999921e-05, 6.588800000000006e-05, 6.509700000000007e-05, 6.55969999999971e-05, 6.59440000000018e-05, 6.57220000000007e-05, 6.591699999999867e-05, 6.561100000000014e-05, 6.511099999999964e-05, 6.55969999999971e-05, 6.52220000000002e-05, 6.57639999999994e-05, 6.573600000000027e-05, 6.541699999999817e-05, 6.598600000000052e-05, 6.519500000000053e-05, 6.524999999999934e-05, 6.59029999999991e-05, 6.606900000000193e-05, 6.59440000000018e-05, 6.523599999999977e-05, 6.562499999999971e-05, 6.573600000000027e-05, 6.5583000000001e-05, 6.529200000000152e-05, 6.565299999999885e-05, 6.60419999999988e-05, 6.562499999999971e-05, 6.602799999999923e-05, 6.563899999999928e-05, 6.509799999999955e-05, 6.544500000000078e-05, 6.516700000000139e-05, 6.511099999999964e-05, 6.530500000000161e-05, 6.605500000000236e-05, 6.534699999999685e-05, 6.594500000000128e-05, 6.595799999999791e-05, 6.59029999999991e-05, 6.54029999999986e-05, 6.568100000000146e-05, 6.594499999999781e-05, 6.512499999999921e-05, 6.559700000000057e-05, 6.552799999999873e-05, 6.511199999999912e-05, 6.605599999999837e-05, 6.598600000000052e-05]</msg>
<status status="PASS" starttime="20201029 12:56:25.326" endtime="20201029 12:56:25.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.321" endtime="20201029 12:56:25.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:25.333" endtime="20201029 12:56:25.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.331" endtime="20201029 12:56:25.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.330" endtime="20201029 12:56:25.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.954" endtime="20201029 12:56:25.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:24.953" endtime="20201029 12:56:25.354"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.362" endtime="20201029 12:56:25.379"></status>
</kw>
<msg timestamp="20201029 12:56:25.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:25.360" endtime="20201029 12:56:25.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:25.380" endtime="20201029 12:56:25.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.383" endtime="20201029 12:56:25.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.358" endtime="20201029 12:56:25.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.356" endtime="20201029 12:56:25.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.392" endtime="20201029 12:56:25.678"></status>
</kw>
<msg timestamp="20201029 12:56:25.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:25.390" endtime="20201029 12:56:25.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:25.682" endtime="20201029 12:56:25.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.690" endtime="20201029 12:56:25.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.388" endtime="20201029 12:56:25.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.386" endtime="20201029 12:56:25.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:25.697" level="INFO">${RESULT} = [{'diff': 6.683399999999826e-05}, {'diff': 6.670800000000213e-05}, {'diff': 6.638900000000003e-05}, {'diff': 6.686100000000139e-05}, {'diff': 6.638800000000056e-05}, {'diff': 6.698600000000152e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:25.694" endtime="20201029 12:56:25.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:25.701" level="INFO">${ACCURACY} = {'diff': [6.683399999999826e-05, 6.670800000000213e-05, 6.638900000000003e-05, 6.686100000000139e-05, 6.638800000000056e-05, 6.698600000000152e-05, 6.616699999999892e-05, 6.668099999999899e-05, 6.6929...</msg>
<status status="PASS" starttime="20201029 12:56:25.698" endtime="20201029 12:56:25.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.705" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:56:25.704" endtime="20201029 12:56:25.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.708" level="INFO">VALUE: [6.683399999999826e-05, 6.670800000000213e-05, 6.638900000000003e-05, 6.686100000000139e-05, 6.638800000000056e-05, 6.698600000000152e-05, 6.616699999999892e-05, 6.668099999999899e-05, 6.692999999999977e-05, 6.691699999999967e-05, 6.681900000000268e-05, 6.705599999999937e-05, 6.683300000000225e-05, 6.645899999999788e-05, 6.62090000000011e-05, 6.612500000000021e-05, 6.67640000000004e-05, 6.640300000000307e-05, 6.674999999999737e-05, 6.67770000000005e-05, 6.697199999999848e-05, 6.661100000000114e-05, 6.658299999999853e-05, 6.673600000000127e-05, 6.708299999999903e-05, 6.629199999999905e-05, 6.700000000000109e-05, 6.611100000000064e-05, 6.638900000000003e-05, 6.625000000000034e-05, 6.637500000000046e-05, 6.679199999999955e-05, 6.706900000000293e-05, 6.63480000000008e-05, 6.631899999999871e-05, 6.629099999999957e-05, 6.700000000000109e-05, 6.634699999999785e-05, 6.633299999999828e-05, 6.705499999999989e-05, 6.684699999999835e-05, 6.670800000000213e-05, 6.70839999999985e-05, 6.616700000000239e-05, 6.650000000000059e-05, 6.613899999999978e-05, 6.62639999999999e-05, 6.648600000000102e-05, 6.668099999999899e-05, 6.698599999999805e-05]</msg>
<status status="PASS" starttime="20201029 12:56:25.706" endtime="20201029 12:56:25.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.702" endtime="20201029 12:56:25.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:25.717" endtime="20201029 12:56:25.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.716" endtime="20201029 12:56:25.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.715" endtime="20201029 12:56:25.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.354" endtime="20201029 12:56:25.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.354" endtime="20201029 12:56:25.738"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.747" endtime="20201029 12:56:25.766"></status>
</kw>
<msg timestamp="20201029 12:56:25.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:25.745" endtime="20201029 12:56:25.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:25.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:25.767" endtime="20201029 12:56:25.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.770" endtime="20201029 12:56:25.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.743" endtime="20201029 12:56:25.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.741" endtime="20201029 12:56:25.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:25.779" endtime="20201029 12:56:26.064"></status>
</kw>
<msg timestamp="20201029 12:56:26.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:25.777" endtime="20201029 12:56:26.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0206765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020744528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:26.069" endtime="20201029 12:56:26.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.077" endtime="20201029 12:56:26.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.775" endtime="20201029 12:56:26.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.773" endtime="20201029 12:56:26.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:26.083" level="INFO">${RESULT} = [{'diff': 6.802800000000123e-05}, {'diff': 6.781999999999969e-05}, {'diff': 6.729200000000005e-05}, {'diff': 6.79030000000011e-05}, {'diff': 6.770899999999913e-05}, {'diff': 6.73480000000018e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:26.080" endtime="20201029 12:56:26.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:26.088" level="INFO">${ACCURACY} = {'diff': [6.802800000000123e-05, 6.781999999999969e-05, 6.729200000000005e-05, 6.79030000000011e-05, 6.770899999999913e-05, 6.73480000000018e-05, 6.756899999999996e-05, 6.755599999999987e-05, 6.709699...</msg>
<status status="PASS" starttime="20201029 12:56:26.084" endtime="20201029 12:56:26.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.092" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:56:26.091" endtime="20201029 12:56:26.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.094" level="INFO">VALUE: [6.802800000000123e-05, 6.781999999999969e-05, 6.729200000000005e-05, 6.79030000000011e-05, 6.770899999999913e-05, 6.73480000000018e-05, 6.756899999999996e-05, 6.755599999999987e-05, 6.70969999999986e-05, 6.713900000000078e-05, 6.804100000000132e-05, 6.787499999999849e-05, 6.708299999999903e-05, 6.80420000000008e-05, 6.712500000000121e-05, 6.729200000000005e-05, 6.787499999999849e-05, 6.731999999999919e-05, 6.793100000000024e-05, 6.770899999999913e-05, 6.776300000000193e-05, 6.787499999999849e-05, 6.740200000000113e-05, 6.787500000000196e-05, 6.773600000000227e-05, 6.765300000000085e-05, 6.770799999999966e-05, 6.786099999999892e-05, 6.775000000000184e-05, 6.763899999999781e-05, 6.738900000000103e-05, 6.806999999999994e-05, 6.776399999999794e-05, 6.80420000000008e-05, 6.780600000000012e-05, 6.77640000000014e-05, 6.734699999999885e-05, 6.77359999999988e-05, 6.791700000000067e-05, 6.781900000000021e-05, 6.762500000000171e-05, 6.70969999999986e-05, 6.716699999999992e-05, 6.787499999999849e-05, 6.802800000000123e-05, 6.727800000000048e-05, 6.716600000000045e-05, 6.794499999999981e-05, 6.77090000000026e-05, 6.716699999999992e-05]</msg>
<status status="PASS" starttime="20201029 12:56:26.093" endtime="20201029 12:56:26.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.088" endtime="20201029 12:56:26.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:26.100" endtime="20201029 12:56:26.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.099" endtime="20201029 12:56:26.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.098" endtime="20201029 12:56:26.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.739" endtime="20201029 12:56:26.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:25.738" endtime="20201029 12:56:26.121"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.130" endtime="20201029 12:56:26.148"></status>
</kw>
<msg timestamp="20201029 12:56:26.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:26.128" endtime="20201029 12:56:26.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:26.149" endtime="20201029 12:56:26.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.152" endtime="20201029 12:56:26.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.126" endtime="20201029 12:56:26.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.123" endtime="20201029 12:56:26.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.161" endtime="20201029 12:56:26.447"></status>
</kw>
<msg timestamp="20201029 12:56:26.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:26.159" endtime="20201029 12:56:26.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:26.451" endtime="20201029 12:56:26.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.459" endtime="20201029 12:56:26.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.156" endtime="20201029 12:56:26.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.155" endtime="20201029 12:56:26.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:26.466" level="INFO">${RESULT} = [{'diff': 6.894499999999734e-05}, {'diff': 6.862499999999924e-05}, {'diff': 6.851400000000216e-05}, {'diff': 6.859800000000305e-05}, {'diff': 6.90559999999979e-05}, {'diff': 6.824999999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:26.462" endtime="20201029 12:56:26.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:26.470" level="INFO">${ACCURACY} = {'diff': [6.894499999999734e-05, 6.862499999999924e-05, 6.851400000000216e-05, 6.859800000000305e-05, 6.90559999999979e-05, 6.824999999999887e-05, 6.868100000000099e-05, 6.847199999999998e-05, 6.90139...</msg>
<status status="PASS" starttime="20201029 12:56:26.467" endtime="20201029 12:56:26.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.475" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:56:26.474" endtime="20201029 12:56:26.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.477" level="INFO">VALUE: [6.894499999999734e-05, 6.862499999999924e-05, 6.851400000000216e-05, 6.859800000000305e-05, 6.90559999999979e-05, 6.824999999999887e-05, 6.868100000000099e-05, 6.847199999999998e-05, 6.901399999999919e-05, 6.895800000000091e-05, 6.845800000000041e-05, 6.829100000000157e-05, 6.868000000000152e-05, 6.827800000000148e-05, 6.858300000000053e-05, 6.880599999999765e-05, 6.856900000000096e-05, 6.905600000000137e-05, 6.870900000000013e-05, 6.901399999999919e-05, 6.812499999999874e-05, 6.905600000000137e-05, 6.854100000000182e-05, 6.838799999999909e-05, 6.894399999999787e-05, 6.85970000000001e-05, 6.856900000000096e-05, 6.863900000000228e-05, 6.888899999999906e-05, 6.852799999999826e-05, 6.851399999999869e-05, 6.808300000000003e-05, 6.886099999999992e-05, 6.895900000000038e-05, 6.899999999999962e-05, 6.829199999999758e-05, 6.822300000000267e-05, 6.888799999999959e-05, 6.851299999999921e-05, 6.827699999999853e-05, 6.870800000000066e-05, 6.861099999999967e-05, 6.818099999999702e-05, 6.869400000000109e-05, 6.87359999999998e-05, 6.861100000000314e-05, 6.870800000000066e-05, 6.868100000000099e-05, 6.897200000000048e-05, 6.87640000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:56:26.476" endtime="20201029 12:56:26.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.471" endtime="20201029 12:56:26.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:26.483" endtime="20201029 12:56:26.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.481" endtime="20201029 12:56:26.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.480" endtime="20201029 12:56:26.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.122" endtime="20201029 12:56:26.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.121" endtime="20201029 12:56:26.503"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.512" endtime="20201029 12:56:26.529"></status>
</kw>
<msg timestamp="20201029 12:56:26.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:26.510" endtime="20201029 12:56:26.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:26.531" endtime="20201029 12:56:26.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.533" endtime="20201029 12:56:26.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.508" endtime="20201029 12:56:26.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.506" endtime="20201029 12:56:26.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.542" endtime="20201029 12:56:26.832"></status>
</kw>
<msg timestamp="20201029 12:56:26.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:26.541" endtime="20201029 12:56:26.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:26.836" endtime="20201029 12:56:26.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.844" endtime="20201029 12:56:26.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.538" endtime="20201029 12:56:26.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.537" endtime="20201029 12:56:26.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:26.850" level="INFO">${RESULT} = [{'diff': 6.938900000000303e-05}, {'diff': 6.966699999999895e-05}, {'diff': 7.005499999999942e-05}, {'diff': 6.988900000000006e-05}, {'diff': 6.917999999999855e-05}, {'diff': 6.986100000000092e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:26.847" endtime="20201029 12:56:26.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:26.854" level="INFO">${ACCURACY} = {'diff': [6.938900000000303e-05, 6.966699999999895e-05, 7.005499999999942e-05, 6.988900000000006e-05, 6.917999999999855e-05, 6.986100000000092e-05, 6.934700000000085e-05, 6.92360000000003e-05, 6.99860...</msg>
<status status="PASS" starttime="20201029 12:56:26.851" endtime="20201029 12:56:26.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.859" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:56:26.858" endtime="20201029 12:56:26.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.861" level="INFO">VALUE: [6.938900000000303e-05, 6.966699999999895e-05, 7.005499999999942e-05, 6.988900000000006e-05, 6.917999999999855e-05, 6.986100000000092e-05, 6.934700000000085e-05, 6.92360000000003e-05, 6.998600000000105e-05, 6.940299999999913e-05, 6.959699999999763e-05, 6.9584000000001e-05, 6.912499999999974e-05, 6.951399999999969e-05, 6.969500000000156e-05, 6.965199999999991e-05, 6.936200000000337e-05, 6.963800000000034e-05, 6.924999999999987e-05, 6.954099999999935e-05, 6.94299999999988e-05, 6.920799999999769e-05, 6.994399999999887e-05, 6.975000000000037e-05, 6.92360000000003e-05, 7.00559999999989e-05, 6.95559999999984e-05, 6.979199999999908e-05, 7.002799999999976e-05, 6.92360000000003e-05, 6.956899999999849e-05, 6.936100000000042e-05, 6.911100000000017e-05, 6.927699999999953e-05, 6.911100000000017e-05, 6.997200000000148e-05, 7.002799999999976e-05, 6.958299999999806e-05, 6.933300000000128e-05, 7.000000000000062e-05, 6.958299999999806e-05, 6.950000000000012e-05, 6.916699999999845e-05, 6.976399999999994e-05, 6.941599999999923e-05, 6.997300000000095e-05, 6.934800000000033e-05, 7.008300000000203e-05, 6.962500000000024e-05, 6.911100000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:56:26.860" endtime="20201029 12:56:26.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.855" endtime="20201029 12:56:26.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:26.866" endtime="20201029 12:56:26.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.865" endtime="20201029 12:56:26.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.864" endtime="20201029 12:56:26.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.504" endtime="20201029 12:56:26.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.504" endtime="20201029 12:56:26.887"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.896" endtime="20201029 12:56:26.914"></status>
</kw>
<msg timestamp="20201029 12:56:26.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:26.894" endtime="20201029 12:56:26.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:26.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:26.915" endtime="20201029 12:56:26.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.918" endtime="20201029 12:56:26.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.892" endtime="20201029 12:56:26.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.889" endtime="20201029 12:56:26.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:26.927" endtime="20201029 12:56:27.215"></status>
</kw>
<msg timestamp="20201029 12:56:27.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021041792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:26.925" endtime="20201029 12:56:27.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021041792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021112153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:27.219" endtime="20201029 12:56:27.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.228" endtime="20201029 12:56:27.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.923" endtime="20201029 12:56:27.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.921" endtime="20201029 12:56:27.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:27.234" level="INFO">${RESULT} = [{'diff': 7.036100000000142e-05}, {'diff': 7.012500000000074e-05}, {'diff': 7.031899999999924e-05}, {'diff': 7.086199999999793e-05}, {'diff': 7.049999999999765e-05}, {'diff': 7.084699999999888e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:27.231" endtime="20201029 12:56:27.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:27.238" level="INFO">${ACCURACY} = {'diff': [7.036100000000142e-05, 7.012500000000074e-05, 7.031899999999924e-05, 7.086199999999793e-05, 7.049999999999765e-05, 7.084699999999888e-05, 7.095800000000291e-05, 7.1069e-05, 7.105500000000042...</msg>
<status status="PASS" starttime="20201029 12:56:27.235" endtime="20201029 12:56:27.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.243" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:56:27.242" endtime="20201029 12:56:27.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.245" level="INFO">VALUE: [7.036100000000142e-05, 7.012500000000074e-05, 7.031899999999924e-05, 7.086199999999793e-05, 7.049999999999765e-05, 7.084699999999888e-05, 7.095800000000291e-05, 7.1069e-05, 7.105500000000042e-05, 7.072200000000223e-05, 7.075000000000137e-05, 7.068099999999952e-05, 7.070899999999866e-05, 7.106999999999947e-05, 7.047199999999851e-05, 7.093099999999977e-05, 7.020800000000216e-05, 7.070899999999866e-05, 7.031899999999924e-05, 7.033299999999881e-05, 7.081900000000321e-05, 7.048600000000155e-05, 7.09300000000003e-05, 7.054199999999983e-05, 7.063900000000081e-05, 7.031899999999924e-05, 7.088900000000106e-05, 7.088899999999759e-05, 7.026399999999697e-05, 7.030599999999915e-05, 7.051399999999722e-05, 7.011199999999718e-05, 7.038900000000056e-05, 7.031899999999924e-05, 7.07360000000018e-05, 7.036099999999795e-05, 7.097199999999901e-05, 7.068000000000005e-05, 7.090300000000063e-05, 7.076400000000094e-05, 7.05559999999994e-05, 7.088900000000106e-05, 7.108299999999956e-05, 7.029199999999958e-05, 7.034700000000185e-05, 7.037499999999752e-05, 7.062499999999777e-05, 7.036100000000142e-05, 7.025000000000087e-05, 7.087500000000149e-05]</msg>
<status status="PASS" starttime="20201029 12:56:27.244" endtime="20201029 12:56:27.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.239" endtime="20201029 12:56:27.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:27.251" endtime="20201029 12:56:27.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.250" endtime="20201029 12:56:27.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.249" endtime="20201029 12:56:27.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.888" endtime="20201029 12:56:27.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:26.887" endtime="20201029 12:56:27.272"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.281" endtime="20201029 12:56:27.299"></status>
</kw>
<msg timestamp="20201029 12:56:27.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:27.279" endtime="20201029 12:56:27.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:27.301" endtime="20201029 12:56:27.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.303" endtime="20201029 12:56:27.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.277" endtime="20201029 12:56:27.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.275" endtime="20201029 12:56:27.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.312" endtime="20201029 12:56:27.613"></status>
</kw>
<msg timestamp="20201029 12:56:27.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:27.311" endtime="20201029 12:56:27.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019980292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:27.617" endtime="20201029 12:56:27.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.625" endtime="20201029 12:56:27.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.308" endtime="20201029 12:56:27.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.306" endtime="20201029 12:56:27.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:27.632" level="INFO">${RESULT} = [{'diff': 7.194400000000087e-05}, {'diff': 7.130600000000015e-05}, {'diff': 7.109699999999913e-05}, {'diff': 7.17499999999989e-05}, {'diff': 7.202800000000176e-05}, {'diff': 7.12230000000022e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:27.629" endtime="20201029 12:56:27.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:27.637" level="INFO">${ACCURACY} = {'diff': [7.194400000000087e-05, 7.130600000000015e-05, 7.109699999999913e-05, 7.17499999999989e-05, 7.202800000000176e-05, 7.12230000000022e-05, 7.118100000000002e-05, 7.180600000000065e-05, 7.143100...</msg>
<status status="PASS" starttime="20201029 12:56:27.633" endtime="20201029 12:56:27.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.641" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:56:27.640" endtime="20201029 12:56:27.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.644" level="INFO">VALUE: [7.194400000000087e-05, 7.130600000000015e-05, 7.109699999999913e-05, 7.17499999999989e-05, 7.202800000000176e-05, 7.12230000000022e-05, 7.118100000000002e-05, 7.180600000000065e-05, 7.143100000000027e-05, 7.154100000000135e-05, 7.154099999999788e-05, 7.140200000000166e-05, 7.188900000000206e-05, 7.163899999999834e-05, 7.205500000000142e-05, 7.133299999999981e-05, 7.162499999999877e-05, 7.152800000000126e-05, 7.169500000000009e-05, 7.104200000000033e-05, 7.195800000000044e-05, 7.10979999999986e-05, 7.130600000000015e-05, 7.145799999999994e-05, 7.12499999999984e-05, 7.15690000000005e-05, 7.11109999999987e-05, 7.158300000000006e-05, 7.118100000000002e-05, 7.113900000000131e-05, 7.145899999999941e-05, 7.179200000000108e-05, 7.133299999999981e-05, 7.170899999999966e-05, 7.115300000000088e-05, 7.201399999999872e-05, 7.188899999999859e-05, 7.176399999999847e-05, 7.155499999999745e-05, 7.145799999999994e-05, 7.127800000000101e-05, 7.205500000000142e-05, 7.169400000000062e-05, 7.111100000000217e-05, 7.169500000000009e-05, 7.136099999999895e-05, 7.195800000000044e-05, 7.17499999999989e-05, 7.138899999999809e-05, 7.15560000000004e-05]</msg>
<status status="PASS" starttime="20201029 12:56:27.643" endtime="20201029 12:56:27.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.638" endtime="20201029 12:56:27.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:27.649" endtime="20201029 12:56:27.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.647" endtime="20201029 12:56:27.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.646" endtime="20201029 12:56:27.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.273" endtime="20201029 12:56:27.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.273" endtime="20201029 12:56:27.670"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.678" endtime="20201029 12:56:27.696"></status>
</kw>
<msg timestamp="20201029 12:56:27.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:27.677" endtime="20201029 12:56:27.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:27.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:27.698" endtime="20201029 12:56:27.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.700" endtime="20201029 12:56:27.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.674" endtime="20201029 12:56:27.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.672" endtime="20201029 12:56:27.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:27.710" endtime="20201029 12:56:27.997"></status>
</kw>
<msg timestamp="20201029 12:56:28.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:27.708" endtime="20201029 12:56:28.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019855583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:28.001" endtime="20201029 12:56:28.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.009" endtime="20201029 12:56:28.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.706" endtime="20201029 12:56:28.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.704" endtime="20201029 12:56:28.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:28.016" level="INFO">${RESULT} = [{'diff': 7.256899999999802e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.287500000000002e-05}, {'diff': 7.258399999999707e-05}, {'diff': 7.252800000000226e-05}, {'diff': 7.26110000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:28.013" endtime="20201029 12:56:28.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:28.020" level="INFO">${ACCURACY} = {'diff': [7.256899999999802e-05, 7.268099999999805e-05, 7.287500000000002e-05, 7.258399999999707e-05, 7.252800000000226e-05, 7.26110000000002e-05, 7.22629999999995e-05, 7.259699999999716e-05, 7.265199...</msg>
<status status="PASS" starttime="20201029 12:56:28.017" endtime="20201029 12:56:28.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.025" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:56:28.024" endtime="20201029 12:56:28.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.027" level="INFO">VALUE: [7.256899999999802e-05, 7.268099999999805e-05, 7.287500000000002e-05, 7.258399999999707e-05, 7.252800000000226e-05, 7.26110000000002e-05, 7.22629999999995e-05, 7.259699999999716e-05, 7.265199999999944e-05, 7.291599999999926e-05, 7.263899999999934e-05, 7.258300000000106e-05, 7.305500000000242e-05, 7.294400000000187e-05, 7.254199999999836e-05, 7.29170000000022e-05, 7.280599999999818e-05, 7.241699999999823e-05, 7.232000000000072e-05, 7.280599999999818e-05, 7.230600000000115e-05, 7.231900000000124e-05, 7.297200000000101e-05, 7.267999999999858e-05, 7.247200000000051e-05, 7.292999999999883e-05, 7.304200000000233e-05, 7.286100000000045e-05, 7.290299999999916e-05, 7.236099999999995e-05, 7.270900000000066e-05, 7.233300000000081e-05, 7.284700000000088e-05, 7.21109999999997e-05, 7.298700000000005e-05, 7.304099999999938e-05, 7.292999999999883e-05, 7.273600000000033e-05, 7.270800000000119e-05, 7.231900000000124e-05, 7.238900000000256e-05, 7.273600000000033e-05, 7.27499999999999e-05, 7.236099999999995e-05, 7.284699999999741e-05, 7.282000000000122e-05, 7.300000000000015e-05, 7.298700000000005e-05, 7.22230000000032e-05, 7.300000000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:56:28.026" endtime="20201029 12:56:28.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.021" endtime="20201029 12:56:28.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:28.032" endtime="20201029 12:56:28.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.030" endtime="20201029 12:56:28.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.029" endtime="20201029 12:56:28.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.671" endtime="20201029 12:56:28.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:27.670" endtime="20201029 12:56:28.053"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.062" endtime="20201029 12:56:28.081"></status>
</kw>
<msg timestamp="20201029 12:56:28.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:28.060" endtime="20201029 12:56:28.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:28.082" endtime="20201029 12:56:28.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.085" endtime="20201029 12:56:28.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.057" endtime="20201029 12:56:28.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.055" endtime="20201029 12:56:28.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.094" endtime="20201029 12:56:28.397"></status>
</kw>
<msg timestamp="20201029 12:56:28.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020634806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:28.092" endtime="20201029 12:56:28.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020634806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:28.401" endtime="20201029 12:56:28.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.409" endtime="20201029 12:56:28.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.090" endtime="20201029 12:56:28.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.088" endtime="20201029 12:56:28.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:28.416" level="INFO">${RESULT} = [{'diff': 7.313899999999984e-05}, {'diff': 7.350000000000065e-05}, {'diff': 7.336100000000095e-05}, {'diff': 7.330599999999868e-05}, {'diff': 7.308399999999757e-05}, {'diff': 7.367999999999958e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:28.413" endtime="20201029 12:56:28.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:28.420" level="INFO">${ACCURACY} = {'diff': [7.313899999999984e-05, 7.350000000000065e-05, 7.336100000000095e-05, 7.330599999999868e-05, 7.308399999999757e-05, 7.367999999999958e-05, 7.388800000000112e-05, 7.402699999999734e-05, 7.4054...</msg>
<status status="PASS" starttime="20201029 12:56:28.417" endtime="20201029 12:56:28.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.425" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:56:28.423" endtime="20201029 12:56:28.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.427" level="INFO">VALUE: [7.313899999999984e-05, 7.350000000000065e-05, 7.336100000000095e-05, 7.330599999999868e-05, 7.308399999999757e-05, 7.367999999999958e-05, 7.388800000000112e-05, 7.402699999999734e-05, 7.405499999999995e-05, 7.319399999999865e-05, 7.349999999999718e-05, 7.381900000000274e-05, 7.331999999999825e-05, 7.312500000000027e-05, 7.373600000000133e-05, 7.333300000000181e-05, 7.391699999999973e-05, 7.405599999999943e-05, 7.338900000000009e-05, 7.39439999999994e-05, 7.370799999999872e-05, 7.317999999999908e-05, 7.365299999999991e-05, 7.354099999999988e-05, 7.341699999999923e-05, 7.361099999999773e-05, 7.401400000000072e-05, 7.406899999999952e-05, 7.319499999999812e-05, 7.388900000000059e-05, 7.373600000000133e-05, 7.409700000000213e-05, 7.358399999999807e-05, 7.400000000000115e-05, 7.323600000000083e-05, 7.363900000000034e-05, 7.402700000000081e-05, 7.373600000000133e-05, 7.312500000000027e-05, 7.323600000000083e-05, 7.398600000000158e-05, 7.380599999999918e-05, 7.340299999999966e-05, 7.336100000000095e-05, 7.379199999999961e-05, 7.330599999999868e-05, 7.376400000000047e-05, 7.388800000000112e-05, 7.386099999999798e-05, 7.370800000000219e-05]</msg>
<status status="PASS" starttime="20201029 12:56:28.426" endtime="20201029 12:56:28.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.421" endtime="20201029 12:56:28.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:28.433" endtime="20201029 12:56:28.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.431" endtime="20201029 12:56:28.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.430" endtime="20201029 12:56:28.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.054" endtime="20201029 12:56:28.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.053" endtime="20201029 12:56:28.454"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.462" endtime="20201029 12:56:28.479"></status>
</kw>
<msg timestamp="20201029 12:56:28.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:28.461" endtime="20201029 12:56:28.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:28.481" endtime="20201029 12:56:28.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.483" endtime="20201029 12:56:28.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.458" endtime="20201029 12:56:28.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.456" endtime="20201029 12:56:28.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.492" endtime="20201029 12:56:28.778"></status>
</kw>
<msg timestamp="20201029 12:56:28.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:28.491" endtime="20201029 12:56:28.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:28.783" endtime="20201029 12:56:28.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.791" endtime="20201029 12:56:28.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.488" endtime="20201029 12:56:28.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.486" endtime="20201029 12:56:28.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:28.797" level="INFO">${RESULT} = [{'diff': 7.43050000000002e-05}, {'diff': 7.419499999999912e-05}, {'diff': 7.448599999999861e-05}, {'diff': 7.411099999999823e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.4069999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:56:28.794" endtime="20201029 12:56:28.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:28.802" level="INFO">${ACCURACY} = {'diff': [7.43050000000002e-05, 7.419499999999912e-05, 7.448599999999861e-05, 7.411099999999823e-05, 7.488900000000159e-05, 7.4069999999999e-05, 7.466600000000101e-05, 7.461099999999873e-05, 7.4096999...</msg>
<status status="PASS" starttime="20201029 12:56:28.798" endtime="20201029 12:56:28.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.807" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:56:28.806" endtime="20201029 12:56:28.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.809" level="INFO">VALUE: [7.43050000000002e-05, 7.419499999999912e-05, 7.448599999999861e-05, 7.411099999999823e-05, 7.488900000000159e-05, 7.4069999999999e-05, 7.466600000000101e-05, 7.461099999999873e-05, 7.409699999999866e-05, 7.48050000000007e-05, 7.451400000000122e-05, 7.416699999999998e-05, 7.461099999999873e-05, 7.434699999999891e-05, 7.452799999999732e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.497299999999901e-05, 7.499999999999868e-05, 7.480600000000018e-05, 7.430599999999968e-05, 7.452700000000131e-05, 7.486099999999898e-05, 7.481900000000027e-05, 7.498599999999911e-05, 7.469400000000015e-05, 7.444499999999937e-05, 7.479200000000061e-05, 7.483300000000331e-05, 7.495899999999944e-05, 7.505599999999696e-05, 7.411099999999823e-05, 7.422299999999826e-05, 7.429200000000011e-05, 7.488900000000159e-05, 7.487500000000202e-05, 7.481900000000027e-05, 7.483299999999984e-05, 7.497200000000301e-05, 7.469400000000015e-05, 7.437500000000152e-05, 7.49310000000003e-05, 7.418099999999955e-05, 7.447200000000251e-05, 7.501399999999825e-05, 7.429200000000011e-05, 7.470900000000266e-05, 7.49440000000004e-05, 7.507e-05, 7.479099999999766e-05]</msg>
<status status="PASS" starttime="20201029 12:56:28.808" endtime="20201029 12:56:28.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.803" endtime="20201029 12:56:28.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:28.814" endtime="20201029 12:56:28.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.813" endtime="20201029 12:56:28.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.812" endtime="20201029 12:56:28.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.455" endtime="20201029 12:56:28.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.454" endtime="20201029 12:56:28.835"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.844" endtime="20201029 12:56:28.862"></status>
</kw>
<msg timestamp="20201029 12:56:28.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:28.842" endtime="20201029 12:56:28.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:28.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:28.864" endtime="20201029 12:56:28.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.866" endtime="20201029 12:56:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.840" endtime="20201029 12:56:28.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.838" endtime="20201029 12:56:28.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:28.875" endtime="20201029 12:56:29.163"></status>
</kw>
<msg timestamp="20201029 12:56:29.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:28.874" endtime="20201029 12:56:29.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019810042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:29.167" endtime="20201029 12:56:29.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.175" endtime="20201029 12:56:29.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.871" endtime="20201029 12:56:29.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.869" endtime="20201029 12:56:29.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:29.182" level="INFO">${RESULT} = [{'diff': 7.584799999999989e-05}, {'diff': 7.570900000000019e-05}, {'diff': 7.577700000000256e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.515200000000194e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:29.178" endtime="20201029 12:56:29.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:29.186" level="INFO">${ACCURACY} = {'diff': [7.584799999999989e-05, 7.570900000000019e-05, 7.577700000000256e-05, 7.543000000000133e-05, 7.534699999999991e-05, 7.515200000000194e-05, 7.531900000000077e-05, 7.541700000000123e-05, 7.5749...</msg>
<status status="PASS" starttime="20201029 12:56:29.183" endtime="20201029 12:56:29.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.190" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:56:29.189" endtime="20201029 12:56:29.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.193" level="INFO">VALUE: [7.584799999999989e-05, 7.570900000000019e-05, 7.577700000000256e-05, 7.543000000000133e-05, 7.534699999999991e-05, 7.515200000000194e-05, 7.531900000000077e-05, 7.541700000000123e-05, 7.574999999999943e-05, 7.581900000000127e-05, 7.541700000000123e-05, 7.523599999999936e-05, 7.565299999999844e-05, 7.512500000000227e-05, 7.529099999999816e-05, 7.573599999999986e-05, 7.570800000000072e-05, 7.541599999999829e-05, 7.577799999999857e-05, 7.555499999999798e-05, 7.537499999999905e-05, 7.580599999999771e-05, 7.594500000000087e-05, 7.577800000000204e-05, 7.568100000000105e-05, 7.59310000000013e-05, 7.583400000000032e-05, 7.577799999999857e-05, 7.583400000000032e-05, 7.508399999999957e-05, 7.524999999999893e-05, 7.51249999999988e-05, 7.513899999999837e-05, 7.599999999999968e-05, 7.5763999999999e-05, 7.59440000000014e-05, 7.561099999999973e-05, 7.519399999999718e-05, 7.548599999999961e-05, 7.559799999999964e-05, 7.552799999999832e-05, 7.588899999999912e-05, 7.509799999999914e-05, 7.534699999999991e-05, 7.563899999999887e-05, 7.511099999999923e-05, 7.56110000000032e-05, 7.534699999999991e-05, 7.534699999999991e-05, 7.548599999999961e-05]</msg>
<status status="PASS" starttime="20201029 12:56:29.192" endtime="20201029 12:56:29.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.187" endtime="20201029 12:56:29.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:29.198" endtime="20201029 12:56:29.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.196" endtime="20201029 12:56:29.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.195" endtime="20201029 12:56:29.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.836" endtime="20201029 12:56:29.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:28.836" endtime="20201029 12:56:29.219"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.227" endtime="20201029 12:56:29.246"></status>
</kw>
<msg timestamp="20201029 12:56:29.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:29.226" endtime="20201029 12:56:29.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:29.248" endtime="20201029 12:56:29.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.250" endtime="20201029 12:56:29.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.223" endtime="20201029 12:56:29.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.221" endtime="20201029 12:56:29.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.259" endtime="20201029 12:56:29.544"></status>
</kw>
<msg timestamp="20201029 12:56:29.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020839028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020915806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:29.257" endtime="20201029 12:56:29.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020839028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020915806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:29.548" endtime="20201029 12:56:29.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.557" endtime="20201029 12:56:29.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.255" endtime="20201029 12:56:29.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.253" endtime="20201029 12:56:29.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:29.563" level="INFO">${RESULT} = [{'diff': 7.677799999999957e-05}, {'diff': 7.693099999999883e-05}, {'diff': 7.620799999999775e-05}, {'diff': 7.709700000000166e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.708299999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:29.560" endtime="20201029 12:56:29.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:29.567" level="INFO">${ACCURACY} = {'diff': [7.677799999999957e-05, 7.693099999999883e-05, 7.620799999999775e-05, 7.709700000000166e-05, 7.61249999999998e-05, 7.708299999999862e-05, 7.659800000000064e-05, 7.702799999999982e-05, 7.62639...</msg>
<status status="PASS" starttime="20201029 12:56:29.564" endtime="20201029 12:56:29.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.572" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:56:29.571" endtime="20201029 12:56:29.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.574" level="INFO">VALUE: [7.677799999999957e-05, 7.693099999999883e-05, 7.620799999999775e-05, 7.709700000000166e-05, 7.61249999999998e-05, 7.708299999999862e-05, 7.659800000000064e-05, 7.702799999999982e-05, 7.62639999999995e-05, 7.684800000000089e-05, 7.624999999999993e-05, 7.674999999999696e-05, 7.633400000000082e-05, 7.695900000000144e-05, 7.682000000000175e-05, 7.695800000000197e-05, 7.66380000000004e-05, 7.609700000000066e-05, 7.634700000000091e-05, 7.627799999999907e-05, 7.673599999999739e-05, 7.661100000000073e-05, 7.613899999999937e-05, 7.686100000000098e-05, 7.680599999999871e-05, 7.654200000000236e-05, 7.698600000000111e-05, 7.665299999999944e-05, 7.668099999999858e-05, 7.616700000000198e-05, 7.61249999999998e-05, 7.683300000000184e-05, 7.688900000000012e-05, 7.706899999999905e-05, 7.655599999999846e-05, 7.665300000000291e-05, 7.6764e-05, 7.682000000000175e-05, 7.677799999999957e-05, 7.670900000000119e-05, 7.616599999999904e-05, 7.654199999999889e-05, 7.70129999999973e-05, 7.665199999999997e-05, 7.61379999999999e-05, 7.680599999999871e-05, 7.701400000000025e-05, 7.61249999999998e-05, 7.630499999999873e-05, 7.622199999999732e-05]</msg>
<status status="PASS" starttime="20201029 12:56:29.573" endtime="20201029 12:56:29.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.568" endtime="20201029 12:56:29.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:29.580" endtime="20201029 12:56:29.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.578" endtime="20201029 12:56:29.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.577" endtime="20201029 12:56:29.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.219" endtime="20201029 12:56:29.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.219" endtime="20201029 12:56:29.601"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.609" endtime="20201029 12:56:29.626"></status>
</kw>
<msg timestamp="20201029 12:56:29.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:29.608" endtime="20201029 12:56:29.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:29.627" endtime="20201029 12:56:29.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.630" endtime="20201029 12:56:29.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.605" endtime="20201029 12:56:29.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.603" endtime="20201029 12:56:29.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.639" endtime="20201029 12:56:29.925"></status>
</kw>
<msg timestamp="20201029 12:56:29.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:29.637" endtime="20201029 12:56:29.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:29.929" endtime="20201029 12:56:29.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.937" endtime="20201029 12:56:29.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.635" endtime="20201029 12:56:29.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.633" endtime="20201029 12:56:29.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:29.944" level="INFO">${RESULT} = [{'diff': 7.784699999999894e-05}, {'diff': 7.766700000000001e-05}, {'diff': 7.730499999999974e-05}, {'diff': 7.77779999999971e-05}, {'diff': 7.78189999999998e-05}, {'diff': 7.777800000000057e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:29.940" endtime="20201029 12:56:29.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:29.949" level="INFO">${ACCURACY} = {'diff': [7.784699999999894e-05, 7.766700000000001e-05, 7.730499999999974e-05, 7.77779999999971e-05, 7.78189999999998e-05, 7.777800000000057e-05, 7.711100000000123e-05, 7.78189999999998e-05, 7.7903000...</msg>
<status status="PASS" starttime="20201029 12:56:29.945" endtime="20201029 12:56:29.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.953" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:56:29.952" endtime="20201029 12:56:29.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:29.956" level="INFO">VALUE: [7.784699999999894e-05, 7.766700000000001e-05, 7.730499999999974e-05, 7.77779999999971e-05, 7.78189999999998e-05, 7.777800000000057e-05, 7.711100000000123e-05, 7.78189999999998e-05, 7.79030000000007e-05, 7.74030000000002e-05, 7.793099999999983e-05, 7.791700000000026e-05, 7.759799999999817e-05, 7.75830000000026e-05, 7.736100000000148e-05, 7.798600000000211e-05, 7.783299999999937e-05, 7.723599999999789e-05, 7.748600000000161e-05, 7.730600000000268e-05, 7.772199999999882e-05, 7.711100000000123e-05, 7.756999999999903e-05, 7.784699999999894e-05, 7.736100000000148e-05, 7.781999999999928e-05, 7.719499999999865e-05, 7.777800000000057e-05, 7.722200000000179e-05, 7.736099999999801e-05, 7.7764000000001e-05, 7.716600000000004e-05, 7.738900000000062e-05, 7.783299999999937e-05, 7.798600000000211e-05, 7.720900000000169e-05, 7.804100000000092e-05, 7.773599999999839e-05, 7.793099999999983e-05, 7.752800000000032e-05, 7.793000000000036e-05, 7.788900000000112e-05, 7.706900000000252e-05, 7.790199999999775e-05, 7.784699999999894e-05, 7.800000000000168e-05, 7.800000000000168e-05, 7.780599999999971e-05, 7.798599999999864e-05, 7.804200000000039e-05]</msg>
<status status="PASS" starttime="20201029 12:56:29.954" endtime="20201029 12:56:29.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.949" endtime="20201029 12:56:29.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:29.960" endtime="20201029 12:56:29.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.959" endtime="20201029 12:56:29.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.958" endtime="20201029 12:56:29.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.602" endtime="20201029 12:56:29.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.601" endtime="20201029 12:56:29.981"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:29.990" endtime="20201029 12:56:30.007"></status>
</kw>
<msg timestamp="20201029 12:56:30.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:29.989" endtime="20201029 12:56:30.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:30.008" endtime="20201029 12:56:30.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.011" endtime="20201029 12:56:30.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.986" endtime="20201029 12:56:30.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.984" endtime="20201029 12:56:30.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.020" endtime="20201029 12:56:30.309"></status>
</kw>
<msg timestamp="20201029 12:56:30.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:30.019" endtime="20201029 12:56:30.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:30.313" endtime="20201029 12:56:30.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.321" endtime="20201029 12:56:30.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.016" endtime="20201029 12:56:30.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.014" endtime="20201029 12:56:30.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:30.328" level="INFO">${RESULT} = [{'diff': 7.884699999999994e-05}, {'diff': 7.884699999999994e-05}, {'diff': 7.89169999999978e-05}, {'diff': 7.908300000000063e-05}, {'diff': 7.905600000000096e-05}, {'diff': 7.87229999999993e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:30.324" endtime="20201029 12:56:30.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:30.332" level="INFO">${ACCURACY} = {'diff': [7.884699999999994e-05, 7.884699999999994e-05, 7.89169999999978e-05, 7.908300000000063e-05, 7.905600000000096e-05, 7.87229999999993e-05, 7.852800000000132e-05, 7.880600000000071e-05, 7.844499...</msg>
<status status="PASS" starttime="20201029 12:56:30.329" endtime="20201029 12:56:30.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.336" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:56:30.335" endtime="20201029 12:56:30.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.339" level="INFO">VALUE: [7.884699999999994e-05, 7.884699999999994e-05, 7.89169999999978e-05, 7.908300000000063e-05, 7.905600000000096e-05, 7.87229999999993e-05, 7.852800000000132e-05, 7.880600000000071e-05, 7.84449999999999e-05, 7.816699999999704e-05, 7.865299999999797e-05, 7.834699999999944e-05, 7.874999999999896e-05, 7.879100000000167e-05, 7.908300000000063e-05, 7.874999999999896e-05, 7.870800000000025e-05, 7.869400000000068e-05, 7.816700000000051e-05, 7.843100000000033e-05, 7.866700000000101e-05, 7.868100000000058e-05, 7.847300000000251e-05, 7.8764000000002e-05, 7.85969999999997e-05, 7.88190000000008e-05, 7.820799999999975e-05, 7.883399999999985e-05, 7.897200000000007e-05, 7.82640000000015e-05, 7.838900000000162e-05, 7.822199999999932e-05, 7.89450000000004e-05, 7.823599999999889e-05, 7.882000000000028e-05, 7.849999999999871e-05, 7.858300000000012e-05, 7.85969999999997e-05, 7.820800000000322e-05, 7.851399999999828e-05, 7.852799999999785e-05, 7.863900000000187e-05, 7.865299999999797e-05, 7.905500000000149e-05, 7.901400000000225e-05, 7.858300000000012e-05, 7.863900000000187e-05, 7.837500000000205e-05, 7.856900000000056e-05, 7.847199999999957e-05]</msg>
<status status="PASS" starttime="20201029 12:56:30.337" endtime="20201029 12:56:30.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.333" endtime="20201029 12:56:30.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:30.344" endtime="20201029 12:56:30.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.342" endtime="20201029 12:56:30.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.341" endtime="20201029 12:56:30.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.982" endtime="20201029 12:56:30.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:29.982" endtime="20201029 12:56:30.365"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.373" endtime="20201029 12:56:30.437"></status>
</kw>
<msg timestamp="20201029 12:56:30.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:30.372" endtime="20201029 12:56:30.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:30.438" endtime="20201029 12:56:30.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.441" endtime="20201029 12:56:30.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.369" endtime="20201029 12:56:30.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.367" endtime="20201029 12:56:30.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.450" endtime="20201029 12:56:30.736"></status>
</kw>
<msg timestamp="20201029 12:56:30.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066743458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066822694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:30.448" endtime="20201029 12:56:30.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066743458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066822694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:30.740" endtime="20201029 12:56:30.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.748" endtime="20201029 12:56:30.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.446" endtime="20201029 12:56:30.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.444" endtime="20201029 12:56:30.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:30.755" level="INFO">${RESULT} = [{'diff': 7.923599999999642e-05}, {'diff': 7.984799999999348e-05}, {'diff': 7.970800000001166e-05}, {'diff': 7.936100000000001e-05}, {'diff': 8.004100000000292e-05}, {'diff': 7.930600000000121e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:30.752" endtime="20201029 12:56:30.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:30.760" level="INFO">${ACCURACY} = {'diff': [7.923599999999642e-05, 7.984799999999348e-05, 7.970800000001166e-05, 7.936100000000001e-05, 8.004100000000292e-05, 7.930600000000121e-05, 8.001400000000325e-05, 7.938899999999915e-05, 7.9639...</msg>
<status status="PASS" starttime="20201029 12:56:30.756" endtime="20201029 12:56:30.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.764" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:56:30.763" endtime="20201029 12:56:30.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.766" level="INFO">VALUE: [7.923599999999642e-05, 7.984799999999348e-05, 7.970800000001166e-05, 7.936100000000001e-05, 8.004100000000292e-05, 7.930600000000121e-05, 8.001400000000325e-05, 7.938899999999915e-05, 7.963900000000634e-05, 7.937500000000652e-05, 7.916700000000498e-05, 7.926399999999556e-05, 7.975000000000343e-05, 7.957000000000103e-05, 7.962499999999983e-05, 7.976300000001046e-05, 8.006900000000206e-05, 7.949999999999624e-05, 7.986100000000051e-05, 7.908300000000756e-05, 7.94719999999971e-05, 8.001400000000325e-05, 7.962499999999983e-05, 7.975000000000343e-05, 7.923599999999642e-05, 7.994499999999793e-05, 7.970799999999778e-05, 7.980600000000171e-05, 7.97910000000096e-05, 7.922200000000379e-05, 7.938899999999915e-05, 7.994399999999846e-05, 7.959699999998682e-05, 7.940300000000566e-05, 7.952799999999538e-05, 7.969500000000462e-05, 7.994399999999846e-05, 7.944500000001131e-05, 7.949999999999624e-05, 7.951400000000275e-05, 7.944500000001131e-05, 7.962499999999983e-05, 7.97770000000031e-05, 7.912499999999933e-05, 7.930500000000174e-05, 7.975000000000343e-05, 7.976399999999606e-05, 7.92919999999947e-05, 7.977800000000257e-05, 7.923599999999642e-05]</msg>
<status status="PASS" starttime="20201029 12:56:30.765" endtime="20201029 12:56:30.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.760" endtime="20201029 12:56:30.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:30.775" endtime="20201029 12:56:30.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.774" endtime="20201029 12:56:30.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.773" endtime="20201029 12:56:30.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.365" endtime="20201029 12:56:30.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.365" endtime="20201029 12:56:30.796"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.805" endtime="20201029 12:56:30.823"></status>
</kw>
<msg timestamp="20201029 12:56:30.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:30.803" endtime="20201029 12:56:30.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:30.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:30.824" endtime="20201029 12:56:30.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.827" endtime="20201029 12:56:30.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.800" endtime="20201029 12:56:30.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.798" endtime="20201029 12:56:30.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:30.836" endtime="20201029 12:56:31.122"></status>
</kw>
<msg timestamp="20201029 12:56:31.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:30.834" endtime="20201029 12:56:31.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:31.126" endtime="20201029 12:56:31.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.135" endtime="20201029 12:56:31.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.832" endtime="20201029 12:56:31.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.830" endtime="20201029 12:56:31.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:31.142" level="INFO">${RESULT} = [{'diff': 8.088899999999719e-05}, {'diff': 8.057000000000203e-05}, {'diff': 8.027700000000013e-05}, {'diff': 8.081899999999934e-05}, {'diff': 8.034700000000145e-05}, {'diff': 8.048600000000114e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:31.138" endtime="20201029 12:56:31.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:31.147" level="INFO">${ACCURACY} = {'diff': [8.088899999999719e-05, 8.057000000000203e-05, 8.027700000000013e-05, 8.081899999999934e-05, 8.034700000000145e-05, 8.048600000000114e-05, 8.017999999999914e-05, 8.00970000000012e-05, 8.04170...</msg>
<status status="PASS" starttime="20201029 12:56:31.143" endtime="20201029 12:56:31.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.152" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:56:31.150" endtime="20201029 12:56:31.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.154" level="INFO">VALUE: [8.088899999999719e-05, 8.057000000000203e-05, 8.027700000000013e-05, 8.081899999999934e-05, 8.034700000000145e-05, 8.048600000000114e-05, 8.017999999999914e-05, 8.00970000000012e-05, 8.041700000000276e-05, 8.065299999999997e-05, 8.076399999999706e-05, 8.031999999999831e-05, 8.069499999999868e-05, 8.087500000000108e-05, 8.070899999999825e-05, 8.040200000000025e-05, 8.05130000000008e-05, 8.011100000000076e-05, 8.06390000000004e-05, 8.07780000000001e-05, 8.01389999999999e-05, 8.08329999999989e-05, 8.02779999999996e-05, 8.023600000000089e-05, 8.062500000000083e-05, 8.086100000000151e-05, 8.047200000000157e-05, 8.047300000000104e-05, 8.111100000000177e-05, 8.106899999999959e-05, 8.06520000000005e-05, 8.055499999999952e-05, 8.026400000000003e-05, 8.018000000000261e-05, 8.034699999999798e-05, 8.068100000000258e-05, 8.009699999999773e-05, 8.080599999999924e-05, 8.086100000000151e-05, 8.088800000000118e-05, 8.09169999999998e-05, 8.012500000000033e-05, 8.031899999999884e-05, 8.098600000000164e-05, 8.088900000000065e-05, 8.10970000000022e-05, 8.080499999999977e-05, 8.043099999999886e-05, 8.073599999999792e-05, 8.084799999999795e-05]</msg>
<status status="PASS" starttime="20201029 12:56:31.153" endtime="20201029 12:56:31.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.148" endtime="20201029 12:56:31.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:31.159" endtime="20201029 12:56:31.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.158" endtime="20201029 12:56:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.157" endtime="20201029 12:56:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.797" endtime="20201029 12:56:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:30.796" endtime="20201029 12:56:31.180"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.189" endtime="20201029 12:56:31.207"></status>
</kw>
<msg timestamp="20201029 12:56:31.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:31.188" endtime="20201029 12:56:31.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:31.209" endtime="20201029 12:56:31.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.212" endtime="20201029 12:56:31.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.185" endtime="20201029 12:56:31.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.183" endtime="20201029 12:56:31.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.222" endtime="20201029 12:56:31.509"></status>
</kw>
<msg timestamp="20201029 12:56:31.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020525236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020606917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:31.219" endtime="20201029 12:56:31.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020525236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020606917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:31.514" endtime="20201029 12:56:31.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.522" endtime="20201029 12:56:31.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.217" endtime="20201029 12:56:31.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.215" endtime="20201029 12:56:31.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:31.529" level="INFO">${RESULT} = [{'diff': 8.168100000000011e-05}, {'diff': 8.197299999999907e-05}, {'diff': 8.190199999999828e-05}, {'diff': 8.12910000000007e-05}, {'diff': 8.134699999999898e-05}, {'diff': 8.134699999999898e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:31.526" endtime="20201029 12:56:31.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:31.533" level="INFO">${ACCURACY} = {'diff': [8.168100000000011e-05, 8.197299999999907e-05, 8.190199999999828e-05, 8.12910000000007e-05, 8.134699999999898e-05, 8.134699999999898e-05, 8.140200000000125e-05, 8.190300000000122e-05, 8.20420...</msg>
<status status="PASS" starttime="20201029 12:56:31.530" endtime="20201029 12:56:31.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.538" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:56:31.537" endtime="20201029 12:56:31.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.541" level="INFO">VALUE: [8.168100000000011e-05, 8.197299999999907e-05, 8.190199999999828e-05, 8.12910000000007e-05, 8.134699999999898e-05, 8.134699999999898e-05, 8.140200000000125e-05, 8.190300000000122e-05, 8.204200000000092e-05, 8.206900000000059e-05, 8.14170000000003e-05, 8.199999999999874e-05, 8.112500000000133e-05, 8.13329999999994e-05, 8.200000000000221e-05, 8.109800000000167e-05, 8.124999999999799e-05, 8.168000000000064e-05, 8.172199999999935e-05, 8.168000000000064e-05, 8.202799999999788e-05, 8.204199999999745e-05, 8.188900000000165e-05, 8.17230000000023e-05, 8.19589999999995e-05, 8.181999999999981e-05, 8.199999999999874e-05, 8.14719999999991e-05, 8.15979999999987e-05, 8.120799999999928e-05, 8.131899999999984e-05, 8.208300000000016e-05, 8.20979999999992e-05, 8.20979999999992e-05, 8.130599999999974e-05, 8.169400000000021e-05, 8.15130000000018e-05, 8.166700000000054e-05, 8.19170000000008e-05, 8.199999999999874e-05, 8.181999999999981e-05, 8.144499999999943e-05, 8.169400000000021e-05, 8.14719999999991e-05, 8.138900000000115e-05, 8.197200000000307e-05, 8.172199999999935e-05, 8.109699999999873e-05, 8.151399999999781e-05, 8.154200000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:56:31.539" endtime="20201029 12:56:31.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.534" endtime="20201029 12:56:31.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:31.546" endtime="20201029 12:56:31.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.544" endtime="20201029 12:56:31.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.543" endtime="20201029 12:56:31.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.181" endtime="20201029 12:56:31.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.181" endtime="20201029 12:56:31.567"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.577" endtime="20201029 12:56:31.595"></status>
</kw>
<msg timestamp="20201029 12:56:31.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:31.575" endtime="20201029 12:56:31.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:31.597" endtime="20201029 12:56:31.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.599" endtime="20201029 12:56:31.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.572" endtime="20201029 12:56:31.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.569" endtime="20201029 12:56:31.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.609" endtime="20201029 12:56:31.895"></status>
</kw>
<msg timestamp="20201029 12:56:31.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021027792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021110792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:31.607" endtime="20201029 12:56:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021027792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021110792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:31.899" endtime="20201029 12:56:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.907" endtime="20201029 12:56:31.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.604" endtime="20201029 12:56:31.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.603" endtime="20201029 12:56:31.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:31.914" level="INFO">${RESULT} = [{'diff': 8.299999999999974e-05}, {'diff': 8.259700000000023e-05}, {'diff': 8.207000000000006e-05}, {'diff': 8.294499999999747e-05}, {'diff': 8.233399999999988e-05}, {'diff': 8.26109999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:31.911" endtime="20201029 12:56:31.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:31.918" level="INFO">${ACCURACY} = {'diff': [8.299999999999974e-05, 8.259700000000023e-05, 8.207000000000006e-05, 8.294499999999747e-05, 8.233399999999988e-05, 8.26109999999998e-05, 8.252799999999838e-05, 8.304099999999898e-05, 8.26390...</msg>
<status status="PASS" starttime="20201029 12:56:31.915" endtime="20201029 12:56:31.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.924" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:56:31.923" endtime="20201029 12:56:31.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.926" level="INFO">VALUE: [8.299999999999974e-05, 8.259700000000023e-05, 8.207000000000006e-05, 8.294499999999747e-05, 8.233399999999988e-05, 8.26109999999998e-05, 8.252799999999838e-05, 8.304099999999898e-05, 8.26390000000024e-05, 8.306900000000159e-05, 8.287499999999962e-05, 8.237500000000259e-05, 8.252800000000185e-05, 8.213899999999844e-05, 8.288899999999919e-05, 8.238900000000215e-05, 8.293100000000136e-05, 8.216600000000157e-05, 8.26109999999998e-05, 8.265199999999903e-05, 8.236099999999955e-05, 8.29170000000018e-05, 8.23049999999978e-05, 8.268099999999765e-05, 8.273599999999992e-05, 8.230600000000074e-05, 8.22780000000016e-05, 8.282000000000081e-05, 8.20979999999992e-05, 8.247300000000304e-05, 8.245799999999706e-05, 8.258300000000066e-05, 8.270800000000078e-05, 8.267999999999817e-05, 8.245800000000053e-05, 8.222199999999985e-05, 8.276400000000253e-05, 8.240300000000172e-05, 8.305599999999802e-05, 8.259700000000023e-05, 8.287499999999962e-05, 8.220899999999975e-05, 8.288799999999971e-05, 8.28330000000009e-05, 8.286100000000005e-05, 8.290299999999876e-05, 8.245800000000053e-05, 8.308300000000116e-05, 8.212499999999887e-05, 8.263899999999894e-05]</msg>
<status status="PASS" starttime="20201029 12:56:31.925" endtime="20201029 12:56:31.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.919" endtime="20201029 12:56:31.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:31.932" endtime="20201029 12:56:31.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.930" endtime="20201029 12:56:31.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.929" endtime="20201029 12:56:31.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.568" endtime="20201029 12:56:31.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.567" endtime="20201029 12:56:31.953"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.962" endtime="20201029 12:56:31.981"></status>
</kw>
<msg timestamp="20201029 12:56:31.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:31.960" endtime="20201029 12:56:31.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:31.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:31.982" endtime="20201029 12:56:31.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.985" endtime="20201029 12:56:31.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.957" endtime="20201029 12:56:31.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.955" endtime="20201029 12:56:31.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:31.994" endtime="20201029 12:56:32.281"></status>
</kw>
<msg timestamp="20201029 12:56:32.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:31.993" endtime="20201029 12:56:32.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020216222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:32.285" endtime="20201029 12:56:32.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.294" endtime="20201029 12:56:32.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.990" endtime="20201029 12:56:32.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.988" endtime="20201029 12:56:32.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:32.301" level="INFO">${RESULT} = [{'diff': 8.337500000000012e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.355599999999852e-05}, {'diff': 8.338899999999969e-05}, {'diff': 8.362500000000037e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:32.297" endtime="20201029 12:56:32.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:32.306" level="INFO">${ACCURACY} = {'diff': [8.337500000000012e-05, 8.390299999999976e-05, 8.388900000000019e-05, 8.355599999999852e-05, 8.338899999999969e-05, 8.362500000000037e-05, 8.386100000000105e-05, 8.357000000000156e-05, 8.3887...</msg>
<status status="PASS" starttime="20201029 12:56:32.302" endtime="20201029 12:56:32.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.311" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:56:32.309" endtime="20201029 12:56:32.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.313" level="INFO">VALUE: [8.337500000000012e-05, 8.390299999999976e-05, 8.388900000000019e-05, 8.355599999999852e-05, 8.338899999999969e-05, 8.362500000000037e-05, 8.386100000000105e-05, 8.357000000000156e-05, 8.388799999999724e-05, 8.33330000000014e-05, 8.322199999999738e-05, 8.347199999999763e-05, 8.392999999999942e-05, 8.373600000000092e-05, 8.336100000000055e-05, 8.307000000000106e-05, 8.309699999999726e-05, 8.369499999999822e-05, 8.363899999999994e-05, 8.354199999999895e-05, 8.327799999999913e-05, 8.3152999999999e-05, 8.313799999999996e-05, 8.374999999999702e-05, 8.375000000000049e-05, 8.329099999999923e-05, 8.31110000000003e-05, 8.333299999999794e-05, 8.405599999999902e-05, 8.341699999999883e-05, 8.37370000000004e-05, 8.402799999999988e-05, 8.382000000000181e-05, 8.405599999999902e-05, 8.352699999999991e-05, 8.3152999999999e-05, 8.32910000000027e-05, 8.341699999999883e-05, 8.368099999999865e-05, 8.352799999999938e-05, 8.3152999999999e-05, 8.320800000000128e-05, 8.316699999999858e-05, 8.376400000000006e-05, 8.34720000000011e-05, 8.333400000000088e-05, 8.376400000000006e-05, 8.405500000000302e-05, 8.381899999999887e-05, 8.36659999999996e-05]</msg>
<status status="PASS" starttime="20201029 12:56:32.312" endtime="20201029 12:56:32.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.307" endtime="20201029 12:56:32.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:32.318" endtime="20201029 12:56:32.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.317" endtime="20201029 12:56:32.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.316" endtime="20201029 12:56:32.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.953" endtime="20201029 12:56:32.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:31.953" endtime="20201029 12:56:32.339"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.348" endtime="20201029 12:56:32.369"></status>
</kw>
<msg timestamp="20201029 12:56:32.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:32.347" endtime="20201029 12:56:32.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:32.370" endtime="20201029 12:56:32.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.373" endtime="20201029 12:56:32.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.344" endtime="20201029 12:56:32.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.342" endtime="20201029 12:56:32.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.382" endtime="20201029 12:56:32.670"></status>
</kw>
<msg timestamp="20201029 12:56:32.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021370319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021454667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:32.381" endtime="20201029 12:56:32.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021370319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021454667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:32.674" endtime="20201029 12:56:32.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.683" endtime="20201029 12:56:32.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.378" endtime="20201029 12:56:32.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.376" endtime="20201029 12:56:32.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:32.690" level="INFO">${RESULT} = [{'diff': 8.434800000000145e-05}, {'diff': 8.462500000000137e-05}, {'diff': 8.415200000000053e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.447199999999863e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:32.686" endtime="20201029 12:56:32.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:32.694" level="INFO">${ACCURACY} = {'diff': [8.434800000000145e-05, 8.462500000000137e-05, 8.415200000000053e-05, 8.487499999999815e-05, 8.409699999999826e-05, 8.447199999999863e-05, 8.49859999999987e-05, 8.495799999999956e-05, 8.47080...</msg>
<status status="PASS" starttime="20201029 12:56:32.691" endtime="20201029 12:56:32.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.699" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:56:32.698" endtime="20201029 12:56:32.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.701" level="INFO">VALUE: [8.434800000000145e-05, 8.462500000000137e-05, 8.415200000000053e-05, 8.487499999999815e-05, 8.409699999999826e-05, 8.447199999999863e-05, 8.49859999999987e-05, 8.495799999999956e-05, 8.470800000000278e-05, 8.413899999999697e-05, 8.494399999999999e-05, 8.430599999999927e-05, 8.42919999999997e-05, 8.505600000000002e-05, 8.420899999999829e-05, 8.506900000000012e-05, 8.41660000000001e-05, 8.447199999999863e-05, 8.433299999999894e-05, 8.502800000000088e-05, 8.463899999999747e-05, 8.433299999999894e-05, 8.412500000000087e-05, 8.41110000000013e-05, 8.440300000000026e-05, 8.505600000000002e-05, 8.40980000000012e-05, 8.473600000000192e-05, 8.41249999999974e-05, 8.491599999999738e-05, 8.488900000000119e-05, 8.495799999999956e-05, 8.448600000000167e-05, 8.4153e-05, 8.44720000000021e-05, 8.43469999999985e-05, 8.488900000000119e-05, 8.470899999999879e-05, 8.422199999999838e-05, 8.472199999999888e-05, 8.499999999999827e-05, 8.469399999999974e-05, 8.491600000000085e-05, 8.487500000000162e-05, 8.454199999999995e-05, 8.450000000000124e-05, 8.487499999999815e-05, 8.504200000000045e-05, 8.476400000000106e-05, 8.408400000000163e-05]</msg>
<status status="PASS" starttime="20201029 12:56:32.700" endtime="20201029 12:56:32.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.695" endtime="20201029 12:56:32.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:32.707" endtime="20201029 12:56:32.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.705" endtime="20201029 12:56:32.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.704" endtime="20201029 12:56:32.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.340" endtime="20201029 12:56:32.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.340" endtime="20201029 12:56:32.727"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.737" endtime="20201029 12:56:32.755"></status>
</kw>
<msg timestamp="20201029 12:56:32.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:32.735" endtime="20201029 12:56:32.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:32.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:32.757" endtime="20201029 12:56:32.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.760" endtime="20201029 12:56:32.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.732" endtime="20201029 12:56:32.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.730" endtime="20201029 12:56:32.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:32.769" endtime="20201029 12:56:33.056"></status>
</kw>
<msg timestamp="20201029 12:56:33.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:32.767" endtime="20201029 12:56:33.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021830514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:33.061" endtime="20201029 12:56:33.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.069" endtime="20201029 12:56:33.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.765" endtime="20201029 12:56:33.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.763" endtime="20201029 12:56:33.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:33.076" level="INFO">${RESULT} = [{'diff': 8.519400000000024e-05}, {'diff': 8.540199999999831e-05}, {'diff': 8.515299999999754e-05}, {'diff': 8.538900000000169e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.522200000000285e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:33.073" endtime="20201029 12:56:33.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:33.080" level="INFO">${ACCURACY} = {'diff': [8.519400000000024e-05, 8.540199999999831e-05, 8.515299999999754e-05, 8.538900000000169e-05, 8.544400000000049e-05, 8.522200000000285e-05, 8.587499999999915e-05, 8.563899999999847e-05, 8.5681...</msg>
<status status="PASS" starttime="20201029 12:56:33.077" endtime="20201029 12:56:33.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.086" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:56:33.084" endtime="20201029 12:56:33.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.089" level="INFO">VALUE: [8.519400000000024e-05, 8.540199999999831e-05, 8.515299999999754e-05, 8.538900000000169e-05, 8.544400000000049e-05, 8.522200000000285e-05, 8.587499999999915e-05, 8.563899999999847e-05, 8.568100000000065e-05, 8.59729999999996e-05, 8.558399999999966e-05, 8.56530000000015e-05, 8.538899999999822e-05, 8.576399999999859e-05, 8.53469999999995e-05, 8.524999999999852e-05, 8.586099999999958e-05, 8.549999999999877e-05, 8.562500000000237e-05, 8.5847e-05, 8.524999999999852e-05, 8.523699999999843e-05, 8.590299999999829e-05, 8.573599999999945e-05, 8.520800000000328e-05, 8.537500000000212e-05, 8.513899999999797e-05, 8.600000000000274e-05, 8.51249999999984e-05, 8.586099999999958e-05, 8.594500000000047e-05, 8.518100000000015e-05, 8.512500000000187e-05, 8.522300000000232e-05, 8.566700000000108e-05, 8.581900000000087e-05, 8.538800000000221e-05, 8.541600000000135e-05, 8.594400000000099e-05, 8.594400000000099e-05, 8.525000000000199e-05, 8.526400000000156e-05, 8.574999999999902e-05, 8.545800000000006e-05, 8.519499999999972e-05, 8.533400000000288e-05, 8.566700000000108e-05, 8.59729999999996e-05, 8.573599999999945e-05, 8.588899999999872e-05]</msg>
<status status="PASS" starttime="20201029 12:56:33.087" endtime="20201029 12:56:33.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.081" endtime="20201029 12:56:33.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:33.094" endtime="20201029 12:56:33.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.092" endtime="20201029 12:56:33.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.091" endtime="20201029 12:56:33.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.728" endtime="20201029 12:56:33.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:32.728" endtime="20201029 12:56:33.115"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.124" endtime="20201029 12:56:33.144"></status>
</kw>
<msg timestamp="20201029 12:56:33.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:33.122" endtime="20201029 12:56:33.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:33.145" endtime="20201029 12:56:33.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.148" endtime="20201029 12:56:33.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.120" endtime="20201029 12:56:33.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.117" endtime="20201029 12:56:33.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.157" endtime="20201029 12:56:33.443"></status>
</kw>
<msg timestamp="20201029 12:56:33.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020399875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:33.156" endtime="20201029 12:56:33.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020399875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:33.447" endtime="20201029 12:56:33.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.456" endtime="20201029 12:56:33.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.153" endtime="20201029 12:56:33.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.151" endtime="20201029 12:56:33.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:33.463" level="INFO">${RESULT} = [{'diff': 8.641700000000183e-05}, {'diff': 8.645800000000106e-05}, {'diff': 8.630600000000127e-05}, {'diff': 8.654199999999848e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.66249999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:33.459" endtime="20201029 12:56:33.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:33.468" level="INFO">${ACCURACY} = {'diff': [8.641700000000183e-05, 8.645800000000106e-05, 8.630600000000127e-05, 8.654199999999848e-05, 8.636100000000008e-05, 8.66249999999999e-05, 8.62920000000017e-05, 8.661100000000033e-05, 8.663900...</msg>
<status status="PASS" starttime="20201029 12:56:33.464" endtime="20201029 12:56:33.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.473" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:56:33.472" endtime="20201029 12:56:33.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.475" level="INFO">VALUE: [8.641700000000183e-05, 8.645800000000106e-05, 8.630600000000127e-05, 8.654199999999848e-05, 8.636100000000008e-05, 8.66249999999999e-05, 8.62920000000017e-05, 8.661100000000033e-05, 8.663900000000294e-05, 8.644399999999802e-05, 8.642999999999845e-05, 8.708299999999822e-05, 8.668099999999818e-05, 8.63470000000005e-05, 8.66249999999999e-05, 8.636100000000008e-05, 8.632000000000084e-05, 8.681999999999787e-05, 8.618099999999768e-05, 8.705499999999908e-05, 8.66530000000025e-05, 8.700000000000027e-05, 8.669400000000174e-05, 8.670800000000131e-05, 8.68059999999983e-05, 8.66669999999986e-05, 8.682000000000134e-05, 8.672300000000036e-05, 8.663899999999947e-05, 8.62920000000017e-05, 8.622299999999986e-05, 8.68189999999984e-05, 8.692999999999895e-05, 8.623599999999995e-05, 8.692999999999895e-05, 8.686100000000058e-05, 8.645800000000106e-05, 8.613899999999897e-05, 8.609700000000026e-05, 8.645900000000054e-05, 8.648699999999968e-05, 8.638899999999922e-05, 8.625000000000299e-05, 8.638799999999974e-05, 8.61249999999994e-05, 8.692999999999895e-05, 8.61660000000021e-05, 8.680600000000177e-05, 8.675000000000002e-05, 8.700000000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:56:33.474" endtime="20201029 12:56:33.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.469" endtime="20201029 12:56:33.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:33.481" endtime="20201029 12:56:33.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.479" endtime="20201029 12:56:33.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.478" endtime="20201029 12:56:33.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.116" endtime="20201029 12:56:33.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.115" endtime="20201029 12:56:33.502"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.511" endtime="20201029 12:56:33.530"></status>
</kw>
<msg timestamp="20201029 12:56:33.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:33.509" endtime="20201029 12:56:33.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:33.531" endtime="20201029 12:56:33.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.534" endtime="20201029 12:56:33.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.506" endtime="20201029 12:56:33.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.504" endtime="20201029 12:56:33.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.544" endtime="20201029 12:56:33.831"></status>
</kw>
<msg timestamp="20201029 12:56:33.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:56:33.542" endtime="20201029 12:56:33.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021233, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021320292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:56:33.835" endtime="20201029 12:56:33.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.843" endtime="20201029 12:56:33.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.539" endtime="20201029 12:56:33.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.537" endtime="20201029 12:56:33.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:33.850" level="INFO">${RESULT} = [{'diff': 8.72920000000027e-05}, {'diff': 8.77920000000032e-05}, {'diff': 8.719400000000224e-05}, {'diff': 8.716700000000258e-05}, {'diff': 8.759699999999829e-05}, {'diff': 8.719399999999877e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:33.847" endtime="20201029 12:56:33.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:33.855" level="INFO">${ACCURACY} = {'diff': [8.72920000000027e-05, 8.77920000000032e-05, 8.719400000000224e-05, 8.716700000000258e-05, 8.759699999999829e-05, 8.719399999999877e-05, 8.763900000000047e-05, 8.758300000000219e-05, 8.768100...</msg>
<status status="PASS" starttime="20201029 12:56:33.852" endtime="20201029 12:56:33.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.860" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:56:33.859" endtime="20201029 12:56:33.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.863" level="INFO">VALUE: [8.72920000000027e-05, 8.77920000000032e-05, 8.719400000000224e-05, 8.716700000000258e-05, 8.759699999999829e-05, 8.719399999999877e-05, 8.763900000000047e-05, 8.758300000000219e-05, 8.768100000000265e-05, 8.727799999999966e-05, 8.758399999999819e-05, 8.736099999999761e-05, 8.7944999999999e-05, 8.765200000000056e-05, 8.780499999999983e-05, 8.787500000000115e-05, 8.71250000000004e-05, 8.715299999999954e-05, 8.759700000000176e-05, 8.74860000000012e-05, 8.790200000000081e-05, 8.773600000000145e-05, 8.780600000000277e-05, 8.720900000000129e-05, 8.723600000000095e-05, 8.765200000000056e-05, 8.804100000000051e-05, 8.726400000000009e-05, 8.755599999999905e-05, 8.788899999999725e-05, 8.747199999999816e-05, 8.726400000000009e-05, 8.781999999999887e-05, 8.737500000000065e-05, 8.734699999999804e-05, 8.744500000000197e-05, 8.758299999999872e-05, 8.772199999999841e-05, 8.784699999999854e-05, 8.723600000000095e-05, 8.729199999999923e-05, 8.73470000000015e-05, 8.763900000000047e-05, 8.737499999999718e-05, 8.731999999999837e-05, 8.745900000000154e-05, 8.772300000000136e-05, 8.787500000000115e-05, 8.738900000000022e-05, 8.71669999999991e-05]</msg>
<status status="PASS" starttime="20201029 12:56:33.861" endtime="20201029 12:56:33.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.857" endtime="20201029 12:56:33.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:33.868" endtime="20201029 12:56:33.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.867" endtime="20201029 12:56:33.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.865" endtime="20201029 12:56:33.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.503" endtime="20201029 12:56:33.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.502" endtime="20201029 12:56:33.889"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.898" endtime="20201029 12:56:33.918"></status>
</kw>
<msg timestamp="20201029 12:56:33.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:33.897" endtime="20201029 12:56:33.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:33.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:33.920" endtime="20201029 12:56:33.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.923" endtime="20201029 12:56:33.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.894" endtime="20201029 12:56:33.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.892" endtime="20201029 12:56:33.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:33.933" endtime="20201029 12:56:34.218"></status>
</kw>
<msg timestamp="20201029 12:56:34.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:33.931" endtime="20201029 12:56:34.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023531792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023619958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:34.223" endtime="20201029 12:56:34.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.231" endtime="20201029 12:56:34.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.928" endtime="20201029 12:56:34.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.926" endtime="20201029 12:56:34.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:34.238" level="INFO">${RESULT} = [{'diff': 8.816600000000063e-05}, {'diff': 8.841600000000088e-05}, {'diff': 8.820799999999934e-05}, {'diff': 8.872199999999941e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.840300000000079e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:34.235" endtime="20201029 12:56:34.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:34.243" level="INFO">${ACCURACY} = {'diff': [8.816600000000063e-05, 8.841600000000088e-05, 8.820799999999934e-05, 8.872199999999941e-05, 8.819399999999977e-05, 8.840300000000079e-05, 8.827800000000066e-05, 8.88060000000003e-05, 8.89859...</msg>
<status status="PASS" starttime="20201029 12:56:34.239" endtime="20201029 12:56:34.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.247" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:56:34.246" endtime="20201029 12:56:34.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.250" level="INFO">VALUE: [8.816600000000063e-05, 8.841600000000088e-05, 8.820799999999934e-05, 8.872199999999941e-05, 8.819399999999977e-05, 8.840300000000079e-05, 8.827800000000066e-05, 8.88060000000003e-05, 8.898599999999923e-05, 8.904200000000098e-05, 8.891700000000086e-05, 8.836100000000208e-05, 8.865200000000156e-05, 8.876400000000159e-05, 8.869400000000027e-05, 8.86800000000007e-05, 8.852800000000091e-05, 8.851399999999787e-05, 8.834700000000251e-05, 8.820800000000281e-05, 8.850000000000177e-05, 8.875000000000202e-05, 8.869400000000027e-05, 8.856999999999962e-05, 8.898599999999923e-05, 8.888900000000172e-05, 8.831999999999937e-05, 8.913800000000249e-05, 8.908300000000022e-05, 8.902800000000141e-05, 8.888900000000172e-05, 8.89730000000026e-05, 8.83059999999998e-05, 8.815300000000054e-05, 8.870799999999984e-05, 8.894400000000052e-05, 8.880500000000083e-05, 8.870799999999984e-05, 8.81800000000002e-05, 8.883299999999997e-05, 8.851400000000134e-05, 8.861099999999886e-05, 8.883400000000291e-05, 8.823600000000195e-05, 8.847199999999916e-05, 8.898599999999923e-05, 8.824999999999805e-05, 8.834700000000251e-05, 8.834700000000251e-05, 8.877700000000169e-05]</msg>
<status status="PASS" starttime="20201029 12:56:34.248" endtime="20201029 12:56:34.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.243" endtime="20201029 12:56:34.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:34.256" endtime="20201029 12:56:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.254" endtime="20201029 12:56:34.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.253" endtime="20201029 12:56:34.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.890" endtime="20201029 12:56:34.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:33.889" endtime="20201029 12:56:34.277"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.286" endtime="20201029 12:56:34.303"></status>
</kw>
<msg timestamp="20201029 12:56:34.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:34.284" endtime="20201029 12:56:34.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:34.305" endtime="20201029 12:56:34.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.308" endtime="20201029 12:56:34.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.282" endtime="20201029 12:56:34.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.279" endtime="20201029 12:56:34.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.317" endtime="20201029 12:56:34.604"></status>
</kw>
<msg timestamp="20201029 12:56:34.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:34.315" endtime="20201029 12:56:34.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:34.608" endtime="20201029 12:56:34.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.617" endtime="20201029 12:56:34.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.313" endtime="20201029 12:56:34.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.311" endtime="20201029 12:56:34.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:34.624" level="INFO">${RESULT} = [{'diff': 8.933300000000047e-05}, {'diff': 8.937499999999918e-05}, {'diff': 8.943000000000145e-05}, {'diff': 8.916599999999816e-05}, {'diff': 8.962499999999943e-05}, {'diff': 8.96800000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:34.620" endtime="20201029 12:56:34.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:34.629" level="INFO">${ACCURACY} = {'diff': [8.933300000000047e-05, 8.937499999999918e-05, 8.943000000000145e-05, 8.916599999999816e-05, 8.962499999999943e-05, 8.96800000000017e-05, 8.947200000000016e-05, 8.997200000000066e-05, 8.91809...</msg>
<status status="PASS" starttime="20201029 12:56:34.625" endtime="20201029 12:56:34.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.634" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:56:34.632" endtime="20201029 12:56:34.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.636" level="INFO">VALUE: [8.933300000000047e-05, 8.937499999999918e-05, 8.943000000000145e-05, 8.916599999999816e-05, 8.962499999999943e-05, 8.96800000000017e-05, 8.947200000000016e-05, 8.997200000000066e-05, 8.918099999999721e-05, 9.007000000000112e-05, 8.937499999999918e-05, 8.940300000000179e-05, 8.91120000000023e-05, 8.922199999999991e-05, 8.911099999999936e-05, 8.936099999999961e-05, 8.979100000000226e-05, 8.927799999999819e-05, 8.969400000000127e-05, 8.945800000000059e-05, 8.911099999999936e-05, 8.993100000000143e-05, 9.002799999999894e-05, 8.947299999999964e-05, 8.945900000000007e-05, 8.965299999999857e-05, 8.940199999999884e-05, 8.952799999999844e-05, 8.945800000000059e-05, 8.937499999999918e-05, 8.976399999999912e-05, 8.974999999999955e-05, 8.934700000000004e-05, 8.927800000000166e-05, 8.973599999999998e-05, 8.951399999999887e-05, 8.926399999999862e-05, 8.969400000000127e-05, 8.959700000000029e-05, 9.001399999999937e-05, 9.004099999999904e-05, 8.995799999999762e-05, 8.958300000000072e-05, 8.915300000000154e-05, 8.986100000000011e-05, 8.970900000000032e-05, 8.963900000000247e-05, 8.974999999999955e-05, 8.94450000000005e-05, 8.973599999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:56:34.635" endtime="20201029 12:56:34.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.630" endtime="20201029 12:56:34.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:34.641" endtime="20201029 12:56:34.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.640" endtime="20201029 12:56:34.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.639" endtime="20201029 12:56:34.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.278" endtime="20201029 12:56:34.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.277" endtime="20201029 12:56:34.662"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.671" endtime="20201029 12:56:34.689"></status>
</kw>
<msg timestamp="20201029 12:56:34.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:34.670" endtime="20201029 12:56:34.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:34.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:34.691" endtime="20201029 12:56:34.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.694" endtime="20201029 12:56:34.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.667" endtime="20201029 12:56:34.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.665" endtime="20201029 12:56:34.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:34.703" endtime="20201029 12:56:34.990"></status>
</kw>
<msg timestamp="20201029 12:56:34.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:34.702" endtime="20201029 12:56:34.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:34.995" endtime="20201029 12:56:35.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.003" endtime="20201029 12:56:35.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.699" endtime="20201029 12:56:35.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.697" endtime="20201029 12:56:35.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:35.010" level="INFO">${RESULT} = [{'diff': 9.025000000000005e-05}, {'diff': 9.056999999999815e-05}, {'diff': 9.069500000000175e-05}, {'diff': 9.069400000000227e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.092999999999948e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:35.007" endtime="20201029 12:56:35.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:35.015" level="INFO">${ACCURACY} = {'diff': [9.025000000000005e-05, 9.056999999999815e-05, 9.069500000000175e-05, 9.069400000000227e-05, 9.090299999999982e-05, 9.092999999999948e-05, 9.05000000000003e-05, 9.091600000000338e-05, 9.06110...</msg>
<status status="PASS" starttime="20201029 12:56:35.011" endtime="20201029 12:56:35.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.019" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:56:35.018" endtime="20201029 12:56:35.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.022" level="INFO">VALUE: [9.025000000000005e-05, 9.056999999999815e-05, 9.069500000000175e-05, 9.069400000000227e-05, 9.090299999999982e-05, 9.092999999999948e-05, 9.05000000000003e-05, 9.091600000000338e-05, 9.061100000000086e-05, 9.102799999999994e-05, 9.073600000000098e-05, 9.027800000000266e-05, 9.036099999999714e-05, 9.026300000000015e-05, 9.098600000000123e-05, 9.015299999999907e-05, 9.091700000000286e-05, 9.01800000000022e-05, 9.047200000000116e-05, 9.040299999999932e-05, 9.016599999999916e-05, 9.029199999999876e-05, 9.106999999999865e-05, 9.01389999999995e-05, 9.111099999999789e-05, 9.047300000000064e-05, 9.086099999999764e-05, 9.084699999999807e-05, 9.040199999999984e-05, 9.094399999999905e-05, 9.026399999999962e-05, 9.051399999999987e-05, 9.029199999999876e-05, 9.099999999999733e-05, 9.094399999999905e-05, 9.08199999999984e-05, 9.01389999999995e-05, 9.091700000000286e-05, 9.034700000000104e-05, 9.025000000000005e-05, 9.040199999999984e-05, 9.088900000000025e-05, 9.023600000000048e-05, 9.047200000000116e-05, 9.054199999999901e-05, 9.05000000000003e-05, 9.029199999999876e-05, 9.041699999999889e-05, 9.076400000000012e-05, 9.01389999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:56:35.020" endtime="20201029 12:56:35.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.015" endtime="20201029 12:56:35.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:35.027" endtime="20201029 12:56:35.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.025" endtime="20201029 12:56:35.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.024" endtime="20201029 12:56:35.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.663" endtime="20201029 12:56:35.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:34.663" endtime="20201029 12:56:35.048"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.057" endtime="20201029 12:56:35.077"></status>
</kw>
<msg timestamp="20201029 12:56:35.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:35.055" endtime="20201029 12:56:35.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:35.079" endtime="20201029 12:56:35.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.081" endtime="20201029 12:56:35.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.053" endtime="20201029 12:56:35.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.051" endtime="20201029 12:56:35.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.091" endtime="20201029 12:56:35.377"></status>
</kw>
<msg timestamp="20201029 12:56:35.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021214278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02130625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:35.089" endtime="20201029 12:56:35.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021214278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02130625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:35.382" endtime="20201029 12:56:35.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.390" endtime="20201029 12:56:35.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.087" endtime="20201029 12:56:35.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.085" endtime="20201029 12:56:35.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:35.397" level="INFO">${RESULT} = [{'diff': 9.19719999999992e-05}, {'diff': 9.172199999999894e-05}, {'diff': 9.201400000000137e-05}, {'diff': 9.205600000000008e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.186200000000158e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:56:35.394" endtime="20201029 12:56:35.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:35.402" level="INFO">${ACCURACY} = {'diff': [9.19719999999992e-05, 9.172199999999894e-05, 9.201400000000137e-05, 9.205600000000008e-05, 9.1639000000001e-05, 9.186200000000158e-05, 9.194400000000005e-05, 9.180500000000036e-05, 9.1874999...</msg>
<status status="PASS" starttime="20201029 12:56:35.399" endtime="20201029 12:56:35.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.406" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:56:35.405" endtime="20201029 12:56:35.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.410" level="INFO">VALUE: [9.19719999999992e-05, 9.172199999999894e-05, 9.201400000000137e-05, 9.205600000000008e-05, 9.1639000000001e-05, 9.186200000000158e-05, 9.194400000000005e-05, 9.180500000000036e-05, 9.187499999999821e-05, 9.191600000000091e-05, 9.158299999999925e-05, 9.205600000000008e-05, 9.152800000000044e-05, 9.159800000000176e-05, 9.173600000000198e-05, 9.1639000000001e-05, 9.120900000000182e-05, 9.127700000000072e-05, 9.127700000000072e-05, 9.205500000000061e-05, 9.137500000000118e-05, 9.125000000000105e-05, 9.188900000000125e-05, 9.173600000000198e-05, 9.116699999999964e-05, 9.202800000000094e-05, 9.198699999999824e-05, 9.168099999999971e-05, 9.156899999999968e-05, 9.205499999999714e-05, 9.111100000000136e-05, 9.152800000000044e-05, 9.20000000000018e-05, 9.188899999999778e-05, 9.165300000000057e-05, 9.155599999999958e-05, 9.141699999999989e-05, 9.133300000000247e-05, 9.186099999999864e-05, 9.145799999999912e-05, 9.112500000000093e-05, 9.115300000000007e-05, 9.193000000000048e-05, 9.147200000000216e-05, 9.181899999999993e-05, 9.15139999999974e-05, 9.18329999999995e-05, 9.13199999999989e-05, 9.191700000000039e-05, 9.152800000000044e-05]</msg>
<status status="PASS" starttime="20201029 12:56:35.408" endtime="20201029 12:56:35.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.403" endtime="20201029 12:56:35.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:35.415" endtime="20201029 12:56:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.414" endtime="20201029 12:56:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.412" endtime="20201029 12:56:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.049" endtime="20201029 12:56:35.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.048" endtime="20201029 12:56:35.436"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.445" endtime="20201029 12:56:35.463"></status>
</kw>
<msg timestamp="20201029 12:56:35.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:35.443" endtime="20201029 12:56:35.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:35.464" endtime="20201029 12:56:35.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.467" endtime="20201029 12:56:35.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.441" endtime="20201029 12:56:35.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.438" endtime="20201029 12:56:35.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.477" endtime="20201029 12:56:35.764"></status>
</kw>
<msg timestamp="20201029 12:56:35.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020579611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:35.475" endtime="20201029 12:56:35.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020579611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020672333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:35.769" endtime="20201029 12:56:35.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.780" endtime="20201029 12:56:35.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.472" endtime="20201029 12:56:35.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.470" endtime="20201029 12:56:35.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:35.787" level="INFO">${RESULT} = [{'diff': 9.272199999999994e-05}, {'diff': 9.26659999999982e-05}, {'diff': 9.236100000000261e-05}, {'diff': 9.267999999999776e-05}, {'diff': 9.263899999999853e-05}, {'diff': 9.30139999999989e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:35.784" endtime="20201029 12:56:35.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:35.792" level="INFO">${ACCURACY} = {'diff': [9.272199999999994e-05, 9.26659999999982e-05, 9.236100000000261e-05, 9.267999999999776e-05, 9.263899999999853e-05, 9.30139999999989e-05, 9.28200000000004e-05, 9.2639000000002e-05, 9.259799999...</msg>
<status status="PASS" starttime="20201029 12:56:35.788" endtime="20201029 12:56:35.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.797" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:56:35.796" endtime="20201029 12:56:35.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.800" level="INFO">VALUE: [9.272199999999994e-05, 9.26659999999982e-05, 9.236100000000261e-05, 9.267999999999776e-05, 9.263899999999853e-05, 9.30139999999989e-05, 9.28200000000004e-05, 9.2639000000002e-05, 9.259799999999929e-05, 9.258399999999972e-05, 9.305499999999814e-05, 9.25130000000024e-05, 9.294400000000105e-05, 9.295800000000062e-05, 9.294500000000053e-05, 9.291700000000139e-05, 9.259699999999982e-05, 9.280599999999736e-05, 9.244500000000003e-05, 9.304200000000151e-05, 9.259699999999982e-05, 9.243000000000098e-05, 9.305499999999814e-05, 9.276399999999865e-05, 9.240300000000132e-05, 9.241700000000089e-05, 9.224999999999858e-05, 9.25139999999984e-05, 9.252800000000144e-05, 9.287499999999921e-05, 9.208399999999922e-05, 9.274999999999908e-05, 9.257000000000015e-05, 9.298599999999976e-05, 9.259699999999982e-05, 9.240300000000132e-05, 9.236099999999914e-05, 9.213899999999803e-05, 9.23199999999999e-05, 9.268100000000071e-05, 9.28200000000004e-05, 9.294500000000053e-05, 9.219500000000325e-05, 9.21529999999976e-05, 9.273599999999951e-05, 9.237500000000218e-05, 9.265199999999862e-05, 9.218000000000073e-05, 9.280500000000136e-05, 9.270800000000037e-05]</msg>
<status status="PASS" starttime="20201029 12:56:35.798" endtime="20201029 12:56:35.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.793" endtime="20201029 12:56:35.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:35.811" endtime="20201029 12:56:35.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.810" endtime="20201029 12:56:35.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.808" endtime="20201029 12:56:35.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.437" endtime="20201029 12:56:35.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.436" endtime="20201029 12:56:35.832"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.842" endtime="20201029 12:56:35.860"></status>
</kw>
<msg timestamp="20201029 12:56:35.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:35.840" endtime="20201029 12:56:35.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:35.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:35.862" endtime="20201029 12:56:35.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.864" endtime="20201029 12:56:35.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.837" endtime="20201029 12:56:35.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.835" endtime="20201029 12:56:35.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:35.874" endtime="20201029 12:56:36.160"></status>
</kw>
<msg timestamp="20201029 12:56:36.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020782514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:35.872" endtime="20201029 12:56:36.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020782514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020875917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:36.164" endtime="20201029 12:56:36.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.173" endtime="20201029 12:56:36.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.869" endtime="20201029 12:56:36.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.867" endtime="20201029 12:56:36.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:36.180" level="INFO">${RESULT} = [{'diff': 9.340300000000232e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.393099999999849e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.395799999999815e-05}, {'diff': 9.309700000000032e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:36.176" endtime="20201029 12:56:36.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:36.184" level="INFO">${ACCURACY} = {'diff': [9.340300000000232e-05, 9.386100000000064e-05, 9.393099999999849e-05, 9.367999999999876e-05, 9.395799999999815e-05, 9.309700000000032e-05, 9.3333000000001e-05, 9.387500000000021e-05, 9.368099...</msg>
<status status="PASS" starttime="20201029 12:56:36.181" endtime="20201029 12:56:36.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.189" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:56:36.188" endtime="20201029 12:56:36.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.191" level="INFO">VALUE: [9.340300000000232e-05, 9.386100000000064e-05, 9.393099999999849e-05, 9.367999999999876e-05, 9.395799999999815e-05, 9.309700000000032e-05, 9.3333000000001e-05, 9.387500000000021e-05, 9.368099999999824e-05, 9.387500000000021e-05, 9.35139999999994e-05, 9.318099999999774e-05, 9.354200000000201e-05, 9.312499999999946e-05, 9.361100000000039e-05, 9.381899999999846e-05, 9.330499999999839e-05, 9.388899999999978e-05, 9.386100000000064e-05, 9.363899999999953e-05, 9.408400000000122e-05, 9.34720000000007e-05, 9.311099999999989e-05, 9.322299999999992e-05, 9.315300000000207e-05, 9.386100000000064e-05, 9.395799999999815e-05, 9.341599999999894e-05, 9.381899999999846e-05, 9.324999999999958e-05, 9.336100000000014e-05, 9.322200000000044e-05, 9.312499999999946e-05, 9.31529999999986e-05, 9.391700000000239e-05, 9.313799999999955e-05, 9.358299999999778e-05, 9.386100000000064e-05, 9.366699999999867e-05, 9.316700000000164e-05, 9.379199999999879e-05, 9.400000000000033e-05, 9.393099999999849e-05, 9.348600000000026e-05, 9.336100000000014e-05, 9.331900000000143e-05, 9.355500000000211e-05, 9.329200000000176e-05, 9.36940000000018e-05, 9.311099999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:56:36.190" endtime="20201029 12:56:36.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.185" endtime="20201029 12:56:36.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:36.196" endtime="20201029 12:56:36.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.195" endtime="20201029 12:56:36.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.194" endtime="20201029 12:56:36.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.833" endtime="20201029 12:56:36.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:35.833" endtime="20201029 12:56:36.217"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.227" endtime="20201029 12:56:36.246"></status>
</kw>
<msg timestamp="20201029 12:56:36.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:36.225" endtime="20201029 12:56:36.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:36.248" endtime="20201029 12:56:36.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.251" endtime="20201029 12:56:36.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.222" endtime="20201029 12:56:36.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.220" endtime="20201029 12:56:36.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.260" endtime="20201029 12:56:36.547"></status>
</kw>
<msg timestamp="20201029 12:56:36.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:36.259" endtime="20201029 12:56:36.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021579778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:36.552" endtime="20201029 12:56:36.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.560" endtime="20201029 12:56:36.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.256" endtime="20201029 12:56:36.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.254" endtime="20201029 12:56:36.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:36.567" level="INFO">${RESULT} = [{'diff': 9.412500000000046e-05}, {'diff': 9.505599999999961e-05}, {'diff': 9.46530000000001e-05}, {'diff': 9.493099999999949e-05}, {'diff': 9.504100000000057e-05}, {'diff': 9.458299999999878e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:36.564" endtime="20201029 12:56:36.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:36.571" level="INFO">${ACCURACY} = {'diff': [9.412500000000046e-05, 9.505599999999961e-05, 9.46530000000001e-05, 9.493099999999949e-05, 9.504100000000057e-05, 9.458299999999878e-05, 9.469399999999933e-05, 9.488900000000078e-05, 9.42920...</msg>
<status status="PASS" starttime="20201029 12:56:36.568" endtime="20201029 12:56:36.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.576" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:56:36.575" endtime="20201029 12:56:36.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.579" level="INFO">VALUE: [9.412500000000046e-05, 9.505599999999961e-05, 9.46530000000001e-05, 9.493099999999949e-05, 9.504100000000057e-05, 9.458299999999878e-05, 9.469399999999933e-05, 9.488900000000078e-05, 9.429200000000276e-05, 9.504200000000004e-05, 9.411099999999742e-05, 9.512499999999799e-05, 9.466699999999967e-05, 9.505599999999961e-05, 9.506899999999971e-05, 9.43469999999981e-05, 9.463900000000053e-05, 9.477800000000022e-05, 9.429199999999929e-05, 9.466699999999967e-05, 9.448600000000126e-05, 9.46530000000001e-05, 9.479199999999979e-05, 9.427800000000319e-05, 9.457000000000215e-05, 9.462500000000096e-05, 9.41659999999997e-05, 9.440299999999985e-05, 9.50140000000009e-05, 9.494399999999958e-05, 9.484700000000207e-05, 9.46530000000001e-05, 9.505599999999961e-05, 9.438900000000028e-05, 9.477800000000022e-05, 9.418099999999874e-05, 9.419500000000178e-05, 9.484700000000207e-05, 9.45270000000005e-05, 9.429200000000276e-05, 9.501399999999743e-05, 9.413900000000003e-05, 9.502800000000047e-05, 9.463900000000053e-05, 9.493000000000001e-05, 9.479199999999979e-05, 9.469399999999933e-05, 9.486199999999764e-05, 9.476300000000118e-05, 9.423600000000101e-05]</msg>
<status status="PASS" starttime="20201029 12:56:36.577" endtime="20201029 12:56:36.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.572" endtime="20201029 12:56:36.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:36.585" endtime="20201029 12:56:36.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.583" endtime="20201029 12:56:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.582" endtime="20201029 12:56:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.218" endtime="20201029 12:56:36.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.218" endtime="20201029 12:56:36.606"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.615" endtime="20201029 12:56:36.634"></status>
</kw>
<msg timestamp="20201029 12:56:36.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:36.613" endtime="20201029 12:56:36.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:36.635" endtime="20201029 12:56:36.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.638" endtime="20201029 12:56:36.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.610" endtime="20201029 12:56:36.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.608" endtime="20201029 12:56:36.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.647" endtime="20201029 12:56:36.932"></status>
</kw>
<msg timestamp="20201029 12:56:36.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:36.646" endtime="20201029 12:56:36.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:36.936" endtime="20201029 12:56:36.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.945" endtime="20201029 12:56:36.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.643" endtime="20201029 12:56:36.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.641" endtime="20201029 12:56:36.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:36.952" level="INFO">${RESULT} = [{'diff': 9.587500000000221e-05}, {'diff': 9.54859999999988e-05}, {'diff': 9.56530000000011e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.509699999999885e-05}, {'diff': 9.558299999999978e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:56:36.948" endtime="20201029 12:56:36.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:36.957" level="INFO">${ACCURACY} = {'diff': [9.587500000000221e-05, 9.54859999999988e-05, 9.56530000000011e-05, 9.586099999999917e-05, 9.509699999999885e-05, 9.558299999999978e-05, 9.605600000000061e-05, 9.586100000000264e-05, 9.581999...</msg>
<status status="PASS" starttime="20201029 12:56:36.953" endtime="20201029 12:56:36.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.962" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:56:36.961" endtime="20201029 12:56:36.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:36.964" level="INFO">VALUE: [9.587500000000221e-05, 9.54859999999988e-05, 9.56530000000011e-05, 9.586099999999917e-05, 9.509699999999885e-05, 9.558299999999978e-05, 9.605600000000061e-05, 9.586100000000264e-05, 9.581999999999993e-05, 9.563900000000153e-05, 9.549999999999836e-05, 9.569400000000033e-05, 9.54720000000027e-05, 9.591599999999798e-05, 9.538899999999781e-05, 9.602800000000147e-05, 9.588799999999884e-05, 9.54720000000027e-05, 9.594500000000006e-05, 9.56669999999972e-05, 9.601299999999896e-05, 9.536099999999867e-05, 9.601399999999843e-05, 9.579099999999785e-05, 9.58469999999996e-05, 9.591700000000092e-05, 9.531999999999943e-05, 9.550000000000183e-05, 9.572199999999947e-05, 9.508400000000222e-05, 9.530599999999986e-05, 9.599999999999886e-05, 9.531899999999996e-05, 9.5333000000003e-05, 9.606900000000071e-05, 9.594399999999711e-05, 9.52079999999994e-05, 9.608300000000028e-05, 9.576400000000165e-05, 9.568100000000024e-05, 9.552800000000097e-05, 9.558399999999925e-05, 9.591700000000092e-05, 9.55270000000015e-05, 9.563899999999806e-05, 9.606899999999724e-05, 9.579200000000079e-05, 9.538900000000128e-05, 9.60140000000019e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:56:36.963" endtime="20201029 12:56:36.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.958" endtime="20201029 12:56:36.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:36.969" endtime="20201029 12:56:36.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.968" endtime="20201029 12:56:36.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.967" endtime="20201029 12:56:36.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.606" endtime="20201029 12:56:36.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.606" endtime="20201029 12:56:36.990"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:36.999" endtime="20201029 12:56:37.018"></status>
</kw>
<msg timestamp="20201029 12:56:37.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:36.998" endtime="20201029 12:56:37.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:37.020" endtime="20201029 12:56:37.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.022" endtime="20201029 12:56:37.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.995" endtime="20201029 12:56:37.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.993" endtime="20201029 12:56:37.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.032" endtime="20201029 12:56:37.320"></status>
</kw>
<msg timestamp="20201029 12:56:37.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:37.030" endtime="20201029 12:56:37.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:37.324" endtime="20201029 12:56:37.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.333" endtime="20201029 12:56:37.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.028" endtime="20201029 12:56:37.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.026" endtime="20201029 12:56:37.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:37.340" level="INFO">${RESULT} = [{'diff': 9.633300000000053e-05}, {'diff': 9.659700000000035e-05}, {'diff': 9.622199999999997e-05}, {'diff': 9.66799999999983e-05}, {'diff': 9.626400000000215e-05}, {'diff': 9.677799999999875e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:37.337" endtime="20201029 12:56:37.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:37.344" level="INFO">${ACCURACY} = {'diff': [9.633300000000053e-05, 9.659700000000035e-05, 9.622199999999997e-05, 9.66799999999983e-05, 9.626400000000215e-05, 9.677799999999875e-05, 9.641699999999795e-05, 9.674999999999961e-05, 9.69730...</msg>
<status status="PASS" starttime="20201029 12:56:37.341" endtime="20201029 12:56:37.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.349" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:56:37.348" endtime="20201029 12:56:37.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.352" level="INFO">VALUE: [9.633300000000053e-05, 9.659700000000035e-05, 9.622199999999997e-05, 9.66799999999983e-05, 9.626400000000215e-05, 9.677799999999875e-05, 9.641699999999795e-05, 9.674999999999961e-05, 9.69730000000002e-05, 9.627799999999825e-05, 9.613899999999856e-05, 9.63470000000001e-05, 9.623599999999954e-05, 9.7027999999999e-05, 9.640299999999838e-05, 9.609699999999985e-05, 9.682000000000093e-05, 9.699999999999986e-05, 9.656999999999721e-05, 9.676299999999971e-05, 9.645900000000013e-05, 9.627700000000225e-05, 9.638899999999881e-05, 9.705500000000214e-05, 9.613900000000203e-05, 9.62080000000004e-05, 9.63470000000001e-05, 9.61669999999977e-05, 9.613899999999856e-05, 9.622299999999945e-05, 9.627700000000225e-05, 9.624999999999911e-05, 9.662499999999949e-05, 9.626399999999868e-05, 9.658300000000078e-05, 9.645800000000065e-05, 9.625000000000258e-05, 9.63470000000001e-05, 9.636099999999967e-05, 9.644500000000056e-05, 9.674999999999961e-05, 9.638900000000228e-05, 9.634799999999957e-05, 9.636099999999967e-05, 9.705600000000161e-05, 9.66799999999983e-05, 9.705600000000161e-05, 9.677799999999875e-05, 9.65279999999985e-05, 9.656999999999721e-05]</msg>
<status status="PASS" starttime="20201029 12:56:37.350" endtime="20201029 12:56:37.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.345" endtime="20201029 12:56:37.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:37.357" endtime="20201029 12:56:37.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.355" endtime="20201029 12:56:37.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.354" endtime="20201029 12:56:37.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.991" endtime="20201029 12:56:37.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:36.991" endtime="20201029 12:56:37.378"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.387" endtime="20201029 12:56:37.411"></status>
</kw>
<msg timestamp="20201029 12:56:37.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:37.385" endtime="20201029 12:56:37.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:37.413" endtime="20201029 12:56:37.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.415" endtime="20201029 12:56:37.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.383" endtime="20201029 12:56:37.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.380" endtime="20201029 12:56:37.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.425" endtime="20201029 12:56:37.710"></status>
</kw>
<msg timestamp="20201029 12:56:37.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024483153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024580833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:37.423" endtime="20201029 12:56:37.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024483153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024580833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:37.714" endtime="20201029 12:56:37.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.723" endtime="20201029 12:56:37.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.420" endtime="20201029 12:56:37.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.419" endtime="20201029 12:56:37.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:37.729" level="INFO">${RESULT} = [{'diff': 9.76799999999993e-05}, {'diff': 9.790299999999988e-05}, {'diff': 9.758299999999831e-05}, {'diff': 9.756900000000221e-05}, {'diff': 9.786100000000117e-05}, {'diff': 9.768100000000224e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:37.726" endtime="20201029 12:56:37.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:37.734" level="INFO">${ACCURACY} = {'diff': [9.76799999999993e-05, 9.790299999999988e-05, 9.758299999999831e-05, 9.756900000000221e-05, 9.786100000000117e-05, 9.768100000000224e-05, 9.801400000000043e-05, 9.745900000000113e-05, 9.71249...</msg>
<status status="PASS" starttime="20201029 12:56:37.730" endtime="20201029 12:56:37.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.738" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:56:37.737" endtime="20201029 12:56:37.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.741" level="INFO">VALUE: [9.76799999999993e-05, 9.790299999999988e-05, 9.758299999999831e-05, 9.756900000000221e-05, 9.786100000000117e-05, 9.768100000000224e-05, 9.801400000000043e-05, 9.745900000000113e-05, 9.712499999999999e-05, 9.777799999999975e-05, 9.733300000000153e-05, 9.741599999999948e-05, 9.759700000000135e-05, 9.715299999999913e-05, 9.786100000000117e-05, 9.708299999999781e-05, 9.755600000000211e-05, 9.758400000000125e-05, 9.768100000000224e-05, 9.75279999999995e-05, 9.732000000000143e-05, 9.750000000000036e-05, 9.780499999999942e-05, 9.733299999999806e-05, 9.75279999999995e-05, 9.800000000000086e-05, 9.7721999999998e-05, 9.786200000000064e-05, 9.770899999999791e-05, 9.751399999999993e-05, 9.758400000000125e-05, 9.730500000000239e-05, 9.80410000000001e-05, 9.772200000000147e-05, 9.718000000000226e-05, 9.723600000000054e-05, 9.74860000000008e-05, 9.73059999999984e-05, 9.782000000000193e-05, 9.770900000000138e-05, 9.777799999999975e-05, 9.7334000000001e-05, 9.756899999999874e-05, 9.718100000000174e-05, 9.726399999999968e-05, 9.741599999999948e-05, 9.751399999999993e-05, 9.72920000000023e-05, 9.736100000000067e-05, 9.758400000000125e-05]</msg>
<status status="PASS" starttime="20201029 12:56:37.739" endtime="20201029 12:56:37.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.735" endtime="20201029 12:56:37.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:37.747" endtime="20201029 12:56:37.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.745" endtime="20201029 12:56:37.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.744" endtime="20201029 12:56:37.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.379" endtime="20201029 12:56:37.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.378" endtime="20201029 12:56:37.768"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.777" endtime="20201029 12:56:37.796"></status>
</kw>
<msg timestamp="20201029 12:56:37.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:37.775" endtime="20201029 12:56:37.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:37.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:37.798" endtime="20201029 12:56:37.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.800" endtime="20201029 12:56:37.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.773" endtime="20201029 12:56:37.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.770" endtime="20201029 12:56:37.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:37.810" endtime="20201029 12:56:38.097"></status>
</kw>
<msg timestamp="20201029 12:56:38.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020410847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:37.808" endtime="20201029 12:56:38.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020410847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:38.101" endtime="20201029 12:56:38.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.110" endtime="20201029 12:56:38.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.805" endtime="20201029 12:56:38.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.804" endtime="20201029 12:56:38.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:38.118" level="INFO">${RESULT} = [{'diff': 9.865300000000063e-05}, {'diff': 9.827800000000025e-05}, {'diff': 9.874999999999814e-05}, {'diff': 9.84860000000018e-05}, {'diff': 9.836100000000167e-05}, {'diff': 9.820900000000188e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:56:38.114" endtime="20201029 12:56:38.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:38.123" level="INFO">${ACCURACY} = {'diff': [9.865300000000063e-05, 9.827800000000025e-05, 9.874999999999814e-05, 9.84860000000018e-05, 9.836100000000167e-05, 9.820900000000188e-05, 9.856899999999974e-05, 9.893100000000002e-05, 9.82079...</msg>
<status status="PASS" starttime="20201029 12:56:38.119" endtime="20201029 12:56:38.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.128" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:56:38.127" endtime="20201029 12:56:38.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.131" level="INFO">VALUE: [9.865300000000063e-05, 9.827800000000025e-05, 9.874999999999814e-05, 9.84860000000018e-05, 9.836100000000167e-05, 9.820900000000188e-05, 9.856899999999974e-05, 9.893100000000002e-05, 9.820799999999894e-05, 9.901399999999796e-05, 9.906900000000024e-05, 9.891600000000098e-05, 9.851399999999746e-05, 9.888899999999784e-05, 9.823600000000154e-05, 9.89860000000023e-05, 9.869500000000281e-05, 9.908399999999928e-05, 9.88059999999999e-05, 9.895800000000315e-05, 9.89020000000014e-05, 9.875000000000161e-05, 9.843099999999952e-05, 9.88059999999999e-05, 9.888899999999784e-05, 9.844499999999909e-05, 9.888899999999784e-05, 9.838900000000081e-05, 9.851400000000093e-05, 9.897199999999926e-05, 9.865300000000063e-05, 9.859700000000235e-05, 9.86670000000002e-05, 9.848599999999832e-05, 9.812500000000099e-05, 9.847199999999875e-05, 9.893100000000002e-05, 9.829199999999982e-05, 9.834800000000157e-05, 9.827700000000078e-05, 9.811100000000142e-05, 9.837500000000124e-05, 9.900000000000186e-05, 9.851400000000093e-05, 9.869399999999987e-05, 9.909799999999885e-05, 9.838900000000081e-05, 9.831999999999896e-05, 9.844399999999962e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201029 12:56:38.129" endtime="20201029 12:56:38.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.124" endtime="20201029 12:56:38.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:38.136" endtime="20201029 12:56:38.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.135" endtime="20201029 12:56:38.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.133" endtime="20201029 12:56:38.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.769" endtime="20201029 12:56:38.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:37.768" endtime="20201029 12:56:38.157"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.166" endtime="20201029 12:56:38.185"></status>
</kw>
<msg timestamp="20201029 12:56:38.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:38.165" endtime="20201029 12:56:38.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:38.187" endtime="20201029 12:56:38.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.190" endtime="20201029 12:56:38.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.162" endtime="20201029 12:56:38.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.160" endtime="20201029 12:56:38.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.199" endtime="20201029 12:56:38.486"></status>
</kw>
<msg timestamp="20201029 12:56:38.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:38.198" endtime="20201029 12:56:38.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:38.490" endtime="20201029 12:56:38.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.499" endtime="20201029 12:56:38.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.195" endtime="20201029 12:56:38.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.193" endtime="20201029 12:56:38.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:38.506" level="INFO">${RESULT} = [{'diff': 9.979199999999785e-05}, {'diff': 9.970899999999991e-05}, {'diff': 9.933399999999953e-05}, {'diff': 9.987499999999927e-05}, {'diff': 9.945899999999966e-05}, {'diff': 9.961099999999945e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:56:38.502" endtime="20201029 12:56:38.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:38.510" level="INFO">${ACCURACY} = {'diff': [9.979199999999785e-05, 9.970899999999991e-05, 9.933399999999953e-05, 9.987499999999927e-05, 9.945899999999966e-05, 9.961099999999945e-05, 9.965299999999816e-05, 0.00010006900000000124, 9.922...</msg>
<status status="PASS" starttime="20201029 12:56:38.507" endtime="20201029 12:56:38.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.515" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:56:38.514" endtime="20201029 12:56:38.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.517" level="INFO">VALUE: [9.979199999999785e-05, 9.970899999999991e-05, 9.933399999999953e-05, 9.987499999999927e-05, 9.945899999999966e-05, 9.961099999999945e-05, 9.965299999999816e-05, 0.00010006900000000124, 9.92219999999995e-05, 9.93060000000004e-05, 9.98060000000009e-05, 9.987499999999927e-05, 9.936100000000267e-05, 9.982000000000046e-05, 9.9722e-05, 9.967999999999783e-05, 9.924999999999864e-05, 9.937500000000224e-05, 9.912499999999852e-05, 9.974999999999914e-05, 9.92219999999995e-05, 9.995800000000069e-05, 0.00010001400000000243, 9.936200000000214e-05, 9.961199999999892e-05, 9.911100000000242e-05, 9.936100000000267e-05, 9.969400000000087e-05, 9.95280000000015e-05, 9.973599999999957e-05, 9.994400000000112e-05, 9.959699999999988e-05, 9.926400000000168e-05, 9.962499999999902e-05, 9.912500000000199e-05, 9.970799999999697e-05, 9.919400000000037e-05, 0.0001000549999999982, 9.965200000000216e-05, 9.941600000000148e-05, 0.00010005600000000114, 9.998599999999983e-05, 9.990299999999841e-05, 9.937500000000224e-05, 9.98479999999996e-05, 9.98479999999996e-05, 0.00010008300000000081, 9.984700000000013e-05, 9.966599999999826e-05, 9.941600000000148e-05]</msg>
<status status="PASS" starttime="20201029 12:56:38.516" endtime="20201029 12:56:38.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.511" endtime="20201029 12:56:38.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:38.523" endtime="20201029 12:56:38.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.521" endtime="20201029 12:56:38.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.520" endtime="20201029 12:56:38.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.158" endtime="20201029 12:56:38.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.157" endtime="20201029 12:56:38.544"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.553" endtime="20201029 12:56:38.574"></status>
</kw>
<msg timestamp="20201029 12:56:38.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:38.551" endtime="20201029 12:56:38.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:38.575" endtime="20201029 12:56:38.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.578" endtime="20201029 12:56:38.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.548" endtime="20201029 12:56:38.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.546" endtime="20201029 12:56:38.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.587" endtime="20201029 12:56:38.874"></status>
</kw>
<msg timestamp="20201029 12:56:38.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:38.586" endtime="20201029 12:56:38.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:38.878" endtime="20201029 12:56:38.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.887" endtime="20201029 12:56:38.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.583" endtime="20201029 12:56:38.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.581" endtime="20201029 12:56:38.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:38.895" level="INFO">${RESULT} = [{'diff': 0.00010083300000000156}, {'diff': 0.00010097200000000126}, {'diff': 0.00010029200000000182}, {'diff': 0.00010020800000000094}, {'diff': 0.00010069499999999787}, {'diff': 0.000100722000000001...</msg>
<status status="PASS" starttime="20201029 12:56:38.890" endtime="20201029 12:56:38.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:38.899" level="INFO">${ACCURACY} = {'diff': [0.00010083300000000156, 0.00010097200000000126, 0.00010029200000000182, 0.00010020800000000094, 0.00010069499999999787, 0.000100722000000001, 0.00010036199999999967, 0.00010042999999999858, ...</msg>
<status status="PASS" starttime="20201029 12:56:38.896" endtime="20201029 12:56:38.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.903" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:56:38.902" endtime="20201029 12:56:38.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.906" level="INFO">VALUE: [0.00010083300000000156, 0.00010097200000000126, 0.00010029200000000182, 0.00010020800000000094, 0.00010069499999999787, 0.000100722000000001, 0.00010036199999999967, 0.00010042999999999858, 0.00010090299999999941, 0.00010067999999999883, 0.00010047200000000076, 0.00010056899999999827, 0.00010091700000000245, 0.00010076399999999971, 0.00010015300000000213, 0.00010093099999999855, 0.00010026299999999974, 0.00010027800000000225, 0.00010027799999999878, 0.00010083300000000156, 0.00010015300000000213, 0.00010009700000000038, 0.00010019500000000084, 0.00010054200000000207, 0.00010083300000000156, 0.00010093100000000202, 0.00010065299999999916, 0.0001003060000000014, 0.0001001939999999979, 0.00010070800000000144, 0.00010093000000000255, 0.00010027799999999878, 0.00010027800000000225, 0.00010044399999999815, 0.00010062500000000002, 0.00010009700000000038, 0.00010068100000000177, 0.00010009700000000038, 0.00010087500000000027, 0.00010011099999999995, 0.00010013900000000256, 0.00010077799999999928, 0.00010091699999999898, 0.00010047200000000076, 0.00010023600000000008, 0.00010012499999999952, 0.00010042999999999858, 0.00010020899999999694, 0.00010090300000000288, 0.00010070800000000144]</msg>
<status status="PASS" starttime="20201029 12:56:38.905" endtime="20201029 12:56:38.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.900" endtime="20201029 12:56:38.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:38.912" endtime="20201029 12:56:38.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.911" endtime="20201029 12:56:38.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.909" endtime="20201029 12:56:38.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.545" endtime="20201029 12:56:38.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.544" endtime="20201029 12:56:38.933"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.942" endtime="20201029 12:56:38.961"></status>
</kw>
<msg timestamp="20201029 12:56:38.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:38.941" endtime="20201029 12:56:38.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:38.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:38.963" endtime="20201029 12:56:38.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.966" endtime="20201029 12:56:38.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.938" endtime="20201029 12:56:38.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.936" endtime="20201029 12:56:38.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:38.975" endtime="20201029 12:56:39.262"></status>
</kw>
<msg timestamp="20201029 12:56:39.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:38.974" endtime="20201029 12:56:39.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:39.266" endtime="20201029 12:56:39.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.274" endtime="20201029 12:56:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.971" endtime="20201029 12:56:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.969" endtime="20201029 12:56:39.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:39.281" level="INFO">${RESULT} = [{'diff': 0.00010166699999999973}, {'diff': 0.00010126400000000021}, {'diff': 0.00010172199999999854}, {'diff': 0.00010194499999999912}, {'diff': 0.00010165300000000016}, {'diff': 0.000101778000000000...</msg>
<status status="PASS" starttime="20201029 12:56:39.278" endtime="20201029 12:56:39.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:39.286" level="INFO">${ACCURACY} = {'diff': [0.00010166699999999973, 0.00010126400000000021, 0.00010172199999999854, 0.00010194499999999912, 0.00010165300000000016, 0.00010177800000000028, 0.0001016670000000032, 0.00010206899999999977,...</msg>
<status status="PASS" starttime="20201029 12:56:39.282" endtime="20201029 12:56:39.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.291" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:56:39.290" endtime="20201029 12:56:39.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.293" level="INFO">VALUE: [0.00010166699999999973, 0.00010126400000000021, 0.00010172199999999854, 0.00010194499999999912, 0.00010165300000000016, 0.00010177800000000028, 0.0001016670000000032, 0.00010206899999999977, 0.0001015549999999997, 0.00010181899999999952, 0.00010198599999999836, 0.0001012359999999976, 0.00010111100000000095, 0.00010116699999999923, 0.00010197199999999879, 0.00010206999999999924, 0.00010137500000000077, 0.00010165300000000016, 0.00010158299999999884, 0.00010125000000000065, 0.00010106900000000224, 0.00010142999999999958, 0.00010202800000000053, 0.00010205599999999967, 0.00010158300000000231, 0.00010175000000000115, 0.00010147300000000123, 0.00010166599999999679, 0.00010116599999999976, 0.00010180499999999995, 0.0001013610000000012, 0.00010188900000000084, 0.00010108299999999834, 0.00010158299999999884, 0.00010134700000000163, 0.00010162500000000102, 0.00010122199999999804, 0.00010199999999999793, 0.00010126299999999727, 0.00010206899999999977, 0.00010116599999999976, 0.00010165300000000016, 0.0001015419999999996, 0.00010136099999999773, 0.00010188900000000084, 0.00010163899999999712, 0.00010180599999999942, 0.0001019160000000005, 0.00010170899999999844, 0.0001013060000000024]</msg>
<status status="PASS" starttime="20201029 12:56:39.292" endtime="20201029 12:56:39.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.287" endtime="20201029 12:56:39.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:39.298" endtime="20201029 12:56:39.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.297" endtime="20201029 12:56:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.296" endtime="20201029 12:56:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.934" endtime="20201029 12:56:39.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:38.934" endtime="20201029 12:56:39.319"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.328" endtime="20201029 12:56:39.349"></status>
</kw>
<msg timestamp="20201029 12:56:39.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:39.327" endtime="20201029 12:56:39.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:39.350" endtime="20201029 12:56:39.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.353" endtime="20201029 12:56:39.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.324" endtime="20201029 12:56:39.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.322" endtime="20201029 12:56:39.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.363" endtime="20201029 12:56:39.649"></status>
</kw>
<msg timestamp="20201029 12:56:39.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:39.361" endtime="20201029 12:56:39.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:39.654" endtime="20201029 12:56:39.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.662" endtime="20201029 12:56:39.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.358" endtime="20201029 12:56:39.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.357" endtime="20201029 12:56:39.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:39.669" level="INFO">${RESULT} = [{'diff': 0.00010215300000000066}, {'diff': 0.0001030139999999985}, {'diff': 0.0001025420000000006}, {'diff': 0.00010283399999999956}, {'diff': 0.0001023480000000021}, {'diff': 0.00010224999999999818}...</msg>
<status status="PASS" starttime="20201029 12:56:39.666" endtime="20201029 12:56:39.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:39.673" level="INFO">${ACCURACY} = {'diff': [0.00010215300000000066, 0.0001030139999999985, 0.0001025420000000006, 0.00010283399999999956, 0.0001023480000000021, 0.00010224999999999818, 0.00010270799999999997, 0.00010222199999999904, 0...</msg>
<status status="PASS" starttime="20201029 12:56:39.670" endtime="20201029 12:56:39.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.678" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:56:39.677" endtime="20201029 12:56:39.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.680" level="INFO">VALUE: [0.00010215300000000066, 0.0001030139999999985, 0.0001025420000000006, 0.00010283399999999956, 0.0001023480000000021, 0.00010224999999999818, 0.00010270799999999997, 0.00010222199999999904, 0.0001028610000000027, 0.0001030139999999985, 0.00010247199999999929, 0.00010305600000000067, 0.00010212499999999805, 0.00010244399999999668, 0.00010219499999999937, 0.00010290200000000194, 0.00010227700000000131, 0.00010279100000000138, 0.0001027359999999991, 0.00010267999999999736, 0.00010252800000000103, 0.00010290300000000141, 0.00010245899999999919, 0.00010227800000000078, 0.00010245899999999919, 0.00010215300000000066, 0.0001028749999999988, 0.00010234700000000263, 0.0001021939999999999, 0.00010225000000000165, 0.0001026810000000003, 0.00010252800000000103, 0.00010237500000000177, 0.0001027359999999991, 0.00010269499999999987, 0.00010261099999999898, 0.00010294400000000065, 0.00010211100000000195, 0.00010224999999999818, 0.00010216700000000023, 0.0001023199999999995, 0.00010240300000000091, 0.00010266700000000073, 0.000102513999999998, 0.00010211199999999795, 0.00010282, 0.00010263900000000159, 0.00010233299999999959, 0.0001030420000000011, 0.00010251400000000147]</msg>
<status status="PASS" starttime="20201029 12:56:39.679" endtime="20201029 12:56:39.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.674" endtime="20201029 12:56:39.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:39.685" endtime="20201029 12:56:39.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.684" endtime="20201029 12:56:39.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.683" endtime="20201029 12:56:39.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.320" endtime="20201029 12:56:39.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.320" endtime="20201029 12:56:39.706"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.716" endtime="20201029 12:56:39.735"></status>
</kw>
<msg timestamp="20201029 12:56:39.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:39.714" endtime="20201029 12:56:39.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:39.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:39.736" endtime="20201029 12:56:39.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.739" endtime="20201029 12:56:39.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.711" endtime="20201029 12:56:39.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.709" endtime="20201029 12:56:39.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:39.749" endtime="20201029 12:56:40.035"></status>
</kw>
<msg timestamp="20201029 12:56:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:39.747" endtime="20201029 12:56:40.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021890806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:40.039" endtime="20201029 12:56:40.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.047" endtime="20201029 12:56:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.744" endtime="20201029 12:56:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.742" endtime="20201029 12:56:40.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:40.054" level="INFO">${RESULT} = [{'diff': 0.00010316699999999776}, {'diff': 0.0001038749999999998}, {'diff': 0.00010377699999999934}, {'diff': 0.0001036810000000013}, {'diff': 0.00010374999999999968}, {'diff': 0.00010333300000000059...</msg>
<status status="PASS" starttime="20201029 12:56:40.051" endtime="20201029 12:56:40.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:40.058" level="INFO">${ACCURACY} = {'diff': [0.00010316699999999776, 0.0001038749999999998, 0.00010377699999999934, 0.0001036810000000013, 0.00010374999999999968, 0.00010333300000000059, 0.0001032359999999996, 0.00010334700000000016, 0...</msg>
<status status="PASS" starttime="20201029 12:56:40.055" endtime="20201029 12:56:40.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.063" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:56:40.062" endtime="20201029 12:56:40.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.065" level="INFO">VALUE: [0.00010316699999999776, 0.0001038749999999998, 0.00010377699999999934, 0.0001036810000000013, 0.00010374999999999968, 0.00010333300000000059, 0.0001032359999999996, 0.00010334700000000016, 0.00010397300000000026, 0.00010380600000000142, 0.00010320899999999994, 0.00010397200000000079, 0.00010384700000000066, 0.00010397199999999732, 0.00010386100000000023, 0.00010316700000000123, 0.00010322200000000004, 0.0001035420000000016, 0.00010369500000000087, 0.00010326399999999875, 0.00010401300000000002, 0.00010380499999999848, 0.00010316600000000176, 0.00010392999999999861, 0.0001037360000000001, 0.00010311099999999948, 0.0001037360000000001, 0.00010380600000000142, 0.0001038749999999998, 0.00010311199999999895, 0.00010379200000000185, 0.00010323600000000308, 0.00010399999999999993, 0.00010315300000000166, 0.00010334799999999963, 0.00010362499999999955, 0.00010383299999999762, 0.00010309699999999991, 0.00010330599999999746, 0.0001036810000000013, 0.00010326300000000274, 0.00010394399999999818, 0.0001037360000000001, 0.00010326400000000222, 0.0001040139999999995, 0.00010363899999999912, 0.0001033200000000005, 0.00010380600000000142, 0.0001040420000000021, 0.00010329200000000135]</msg>
<status status="PASS" starttime="20201029 12:56:40.064" endtime="20201029 12:56:40.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.059" endtime="20201029 12:56:40.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:40.072" endtime="20201029 12:56:40.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.070" endtime="20201029 12:56:40.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.069" endtime="20201029 12:56:40.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.707" endtime="20201029 12:56:40.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:39.707" endtime="20201029 12:56:40.092"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.102" endtime="20201029 12:56:40.121"></status>
</kw>
<msg timestamp="20201029 12:56:40.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:40.100" endtime="20201029 12:56:40.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:40.122" endtime="20201029 12:56:40.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.125" endtime="20201029 12:56:40.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.097" endtime="20201029 12:56:40.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.095" endtime="20201029 12:56:40.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.134" endtime="20201029 12:56:40.421"></status>
</kw>
<msg timestamp="20201029 12:56:40.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:40.133" endtime="20201029 12:56:40.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020416194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:40.425" endtime="20201029 12:56:40.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.433" endtime="20201029 12:56:40.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.130" endtime="20201029 12:56:40.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.128" endtime="20201029 12:56:40.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:40.440" level="INFO">${RESULT} = [{'diff': 0.00010422199999999757}, {'diff': 0.00010423599999999714}, {'diff': 0.00010500000000000093}, {'diff': 0.00010508299999999887}, {'diff': 0.00010456900000000227}, {'diff': 0.000104986000000001...</msg>
<status status="PASS" starttime="20201029 12:56:40.437" endtime="20201029 12:56:40.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:40.445" level="INFO">${ACCURACY} = {'diff': [0.00010422199999999757, 0.00010423599999999714, 0.00010500000000000093, 0.00010508299999999887, 0.00010456900000000227, 0.00010498600000000136, 0.00010416699999999876, 0.0001050559999999992,...</msg>
<status status="PASS" starttime="20201029 12:56:40.441" endtime="20201029 12:56:40.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.450" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:56:40.449" endtime="20201029 12:56:40.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.452" level="INFO">VALUE: [0.00010422199999999757, 0.00010423599999999714, 0.00010500000000000093, 0.00010508299999999887, 0.00010456900000000227, 0.00010498600000000136, 0.00010416699999999876, 0.0001050559999999992, 0.00010497300000000126, 0.00010508299999999887, 0.00010488900000000037, 0.00010484700000000166, 0.00010454100000000313, 0.0001046810000000023, 0.00010488900000000037, 0.00010500000000000093, 0.00010445800000000172, 0.00010455600000000217, 0.00010469500000000187, 0.00010497200000000179, 0.00010497200000000179, 0.00010488900000000037, 0.00010506999999999878, 0.00010476400000000025, 0.000104514, 0.00010448600000000086, 0.0001046949999999984, 0.00010466599999999979, 0.00010468000000000283, 0.00010441699999999901, 0.00010495799999999875, 0.00010427699999999984, 0.00010512500000000105, 0.00010438900000000334, 0.00010483299999999862, 0.000104514, 0.00010422199999999757, 0.0001045559999999987, 0.00010462500000000055, 0.00010469399999999893, 0.00010505499999999973, 0.00010481899999999905, 0.00010465300000000316, 0.00010488900000000037, 0.00010499999999999746, 0.00010497199999999832, 0.0001043750000000003, 0.00010469500000000187, 0.00010441700000000248, 0.00010481899999999905]</msg>
<status status="PASS" starttime="20201029 12:56:40.451" endtime="20201029 12:56:40.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.446" endtime="20201029 12:56:40.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:40.458" endtime="20201029 12:56:40.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.456" endtime="20201029 12:56:40.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.455" endtime="20201029 12:56:40.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.093" endtime="20201029 12:56:40.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.093" endtime="20201029 12:56:40.479"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.488" endtime="20201029 12:56:40.508"></status>
</kw>
<msg timestamp="20201029 12:56:40.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:40.486" endtime="20201029 12:56:40.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:40.510" endtime="20201029 12:56:40.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.513" endtime="20201029 12:56:40.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.483" endtime="20201029 12:56:40.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.481" endtime="20201029 12:56:40.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.522" endtime="20201029 12:56:40.810"></status>
</kw>
<msg timestamp="20201029 12:56:40.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021188917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021294903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:40.520" endtime="20201029 12:56:40.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021188917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021294903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:40.814" endtime="20201029 12:56:40.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.822" endtime="20201029 12:56:40.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.518" endtime="20201029 12:56:40.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.516" endtime="20201029 12:56:40.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:40.829" level="INFO">${RESULT} = [{'diff': 0.00010598599999999889}, {'diff': 0.00010558399999999885}, {'diff': 0.0001053750000000013}, {'diff': 0.00010568000000000036}, {'diff': 0.0001051949999999989}, {'diff': 0.00010604099999999769...</msg>
<status status="PASS" starttime="20201029 12:56:40.826" endtime="20201029 12:56:40.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:40.833" level="INFO">${ACCURACY} = {'diff': [0.00010598599999999889, 0.00010558399999999885, 0.0001053750000000013, 0.00010568000000000036, 0.0001051949999999989, 0.00010604099999999769, 0.00010511100000000148, 0.00010531899999999955, ...</msg>
<status status="PASS" starttime="20201029 12:56:40.830" endtime="20201029 12:56:40.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.838" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:56:40.837" endtime="20201029 12:56:40.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.840" level="INFO">VALUE: [0.00010598599999999889, 0.00010558399999999885, 0.0001053750000000013, 0.00010568000000000036, 0.0001051949999999989, 0.00010604099999999769, 0.00010511100000000148, 0.00010531899999999955, 0.00010516699999999976, 0.0001058889999999979, 0.00010566700000000026, 0.00010541700000000001, 0.0001056949999999994, 0.00010576399999999778, 0.00010604100000000116, 0.00010533299999999912, 0.00010577800000000082, 0.00010530499999999998, 0.00010558300000000284, 0.00010511100000000148, 0.0001053339999999986, 0.00010509799999999792, 0.00010531999999999903, 0.00010595799999999975, 0.00010588900000000137, 0.00010561100000000198, 0.00010516699999999976, 0.00010608399999999935, 0.00010536099999999826, 0.00010545799999999925, 0.00010522199999999857, 0.00010566700000000026, 0.00010576400000000125, 0.00010563799999999818, 0.00010594400000000018, 0.00010611099999999901, 0.00010579200000000039, 0.0001055689999999998, 0.00010566700000000026, 0.00010576400000000125, 0.00010516699999999976, 0.00010563899999999765, 0.00010605500000000073, 0.00010572199999999907, 0.00010550000000000143, 0.00010588900000000137, 0.00010602800000000107, 0.00010593000000000061, 0.0001055559999999997, 0.00010512499999999758]</msg>
<status status="PASS" starttime="20201029 12:56:40.839" endtime="20201029 12:56:40.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.834" endtime="20201029 12:56:40.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:40.853" endtime="20201029 12:56:40.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.851" endtime="20201029 12:56:40.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.850" endtime="20201029 12:56:40.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.480" endtime="20201029 12:56:40.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.479" endtime="20201029 12:56:40.873"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.883" endtime="20201029 12:56:40.905"></status>
</kw>
<msg timestamp="20201029 12:56:40.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:40.881" endtime="20201029 12:56:40.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:40.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:40.907" endtime="20201029 12:56:40.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.910" endtime="20201029 12:56:40.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.878" endtime="20201029 12:56:40.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.876" endtime="20201029 12:56:40.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:40.919" endtime="20201029 12:56:41.206"></status>
</kw>
<msg timestamp="20201029 12:56:41.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:40.917" endtime="20201029 12:56:41.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023413292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023519667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:41.210" endtime="20201029 12:56:41.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.219" endtime="20201029 12:56:41.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.915" endtime="20201029 12:56:41.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.913" endtime="20201029 12:56:41.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:41.226" level="INFO">${RESULT} = [{'diff': 0.0001063750000000023}, {'diff': 0.0001063620000000022}, {'diff': 0.00010661099999999951}, {'diff': 0.00010697200000000032}, {'diff': 0.00010663899999999865}, {'diff': 0.00010694400000000118...</msg>
<status status="PASS" starttime="20201029 12:56:41.222" endtime="20201029 12:56:41.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:41.230" level="INFO">${ACCURACY} = {'diff': [0.0001063750000000023, 0.0001063620000000022, 0.00010661099999999951, 0.00010697200000000032, 0.00010663899999999865, 0.00010694400000000118, 0.00010645800000000025, 0.00010691700000000151, ...</msg>
<status status="PASS" starttime="20201029 12:56:41.227" endtime="20201029 12:56:41.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.234" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:56:41.233" endtime="20201029 12:56:41.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.237" level="INFO">VALUE: [0.0001063750000000023, 0.0001063620000000022, 0.00010661099999999951, 0.00010697200000000032, 0.00010663899999999865, 0.00010694400000000118, 0.00010645800000000025, 0.00010691700000000151, 0.00010676400000000225, 0.00010665300000000169, 0.00010663900000000212, 0.00010613799999999868, 0.00010629099999999794, 0.00010669400000000093, 0.00010658300000000037, 0.00010666699999999779, 0.000106208, 0.00010704200000000164, 0.00010647199999999982, 0.0001066950000000004, 0.00010633300000000012, 0.00010668100000000083, 0.00010636099999999926, 0.00010613899999999815, 0.00010629100000000141, 0.00010627800000000132, 0.00010630600000000046, 0.00010609700000000291, 0.00010615299999999772, 0.0001061949999999999, 0.00010673599999999964, 0.00010629200000000089, 0.0001065690000000008, 0.00010695800000000075, 0.00010616600000000129, 0.00010619400000000043, 0.00010622199999999957, 0.0001070690000000013, 0.00010694500000000065, 0.00010688900000000237, 0.00010666700000000126, 0.00010680499999999801, 0.00010638799999999893, 0.0001067080000000005, 0.00010677800000000182, 0.00010708300000000087, 0.00010700000000000293, 0.00010676400000000225, 0.00010652800000000157, 0.00010652800000000157]</msg>
<status status="PASS" starttime="20201029 12:56:41.236" endtime="20201029 12:56:41.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.231" endtime="20201029 12:56:41.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:41.243" endtime="20201029 12:56:41.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.241" endtime="20201029 12:56:41.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.240" endtime="20201029 12:56:41.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.874" endtime="20201029 12:56:41.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:40.874" endtime="20201029 12:56:41.264"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.273" endtime="20201029 12:56:41.292"></status>
</kw>
<msg timestamp="20201029 12:56:41.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:41.271" endtime="20201029 12:56:41.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:41.294" endtime="20201029 12:56:41.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.296" endtime="20201029 12:56:41.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.269" endtime="20201029 12:56:41.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.266" endtime="20201029 12:56:41.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.306" endtime="20201029 12:56:41.592"></status>
</kw>
<msg timestamp="20201029 12:56:41.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:41.304" endtime="20201029 12:56:41.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:41.596" endtime="20201029 12:56:41.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.604" endtime="20201029 12:56:41.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.302" endtime="20201029 12:56:41.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.300" endtime="20201029 12:56:41.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:41.612" level="INFO">${RESULT} = [{'diff': 0.00010709700000000044}, {'diff': 0.00010754199999999867}, {'diff': 0.00010804200000000264}, {'diff': 0.00010795800000000175}, {'diff': 0.0001080279999999996}, {'diff': 0.0001074999999999999...</msg>
<status status="PASS" starttime="20201029 12:56:41.608" endtime="20201029 12:56:41.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:41.617" level="INFO">${ACCURACY} = {'diff': [0.00010709700000000044, 0.00010754199999999867, 0.00010804200000000264, 0.00010795800000000175, 0.0001080279999999996, 0.00010749999999999996, 0.00010745799999999778, 0.00010780499999999901,...</msg>
<status status="PASS" starttime="20201029 12:56:41.613" endtime="20201029 12:56:41.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.621" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:56:41.620" endtime="20201029 12:56:41.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.624" level="INFO">VALUE: [0.00010709700000000044, 0.00010754199999999867, 0.00010804200000000264, 0.00010795800000000175, 0.0001080279999999996, 0.00010749999999999996, 0.00010745799999999778, 0.00010780499999999901, 0.00010787500000000033, 0.00010780599999999849, 0.0001072499999999997, 0.00010770900000000097, 0.00010748600000000039, 0.0001078889999999999, 0.00010800000000000046, 0.000107208000000001, 0.0001075279999999991, 0.00010769399999999846, 0.00010781900000000205, 0.00010773600000000064, 0.00010804199999999917, 0.00010766699999999879, 0.0001076950000000014, 0.0001073340000000006, 0.00010779099999999944, 0.0001072499999999997, 0.00010711100000000001, 0.00010743100000000158, 0.00010805599999999874, 0.00010779200000000239, 0.00010763899999999965, 0.00010787499999999686, 0.0001073889999999994, 0.00010802700000000012, 0.00010781899999999858, 0.00010751399999999953, 0.00010715300000000219, 0.00010747200000000082, 0.00010797199999999785, 0.00010776399999999978, 0.00010758399999999738, 0.00010747300000000029, 0.00010744500000000115, 0.00010792999999999914, 0.0001072629999999998, 0.00010736100000000026, 0.00010723600000000014, 0.00010762500000000008, 0.00010782000000000153, 0.00010758399999999738]</msg>
<status status="PASS" starttime="20201029 12:56:41.622" endtime="20201029 12:56:41.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.618" endtime="20201029 12:56:41.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:41.629" endtime="20201029 12:56:41.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.627" endtime="20201029 12:56:41.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.626" endtime="20201029 12:56:41.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.265" endtime="20201029 12:56:41.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.264" endtime="20201029 12:56:41.650"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.659" endtime="20201029 12:56:41.680"></status>
</kw>
<msg timestamp="20201029 12:56:41.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:41.657" endtime="20201029 12:56:41.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:41.681" endtime="20201029 12:56:41.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.684" endtime="20201029 12:56:41.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.655" endtime="20201029 12:56:41.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.653" endtime="20201029 12:56:41.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.693" endtime="20201029 12:56:41.980"></status>
</kw>
<msg timestamp="20201029 12:56:41.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02151625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:41.692" endtime="20201029 12:56:41.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:41.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02151625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:56:41.985" endtime="20201029 12:56:41.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:41.993" endtime="20201029 12:56:41.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.689" endtime="20201029 12:56:41.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.687" endtime="20201029 12:56:41.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:42.000" level="INFO">${RESULT} = [{'diff': 0.00010883299999999915}, {'diff': 0.00010811100000000101}, {'diff': 0.00010811099999999754}, {'diff': 0.00010858400000000185}, {'diff': 0.00010887500000000133}, {'diff': 0.000108917000000000...</msg>
<status status="PASS" starttime="20201029 12:56:41.996" endtime="20201029 12:56:42.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:42.004" level="INFO">${ACCURACY} = {'diff': [0.00010883299999999915, 0.00010811100000000101, 0.00010811099999999754, 0.00010858400000000185, 0.00010887500000000133, 0.00010891700000000004, 0.0001084020000000005, 0.00010823600000000114,...</msg>
<status status="PASS" starttime="20201029 12:56:42.001" endtime="20201029 12:56:42.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.008" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:56:42.007" endtime="20201029 12:56:42.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.011" level="INFO">VALUE: [0.00010883299999999915, 0.00010811100000000101, 0.00010811099999999754, 0.00010858400000000185, 0.00010887500000000133, 0.00010891700000000004, 0.0001084020000000005, 0.00010823600000000114, 0.00010818000000000286, 0.00010861099999999804, 0.0001082500000000007, 0.00010847200000000182, 0.00010893099999999961, 0.00010865300000000022, 0.00010870900000000197, 0.00010880500000000001, 0.00010854099999999672, 0.00010876400000000078, 0.00010872200000000207, 0.00010854199999999967, 0.00010823600000000114, 0.00010834699999999822, 0.00010837500000000083, 0.00010900000000000146, 0.00010880599999999949, 0.00010879100000000044, 0.0001085690000000028, 0.00010861100000000151, 0.00010895799999999928, 0.00010905599999999974, 0.00010898599999999842, 0.00010830599999999899, 0.00010886099999999829, 0.00010902700000000112, 0.0001083340000000016, 0.00010837500000000083, 0.00010811100000000101, 0.00010901400000000103, 0.00010834699999999822, 0.00010883299999999915, 0.00010858400000000185, 0.00010813900000000015, 0.00010861199999999752, 0.00010905599999999974, 0.00010859699999999847, 0.00010809699999999797, 0.00010862500000000108, 0.00010893000000000014, 0.00010901400000000103, 0.00010886100000000176]</msg>
<status status="PASS" starttime="20201029 12:56:42.010" endtime="20201029 12:56:42.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.005" endtime="20201029 12:56:42.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:42.016" endtime="20201029 12:56:42.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.015" endtime="20201029 12:56:42.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.014" endtime="20201029 12:56:42.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.651" endtime="20201029 12:56:42.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:41.650" endtime="20201029 12:56:42.037"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.046" endtime="20201029 12:56:42.068"></status>
</kw>
<msg timestamp="20201029 12:56:42.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:42.045" endtime="20201029 12:56:42.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:42.069" endtime="20201029 12:56:42.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.072" endtime="20201029 12:56:42.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.042" endtime="20201029 12:56:42.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.040" endtime="20201029 12:56:42.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.081" endtime="20201029 12:56:42.367"></status>
</kw>
<msg timestamp="20201029 12:56:42.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:42.080" endtime="20201029 12:56:42.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021554611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:42.372" endtime="20201029 12:56:42.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.381" endtime="20201029 12:56:42.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.077" endtime="20201029 12:56:42.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.075" endtime="20201029 12:56:42.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:42.388" level="INFO">${RESULT} = [{'diff': 0.00010916700000000029}, {'diff': 0.00010961099999999904}, {'diff': 0.00010977800000000135}, {'diff': 0.00010990300000000147}, {'diff': 0.00010940300000000097}, {'diff': 0.000109250000000001...</msg>
<status status="PASS" starttime="20201029 12:56:42.385" endtime="20201029 12:56:42.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:42.392" level="INFO">${ACCURACY} = {'diff': [0.00010916700000000029, 0.00010961099999999904, 0.00010977800000000135, 0.00010990300000000147, 0.00010940300000000097, 0.00010925000000000171, 0.00010924999999999824, 0.00010936200000000174...</msg>
<status status="PASS" starttime="20201029 12:56:42.389" endtime="20201029 12:56:42.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.397" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:56:42.396" endtime="20201029 12:56:42.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.399" level="INFO">VALUE: [0.00010916700000000029, 0.00010961099999999904, 0.00010977800000000135, 0.00010990300000000147, 0.00010940300000000097, 0.00010925000000000171, 0.00010924999999999824, 0.00010936200000000174, 0.00010947199999999935, 0.00010923600000000214, 0.00010955600000000024, 0.0001097089999999995, 0.00010977799999999788, 0.00010933299999999965, 0.00011000000000000246, 0.00010951400000000153, 0.00010997300000000279, 0.00010945799999999978, 0.00010929100000000094, 0.00010980500000000101, 0.000109902999999998, 0.00010983299999999668, 0.00010931999999999956, 0.00010911099999999854, 0.00010963899999999818, 0.0001095699999999998, 0.00010988799999999896, 0.00010936100000000226, 0.00010954099999999772, 0.00010979100000000144, 0.00010973600000000264, 0.00010969499999999993, 0.0001098890000000019, 0.00010998599999999942, 0.00010990300000000147, 0.00010969499999999993, 0.00010987500000000233, 0.00010958300000000337, 0.00010962499999999861, 0.00010925000000000171, 0.00010988899999999843, 0.00011005600000000074, 0.00011004200000000117, 0.00010916700000000029, 0.00010986099999999929, 0.00010965199999999828, 0.00010929099999999747, 0.00010941700000000054, 0.00010955500000000076, 0.00010995800000000028]</msg>
<status status="PASS" starttime="20201029 12:56:42.398" endtime="20201029 12:56:42.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.393" endtime="20201029 12:56:42.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:42.406" endtime="20201029 12:56:42.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.404" endtime="20201029 12:56:42.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.403" endtime="20201029 12:56:42.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.038" endtime="20201029 12:56:42.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.038" endtime="20201029 12:56:42.426"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.436" endtime="20201029 12:56:42.455"></status>
</kw>
<msg timestamp="20201029 12:56:42.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:42.434" endtime="20201029 12:56:42.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:42.457" endtime="20201029 12:56:42.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.459" endtime="20201029 12:56:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.431" endtime="20201029 12:56:42.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.429" endtime="20201029 12:56:42.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.469" endtime="20201029 12:56:42.754"></status>
</kw>
<msg timestamp="20201029 12:56:42.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:56:42.467" endtime="20201029 12:56:42.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:56:42.758" endtime="20201029 12:56:42.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.766" endtime="20201029 12:56:42.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.465" endtime="20201029 12:56:42.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.463" endtime="20201029 12:56:42.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:42.773" level="INFO">${RESULT} = [{'diff': 0.00011084700000000072}, {'diff': 0.00011030600000000099}, {'diff': 0.00011105600000000174}, {'diff': 0.00011068099999999789}, {'diff': 0.00011094400000000171}, {'diff': 0.000110819000000001...</msg>
<status status="PASS" starttime="20201029 12:56:42.770" endtime="20201029 12:56:42.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:42.778" level="INFO">${ACCURACY} = {'diff': [0.00011084700000000072, 0.00011030600000000099, 0.00011105600000000174, 0.00011068099999999789, 0.00011094400000000171, 0.00011081900000000158, 0.00011037499999999936, 0.00011023599999999967...</msg>
<status status="PASS" starttime="20201029 12:56:42.774" endtime="20201029 12:56:42.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.783" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:56:42.782" endtime="20201029 12:56:42.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.785" level="INFO">VALUE: [0.00011084700000000072, 0.00011030600000000099, 0.00011105600000000174, 0.00011068099999999789, 0.00011094400000000171, 0.00011081900000000158, 0.00011037499999999936, 0.00011023599999999967, 0.00011048599999999992, 0.00011105599999999827, 0.00011081999999999759, 0.00011108400000000088, 0.00011023600000000314, 0.00011069499999999746, 0.00011058299999999743, 0.00011024999999999924, 0.00011036099999999979, 0.00011066700000000179, 0.00011063899999999918, 0.00011020800000000053, 0.00011034700000000022, 0.00011109700000000097, 0.00011062499999999961, 0.00011026399999999881, 0.00011086100000000029, 0.00011081900000000158, 0.00011076399999999931, 0.00011013899999999868, 0.00011031900000000108, 0.00011016700000000129, 0.00011105600000000174, 0.00011108400000000088, 0.00011040199999999903, 0.00011027700000000237, 0.00011040199999999903, 0.0001105830000000009, 0.0001109159999999991, 0.00011013899999999868, 0.00011037499999999936, 0.00011094500000000118, 0.00011022300000000304, 0.00011082000000000106, 0.00011083299999999768, 0.00011065199999999928, 0.0001104159999999986, 0.00011026400000000228, 0.00011051400000000253, 0.00011023599999999967, 0.00011015300000000172, 0.00011063899999999918]</msg>
<status status="PASS" starttime="20201029 12:56:42.784" endtime="20201029 12:56:42.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.779" endtime="20201029 12:56:42.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:42.791" endtime="20201029 12:56:42.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.789" endtime="20201029 12:56:42.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.788" endtime="20201029 12:56:42.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.427" endtime="20201029 12:56:42.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.427" endtime="20201029 12:56:42.812"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.821" endtime="20201029 12:56:42.840"></status>
</kw>
<msg timestamp="20201029 12:56:42.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:42.819" endtime="20201029 12:56:42.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:42.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:42.842" endtime="20201029 12:56:42.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.844" endtime="20201029 12:56:42.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.817" endtime="20201029 12:56:42.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.814" endtime="20201029 12:56:42.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:42.854" endtime="20201029 12:56:43.142"></status>
</kw>
<msg timestamp="20201029 12:56:43.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:42.852" endtime="20201029 12:56:43.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020488653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:56:43.146" endtime="20201029 12:56:43.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:43.155" endtime="20201029 12:56:43.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.850" endtime="20201029 12:56:43.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.848" endtime="20201029 12:56:43.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:43.161" level="INFO">${RESULT} = [{'diff': 0.00011195800000000228}, {'diff': 0.00011155500000000276}, {'diff': 0.00011133300000000165}, {'diff': 0.00011134700000000122}, {'diff': 0.00011113899999999968}, {'diff': 0.000111444999999998...</msg>
<status status="PASS" starttime="20201029 12:56:43.158" endtime="20201029 12:56:43.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:43.166" level="INFO">${ACCURACY} = {'diff': [0.00011195800000000228, 0.00011155500000000276, 0.00011133300000000165, 0.00011134700000000122, 0.00011113899999999968, 0.00011144499999999821, 0.00011156999999999834, 0.00011136100000000079...</msg>
<status status="PASS" starttime="20201029 12:56:43.162" endtime="20201029 12:56:43.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.170" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:56:43.169" endtime="20201029 12:56:43.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.173" level="INFO">VALUE: [0.00011195800000000228, 0.00011155500000000276, 0.00011133300000000165, 0.00011134700000000122, 0.00011113899999999968, 0.00011144499999999821, 0.00011156999999999834, 0.00011136100000000079, 0.00011116600000000282, 0.00011115199999999978, 0.00011170799999999856, 0.00011168099999999889, 0.00011130600000000199, 0.00011175000000000074, 0.00011177799999999988, 0.00011170899999999803, 0.00011130599999999852, 0.00011162500000000061, 0.00011175000000000074, 0.00011152799999999963, 0.00011200000000000099, 0.00011118100000000186, 0.00011133299999999818, 0.00011200000000000099, 0.00011193099999999914, 0.00011117999999999892, 0.00011180499999999954, 0.00011162499999999714, 0.00011116599999999935, 0.000111903, 0.00011125000000000024, 0.00011111100000000054, 0.00011170899999999803, 0.0001115700000000018, 0.000111209000000001, 0.00011130499999999904, 0.00011162500000000061, 0.00011115199999999978, 0.00011197200000000185, 0.00011137500000000036, 0.00011198600000000142, 0.00011130600000000199, 0.00011127799999999938, 0.00011113899999999968, 0.00011197300000000132, 0.00011202700000000065, 0.00011112500000000011, 0.0001117220000000016, 0.00011181900000000258, 0.00011123600000000067]</msg>
<status status="PASS" starttime="20201029 12:56:43.171" endtime="20201029 12:56:43.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.167" endtime="20201029 12:56:43.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:43.178" endtime="20201029 12:56:43.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.177" endtime="20201029 12:56:43.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.175" endtime="20201029 12:56:43.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.813" endtime="20201029 12:56:43.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:42.812" endtime="20201029 12:56:43.199"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:43.208" endtime="20201029 12:56:43.228"></status>
</kw>
<msg timestamp="20201029 12:56:43.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:43.207" endtime="20201029 12:56:43.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:43.230" endtime="20201029 12:56:43.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:43.233" endtime="20201029 12:56:43.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.204" endtime="20201029 12:56:43.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.202" endtime="20201029 12:56:43.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:43.242" endtime="20201029 12:56:43.528"></status>
</kw>
<msg timestamp="20201029 12:56:43.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:43.241" endtime="20201029 12:56:43.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:56:43.532" endtime="20201029 12:56:43.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:43.541" endtime="20201029 12:56:43.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.238" endtime="20201029 12:56:43.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.236" endtime="20201029 12:56:43.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:56:43.547" level="INFO">${RESULT} = [{'diff': 0.00011247199999999888}, {'diff': 0.00011306999999999984}, {'diff': 0.00011263900000000118}, {'diff': 0.00011240199999999756}, {'diff': 0.00011263899999999771}, {'diff': 0.000112346999999998...</msg>
<status status="PASS" starttime="20201029 12:56:43.544" endtime="20201029 12:56:43.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:56:43.552" level="INFO">${ACCURACY} = {'diff': [0.00011247199999999888, 0.00011306999999999984, 0.00011263900000000118, 0.00011240199999999756, 0.00011263899999999771, 0.00011234699999999875, 0.00011269399999999999, 0.00011268099999999989...</msg>
<status status="PASS" starttime="20201029 12:56:43.548" endtime="20201029 12:56:43.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.556" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:56:43.555" endtime="20201029 12:56:43.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.559" level="INFO">VALUE: [0.00011247199999999888, 0.00011306999999999984, 0.00011263900000000118, 0.00011240199999999756, 0.00011263899999999771, 0.00011234699999999875, 0.00011269399999999999, 0.00011268099999999989, 0.00011262499999999814, 0.00011272199999999913, 0.00011265300000000075, 0.00011247200000000235, 0.0001127359999999987, 0.00011234799999999823, 0.00011255599999999977, 0.00011305600000000027, 0.00011304100000000122, 0.00011261100000000204, 0.00011298600000000242, 0.00011250000000000149, 0.00011251400000000106, 0.00011220799999999906, 0.00011276400000000131, 0.00011282000000000306, 0.00011258399999999891, 0.0001122359999999982, 0.00011281900000000011, 0.00011237500000000136, 0.00011261100000000204, 0.00011219400000000296, 0.00011216699999999982, 0.000112596999999999, 0.0001123480000000017, 0.0001127359999999987, 0.00011236200000000127, 0.00011279100000000097, 0.00011244399999999974, 0.00011248600000000192, 0.00011263900000000118, 0.00011229199999999995, 0.00011298599999999895, 0.00011295799999999981, 0.00011277799999999741, 0.00011236100000000179, 0.00011269399999999999, 0.00011262500000000161, 0.00011258299999999943, 0.00011300000000000199, 0.00011234699999999875, 0.00011277800000000088]</msg>
<status status="PASS" starttime="20201029 12:56:43.557" endtime="20201029 12:56:43.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.552" endtime="20201029 12:56:43.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:43.565" endtime="20201029 12:56:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.563" endtime="20201029 12:56:43.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.562" endtime="20201029 12:56:43.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.200" endtime="20201029 12:56:43.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.200" endtime="20201029 12:56:43.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:04.885" endtime="20201029 12:56:43.586"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:56:01.792" endtime="20201029 12:56:43.587" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:55:12.530" endtime="20201029 12:56:43.590"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:56:43.644" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:56:43.652" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:56:44.801" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:56:43.643" endtime="20201029 12:56:44.803"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:56:47.808" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:56:44.805" endtime="20201029 12:56:47.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.641" endtime="20201029 12:56:47.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:47.815" endtime="20201029 12:56:48.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:47.812" endtime="20201029 12:56:48.061"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:48.074" endtime="20201029 12:56:51.091"></status>
</kw>
<msg timestamp="20201029 12:56:51.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:48.072" endtime="20201029 12:56:51.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:51.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:51.092" endtime="20201029 12:56:51.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:56:51.098" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:56:51.095" endtime="20201029 12:56:51.099"></status>
</kw>
<status status="FAIL" starttime="20201029 12:56:48.070" endtime="20201029 12:56:51.099"></status>
</kw>
<status status="FAIL" starttime="20201029 12:56:48.067" endtime="20201029 12:56:51.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:48.066" endtime="20201029 12:56:51.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:56:51.104" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:56:51.103" endtime="20201029 12:56:51.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.101" endtime="20201029 12:56:51.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:48.065" endtime="20201029 12:56:51.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:48.065" endtime="20201029 12:56:51.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:51.106" endtime="20201029 12:56:51.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:48.063" endtime="20201029 12:56:51.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:51.109" endtime="20201029 12:56:51.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:48.062" endtime="20201029 12:56:51.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:43.640" endtime="20201029 12:56:51.111"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:56:51.117" endtime="20201029 12:56:51.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.116" endtime="20201029 12:56:51.137"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:51.151" endtime="20201029 12:56:54.173"></status>
</kw>
<msg timestamp="20201029 12:56:54.174" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:51.149" endtime="20201029 12:56:54.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:56:54.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:54.176" endtime="20201029 12:56:54.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:56:54.187" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:56:54.182" endtime="20201029 12:56:54.187"></status>
</kw>
<status status="FAIL" starttime="20201029 12:56:51.147" endtime="20201029 12:56:54.189"></status>
</kw>
<status status="FAIL" starttime="20201029 12:56:51.144" endtime="20201029 12:56:54.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.143" endtime="20201029 12:56:54.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:56:54.199" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:56:54.197" endtime="20201029 12:56:54.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:54.193" endtime="20201029 12:56:54.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.142" endtime="20201029 12:56:54.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.141" endtime="20201029 12:56:54.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:54.205" endtime="20201029 12:56:54.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.140" endtime="20201029 12:56:54.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.138" endtime="20201029 12:56:54.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:51.114" endtime="20201029 12:56:54.211"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:56:54.229" endtime="20201029 12:57:00.356"></status>
</kw>
<msg timestamp="20201029 12:57:00.357" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:56:54.226" endtime="20201029 12:57:00.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.362" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:00.359" endtime="20201029 12:57:00.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:00.365" endtime="20201029 12:57:00.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:54.220" endtime="20201029 12:57:00.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:54.215" endtime="20201029 12:57:00.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:00.376" level="INFO">${RESULT} = {'bg-timer-count': 0, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:57:00.372" endtime="20201029 12:57:00.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.386" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:00.384" endtime="20201029 12:57:00.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.390" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:57:00.388" endtime="20201029 12:57:00.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.378" endtime="20201029 12:57:00.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.401" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:00.399" endtime="20201029 12:57:00.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.403" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:57:00.402" endtime="20201029 12:57:00.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.394" endtime="20201029 12:57:00.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.408" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:57:00.407" endtime="20201029 12:57:00.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.410" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:57:00.409" endtime="20201029 12:57:00.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.404" endtime="20201029 12:57:00.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:00.419" endtime="20201029 12:57:00.730"></status>
</kw>
<msg timestamp="20201029 12:57:00.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203006, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:57:00.417" endtime="20201029 12:57:00.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203006, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:57:00.734" endtime="20201029 12:57:00.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:00.743" endtime="20201029 12:57:00.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.413" endtime="20201029 12:57:00.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.412" endtime="20201029 12:57:00.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:57:00.751" level="INFO">${FILTERED} = [{'diff': 0.1000261809999996}, {'diff': 0.10000902700000003}, {'diff': 0.10000990300000012}, {'diff': 0.10001088799999991}, {'diff': 0.10001088899999999}, {'diff': 0.10001088899999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 12:57:00.747" endtime="20201029 12:57:00.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:00.755" level="INFO">${RESULT} = {'diff': [0.1000261809999996, 0.10000902700000003, 0.10000990300000012, 0.10001088799999991, 0.10001088899999999, 0.10001088899999999, 0.10001090299999982, 0.10001090200000018, 0.10001087499999972, 0....</msg>
<status status="PASS" starttime="20201029 12:57:00.752" endtime="20201029 12:57:00.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.759" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:57:00.758" endtime="20201029 12:57:00.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:00.762" level="INFO">VALUE: [0.1000261809999996, 0.10000902700000003, 0.10000990300000012, 0.10001088799999991, 0.10001088899999999, 0.10001088899999999, 0.10001090299999982, 0.10001090200000018, 0.10001087499999972, 0.10001088899999999, 0.10001090300000026, 0.10001091600000045, 0.10001087500000061, 0.10001088899999999, 0.10001097299999984, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:57:00.760" endtime="20201029 12:57:00.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.756" endtime="20201029 12:57:00.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:56:54.212" endtime="20201029 12:57:00.764"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:56:51.112" endtime="20201029 12:57:00.764" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:57:00.771" endtime="20201029 12:57:00.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.769" endtime="20201029 12:57:00.791"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:00.805" endtime="20201029 12:57:03.826"></status>
</kw>
<msg timestamp="20201029 12:57:03.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:00.803" endtime="20201029 12:57:03.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:03.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:03.829" endtime="20201029 12:57:03.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:57:03.838" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:57:03.834" endtime="20201029 12:57:03.839"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:00.801" endtime="20201029 12:57:03.840"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:00.797" endtime="20201029 12:57:03.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.796" endtime="20201029 12:57:03.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:57:03.849" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:57:03.848" endtime="20201029 12:57:03.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:03.844" endtime="20201029 12:57:03.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.795" endtime="20201029 12:57:03.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.795" endtime="20201029 12:57:03.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:03.853" endtime="20201029 12:57:03.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.793" endtime="20201029 12:57:03.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.792" endtime="20201029 12:57:03.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:00.768" endtime="20201029 12:57:03.859"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:03.876" endtime="20201029 12:57:10.000"></status>
</kw>
<msg timestamp="20201029 12:57:10.001" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:03.872" endtime="20201029 12:57:10.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.007" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:10.004" endtime="20201029 12:57:10.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:10.009" endtime="20201029 12:57:10.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:03.867" endtime="20201029 12:57:10.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:03.863" endtime="20201029 12:57:10.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:10.019" level="INFO">${RESULT} = {'bg-timer-count': 5, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:57:10.016" endtime="20201029 12:57:10.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.028" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:10.026" endtime="20201029 12:57:10.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.033" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:57:10.031" endtime="20201029 12:57:10.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.022" endtime="20201029 12:57:10.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.042" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:10.040" endtime="20201029 12:57:10.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.047" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:57:10.045" endtime="20201029 12:57:10.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.036" endtime="20201029 12:57:10.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.058" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:57:10.054" endtime="20201029 12:57:10.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.063" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:57:10.061" endtime="20201029 12:57:10.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.050" endtime="20201029 12:57:10.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:10.078" endtime="20201029 12:57:10.384"></status>
</kw>
<msg timestamp="20201029 12:57:10.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095954986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195994042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:10.075" endtime="20201029 12:57:10.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095954986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195994042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:10.388" endtime="20201029 12:57:10.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:10.396" endtime="20201029 12:57:10.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.070" endtime="20201029 12:57:10.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.066" endtime="20201029 12:57:10.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:57:10.402" level="INFO">${FILTERED} = [{'diff': 0.10003905599999996}, {'diff': 0.09999484800000014}, {'diff': 0.10001087499999972}, {'diff': 0.10001086100000034}, {'diff': 0.10001087499999972}, {'diff': 0.1000108609999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 12:57:10.399" endtime="20201029 12:57:10.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:10.406" level="INFO">${RESULT} = {'diff': [0.10003905599999996, 0.09999484800000014, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972, 0.1000108609999999, 0.10001087499999972, 0.10001087500000017, 0.10001086199999998, 0....</msg>
<status status="PASS" starttime="20201029 12:57:10.403" endtime="20201029 12:57:10.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.410" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:57:10.409" endtime="20201029 12:57:10.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:10.413" level="INFO">VALUE: [0.10003905599999996, 0.09999484800000014, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972, 0.1000108609999999, 0.10001087499999972, 0.10001087500000017, 0.10001086199999998, 0.10001087500000017, 0.10001087499999972, 0.10001086100000034, 0.10001088899999999, 0.10001086100000034, 0.10001087500000061, 0.10001095900000045, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001136099999997, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001086200000042, 0.10001088899999999, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001088799999991, 0.10001090299999937, 0.10001086100000034, 0.10001093099999991, 0.10001084700000007, 0.10001090300000026, 0.10001087500000061, 0.1000108880000008, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201029 12:57:10.411" endtime="20201029 12:57:10.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.407" endtime="20201029 12:57:10.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:03.860" endtime="20201029 12:57:10.414"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:57:00.766" endtime="20201029 12:57:10.415" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:57:10.422" endtime="20201029 12:57:10.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.421" endtime="20201029 12:57:10.442"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:10.455" endtime="20201029 12:57:13.477"></status>
</kw>
<msg timestamp="20201029 12:57:13.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:10.454" endtime="20201029 12:57:13.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:13.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:13.480" endtime="20201029 12:57:13.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:57:13.489" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:57:13.485" endtime="20201029 12:57:13.490"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:10.451" endtime="20201029 12:57:13.491"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:10.449" endtime="20201029 12:57:13.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.447" endtime="20201029 12:57:13.493"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:57:13.500" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:57:13.499" endtime="20201029 12:57:13.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:13.495" endtime="20201029 12:57:13.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.447" endtime="20201029 12:57:13.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.446" endtime="20201029 12:57:13.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:13.504" endtime="20201029 12:57:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.445" endtime="20201029 12:57:13.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.443" endtime="20201029 12:57:13.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:10.419" endtime="20201029 12:57:13.510"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:13.526" endtime="20201029 12:57:19.652"></status>
</kw>
<msg timestamp="20201029 12:57:19.653" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:13.523" endtime="20201029 12:57:19.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.658" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:19.655" endtime="20201029 12:57:19.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:19.660" endtime="20201029 12:57:19.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:13.518" endtime="20201029 12:57:19.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:13.514" endtime="20201029 12:57:19.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:19.673" level="INFO">${RESULT} = {'bg-timer-count': 10, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:57:19.669" endtime="20201029 12:57:19.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.682" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:19.680" endtime="20201029 12:57:19.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.686" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:57:19.684" endtime="20201029 12:57:19.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:19.675" endtime="20201029 12:57:19.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.696" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:19.694" endtime="20201029 12:57:19.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.700" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:57:19.698" endtime="20201029 12:57:19.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:19.689" endtime="20201029 12:57:19.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.710" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:57:19.708" endtime="20201029 12:57:19.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:19.714" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:57:19.712" endtime="20201029 12:57:19.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:19.703" endtime="20201029 12:57:19.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:19.729" endtime="20201029 12:57:20.028"></status>
</kw>
<msg timestamp="20201029 12:57:20.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095230708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195333736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:19.726" endtime="20201029 12:57:20.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:20.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095230708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195333736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:20.033" endtime="20201029 12:57:20.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:20.040" endtime="20201029 12:57:20.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:19.720" endtime="20201029 12:57:20.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:19.717" endtime="20201029 12:57:20.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:57:20.047" level="INFO">${FILTERED} = [{'diff': 0.10010302799999993}, {'diff': 0.09993213900000031}, {'diff': 5.409999999095305e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:57:20.044" endtime="20201029 12:57:20.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:20.052" level="INFO">${RESULT} = {'diff': [0.10010302799999993, 0.09993213900000031, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.41999999...</msg>
<status status="PASS" starttime="20201029 12:57:20.048" endtime="20201029 12:57:20.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:20.056" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:57:20.055" endtime="20201029 12:57:20.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:20.058" level="INFO">VALUE: [0.10010302799999993, 0.09993213900000031, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001136099999997, 0.10001088899999999, 0.10001094500000018, 5.410000003536197e-07, 5.410000003536197e-07, 0.1000113890000005, 0.10001087500000061, 0.10001090300000026, 0.10001090300000026, 0.10001087499999972, 0.10001088899999999, 0.10001090200000018, 0.10001088899999999, 0.10001088799999991, 0.10001090299999937, 0.10001088799999991, 0.10001093099999991, 0.10001086100000034, 0.10001090300000026, 0.10001090200000018, 0.10001088899999999, 0.10001095800000037, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:57:20.057" endtime="20201029 12:57:20.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.052" endtime="20201029 12:57:20.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:13.511" endtime="20201029 12:57:20.060"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:57:10.416" endtime="20201029 12:57:20.060" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:57:20.067" endtime="20201029 12:57:20.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.065" endtime="20201029 12:57:20.087"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:20.100" endtime="20201029 12:57:23.122"></status>
</kw>
<msg timestamp="20201029 12:57:23.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:20.098" endtime="20201029 12:57:23.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:23.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:23.125" endtime="20201029 12:57:23.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:57:23.134" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:57:23.130" endtime="20201029 12:57:23.134"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:20.096" endtime="20201029 12:57:23.136"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:20.093" endtime="20201029 12:57:23.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.092" endtime="20201029 12:57:23.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:57:23.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:57:23.144" endtime="20201029 12:57:23.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:23.139" endtime="20201029 12:57:23.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.091" endtime="20201029 12:57:23.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.090" endtime="20201029 12:57:23.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:23.151" endtime="20201029 12:57:23.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.089" endtime="20201029 12:57:23.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.088" endtime="20201029 12:57:23.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:20.064" endtime="20201029 12:57:23.156"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:23.173" endtime="20201029 12:57:29.298"></status>
</kw>
<msg timestamp="20201029 12:57:29.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:23.170" endtime="20201029 12:57:29.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:29.301" endtime="20201029 12:57:29.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:29.307" endtime="20201029 12:57:29.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:23.165" endtime="20201029 12:57:29.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:23.161" endtime="20201029 12:57:29.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:29.318" level="INFO">${RESULT} = {'bg-timer-count': 15, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:57:29.313" endtime="20201029 12:57:29.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.326" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:29.324" endtime="20201029 12:57:29.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.330" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:57:29.328" endtime="20201029 12:57:29.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.319" endtime="20201029 12:57:29.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.340" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:29.338" endtime="20201029 12:57:29.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.345" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:57:29.343" endtime="20201029 12:57:29.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.333" endtime="20201029 12:57:29.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.354" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:57:29.352" endtime="20201029 12:57:29.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.358" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:57:29.356" endtime="20201029 12:57:29.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.347" endtime="20201029 12:57:29.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:29.368" endtime="20201029 12:57:29.668"></status>
</kw>
<msg timestamp="20201029 12:57:29.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097697014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.197863833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:29.366" endtime="20201029 12:57:29.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097697014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.197863833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:29.672" endtime="20201029 12:57:29.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:29.680" endtime="20201029 12:57:29.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.364" endtime="20201029 12:57:29.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.361" endtime="20201029 12:57:29.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:57:29.686" level="INFO">${FILTERED} = [{'diff': 0.10016681900000002}, {'diff': 0.09989073599999987}, {'diff': 0.09998931900000008}, {'diff': 0.10000987500000003}, {'diff': 0.10001088799999991}, {'diff': 0.10001084700000007}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:57:29.683" endtime="20201029 12:57:29.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:29.690" level="INFO">${RESULT} = {'diff': [0.10016681900000002, 0.09989073599999987, 0.09998931900000008, 0.10000987500000003, 0.10001088799999991, 0.10001084700000007, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0....</msg>
<status status="PASS" starttime="20201029 12:57:29.687" endtime="20201029 12:57:29.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.694" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:57:29.693" endtime="20201029 12:57:29.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:29.696" level="INFO">VALUE: [0.10016681900000002, 0.09989073599999987, 0.09998931900000008, 0.10000987500000003, 0.10001088799999991, 0.10001084700000007, 0.1000108609999999, 0.10001087500000017, 0.10001087500000017, 0.10001087500000017, 0.10001086100000034, 0.10001086100000034, 0.1000109449999993, 5.420000004363601e-07, 5.410000003536197e-07, 0.10001137500000024, 0.10001084699999918, 0.10001087499999972, 0.10001086100000034, 0.10001088899999999, 0.10001087499999972, 0.10001086100000034, 0.10001090299999937, 0.10001086100000034, 0.10001088899999999, 0.10001086099999945, 0.10001088899999999, 0.10001088899999999, 0.10001086099999945, 0.10001087499999972, 0.10001088899999999, 0.10001090200000018, 0.10001084700000007, 0.10001097199999975, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 12:57:29.695" endtime="20201029 12:57:29.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.691" endtime="20201029 12:57:29.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:23.158" endtime="20201029 12:57:29.702"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:57:20.062" endtime="20201029 12:57:29.703" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:57:29.709" endtime="20201029 12:57:29.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.708" endtime="20201029 12:57:29.729"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:29.743" endtime="20201029 12:57:32.764"></status>
</kw>
<msg timestamp="20201029 12:57:32.765" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:29.742" endtime="20201029 12:57:32.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:32.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:32.767" endtime="20201029 12:57:32.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:57:32.776" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:57:32.772" endtime="20201029 12:57:32.777"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:29.739" endtime="20201029 12:57:32.778"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:29.736" endtime="20201029 12:57:32.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.735" endtime="20201029 12:57:32.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:57:32.787" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:57:32.786" endtime="20201029 12:57:32.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:32.782" endtime="20201029 12:57:32.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.734" endtime="20201029 12:57:32.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.733" endtime="20201029 12:57:32.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:32.791" endtime="20201029 12:57:32.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.732" endtime="20201029 12:57:32.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.730" endtime="20201029 12:57:32.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:29.707" endtime="20201029 12:57:32.796"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:32.813" endtime="20201029 12:57:38.937"></status>
</kw>
<msg timestamp="20201029 12:57:38.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:32.810" endtime="20201029 12:57:38.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:38.944" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:38.941" endtime="20201029 12:57:38.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:38.946" endtime="20201029 12:57:38.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:32.804" endtime="20201029 12:57:38.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:32.800" endtime="20201029 12:57:38.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:38.957" level="INFO">${RESULT} = {'bg-timer-count': 20, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:57:38.953" endtime="20201029 12:57:38.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:38.965" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:38.963" endtime="20201029 12:57:38.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:38.969" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:57:38.968" endtime="20201029 12:57:38.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:38.959" endtime="20201029 12:57:38.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:38.979" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:38.977" endtime="20201029 12:57:38.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:38.984" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:57:38.982" endtime="20201029 12:57:38.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:38.973" endtime="20201029 12:57:38.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:38.995" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:57:38.991" endtime="20201029 12:57:38.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:39.000" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:57:38.998" endtime="20201029 12:57:39.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:38.987" endtime="20201029 12:57:39.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:39.015" endtime="20201029 12:57:39.317"></status>
</kw>
<msg timestamp="20201029 12:57:39.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095039792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195275792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:39.012" endtime="20201029 12:57:39.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:39.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.095039792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195275792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:39.321" endtime="20201029 12:57:39.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:39.329" endtime="20201029 12:57:39.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.006" endtime="20201029 12:57:39.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.003" endtime="20201029 12:57:39.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:57:39.336" level="INFO">${FILTERED} = [{'diff': 0.10023599999999977}, {'diff': 0.09983033400000041}, {'diff': 0.10001774999999968}, {'diff': 0.09997362500000007}, {'diff': 0.1000098610000002}, {'diff': 0.10001086199999998}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 12:57:39.332" endtime="20201029 12:57:39.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:39.339" level="INFO">${RESULT} = {'diff': [0.10023599999999977, 0.09983033400000041, 0.10001774999999968, 0.09997362500000007, 0.1000098610000002, 0.10001086199999998, 0.10001086100000034, 0.10001088899999999, 0.1000108609999999, 0.1...</msg>
<status status="PASS" starttime="20201029 12:57:39.337" endtime="20201029 12:57:39.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:39.344" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:57:39.343" endtime="20201029 12:57:39.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:39.346" level="INFO">VALUE: [0.10023599999999977, 0.09983033400000041, 0.10001774999999968, 0.09997362500000007, 0.1000098610000002, 0.10001086199999998, 0.10001086100000034, 0.10001088899999999, 0.1000108609999999, 0.10001087500000017, 0.10001084700000007, 0.10001087499999972, 0.10001088799999991, 0.10001086100000034, 0.10001084700000007, 0.10001088899999999, 0.10001086100000034, 0.10001086099999945, 0.10001087499999972, 0.10001087500000061, 0.10001087500000061, 0.10001086100000034, 0.10001087500000061, 0.10001087500000061, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001087500000061, 0.10001088899999999, 0.10001087499999972, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001090300000026, 0.10001086099999945, 0.10001091599999956, 0.10001084700000007, 0.10001087500000061, 0.10001087499999972, 0.10001090300000026, 0.10001087500000061, 0.10001087499999972, 0.10001092999999983, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.280000001661733e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 12:57:39.345" endtime="20201029 12:57:39.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.340" endtime="20201029 12:57:39.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:32.797" endtime="20201029 12:57:39.351"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:57:29.704" endtime="20201029 12:57:39.351" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:57:39.358" endtime="20201029 12:57:39.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.356" endtime="20201029 12:57:39.378"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:39.390" endtime="20201029 12:57:42.412"></status>
</kw>
<msg timestamp="20201029 12:57:42.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:39.389" endtime="20201029 12:57:42.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:42.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:42.415" endtime="20201029 12:57:42.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:57:42.424" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:57:42.420" endtime="20201029 12:57:42.425"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:39.386" endtime="20201029 12:57:42.426"></status>
</kw>
<status status="FAIL" starttime="20201029 12:57:39.384" endtime="20201029 12:57:42.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.383" endtime="20201029 12:57:42.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:57:42.435" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:57:42.434" endtime="20201029 12:57:42.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:42.430" endtime="20201029 12:57:42.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.382" endtime="20201029 12:57:42.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.381" endtime="20201029 12:57:42.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:42.439" endtime="20201029 12:57:42.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.380" endtime="20201029 12:57:42.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.378" endtime="20201029 12:57:42.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:39.355" endtime="20201029 12:57:42.444"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:42.463" endtime="20201029 12:57:48.588"></status>
</kw>
<msg timestamp="20201029 12:57:48.589" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:42.458" endtime="20201029 12:57:48.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.599" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:57:48.595" endtime="20201029 12:57:48.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:48.604" endtime="20201029 12:57:48.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:42.453" endtime="20201029 12:57:48.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:42.448" endtime="20201029 12:57:48.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:48.620" level="INFO">${RESULT} = {'bg-timer-count': 25, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201029 12:57:48.612" endtime="20201029 12:57:48.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.633" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:48.631" endtime="20201029 12:57:48.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.638" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:57:48.636" endtime="20201029 12:57:48.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:48.622" endtime="20201029 12:57:48.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.648" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:57:48.645" endtime="20201029 12:57:48.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.652" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:57:48.650" endtime="20201029 12:57:48.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:48.641" endtime="20201029 12:57:48.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.662" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:57:48.659" endtime="20201029 12:57:48.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.666" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:57:48.664" endtime="20201029 12:57:48.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:48.655" endtime="20201029 12:57:48.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:48.681" endtime="20201029 12:57:48.983"></status>
</kw>
<msg timestamp="20201029 12:57:48.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097041208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.197314375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:48.678" endtime="20201029 12:57:48.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:57:48.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097041208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.197314375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:57:48.987" endtime="20201029 12:57:48.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:57:48.995" endtime="20201029 12:57:48.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:48.672" endtime="20201029 12:57:48.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:48.669" endtime="20201029 12:57:48.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:57:49.002" level="INFO">${FILTERED} = [{'diff': 0.10027316700000011}, {'diff': 0.09978734699999992}, {'diff': 0.10001966600000012}, {'diff': 0.09997665300000014}, {'diff': 0.10000987500000003}, {'diff': 0.10001091700000009}, {'diff': 5.40...</msg>
<status status="PASS" starttime="20201029 12:57:48.999" endtime="20201029 12:57:49.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:57:49.007" level="INFO">${RESULT} = {'diff': [0.10027316700000011, 0.09978734699999992, 0.10001966600000012, 0.09997665300000014, 0.10000987500000003, 0.10001091700000009, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e...</msg>
<status status="PASS" starttime="20201029 12:57:49.003" endtime="20201029 12:57:49.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:57:49.011" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:57:49.010" endtime="20201029 12:57:49.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:57:49.013" level="INFO">VALUE: [0.10027316700000011, 0.09978734699999992, 0.10001966600000012, 0.09997665300000014, 0.10000987500000003, 0.10001091700000009, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:57:49.012" endtime="20201029 12:57:49.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:49.008" endtime="20201029 12:57:49.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:57:42.446" endtime="20201029 12:57:49.015"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:57:39.353" endtime="20201029 12:57:49.016" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:56:43.599" endtime="20201029 12:57:49.022"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201029 12:48:39.014" endtime="20201029 12:57:49.056"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="6">Critical Tests</stat>
<stat pass="12" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="6">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="6">BOARD_arduino-due</stat>
<stat pass="4" fail="6">dev</stat>
</tag>
<suite>
<stat pass="12" fail="6" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="3" fail="6" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
