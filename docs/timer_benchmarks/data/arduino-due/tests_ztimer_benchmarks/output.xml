<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:56:13.240" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.882" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:16.891" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:18.042" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:16.881" endtime="20201030 15:56:18.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.049" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:56:18.046" endtime="20201030 15:56:21.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.879" endtime="20201030 15:56:21.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.056" endtime="20201030 15:56:21.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.053" endtime="20201030 15:56:21.280"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.293" endtime="20201030 15:56:24.315"></status>
</kw>
<msg timestamp="20201030 15:56:24.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.291" endtime="20201030 15:56:24.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.318" endtime="20201030 15:56:24.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.328" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:24.323" endtime="20201030 15:56:24.328"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:21.289" endtime="20201030 15:56:24.330"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:21.287" endtime="20201030 15:56:24.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.286" endtime="20201030 15:56:24.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:24.341" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:24.339" endtime="20201030 15:56:24.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.333" endtime="20201030 15:56:24.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.285" endtime="20201030 15:56:24.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.284" endtime="20201030 15:56:24.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.344" endtime="20201030 15:56:24.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.283" endtime="20201030 15:56:24.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.350" endtime="20201030 15:56:24.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.281" endtime="20201030 15:56:24.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.878" endtime="20201030 15:56:24.355"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.367" endtime="20201030 15:56:24.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.364" endtime="20201030 15:56:24.390"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.418" endtime="20201030 15:56:27.442"></status>
</kw>
<msg timestamp="20201030 15:56:27.443" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.415" endtime="20201030 15:56:27.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.445" endtime="20201030 15:56:27.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.455" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:27.451" endtime="20201030 15:56:27.456"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:24.410" endtime="20201030 15:56:27.457"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:24.405" endtime="20201030 15:56:27.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.401" endtime="20201030 15:56:27.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:27.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:27.465" endtime="20201030 15:56:27.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.461" endtime="20201030 15:56:27.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.399" endtime="20201030 15:56:27.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.398" endtime="20201030 15:56:27.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.470" endtime="20201030 15:56:27.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.395" endtime="20201030 15:56:27.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.392" endtime="20201030 15:56:27.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.362" endtime="20201030 15:56:27.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.492" endtime="20201030 15:56:27.504"></status>
</kw>
<msg timestamp="20201030 15:56:27.504" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.486" endtime="20201030 15:56:27.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.507" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.505" endtime="20201030 15:56:27.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.508" endtime="20201030 15:56:27.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.481" endtime="20201030 15:56:27.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.477" endtime="20201030 15:56:27.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.514" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:56:27.513" endtime="20201030 15:56:27.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.516" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:56:27.515" endtime="20201030 15:56:27.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.511" endtime="20201030 15:56:27.517"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:24.356" endtime="20201030 15:56:27.517" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:56:13.369" endtime="20201030 15:56:27.520"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.574" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:27.583" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:28.754" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:27.573" endtime="20201030 15:56:28.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.757" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:56:28.755" endtime="20201030 15:56:31.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.572" endtime="20201030 15:56:31.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.764" endtime="20201030 15:56:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.761" endtime="20201030 15:56:32.056"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.068" endtime="20201030 15:56:35.090"></status>
</kw>
<msg timestamp="20201030 15:56:35.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.066" endtime="20201030 15:56:35.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.093" endtime="20201030 15:56:35.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:35.102" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:35.098" endtime="20201030 15:56:35.103"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:32.064" endtime="20201030 15:56:35.104"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:32.062" endtime="20201030 15:56:35.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.061" endtime="20201030 15:56:35.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:35.114" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:35.112" endtime="20201030 15:56:35.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.108" endtime="20201030 15:56:35.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.060" endtime="20201030 15:56:35.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.059" endtime="20201030 15:56:35.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.118" endtime="20201030 15:56:35.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.058" endtime="20201030 15:56:35.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.123" endtime="20201030 15:56:35.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.056" endtime="20201030 15:56:35.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.571" endtime="20201030 15:56:35.128"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:35.141" endtime="20201030 15:56:35.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.137" endtime="20201030 15:56:35.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:35.192" endtime="20201030 15:56:38.215"></status>
</kw>
<msg timestamp="20201030 15:56:38.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:35.188" endtime="20201030 15:56:38.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.219" endtime="20201030 15:56:38.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.228" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:38.224" endtime="20201030 15:56:38.229"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:35.183" endtime="20201030 15:56:38.230"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:35.178" endtime="20201030 15:56:38.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.175" endtime="20201030 15:56:38.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:38.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:38.238" endtime="20201030 15:56:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.234" endtime="20201030 15:56:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.173" endtime="20201030 15:56:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.172" endtime="20201030 15:56:38.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.243" endtime="20201030 15:56:38.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.169" endtime="20201030 15:56:38.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.166" endtime="20201030 15:56:38.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:35.134" endtime="20201030 15:56:38.249"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.267" endtime="20201030 15:56:38.283"></status>
</kw>
<msg timestamp="20201030 15:56:38.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.263" endtime="20201030 15:56:38.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.291" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.286" endtime="20201030 15:56:38.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.295" endtime="20201030 15:56:38.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.258" endtime="20201030 15:56:38.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.254" endtime="20201030 15:56:38.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.321" endtime="20201030 15:56:38.599"></status>
</kw>
<msg timestamp="20201030 15:56:38.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116922014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116931306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.319" endtime="20201030 15:56:38.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116922014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116931306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:38.602" endtime="20201030 15:56:38.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.607" endtime="20201030 15:56:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.311" endtime="20201030 15:56:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.305" endtime="20201030 15:56:38.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.613" level="INFO">${RESULT} = [{'diff': 9.292000000105105e-06}, {'diff': 9.055999999674214e-06}, {'diff': 1.0791999999870683e-05}, {'diff': 7.042000000012649e-06}, {'diff': 5.9580000000281075e-06}, {'diff': 7.221999999806883e-06},...</msg>
<status status="PASS" starttime="20201030 15:56:38.611" endtime="20201030 15:56:38.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:38.617" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.292000000105105e-06, 9.055999999674214e-06, 1.0791999999870683e-05, 7.042000000012649e-06, 5.9580000000281075e-06, 7.221999999806883e-06, 5.319000000003626e-06, 1.1333999999862954e-05, 8.2...</msg>
<status status="PASS" starttime="20201030 15:56:38.614" endtime="20201030 15:56:38.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:38.620" endtime="20201030 15:56:38.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.623" level="INFO">VALUE: [9.292000000105105e-06, 9.055999999674214e-06, 1.0791999999870683e-05, 7.042000000012649e-06, 5.9580000000281075e-06, 7.221999999806883e-06, 5.319000000003626e-06, 1.1333999999862954e-05, 8.291000000326676e-06, 9.304999999848462e-06, 7.388999999857759e-06, 1.0305999999626891e-05, 1.0430000000116735e-05, 7.92999999976729e-06, 6.721999999736994e-06, 7.5970000001923665e-06, 8.499999999855845e-06, 7.819999999991722e-06, 8.166999999836833e-06, 5.305000000177529e-06, 9.153000000150513e-06, 8.292000000409416e-06, 1.080500000005813e-05, 9.750000000252612e-06, 8.77799999976503e-06]</msg>
<status status="PASS" starttime="20201030 15:56:38.622" endtime="20201030 15:56:38.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.618" endtime="20201030 15:56:38.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.628" endtime="20201030 15:56:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.626" endtime="20201030 15:56:38.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.625" endtime="20201030 15:56:38.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.252" endtime="20201030 15:56:38.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.251" endtime="20201030 15:56:38.649"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.657" endtime="20201030 15:56:38.668"></status>
</kw>
<msg timestamp="20201030 15:56:38.669" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.655" endtime="20201030 15:56:38.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.671" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:38.670" endtime="20201030 15:56:38.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.672" endtime="20201030 15:56:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.652" endtime="20201030 15:56:38.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.651" endtime="20201030 15:56:38.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.681" endtime="20201030 15:56:38.951"></status>
</kw>
<msg timestamp="20201030 15:56:38.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:38.680" endtime="20201030 15:56:38.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:38.955" endtime="20201030 15:56:38.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:38.961" endtime="20201030 15:56:38.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.677" endtime="20201030 15:56:38.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.675" endtime="20201030 15:56:38.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:38.970" level="INFO">${RESULT} = [{'diff': 8.985999999999023e-06}, {'diff': 8.901999999998134e-06}, {'diff': 9.320000000000161e-06}, {'diff': 7.389000000000007e-06}, {'diff': 7.805999999999091e-06}, {'diff': 9.237000000002216e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:56:38.966" endtime="20201030 15:56:38.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:38.975" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.985999999999023e-06, 8.901999999998134e-06, 9.320000000000161e-06, 7.389000000000007e-06, 7.805999999999091e-06, 9.237000000002216e-06, 1.0388999999999537e-05, 8.431000000003186e-06, 5.068...</msg>
<status status="PASS" starttime="20201030 15:56:38.971" endtime="20201030 15:56:38.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:38.979" endtime="20201030 15:56:38.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:38.985" level="INFO">VALUE: [8.985999999999023e-06, 8.901999999998134e-06, 9.320000000000161e-06, 7.389000000000007e-06, 7.805999999999091e-06, 9.237000000002216e-06, 1.0388999999999537e-05, 8.431000000003186e-06, 5.068999999999907e-06, 1.1430999999999247e-05, 8.874999999998467e-06, 6.693999999998063e-06, 8.931000000000217e-06, 9.528000000001702e-06, 1.0374999999999968e-05, 8.999999999998592e-06, 7.902000000000603e-06, 7.874999999997467e-06, 1.1110999999997678e-05, 6.472000000000422e-06, 1.0848000000000801e-05, 8.694999999999536e-06, 7.916999999999647e-06, 7.097000000001047e-06, 9.958000000000883e-06]</msg>
<status status="PASS" starttime="20201030 15:56:38.982" endtime="20201030 15:56:38.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.976" endtime="20201030 15:56:38.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:38.989" endtime="20201030 15:56:39.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.988" endtime="20201030 15:56:39.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.987" endtime="20201030 15:56:39.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.649" endtime="20201030 15:56:39.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.649" endtime="20201030 15:56:39.010"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.019" endtime="20201030 15:56:39.031"></status>
</kw>
<msg timestamp="20201030 15:56:39.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.016" endtime="20201030 15:56:39.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.034" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.033" endtime="20201030 15:56:39.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.035" endtime="20201030 15:56:39.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.014" endtime="20201030 15:56:39.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.012" endtime="20201030 15:56:39.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.044" endtime="20201030 15:56:39.313"></status>
</kw>
<msg timestamp="20201030 15:56:39.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018705889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.043" endtime="20201030 15:56:39.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018705889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018713292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.316" endtime="20201030 15:56:39.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.322" endtime="20201030 15:56:39.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.040" endtime="20201030 15:56:39.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.039" endtime="20201030 15:56:39.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.327" level="INFO">${RESULT} = [{'diff': 7.402999999999577e-06}, {'diff': 1.0665999999999454e-05}, {'diff': 8.153000000000327e-06}, {'diff': 9.056000000000342e-06}, {'diff': 9.097000000003047e-06}, {'diff': 8.250000000001312e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:39.325" endtime="20201030 15:56:39.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:39.331" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.402999999999577e-06, 1.0665999999999454e-05, 8.153000000000327e-06, 9.056000000000342e-06, 9.097000000003047e-06, 8.250000000001312e-06, 8.111000000001617e-06, 8.638999999997787e-06, 8.125...</msg>
<status status="PASS" starttime="20201030 15:56:39.328" endtime="20201030 15:56:39.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.335" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:39.334" endtime="20201030 15:56:39.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.338" level="INFO">VALUE: [7.402999999999577e-06, 1.0665999999999454e-05, 8.153000000000327e-06, 9.056000000000342e-06, 9.097000000003047e-06, 8.250000000001312e-06, 8.111000000001617e-06, 8.638999999997787e-06, 8.125000000001187e-06, 8.263999999997412e-06, 7.151999999999853e-06, 1.0542000000002272e-05, 7.749999999997342e-06, 7.389000000000007e-06, 5.556000000000311e-06, 6.804999999998618e-06, 8.582999999999508e-06, 6.944999999997786e-06, 1.2000000000001593e-05, 9.485999999999523e-06, 9.290999999998079e-06, 7.069000000001907e-06, 9.235999999999273e-06, 6.861000000000367e-06, 7.472000000001422e-06]</msg>
<status status="PASS" starttime="20201030 15:56:39.336" endtime="20201030 15:56:39.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.332" endtime="20201030 15:56:39.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.342" endtime="20201030 15:56:39.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.341" endtime="20201030 15:56:39.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.339" endtime="20201030 15:56:39.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.011" endtime="20201030 15:56:39.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.010" endtime="20201030 15:56:39.363"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.372" endtime="20201030 15:56:39.384"></status>
</kw>
<msg timestamp="20201030 15:56:39.384" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.369" endtime="20201030 15:56:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.385" endtime="20201030 15:56:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.388" endtime="20201030 15:56:39.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.367" endtime="20201030 15:56:39.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.365" endtime="20201030 15:56:39.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.397" endtime="20201030 15:56:39.665"></status>
</kw>
<msg timestamp="20201030 15:56:39.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018478944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018489097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.395" endtime="20201030 15:56:39.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018478944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018489097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.668" endtime="20201030 15:56:39.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.674" endtime="20201030 15:56:39.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.393" endtime="20201030 15:56:39.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.391" endtime="20201030 15:56:39.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.679" level="INFO">${RESULT} = [{'diff': 1.0152999999998857e-05}, {'diff': 7.680999999998966e-06}, {'diff': 8.096999999998578e-06}, {'diff': 8.055000000003337e-06}, {'diff': 1.0486000000000523e-05}, {'diff': 1.0485999999997053e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:39.677" endtime="20201030 15:56:39.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:39.683" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0152999999998857e-05, 7.680999999998966e-06, 8.096999999998578e-06, 8.055000000003337e-06, 1.0486000000000523e-05, 1.0485999999997053e-05, 1.0736000000000773e-05, 7.167000000002366e-06, 4....</msg>
<status status="PASS" starttime="20201030 15:56:39.680" endtime="20201030 15:56:39.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.687" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:39.686" endtime="20201030 15:56:39.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.689" level="INFO">VALUE: [1.0152999999998857e-05, 7.680999999998966e-06, 8.096999999998578e-06, 8.055000000003337e-06, 1.0486000000000523e-05, 1.0485999999997053e-05, 1.0736000000000773e-05, 7.167000000002366e-06, 4.9449999999992555e-06, 7.889000000000507e-06, 9.333000000000258e-06, 6.847000000000797e-06, 9.735999999999773e-06, 9.957999999997413e-06, 1.0777000000000009e-05, 8.750000000001812e-06, 5.667000000000866e-06, 7.583000000001977e-06, 9.694000000001063e-06, 6.2090000000000756e-06, 8.068999999999438e-06, 1.0292000000002022e-05, 1.1416999999999677e-05, 7.583999999997981e-06, 7.512999999997189e-06]</msg>
<status status="PASS" starttime="20201030 15:56:39.688" endtime="20201030 15:56:39.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.684" endtime="20201030 15:56:39.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.694" endtime="20201030 15:56:39.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.692" endtime="20201030 15:56:39.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.691" endtime="20201030 15:56:39.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.364" endtime="20201030 15:56:39.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.363" endtime="20201030 15:56:39.715"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.724" endtime="20201030 15:56:39.734"></status>
</kw>
<msg timestamp="20201030 15:56:39.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.721" endtime="20201030 15:56:39.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.739" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.738" endtime="20201030 15:56:39.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.741" endtime="20201030 15:56:39.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.718" endtime="20201030 15:56:39.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.717" endtime="20201030 15:56:39.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.755" endtime="20201030 15:56:40.024"></status>
</kw>
<msg timestamp="20201030 15:56:40.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018582639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018591222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.753" endtime="20201030 15:56:40.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018582639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018591222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.027" endtime="20201030 15:56:40.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.033" endtime="20201030 15:56:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.749" endtime="20201030 15:56:40.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.746" endtime="20201030 15:56:40.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.038" level="INFO">${RESULT} = [{'diff': 8.582999999999508e-06}, {'diff': 8.527999999997232e-06}, {'diff': 8.513999999997662e-06}, {'diff': 8.222999999998176e-06}, {'diff': 7.750000000000812e-06}, {'diff': 5.846999999999797e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:56:40.036" endtime="20201030 15:56:40.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:40.042" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.582999999999508e-06, 8.527999999997232e-06, 8.513999999997662e-06, 8.222999999998176e-06, 7.750000000000812e-06, 5.846999999999797e-06, 7.263999999999882e-06, 8.707999999999633e-06, 1.1568...</msg>
<status status="PASS" starttime="20201030 15:56:40.039" endtime="20201030 15:56:40.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.046" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:40.045" endtime="20201030 15:56:40.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.048" level="INFO">VALUE: [8.582999999999508e-06, 8.527999999997232e-06, 8.513999999997662e-06, 8.222999999998176e-06, 7.750000000000812e-06, 5.846999999999797e-06, 7.263999999999882e-06, 8.707999999999633e-06, 1.1568999999999469e-05, 7.389000000000007e-06, 9.959000000000356e-06, 7.722000000001672e-06, 8.625000000001687e-06, 7.791999999999522e-06, 7.943999999999313e-06, 7.3469999999978275e-06, 5.9579999999968825e-06, 9.485999999999523e-06, 1.0276999999999509e-05, 6.430000000001712e-06, 9.346999999999828e-06, 8.819999999999661e-06, 1.1541999999999802e-05, 7.389000000000007e-06, 7.985999999998022e-06]</msg>
<status status="PASS" starttime="20201030 15:56:40.047" endtime="20201030 15:56:40.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.042" endtime="20201030 15:56:40.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.053" endtime="20201030 15:56:40.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.051" endtime="20201030 15:56:40.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.050" endtime="20201030 15:56:40.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.715" endtime="20201030 15:56:40.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.715" endtime="20201030 15:56:40.073"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.082" endtime="20201030 15:56:40.093"></status>
</kw>
<msg timestamp="20201030 15:56:40.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.080" endtime="20201030 15:56:40.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.096" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.095" endtime="20201030 15:56:40.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.097" endtime="20201030 15:56:40.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.077" endtime="20201030 15:56:40.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.075" endtime="20201030 15:56:40.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.106" endtime="20201030 15:56:40.371"></status>
</kw>
<msg timestamp="20201030 15:56:40.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018273792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.104" endtime="20201030 15:56:40.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018273792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.374" endtime="20201030 15:56:40.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.380" endtime="20201030 15:56:40.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.102" endtime="20201030 15:56:40.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.100" endtime="20201030 15:56:40.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.385" level="INFO">${RESULT} = [{'diff': 1.0415999999999204e-05}, {'diff': 7.459000000001326e-06}, {'diff': 6.499999999999562e-06}, {'diff': 6.180999999997466e-06}, {'diff': 1.0652999999999357e-05}, {'diff': 6.709000000000576e-06},...</msg>
<status status="PASS" starttime="20201030 15:56:40.383" endtime="20201030 15:56:40.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:40.388" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0415999999999204e-05, 7.459000000001326e-06, 6.499999999999562e-06, 6.180999999997466e-06, 1.0652999999999357e-05, 6.709000000000576e-06, 9.499999999999093e-06, 9.485999999999523e-06, 6.09...</msg>
<status status="PASS" starttime="20201030 15:56:40.386" endtime="20201030 15:56:40.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.393" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:40.392" endtime="20201030 15:56:40.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.395" level="INFO">VALUE: [1.0415999999999204e-05, 7.459000000001326e-06, 6.499999999999562e-06, 6.180999999997466e-06, 1.0652999999999357e-05, 6.709000000000576e-06, 9.499999999999093e-06, 9.485999999999523e-06, 6.0979999999995205e-06, 1.0430000000002243e-05, 1.0304999999998649e-05, 1.0902999999999607e-05, 7.861000000001367e-06, 1.0361000000000398e-05, 7.679999999999493e-06, 7.986000000001492e-06, 9.055000000000868e-06, 6.722000000000672e-06, 8.388999999997537e-06, 8.110999999998147e-06, 7.2629999999969386e-06, 1.0027999999998732e-05, 1.0013999999999162e-05, 9.499999999999093e-06, 7.444000000002282e-06]</msg>
<status status="PASS" starttime="20201030 15:56:40.394" endtime="20201030 15:56:40.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.389" endtime="20201030 15:56:40.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.400" endtime="20201030 15:56:40.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.398" endtime="20201030 15:56:40.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.397" endtime="20201030 15:56:40.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.074" endtime="20201030 15:56:40.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.074" endtime="20201030 15:56:40.420"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.429" endtime="20201030 15:56:40.441"></status>
</kw>
<msg timestamp="20201030 15:56:40.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.427" endtime="20201030 15:56:40.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.444" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.443" endtime="20201030 15:56:40.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.445" endtime="20201030 15:56:40.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.424" endtime="20201030 15:56:40.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.422" endtime="20201030 15:56:40.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.454" endtime="20201030 15:56:40.723"></status>
</kw>
<msg timestamp="20201030 15:56:40.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019006792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.452" endtime="20201030 15:56:40.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019006792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.726" endtime="20201030 15:56:40.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.731" endtime="20201030 15:56:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.450" endtime="20201030 15:56:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.448" endtime="20201030 15:56:40.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:40.737" level="INFO">${RESULT} = [{'diff': 7.2219999999977025e-06}, {'diff': 9.652999999998357e-06}, {'diff': 8.459000000002326e-06}, {'diff': 7.721999999998203e-06}, {'diff': 1.0902999999999607e-05}, {'diff': 7.945000000002256e-06},...</msg>
<status status="PASS" starttime="20201030 15:56:40.734" endtime="20201030 15:56:40.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:40.740" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.2219999999977025e-06, 9.652999999998357e-06, 8.459000000002326e-06, 7.721999999998203e-06, 1.0902999999999607e-05, 7.945000000002256e-06, 7.111000000000617e-06, 7.1379999999968136e-06, 9.3...</msg>
<status status="PASS" starttime="20201030 15:56:40.738" endtime="20201030 15:56:40.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.758" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:40.756" endtime="20201030 15:56:40.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.761" level="INFO">VALUE: [7.2219999999977025e-06, 9.652999999998357e-06, 8.459000000002326e-06, 7.721999999998203e-06, 1.0902999999999607e-05, 7.945000000002256e-06, 7.111000000000617e-06, 7.1379999999968136e-06, 9.306000000000592e-06, 1.0305000000002118e-05, 9.527999999998232e-06, 8.221999999998703e-06, 9.097000000003047e-06, 7.972000000001922e-06, 8.222000000002172e-06, 5.944000000000782e-06, 1.2332999999999789e-05, 1.1792000000000052e-05, 5.833000000000227e-06, 9.403000000001577e-06, 7.860999999997897e-06, 8.888999999998037e-06, 8.709000000002576e-06, 7.750000000000812e-06, 7.500000000000562e-06]</msg>
<status status="PASS" starttime="20201030 15:56:40.759" endtime="20201030 15:56:40.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.741" endtime="20201030 15:56:40.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:40.768" endtime="20201030 15:56:40.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.765" endtime="20201030 15:56:40.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.763" endtime="20201030 15:56:40.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.421" endtime="20201030 15:56:40.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.421" endtime="20201030 15:56:40.790"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.804" endtime="20201030 15:56:40.818"></status>
</kw>
<msg timestamp="20201030 15:56:40.818" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.799" endtime="20201030 15:56:40.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:40.822" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.820" endtime="20201030 15:56:40.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.823" endtime="20201030 15:56:40.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.796" endtime="20201030 15:56:40.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.793" endtime="20201030 15:56:40.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.836" endtime="20201030 15:56:41.106"></status>
</kw>
<msg timestamp="20201030 15:56:41.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025793375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025801542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:40.834" endtime="20201030 15:56:41.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025793375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025801542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.109" endtime="20201030 15:56:41.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.114" endtime="20201030 15:56:41.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.830" endtime="20201030 15:56:41.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.828" endtime="20201030 15:56:41.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.120" level="INFO">${RESULT} = [{'diff': 8.166999999999897e-06}, {'diff': 6.736000000000242e-06}, {'diff': 9.166000000001423e-06}, {'diff': 9.125000000002187e-06}, {'diff': 1.0750000000000343e-05}, {'diff': 6.722000000000672e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:41.117" endtime="20201030 15:56:41.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:41.123" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.166999999999897e-06, 6.736000000000242e-06, 9.166000000001423e-06, 9.125000000002187e-06, 1.0750000000000343e-05, 6.722000000000672e-06, 9.999999999999593e-06, 9.181000000000467e-06, 1.172...</msg>
<status status="PASS" starttime="20201030 15:56:41.121" endtime="20201030 15:56:41.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.128" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:41.126" endtime="20201030 15:56:41.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.130" level="INFO">VALUE: [8.166999999999897e-06, 6.736000000000242e-06, 9.166000000001423e-06, 9.125000000002187e-06, 1.0750000000000343e-05, 6.722000000000672e-06, 9.999999999999593e-06, 9.181000000000467e-06, 1.1722000000002203e-05, 8.514000000001132e-06, 1.1791000000000579e-05, 9.471999999999953e-06, 1.0860999999997428e-05, 1.0875000000000468e-05, 9.180000000000993e-06, 7.348000000000771e-06, 5.4589999999993255e-06, 7.568999999998938e-06, 8.514000000001132e-06, 1.0138999999999287e-05, 8.639000000001257e-06, 8.778000000000952e-06, 8.764000000001382e-06, 9.042000000000772e-06, 7.624999999997217e-06]</msg>
<status status="PASS" starttime="20201030 15:56:41.129" endtime="20201030 15:56:41.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.124" endtime="20201030 15:56:41.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.134" endtime="20201030 15:56:41.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.133" endtime="20201030 15:56:41.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.132" endtime="20201030 15:56:41.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.791" endtime="20201030 15:56:41.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.790" endtime="20201030 15:56:41.155"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.163" endtime="20201030 15:56:41.175"></status>
</kw>
<msg timestamp="20201030 15:56:41.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.161" endtime="20201030 15:56:41.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.177" endtime="20201030 15:56:41.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.179" endtime="20201030 15:56:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.159" endtime="20201030 15:56:41.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.157" endtime="20201030 15:56:41.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.188" endtime="20201030 15:56:41.452"></status>
</kw>
<msg timestamp="20201030 15:56:41.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018169, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:41.187" endtime="20201030 15:56:41.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018169, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:41.455" endtime="20201030 15:56:41.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.461" endtime="20201030 15:56:41.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.184" endtime="20201030 15:56:41.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.182" endtime="20201030 15:56:41.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.467" level="INFO">${RESULT} = [{'diff': 1.0138999999999287e-05}, {'diff': 8.318999999999688e-06}, {'diff': 6.763999999999382e-06}, {'diff': 7.818999999999188e-06}, {'diff': 1.0138999999999287e-05}, {'diff': 8.625000000001687e-06},...</msg>
<status status="PASS" starttime="20201030 15:56:41.464" endtime="20201030 15:56:41.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:41.470" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0138999999999287e-05, 8.318999999999688e-06, 6.763999999999382e-06, 7.818999999999188e-06, 1.0138999999999287e-05, 8.625000000001687e-06, 5.945000000000256e-06, 8.944000000000313e-06, 6.13...</msg>
<status status="PASS" starttime="20201030 15:56:41.468" endtime="20201030 15:56:41.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.474" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:41.473" endtime="20201030 15:56:41.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.477" level="INFO">VALUE: [1.0138999999999287e-05, 8.318999999999688e-06, 6.763999999999382e-06, 7.818999999999188e-06, 1.0138999999999287e-05, 8.625000000001687e-06, 5.945000000000256e-06, 8.944000000000313e-06, 6.1389999999987566e-06, 9.471999999999953e-06, 7.930999999999216e-06, 6.472000000000422e-06, 7.222000000001172e-06, 9.667000000001397e-06, 7.415999999999673e-06, 7.472000000001422e-06, 7.3469999999978275e-06, 1.0361000000000398e-05, 7.584000000001451e-06, 8.930000000000743e-06, 9.472000000003422e-06, 6.861000000000367e-06, 5.958000000000352e-06, 9.597000000000078e-06, 8.457999999999383e-06]</msg>
<status status="PASS" starttime="20201030 15:56:41.475" endtime="20201030 15:56:41.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.471" endtime="20201030 15:56:41.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.481" endtime="20201030 15:56:41.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.480" endtime="20201030 15:56:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.479" endtime="20201030 15:56:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.156" endtime="20201030 15:56:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.155" endtime="20201030 15:56:41.502"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.510" endtime="20201030 15:56:41.522"></status>
</kw>
<msg timestamp="20201030 15:56:41.522" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.508" endtime="20201030 15:56:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.525" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.523" endtime="20201030 15:56:41.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.526" endtime="20201030 15:56:41.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.505" endtime="20201030 15:56:41.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.504" endtime="20201030 15:56:41.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.534" endtime="20201030 15:56:41.801"></status>
</kw>
<msg timestamp="20201030 15:56:41.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018263042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018274125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.533" endtime="20201030 15:56:41.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018263042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018274125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.805" endtime="20201030 15:56:41.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.812" endtime="20201030 15:56:41.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.531" endtime="20201030 15:56:41.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.529" endtime="20201030 15:56:41.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:41.818" level="INFO">${RESULT} = [{'diff': 1.1082999999998538e-05}, {'diff': 1.0306000000001592e-05}, {'diff': 6.694000000001532e-06}, {'diff': 1.0374999999999968e-05}, {'diff': 9.652999999998357e-06}, {'diff': 1.1625000000001218e-05...</msg>
<status status="PASS" starttime="20201030 15:56:41.816" endtime="20201030 15:56:41.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:41.822" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1082999999998538e-05, 1.0306000000001592e-05, 6.694000000001532e-06, 1.0374999999999968e-05, 9.652999999998357e-06, 1.1625000000001218e-05, 1.0973000000000926e-05, 8.153000000000327e-06, 8...</msg>
<status status="PASS" starttime="20201030 15:56:41.819" endtime="20201030 15:56:41.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.826" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:41.825" endtime="20201030 15:56:41.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.831" level="INFO">VALUE: [1.1082999999998538e-05, 1.0306000000001592e-05, 6.694000000001532e-06, 1.0374999999999968e-05, 9.652999999998357e-06, 1.1625000000001218e-05, 1.0973000000000926e-05, 8.153000000000327e-06, 8.721999999999203e-06, 5.667000000000866e-06, 8.138999999997287e-06, 8.222000000002172e-06, 9.777999999998482e-06, 9.304999999997648e-06, 9.264000000001882e-06, 9.360999999999398e-06, 6.388999999999007e-06, 7.832999999998758e-06, 7.278000000002921e-06, 8.389000000001007e-06, 6.959000000000826e-06, 8.221999999998703e-06, 9.235999999999273e-06, 7.402999999999577e-06, 9.181000000000467e-06]</msg>
<status status="PASS" starttime="20201030 15:56:41.828" endtime="20201030 15:56:41.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.822" endtime="20201030 15:56:41.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:41.836" endtime="20201030 15:56:41.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.834" endtime="20201030 15:56:41.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.833" endtime="20201030 15:56:41.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.503" endtime="20201030 15:56:41.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.502" endtime="20201030 15:56:41.857"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.866" endtime="20201030 15:56:41.879"></status>
</kw>
<msg timestamp="20201030 15:56:41.879" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.864" endtime="20201030 15:56:41.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:41.882" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:41.880" endtime="20201030 15:56:41.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.883" endtime="20201030 15:56:41.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.861" endtime="20201030 15:56:41.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.859" endtime="20201030 15:56:41.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:41.892" endtime="20201030 15:56:42.156"></status>
</kw>
<msg timestamp="20201030 15:56:42.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:41.890" endtime="20201030 15:56:42.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.159" endtime="20201030 15:56:42.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.164" endtime="20201030 15:56:42.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.888" endtime="20201030 15:56:42.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.886" endtime="20201030 15:56:42.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.170" level="INFO">${RESULT} = [{'diff': 5.59800000000249e-06}, {'diff': 7.097000000001047e-06}, {'diff': 1.0680999999998497e-05}, {'diff': 6.9730000000003955e-06}, {'diff': 7.680000000002962e-06}, {'diff': 8.694000000000063e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:42.167" endtime="20201030 15:56:42.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:42.173" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.59800000000249e-06, 7.097000000001047e-06, 1.0680999999998497e-05, 6.9730000000003955e-06, 7.680000000002962e-06, 8.694000000000063e-06, 8.540999999997329e-06, 9.958000000000883e-06, 8.112...</msg>
<status status="PASS" starttime="20201030 15:56:42.171" endtime="20201030 15:56:42.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.177" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:42.176" endtime="20201030 15:56:42.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.180" level="INFO">VALUE: [5.59800000000249e-06, 7.097000000001047e-06, 1.0680999999998497e-05, 6.9730000000003955e-06, 7.680000000002962e-06, 8.694000000000063e-06, 8.540999999997329e-06, 9.958000000000883e-06, 8.11200000000109e-06, 8.806000000000092e-06, 1.1612000000001121e-05, 1.0777000000000009e-05, 8.457999999999383e-06, 7.750000000000812e-06, 7.680999999998966e-06, 8.846999999999328e-06, 9.791000000002048e-06, 8.542000000000272e-06, 8.860999999998898e-06, 6.3329999999972575e-06, 7.348000000000771e-06, 8.944999999999786e-06, 7.750000000000812e-06, 8.542000000000272e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201030 15:56:42.179" endtime="20201030 15:56:42.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.174" endtime="20201030 15:56:42.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.184" endtime="20201030 15:56:42.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.183" endtime="20201030 15:56:42.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.182" endtime="20201030 15:56:42.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.858" endtime="20201030 15:56:42.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:41.857" endtime="20201030 15:56:42.205"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.214" endtime="20201030 15:56:42.227"></status>
</kw>
<msg timestamp="20201030 15:56:42.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.212" endtime="20201030 15:56:42.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.229" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.228" endtime="20201030 15:56:42.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.230" endtime="20201030 15:56:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.209" endtime="20201030 15:56:42.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.208" endtime="20201030 15:56:42.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.239" endtime="20201030 15:56:42.507"></status>
</kw>
<msg timestamp="20201030 15:56:42.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018732194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018744292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.238" endtime="20201030 15:56:42.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018732194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018744292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.510" endtime="20201030 15:56:42.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.515" endtime="20201030 15:56:42.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.235" endtime="20201030 15:56:42.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.234" endtime="20201030 15:56:42.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.521" level="INFO">${RESULT} = [{'diff': 1.2097999999998582e-05}, {'diff': 8.097000000002047e-06}, {'diff': 6.958000000001352e-06}, {'diff': 9.068999999996968e-06}, {'diff': 7.861000000001367e-06}, {'diff': 7.000000000000062e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:42.518" endtime="20201030 15:56:42.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:42.524" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2097999999998582e-05, 8.097000000002047e-06, 6.958000000001352e-06, 9.068999999996968e-06, 7.861000000001367e-06, 7.000000000000062e-06, 5.721999999999672e-06, 1.0846999999997858e-05, 1.02...</msg>
<status status="PASS" starttime="20201030 15:56:42.522" endtime="20201030 15:56:42.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.528" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:42.527" endtime="20201030 15:56:42.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.531" level="INFO">VALUE: [1.2097999999998582e-05, 8.097000000002047e-06, 6.958000000001352e-06, 9.068999999996968e-06, 7.861000000001367e-06, 7.000000000000062e-06, 5.721999999999672e-06, 1.0846999999997858e-05, 1.0249999999999843e-05, 8.347000000002297e-06, 8.819000000000188e-06, 6.694000000001532e-06, 8.596999999999078e-06, 8.999999999998592e-06, 9.722000000000203e-06, 9.000000000002062e-06, 8.221999999998703e-06, 8.638999999997787e-06, 8.417000000000147e-06, 8.582999999999508e-06, 6.9029999999990765e-06, 1.2207999999999664e-05, 7.514000000000132e-06, 8.889000000001507e-06, 7.847000000001797e-06]</msg>
<status status="PASS" starttime="20201030 15:56:42.529" endtime="20201030 15:56:42.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.525" endtime="20201030 15:56:42.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.535" endtime="20201030 15:56:42.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.534" endtime="20201030 15:56:42.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.533" endtime="20201030 15:56:42.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.206" endtime="20201030 15:56:42.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.206" endtime="20201030 15:56:42.556"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.564" endtime="20201030 15:56:42.576"></status>
</kw>
<msg timestamp="20201030 15:56:42.576" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.562" endtime="20201030 15:56:42.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.579" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.577" endtime="20201030 15:56:42.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.580" endtime="20201030 15:56:42.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.560" endtime="20201030 15:56:42.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.558" endtime="20201030 15:56:42.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.588" endtime="20201030 15:56:42.855"></status>
</kw>
<msg timestamp="20201030 15:56:42.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018232625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018242319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.587" endtime="20201030 15:56:42.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018232625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018242319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:42.858" endtime="20201030 15:56:42.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.864" endtime="20201030 15:56:42.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.584" endtime="20201030 15:56:42.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.583" endtime="20201030 15:56:42.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:42.870" level="INFO">${RESULT} = [{'diff': 9.694000000001063e-06}, {'diff': 9.652999999998357e-06}, {'diff': 1.0486000000000523e-05}, {'diff': 7.361000000000867e-06}, {'diff': 7.319999999998161e-06}, {'diff': 9.124999999998717e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:42.867" endtime="20201030 15:56:42.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:42.873" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.694000000001063e-06, 9.652999999998357e-06, 1.0486000000000523e-05, 7.361000000000867e-06, 7.319999999998161e-06, 9.124999999998717e-06, 9.944000000001313e-06, 1.0804999999999149e-05, 1.09...</msg>
<status status="PASS" starttime="20201030 15:56:42.871" endtime="20201030 15:56:42.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.878" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:42.877" endtime="20201030 15:56:42.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.881" level="INFO">VALUE: [9.694000000001063e-06, 9.652999999998357e-06, 1.0486000000000523e-05, 7.361000000000867e-06, 7.319999999998161e-06, 9.124999999998717e-06, 9.944000000001313e-06, 1.0804999999999149e-05, 1.0902999999999607e-05, 7.999999999997592e-06, 6.513999999999132e-06, 8.347000000002297e-06, 7.000000000000062e-06, 7.514000000000132e-06, 1.0486000000000523e-05, 1.0749999999996873e-05, 6.930000000002212e-06, 1.1736000000001773e-05, 9.374999999998967e-06, 6.861000000000367e-06, 1.0262999999999939e-05, 8.236000000001742e-06, 1.0012999999999689e-05, 6.9719999999974525e-06, 6.8329999999977575e-06]</msg>
<status status="PASS" starttime="20201030 15:56:42.879" endtime="20201030 15:56:42.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.874" endtime="20201030 15:56:42.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:42.885" endtime="20201030 15:56:42.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.883" endtime="20201030 15:56:42.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.882" endtime="20201030 15:56:42.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.557" endtime="20201030 15:56:42.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.556" endtime="20201030 15:56:42.906"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.914" endtime="20201030 15:56:42.924"></status>
</kw>
<msg timestamp="20201030 15:56:42.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.912" endtime="20201030 15:56:42.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:42.927" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:42.926" endtime="20201030 15:56:42.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.928" endtime="20201030 15:56:42.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.909" endtime="20201030 15:56:42.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.908" endtime="20201030 15:56:42.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:42.937" endtime="20201030 15:56:43.206"></status>
</kw>
<msg timestamp="20201030 15:56:43.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:42.936" endtime="20201030 15:56:43.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0183335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342153, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:43.209" endtime="20201030 15:56:43.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.214" endtime="20201030 15:56:43.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.933" endtime="20201030 15:56:43.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.932" endtime="20201030 15:56:43.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.220" level="INFO">${RESULT} = [{'diff': 8.653000000000827e-06}, {'diff': 9.388999999998537e-06}, {'diff': 1.1917000000000177e-05}, {'diff': 5.139000000001226e-06}, {'diff': 8.694999999999536e-06}, {'diff': 9.666999999997927e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:43.217" endtime="20201030 15:56:43.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:43.223" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.653000000000827e-06, 9.388999999998537e-06, 1.1917000000000177e-05, 5.139000000001226e-06, 8.694999999999536e-06, 9.666999999997927e-06, 8.875000000001937e-06, 9.638999999998787e-06, 9.805...</msg>
<status status="PASS" starttime="20201030 15:56:43.221" endtime="20201030 15:56:43.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.227" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:43.226" endtime="20201030 15:56:43.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.229" level="INFO">VALUE: [8.653000000000827e-06, 9.388999999998537e-06, 1.1917000000000177e-05, 5.139000000001226e-06, 8.694999999999536e-06, 9.666999999997927e-06, 8.875000000001937e-06, 9.638999999998787e-06, 9.805000000001618e-06, 8.528000000000702e-06, 9.888999999999037e-06, 6.444000000001282e-06, 1.1444000000002813e-05, 1.1250000000000843e-05, 7.402999999999577e-06, 6.374999999999437e-06, 1.0096999999997108e-05, 7.611000000001117e-06, 6.485999999999992e-06, 9.125000000002187e-06, 1.1430999999999247e-05, 5.721999999999672e-06, 9.902000000002603e-06, 8.999999999998592e-06, 1.0861000000000898e-05]</msg>
<status status="PASS" starttime="20201030 15:56:43.228" endtime="20201030 15:56:43.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.224" endtime="20201030 15:56:43.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.234" endtime="20201030 15:56:43.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.233" endtime="20201030 15:56:43.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.232" endtime="20201030 15:56:43.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.907" endtime="20201030 15:56:43.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:42.906" endtime="20201030 15:56:43.255"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.264" endtime="20201030 15:56:43.275"></status>
</kw>
<msg timestamp="20201030 15:56:43.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.261" endtime="20201030 15:56:43.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.278" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.277" endtime="20201030 15:56:43.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.279" endtime="20201030 15:56:43.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.259" endtime="20201030 15:56:43.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.257" endtime="20201030 15:56:43.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.288" endtime="20201030 15:56:43.554"></status>
</kw>
<msg timestamp="20201030 15:56:43.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018322778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.287" endtime="20201030 15:56:43.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018322778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.557" endtime="20201030 15:56:43.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.562" endtime="20201030 15:56:43.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.284" endtime="20201030 15:56:43.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.282" endtime="20201030 15:56:43.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.568" level="INFO">${RESULT} = [{'diff': 7.334000000001201e-06}, {'diff': 7.347000000001297e-06}, {'diff': 8.806000000000092e-06}, {'diff': 7.554999999999368e-06}, {'diff': 6.694999999997536e-06}, {'diff': 7.263999999999882e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:56:43.565" endtime="20201030 15:56:43.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:43.571" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.334000000001201e-06, 7.347000000001297e-06, 8.806000000000092e-06, 7.554999999999368e-06, 6.694999999997536e-06, 7.263999999999882e-06, 7.389000000000007e-06, 6.249999999999312e-06, 1.0625...</msg>
<status status="PASS" starttime="20201030 15:56:43.569" endtime="20201030 15:56:43.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.575" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:43.574" endtime="20201030 15:56:43.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.578" level="INFO">VALUE: [7.334000000001201e-06, 7.347000000001297e-06, 8.806000000000092e-06, 7.554999999999368e-06, 6.694999999997536e-06, 7.263999999999882e-06, 7.389000000000007e-06, 6.249999999999312e-06, 1.0625000000000218e-05, 1.0208000000001133e-05, 6.097000000000047e-06, 7.527999999999702e-06, 8.749999999998342e-06, 7.2230000000006456e-06, 5.9729999999993955e-06, 1.0014000000002632e-05, 9.528000000001702e-06, 7.347999999997301e-06, 7.514000000000132e-06, 1.0138999999999287e-05, 6.500000000003031e-06, 1.0152999999998857e-05, 5.792000000000991e-06, 8.08400000000195e-06, 7.042000000002241e-06]</msg>
<status status="PASS" starttime="20201030 15:56:43.576" endtime="20201030 15:56:43.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.572" endtime="20201030 15:56:43.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.583" endtime="20201030 15:56:43.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.581" endtime="20201030 15:56:43.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.580" endtime="20201030 15:56:43.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.256" endtime="20201030 15:56:43.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.256" endtime="20201030 15:56:43.603"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.612" endtime="20201030 15:56:43.623"></status>
</kw>
<msg timestamp="20201030 15:56:43.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.609" endtime="20201030 15:56:43.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.625" endtime="20201030 15:56:43.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.627" endtime="20201030 15:56:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.607" endtime="20201030 15:56:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.605" endtime="20201030 15:56:43.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.636" endtime="20201030 15:56:43.904"></status>
</kw>
<msg timestamp="20201030 15:56:43.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018422028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018431514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.635" endtime="20201030 15:56:43.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018422028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018431514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.907" endtime="20201030 15:56:43.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.912" endtime="20201030 15:56:43.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.632" endtime="20201030 15:56:43.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.630" endtime="20201030 15:56:43.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.918" level="INFO">${RESULT} = [{'diff': 9.485999999999523e-06}, {'diff': 6.526999999999228e-06}, {'diff': 8.236000000001742e-06}, {'diff': 1.0277999999998982e-05}, {'diff': 6.917000000002116e-06}, {'diff': 1.1568999999999469e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:43.915" endtime="20201030 15:56:43.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:43.921" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.485999999999523e-06, 6.526999999999228e-06, 8.236000000001742e-06, 1.0277999999998982e-05, 6.917000000002116e-06, 1.1568999999999469e-05, 7.153000000002796e-06, 1.0681000000001967e-05, 8.3...</msg>
<status status="PASS" starttime="20201030 15:56:43.919" endtime="20201030 15:56:43.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.925" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:43.924" endtime="20201030 15:56:43.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.928" level="INFO">VALUE: [9.485999999999523e-06, 6.526999999999228e-06, 8.236000000001742e-06, 1.0277999999998982e-05, 6.917000000002116e-06, 1.1568999999999469e-05, 7.153000000002796e-06, 1.0681000000001967e-05, 8.346999999998828e-06, 7.764000000000382e-06, 5.431000000000186e-06, 9.430000000001243e-06, 1.1319000000002688e-05, 9.361000000002867e-06, 9.430000000001243e-06, 8.458999999998856e-06, 8.804999999997148e-06, 9.818999999997718e-06, 8.443999999999813e-06, 7.333000000001727e-06, 1.0013999999999162e-05, 1.2083999999999012e-05, 5.917000000001116e-06, 6.320000000000631e-06, 1.0070000000000912e-05]</msg>
<status status="PASS" starttime="20201030 15:56:43.926" endtime="20201030 15:56:43.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.922" endtime="20201030 15:56:43.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.933" endtime="20201030 15:56:43.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.931" endtime="20201030 15:56:43.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.930" endtime="20201030 15:56:43.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.604" endtime="20201030 15:56:43.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.604" endtime="20201030 15:56:43.953"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.962" endtime="20201030 15:56:43.973"></status>
</kw>
<msg timestamp="20201030 15:56:43.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.960" endtime="20201030 15:56:43.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.976" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.975" endtime="20201030 15:56:43.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.977" endtime="20201030 15:56:43.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.957" endtime="20201030 15:56:43.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.955" endtime="20201030 15:56:43.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.986" endtime="20201030 15:56:44.253"></status>
</kw>
<msg timestamp="20201030 15:56:44.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.985" endtime="20201030 15:56:44.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018362486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018369389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.256" endtime="20201030 15:56:44.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.261" endtime="20201030 15:56:44.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.982" endtime="20201030 15:56:44.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.981" endtime="20201030 15:56:44.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.267" level="INFO">${RESULT} = [{'diff': 6.9029999999990765e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 7.625000000000687e-06}, {'diff': 1.0430999999998247e-05}, {'diff': 6.499999999999562e-06}, {'diff': 8.417000000000147e-06}...</msg>
<status status="PASS" starttime="20201030 15:56:44.264" endtime="20201030 15:56:44.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:44.270" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.9029999999990765e-06, 7.0419999999987715e-06, 7.625000000000687e-06, 1.0430999999998247e-05, 6.499999999999562e-06, 8.417000000000147e-06, 9.944000000001313e-06, 8.764000000001382e-06, 7.9...</msg>
<status status="PASS" starttime="20201030 15:56:44.268" endtime="20201030 15:56:44.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.274" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:44.273" endtime="20201030 15:56:44.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.276" level="INFO">VALUE: [6.9029999999990765e-06, 7.0419999999987715e-06, 7.625000000000687e-06, 1.0430999999998247e-05, 6.499999999999562e-06, 8.417000000000147e-06, 9.944000000001313e-06, 8.764000000001382e-06, 7.903000000000077e-06, 9.347999999999301e-06, 8.986000000002492e-06, 9.638999999998787e-06, 1.1930000000000274e-05, 1.1319000000002688e-05, 6.499999999999562e-06, 1.0361999999999871e-05, 1.0957999999998413e-05, 8.528000000000702e-06, 8.194999999999036e-06, 8.610999999998648e-06, 9.834000000000231e-06, 8.402000000001103e-06, 9.527000000002228e-06, 8.111000000001617e-06, 9.679999999998024e-06]</msg>
<status status="PASS" starttime="20201030 15:56:44.275" endtime="20201030 15:56:44.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.271" endtime="20201030 15:56:44.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.281" endtime="20201030 15:56:44.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.280" endtime="20201030 15:56:44.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.279" endtime="20201030 15:56:44.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.954" endtime="20201030 15:56:44.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.954" endtime="20201030 15:56:44.302"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.311" endtime="20201030 15:56:44.322"></status>
</kw>
<msg timestamp="20201030 15:56:44.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.308" endtime="20201030 15:56:44.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.325" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.323" endtime="20201030 15:56:44.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.326" endtime="20201030 15:56:44.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.306" endtime="20201030 15:56:44.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.304" endtime="20201030 15:56:44.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.335" endtime="20201030 15:56:44.600"></status>
</kw>
<msg timestamp="20201030 15:56:44.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018268819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018277347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.333" endtime="20201030 15:56:44.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018268819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018277347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.603" endtime="20201030 15:56:44.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.608" endtime="20201030 15:56:44.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.331" endtime="20201030 15:56:44.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.329" endtime="20201030 15:56:44.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.614" level="INFO">${RESULT} = [{'diff': 8.528000000000702e-06}, {'diff': 8.638000000001783e-06}, {'diff': 1.0736000000000773e-05}, {'diff': 1.0722000000001203e-05}, {'diff': 6.667000000001866e-06}, {'diff': 8.777000000001478e-06},...</msg>
<status status="PASS" starttime="20201030 15:56:44.612" endtime="20201030 15:56:44.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:44.617" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.528000000000702e-06, 8.638000000001783e-06, 1.0736000000000773e-05, 1.0722000000001203e-05, 6.667000000001866e-06, 8.777000000001478e-06, 1.1193999999999094e-05, 7.040999999999298e-06, 8.1...</msg>
<status status="PASS" starttime="20201030 15:56:44.615" endtime="20201030 15:56:44.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:44.620" endtime="20201030 15:56:44.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.623" level="INFO">VALUE: [8.528000000000702e-06, 8.638000000001783e-06, 1.0736000000000773e-05, 1.0722000000001203e-05, 6.667000000001866e-06, 8.777000000001478e-06, 1.1193999999999094e-05, 7.040999999999298e-06, 8.153000000000327e-06, 7.0279999999992016e-06, 7.860999999997897e-06, 5.5139999999981315e-06, 7.82000000000213e-06, 5.319000000000157e-06, 9.972000000000453e-06, 8.527999999997232e-06, 8.874999999998467e-06, 9.027999999997732e-06, 9.764000000002382e-06, 1.1084000000001482e-05, 7.556000000002311e-06, 7.513000000000658e-06, 7.639000000000257e-06, 7.333000000001727e-06, 7.222000000001172e-06]</msg>
<status status="PASS" starttime="20201030 15:56:44.622" endtime="20201030 15:56:44.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.618" endtime="20201030 15:56:44.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.628" endtime="20201030 15:56:44.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.627" endtime="20201030 15:56:44.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.625" endtime="20201030 15:56:44.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.303" endtime="20201030 15:56:44.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.302" endtime="20201030 15:56:44.649"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.658" endtime="20201030 15:56:44.669"></status>
</kw>
<msg timestamp="20201030 15:56:44.670" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.655" endtime="20201030 15:56:44.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.672" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:44.671" endtime="20201030 15:56:44.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.673" endtime="20201030 15:56:44.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.653" endtime="20201030 15:56:44.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.651" endtime="20201030 15:56:44.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.682" endtime="20201030 15:56:44.949"></status>
</kw>
<msg timestamp="20201030 15:56:44.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.681" endtime="20201030 15:56:44.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018325736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:44.952" endtime="20201030 15:56:44.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:44.958" endtime="20201030 15:56:44.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.678" endtime="20201030 15:56:44.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.676" endtime="20201030 15:56:44.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:44.963" level="INFO">${RESULT} = [{'diff': 6.110999999999617e-06}, {'diff': 1.0166000000002423e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 8.346999999998828e-06}, {'diff': 7.568999999998938e-06}, {'diff': 1.0332999999997788e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:44.961" endtime="20201030 15:56:44.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:44.966" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.110999999999617e-06, 1.0166000000002423e-05, 1.1277999999999982e-05, 8.346999999998828e-06, 7.568999999998938e-06, 1.0332999999997788e-05, 5.792000000000991e-06, 7.360999999997397e-06, 8.4...</msg>
<status status="PASS" starttime="20201030 15:56:44.964" endtime="20201030 15:56:44.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.970" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:44.969" endtime="20201030 15:56:44.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:44.973" level="INFO">VALUE: [6.110999999999617e-06, 1.0166000000002423e-05, 1.1277999999999982e-05, 8.346999999998828e-06, 7.568999999998938e-06, 1.0332999999997788e-05, 5.792000000000991e-06, 7.360999999997397e-06, 8.499999999998092e-06, 8.318999999999688e-06, 9.221999999999703e-06, 1.0598000000000551e-05, 9.306000000000592e-06, 9.167000000000897e-06, 8.472000000002422e-06, 9.069999999999911e-06, 1.0500000000000093e-05, 6.139000000002226e-06, 1.0333000000001258e-05, 8.750000000001812e-06, 9.749999999999343e-06, 7.930999999999216e-06, 6.568999999997938e-06, 1.0277999999998982e-05, 6.805999999998091e-06]</msg>
<status status="PASS" starttime="20201030 15:56:44.971" endtime="20201030 15:56:44.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.967" endtime="20201030 15:56:44.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:44.978" endtime="20201030 15:56:44.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.976" endtime="20201030 15:56:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.974" endtime="20201030 15:56:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.650" endtime="20201030 15:56:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.650" endtime="20201030 15:56:44.998"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.009" endtime="20201030 15:56:45.020"></status>
</kw>
<msg timestamp="20201030 15:56:45.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.005" endtime="20201030 15:56:45.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.022" endtime="20201030 15:56:45.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.024" endtime="20201030 15:56:45.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.002" endtime="20201030 15:56:45.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.000" endtime="20201030 15:56:45.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.033" endtime="20201030 15:56:45.300"></status>
</kw>
<msg timestamp="20201030 15:56:45.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.032" endtime="20201030 15:56:45.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:45.303" endtime="20201030 15:56:45.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.308" endtime="20201030 15:56:45.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.029" endtime="20201030 15:56:45.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.027" endtime="20201030 15:56:45.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:45.314" level="INFO">${RESULT} = [{'diff': 7.1669999999988965e-06}, {'diff': 9.999999999999593e-06}, {'diff': 7.054999999998868e-06}, {'diff': 8.165999999996953e-06}, {'diff': 8.889000000001507e-06}, {'diff': 7.874999999997467e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:56:45.312" endtime="20201030 15:56:45.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:45.317" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.1669999999988965e-06, 9.999999999999593e-06, 7.054999999998868e-06, 8.165999999996953e-06, 8.889000000001507e-06, 7.874999999997467e-06, 1.1389000000000538e-05, 1.0555999999998372e-05, 6.1...</msg>
<status status="PASS" starttime="20201030 15:56:45.315" endtime="20201030 15:56:45.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.321" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:56:45.320" endtime="20201030 15:56:45.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:45.324" level="INFO">VALUE: [7.1669999999988965e-06, 9.999999999999593e-06, 7.054999999998868e-06, 8.165999999996953e-06, 8.889000000001507e-06, 7.874999999997467e-06, 1.1389000000000538e-05, 1.0555999999998372e-05, 6.1389999999987566e-06, 7.347000000001297e-06, 1.0486999999999996e-05, 1.0847000000001328e-05, 6.972000000000922e-06, 8.653000000000827e-06, 6.069999999996911e-06, 8.930000000000743e-06, 9.194000000000563e-06, 8.166999999999897e-06, 8.458999999998856e-06, 1.0611000000000648e-05, 7.695000000002006e-06, 1.1084000000001482e-05, 8.068999999999438e-06, 1.1416000000000204e-05, 7.930999999999216e-06]</msg>
<status status="PASS" starttime="20201030 15:56:45.322" endtime="20201030 15:56:45.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.318" endtime="20201030 15:56:45.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:45.329" endtime="20201030 15:56:45.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.327" endtime="20201030 15:56:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.325" endtime="20201030 15:56:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.999" endtime="20201030 15:56:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:44.999" endtime="20201030 15:56:45.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:38.250" endtime="20201030 15:56:45.349"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:35.129" endtime="20201030 15:56:45.350" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:45.357" endtime="20201030 15:56:45.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.355" endtime="20201030 15:56:45.377"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:45.391" endtime="20201030 15:56:48.412"></status>
</kw>
<msg timestamp="20201030 15:56:48.413" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:45.389" endtime="20201030 15:56:48.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.416" endtime="20201030 15:56:48.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.425" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:48.421" endtime="20201030 15:56:48.425"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:45.387" endtime="20201030 15:56:48.427"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:45.384" endtime="20201030 15:56:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.383" endtime="20201030 15:56:48.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:48.436" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:48.434" endtime="20201030 15:56:48.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.430" endtime="20201030 15:56:48.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.382" endtime="20201030 15:56:48.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.380" endtime="20201030 15:56:48.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.440" endtime="20201030 15:56:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.379" endtime="20201030 15:56:48.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.378" endtime="20201030 15:56:48.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:45.354" endtime="20201030 15:56:48.445"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.463" endtime="20201030 15:56:48.478"></status>
</kw>
<msg timestamp="20201030 15:56:48.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.460" endtime="20201030 15:56:48.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.484" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.482" endtime="20201030 15:56:48.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.487" endtime="20201030 15:56:48.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.454" endtime="20201030 15:56:48.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.451" endtime="20201030 15:56:48.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.541" endtime="20201030 15:56:48.837"></status>
</kw>
<msg timestamp="20201030 15:56:48.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096741167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.536" endtime="20201030 15:56:48.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096741167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.842" endtime="20201030 15:56:48.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.850" endtime="20201030 15:56:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.531" endtime="20201030 15:56:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.527" endtime="20201030 15:56:48.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:48.856" level="INFO">${RESULT} = [{'diff': 9.029999996634785e-07}, {'diff': 9.169999999336653e-07}, {'diff': 9.020000000248274e-07}, {'diff': 9.439999999472093e-07}, {'diff': 8.750000000112834e-07}, {'diff': 9.300000001211117e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:48.853" endtime="20201030 15:56:48.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:48.861" level="INFO">${OVERHEAD} = {'diff': [9.029999996634785e-07, 9.169999999336653e-07, 9.020000000248274e-07, 9.439999999472093e-07, 8.750000000112834e-07, 9.300000001211117e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.1599...</msg>
<status status="PASS" starttime="20201030 15:56:48.857" endtime="20201030 15:56:48.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.865" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:48.864" endtime="20201030 15:56:48.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.867" level="INFO">VALUE: [9.029999996634785e-07, 9.169999999336653e-07, 9.020000000248274e-07, 9.439999999472093e-07, 8.750000000112834e-07, 9.300000001211117e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.15999999850925e-07, 9.029999996634785e-07, 9.029999996634785e-07, 9.030000001075678e-07, 9.170000003777545e-07, 9.029999996634785e-07, 9.029999996634785e-07, 9.030000001075678e-07, 8.88999999837381e-07, 9.030000001075678e-07, 9.579999997733069e-07, 9.030000001075678e-07, 9.169999999336653e-07, 9.170000003777545e-07, 9.029999996634785e-07, 8.61999999823837e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.020000000248274e-07, 9.170000003777545e-07, 9.030000001075678e-07, 8.330000000889015e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.169999999336653e-07, 9.030000001075678e-07, 9.029999996634785e-07, 9.160000002950142e-07, 8.750000000112834e-07, 9.309999997597629e-07, 9.029999996634785e-07, 8.750000000112834e-07, 8.890000002814702e-07, 9.15999999850925e-07, 9.030000001075678e-07, 9.030000001075678e-07, 9.169999999336653e-07, 8.330000000889015e-07, 9.030000001075678e-07, 9.030000001075678e-07]</msg>
<status status="PASS" starttime="20201030 15:56:48.866" endtime="20201030 15:56:48.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.861" endtime="20201030 15:56:48.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:48.871" endtime="20201030 15:56:48.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.870" endtime="20201030 15:56:48.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.869" endtime="20201030 15:56:48.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.448" endtime="20201030 15:56:48.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.447" endtime="20201030 15:56:48.892"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.901" endtime="20201030 15:56:48.913"></status>
</kw>
<msg timestamp="20201030 15:56:48.913" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.899" endtime="20201030 15:56:48.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:48.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:48.914" endtime="20201030 15:56:48.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.917" endtime="20201030 15:56:48.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.896" endtime="20201030 15:56:48.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.894" endtime="20201030 15:56:48.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:48.926" endtime="20201030 15:56:49.215"></status>
</kw>
<msg timestamp="20201030 15:56:49.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018609014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018609917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:48.924" endtime="20201030 15:56:49.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018609014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018609917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.219" endtime="20201030 15:56:49.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.228" endtime="20201030 15:56:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.922" endtime="20201030 15:56:49.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.920" endtime="20201030 15:56:49.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.234" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.169999999995848e-07}, {'diff': 8.749999999974056e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:49.231" endtime="20201030 15:56:49.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:49.238" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.02000...</msg>
<status status="PASS" starttime="20201030 15:56:49.235" endtime="20201030 15:56:49.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.243" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:49.241" endtime="20201030 15:56:49.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.245" level="INFO">VALUE: [9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.449999999987246e-07, 8.329999999986959e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.620000000007788e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.159999999966417e-07]</msg>
<status status="PASS" starttime="20201030 15:56:49.244" endtime="20201030 15:56:49.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.239" endtime="20201030 15:56:49.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.250" endtime="20201030 15:56:49.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.249" endtime="20201030 15:56:49.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.247" endtime="20201030 15:56:49.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.893" endtime="20201030 15:56:49.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.893" endtime="20201030 15:56:49.274"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.290" endtime="20201030 15:56:49.306"></status>
</kw>
<msg timestamp="20201030 15:56:49.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.287" endtime="20201030 15:56:49.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.313" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.310" endtime="20201030 15:56:49.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.315" endtime="20201030 15:56:49.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.281" endtime="20201030 15:56:49.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.278" endtime="20201030 15:56:49.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.337" endtime="20201030 15:56:49.632"></status>
</kw>
<msg timestamp="20201030 15:56:49.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030723694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030724597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.330" endtime="20201030 15:56:49.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030723694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030724597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.636" endtime="20201030 15:56:49.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.645" endtime="20201030 15:56:49.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.325" endtime="20201030 15:56:49.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.321" endtime="20201030 15:56:49.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:49.651" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.160000000001112e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {'diff': 8.89000000000445e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:49.648" endtime="20201030 15:56:49.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:49.657" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.030000000000149e-07, 8.609999...</msg>
<status status="PASS" starttime="20201030 15:56:49.653" endtime="20201030 15:56:49.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.661" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:49.660" endtime="20201030 15:56:49.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.663" level="INFO">VALUE: [9.030000000000149e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.030000000000149e-07, 8.609999999978357e-07, 9.170000000030543e-07, 9.030000000000149e-07, 8.610000000013052e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.57999999998821e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.879999999975019e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.169999999995848e-07]</msg>
<status status="PASS" starttime="20201030 15:56:49.662" endtime="20201030 15:56:49.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.657" endtime="20201030 15:56:49.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:49.668" endtime="20201030 15:56:49.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.666" endtime="20201030 15:56:49.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.665" endtime="20201030 15:56:49.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.275" endtime="20201030 15:56:49.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.274" endtime="20201030 15:56:49.689"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.698" endtime="20201030 15:56:49.710"></status>
</kw>
<msg timestamp="20201030 15:56:49.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.696" endtime="20201030 15:56:49.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:49.713" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:49.711" endtime="20201030 15:56:49.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.714" endtime="20201030 15:56:49.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.693" endtime="20201030 15:56:49.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.691" endtime="20201030 15:56:49.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:49.723" endtime="20201030 15:56:50.005"></status>
</kw>
<msg timestamp="20201030 15:56:50.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019151764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019152667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:49.722" endtime="20201030 15:56:50.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019151764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019152667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.010" endtime="20201030 15:56:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.019" endtime="20201030 15:56:50.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.719" endtime="20201030 15:56:50.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.717" endtime="20201030 15:56:50.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.026" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.870000000009038e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:50.023" endtime="20201030 15:56:50.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:50.031" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.870000000009038e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.0300...</msg>
<status status="PASS" starttime="20201030 15:56:50.027" endtime="20201030 15:56:50.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.035" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:50.034" endtime="20201030 15:56:50.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.038" level="INFO">VALUE: [9.030000000000149e-07, 9.870000000009038e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.43999999999251e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.169999999995848e-07, 8.749999999974056e-07, 9.309999999991547e-07, 8.89000000000445e-07, 8.750000000008751e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.43999999999251e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.470000000017353e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.170000000030543e-07, 8.610000000013052e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:50.036" endtime="20201030 15:56:50.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.032" endtime="20201030 15:56:50.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.042" endtime="20201030 15:56:50.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.041" endtime="20201030 15:56:50.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.039" endtime="20201030 15:56:50.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.690" endtime="20201030 15:56:50.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:49.689" endtime="20201030 15:56:50.063"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.072" endtime="20201030 15:56:50.083"></status>
</kw>
<msg timestamp="20201030 15:56:50.084" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.070" endtime="20201030 15:56:50.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.086" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.085" endtime="20201030 15:56:50.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.088" endtime="20201030 15:56:50.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.067" endtime="20201030 15:56:50.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.066" endtime="20201030 15:56:50.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.098" endtime="20201030 15:56:50.388"></status>
</kw>
<msg timestamp="20201030 15:56:50.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018788167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018789083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.096" endtime="20201030 15:56:50.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018788167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018789083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.392" endtime="20201030 15:56:50.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.401" endtime="20201030 15:56:50.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.094" endtime="20201030 15:56:50.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.092" endtime="20201030 15:56:50.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.408" level="INFO">${RESULT} = [{'diff': 9.160000000001112e-07}, {'diff': 8.479999999977395e-07}, {'diff': 9.170000000030543e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.030000000000149e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:50.405" endtime="20201030 15:56:50.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:50.412" level="INFO">${OVERHEAD} = {'diff': [9.160000000001112e-07, 8.479999999977395e-07, 9.170000000030543e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000...</msg>
<status status="PASS" starttime="20201030 15:56:50.409" endtime="20201030 15:56:50.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.416" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:50.415" endtime="20201030 15:56:50.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.419" level="INFO">VALUE: [9.160000000001112e-07, 8.479999999977395e-07, 9.170000000030543e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.329999999986959e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.880000000009713e-07, 8.609999999978357e-07, 8.89000000000445e-07, 9.170000000030543e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.169999999995848e-07]</msg>
<status status="PASS" starttime="20201030 15:56:50.417" endtime="20201030 15:56:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.413" endtime="20201030 15:56:50.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.424" endtime="20201030 15:56:50.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.423" endtime="20201030 15:56:50.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.422" endtime="20201030 15:56:50.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.064" endtime="20201030 15:56:50.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.064" endtime="20201030 15:56:50.446"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.454" endtime="20201030 15:56:50.466"></status>
</kw>
<msg timestamp="20201030 15:56:50.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.452" endtime="20201030 15:56:50.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.469" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.467" endtime="20201030 15:56:50.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.470" endtime="20201030 15:56:50.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.450" endtime="20201030 15:56:50.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.448" endtime="20201030 15:56:50.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.479" endtime="20201030 15:56:50.764"></status>
</kw>
<msg timestamp="20201030 15:56:50.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.478" endtime="20201030 15:56:50.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018396958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.769" endtime="20201030 15:56:50.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.777" endtime="20201030 15:56:50.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.475" endtime="20201030 15:56:50.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.473" endtime="20201030 15:56:50.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.784" level="INFO">${RESULT} = [{'diff': 9.449999999987246e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.589999999982945e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:50.781" endtime="20201030 15:56:50.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:50.789" level="INFO">${OVERHEAD} = {'diff': [9.449999999987246e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.589999999982945e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.8800...</msg>
<status status="PASS" starttime="20201030 15:56:50.785" endtime="20201030 15:56:50.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.793" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:50.792" endtime="20201030 15:56:50.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.796" level="INFO">VALUE: [9.449999999987246e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.589999999982945e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.43999999999251e-07, 9.019999999970718e-07, 9.020000000005413e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.619999999973094e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.719999999983908e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.019999999970718e-07, 8.609999999978357e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:50.794" endtime="20201030 15:56:50.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.790" endtime="20201030 15:56:50.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.801" endtime="20201030 15:56:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.799" endtime="20201030 15:56:50.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.798" endtime="20201030 15:56:50.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.447" endtime="20201030 15:56:50.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.446" endtime="20201030 15:56:50.822"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.830" endtime="20201030 15:56:50.842"></status>
</kw>
<msg timestamp="20201030 15:56:50.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.828" endtime="20201030 15:56:50.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.844" endtime="20201030 15:56:50.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.846" endtime="20201030 15:56:50.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.826" endtime="20201030 15:56:50.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.824" endtime="20201030 15:56:50.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.856" endtime="20201030 15:56:51.139"></status>
</kw>
<msg timestamp="20201030 15:56:51.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.854" endtime="20201030 15:56:51.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018336361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018337264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.144" endtime="20201030 15:56:51.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.152" endtime="20201030 15:56:51.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.851" endtime="20201030 15:56:51.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.850" endtime="20201030 15:56:51.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.160" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.299999999996811e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.879999999975019e-07}, {'diff': 8.89000000000445e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:51.157" endtime="20201030 15:56:51.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:51.164" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.879999999975019e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000...</msg>
<status status="PASS" starttime="20201030 15:56:51.161" endtime="20201030 15:56:51.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.168" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:51.167" endtime="20201030 15:56:51.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.171" level="INFO">VALUE: [9.030000000000149e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.879999999975019e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.880000000009713e-07, 9.019999999970718e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.309999999991547e-07]</msg>
<status status="PASS" starttime="20201030 15:56:51.170" endtime="20201030 15:56:51.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.165" endtime="20201030 15:56:51.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:51.176" endtime="20201030 15:56:51.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.175" endtime="20201030 15:56:51.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.173" endtime="20201030 15:56:51.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.823" endtime="20201030 15:56:51.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.822" endtime="20201030 15:56:51.197"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.205" endtime="20201030 15:56:51.217"></status>
</kw>
<msg timestamp="20201030 15:56:51.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.204" endtime="20201030 15:56:51.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.219" endtime="20201030 15:56:51.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.222" endtime="20201030 15:56:51.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.201" endtime="20201030 15:56:51.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.199" endtime="20201030 15:56:51.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.234" endtime="20201030 15:56:51.523"></status>
</kw>
<msg timestamp="20201030 15:56:51.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018533167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.232" endtime="20201030 15:56:51.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018533167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.527" endtime="20201030 15:56:51.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.536" endtime="20201030 15:56:51.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.230" endtime="20201030 15:56:51.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.228" endtime="20201030 15:56:51.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.543" level="INFO">${RESULT} = [{'diff': 9.309999999991547e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:51.539" endtime="20201030 15:56:51.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:51.547" level="INFO">${OVERHEAD} = {'diff': [9.309999999991547e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.0300...</msg>
<status status="PASS" starttime="20201030 15:56:51.544" endtime="20201030 15:56:51.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.551" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:51.550" endtime="20201030 15:56:51.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.554" level="INFO">VALUE: [9.309999999991547e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.43999999999251e-07, 8.880000000009713e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:51.552" endtime="20201030 15:56:51.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.548" endtime="20201030 15:56:51.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:51.562" endtime="20201030 15:56:51.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.560" endtime="20201030 15:56:51.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.559" endtime="20201030 15:56:51.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.198" endtime="20201030 15:56:51.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.198" endtime="20201030 15:56:51.582"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.591" endtime="20201030 15:56:51.603"></status>
</kw>
<msg timestamp="20201030 15:56:51.604" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.589" endtime="20201030 15:56:51.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.606" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.605" endtime="20201030 15:56:51.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.607" endtime="20201030 15:56:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.586" endtime="20201030 15:56:51.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.584" endtime="20201030 15:56:51.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.617" endtime="20201030 15:56:51.903"></status>
</kw>
<msg timestamp="20201030 15:56:51.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018908833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.615" endtime="20201030 15:56:51.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018907931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018908833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.908" endtime="20201030 15:56:51.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.916" endtime="20201030 15:56:51.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.612" endtime="20201030 15:56:51.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.611" endtime="20201030 15:56:51.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:51.923" level="INFO">${RESULT} = [{'diff': 9.020000000005413e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.889999999969755e-07}, {'diff': 9.449999999987246e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:51.920" endtime="20201030 15:56:51.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:51.928" level="INFO">${OVERHEAD} = {'diff': [9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.169999999995848e-07, 8.7500...</msg>
<status status="PASS" starttime="20201030 15:56:51.924" endtime="20201030 15:56:51.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.932" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:51.931" endtime="20201030 15:56:51.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.935" level="INFO">VALUE: [9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.169999999995848e-07, 8.750000000008751e-07, 8.329999999986959e-07, 9.170000000030543e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.859999999979607e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.57999999998821e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.619999999973094e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 15:56:51.933" endtime="20201030 15:56:51.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.929" endtime="20201030 15:56:51.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:51.940" endtime="20201030 15:56:51.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.938" endtime="20201030 15:56:51.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.937" endtime="20201030 15:56:51.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.583" endtime="20201030 15:56:51.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.583" endtime="20201030 15:56:51.961"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.969" endtime="20201030 15:56:51.981"></status>
</kw>
<msg timestamp="20201030 15:56:51.981" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.967" endtime="20201030 15:56:51.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:51.984" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:51.982" endtime="20201030 15:56:51.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.985" endtime="20201030 15:56:51.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.965" endtime="20201030 15:56:51.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.963" endtime="20201030 15:56:51.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:51.994" endtime="20201030 15:56:52.278"></status>
</kw>
<msg timestamp="20201030 15:56:52.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:51.992" endtime="20201030 15:56:52.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018257611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.284" endtime="20201030 15:56:52.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.296" endtime="20201030 15:56:52.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.990" endtime="20201030 15:56:52.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.988" endtime="20201030 15:56:52.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:52.310" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.299999999996811e-07}, {'diff': 8.610000000013052e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:52.304" endtime="20201030 15:56:52.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:52.317" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.299999999996811e-07, 8.610000000013052e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.1600...</msg>
<status status="PASS" starttime="20201030 15:56:52.312" endtime="20201030 15:56:52.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.325" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:52.323" endtime="20201030 15:56:52.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.329" level="INFO">VALUE: [9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.299999999996811e-07, 8.610000000013052e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.470000000017353e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.470000000017353e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.750000000008751e-07, 8.329999999986959e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.330000000021653e-07, 9.580000000022904e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.880000000009713e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.57999999998821e-07, 8.620000000007788e-07, 9.030000000000149e-07, 8.879999999975019e-07, 9.030000000000149e-07, 9.589999999982945e-07, 9.030000000000149e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:52.326" endtime="20201030 15:56:52.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.319" endtime="20201030 15:56:52.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:52.338" endtime="20201030 15:56:52.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.336" endtime="20201030 15:56:52.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.333" endtime="20201030 15:56:52.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.962" endtime="20201030 15:56:52.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:51.961" endtime="20201030 15:56:52.361"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.372" endtime="20201030 15:56:52.385"></status>
</kw>
<msg timestamp="20201030 15:56:52.386" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.369" endtime="20201030 15:56:52.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.389" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.387" endtime="20201030 15:56:52.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.391" endtime="20201030 15:56:52.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.366" endtime="20201030 15:56:52.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.363" endtime="20201030 15:56:52.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.403" endtime="20201030 15:56:52.688"></status>
</kw>
<msg timestamp="20201030 15:56:52.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02260175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:52.402" endtime="20201030 15:56:52.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02260175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:52.692" endtime="20201030 15:56:52.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.701" endtime="20201030 15:56:52.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.398" endtime="20201030 15:56:52.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.396" endtime="20201030 15:56:52.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:52.707" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.170000000030543e-07}, {'diff': 9.299999999996811e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:52.704" endtime="20201030 15:56:52.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:52.711" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.170000000030543e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.0300...</msg>
<status status="PASS" starttime="20201030 15:56:52.708" endtime="20201030 15:56:52.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.715" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:52.714" endtime="20201030 15:56:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.718" level="INFO">VALUE: [9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.170000000030543e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.18999999999126e-07, 9.43999999999251e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.170000000030543e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.020000000005413e-07]</msg>
<status status="PASS" starttime="20201030 15:56:52.716" endtime="20201030 15:56:52.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.712" endtime="20201030 15:56:52.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:52.723" endtime="20201030 15:56:52.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.722" endtime="20201030 15:56:52.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.721" endtime="20201030 15:56:52.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.361" endtime="20201030 15:56:52.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.361" endtime="20201030 15:56:52.744"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.752" endtime="20201030 15:56:52.763"></status>
</kw>
<msg timestamp="20201030 15:56:52.764" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.750" endtime="20201030 15:56:52.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.766" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.765" endtime="20201030 15:56:52.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.767" endtime="20201030 15:56:52.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.748" endtime="20201030 15:56:52.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.746" endtime="20201030 15:56:52.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.776" endtime="20201030 15:56:53.067"></status>
</kw>
<msg timestamp="20201030 15:56:53.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.774" endtime="20201030 15:56:53.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.071" endtime="20201030 15:56:53.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.079" endtime="20201030 15:56:53.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.772" endtime="20201030 15:56:53.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.770" endtime="20201030 15:56:53.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.085" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.160000000001112e-07}, {'diff': 8.329999999986959e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.750000000008751e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:53.082" endtime="20201030 15:56:53.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:53.090" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 8.329999999986959e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.29999...</msg>
<status status="PASS" starttime="20201030 15:56:53.086" endtime="20201030 15:56:53.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.094" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:53.093" endtime="20201030 15:56:53.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.097" level="INFO">VALUE: [9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 8.329999999986959e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.860000000014302e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.889999999969755e-07, 9.019999999970718e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201030 15:56:53.095" endtime="20201030 15:56:53.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.091" endtime="20201030 15:56:53.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.102" endtime="20201030 15:56:53.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.100" endtime="20201030 15:56:53.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.099" endtime="20201030 15:56:53.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.745" endtime="20201030 15:56:53.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.744" endtime="20201030 15:56:53.122"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.130" endtime="20201030 15:56:53.143"></status>
</kw>
<msg timestamp="20201030 15:56:53.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.129" endtime="20201030 15:56:53.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.144" endtime="20201030 15:56:53.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.147" endtime="20201030 15:56:53.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.126" endtime="20201030 15:56:53.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.124" endtime="20201030 15:56:53.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.156" endtime="20201030 15:56:53.446"></status>
</kw>
<msg timestamp="20201030 15:56:53.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017808806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017809708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.154" endtime="20201030 15:56:53.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017808806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017809708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.450" endtime="20201030 15:56:53.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.459" endtime="20201030 15:56:53.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.152" endtime="20201030 15:56:53.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.150" endtime="20201030 15:56:53.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.466" level="INFO">${RESULT} = [{'diff': 9.020000000005413e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.019999999970718e-07}, {'diff': 9.160000000001112e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:53.463" endtime="20201030 15:56:53.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:53.470" level="INFO">${OVERHEAD} = {'diff': [9.020000000005413e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.589999999982945e-07, 9.03000...</msg>
<status status="PASS" starttime="20201030 15:56:53.467" endtime="20201030 15:56:53.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.474" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:53.473" endtime="20201030 15:56:53.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.477" level="INFO">VALUE: [9.020000000005413e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.589999999982945e-07, 9.030000000000149e-07, 9.59000000001764e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.880000000009713e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:53.475" endtime="20201030 15:56:53.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.471" endtime="20201030 15:56:53.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.481" endtime="20201030 15:56:53.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.480" endtime="20201030 15:56:53.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.479" endtime="20201030 15:56:53.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.123" endtime="20201030 15:56:53.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.123" endtime="20201030 15:56:53.502"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.514" endtime="20201030 15:56:53.527"></status>
</kw>
<msg timestamp="20201030 15:56:53.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.512" endtime="20201030 15:56:53.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.530" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.529" endtime="20201030 15:56:53.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.531" endtime="20201030 15:56:53.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.507" endtime="20201030 15:56:53.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.504" endtime="20201030 15:56:53.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.542" endtime="20201030 15:56:53.849"></status>
</kw>
<msg timestamp="20201030 15:56:53.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.540" endtime="20201030 15:56:53.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022978333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.854" endtime="20201030 15:56:53.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.862" endtime="20201030 15:56:53.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.537" endtime="20201030 15:56:53.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.535" endtime="20201030 15:56:53.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.869" level="INFO">${RESULT} = [{'diff': 9.020000000005413e-07}, {'diff': 8.469999999982658e-07}, {'diff': 9.020000000005413e-07}, {'diff': 8.470000000017353e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:53.865" endtime="20201030 15:56:53.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:53.873" level="INFO">${OVERHEAD} = {'diff': [9.020000000005413e-07, 8.469999999982658e-07, 9.020000000005413e-07, 8.470000000017353e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.0300...</msg>
<status status="PASS" starttime="20201030 15:56:53.870" endtime="20201030 15:56:53.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.877" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:53.876" endtime="20201030 15:56:53.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.880" level="INFO">VALUE: [9.020000000005413e-07, 8.469999999982658e-07, 9.020000000005413e-07, 8.470000000017353e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.019999999970718e-07, 9.170000000030543e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.450000000021941e-07, 9.020000000005413e-07, 8.89000000000445e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.880000000009713e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:53.878" endtime="20201030 15:56:53.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.874" endtime="20201030 15:56:53.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.891" endtime="20201030 15:56:53.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.890" endtime="20201030 15:56:53.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.888" endtime="20201030 15:56:53.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.503" endtime="20201030 15:56:53.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.503" endtime="20201030 15:56:53.912"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.920" endtime="20201030 15:56:53.933"></status>
</kw>
<msg timestamp="20201030 15:56:53.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.919" endtime="20201030 15:56:53.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.936" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.934" endtime="20201030 15:56:53.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.937" endtime="20201030 15:56:53.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.916" endtime="20201030 15:56:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.914" endtime="20201030 15:56:53.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.946" endtime="20201030 15:56:54.228"></status>
</kw>
<msg timestamp="20201030 15:56:54.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01825825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:53.944" endtime="20201030 15:56:54.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01825825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018259139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:54.234" endtime="20201030 15:56:54.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.242" endtime="20201030 15:56:54.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.942" endtime="20201030 15:56:54.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.940" endtime="20201030 15:56:54.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.249" level="INFO">${RESULT} = [{'diff': 8.89000000000445e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.750000000008751e-07}, {'diff': 9.169999999995848e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:54.246" endtime="20201030 15:56:54.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:54.254" level="INFO">${OVERHEAD} = {'diff': [8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000...</msg>
<status status="PASS" starttime="20201030 15:56:54.250" endtime="20201030 15:56:54.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.259" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:54.257" endtime="20201030 15:56:54.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.261" level="INFO">VALUE: [8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.019999999970718e-07, 8.330000000021653e-07, 9.160000000001112e-07, 9.029999999965455e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.169999999995848e-07, 8.750000000008751e-07, 8.750000000008751e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.880000000009713e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.160000000001112e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201030 15:56:54.260" endtime="20201030 15:56:54.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.255" endtime="20201030 15:56:54.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:54.266" endtime="20201030 15:56:54.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.265" endtime="20201030 15:56:54.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.263" endtime="20201030 15:56:54.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.913" endtime="20201030 15:56:54.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.912" endtime="20201030 15:56:54.287"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.295" endtime="20201030 15:56:54.307"></status>
</kw>
<msg timestamp="20201030 15:56:54.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.294" endtime="20201030 15:56:54.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.309" endtime="20201030 15:56:54.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.311" endtime="20201030 15:56:54.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.291" endtime="20201030 15:56:54.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.289" endtime="20201030 15:56:54.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.320" endtime="20201030 15:56:54.602"></status>
</kw>
<msg timestamp="20201030 15:56:54.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018310458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.319" endtime="20201030 15:56:54.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018310458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.606" endtime="20201030 15:56:54.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.614" endtime="20201030 15:56:54.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.316" endtime="20201030 15:56:54.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.314" endtime="20201030 15:56:54.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.622" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.160000000001112e-07}, {'diff': 8.750000000008751e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:54.619" endtime="20201030 15:56:54.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:54.626" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.750000000008751e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.03000...</msg>
<status status="PASS" starttime="20201030 15:56:54.623" endtime="20201030 15:56:54.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.631" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:54.630" endtime="20201030 15:56:54.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.633" level="INFO">VALUE: [9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.750000000008751e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.159999999966417e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.43999999999251e-07, 9.169999999995848e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.330000000021653e-07, 8.750000000008751e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:54.632" endtime="20201030 15:56:54.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.627" endtime="20201030 15:56:54.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:54.638" endtime="20201030 15:56:54.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.637" endtime="20201030 15:56:54.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.636" endtime="20201030 15:56:54.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.288" endtime="20201030 15:56:54.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.288" endtime="20201030 15:56:54.659"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.667" endtime="20201030 15:56:54.680"></status>
</kw>
<msg timestamp="20201030 15:56:54.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.666" endtime="20201030 15:56:54.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.683" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:54.681" endtime="20201030 15:56:54.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.684" endtime="20201030 15:56:54.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.663" endtime="20201030 15:56:54.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.661" endtime="20201030 15:56:54.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.694" endtime="20201030 15:56:54.977"></status>
</kw>
<msg timestamp="20201030 15:56:54.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018303778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.692" endtime="20201030 15:56:54.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:54.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018303778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:54.981" endtime="20201030 15:56:54.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:54.989" endtime="20201030 15:56:54.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.690" endtime="20201030 15:56:54.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.688" endtime="20201030 15:56:54.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:54.996" level="INFO">${RESULT} = [{'diff': 8.89000000000445e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.169999999995848e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:54.993" endtime="20201030 15:56:54.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:55.000" level="INFO">${OVERHEAD} = {'diff': [8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.30999...</msg>
<status status="PASS" starttime="20201030 15:56:54.997" endtime="20201030 15:56:55.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:55.004" endtime="20201030 15:56:55.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.007" level="INFO">VALUE: [8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.020000000005413e-07, 8.889999999969755e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.170000000030543e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 8.750000000008751e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.580000000022904e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201030 15:56:55.006" endtime="20201030 15:56:55.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.001" endtime="20201030 15:56:55.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.015" endtime="20201030 15:56:55.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.014" endtime="20201030 15:56:55.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.013" endtime="20201030 15:56:55.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.660" endtime="20201030 15:56:55.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:54.660" endtime="20201030 15:56:55.036"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.044" endtime="20201030 15:56:55.057"></status>
</kw>
<msg timestamp="20201030 15:56:55.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.043" endtime="20201030 15:56:55.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.060" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.058" endtime="20201030 15:56:55.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.061" endtime="20201030 15:56:55.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.040" endtime="20201030 15:56:55.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.038" endtime="20201030 15:56:55.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.070" endtime="20201030 15:56:55.354"></status>
</kw>
<msg timestamp="20201030 15:56:55.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018171736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.068" endtime="20201030 15:56:55.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018170792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018171736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.359" endtime="20201030 15:56:55.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.367" endtime="20201030 15:56:55.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.066" endtime="20201030 15:56:55.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.064" endtime="20201030 15:56:55.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.374" level="INFO">${RESULT} = [{'diff': 9.43999999999251e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.160000000001112e-07}, {'diff': 8.89000000000445e-07}, {'diff': 8.89000000000445e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:55.370" endtime="20201030 15:56:55.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:55.379" level="INFO">${OVERHEAD} = {'diff': [9.43999999999251e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.03000000...</msg>
<status status="PASS" starttime="20201030 15:56:55.375" endtime="20201030 15:56:55.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.383" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:55.382" endtime="20201030 15:56:55.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.386" level="INFO">VALUE: [9.43999999999251e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.450000000021941e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.889999999969755e-07, 9.020000000005413e-07, 9.029999999965455e-07, 9.030000000000149e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201030 15:56:55.384" endtime="20201030 15:56:55.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.380" endtime="20201030 15:56:55.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.391" endtime="20201030 15:56:55.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.389" endtime="20201030 15:56:55.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.388" endtime="20201030 15:56:55.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.037" endtime="20201030 15:56:55.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.036" endtime="20201030 15:56:55.412"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.420" endtime="20201030 15:56:55.433"></status>
</kw>
<msg timestamp="20201030 15:56:55.433" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.418" endtime="20201030 15:56:55.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.434" endtime="20201030 15:56:55.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.437" endtime="20201030 15:56:55.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.415" endtime="20201030 15:56:55.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.414" endtime="20201030 15:56:55.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.446" endtime="20201030 15:56:55.726"></status>
</kw>
<msg timestamp="20201030 15:56:55.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.445" endtime="20201030 15:56:55.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018230931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.730" endtime="20201030 15:56:55.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.739" endtime="20201030 15:56:55.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.442" endtime="20201030 15:56:55.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.440" endtime="20201030 15:56:55.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:55.747" level="INFO">${RESULT} = [{'diff': 9.169999999995848e-07}, {'diff': 9.169999999995848e-07}, {'diff': 8.89000000000445e-07}, {'diff': 9.020000000005413e-07}, {'diff': 9.030000000000149e-07}, {'diff': 8.89000000000445e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:55.744" endtime="20201030 15:56:55.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:55.751" level="INFO">${OVERHEAD} = {'diff': [9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000...</msg>
<status status="PASS" starttime="20201030 15:56:55.748" endtime="20201030 15:56:55.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.755" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:55.754" endtime="20201030 15:56:55.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.758" level="INFO">VALUE: [9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.020000000005413e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 8.889999999969755e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.019999999970718e-07, 8.880000000009713e-07, 8.889999999969755e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.43999999999251e-07, 8.610000000013052e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.019999999970718e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201030 15:56:55.756" endtime="20201030 15:56:55.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.752" endtime="20201030 15:56:55.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:55.763" endtime="20201030 15:56:55.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.762" endtime="20201030 15:56:55.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.760" endtime="20201030 15:56:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.412" endtime="20201030 15:56:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.412" endtime="20201030 15:56:55.784"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.792" endtime="20201030 15:56:55.805"></status>
</kw>
<msg timestamp="20201030 15:56:55.805" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.791" endtime="20201030 15:56:55.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:55.808" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:55.806" endtime="20201030 15:56:55.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.809" endtime="20201030 15:56:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.788" endtime="20201030 15:56:55.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.786" endtime="20201030 15:56:55.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:55.819" endtime="20201030 15:56:56.102"></status>
</kw>
<msg timestamp="20201030 15:56:56.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018340083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018340986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:55.818" endtime="20201030 15:56:56.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018340083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018340986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.107" endtime="20201030 15:56:56.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.115" endtime="20201030 15:56:56.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.815" endtime="20201030 15:56:56.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.813" endtime="20201030 15:56:56.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.122" level="INFO">${RESULT} = [{'diff': 9.030000000000149e-07}, {'diff': 9.160000000001112e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {'diff': 9.030000000000149e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:56:56.119" endtime="20201030 15:56:56.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:56.126" level="INFO">${OVERHEAD} = {'diff': [9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.75000...</msg>
<status status="PASS" starttime="20201030 15:56:56.123" endtime="20201030 15:56:56.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:56:56.129" endtime="20201030 15:56:56.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.133" level="INFO">VALUE: [9.030000000000149e-07, 9.160000000001112e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.030000000000149e-07, 8.89000000000445e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.019999999970718e-07, 8.609999999978357e-07, 9.169999999995848e-07, 8.339999999981695e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.169999999995848e-07, 8.89000000000445e-07, 8.89000000000445e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.170000000030543e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.609999999978357e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.019999999970718e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.020000000005413e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.309999999991547e-07]</msg>
<status status="PASS" starttime="20201030 15:56:56.132" endtime="20201030 15:56:56.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.127" endtime="20201030 15:56:56.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.139" endtime="20201030 15:56:56.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.137" endtime="20201030 15:56:56.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.136" endtime="20201030 15:56:56.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.785" endtime="20201030 15:56:56.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:55.784" endtime="20201030 15:56:56.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:48.446" endtime="20201030 15:56:56.160"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:45.351" endtime="20201030 15:56:56.161" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:56.168" endtime="20201030 15:56:56.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.166" endtime="20201030 15:56:56.188"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.202" endtime="20201030 15:56:59.224"></status>
</kw>
<msg timestamp="20201030 15:56:59.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.200" endtime="20201030 15:56:59.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.227" endtime="20201030 15:56:59.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.237" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:59.233" endtime="20201030 15:56:59.238"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:56.197" endtime="20201030 15:56:59.239"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:56.195" endtime="20201030 15:56:59.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.193" endtime="20201030 15:56:59.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:59.249" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:59.248" endtime="20201030 15:56:59.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.243" endtime="20201030 15:56:59.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.193" endtime="20201030 15:56:59.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.192" endtime="20201030 15:56:59.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.253" endtime="20201030 15:56:59.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.191" endtime="20201030 15:56:59.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.189" endtime="20201030 15:56:59.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.165" endtime="20201030 15:56:59.259"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.280" endtime="20201030 15:56:59.304"></status>
</kw>
<msg timestamp="20201030 15:56:59.305" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.276" endtime="20201030 15:56:59.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.310" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.307" endtime="20201030 15:56:59.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.318" endtime="20201030 15:56:59.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.268" endtime="20201030 15:56:59.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.264" endtime="20201030 15:56:59.324"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.328" endtime="20201030 15:56:59.332"></status>
</kw>
<msg timestamp="20201030 15:56:59.333" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:56:59.325" endtime="20201030 15:56:59.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.341" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:56:59.339" endtime="20201030 15:56:59.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.346" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:56:59.344" endtime="20201030 15:56:59.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.334" endtime="20201030 15:56:59.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.357" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:56:59.354" endtime="20201030 15:56:59.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.360" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:56:59.359" endtime="20201030 15:56:59.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.349" endtime="20201030 15:56:59.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.367" endtime="20201030 15:56:59.660"></status>
</kw>
<msg timestamp="20201030 15:56:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103937125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.366" endtime="20201030 15:56:59.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103937125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.665" endtime="20201030 15:56:59.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.673" endtime="20201030 15:56:59.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.363" endtime="20201030 15:56:59.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.361" endtime="20201030 15:56:59.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:59.680" level="INFO">${RESULT} = [{'diff': 3.666999999651921e-06}, {'diff': 4.666999999791699e-06}, {'diff': 4.694999999887983e-06}, {'diff': 4.721999999901527e-06}, {'diff': 4.693999999805243e-06}, {'diff': 4.681000000061886e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:56:59.677" endtime="20201030 15:56:59.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:56:59.685" level="INFO">${OVERHEAD} = {'diff': [3.666999999651921e-06, 4.666999999791699e-06, 4.694999999887983e-06, 4.721999999901527e-06, 4.693999999805243e-06, 4.681000000061886e-06, 4.708999999714081e-06, 4.693999999805243e-06, 4.6799...</msg>
<status status="PASS" starttime="20201030 15:56:59.681" endtime="20201030 15:56:59.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.690" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:56:59.689" endtime="20201030 15:56:59.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.692" level="INFO">VALUE: [3.666999999651921e-06, 4.666999999791699e-06, 4.694999999887983e-06, 4.721999999901527e-06, 4.693999999805243e-06, 4.681000000061886e-06, 4.708999999714081e-06, 4.693999999805243e-06, 4.679999999979145e-06, 4.70900000015817e-06, 4.694000000249332e-06, 4.708999999714081e-06, 4.70900000015817e-06, 4.70800000007543e-06, 4.694999999887983e-06, 4.667000000235788e-06, 4.70900000015817e-06, 4.693999999805243e-06, 4.7229999999842676e-06, 4.722000000345616e-06, 4.652999999965601e-06, 4.6950000003320724e-06, 4.639000000139504e-06, 4.721999999901527e-06, 4.693999999805243e-06, 4.70800000007543e-06, 4.693999999805243e-06, 4.666999999791699e-06, 4.681000000061886e-06, 4.694999999887983e-06, 4.666999999791699e-06, 4.693999999805243e-06, 4.694999999887983e-06, 4.735999999727625e-06, 4.7499999999978115e-06, 4.7499999999978115e-06, 4.694999999887983e-06, 4.7229999999842676e-06, 4.7229999999842676e-06, 4.70900000015817e-06, 4.735999999727625e-06, 4.694000000249332e-06, 4.666999999791699e-06, 4.694999999887983e-06, 4.6389999996954145e-06, 4.6659999997089585e-06, 4.70900000015817e-06, 4.693999999805243e-06, 4.694999999887983e-06, 4.694999999887983e-06]</msg>
<status status="PASS" starttime="20201030 15:56:59.691" endtime="20201030 15:56:59.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.686" endtime="20201030 15:56:59.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.698" endtime="20201030 15:56:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.696" endtime="20201030 15:56:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.695" endtime="20201030 15:56:59.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.260" endtime="20201030 15:56:59.719"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:56.162" endtime="20201030 15:56:59.719" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.730" endtime="20201030 15:56:59.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.728" endtime="20201030 15:56:59.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.765" endtime="20201030 15:57:02.788"></status>
</kw>
<msg timestamp="20201030 15:57:02.789" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.763" endtime="20201030 15:57:02.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:02.791" endtime="20201030 15:57:02.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:02.803" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:02.797" endtime="20201030 15:57:02.804"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:59.761" endtime="20201030 15:57:02.805"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:59.758" endtime="20201030 15:57:02.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.757" endtime="20201030 15:57:02.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:02.815" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:02.813" endtime="20201030 15:57:02.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:02.809" endtime="20201030 15:57:02.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.756" endtime="20201030 15:57:02.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.755" endtime="20201030 15:57:02.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.819" endtime="20201030 15:57:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.754" endtime="20201030 15:57:02.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.752" endtime="20201030 15:57:02.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.727" endtime="20201030 15:57:02.825"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:02.843" endtime="20201030 15:57:06.878"></status>
</kw>
<msg timestamp="20201030 15:57:06.879" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201030 15:57:02.840" endtime="20201030 15:57:06.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.885" level="INFO">${RESULT} = {'cmd': 'overhead_timer set middle', 'msg': ['overhead_timer set middle\r\n', '{"cmd":"timer overhead: set middle timer","data":[{"timer count":"100"},{"sample count":"50"}/data/riotbuild/riotproject/...</msg>
<status status="PASS" starttime="20201030 15:57:06.882" endtime="20201030 15:57:06.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.893" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 15:57:06.889" endtime="20201030 15:57:06.894"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:02.834" endtime="20201030 15:57:06.895"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:02.829" endtime="20201030 15:57:06.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.905" endtime="20201030 15:57:06.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.901" endtime="20201030 15:57:06.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.899" endtime="20201030 15:57:06.929"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:02.826" endtime="20201030 15:57:06.929"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 15:56:59.722" endtime="20201030 15:57:06.931" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.946" endtime="20201030 15:57:06.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.943" endtime="20201030 15:57:06.970"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.986" endtime="20201030 15:57:13.999"></status>
</kw>
<msg timestamp="20201030 15:57:14.000" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:06.984" endtime="20201030 15:57:14.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:14.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:14.003" endtime="20201030 15:57:14.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.008" endtime="20201030 15:57:14.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.982" endtime="20201030 15:57:14.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.978" endtime="20201030 15:57:14.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.977" endtime="20201030 15:57:14.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.016" endtime="20201030 15:57:14.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.976" endtime="20201030 15:57:14.020"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:14.040" endtime="20201030 15:57:18.047"></status>
</kw>
<msg timestamp="20201030 15:57:18.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:14.036" endtime="20201030 15:57:18.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:18.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:18.051" endtime="20201030 15:57:18.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.056" endtime="20201030 15:57:18.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.031" endtime="20201030 15:57:18.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.025" endtime="20201030 15:57:18.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.022" endtime="20201030 15:57:18.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.064" endtime="20201030 15:57:18.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:14.021" endtime="20201030 15:57:18.073"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:18.093" endtime="20201030 15:57:22.102"></status>
</kw>
<msg timestamp="20201030 15:57:22.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:18.089" endtime="20201030 15:57:22.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:22.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:22.105" endtime="20201030 15:57:22.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.111" endtime="20201030 15:57:22.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.084" endtime="20201030 15:57:22.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.078" endtime="20201030 15:57:22.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.076" endtime="20201030 15:57:22.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.119" endtime="20201030 15:57:22.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:18.074" endtime="20201030 15:57:22.123"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:22.145" endtime="20201030 15:57:26.155"></status>
</kw>
<msg timestamp="20201030 15:57:26.156" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:22.142" endtime="20201030 15:57:26.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:26.161" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:26.158" endtime="20201030 15:57:26.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.163" endtime="20201030 15:57:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.134" endtime="20201030 15:57:26.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.129" endtime="20201030 15:57:26.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.125" endtime="20201030 15:57:26.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.171" endtime="20201030 15:57:26.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:22.123" endtime="20201030 15:57:26.174"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:26.194" endtime="20201030 15:57:30.204"></status>
</kw>
<msg timestamp="20201030 15:57:30.205" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:26.191" endtime="20201030 15:57:30.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:30.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:30.207" endtime="20201030 15:57:30.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.212" endtime="20201030 15:57:30.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.185" endtime="20201030 15:57:30.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.180" endtime="20201030 15:57:30.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.177" endtime="20201030 15:57:30.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.225" endtime="20201030 15:57:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:26.175" endtime="20201030 15:57:30.229"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:30.247" endtime="20201030 15:57:34.258"></status>
</kw>
<msg timestamp="20201030 15:57:34.258" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:30.244" endtime="20201030 15:57:34.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:34.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:34.261" endtime="20201030 15:57:34.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.266" endtime="20201030 15:57:34.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.239" endtime="20201030 15:57:34.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.233" endtime="20201030 15:57:34.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.231" endtime="20201030 15:57:34.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.273" endtime="20201030 15:57:34.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:30.229" endtime="20201030 15:57:34.277"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:34.296" endtime="20201030 15:57:38.305"></status>
</kw>
<msg timestamp="20201030 15:57:38.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:34.292" endtime="20201030 15:57:38.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:38.311" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:38.308" endtime="20201030 15:57:38.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.313" endtime="20201030 15:57:38.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.287" endtime="20201030 15:57:38.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.282" endtime="20201030 15:57:38.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.279" endtime="20201030 15:57:38.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.321" endtime="20201030 15:57:38.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:34.278" endtime="20201030 15:57:38.325"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:38.346" endtime="20201030 15:57:42.356"></status>
</kw>
<msg timestamp="20201030 15:57:42.357" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:38.343" endtime="20201030 15:57:42.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:42.363" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:42.360" endtime="20201030 15:57:42.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.365" endtime="20201030 15:57:42.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.335" endtime="20201030 15:57:42.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.330" endtime="20201030 15:57:42.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.327" endtime="20201030 15:57:42.371"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.373" endtime="20201030 15:57:42.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:38.325" endtime="20201030 15:57:42.377"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:42.398" endtime="20201030 15:57:46.408"></status>
</kw>
<msg timestamp="20201030 15:57:46.409" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:42.395" endtime="20201030 15:57:46.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:46.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:46.411" endtime="20201030 15:57:46.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.416" endtime="20201030 15:57:46.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.389" endtime="20201030 15:57:46.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.383" endtime="20201030 15:57:46.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.380" endtime="20201030 15:57:46.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.424" endtime="20201030 15:57:46.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:42.378" endtime="20201030 15:57:46.428"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:46.446" endtime="20201030 15:57:50.456"></status>
</kw>
<msg timestamp="20201030 15:57:50.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:46.443" endtime="20201030 15:57:50.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:50.462" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:50.459" endtime="20201030 15:57:50.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.464" endtime="20201030 15:57:50.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.438" endtime="20201030 15:57:50.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.433" endtime="20201030 15:57:50.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.430" endtime="20201030 15:57:50.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.472" endtime="20201030 15:57:50.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:46.428" endtime="20201030 15:57:50.476"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:50.500" endtime="20201030 15:57:54.510"></status>
</kw>
<msg timestamp="20201030 15:57:54.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:50.497" endtime="20201030 15:57:54.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:54.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:54.513" endtime="20201030 15:57:54.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.518" endtime="20201030 15:57:54.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.486" endtime="20201030 15:57:54.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.481" endtime="20201030 15:57:54.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.478" endtime="20201030 15:57:54.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.526" endtime="20201030 15:57:54.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:50.476" endtime="20201030 15:57:54.529"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:54.550" endtime="20201030 15:57:58.560"></status>
</kw>
<msg timestamp="20201030 15:57:58.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:54.547" endtime="20201030 15:57:58.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:58.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:58.563" endtime="20201030 15:57:58.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.568" endtime="20201030 15:57:58.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.542" endtime="20201030 15:57:58.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.534" endtime="20201030 15:57:58.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.532" endtime="20201030 15:57:58.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.576" endtime="20201030 15:57:58.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:54.530" endtime="20201030 15:57:58.580"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:58.598" endtime="20201030 15:58:02.608"></status>
</kw>
<msg timestamp="20201030 15:58:02.609" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:57:58.595" endtime="20201030 15:58:02.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:02.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:02.611" endtime="20201030 15:58:02.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.616" endtime="20201030 15:58:02.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.590" endtime="20201030 15:58:02.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.585" endtime="20201030 15:58:02.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.582" endtime="20201030 15:58:02.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.624" endtime="20201030 15:58:02.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:58.580" endtime="20201030 15:58:02.628"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:02.655" endtime="20201030 15:58:06.664"></status>
</kw>
<msg timestamp="20201030 15:58:06.664" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:02.651" endtime="20201030 15:58:06.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:06.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:06.665" endtime="20201030 15:58:06.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:06.668" endtime="20201030 15:58:06.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.646" endtime="20201030 15:58:06.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.641" endtime="20201030 15:58:06.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.630" endtime="20201030 15:58:06.671"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:06.672" endtime="20201030 15:58:06.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:02.628" endtime="20201030 15:58:06.673"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:06.682" endtime="20201030 15:58:10.694"></status>
</kw>
<msg timestamp="20201030 15:58:10.695" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:06.681" endtime="20201030 15:58:10.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:10.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:10.697" endtime="20201030 15:58:10.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:10.702" endtime="20201030 15:58:10.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:06.678" endtime="20201030 15:58:10.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:06.676" endtime="20201030 15:58:10.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:06.675" endtime="20201030 15:58:10.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:10.710" endtime="20201030 15:58:10.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:06.674" endtime="20201030 15:58:10.713"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:10.732" endtime="20201030 15:58:14.741"></status>
</kw>
<msg timestamp="20201030 15:58:14.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:10.729" endtime="20201030 15:58:14.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:14.748" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:14.745" endtime="20201030 15:58:14.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.750" endtime="20201030 15:58:14.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:10.723" endtime="20201030 15:58:14.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:10.718" endtime="20201030 15:58:14.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:10.716" endtime="20201030 15:58:14.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.758" endtime="20201030 15:58:14.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:10.714" endtime="20201030 15:58:14.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.975" endtime="20201030 15:58:14.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 15:58:14.767" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 15:58:14.764" endtime="20201030 15:58:14.768"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:06.974" endtime="20201030 15:58:14.770"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:06.971" endtime="20201030 15:58:14.771"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:06.940" endtime="20201030 15:58:14.771"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 15:57:06.934" endtime="20201030 15:58:14.773" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:58:14.787" endtime="20201030 15:58:14.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.784" endtime="20201030 15:58:14.810"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:14.823" endtime="20201030 15:58:21.836"></status>
</kw>
<msg timestamp="20201030 15:58:21.837" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:14.822" endtime="20201030 15:58:21.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:21.842" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:21.839" endtime="20201030 15:58:21.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.844" endtime="20201030 15:58:21.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.819" endtime="20201030 15:58:21.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.817" endtime="20201030 15:58:21.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.816" endtime="20201030 15:58:21.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.854" endtime="20201030 15:58:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.815" endtime="20201030 15:58:21.858"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:21.877" endtime="20201030 15:58:25.886"></status>
</kw>
<msg timestamp="20201030 15:58:25.887" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:21.873" endtime="20201030 15:58:25.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:25.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:25.889" endtime="20201030 15:58:25.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:25.894" endtime="20201030 15:58:25.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.868" endtime="20201030 15:58:25.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.863" endtime="20201030 15:58:25.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.860" endtime="20201030 15:58:25.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:25.902" endtime="20201030 15:58:25.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:21.858" endtime="20201030 15:58:25.906"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:25.926" endtime="20201030 15:58:29.934"></status>
</kw>
<msg timestamp="20201030 15:58:29.935" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:25.922" endtime="20201030 15:58:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:29.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:29.937" endtime="20201030 15:58:29.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.942" endtime="20201030 15:58:29.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:25.916" endtime="20201030 15:58:29.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:25.911" endtime="20201030 15:58:29.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:25.909" endtime="20201030 15:58:29.948"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.950" endtime="20201030 15:58:29.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:25.907" endtime="20201030 15:58:29.953"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:29.972" endtime="20201030 15:58:33.982"></status>
</kw>
<msg timestamp="20201030 15:58:33.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:29.969" endtime="20201030 15:58:33.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:33.988" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:33.985" endtime="20201030 15:58:33.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:33.990" endtime="20201030 15:58:33.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.963" endtime="20201030 15:58:33.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.959" endtime="20201030 15:58:33.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.956" endtime="20201030 15:58:33.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:33.998" endtime="20201030 15:58:34.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:29.954" endtime="20201030 15:58:34.002"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:34.022" endtime="20201030 15:58:38.032"></status>
</kw>
<msg timestamp="20201030 15:58:38.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:34.019" endtime="20201030 15:58:38.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:38.038" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:38.035" endtime="20201030 15:58:38.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:38.040" endtime="20201030 15:58:38.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.011" endtime="20201030 15:58:38.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.007" endtime="20201030 15:58:38.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.004" endtime="20201030 15:58:38.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:38.049" endtime="20201030 15:58:38.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:34.002" endtime="20201030 15:58:38.052"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:38.071" endtime="20201030 15:58:42.081"></status>
</kw>
<msg timestamp="20201030 15:58:42.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:38.068" endtime="20201030 15:58:42.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:42.087" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:42.084" endtime="20201030 15:58:42.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.089" endtime="20201030 15:58:42.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:38.062" endtime="20201030 15:58:42.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:38.057" endtime="20201030 15:58:42.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:38.055" endtime="20201030 15:58:42.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.097" endtime="20201030 15:58:42.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:38.053" endtime="20201030 15:58:42.100"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:42.119" endtime="20201030 15:58:46.128"></status>
</kw>
<msg timestamp="20201030 15:58:46.129" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:42.115" endtime="20201030 15:58:46.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:46.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:46.132" endtime="20201030 15:58:46.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:46.137" endtime="20201030 15:58:46.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.110" endtime="20201030 15:58:46.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.105" endtime="20201030 15:58:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.103" endtime="20201030 15:58:46.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:46.144" endtime="20201030 15:58:46.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:42.101" endtime="20201030 15:58:46.148"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:46.167" endtime="20201030 15:58:50.176"></status>
</kw>
<msg timestamp="20201030 15:58:50.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:46.163" endtime="20201030 15:58:50.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:50.183" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:50.180" endtime="20201030 15:58:50.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:50.185" endtime="20201030 15:58:50.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:46.158" endtime="20201030 15:58:50.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:46.153" endtime="20201030 15:58:50.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:46.150" endtime="20201030 15:58:50.191"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:50.193" endtime="20201030 15:58:50.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:46.149" endtime="20201030 15:58:50.197"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:50.218" endtime="20201030 15:58:54.227"></status>
</kw>
<msg timestamp="20201030 15:58:54.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:50.214" endtime="20201030 15:58:54.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:54.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:54.230" endtime="20201030 15:58:54.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:54.235" endtime="20201030 15:58:54.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:50.207" endtime="20201030 15:58:54.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:50.202" endtime="20201030 15:58:54.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:50.199" endtime="20201030 15:58:54.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:54.243" endtime="20201030 15:58:54.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:50.198" endtime="20201030 15:58:54.247"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:54.265" endtime="20201030 15:58:58.275"></status>
</kw>
<msg timestamp="20201030 15:58:58.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:54.262" endtime="20201030 15:58:58.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:58:58.281" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:58.278" endtime="20201030 15:58:58.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:58.283" endtime="20201030 15:58:58.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:54.257" endtime="20201030 15:58:58.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:54.252" endtime="20201030 15:58:58.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:54.249" endtime="20201030 15:58:58.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:58.291" endtime="20201030 15:58:58.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:54.248" endtime="20201030 15:58:58.295"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:58:58.314" endtime="20201030 15:59:02.324"></status>
</kw>
<msg timestamp="20201030 15:59:02.325" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:58:58.310" endtime="20201030 15:59:02.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:02.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:02.327" endtime="20201030 15:59:02.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:02.332" endtime="20201030 15:59:02.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:58.305" endtime="20201030 15:59:02.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:58.300" endtime="20201030 15:59:02.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:58.297" endtime="20201030 15:59:02.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:02.340" endtime="20201030 15:59:02.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:58.295" endtime="20201030 15:59:02.344"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:02.362" endtime="20201030 15:59:06.372"></status>
</kw>
<msg timestamp="20201030 15:59:06.373" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:02.359" endtime="20201030 15:59:06.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:06.378" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:06.375" endtime="20201030 15:59:06.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:06.380" endtime="20201030 15:59:06.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:02.354" endtime="20201030 15:59:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:02.349" endtime="20201030 15:59:06.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:02.346" endtime="20201030 15:59:06.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:06.390" endtime="20201030 15:59:06.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:02.344" endtime="20201030 15:59:06.394"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:06.412" endtime="20201030 15:59:10.422"></status>
</kw>
<msg timestamp="20201030 15:59:10.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:06.409" endtime="20201030 15:59:10.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:10.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:10.425" endtime="20201030 15:59:10.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:10.431" endtime="20201030 15:59:10.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:06.404" endtime="20201030 15:59:10.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:06.399" endtime="20201030 15:59:10.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:06.396" endtime="20201030 15:59:10.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:10.439" endtime="20201030 15:59:10.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:06.394" endtime="20201030 15:59:10.443"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:10.463" endtime="20201030 15:59:14.473"></status>
</kw>
<msg timestamp="20201030 15:59:14.474" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:10.460" endtime="20201030 15:59:14.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:14.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:14.476" endtime="20201030 15:59:14.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:14.481" endtime="20201030 15:59:14.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:10.454" endtime="20201030 15:59:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:10.448" endtime="20201030 15:59:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:10.445" endtime="20201030 15:59:14.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:14.489" endtime="20201030 15:59:14.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:10.444" endtime="20201030 15:59:14.493"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:14.511" endtime="20201030 15:59:18.521"></status>
</kw>
<msg timestamp="20201030 15:59:18.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:14.508" endtime="20201030 15:59:18.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:18.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:18.524" endtime="20201030 15:59:18.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:18.529" endtime="20201030 15:59:18.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:14.503" endtime="20201030 15:59:18.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:14.498" endtime="20201030 15:59:18.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:14.495" endtime="20201030 15:59:18.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:18.537" endtime="20201030 15:59:18.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:14.493" endtime="20201030 15:59:18.540"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:18.561" endtime="20201030 15:59:22.571"></status>
</kw>
<msg timestamp="20201030 15:59:22.572" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:18.558" endtime="20201030 15:59:22.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:22.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:22.574" endtime="20201030 15:59:22.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:22.579" endtime="20201030 15:59:22.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:18.550" endtime="20201030 15:59:22.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:18.545" endtime="20201030 15:59:22.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:18.543" endtime="20201030 15:59:22.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:22.587" endtime="20201030 15:59:22.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:18.541" endtime="20201030 15:59:22.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:58:14.814" endtime="20201030 15:59:22.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 15:59:22.597" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 15:59:22.593" endtime="20201030 15:59:22.597"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:14.813" endtime="20201030 15:59:22.599"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:14.811" endtime="20201030 15:59:22.600"></status>
</kw>
<status status="FAIL" starttime="20201030 15:58:14.781" endtime="20201030 15:59:22.601"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 15:58:14.776" endtime="20201030 15:59:22.602" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:59:22.616" endtime="20201030 15:59:22.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:22.613" endtime="20201030 15:59:22.639"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:22.661" endtime="20201030 15:59:29.673"></status>
</kw>
<msg timestamp="20201030 15:59:29.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:22.659" endtime="20201030 15:59:29.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:29.679" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:29.677" endtime="20201030 15:59:29.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:29.682" endtime="20201030 15:59:29.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:22.656" endtime="20201030 15:59:29.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:22.653" endtime="20201030 15:59:29.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:22.650" endtime="20201030 15:59:29.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:29.689" endtime="20201030 15:59:29.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:22.648" endtime="20201030 15:59:29.693"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:29.714" endtime="20201030 15:59:33.723"></status>
</kw>
<msg timestamp="20201030 15:59:33.724" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:29.710" endtime="20201030 15:59:33.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:33.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:33.726" endtime="20201030 15:59:33.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:33.731" endtime="20201030 15:59:33.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:29.703" endtime="20201030 15:59:33.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:29.698" endtime="20201030 15:59:33.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:29.695" endtime="20201030 15:59:33.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:33.740" endtime="20201030 15:59:33.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:29.694" endtime="20201030 15:59:33.744"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:33.765" endtime="20201030 15:59:37.774"></status>
</kw>
<msg timestamp="20201030 15:59:37.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:33.762" endtime="20201030 15:59:37.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:37.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:37.778" endtime="20201030 15:59:37.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:37.783" endtime="20201030 15:59:37.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:33.756" endtime="20201030 15:59:37.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:33.751" endtime="20201030 15:59:37.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:33.748" endtime="20201030 15:59:37.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:37.790" endtime="20201030 15:59:37.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:33.745" endtime="20201030 15:59:37.794"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:37.813" endtime="20201030 15:59:41.822"></status>
</kw>
<msg timestamp="20201030 15:59:41.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:37.809" endtime="20201030 15:59:41.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:41.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:41.825" endtime="20201030 15:59:41.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:41.831" endtime="20201030 15:59:41.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:37.804" endtime="20201030 15:59:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:37.799" endtime="20201030 15:59:41.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:37.796" endtime="20201030 15:59:41.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:41.838" endtime="20201030 15:59:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:37.795" endtime="20201030 15:59:41.842"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:41.861" endtime="20201030 15:59:45.867"></status>
</kw>
<msg timestamp="20201030 15:59:45.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:41.857" endtime="20201030 15:59:45.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:45.873" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:45.870" endtime="20201030 15:59:45.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:45.875" endtime="20201030 15:59:45.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:41.852" endtime="20201030 15:59:45.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:41.847" endtime="20201030 15:59:45.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:41.844" endtime="20201030 15:59:45.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:45.884" endtime="20201030 15:59:45.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:41.843" endtime="20201030 15:59:45.888"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:45.909" endtime="20201030 15:59:49.918"></status>
</kw>
<msg timestamp="20201030 15:59:49.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:45.905" endtime="20201030 15:59:49.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:49.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:49.921" endtime="20201030 15:59:49.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:49.926" endtime="20201030 15:59:49.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:45.898" endtime="20201030 15:59:49.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:45.893" endtime="20201030 15:59:49.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:45.890" endtime="20201030 15:59:49.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:49.934" endtime="20201030 15:59:49.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:45.888" endtime="20201030 15:59:49.938"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:49.956" endtime="20201030 15:59:53.966"></status>
</kw>
<msg timestamp="20201030 15:59:53.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:49.953" endtime="20201030 15:59:53.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:53.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:53.969" endtime="20201030 15:59:53.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:53.974" endtime="20201030 15:59:53.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:49.948" endtime="20201030 15:59:53.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:49.943" endtime="20201030 15:59:53.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:49.940" endtime="20201030 15:59:53.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:53.982" endtime="20201030 15:59:53.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:49.938" endtime="20201030 15:59:53.986"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:54.004" endtime="20201030 15:59:58.014"></status>
</kw>
<msg timestamp="20201030 15:59:58.015" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:54.001" endtime="20201030 15:59:58.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:59:58.020" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:58.017" endtime="20201030 15:59:58.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:58.024" endtime="20201030 15:59:58.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:53.995" endtime="20201030 15:59:58.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:53.991" endtime="20201030 15:59:58.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:53.988" endtime="20201030 15:59:58.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:58.032" endtime="20201030 15:59:58.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:53.986" endtime="20201030 15:59:58.036"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:59:58.055" endtime="20201030 16:00:02.065"></status>
</kw>
<msg timestamp="20201030 16:00:02.066" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 15:59:58.052" endtime="20201030 16:00:02.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:02.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:02.068" endtime="20201030 16:00:02.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:02.075" endtime="20201030 16:00:02.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:58.046" endtime="20201030 16:00:02.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:58.041" endtime="20201030 16:00:02.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:58.038" endtime="20201030 16:00:02.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:02.086" endtime="20201030 16:00:02.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:58.037" endtime="20201030 16:00:02.091"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:02.113" endtime="20201030 16:00:06.124"></status>
</kw>
<msg timestamp="20201030 16:00:06.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:02.110" endtime="20201030 16:00:06.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:06.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:06.127" endtime="20201030 16:00:06.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:06.132" endtime="20201030 16:00:06.135"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:02.103" endtime="20201030 16:00:06.136"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:02.097" endtime="20201030 16:00:06.137"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:02.094" endtime="20201030 16:00:06.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:06.140" endtime="20201030 16:00:06.143"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:02.092" endtime="20201030 16:00:06.143"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:06.162" endtime="20201030 16:00:10.180"></status>
</kw>
<msg timestamp="20201030 16:00:10.181" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:06.159" endtime="20201030 16:00:10.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:10.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:10.183" endtime="20201030 16:00:10.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:10.188" endtime="20201030 16:00:10.191"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:06.153" endtime="20201030 16:00:10.192"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:06.148" endtime="20201030 16:00:10.193"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:06.146" endtime="20201030 16:00:10.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:10.196" endtime="20201030 16:00:10.199"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:06.144" endtime="20201030 16:00:10.199"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:10.218" endtime="20201030 16:00:14.228"></status>
</kw>
<msg timestamp="20201030 16:00:14.229" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:10.215" endtime="20201030 16:00:14.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:14.234" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:14.231" endtime="20201030 16:00:14.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:14.236" endtime="20201030 16:00:14.239"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:10.209" endtime="20201030 16:00:14.240"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:10.204" endtime="20201030 16:00:14.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:10.202" endtime="20201030 16:00:14.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:14.244" endtime="20201030 16:00:14.247"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:10.200" endtime="20201030 16:00:14.247"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:14.268" endtime="20201030 16:00:18.278"></status>
</kw>
<msg timestamp="20201030 16:00:18.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:14.265" endtime="20201030 16:00:18.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:18.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:18.281" endtime="20201030 16:00:18.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:18.286" endtime="20201030 16:00:18.289"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:14.257" endtime="20201030 16:00:18.291"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:14.252" endtime="20201030 16:00:18.291"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:14.250" endtime="20201030 16:00:18.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:18.294" endtime="20201030 16:00:18.297"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:14.248" endtime="20201030 16:00:18.297"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:18.321" endtime="20201030 16:00:22.331"></status>
</kw>
<msg timestamp="20201030 16:00:22.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:18.318" endtime="20201030 16:00:22.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:22.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:22.334" endtime="20201030 16:00:22.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:22.339" endtime="20201030 16:00:22.342"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:18.312" endtime="20201030 16:00:22.343"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:18.302" endtime="20201030 16:00:22.344"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:18.300" endtime="20201030 16:00:22.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:22.347" endtime="20201030 16:00:22.350"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:18.298" endtime="20201030 16:00:22.350"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:22.369" endtime="20201030 16:00:26.379"></status>
</kw>
<msg timestamp="20201030 16:00:26.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:22.366" endtime="20201030 16:00:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:26.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:26.382" endtime="20201030 16:00:26.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:26.387" endtime="20201030 16:00:26.390"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:22.360" endtime="20201030 16:00:26.391"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:22.355" endtime="20201030 16:00:26.392"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:22.353" endtime="20201030 16:00:26.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:26.395" endtime="20201030 16:00:26.398"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:22.351" endtime="20201030 16:00:26.398"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:26.417" endtime="20201030 16:00:30.426"></status>
</kw>
<msg timestamp="20201030 16:00:30.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:26.414" endtime="20201030 16:00:30.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:30.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:30.430" endtime="20201030 16:00:30.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:30.435" endtime="20201030 16:00:30.438"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:26.408" endtime="20201030 16:00:30.439"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:26.403" endtime="20201030 16:00:30.440"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:26.401" endtime="20201030 16:00:30.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:30.442" endtime="20201030 16:00:30.446"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:26.399" endtime="20201030 16:00:30.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:59:22.647" endtime="20201030 16:00:30.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 16:00:30.458" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 16:00:30.454" endtime="20201030 16:00:30.458"></status>
</kw>
<status status="FAIL" starttime="20201030 15:59:22.644" endtime="20201030 16:00:30.460"></status>
</kw>
<status status="FAIL" starttime="20201030 15:59:22.641" endtime="20201030 16:00:30.461"></status>
</kw>
<status status="FAIL" starttime="20201030 15:59:22.611" endtime="20201030 16:00:30.461"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 15:59:22.605" endtime="20201030 16:00:30.463" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:00:30.480" endtime="20201030 16:00:30.500"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:30.477" endtime="20201030 16:00:30.500"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:30.513" endtime="20201030 16:00:37.526"></status>
</kw>
<msg timestamp="20201030 16:00:37.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:30.512" endtime="20201030 16:00:37.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:37.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:37.529" endtime="20201030 16:00:37.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:37.534" endtime="20201030 16:00:37.537"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:30.509" endtime="20201030 16:00:37.539"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:30.507" endtime="20201030 16:00:37.540"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:30.505" endtime="20201030 16:00:37.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:37.542" endtime="20201030 16:00:37.545"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:30.505" endtime="20201030 16:00:37.545"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:37.564" endtime="20201030 16:00:41.574"></status>
</kw>
<msg timestamp="20201030 16:00:41.575" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:37.561" endtime="20201030 16:00:41.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:41.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:41.577" endtime="20201030 16:00:41.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:41.582" endtime="20201030 16:00:41.585"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:37.555" endtime="20201030 16:00:41.586"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:37.550" endtime="20201030 16:00:41.587"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:37.548" endtime="20201030 16:00:41.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:41.590" endtime="20201030 16:00:41.593"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:37.546" endtime="20201030 16:00:41.593"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:41.615" endtime="20201030 16:00:45.624"></status>
</kw>
<msg timestamp="20201030 16:00:45.625" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:41.612" endtime="20201030 16:00:45.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:45.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:45.628" endtime="20201030 16:00:45.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:45.633" endtime="20201030 16:00:45.636"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:41.606" endtime="20201030 16:00:45.637"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:41.599" endtime="20201030 16:00:45.638"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:41.596" endtime="20201030 16:00:45.639"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:45.640" endtime="20201030 16:00:45.643"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:41.594" endtime="20201030 16:00:45.644"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:45.663" endtime="20201030 16:00:49.672"></status>
</kw>
<msg timestamp="20201030 16:00:49.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:45.659" endtime="20201030 16:00:49.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:49.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:49.675" endtime="20201030 16:00:49.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:49.680" endtime="20201030 16:00:49.684"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:45.654" endtime="20201030 16:00:49.685"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:45.649" endtime="20201030 16:00:49.686"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:45.646" endtime="20201030 16:00:49.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:49.688" endtime="20201030 16:00:49.691"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:45.645" endtime="20201030 16:00:49.692"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:49.711" endtime="20201030 16:00:53.720"></status>
</kw>
<msg timestamp="20201030 16:00:53.721" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:49.707" endtime="20201030 16:00:53.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:53.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:53.723" endtime="20201030 16:00:53.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:53.728" endtime="20201030 16:00:53.732"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:49.702" endtime="20201030 16:00:53.733"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:49.697" endtime="20201030 16:00:53.734"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:49.694" endtime="20201030 16:00:53.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:53.737" endtime="20201030 16:00:53.740"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:49.692" endtime="20201030 16:00:53.741"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:53.759" endtime="20201030 16:00:57.775"></status>
</kw>
<msg timestamp="20201030 16:00:57.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:53.756" endtime="20201030 16:00:57.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:00:57.781" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:57.778" endtime="20201030 16:00:57.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:57.783" endtime="20201030 16:00:57.786"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:53.751" endtime="20201030 16:00:57.787"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:53.746" endtime="20201030 16:00:57.788"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:53.743" endtime="20201030 16:00:57.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:57.791" endtime="20201030 16:00:57.794"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:53.741" endtime="20201030 16:00:57.794"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:00:57.813" endtime="20201030 16:01:01.822"></status>
</kw>
<msg timestamp="20201030 16:01:01.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:00:57.810" endtime="20201030 16:01:01.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:01.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:01.826" endtime="20201030 16:01:01.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:01.831" endtime="20201030 16:01:01.834"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:57.804" endtime="20201030 16:01:01.835"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:57.799" endtime="20201030 16:01:01.836"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:57.797" endtime="20201030 16:01:01.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:01.838" endtime="20201030 16:01:01.842"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:57.795" endtime="20201030 16:01:01.842"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:01.861" endtime="20201030 16:01:05.871"></status>
</kw>
<msg timestamp="20201030 16:01:05.872" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:01.858" endtime="20201030 16:01:05.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:05.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:05.874" endtime="20201030 16:01:05.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:05.880" endtime="20201030 16:01:05.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:01.852" endtime="20201030 16:01:05.884"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:01.847" endtime="20201030 16:01:05.885"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:01.844" endtime="20201030 16:01:05.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:05.887" endtime="20201030 16:01:05.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:01.843" endtime="20201030 16:01:05.891"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:05.910" endtime="20201030 16:01:09.918"></status>
</kw>
<msg timestamp="20201030 16:01:09.919" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:05.906" endtime="20201030 16:01:09.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:09.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:09.921" endtime="20201030 16:01:09.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:09.926" endtime="20201030 16:01:09.929"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:05.901" endtime="20201030 16:01:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:05.896" endtime="20201030 16:01:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:05.893" endtime="20201030 16:01:09.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:09.934" endtime="20201030 16:01:09.937"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:05.892" endtime="20201030 16:01:09.937"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:09.959" endtime="20201030 16:01:13.968"></status>
</kw>
<msg timestamp="20201030 16:01:13.969" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:09.955" endtime="20201030 16:01:13.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:13.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:13.971" endtime="20201030 16:01:13.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:13.976" endtime="20201030 16:01:13.980"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:09.947" endtime="20201030 16:01:13.981"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:09.942" endtime="20201030 16:01:13.982"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:09.940" endtime="20201030 16:01:13.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:13.984" endtime="20201030 16:01:13.987"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:09.938" endtime="20201030 16:01:13.988"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:14.006" endtime="20201030 16:01:18.016"></status>
</kw>
<msg timestamp="20201030 16:01:18.018" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:14.003" endtime="20201030 16:01:18.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:18.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:18.020" endtime="20201030 16:01:18.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:18.026" endtime="20201030 16:01:18.029"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:13.998" endtime="20201030 16:01:18.030"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:13.993" endtime="20201030 16:01:18.031"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:13.990" endtime="20201030 16:01:18.032"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:18.034" endtime="20201030 16:01:18.037"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:13.988" endtime="20201030 16:01:18.038"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:18.058" endtime="20201030 16:01:22.068"></status>
</kw>
<msg timestamp="20201030 16:01:22.069" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:18.054" endtime="20201030 16:01:22.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:22.074" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:22.071" endtime="20201030 16:01:22.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:22.077" endtime="20201030 16:01:22.080"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:18.048" endtime="20201030 16:01:22.082"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:18.043" endtime="20201030 16:01:22.083"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:18.040" endtime="20201030 16:01:22.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:22.087" endtime="20201030 16:01:22.091"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:18.038" endtime="20201030 16:01:22.092"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:22.112" endtime="20201030 16:01:26.121"></status>
</kw>
<msg timestamp="20201030 16:01:26.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:22.108" endtime="20201030 16:01:26.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:26.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:26.125" endtime="20201030 16:01:26.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:26.130" endtime="20201030 16:01:26.133"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:22.102" endtime="20201030 16:01:26.135"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:22.097" endtime="20201030 16:01:26.136"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:22.094" endtime="20201030 16:01:26.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:26.138" endtime="20201030 16:01:26.141"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:22.092" endtime="20201030 16:01:26.142"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:26.165" endtime="20201030 16:01:30.175"></status>
</kw>
<msg timestamp="20201030 16:01:30.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:26.162" endtime="20201030 16:01:30.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:30.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:30.179" endtime="20201030 16:01:30.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:30.184" endtime="20201030 16:01:30.188"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:26.153" endtime="20201030 16:01:30.189"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:26.148" endtime="20201030 16:01:30.190"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:26.144" endtime="20201030 16:01:30.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:30.192" endtime="20201030 16:01:30.196"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:26.143" endtime="20201030 16:01:30.196"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:30.216" endtime="20201030 16:01:34.225"></status>
</kw>
<msg timestamp="20201030 16:01:34.226" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:30.212" endtime="20201030 16:01:34.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:34.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:34.227" endtime="20201030 16:01:34.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:34.229" endtime="20201030 16:01:34.231"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:30.206" endtime="20201030 16:01:34.231"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:30.201" endtime="20201030 16:01:34.232"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:30.199" endtime="20201030 16:01:34.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:34.233" endtime="20201030 16:01:34.235"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:30.197" endtime="20201030 16:01:34.235"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:34.244" endtime="20201030 16:01:38.252"></status>
</kw>
<msg timestamp="20201030 16:01:38.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:34.243" endtime="20201030 16:01:38.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:38.259" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:38.256" endtime="20201030 16:01:38.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:38.261" endtime="20201030 16:01:38.264"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:34.240" endtime="20201030 16:01:38.266"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:34.238" endtime="20201030 16:01:38.267"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:34.236" endtime="20201030 16:01:38.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:38.269" endtime="20201030 16:01:38.272"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:34.235" endtime="20201030 16:01:38.273"></status>
</kw>
<status status="PASS" starttime="20201030 16:00:30.504" endtime="20201030 16:01:38.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 16:01:38.280" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 16:01:38.276" endtime="20201030 16:01:38.280"></status>
</kw>
<status status="FAIL" starttime="20201030 16:00:30.503" endtime="20201030 16:01:38.282"></status>
</kw>
<status status="FAIL" starttime="20201030 16:00:30.501" endtime="20201030 16:01:38.283"></status>
</kw>
<status status="FAIL" starttime="20201030 16:00:30.474" endtime="20201030 16:01:38.284"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 16:00:30.466" endtime="20201030 16:01:38.285" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:01:38.300" endtime="20201030 16:01:38.322"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:38.297" endtime="20201030 16:01:38.324"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:38.355" endtime="20201030 16:01:45.367"></status>
</kw>
<msg timestamp="20201030 16:01:45.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:38.351" endtime="20201030 16:01:45.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:45.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:45.372" endtime="20201030 16:01:45.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:45.382" endtime="20201030 16:01:45.387"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:38.345" endtime="20201030 16:01:45.389"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:38.340" endtime="20201030 16:01:45.390"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:38.335" endtime="20201030 16:01:45.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:45.393" endtime="20201030 16:01:45.399"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:38.333" endtime="20201030 16:01:45.399"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:45.419" endtime="20201030 16:01:49.429"></status>
</kw>
<msg timestamp="20201030 16:01:49.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:45.416" endtime="20201030 16:01:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:49.436" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:49.433" endtime="20201030 16:01:49.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:49.438" endtime="20201030 16:01:49.442"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:45.410" endtime="20201030 16:01:49.443"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:45.405" endtime="20201030 16:01:49.444"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:45.402" endtime="20201030 16:01:49.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:49.446" endtime="20201030 16:01:49.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:45.400" endtime="20201030 16:01:49.450"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:49.471" endtime="20201030 16:01:53.481"></status>
</kw>
<msg timestamp="20201030 16:01:53.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:49.467" endtime="20201030 16:01:53.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:53.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:53.484" endtime="20201030 16:01:53.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:53.489" endtime="20201030 16:01:53.493"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:49.461" endtime="20201030 16:01:53.494"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:49.455" endtime="20201030 16:01:53.495"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:49.453" endtime="20201030 16:01:53.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:53.497" endtime="20201030 16:01:53.501"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:49.451" endtime="20201030 16:01:53.501"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:53.523" endtime="20201030 16:01:57.533"></status>
</kw>
<msg timestamp="20201030 16:01:57.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:53.520" endtime="20201030 16:01:57.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:01:57.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:57.536" endtime="20201030 16:01:57.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:57.541" endtime="20201030 16:01:57.545"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:53.512" endtime="20201030 16:01:57.546"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:53.506" endtime="20201030 16:01:57.547"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:53.504" endtime="20201030 16:01:57.548"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:57.550" endtime="20201030 16:01:57.553"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:53.502" endtime="20201030 16:01:57.553"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:01:57.573" endtime="20201030 16:02:01.583"></status>
</kw>
<msg timestamp="20201030 16:02:01.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:01:57.570" endtime="20201030 16:02:01.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:01.589" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:01.586" endtime="20201030 16:02:01.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:01.592" endtime="20201030 16:02:01.595"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:57.564" endtime="20201030 16:02:01.596"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:57.559" endtime="20201030 16:02:01.597"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:57.556" endtime="20201030 16:02:01.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:01.600" endtime="20201030 16:02:01.604"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:57.554" endtime="20201030 16:02:01.604"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:01.624" endtime="20201030 16:02:05.634"></status>
</kw>
<msg timestamp="20201030 16:02:05.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:01.621" endtime="20201030 16:02:05.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:05.640" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:05.637" endtime="20201030 16:02:05.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:05.643" endtime="20201030 16:02:05.646"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:01.615" endtime="20201030 16:02:05.647"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:01.610" endtime="20201030 16:02:05.648"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:01.607" endtime="20201030 16:02:05.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:05.651" endtime="20201030 16:02:05.654"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:01.605" endtime="20201030 16:02:05.655"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:05.674" endtime="20201030 16:02:09.684"></status>
</kw>
<msg timestamp="20201030 16:02:09.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:05.671" endtime="20201030 16:02:09.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:09.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:09.688" endtime="20201030 16:02:09.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:09.693" endtime="20201030 16:02:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:05.665" endtime="20201030 16:02:09.697"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:05.660" endtime="20201030 16:02:09.698"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:05.657" endtime="20201030 16:02:09.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:09.701" endtime="20201030 16:02:09.704"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:05.655" endtime="20201030 16:02:09.705"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:09.727" endtime="20201030 16:02:13.737"></status>
</kw>
<msg timestamp="20201030 16:02:13.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:09.723" endtime="20201030 16:02:13.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:13.743" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:13.740" endtime="20201030 16:02:13.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:13.745" endtime="20201030 16:02:13.750"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:09.715" endtime="20201030 16:02:13.751"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:09.710" endtime="20201030 16:02:13.752"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:09.707" endtime="20201030 16:02:13.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:13.754" endtime="20201030 16:02:13.758"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:09.705" endtime="20201030 16:02:13.758"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:13.778" endtime="20201030 16:02:17.787"></status>
</kw>
<msg timestamp="20201030 16:02:17.788" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:13.775" endtime="20201030 16:02:17.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:17.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:17.791" endtime="20201030 16:02:17.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:17.796" endtime="20201030 16:02:17.799"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:13.769" endtime="20201030 16:02:17.801"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:13.764" endtime="20201030 16:02:17.802"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:13.761" endtime="20201030 16:02:17.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:17.804" endtime="20201030 16:02:17.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:13.759" endtime="20201030 16:02:17.808"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:17.828" endtime="20201030 16:02:21.837"></status>
</kw>
<msg timestamp="20201030 16:02:21.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:17.824" endtime="20201030 16:02:21.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:21.843" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:21.841" endtime="20201030 16:02:21.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:21.846" endtime="20201030 16:02:21.849"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:17.818" endtime="20201030 16:02:21.850"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:17.813" endtime="20201030 16:02:21.851"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:17.810" endtime="20201030 16:02:21.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:21.854" endtime="20201030 16:02:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:17.809" endtime="20201030 16:02:21.858"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:21.877" endtime="20201030 16:02:25.887"></status>
</kw>
<msg timestamp="20201030 16:02:25.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:21.874" endtime="20201030 16:02:25.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:25.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:25.891" endtime="20201030 16:02:25.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:25.897" endtime="20201030 16:02:25.902"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:21.868" endtime="20201030 16:02:25.903"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:21.863" endtime="20201030 16:02:25.904"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:21.860" endtime="20201030 16:02:25.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:25.907" endtime="20201030 16:02:25.910"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:21.859" endtime="20201030 16:02:25.911"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:25.930" endtime="20201030 16:02:29.940"></status>
</kw>
<msg timestamp="20201030 16:02:29.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:25.927" endtime="20201030 16:02:29.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:29.947" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:29.944" endtime="20201030 16:02:29.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:29.949" endtime="20201030 16:02:29.953"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:25.921" endtime="20201030 16:02:29.954"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:25.916" endtime="20201030 16:02:29.955"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:25.913" endtime="20201030 16:02:29.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:29.958" endtime="20201030 16:02:29.961"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:25.912" endtime="20201030 16:02:29.961"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:29.981" endtime="20201030 16:02:33.991"></status>
</kw>
<msg timestamp="20201030 16:02:33.992" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:29.978" endtime="20201030 16:02:33.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:33.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:33.994" endtime="20201030 16:02:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:33.999" endtime="20201030 16:02:34.003"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:29.972" endtime="20201030 16:02:34.004"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:29.967" endtime="20201030 16:02:34.005"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:29.964" endtime="20201030 16:02:34.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:34.008" endtime="20201030 16:02:34.011"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:29.962" endtime="20201030 16:02:34.012"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:34.032" endtime="20201030 16:02:38.042"></status>
</kw>
<msg timestamp="20201030 16:02:38.043" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:34.028" endtime="20201030 16:02:38.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:38.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:38.045" endtime="20201030 16:02:38.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:38.051" endtime="20201030 16:02:38.055"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:34.022" endtime="20201030 16:02:38.056"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:34.017" endtime="20201030 16:02:38.057"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:34.014" endtime="20201030 16:02:38.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:38.060" endtime="20201030 16:02:38.064"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:34.013" endtime="20201030 16:02:38.064"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:38.087" endtime="20201030 16:02:42.097"></status>
</kw>
<msg timestamp="20201030 16:02:42.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:38.084" endtime="20201030 16:02:42.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:42.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:42.100" endtime="20201030 16:02:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:42.105" endtime="20201030 16:02:42.109"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:38.075" endtime="20201030 16:02:42.110"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:38.070" endtime="20201030 16:02:42.111"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:38.067" endtime="20201030 16:02:42.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:42.114" endtime="20201030 16:02:42.117"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:38.065" endtime="20201030 16:02:42.117"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:42.138" endtime="20201030 16:02:46.147"></status>
</kw>
<msg timestamp="20201030 16:02:46.148" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:42.134" endtime="20201030 16:02:46.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:46.154" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201030 16:02:46.151" endtime="20201030 16:02:46.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:46.156" endtime="20201030 16:02:46.159"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:42.128" endtime="20201030 16:02:46.161"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:42.123" endtime="20201030 16:02:46.162"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:42.120" endtime="20201030 16:02:46.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:46.164" endtime="20201030 16:02:46.167"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:42.118" endtime="20201030 16:02:46.168"></status>
</kw>
<status status="PASS" starttime="20201030 16:01:38.332" endtime="20201030 16:02:46.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<msg timestamp="20201030 16:02:46.175" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201030 16:02:46.170" endtime="20201030 16:02:46.175"></status>
</kw>
<status status="FAIL" starttime="20201030 16:01:38.329" endtime="20201030 16:02:46.177"></status>
</kw>
<status status="FAIL" starttime="20201030 16:01:38.325" endtime="20201030 16:02:46.178"></status>
</kw>
<status status="FAIL" starttime="20201030 16:01:38.294" endtime="20201030 16:02:46.179"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="FAIL" starttime="20201030 16:01:38.289" endtime="20201030 16:02:46.180" critical="yes">Setup failed:
'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201030 15:56:27.527" endtime="20201030 16:02:46.203"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 16:02:46.293" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 16:02:46.302" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 16:02:47.415" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 16:02:46.292" endtime="20201030 16:02:47.416"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 16:02:50.419" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 16:02:47.417" endtime="20201030 16:02:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:46.291" endtime="20201030 16:02:50.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:50.426" endtime="20201030 16:02:50.666"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:50.423" endtime="20201030 16:02:50.667"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:50.679" endtime="20201030 16:02:53.701"></status>
</kw>
<msg timestamp="20201030 16:02:53.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:50.678" endtime="20201030 16:02:53.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:53.707" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:53.704" endtime="20201030 16:02:53.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:02:53.715" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:02:53.710" endtime="20201030 16:02:53.716"></status>
</kw>
<status status="FAIL" starttime="20201030 16:02:50.675" endtime="20201030 16:02:53.718"></status>
</kw>
<status status="FAIL" starttime="20201030 16:02:50.673" endtime="20201030 16:02:53.719"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:50.672" endtime="20201030 16:02:53.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:02:53.727" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:02:53.726" endtime="20201030 16:02:53.728"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.721" endtime="20201030 16:02:53.728"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:50.671" endtime="20201030 16:02:53.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:50.670" endtime="20201030 16:02:53.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:53.731" endtime="20201030 16:02:53.733"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:50.669" endtime="20201030 16:02:53.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:53.736" endtime="20201030 16:02:53.739"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:50.668" endtime="20201030 16:02:53.740"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:46.289" endtime="20201030 16:02:53.741"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:53.753" endtime="20201030 16:02:53.775"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.750" endtime="20201030 16:02:53.776"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:53.800" endtime="20201030 16:02:56.818"></status>
</kw>
<msg timestamp="20201030 16:02:56.818" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:53.798" endtime="20201030 16:02:56.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:56.821" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:56.819" endtime="20201030 16:02:56.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:02:56.824" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:02:56.822" endtime="20201030 16:02:56.824"></status>
</kw>
<status status="FAIL" starttime="20201030 16:02:53.795" endtime="20201030 16:02:56.825"></status>
</kw>
<status status="FAIL" starttime="20201030 16:02:53.790" endtime="20201030 16:02:56.825"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.787" endtime="20201030 16:02:56.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:02:56.829" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:02:56.828" endtime="20201030 16:02:56.830"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.826" endtime="20201030 16:02:56.830"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.785" endtime="20201030 16:02:56.830"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.784" endtime="20201030 16:02:56.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:56.831" endtime="20201030 16:02:56.832"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.781" endtime="20201030 16:02:56.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.778" endtime="20201030 16:02:56.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:53.747" endtime="20201030 16:02:56.833"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:56.844" endtime="20201030 16:02:56.858"></status>
</kw>
<msg timestamp="20201030 16:02:56.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:56.843" endtime="20201030 16:02:56.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:56.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:56.860" endtime="20201030 16:02:56.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:56.862" endtime="20201030 16:02:56.864"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.840" endtime="20201030 16:02:56.864"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.838" endtime="20201030 16:02:56.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:56.871" endtime="20201030 16:02:57.180"></status>
</kw>
<msg timestamp="20201030 16:02:57.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.081645792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.081659847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:56.870" endtime="20201030 16:02:57.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.081645792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.081659847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:57.185" endtime="20201030 16:02:57.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.193" endtime="20201030 16:02:57.195"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.867" endtime="20201030 16:02:57.195"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.865" endtime="20201030 16:02:57.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:57.200" level="INFO">${RESULT} = [{'diff': 1.4054999999846274e-05}, {'diff': 1.4639000000205016e-05}, {'diff': 1.397200000008425e-05}, {'diff': 1.3916999999974422e-05}, {'diff': 1.4417000000044311e-05}, {'diff': 1.4763999999889421e-0...</msg>
<status status="PASS" starttime="20201030 16:02:57.197" endtime="20201030 16:02:57.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:57.205" level="INFO">${ACCURACY} = {'diff': [1.4054999999846274e-05, 1.4639000000205016e-05, 1.397200000008425e-05, 1.3916999999974422e-05, 1.4417000000044311e-05, 1.4763999999889421e-05, 1.4181000000057509e-05, 1.387500000005204e-05, ...</msg>
<status status="PASS" starttime="20201030 16:02:57.201" endtime="20201030 16:02:57.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.210" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 16:02:57.209" endtime="20201030 16:02:57.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.212" level="INFO">VALUE: [1.4054999999846274e-05, 1.4639000000205016e-05, 1.397200000008425e-05, 1.3916999999974422e-05, 1.4417000000044311e-05, 1.4763999999889421e-05, 1.4181000000057509e-05, 1.387500000005204e-05, 1.4611000000108731e-05, 1.4875000000191818e-05, 1.4278000000089719e-05, 1.397200000008425e-05, 1.422199999989715e-05, 1.4778000000159608e-05, 1.4097000000212745e-05, 1.4111000000038842e-05, 1.447200000015414e-05, 1.4444000000057855e-05, 1.472199999996704e-05, 1.4097000000212745e-05, 1.3902999999704235e-05, 1.4306000000186003e-05, 1.4499999999806334e-05, 1.3972999999722902e-05, 1.437499999967784e-05, 1.4112000000121583e-05, 1.4487000000062977e-05, 1.4014000000006632e-05, 1.476400000033351e-05, 1.3860999999781853e-05, 1.4832999999825347e-05, 1.412499999986494e-05, 1.422299999997989e-05, 1.4430999999870409e-05, 1.422199999989715e-05, 1.472199999996704e-05, 1.4097000000212745e-05, 1.4499999999806334e-05, 1.4249999999993435e-05, 1.397200000008425e-05, 1.4763999999889421e-05, 1.4167000000231411e-05, 1.447200000015414e-05, 1.4179999999974768e-05, 1.402699999974999e-05, 1.441599999996157e-05, 1.4361000000295832e-05, 1.412499999986494e-05, 1.402799999983273e-05, 1.4750000000063324e-05]</msg>
<status status="PASS" starttime="20201030 16:02:57.211" endtime="20201030 16:02:57.213"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.206" endtime="20201030 16:02:57.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:57.217" endtime="20201030 16:02:57.236"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.215" endtime="20201030 16:02:57.237"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.214" endtime="20201030 16:02:57.237"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.835" endtime="20201030 16:02:57.237"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.835" endtime="20201030 16:02:57.237"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.246" endtime="20201030 16:02:57.260"></status>
</kw>
<msg timestamp="20201030 16:02:57.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:57.244" endtime="20201030 16:02:57.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:57.262" endtime="20201030 16:02:57.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.264" endtime="20201030 16:02:57.266"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.242" endtime="20201030 16:02:57.266"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.240" endtime="20201030 16:02:57.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.273" endtime="20201030 16:02:57.558"></status>
</kw>
<msg timestamp="20201030 16:02:57.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01925275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019266667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:02:57.271" endtime="20201030 16:02:57.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01925275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019266667, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:02:57.562" endtime="20201030 16:02:57.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.570" endtime="20201030 16:02:57.572"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.269" endtime="20201030 16:02:57.572"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.267" endtime="20201030 16:02:57.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:57.577" level="INFO">${RESULT} = [{'diff': 1.3917000000002178e-05}, {'diff': 1.4820000000002193e-05}, {'diff': 1.4375000000000498e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.455499999999943e-05}, {'diff': 1.4764000000000443e-0...</msg>
<status status="PASS" starttime="20201030 16:02:57.574" endtime="20201030 16:02:57.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:57.582" level="INFO">${ACCURACY} = {'diff': [1.3917000000002178e-05, 1.4820000000002193e-05, 1.4375000000000498e-05, 1.4430999999998778e-05, 1.455499999999943e-05, 1.4764000000000443e-05, 1.4583000000002039e-05, 1.3916999999998708e-05,...</msg>
<status status="PASS" starttime="20201030 16:02:57.578" endtime="20201030 16:02:57.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.586" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 16:02:57.585" endtime="20201030 16:02:57.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.589" level="INFO">VALUE: [1.3917000000002178e-05, 1.4820000000002193e-05, 1.4375000000000498e-05, 1.4430999999998778e-05, 1.455499999999943e-05, 1.4764000000000443e-05, 1.4583000000002039e-05, 1.3916999999998708e-05, 1.4250000000000373e-05, 1.4362000000000402e-05, 1.3888000000000095e-05, 1.3902999999999138e-05, 1.4485999999997584e-05, 1.483299999999882e-05, 1.427700000000004e-05, 1.4569000000002469e-05, 1.483299999999882e-05, 1.3889000000003038e-05, 1.430499999999918e-05, 1.477700000000054e-05, 1.4389000000000068e-05, 1.4707999999998694e-05, 1.4249999999996904e-05, 1.4389000000000068e-05, 1.4499999999997154e-05, 1.4778000000000013e-05, 1.4819999999998723e-05, 1.4514000000000193e-05, 1.4193999999998624e-05, 1.3958000000001414e-05, 1.4319000000002219e-05, 1.4486000000001054e-05, 1.4402999999999638e-05, 1.4542000000002803e-05, 1.4625000000000749e-05, 1.4639000000000318e-05, 1.4083000000001539e-05, 1.3930999999998278e-05, 1.3861000000000429e-05, 1.4027999999999263e-05, 1.4195000000001567e-05, 1.4125000000000248e-05, 1.4221999999997764e-05, 1.4070000000001442e-05, 1.4152999999999388e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4110999999997209e-05, 1.4208999999997668e-05, 1.4083999999997543e-05]</msg>
<status status="PASS" starttime="20201030 16:02:57.588" endtime="20201030 16:02:57.589"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.583" endtime="20201030 16:02:57.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:57.593" endtime="20201030 16:02:57.613"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.592" endtime="20201030 16:02:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.591" endtime="20201030 16:02:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.238" endtime="20201030 16:02:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.238" endtime="20201030 16:02:57.614"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.623" endtime="20201030 16:02:57.638"></status>
</kw>
<msg timestamp="20201030 16:02:57.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:57.622" endtime="20201030 16:02:57.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:57.640" endtime="20201030 16:02:57.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.642" endtime="20201030 16:02:57.644"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.619" endtime="20201030 16:02:57.645"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.617" endtime="20201030 16:02:57.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.653" endtime="20201030 16:02:57.939"></status>
</kw>
<msg timestamp="20201030 16:02:57.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:57.650" endtime="20201030 16:02:57.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:57.943" endtime="20201030 16:02:57.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:57.952" endtime="20201030 16:02:57.953"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.648" endtime="20201030 16:02:57.954"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.646" endtime="20201030 16:02:57.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:57.958" level="INFO">${RESULT} = [{'diff': 1.47629999999975e-05}, {'diff': 1.4069000000001969e-05}, {'diff': 1.3915999999999235e-05}, {'diff': 1.4722000000001734e-05}, {'diff': 1.429099999999961e-05}, {'diff': 1.4568999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:02:57.955" endtime="20201030 16:02:57.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:57.962" level="INFO">${ACCURACY} = {'diff': [1.47629999999975e-05, 1.4069000000001969e-05, 1.3915999999999235e-05, 1.4722000000001734e-05, 1.429099999999961e-05, 1.4568999999999e-05, 1.4472000000001484e-05, 1.4721999999998264e-05, 1.45...</msg>
<status status="PASS" starttime="20201030 16:02:57.959" endtime="20201030 16:02:57.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.967" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 16:02:57.966" endtime="20201030 16:02:57.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:57.969" level="INFO">VALUE: [1.47629999999975e-05, 1.4069000000001969e-05, 1.3915999999999235e-05, 1.4722000000001734e-05, 1.429099999999961e-05, 1.4568999999999e-05, 1.4472000000001484e-05, 1.4721999999998264e-05, 1.454099999999986e-05, 1.3929999999998804e-05, 1.480499999999968e-05, 1.4028000000002733e-05, 1.4292000000002553e-05, 1.481899999999925e-05, 1.483299999999882e-05, 1.4639000000000318e-05, 1.4707999999998694e-05, 1.405499999999893e-05, 1.4097000000001109e-05, 1.4000000000000123e-05, 1.480499999999968e-05, 1.4180000000002524e-05, 1.4749999999997404e-05, 1.481899999999925e-05, 1.4471999999998014e-05, 1.409699999999764e-05, 1.4597000000001609e-05, 1.4180999999998528e-05, 1.4208000000001664e-05, 1.4361000000000929e-05, 1.430499999999918e-05, 1.4208000000001664e-05, 1.4361000000000929e-05, 1.4444999999998348e-05, 1.452699999999682e-05, 1.4472000000001484e-05, 1.4457999999998444e-05, 1.4848000000001332e-05, 1.4694999999998598e-05, 1.3959000000000887e-05, 1.4443999999998874e-05, 1.4263999999999943e-05, 1.4819999999998723e-05, 1.4277999999999513e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.4541999999999333e-05, 1.4347000000001359e-05, 1.4000000000000123e-05, 1.3930000000002274e-05]</msg>
<status status="PASS" starttime="20201030 16:02:57.968" endtime="20201030 16:02:57.969"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.963" endtime="20201030 16:02:57.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:57.973" endtime="20201030 16:02:57.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.972" endtime="20201030 16:02:57.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.971" endtime="20201030 16:02:57.994"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.615" endtime="20201030 16:02:57.994"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.615" endtime="20201030 16:02:57.994"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.004" endtime="20201030 16:02:58.017"></status>
</kw>
<msg timestamp="20201030 16:02:58.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:58.002" endtime="20201030 16:02:58.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:58.019" endtime="20201030 16:02:58.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.022" endtime="20201030 16:02:58.023"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.999" endtime="20201030 16:02:58.024"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.997" endtime="20201030 16:02:58.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.030" endtime="20201030 16:02:58.317"></status>
</kw>
<msg timestamp="20201030 16:02:58.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020457625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:58.029" endtime="20201030 16:02:58.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020457625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:58.321" endtime="20201030 16:02:58.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.330" endtime="20201030 16:02:58.331"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.026" endtime="20201030 16:02:58.332"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.025" endtime="20201030 16:02:58.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:58.336" level="INFO">${RESULT} = [{'diff': 1.4639000000000318e-05}, {'diff': 1.4639000000000318e-05}, {'diff': 1.4735999999997834e-05}, {'diff': 1.3971999999997514e-05}, {'diff': 1.4527999999999763e-05}, {'diff': 1.4583000000002039e-...</msg>
<status status="PASS" starttime="20201030 16:02:58.333" endtime="20201030 16:02:58.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:58.340" level="INFO">${ACCURACY} = {'diff': [1.4639000000000318e-05, 1.4639000000000318e-05, 1.4735999999997834e-05, 1.3971999999997514e-05, 1.4527999999999763e-05, 1.4583000000002039e-05, 1.4056000000001873e-05, 1.4861000000001429e-05...</msg>
<status status="PASS" starttime="20201030 16:02:58.337" endtime="20201030 16:02:58.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.346" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 16:02:58.344" endtime="20201030 16:02:58.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.348" level="INFO">VALUE: [1.4639000000000318e-05, 1.4639000000000318e-05, 1.4735999999997834e-05, 1.3971999999997514e-05, 1.4527999999999763e-05, 1.4583000000002039e-05, 1.4056000000001873e-05, 1.4861000000001429e-05, 1.4874999999997529e-05, 1.4723000000001207e-05, 1.4569999999998473e-05, 1.4138999999999818e-05, 1.4791999999999583e-05, 1.4277999999999513e-05, 1.4055999999998403e-05, 1.4027999999999263e-05, 1.4013999999999693e-05, 1.4722000000001734e-05, 1.3874999999999998e-05, 1.4125000000000248e-05, 1.3972000000000984e-05, 1.4166999999998958e-05, 1.4125000000000248e-05, 1.4236000000000804e-05, 1.4693999999999124e-05, 1.3888000000000095e-05, 1.4262999999997e-05, 1.4513999999996724e-05, 1.4000000000000123e-05, 1.429099999999961e-05, 1.4403000000003108e-05, 1.3958000000001414e-05, 1.4193999999998624e-05, 1.458299999999857e-05, 1.3861000000000429e-05, 1.3888999999999568e-05, 1.4485999999997584e-05, 1.4222000000001234e-05, 1.4694000000002594e-05, 1.4125000000000248e-05, 1.3916999999998708e-05, 1.431899999999875e-05, 1.458299999999857e-05, 1.3943999999998374e-05, 1.3972000000000984e-05, 1.4527999999999763e-05, 1.408299999999807e-05, 1.4568999999999e-05, 1.4417000000002678e-05, 1.4430999999998778e-05]</msg>
<status status="PASS" starttime="20201030 16:02:58.347" endtime="20201030 16:02:58.348"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.341" endtime="20201030 16:02:58.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:58.352" endtime="20201030 16:02:58.372"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.351" endtime="20201030 16:02:58.372"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.350" endtime="20201030 16:02:58.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.995" endtime="20201030 16:02:58.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:57.994" endtime="20201030 16:02:58.373"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.382" endtime="20201030 16:02:58.397"></status>
</kw>
<msg timestamp="20201030 16:02:58.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:58.380" endtime="20201030 16:02:58.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:58.398" endtime="20201030 16:02:58.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.401" endtime="20201030 16:02:58.402"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.378" endtime="20201030 16:02:58.403"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.376" endtime="20201030 16:02:58.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.410" endtime="20201030 16:02:58.698"></status>
</kw>
<msg timestamp="20201030 16:02:58.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:58.408" endtime="20201030 16:02:58.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:58.702" endtime="20201030 16:02:58.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.710" endtime="20201030 16:02:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.405" endtime="20201030 16:02:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.404" endtime="20201030 16:02:58.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:58.716" level="INFO">${RESULT} = [{'diff': 1.459699999999814e-05}, {'diff': 1.4666999999999458e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.4055999999998403e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4181000000001998e-0...</msg>
<status status="PASS" starttime="20201030 16:02:58.713" endtime="20201030 16:02:58.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:58.722" level="INFO">${ACCURACY} = {'diff': [1.459699999999814e-05, 1.4666999999999458e-05, 1.4000000000000123e-05, 1.4055999999998403e-05, 1.4013999999999693e-05, 1.4181000000001998e-05, 1.4250000000000373e-05, 1.3945000000001317e-05,...</msg>
<status status="PASS" starttime="20201030 16:02:58.717" endtime="20201030 16:02:58.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.726" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 16:02:58.725" endtime="20201030 16:02:58.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.728" level="INFO">VALUE: [1.459699999999814e-05, 1.4666999999999458e-05, 1.4000000000000123e-05, 1.4055999999998403e-05, 1.4013999999999693e-05, 1.4181000000001998e-05, 1.4250000000000373e-05, 1.3945000000001317e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4180999999998528e-05, 1.4707999999998694e-05, 1.3986000000000554e-05, 1.476300000000097e-05, 1.4263999999999943e-05, 1.4375000000000498e-05, 1.4486000000001054e-05, 1.429099999999961e-05, 1.4514000000000193e-05, 1.4402000000000165e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.4708000000002164e-05, 1.4250000000000373e-05, 1.4611000000001179e-05, 1.433299999999832e-05, 1.4680999999999028e-05, 1.4708000000002164e-05, 1.481899999999925e-05, 1.4652999999999888e-05, 1.4722000000001734e-05, 1.4361000000000929e-05, 1.4652999999999888e-05, 1.4639000000000318e-05, 1.4277999999999513e-05, 1.433299999999832e-05, 1.384699999999739e-05, 1.4430999999998778e-05, 1.4193999999998624e-05, 1.4250000000000373e-05, 1.4027999999999263e-05, 1.3888999999999568e-05, 1.4013999999999693e-05, 1.4360999999997459e-05, 1.4375000000000498e-05, 1.4277999999999513e-05, 1.409699999999764e-05, 1.4305999999998653e-05, 1.4680999999999028e-05, 1.4361000000000929e-05]</msg>
<status status="PASS" starttime="20201030 16:02:58.727" endtime="20201030 16:02:58.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.722" endtime="20201030 16:02:58.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:58.733" endtime="20201030 16:02:58.752"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.731" endtime="20201030 16:02:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.730" endtime="20201030 16:02:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.374" endtime="20201030 16:02:58.754"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.373" endtime="20201030 16:02:58.754"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.763" endtime="20201030 16:02:58.778"></status>
</kw>
<msg timestamp="20201030 16:02:58.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:58.761" endtime="20201030 16:02:58.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:58.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:58.780" endtime="20201030 16:02:58.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.782" endtime="20201030 16:02:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.759" endtime="20201030 16:02:58.784"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.757" endtime="20201030 16:02:58.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:58.791" endtime="20201030 16:02:59.078"></status>
</kw>
<msg timestamp="20201030 16:02:59.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:58.790" endtime="20201030 16:02:59.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:59.083" endtime="20201030 16:02:59.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.091" endtime="20201030 16:02:59.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.787" endtime="20201030 16:02:59.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.785" endtime="20201030 16:02:59.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:59.097" level="INFO">${RESULT} = [{'diff': 1.461099999999771e-05}, {'diff': 1.4195000000001567e-05}, {'diff': 1.4458000000001914e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.4124999999996779e-05}, {'diff': 1.4306000000002123e-0...</msg>
<status status="PASS" starttime="20201030 16:02:59.094" endtime="20201030 16:02:59.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:59.102" level="INFO">${ACCURACY} = {'diff': [1.461099999999771e-05, 1.4195000000001567e-05, 1.4458000000001914e-05, 1.4430999999998778e-05, 1.4124999999996779e-05, 1.4306000000002123e-05, 1.3958000000001414e-05, 1.4444000000002344e-05,...</msg>
<status status="PASS" starttime="20201030 16:02:59.098" endtime="20201030 16:02:59.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.106" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 16:02:59.105" endtime="20201030 16:02:59.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.108" level="INFO">VALUE: [1.461099999999771e-05, 1.4195000000001567e-05, 1.4458000000001914e-05, 1.4430999999998778e-05, 1.4124999999996779e-05, 1.4306000000002123e-05, 1.3958000000001414e-05, 1.4444000000002344e-05, 1.4028000000002733e-05, 1.4708999999998168e-05, 1.4111000000000679e-05, 1.4458000000001914e-05, 1.3888999999999568e-05, 1.4000000000000123e-05, 1.3931000000001748e-05, 1.434699999999789e-05, 1.4000000000000123e-05, 1.4625000000000749e-05, 1.4277999999999513e-05, 1.4472000000001484e-05, 1.4555999999998903e-05, 1.4403000000003108e-05, 1.4153000000002858e-05, 1.4166999999998958e-05, 1.3917000000002178e-05, 1.3945000000001317e-05, 1.4083000000001539e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.452700000000029e-05, 1.4750000000000874e-05, 1.3915999999999235e-05, 1.483299999999882e-05, 1.408299999999807e-05, 1.4624999999997279e-05, 1.479100000000011e-05, 1.4069000000001969e-05, 1.409699999999764e-05, 1.4485999999997584e-05, 1.454099999999986e-05, 1.4263999999999943e-05, 1.4443999999998874e-05, 1.4347000000001359e-05, 1.4764000000000443e-05, 1.4361000000000929e-05, 1.4181000000001998e-05, 1.4541999999999333e-05, 1.4291999999999083e-05, 1.4193999999998624e-05, 1.4722000000001734e-05]</msg>
<status status="PASS" starttime="20201030 16:02:59.107" endtime="20201030 16:02:59.109"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.102" endtime="20201030 16:02:59.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:59.113" endtime="20201030 16:02:59.133"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.112" endtime="20201030 16:02:59.133"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.110" endtime="20201030 16:02:59.134"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.755" endtime="20201030 16:02:59.134"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:58.754" endtime="20201030 16:02:59.134"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.143" endtime="20201030 16:02:59.159"></status>
</kw>
<msg timestamp="20201030 16:02:59.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:59.141" endtime="20201030 16:02:59.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:59.160" endtime="20201030 16:02:59.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.163" endtime="20201030 16:02:59.165"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.139" endtime="20201030 16:02:59.165"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.136" endtime="20201030 16:02:59.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.172" endtime="20201030 16:02:59.458"></status>
</kw>
<msg timestamp="20201030 16:02:59.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:59.170" endtime="20201030 16:02:59.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020271639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:59.463" endtime="20201030 16:02:59.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.474" endtime="20201030 16:02:59.476"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.168" endtime="20201030 16:02:59.476"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.166" endtime="20201030 16:02:59.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:59.481" level="INFO">${RESULT} = [{'diff': 1.4791999999999583e-05}, {'diff': 1.4750000000000874e-05}, {'diff': 1.3930999999998278e-05}, {'diff': 1.4429999999999304e-05}, {'diff': 1.384699999999739e-05}, {'diff': 1.4402999999999638e-0...</msg>
<status status="PASS" starttime="20201030 16:02:59.477" endtime="20201030 16:02:59.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:59.485" level="INFO">${ACCURACY} = {'diff': [1.4791999999999583e-05, 1.4750000000000874e-05, 1.3930999999998278e-05, 1.4429999999999304e-05, 1.384699999999739e-05, 1.4402999999999638e-05, 1.481899999999925e-05, 1.454099999999986e-05, 1...</msg>
<status status="PASS" starttime="20201030 16:02:59.482" endtime="20201030 16:02:59.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.489" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 16:02:59.488" endtime="20201030 16:02:59.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.492" level="INFO">VALUE: [1.4791999999999583e-05, 1.4750000000000874e-05, 1.3930999999998278e-05, 1.4429999999999304e-05, 1.384699999999739e-05, 1.4402999999999638e-05, 1.481899999999925e-05, 1.454099999999986e-05, 1.4000000000000123e-05, 1.4402000000000165e-05, 1.4471999999998014e-05, 1.4402999999999638e-05, 1.4750000000000874e-05, 1.4249999999996904e-05, 1.4778000000000013e-05, 1.4389000000000068e-05, 1.4249999999996904e-05, 1.481899999999925e-05, 1.4778000000000013e-05, 1.4721999999998264e-05, 1.3847000000000859e-05, 1.4167000000002428e-05, 1.4263999999999943e-05, 1.4402999999999638e-05, 1.4471999999998014e-05, 1.4195000000001567e-05, 1.4181000000001998e-05, 1.483299999999882e-05, 1.4542000000002803e-05, 1.4083000000001539e-05, 1.4764000000000443e-05, 1.4652999999999888e-05, 1.4694999999998598e-05, 1.4485999999997584e-05, 1.4555999999998903e-05, 1.4556000000002373e-05, 1.4250000000000373e-05, 1.4125000000000248e-05, 1.4013999999999693e-05, 1.3888999999999568e-05, 1.4723000000001207e-05, 1.3930999999998278e-05, 1.4694999999998598e-05, 1.4737000000000777e-05, 1.4429999999999304e-05, 1.4500000000000624e-05, 1.4665999999999985e-05, 1.3959000000000887e-05, 1.4625000000000749e-05, 1.4735999999997834e-05]</msg>
<status status="PASS" starttime="20201030 16:02:59.490" endtime="20201030 16:02:59.493"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.486" endtime="20201030 16:02:59.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:59.498" endtime="20201030 16:02:59.517"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.496" endtime="20201030 16:02:59.518"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.495" endtime="20201030 16:02:59.518"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.135" endtime="20201030 16:02:59.518"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.134" endtime="20201030 16:02:59.518"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.527" endtime="20201030 16:02:59.541"></status>
</kw>
<msg timestamp="20201030 16:02:59.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:59.525" endtime="20201030 16:02:59.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:59.543" endtime="20201030 16:02:59.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.545" endtime="20201030 16:02:59.547"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.523" endtime="20201030 16:02:59.548"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.521" endtime="20201030 16:02:59.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.554" endtime="20201030 16:02:59.840"></status>
</kw>
<msg timestamp="20201030 16:02:59.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020212931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020227097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:59.553" endtime="20201030 16:02:59.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020212931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020227097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:59.844" endtime="20201030 16:02:59.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.852" endtime="20201030 16:02:59.854"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.550" endtime="20201030 16:02:59.854"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.549" endtime="20201030 16:02:59.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:02:59.859" level="INFO">${RESULT} = [{'diff': 1.4165999999999485e-05}, {'diff': 1.4179999999999054e-05}, {'diff': 1.483299999999882e-05}, {'diff': 1.3860999999996959e-05}, {'diff': 1.4179999999999054e-05}, {'diff': 1.4236000000000804e-0...</msg>
<status status="PASS" starttime="20201030 16:02:59.855" endtime="20201030 16:02:59.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:02:59.863" level="INFO">${ACCURACY} = {'diff': [1.4165999999999485e-05, 1.4179999999999054e-05, 1.483299999999882e-05, 1.3860999999996959e-05, 1.4179999999999054e-05, 1.4236000000000804e-05, 1.4445000000001817e-05, 1.4250000000000373e-05,...</msg>
<status status="PASS" starttime="20201030 16:02:59.860" endtime="20201030 16:02:59.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.868" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 16:02:59.867" endtime="20201030 16:02:59.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.870" level="INFO">VALUE: [1.4165999999999485e-05, 1.4179999999999054e-05, 1.483299999999882e-05, 1.3860999999996959e-05, 1.4179999999999054e-05, 1.4236000000000804e-05, 1.4445000000001817e-05, 1.4250000000000373e-05, 1.3944999999997848e-05, 1.3931000000001748e-05, 1.4750000000000874e-05, 1.3888999999999568e-05, 1.4444999999998348e-05, 1.3861000000000429e-05, 1.4901999999997195e-05, 1.4277999999999513e-05, 1.4125000000000248e-05, 1.3888999999999568e-05, 1.4735999999997834e-05, 1.4389000000000068e-05, 1.3931000000001748e-05, 1.4097000000001109e-05, 1.4430999999998778e-05, 1.4000000000000123e-05, 1.4223000000000707e-05, 1.3930999999998278e-05, 1.4708999999998168e-05, 1.4431000000002248e-05, 1.4362000000000402e-05, 1.4013999999999693e-05, 1.4222000000001234e-05, 1.4444000000002344e-05, 1.4514000000000193e-05, 1.402699999999979e-05, 1.4083000000001539e-05, 1.433299999999832e-05, 1.4222000000001234e-05, 1.4069000000001969e-05, 1.4680999999999028e-05, 1.4166000000002954e-05, 1.454099999999986e-05, 1.4429999999999304e-05, 1.380499999999868e-05, 1.4707999999998694e-05, 1.4639000000000318e-05, 1.4041999999998833e-05, 1.4167000000002428e-05, 1.4083000000001539e-05, 1.4389000000000068e-05, 1.4097000000001109e-05]</msg>
<status status="PASS" starttime="20201030 16:02:59.869" endtime="20201030 16:02:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.864" endtime="20201030 16:02:59.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:02:59.875" endtime="20201030 16:02:59.895"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.874" endtime="20201030 16:02:59.895"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.873" endtime="20201030 16:02:59.895"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.519" endtime="20201030 16:02:59.896"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.519" endtime="20201030 16:02:59.896"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.904" endtime="20201030 16:02:59.918"></status>
</kw>
<msg timestamp="20201030 16:02:59.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:59.903" endtime="20201030 16:02:59.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:02:59.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:02:59.920" endtime="20201030 16:02:59.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.922" endtime="20201030 16:02:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.900" endtime="20201030 16:02:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.898" endtime="20201030 16:02:59.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:02:59.931" endtime="20201030 16:03:00.216"></status>
</kw>
<msg timestamp="20201030 16:03:00.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019182847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019197431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:02:59.930" endtime="20201030 16:03:00.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019182847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019197431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:00.221" endtime="20201030 16:03:00.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.229" endtime="20201030 16:03:00.230"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.927" endtime="20201030 16:03:00.231"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.925" endtime="20201030 16:03:00.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:00.235" level="INFO">${RESULT} = [{'diff': 1.4584000000001512e-05}, {'diff': 1.461099999999771e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.459699999999814e-05}, {'diff': 1.3888999999999568e-05}, {'diff': 1.4500000000000624e-05...</msg>
<status status="PASS" starttime="20201030 16:03:00.232" endtime="20201030 16:03:00.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:00.239" level="INFO">${ACCURACY} = {'diff': [1.4584000000001512e-05, 1.461099999999771e-05, 1.3889000000003038e-05, 1.459699999999814e-05, 1.3888999999999568e-05, 1.4500000000000624e-05, 1.4000000000000123e-05, 1.4334000000001262e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:00.236" endtime="20201030 16:03:00.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.244" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 16:03:00.243" endtime="20201030 16:03:00.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.246" level="INFO">VALUE: [1.4584000000001512e-05, 1.461099999999771e-05, 1.3889000000003038e-05, 1.459699999999814e-05, 1.3888999999999568e-05, 1.4500000000000624e-05, 1.4000000000000123e-05, 1.4334000000001262e-05, 1.4070000000001442e-05, 1.4402999999999638e-05, 1.4138999999999818e-05, 1.4848000000001332e-05, 1.4723000000001207e-05, 1.3986000000000554e-05, 1.4819999999998723e-05, 1.4500000000000624e-05, 1.4708000000002164e-05, 1.477700000000054e-05, 1.4555999999998903e-05, 1.4098000000000582e-05, 1.401300000000022e-05, 1.4000000000000123e-05, 1.4069999999997973e-05, 1.4041000000002829e-05, 1.4179999999999054e-05, 1.4152999999999388e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4568999999999e-05, 1.4193999999998624e-05, 1.4236000000000804e-05, 1.452700000000029e-05, 1.3874999999999998e-05, 1.4389000000000068e-05, 1.405499999999893e-05, 1.4152999999999388e-05, 1.4152999999999388e-05, 1.4429999999999304e-05, 1.4165999999999485e-05, 1.430499999999918e-05, 1.4861000000001429e-05, 1.4693999999999124e-05, 1.4361000000000929e-05, 1.4097000000001109e-05, 1.4222000000001234e-05, 1.4819999999998723e-05, 1.4514000000000193e-05, 1.4097000000001109e-05, 1.4666999999999458e-05, 1.4445000000001817e-05]</msg>
<status status="PASS" starttime="20201030 16:03:00.245" endtime="20201030 16:03:00.247"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.240" endtime="20201030 16:03:00.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:00.251" endtime="20201030 16:03:00.270"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.250" endtime="20201030 16:03:00.271"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.248" endtime="20201030 16:03:00.271"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.897" endtime="20201030 16:03:00.272"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:59.896" endtime="20201030 16:03:00.272"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.280" endtime="20201030 16:03:00.296"></status>
</kw>
<msg timestamp="20201030 16:03:00.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:00.279" endtime="20201030 16:03:00.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:00.297" endtime="20201030 16:03:00.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.300" endtime="20201030 16:03:00.301"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.276" endtime="20201030 16:03:00.302"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.274" endtime="20201030 16:03:00.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.309" endtime="20201030 16:03:00.594"></status>
</kw>
<msg timestamp="20201030 16:03:00.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:00.307" endtime="20201030 16:03:00.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020317736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:00.598" endtime="20201030 16:03:00.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.606" endtime="20201030 16:03:00.609"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.304" endtime="20201030 16:03:00.610"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.303" endtime="20201030 16:03:00.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:00.619" level="INFO">${RESULT} = [{'diff': 1.4195000000001567e-05}, {'diff': 1.4084000000001012e-05}, {'diff': 1.3987000000000027e-05}, {'diff': 1.4223000000000707e-05}, {'diff': 1.3901999999999665e-05}, {'diff': 1.4208000000001664e-...</msg>
<status status="PASS" starttime="20201030 16:03:00.612" endtime="20201030 16:03:00.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:00.628" level="INFO">${ACCURACY} = {'diff': [1.4195000000001567e-05, 1.4084000000001012e-05, 1.3987000000000027e-05, 1.4223000000000707e-05, 1.3901999999999665e-05, 1.4208000000001664e-05, 1.3915999999999235e-05, 1.4415999999999735e-05...</msg>
<status status="PASS" starttime="20201030 16:03:00.621" endtime="20201030 16:03:00.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.637" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 16:03:00.635" endtime="20201030 16:03:00.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.642" level="INFO">VALUE: [1.4195000000001567e-05, 1.4084000000001012e-05, 1.3987000000000027e-05, 1.4223000000000707e-05, 1.3901999999999665e-05, 1.4208000000001664e-05, 1.3915999999999235e-05, 1.4415999999999735e-05, 1.4597000000001609e-05, 1.4457999999998444e-05, 1.3860999999996959e-05, 1.4165999999999485e-05, 1.4458000000001914e-05, 1.4222000000001234e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4500000000000624e-05, 1.4679999999999555e-05, 1.404099999999936e-05, 1.4791999999999583e-05, 1.4736000000001304e-05, 1.4291999999999083e-05, 1.4319000000002219e-05, 1.4527999999999763e-05, 1.4291999999999083e-05, 1.4597000000001609e-05, 1.4000000000000123e-05, 1.4652999999999888e-05, 1.481899999999925e-05, 1.4445000000001817e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4624999999997279e-05, 1.483299999999882e-05, 1.3930999999998278e-05, 1.4638999999996849e-05, 1.4541999999999333e-05, 1.4278000000002983e-05, 1.4499999999997154e-05, 1.3902999999999138e-05, 1.4527999999999763e-05, 1.4125000000000248e-05, 1.4652000000000415e-05, 1.4584000000001512e-05, 1.408299999999807e-05, 1.4263999999999943e-05, 1.4472999999997488e-05, 1.4209000000001137e-05, 1.4862000000000902e-05, 1.4472000000001484e-05]</msg>
<status status="PASS" starttime="20201030 16:03:00.639" endtime="20201030 16:03:00.653"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.630" endtime="20201030 16:03:00.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:00.663" endtime="20201030 16:03:00.685"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.659" endtime="20201030 16:03:00.686"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.657" endtime="20201030 16:03:00.686"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.273" endtime="20201030 16:03:00.687"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.272" endtime="20201030 16:03:00.687"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.705" endtime="20201030 16:03:00.720"></status>
</kw>
<msg timestamp="20201030 16:03:00.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:00.702" endtime="20201030 16:03:00.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:00.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:00.722" endtime="20201030 16:03:00.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.724" endtime="20201030 16:03:00.725"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.696" endtime="20201030 16:03:00.726"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.692" endtime="20201030 16:03:00.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:00.733" endtime="20201030 16:03:01.019"></status>
</kw>
<msg timestamp="20201030 16:03:01.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033169736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033185264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:00.731" endtime="20201030 16:03:01.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033169736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033185264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:01.024" endtime="20201030 16:03:01.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.032" endtime="20201030 16:03:01.034"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.729" endtime="20201030 16:03:01.034"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.727" endtime="20201030 16:03:01.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:01.039" level="INFO">${RESULT} = [{'diff': 1.5528000000000763e-05}, {'diff': 1.5333000000006258e-05}, {'diff': 1.530500000000018e-05}, {'diff': 1.4931000000002748e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5235999999994865e-0...</msg>
<status status="PASS" starttime="20201030 16:03:01.035" endtime="20201030 16:03:01.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:01.043" level="INFO">${ACCURACY} = {'diff': [1.5528000000000763e-05, 1.5333000000006258e-05, 1.530500000000018e-05, 1.4931000000002748e-05, 1.5028000000000263e-05, 1.5235999999994865e-05, 1.536099999999846e-05, 1.531899999999975e-05, 1...</msg>
<status status="PASS" starttime="20201030 16:03:01.039" endtime="20201030 16:03:01.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.048" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 16:03:01.047" endtime="20201030 16:03:01.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.050" level="INFO">VALUE: [1.5528000000000763e-05, 1.5333000000006258e-05, 1.530500000000018e-05, 1.4931000000002748e-05, 1.5028000000000263e-05, 1.5235999999994865e-05, 1.536099999999846e-05, 1.531899999999975e-05, 1.5250000000001374e-05, 1.5069999999998973e-05, 1.5348000000005302e-05, 1.5445000000002818e-05, 1.4959000000001887e-05, 1.543099999999631e-05, 1.537499999999803e-05, 1.5069999999998973e-05, 1.5403000000004108e-05, 1.576299999999503e-05, 1.558299999999957e-05, 1.552700000000129e-05, 1.5819999999999723e-05, 1.5499999999994685e-05, 1.4901999999997195e-05, 1.5415999999997265e-05, 1.5221999999995295e-05, 1.505499999999993e-05, 1.5361000000005398e-05, 1.5124999999997779e-05, 1.4902999999996669e-05, 1.530500000000018e-05, 1.5166000000003954e-05, 1.5180000000003524e-05, 1.565299999999742e-05, 1.5514000000001194e-05, 1.5361000000005398e-05, 1.509699999999864e-05, 1.561099999999871e-05, 1.5639000000004788e-05, 1.4929999999996335e-05, 1.50689999999995e-05, 1.5721999999995795e-05, 1.5528000000000763e-05, 1.5235999999994865e-05, 1.5443999999996405e-05, 1.5195000000002568e-05, 1.5124999999997779e-05, 1.5041999999999833e-05, 1.4943999999995905e-05, 1.5236000000001804e-05, 1.4889000000004038e-05]</msg>
<status status="PASS" starttime="20201030 16:03:01.049" endtime="20201030 16:03:01.051"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.044" endtime="20201030 16:03:01.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:01.055" endtime="20201030 16:03:01.075"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.054" endtime="20201030 16:03:01.075"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.053" endtime="20201030 16:03:01.076"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.689" endtime="20201030 16:03:01.076"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:00.688" endtime="20201030 16:03:01.076"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.085" endtime="20201030 16:03:01.100"></status>
</kw>
<msg timestamp="20201030 16:03:01.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:01.083" endtime="20201030 16:03:01.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:01.101" endtime="20201030 16:03:01.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.104" endtime="20201030 16:03:01.105"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.081" endtime="20201030 16:03:01.106"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.079" endtime="20201030 16:03:01.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.113" endtime="20201030 16:03:01.400"></status>
</kw>
<msg timestamp="20201030 16:03:01.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:01.111" endtime="20201030 16:03:01.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019742903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:01.405" endtime="20201030 16:03:01.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.418" endtime="20201030 16:03:01.420"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.109" endtime="20201030 16:03:01.421"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.107" endtime="20201030 16:03:01.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:01.426" level="INFO">${RESULT} = [{'diff': 1.586100000000243e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.6069999999999973e-05}, {'diff': 1.6722000000000264e-05}, {'diff': 1.5944999999999848e-05}, {'diff': 1.641700000000121e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:01.422" endtime="20201030 16:03:01.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:01.432" level="INFO">${ACCURACY} = {'diff': [1.586100000000243e-05, 1.611099999999921e-05, 1.6069999999999973e-05, 1.6722000000000264e-05, 1.5944999999999848e-05, 1.641700000000121e-05, 1.6792000000001583e-05, 1.6764000000002444e-05, 1...</msg>
<status status="PASS" starttime="20201030 16:03:01.428" endtime="20201030 16:03:01.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.437" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 16:03:01.436" endtime="20201030 16:03:01.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.440" level="INFO">VALUE: [1.586100000000243e-05, 1.611099999999921e-05, 1.6069999999999973e-05, 1.6722000000000264e-05, 1.5944999999999848e-05, 1.641700000000121e-05, 1.6792000000001583e-05, 1.6764000000002444e-05, 1.661099999999971e-05, 1.6763999999998974e-05, 1.6777999999998544e-05, 1.6458999999999918e-05, 1.661099999999971e-05, 1.5931000000000278e-05, 1.6013999999998224e-05, 1.6528000000001764e-05, 1.6500000000002624e-05, 1.5862000000001902e-05, 1.6194000000000625e-05, 1.6221999999999764e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.602700000000179e-05, 1.6151999999998445e-05, 1.6486000000003054e-05, 1.6486000000003054e-05, 1.6430000000001305e-05, 1.609699999999964e-05, 1.6777999999998544e-05, 1.683300000000082e-05, 1.683300000000082e-05, 1.6194000000000625e-05, 1.659700000000014e-05, 1.615300000000139e-05, 1.6458000000000444e-05, 1.6013999999998224e-05, 1.6014000000001694e-05, 1.6513999999998724e-05, 1.6249999999998904e-05, 1.6180000000001055e-05, 1.6792000000001583e-05, 1.6194000000000625e-05, 1.6792000000001583e-05, 1.6556000000000903e-05, 1.5944999999999848e-05, 1.5944999999999848e-05, 1.6221999999999764e-05, 1.6014000000001694e-05, 1.6485999999999584e-05, 1.609699999999964e-05]</msg>
<status status="PASS" starttime="20201030 16:03:01.439" endtime="20201030 16:03:01.441"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.433" endtime="20201030 16:03:01.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:01.446" endtime="20201030 16:03:01.466"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.445" endtime="20201030 16:03:01.467"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.443" endtime="20201030 16:03:01.467"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.077" endtime="20201030 16:03:01.467"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.077" endtime="20201030 16:03:01.467"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.476" endtime="20201030 16:03:01.491"></status>
</kw>
<msg timestamp="20201030 16:03:01.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:01.474" endtime="20201030 16:03:01.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:01.492" endtime="20201030 16:03:01.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.495" endtime="20201030 16:03:01.496"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.472" endtime="20201030 16:03:01.497"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.470" endtime="20201030 16:03:01.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.504" endtime="20201030 16:03:01.790"></status>
</kw>
<msg timestamp="20201030 16:03:01.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020744819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:01.502" endtime="20201030 16:03:01.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020744819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:01.794" endtime="20201030 16:03:01.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.802" endtime="20201030 16:03:01.804"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.500" endtime="20201030 16:03:01.804"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.498" endtime="20201030 16:03:01.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:01.808" level="INFO">${RESULT} = [{'diff': 1.7513999999999724e-05}, {'diff': 1.715299999999892e-05}, {'diff': 1.75829999999981e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.758300000000157e-05}, {'diff': 1.7041999999998364e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:01.805" endtime="20201030 16:03:01.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:01.812" level="INFO">${ACCURACY} = {'diff': [1.7513999999999724e-05, 1.715299999999892e-05, 1.75829999999981e-05, 1.7056000000001403e-05, 1.758300000000157e-05, 1.7041999999998364e-05, 1.737500000000003e-05, 1.7249999999999904e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 16:03:01.809" endtime="20201030 16:03:01.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.817" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 16:03:01.816" endtime="20201030 16:03:01.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.819" level="INFO">VALUE: [1.7513999999999724e-05, 1.715299999999892e-05, 1.75829999999981e-05, 1.7056000000001403e-05, 1.758300000000157e-05, 1.7041999999998364e-05, 1.737500000000003e-05, 1.7249999999999904e-05, 1.70829999999976e-05, 1.706899999999803e-05, 1.73889999999996e-05, 1.6944000000001375e-05, 1.7513999999999724e-05, 1.7278000000002514e-05, 1.712499999999978e-05, 1.7763999999999974e-05, 1.784700000000139e-05, 1.712499999999978e-05, 1.693100000000128e-05, 1.7305999999998184e-05, 1.7472000000001014e-05, 1.7792000000002584e-05, 1.7320000000001223e-05, 1.7429999999998835e-05, 1.690300000000214e-05, 1.7513999999999724e-05, 1.741699999999874e-05, 1.7027999999998794e-05, 1.6959000000000418e-05, 1.694499999999738e-05, 1.6972999999999988e-05, 1.7208000000001195e-05, 1.6945000000000848e-05, 1.7680000000002555e-05, 1.7111999999999683e-05, 1.7651999999999946e-05, 1.787500000000053e-05, 1.7236000000000334e-05, 1.7457999999997975e-05, 1.781899999999878e-05, 1.7222000000000764e-05, 1.7236000000000334e-05, 1.7222000000000764e-05, 1.7013999999999224e-05, 1.6944000000001375e-05, 1.765299999999942e-05, 1.706899999999803e-05, 1.684700000000039e-05, 1.715300000000239e-05, 1.712499999999978e-05]</msg>
<status status="PASS" starttime="20201030 16:03:01.818" endtime="20201030 16:03:01.821"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.813" endtime="20201030 16:03:01.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:01.825" endtime="20201030 16:03:01.844"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.824" endtime="20201030 16:03:01.845"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.822" endtime="20201030 16:03:01.845"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.468" endtime="20201030 16:03:01.846"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.468" endtime="20201030 16:03:01.846"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.854" endtime="20201030 16:03:01.871"></status>
</kw>
<msg timestamp="20201030 16:03:01.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:01.853" endtime="20201030 16:03:01.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:01.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:01.872" endtime="20201030 16:03:01.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.876" endtime="20201030 16:03:01.879"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.850" endtime="20201030 16:03:01.879"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.848" endtime="20201030 16:03:01.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:01.890" endtime="20201030 16:03:02.178"></status>
</kw>
<msg timestamp="20201030 16:03:02.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:01.887" endtime="20201030 16:03:02.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:02.182" endtime="20201030 16:03:02.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.190" endtime="20201030 16:03:02.192"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.884" endtime="20201030 16:03:02.192"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.880" endtime="20201030 16:03:02.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:02.197" level="INFO">${RESULT} = [{'diff': 1.880500000000021e-05}, {'diff': 1.869499999999913e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.840300000000017e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.7943999999998905e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:02.194" endtime="20201030 16:03:02.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:02.202" level="INFO">${ACCURACY} = {'diff': [1.880500000000021e-05, 1.869499999999913e-05, 1.812500000000078e-05, 1.840300000000017e-05, 1.866699999999999e-05, 1.7943999999998905e-05, 1.804100000000336e-05, 1.7888000000000626e-05, 1.80...</msg>
<status status="PASS" starttime="20201030 16:03:02.198" endtime="20201030 16:03:02.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.206" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 16:03:02.205" endtime="20201030 16:03:02.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.209" level="INFO">VALUE: [1.880500000000021e-05, 1.869499999999913e-05, 1.812500000000078e-05, 1.840300000000017e-05, 1.866699999999999e-05, 1.7943999999998905e-05, 1.804100000000336e-05, 1.7888000000000626e-05, 1.801300000000075e-05, 1.859699999999867e-05, 1.8707999999999225e-05, 1.851299999999778e-05, 1.8541999999999864e-05, 1.804099999999989e-05, 1.877700000000107e-05, 1.8749999999997935e-05, 1.880500000000021e-05, 1.7944000000002375e-05, 1.781899999999878e-05, 1.7929999999999335e-05, 1.8291999999999614e-05, 1.80829999999986e-05, 1.7985999999997615e-05, 1.861100000000171e-05, 1.861100000000171e-05, 1.8193999999999155e-05, 1.8569999999999004e-05, 1.815299999999992e-05, 1.837500000000103e-05, 1.8014000000000224e-05, 1.8236000000001334e-05, 1.865300000000042e-05, 1.838899999999713e-05, 1.8291999999999614e-05, 1.8209000000001668e-05, 1.8235999999997865e-05, 1.8805999999999684e-05, 1.837499999999756e-05, 1.862500000000128e-05, 1.8027999999999794e-05, 1.818099999999906e-05, 1.8528000000000294e-05, 1.794499999999838e-05, 1.80690000000025e-05, 1.8112000000000683e-05, 1.787500000000053e-05, 1.8514000000000724e-05, 1.8597999999998144e-05, 1.7888000000000626e-05, 1.833299999999885e-05]</msg>
<status status="PASS" starttime="20201030 16:03:02.207" endtime="20201030 16:03:02.209"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.202" endtime="20201030 16:03:02.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:02.213" endtime="20201030 16:03:02.233"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.212" endtime="20201030 16:03:02.233"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.211" endtime="20201030 16:03:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.847" endtime="20201030 16:03:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:01.846" endtime="20201030 16:03:02.234"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.243" endtime="20201030 16:03:02.257"></status>
</kw>
<msg timestamp="20201030 16:03:02.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:02.241" endtime="20201030 16:03:02.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:02.258" endtime="20201030 16:03:02.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.261" endtime="20201030 16:03:02.262"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.239" endtime="20201030 16:03:02.263"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.237" endtime="20201030 16:03:02.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.269" endtime="20201030 16:03:02.555"></status>
</kw>
<msg timestamp="20201030 16:03:02.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:02.268" endtime="20201030 16:03:02.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:02.559" endtime="20201030 16:03:02.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.568" endtime="20201030 16:03:02.569"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.265" endtime="20201030 16:03:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.264" endtime="20201030 16:03:02.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:02.574" level="INFO">${RESULT} = [{'diff': 1.920900000000267e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 1.9292000000000614e-05}, {'diff': 1.912499999999831e-05}, {'diff': 1.912500000000178e-05}, {'diff': 1.905499999999699e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:02.571" endtime="20201030 16:03:02.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:02.578" level="INFO">${ACCURACY} = {'diff': [1.920900000000267e-05, 1.9542000000000864e-05, 1.9292000000000614e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.905499999999699e-05, 1.93890000000016e-05, 1.963899999999838e-05, 1.884...</msg>
<status status="PASS" starttime="20201030 16:03:02.575" endtime="20201030 16:03:02.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.583" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 16:03:02.582" endtime="20201030 16:03:02.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.585" level="INFO">VALUE: [1.920900000000267e-05, 1.9542000000000864e-05, 1.9292000000000614e-05, 1.912499999999831e-05, 1.912500000000178e-05, 1.905499999999699e-05, 1.93890000000016e-05, 1.963899999999838e-05, 1.8847999999998394e-05, 1.9777999999998075e-05, 1.9014000000001224e-05, 1.9264000000001474e-05, 1.933299999999985e-05, 1.95830000000001e-05, 1.934700000000289e-05, 1.9000000000001654e-05, 1.956900000000053e-05, 1.930500000000071e-05, 1.883299999999935e-05, 1.929099999999767e-05, 1.909699999999917e-05, 1.90829999999996e-05, 1.9207999999999725e-05, 1.886099999999849e-05, 1.9235999999998865e-05, 1.937499999999856e-05, 1.9680000000001086e-05, 1.9277999999997575e-05, 1.9207999999999725e-05, 1.9443999999996936e-05, 1.9306000000000184e-05, 1.9000000000001654e-05, 1.9250000000001904e-05, 1.8971999999999045e-05, 1.936099999999899e-05, 1.9513999999998255e-05, 1.934699999999942e-05, 1.92089999999992e-05, 1.918100000000006e-05, 1.9472000000003015e-05, 1.9583999999999574e-05, 1.918100000000006e-05, 1.9000000000001654e-05, 1.972299999999927e-05, 1.962499999999881e-05, 1.9249999999998435e-05, 1.9180000000000585e-05, 1.9500000000002154e-05, 1.9680000000001086e-05, 1.9694000000000655e-05]</msg>
<status status="PASS" starttime="20201030 16:03:02.584" endtime="20201030 16:03:02.586"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.579" endtime="20201030 16:03:02.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:02.590" endtime="20201030 16:03:02.610"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.589" endtime="20201030 16:03:02.610"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.587" endtime="20201030 16:03:02.610"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.235" endtime="20201030 16:03:02.611"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.234" endtime="20201030 16:03:02.611"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.619" endtime="20201030 16:03:02.636"></status>
</kw>
<msg timestamp="20201030 16:03:02.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:02.618" endtime="20201030 16:03:02.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:02.638" endtime="20201030 16:03:02.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.640" endtime="20201030 16:03:02.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.615" endtime="20201030 16:03:02.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.613" endtime="20201030 16:03:02.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.649" endtime="20201030 16:03:02.935"></status>
</kw>
<msg timestamp="20201030 16:03:02.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020740194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020760667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:02.647" endtime="20201030 16:03:02.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020740194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020760667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:02.939" endtime="20201030 16:03:02.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:02.947" endtime="20201030 16:03:02.949"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.645" endtime="20201030 16:03:02.950"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.643" endtime="20201030 16:03:02.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:02.954" level="INFO">${RESULT} = [{'diff': 2.047300000000002e-05}, {'diff': 2.0320000000000754e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.041700000000174e-05}, {'diff': 2.0736000000000365e-05}, {'diff': 1.993100000000081e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:02.951" endtime="20201030 16:03:02.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:02.958" level="INFO">${ACCURACY} = {'diff': [2.047300000000002e-05, 2.0320000000000754e-05, 2.062499999999981e-05, 2.041700000000174e-05, 2.0736000000000365e-05, 1.993100000000081e-05, 2.0070000000000504e-05, 2.065300000000242e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 16:03:02.955" endtime="20201030 16:03:02.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.962" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 16:03:02.961" endtime="20201030 16:03:02.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:02.965" level="INFO">VALUE: [2.047300000000002e-05, 2.0320000000000754e-05, 2.062499999999981e-05, 2.041700000000174e-05, 2.0736000000000365e-05, 1.993100000000081e-05, 2.0070000000000504e-05, 2.065300000000242e-05, 2.018099999999759e-05, 2.0056000000000934e-05, 2.0722000000000795e-05, 2.059700000000067e-05, 2.015300000000192e-05, 2.062499999999981e-05, 2.087500000000006e-05, 2.0070000000000504e-05, 2.0499999999999685e-05, 2.0584000000000574e-05, 2.0362000000002933e-05, 2.022299999999977e-05, 2.018099999999759e-05, 1.9957999999997006e-05, 2.062499999999981e-05, 1.9930000000001336e-05, 2.054100000000239e-05, 2.054100000000239e-05, 2.0207999999997256e-05, 2.0235999999999865e-05, 2.0693999999998186e-05, 1.9916000000001766e-05, 2.0443999999997936e-05, 2.0165999999998546e-05, 2.0180000000001586e-05, 2.0527999999998825e-05, 2.0249999999999435e-05, 2.0570000000001004e-05, 2.0792000000002114e-05, 1.9999999999999185e-05, 1.986099999999949e-05, 1.9999999999999185e-05, 2.016700000000149e-05, 2.0320000000000754e-05, 2.0014000000002224e-05, 2.0888000000000156e-05, 2.011099999999974e-05, 2.009700000000017e-05, 2.034700000000042e-05, 2.0027999999998325e-05, 2.0249999999999435e-05, 1.993100000000081e-05]</msg>
<status status="PASS" starttime="20201030 16:03:02.963" endtime="20201030 16:03:02.966"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.959" endtime="20201030 16:03:02.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:02.971" endtime="20201030 16:03:02.990"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.969" endtime="20201030 16:03:02.991"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.968" endtime="20201030 16:03:02.991"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.612" endtime="20201030 16:03:02.991"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.611" endtime="20201030 16:03:02.991"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.000" endtime="20201030 16:03:03.015"></status>
</kw>
<msg timestamp="20201030 16:03:03.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:02.998" endtime="20201030 16:03:03.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:03.016" endtime="20201030 16:03:03.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.019" endtime="20201030 16:03:03.020"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.996" endtime="20201030 16:03:03.021"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.994" endtime="20201030 16:03:03.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.028" endtime="20201030 16:03:03.313"></status>
</kw>
<msg timestamp="20201030 16:03:03.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:03.026" endtime="20201030 16:03:03.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:03.318" endtime="20201030 16:03:03.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.326" endtime="20201030 16:03:03.327"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.023" endtime="20201030 16:03:03.328"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.022" endtime="20201030 16:03:03.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:03.332" level="INFO">${RESULT} = [{'diff': 2.144499999999841e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.093100000000181e-05}, {'diff': 2.166699999999952e-05}, {'diff': 2.09029999999992e-05}, {'diff': 2.1778000000000075e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:03.329" endtime="20201030 16:03:03.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:03.337" level="INFO">${ACCURACY} = {'diff': [2.144499999999841e-05, 2.087500000000006e-05, 2.093100000000181e-05, 2.166699999999952e-05, 2.09029999999992e-05, 2.1778000000000075e-05, 2.095900000000095e-05, 2.108299999999813e-05, 2.1236...</msg>
<status status="PASS" starttime="20201030 16:03:03.333" endtime="20201030 16:03:03.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.342" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 16:03:03.341" endtime="20201030 16:03:03.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.344" level="INFO">VALUE: [2.144499999999841e-05, 2.087500000000006e-05, 2.093100000000181e-05, 2.166699999999952e-05, 2.09029999999992e-05, 2.1778000000000075e-05, 2.095900000000095e-05, 2.108299999999813e-05, 2.1236000000000865e-05, 2.113899999999988e-05, 2.108299999999813e-05, 2.138899999999666e-05, 2.1222000000001295e-05, 2.104100000000289e-05, 2.111100000000074e-05, 2.112500000000031e-05, 2.10830000000016e-05, 2.08890000000031e-05, 2.1000000000000185e-05, 2.1429999999999366e-05, 2.111099999999727e-05, 2.136100000000099e-05, 2.0999999999996716e-05, 2.130499999999924e-05, 2.118099999999859e-05, 2.1541999999999395e-05, 2.1555999999998965e-05, 2.106899999999856e-05, 2.116700000000249e-05, 2.1791999999999645e-05, 2.1292000000002614e-05, 2.137500000000056e-05, 2.1819999999998785e-05, 2.144499999999841e-05, 2.137500000000056e-05, 2.1041999999998895e-05, 2.088899999999963e-05, 2.112500000000031e-05, 2.1485999999997646e-05, 2.113899999999988e-05, 2.087500000000006e-05, 2.144500000000188e-05, 2.1666000000000046e-05, 2.1305999999998715e-05, 2.168099999999909e-05, 2.1429999999999366e-05, 2.1013999999999755e-05, 2.097300000000052e-05, 2.0901999999999726e-05, 2.0943999999998436e-05]</msg>
<status status="PASS" starttime="20201030 16:03:03.343" endtime="20201030 16:03:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.338" endtime="20201030 16:03:03.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:03.349" endtime="20201030 16:03:03.368"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.347" endtime="20201030 16:03:03.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.346" endtime="20201030 16:03:03.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.992" endtime="20201030 16:03:03.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:02.992" endtime="20201030 16:03:03.370"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.378" endtime="20201030 16:03:03.394"></status>
</kw>
<msg timestamp="20201030 16:03:03.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:03.377" endtime="20201030 16:03:03.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:03.396" endtime="20201030 16:03:03.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.398" endtime="20201030 16:03:03.400"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.374" endtime="20201030 16:03:03.400"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.372" endtime="20201030 16:03:03.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.407" endtime="20201030 16:03:03.694"></status>
</kw>
<msg timestamp="20201030 16:03:03.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:03.406" endtime="20201030 16:03:03.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020105319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:03.698" endtime="20201030 16:03:03.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.707" endtime="20201030 16:03:03.708"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.403" endtime="20201030 16:03:03.709"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.401" endtime="20201030 16:03:03.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:03.713" level="INFO">${RESULT} = [{'diff': 2.226300000000153e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.261100000000224e-05}, {'diff': 2.2471999999999076e-05}, {'diff': 2.1985999999998146e-05}, {'diff': 2.2165999999997077e-05...</msg>
<status status="PASS" starttime="20201030 16:03:03.710" endtime="20201030 16:03:03.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:03.718" level="INFO">${ACCURACY} = {'diff': [2.226300000000153e-05, 2.2207999999999256e-05, 2.261100000000224e-05, 2.2471999999999076e-05, 2.1985999999998146e-05, 2.2165999999997077e-05, 2.2764000000001505e-05, 2.265300000000095e-05, 2...</msg>
<status status="PASS" starttime="20201030 16:03:03.714" endtime="20201030 16:03:03.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.723" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 16:03:03.721" endtime="20201030 16:03:03.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.725" level="INFO">VALUE: [2.226300000000153e-05, 2.2207999999999256e-05, 2.261100000000224e-05, 2.2471999999999076e-05, 2.1985999999998146e-05, 2.2165999999997077e-05, 2.2764000000001505e-05, 2.265300000000095e-05, 2.190299999999673e-05, 2.1957999999999006e-05, 2.2250000000001435e-05, 2.2792000000000645e-05, 2.2721999999999326e-05, 2.256900000000006e-05, 2.266700000000052e-05, 2.2292000000000145e-05, 2.2320000000002754e-05, 2.283299999999988e-05, 2.2528000000000825e-05, 2.27770000000016e-05, 2.1943999999999436e-05, 2.269500000000313e-05, 2.2458000000002976e-05, 2.2862000000001964e-05, 2.266700000000052e-05, 2.2278000000000575e-05, 2.2778000000001075e-05, 2.1888000000001157e-05, 2.215300000000045e-05, 2.191699999999977e-05, 2.2569999999999535e-05, 2.287500000000206e-05, 2.2665999999997577e-05, 2.244499999999941e-05, 2.184699999999845e-05, 2.2804999999997272e-05, 2.237500000000156e-05, 2.2013999999997286e-05, 2.2792000000000645e-05, 2.25969999999992e-05, 2.2443999999999936e-05, 2.2540999999997452e-05, 2.204100000000042e-05, 2.187500000000106e-05, 2.2471999999999076e-05, 2.2528000000000825e-05, 2.237499999999809e-05, 2.2457999999999506e-05, 2.208299999999913e-05, 2.268100000000009e-05]</msg>
<status status="PASS" starttime="20201030 16:03:03.724" endtime="20201030 16:03:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.719" endtime="20201030 16:03:03.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:03.730" endtime="20201030 16:03:03.750"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.729" endtime="20201030 16:03:03.750"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.728" endtime="20201030 16:03:03.750"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.370" endtime="20201030 16:03:03.751"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.370" endtime="20201030 16:03:03.751"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.759" endtime="20201030 16:03:03.775"></status>
</kw>
<msg timestamp="20201030 16:03:03.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:03.758" endtime="20201030 16:03:03.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:03.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:03.777" endtime="20201030 16:03:03.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.779" endtime="20201030 16:03:03.781"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.755" endtime="20201030 16:03:03.781"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.753" endtime="20201030 16:03:03.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:03.788" endtime="20201030 16:03:04.075"></status>
</kw>
<msg timestamp="20201030 16:03:04.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:03.787" endtime="20201030 16:03:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:04.079" endtime="20201030 16:03:04.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.087" endtime="20201030 16:03:04.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.784" endtime="20201030 16:03:04.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.782" endtime="20201030 16:03:04.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:04.094" level="INFO">${RESULT} = [{'diff': 2.391700000000177e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.2944000000000436e-05}, {'diff': 2.3778000000002075e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3832999999997412e-0...</msg>
<status status="PASS" starttime="20201030 16:03:04.090" endtime="20201030 16:03:04.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:04.098" level="INFO">${ACCURACY} = {'diff': [2.391700000000177e-05, 2.2985999999999146e-05, 2.2944000000000436e-05, 2.3778000000002075e-05, 2.3485999999999646e-05, 2.3832999999997412e-05, 2.294499999999991e-05, 2.3472000000000076e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:04.095" endtime="20201030 16:03:04.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.102" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 16:03:04.101" endtime="20201030 16:03:04.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.104" level="INFO">VALUE: [2.391700000000177e-05, 2.2985999999999146e-05, 2.2944000000000436e-05, 2.3778000000002075e-05, 2.3485999999999646e-05, 2.3832999999997412e-05, 2.294499999999991e-05, 2.3472000000000076e-05, 2.3708000000000756e-05, 2.336099999999952e-05, 2.3749999999999466e-05, 2.3735999999999896e-05, 2.290299999999773e-05, 2.319500000000016e-05, 2.3528000000001825e-05, 2.319500000000016e-05, 2.318100000000059e-05, 2.313900000000188e-05, 2.322300000000277e-05, 2.390299999999873e-05, 2.3763999999999036e-05, 2.2861999999998495e-05, 2.3513999999998786e-05, 2.2999999999998716e-05, 2.295899999999948e-05, 2.338900000000213e-05, 2.3651999999999007e-05, 2.2944000000000436e-05, 2.3318999999997342e-05, 2.3722000000000326e-05, 2.3277999999998106e-05, 2.3499999999999216e-05, 2.2916000000001296e-05, 2.3763999999999036e-05, 2.35970000000002e-05, 2.3554999999998022e-05, 2.3528000000001825e-05, 2.331900000000081e-05, 2.2971999999999576e-05, 2.316700000000102e-05, 2.336099999999952e-05, 2.3568999999997592e-05, 2.333300000000038e-05, 2.3485999999999646e-05, 2.3570000000000535e-05, 2.3527999999998356e-05, 2.3235999999999396e-05, 2.337500000000256e-05, 2.3791999999998176e-05, 2.3138000000002407e-05]</msg>
<status status="PASS" starttime="20201030 16:03:04.103" endtime="20201030 16:03:04.108"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.099" endtime="20201030 16:03:04.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:04.112" endtime="20201030 16:03:04.132"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.111" endtime="20201030 16:03:04.133"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.110" endtime="20201030 16:03:04.133"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.752" endtime="20201030 16:03:04.133"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:03.751" endtime="20201030 16:03:04.133"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.142" endtime="20201030 16:03:04.156"></status>
</kw>
<msg timestamp="20201030 16:03:04.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:04.140" endtime="20201030 16:03:04.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:04.158" endtime="20201030 16:03:04.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.160" endtime="20201030 16:03:04.162"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.138" endtime="20201030 16:03:04.162"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.136" endtime="20201030 16:03:04.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.169" endtime="20201030 16:03:04.456"></status>
</kw>
<msg timestamp="20201030 16:03:04.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019399042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:04.168" endtime="20201030 16:03:04.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019399042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:04.460" endtime="20201030 16:03:04.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.468" endtime="20201030 16:03:04.470"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.165" endtime="20201030 16:03:04.470"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.163" endtime="20201030 16:03:04.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:04.475" level="INFO">${RESULT} = [{'diff': 2.395899999999701e-05}, {'diff': 2.42230000000003e-05}, {'diff': 2.4304999999998772e-05}, {'diff': 2.391700000000177e-05}, {'diff': 2.4721999999997857e-05}, {'diff': 2.45970000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:04.471" endtime="20201030 16:03:04.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:04.480" level="INFO">${ACCURACY} = {'diff': [2.395899999999701e-05, 2.42230000000003e-05, 2.4304999999998772e-05, 2.391700000000177e-05, 2.4721999999997857e-05, 2.45970000000012e-05, 2.412499999999984e-05, 2.4070000000001035e-05, 2.476...</msg>
<status status="PASS" starttime="20201030 16:03:04.476" endtime="20201030 16:03:04.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.484" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 16:03:04.483" endtime="20201030 16:03:04.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.486" level="INFO">VALUE: [2.395899999999701e-05, 2.42230000000003e-05, 2.4304999999998772e-05, 2.391700000000177e-05, 2.4721999999997857e-05, 2.45970000000012e-05, 2.412499999999984e-05, 2.4070000000001035e-05, 2.4764000000000036e-05, 2.4500000000000216e-05, 2.388900000000263e-05, 2.4166000000002547e-05, 2.455500000000249e-05, 2.456900000000206e-05, 2.3930000000001866e-05, 2.466700000000252e-05, 2.388899999999916e-05, 2.456900000000206e-05, 2.4041999999998426e-05, 2.484700000000145e-05, 2.444500000000141e-05, 2.388899999999916e-05, 2.4527999999999356e-05, 2.4249999999999966e-05, 2.4570000000001535e-05, 2.4222000000000826e-05, 2.4263999999999536e-05, 2.391700000000177e-05, 2.4791999999999176e-05, 2.4361999999999995e-05, 2.4098000000000175e-05, 2.4320000000001285e-05, 2.4819999999998316e-05, 2.419500000000116e-05, 2.4334000000000855e-05, 2.433300000000138e-05, 2.4568999999998592e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4151999999999507e-05, 2.4540999999999452e-05, 2.4610999999997302e-05, 2.3901999999999257e-05, 2.443099999999837e-05, 2.4319999999997816e-05, 2.39030000000022e-05, 2.4207999999997787e-05, 2.4722000000001326e-05, 2.412499999999984e-05, 2.461100000000077e-05]</msg>
<status status="PASS" starttime="20201030 16:03:04.485" endtime="20201030 16:03:04.487"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.480" endtime="20201030 16:03:04.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:04.491" endtime="20201030 16:03:04.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.490" endtime="20201030 16:03:04.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.489" endtime="20201030 16:03:04.512"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.134" endtime="20201030 16:03:04.512"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.134" endtime="20201030 16:03:04.512"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.521" endtime="20201030 16:03:04.536"></status>
</kw>
<msg timestamp="20201030 16:03:04.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:04.519" endtime="20201030 16:03:04.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:04.538" endtime="20201030 16:03:04.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.540" endtime="20201030 16:03:04.542"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.516" endtime="20201030 16:03:04.542"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.514" endtime="20201030 16:03:04.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.549" endtime="20201030 16:03:04.836"></status>
</kw>
<msg timestamp="20201030 16:03:04.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:04.548" endtime="20201030 16:03:04.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:04.840" endtime="20201030 16:03:04.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.848" endtime="20201030 16:03:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.545" endtime="20201030 16:03:04.850"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.543" endtime="20201030 16:03:04.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:04.855" level="INFO">${RESULT} = [{'diff': 2.5750000000001466e-05}, {'diff': 2.5318999999999342e-05}, {'diff': 2.5110999999997802e-05}, {'diff': 2.5069999999998566e-05}, {'diff': 2.506900000000256e-05}, {'diff': 2.5486000000001646e-0...</msg>
<status status="PASS" starttime="20201030 16:03:04.852" endtime="20201030 16:03:04.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:04.859" level="INFO">${ACCURACY} = {'diff': [2.5750000000001466e-05, 2.5318999999999342e-05, 2.5110999999997802e-05, 2.5069999999998566e-05, 2.506900000000256e-05, 2.5486000000001646e-05, 2.5360999999998052e-05, 2.5236000000001396e-05,...</msg>
<status status="PASS" starttime="20201030 16:03:04.856" endtime="20201030 16:03:04.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.863" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 16:03:04.862" endtime="20201030 16:03:04.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.866" level="INFO">VALUE: [2.5750000000001466e-05, 2.5318999999999342e-05, 2.5110999999997802e-05, 2.5069999999998566e-05, 2.506900000000256e-05, 2.5486000000001646e-05, 2.5360999999998052e-05, 2.5236000000001396e-05, 2.4929999999999397e-05, 2.4957999999998537e-05, 2.5291999999999676e-05, 2.516699999999955e-05, 2.5513999999997317e-05, 2.5555999999999496e-05, 2.5570000000002535e-05, 2.5569999999999066e-05, 2.5332999999998912e-05, 2.5514000000000786e-05, 2.5860999999998552e-05, 2.487500000000059e-05, 2.565300000000048e-05, 2.5556000000002965e-05, 2.5792000000000176e-05, 2.5528000000000356e-05, 2.563900000000091e-05, 2.5347999999997956e-05, 2.5028000000003325e-05, 2.5834000000002355e-05, 2.5764000000001036e-05, 2.5098000000001175e-05, 2.5027000000000382e-05, 2.5291000000000202e-05, 2.5152000000000507e-05, 2.5318999999999342e-05, 2.5638000000001437e-05, 2.5583999999998636e-05, 2.5818999999999842e-05, 2.5110999999997802e-05, 2.5040999999999952e-05, 2.538900000000066e-05, 2.5027999999999856e-05, 2.5791000000000702e-05, 2.5485999999998177e-05, 2.5818999999999842e-05, 2.5721999999998857e-05, 2.5041999999999426e-05, 2.518099999999912e-05, 2.487500000000059e-05, 2.5360999999998052e-05, 2.5070000000002035e-05]</msg>
<status status="PASS" starttime="20201030 16:03:04.864" endtime="20201030 16:03:04.866"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.860" endtime="20201030 16:03:04.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:04.870" endtime="20201030 16:03:04.890"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.869" endtime="20201030 16:03:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.868" endtime="20201030 16:03:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.513" endtime="20201030 16:03:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.512" endtime="20201030 16:03:04.891"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.900" endtime="20201030 16:03:04.915"></status>
</kw>
<msg timestamp="20201030 16:03:04.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:04.898" endtime="20201030 16:03:04.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:04.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:04.916" endtime="20201030 16:03:04.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.919" endtime="20201030 16:03:04.920"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.896" endtime="20201030 16:03:04.921"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.894" endtime="20201030 16:03:04.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:04.928" endtime="20201030 16:03:05.214"></status>
</kw>
<msg timestamp="20201030 16:03:05.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:04.926" endtime="20201030 16:03:05.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020143861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:05.218" endtime="20201030 16:03:05.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.226" endtime="20201030 16:03:05.228"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.924" endtime="20201030 16:03:05.228"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.922" endtime="20201030 16:03:05.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:05.232" level="INFO">${RESULT} = [{'diff': 2.6471999999999607e-05}, {'diff': 2.6680000000001147e-05}, {'diff': 2.6264000000001536e-05}, {'diff': 2.665300000000148e-05}, {'diff': 2.6749999999998997e-05}, {'diff': 2.6082999999999662e-0...</msg>
<status status="PASS" starttime="20201030 16:03:05.229" endtime="20201030 16:03:05.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:05.236" level="INFO">${ACCURACY} = {'diff': [2.6471999999999607e-05, 2.6680000000001147e-05, 2.6264000000001536e-05, 2.665300000000148e-05, 2.6749999999998997e-05, 2.6082999999999662e-05, 2.666699999999758e-05, 2.588899999999769e-05, 2...</msg>
<status status="PASS" starttime="20201030 16:03:05.233" endtime="20201030 16:03:05.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.241" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 16:03:05.240" endtime="20201030 16:03:05.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.243" level="INFO">VALUE: [2.6471999999999607e-05, 2.6680000000001147e-05, 2.6264000000001536e-05, 2.665300000000148e-05, 2.6749999999998997e-05, 2.6082999999999662e-05, 2.666699999999758e-05, 2.588899999999769e-05, 2.6471999999999607e-05, 2.6514000000001786e-05, 2.6888999999998692e-05, 2.587500000000159e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6263999999998067e-05, 2.6069000000000092e-05, 2.6221999999999357e-05, 2.620899999999926e-05, 2.6721999999999857e-05, 2.6820000000000316e-05, 2.666699999999758e-05, 2.6165999999997608e-05, 2.6055999999999996e-05, 2.5874999999998122e-05, 2.62369999999984e-05, 2.6750000000002466e-05, 2.6806000000000746e-05, 2.6152000000001507e-05, 2.6526999999998413e-05, 2.6249999999998497e-05, 2.5943999999999967e-05, 2.6514000000001786e-05, 2.6180000000000647e-05, 2.6194000000000217e-05, 2.6694000000000717e-05, 2.6778000000001606e-05, 2.6235999999998927e-05, 2.6263999999998067e-05, 2.616700000000055e-05, 2.588900000000116e-05, 2.6360999999999052e-05, 2.6013999999997817e-05, 2.5874999999998122e-05, 2.6528000000001356e-05, 2.5943999999999967e-05, 2.669500000000019e-05, 2.6514000000001786e-05, 2.6124999999998372e-05, 2.6221999999999357e-05, 2.6570000000000066e-05]</msg>
<status status="PASS" starttime="20201030 16:03:05.242" endtime="20201030 16:03:05.245"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.237" endtime="20201030 16:03:05.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:05.249" endtime="20201030 16:03:05.268"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.248" endtime="20201030 16:03:05.269"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.246" endtime="20201030 16:03:05.269"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.892" endtime="20201030 16:03:05.270"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:04.892" endtime="20201030 16:03:05.270"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.278" endtime="20201030 16:03:05.295"></status>
</kw>
<msg timestamp="20201030 16:03:05.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:05.277" endtime="20201030 16:03:05.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:05.296" endtime="20201030 16:03:05.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.299" endtime="20201030 16:03:05.300"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.274" endtime="20201030 16:03:05.301"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.272" endtime="20201030 16:03:05.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.307" endtime="20201030 16:03:05.593"></status>
</kw>
<msg timestamp="20201030 16:03:05.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:05.306" endtime="20201030 16:03:05.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019884514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:05.597" endtime="20201030 16:03:05.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.605" endtime="20201030 16:03:05.607"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.303" endtime="20201030 16:03:05.608"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.302" endtime="20201030 16:03:05.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:05.612" level="INFO">${RESULT} = [{'diff': 2.7680000000002147e-05}, {'diff': 2.690300000000173e-05}, {'diff': 2.7055999999997526e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7249999999999497e-05}, {'diff': 2.697300000000305e-05...</msg>
<status status="PASS" starttime="20201030 16:03:05.609" endtime="20201030 16:03:05.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:05.617" level="INFO">${ACCURACY} = {'diff': [2.7680000000002147e-05, 2.690300000000173e-05, 2.7055999999997526e-05, 2.7013999999998817e-05, 2.7249999999999497e-05, 2.697300000000305e-05, 2.6901999999998788e-05, 2.7347000000000482e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:05.613" endtime="20201030 16:03:05.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.621" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 16:03:05.620" endtime="20201030 16:03:05.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.624" level="INFO">VALUE: [2.7680000000002147e-05, 2.690300000000173e-05, 2.7055999999997526e-05, 2.7013999999998817e-05, 2.7249999999999497e-05, 2.697300000000305e-05, 2.6901999999998788e-05, 2.7347000000000482e-05, 2.7791999999998707e-05, 2.7374999999999622e-05, 2.7597000000000732e-05, 2.6887999999999218e-05, 2.7305000000001772e-05, 2.7180000000001647e-05, 2.7861000000000552e-05, 2.7082999999997193e-05, 2.7541999999998457e-05, 2.7361000000000052e-05, 2.7792000000002176e-05, 2.6957999999997068e-05, 2.7611000000000302e-05, 2.7028000000001856e-05, 2.7069000000001092e-05, 2.7374999999999622e-05, 2.69170000000013e-05, 2.7805999999998277e-05, 2.745900000000051e-05, 2.7527999999998887e-05, 2.7305999999997776e-05, 2.7458000000001037e-05, 2.7818999999998373e-05, 2.7249999999999497e-05, 2.7527999999998887e-05, 2.695900000000001e-05, 2.686100000000302e-05, 2.7070000000000566e-05, 2.7362000000002995e-05, 2.7513999999999317e-05, 2.7179999999998178e-05, 2.715300000000198e-05, 2.7583000000001162e-05, 2.7193999999997748e-05, 2.6930000000001397e-05, 2.7777999999999137e-05, 2.7583000000001162e-05, 2.7764000000003036e-05, 2.7555000000002022e-05, 2.7722000000000857e-05, 2.6958000000000537e-05, 2.7791999999998707e-05]</msg>
<status status="PASS" starttime="20201030 16:03:05.622" endtime="20201030 16:03:05.624"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.618" endtime="20201030 16:03:05.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:05.629" endtime="20201030 16:03:05.648"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.627" endtime="20201030 16:03:05.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.626" endtime="20201030 16:03:05.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.271" endtime="20201030 16:03:05.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.270" endtime="20201030 16:03:05.649"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.658" endtime="20201030 16:03:05.673"></status>
</kw>
<msg timestamp="20201030 16:03:05.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:05.656" endtime="20201030 16:03:05.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:05.674" endtime="20201030 16:03:05.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.677" endtime="20201030 16:03:05.678"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.654" endtime="20201030 16:03:05.679"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.652" endtime="20201030 16:03:05.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.686" endtime="20201030 16:03:05.973"></status>
</kw>
<msg timestamp="20201030 16:03:05.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:05.684" endtime="20201030 16:03:05.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:05.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019311361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:05.978" endtime="20201030 16:03:05.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:05.986" endtime="20201030 16:03:05.988"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.681" endtime="20201030 16:03:05.988"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.680" endtime="20201030 16:03:05.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:05.993" level="INFO">${RESULT} = [{'diff': 2.8291999999999207e-05}, {'diff': 2.8554999999999553e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.8193999999998748e-05}, {'diff': 2.7958000000001537e-05}, {'diff': 2.818100000000212e-0...</msg>
<status status="PASS" starttime="20201030 16:03:05.989" endtime="20201030 16:03:05.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:05.997" level="INFO">${ACCURACY} = {'diff': [2.8291999999999207e-05, 2.8554999999999553e-05, 2.8472000000001607e-05, 2.8193999999998748e-05, 2.7958000000001537e-05, 2.818100000000212e-05, 2.8138999999999942e-05, 2.8402999999999762e-05,...</msg>
<status status="PASS" starttime="20201030 16:03:05.993" endtime="20201030 16:03:05.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.001" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 16:03:06.000" endtime="20201030 16:03:06.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.003" level="INFO">VALUE: [2.8291999999999207e-05, 2.8554999999999553e-05, 2.8472000000001607e-05, 2.8193999999998748e-05, 2.7958000000001537e-05, 2.818100000000212e-05, 2.8138999999999942e-05, 2.8402999999999762e-05, 2.8847000000001982e-05, 2.8514000000000317e-05, 2.8832999999998943e-05, 2.8791999999999707e-05, 2.8222000000001357e-05, 2.819500000000169e-05, 2.8070000000001566e-05, 2.8832999999998943e-05, 2.8084000000001136e-05, 2.7985999999997208e-05, 2.869499999999872e-05, 2.8749999999997528e-05, 2.8666000000000108e-05, 2.8054999999999053e-05, 2.8111000000000802e-05, 2.7986000000000677e-05, 2.8736000000001427e-05, 2.8264000000000067e-05, 2.8026999999999913e-05, 2.8165999999999608e-05, 2.8277999999999637e-05, 2.8027999999999387e-05, 2.8818999999999373e-05, 2.8486000000001177e-05, 2.8582999999998693e-05, 2.7915999999999358e-05, 2.8222000000001357e-05, 2.7861000000000552e-05, 2.7861000000000552e-05, 2.8013999999999817e-05, 2.8527999999999887e-05, 2.8193999999998748e-05, 2.8361000000001052e-05, 2.7972000000001107e-05, 2.8457999999998568e-05, 2.8264000000000067e-05, 2.8834000000001886e-05, 2.870900000000176e-05, 2.794500000000144e-05, 2.870899999999829e-05, 2.8402999999999762e-05, 2.8361000000001052e-05]</msg>
<status status="PASS" starttime="20201030 16:03:06.002" endtime="20201030 16:03:06.004"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.997" endtime="20201030 16:03:06.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:06.008" endtime="20201030 16:03:06.028"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.007" endtime="20201030 16:03:06.028"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.006" endtime="20201030 16:03:06.029"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.650" endtime="20201030 16:03:06.029"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:05.650" endtime="20201030 16:03:06.029"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.038" endtime="20201030 16:03:06.053"></status>
</kw>
<msg timestamp="20201030 16:03:06.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:06.036" endtime="20201030 16:03:06.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:06.055" endtime="20201030 16:03:06.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.057" endtime="20201030 16:03:06.059"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.033" endtime="20201030 16:03:06.060"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.031" endtime="20201030 16:03:06.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.066" endtime="20201030 16:03:06.352"></status>
</kw>
<msg timestamp="20201030 16:03:06.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:06.065" endtime="20201030 16:03:06.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020271208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:06.356" endtime="20201030 16:03:06.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.365" endtime="20201030 16:03:06.366"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.062" endtime="20201030 16:03:06.367"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.061" endtime="20201030 16:03:06.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:06.371" level="INFO">${RESULT} = [{'diff': 2.9763999999998098e-05}, {'diff': 2.9250000000001497e-05}, {'diff': 2.9055000000000053e-05}, {'diff': 2.9749999999998528e-05}, {'diff': 2.89309999999994e-05}, {'diff': 2.9055999999999527e-05...</msg>
<status status="PASS" starttime="20201030 16:03:06.368" endtime="20201030 16:03:06.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:06.375" level="INFO">${ACCURACY} = {'diff': [2.9763999999998098e-05, 2.9250000000001497e-05, 2.9055000000000053e-05, 2.9749999999998528e-05, 2.89309999999994e-05, 2.9055999999999527e-05, 2.9360999999998583e-05, 2.9513999999997848e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:06.372" endtime="20201030 16:03:06.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.379" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 16:03:06.378" endtime="20201030 16:03:06.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.382" level="INFO">VALUE: [2.9763999999998098e-05, 2.9250000000001497e-05, 2.9055000000000053e-05, 2.9749999999998528e-05, 2.89309999999994e-05, 2.9055999999999527e-05, 2.9360999999998583e-05, 2.9513999999997848e-05, 2.9389000000001192e-05, 2.9500000000001747e-05, 2.9055999999999527e-05, 2.8889000000000692e-05, 2.9042000000003426e-05, 2.8875000000001122e-05, 2.9860999999999083e-05, 2.9527999999997417e-05, 2.945899999999904e-05, 2.9764000000001567e-05, 2.8889000000000692e-05, 2.9653000000001012e-05, 2.8971999999998638e-05, 2.9193999999999748e-05, 2.9707999999999818e-05, 2.9000000000001247e-05, 2.8986000000001677e-05, 2.9082999999999193e-05, 2.8972000000002107e-05, 2.9541000000000983e-05, 2.9541000000000983e-05, 2.9305000000000303e-05, 2.8861000000001552e-05, 2.9193999999999748e-05, 2.9499999999998278e-05, 2.8875000000001122e-05, 2.9167000000000082e-05, 2.8875000000001122e-05, 2.9471999999999138e-05, 2.9111000000001802e-05, 2.894500000000244e-05, 2.9014000000000817e-05, 2.940199999999782e-05, 2.89309999999994e-05, 2.9499999999998278e-05, 2.9291000000000733e-05, 2.9055999999999527e-05, 2.945899999999904e-05, 2.9235999999998458e-05, 2.9249999999998028e-05, 2.9555000000000553e-05, 2.9332999999999443e-05]</msg>
<status status="PASS" starttime="20201030 16:03:06.380" endtime="20201030 16:03:06.383"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.376" endtime="20201030 16:03:06.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:06.388" endtime="20201030 16:03:06.407"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.386" endtime="20201030 16:03:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.385" endtime="20201030 16:03:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.030" endtime="20201030 16:03:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.029" endtime="20201030 16:03:06.409"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.417" endtime="20201030 16:03:06.433"></status>
</kw>
<msg timestamp="20201030 16:03:06.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:06.415" endtime="20201030 16:03:06.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:06.435" endtime="20201030 16:03:06.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.438" endtime="20201030 16:03:06.439"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.413" endtime="20201030 16:03:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.411" endtime="20201030 16:03:06.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.446" endtime="20201030 16:03:06.732"></status>
</kw>
<msg timestamp="20201030 16:03:06.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:06.445" endtime="20201030 16:03:06.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:06.736" endtime="20201030 16:03:06.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.745" endtime="20201030 16:03:06.746"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.442" endtime="20201030 16:03:06.747"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.441" endtime="20201030 16:03:06.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:06.751" level="INFO">${RESULT} = [{'diff': 2.9917000000000832e-05}, {'diff': 3.0584000000000167e-05}, {'diff': 3.020899999999979e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.084700000000051e-05}, {'diff': 3.066600000000211e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:06.748" endtime="20201030 16:03:06.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:06.756" level="INFO">${ACCURACY} = {'diff': [2.9917000000000832e-05, 3.0584000000000167e-05, 3.020899999999979e-05, 3.063899999999897e-05, 3.084700000000051e-05, 3.066600000000211e-05, 2.9999999999998778e-05, 2.9916000000001358e-05, 3....</msg>
<status status="PASS" starttime="20201030 16:03:06.752" endtime="20201030 16:03:06.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.761" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 16:03:06.760" endtime="20201030 16:03:06.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.764" level="INFO">VALUE: [2.9917000000000832e-05, 3.0584000000000167e-05, 3.020899999999979e-05, 3.063899999999897e-05, 3.084700000000051e-05, 3.066600000000211e-05, 2.9999999999998778e-05, 2.9916000000001358e-05, 3.061099999999983e-05, 3.070800000000082e-05, 3.0388999999998723e-05, 3.0000000000002247e-05, 3.0263999999998598e-05, 2.9985999999999208e-05, 3.052799999999842e-05, 3.0069000000000623e-05, 2.9930000000000928e-05, 3.0208000000000318e-05, 3.055600000000103e-05, 2.9916999999997362e-05, 3.0389000000002192e-05, 3.0596999999996793e-05, 3.0333000000000443e-05, 3.0526999999998944e-05, 3.0138999999998473e-05, 3.0181000000000652e-05, 3.0750000000003e-05, 3.055600000000103e-05, 3.06249999999994e-05, 2.9889000000001692e-05, 3.0319000000000873e-05, 3.0472000000000138e-05, 3.0333999999999917e-05, 3.0597999999999737e-05, 3.0042000000000957e-05, 3.0235999999999458e-05, 3.068000000000168e-05, 3.061099999999983e-05, 2.9931000000000402e-05, 3.0403000000001762e-05, 3.059700000000026e-05, 2.9888999999998223e-05, 3.079199999999824e-05, 3.0054999999997584e-05, 2.994499999999997e-05, 3.0804999999998334e-05, 3.0458000000000568e-05, 3.05700000000006e-05, 3.065300000000201e-05, 2.9875000000002122e-05]</msg>
<status status="PASS" starttime="20201030 16:03:06.762" endtime="20201030 16:03:06.765"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.757" endtime="20201030 16:03:06.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:06.769" endtime="20201030 16:03:06.789"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.768" endtime="20201030 16:03:06.789"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.766" endtime="20201030 16:03:06.789"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.409" endtime="20201030 16:03:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.409" endtime="20201030 16:03:06.790"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.798" endtime="20201030 16:03:06.814"></status>
</kw>
<msg timestamp="20201030 16:03:06.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:06.797" endtime="20201030 16:03:06.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:06.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:06.816" endtime="20201030 16:03:06.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.819" endtime="20201030 16:03:06.821"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.794" endtime="20201030 16:03:06.822"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.792" endtime="20201030 16:03:06.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:06.829" endtime="20201030 16:03:07.116"></status>
</kw>
<msg timestamp="20201030 16:03:07.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:06.828" endtime="20201030 16:03:07.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:07.120" endtime="20201030 16:03:07.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.128" endtime="20201030 16:03:07.130"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.825" endtime="20201030 16:03:07.130"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.823" endtime="20201030 16:03:07.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:07.135" level="INFO">${RESULT} = [{'diff': 3.101399999999935e-05}, {'diff': 3.155600000000203e-05}, {'diff': 3.086100000000008e-05}, {'diff': 3.127800000000264e-05}, {'diff': 3.120799999999785e-05}, {'diff': 3.137500000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:07.132" endtime="20201030 16:03:07.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:07.139" level="INFO">${ACCURACY} = {'diff': [3.101399999999935e-05, 3.155600000000203e-05, 3.086100000000008e-05, 3.127800000000264e-05, 3.120799999999785e-05, 3.137500000000015e-05, 3.1346999999997543e-05, 3.1818999999998904e-05, 3.11...</msg>
<status status="PASS" starttime="20201030 16:03:07.136" endtime="20201030 16:03:07.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.143" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 16:03:07.142" endtime="20201030 16:03:07.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.146" level="INFO">VALUE: [3.101399999999935e-05, 3.155600000000203e-05, 3.086100000000008e-05, 3.127800000000264e-05, 3.120799999999785e-05, 3.137500000000015e-05, 3.1346999999997543e-05, 3.1818999999998904e-05, 3.115299999999904e-05, 3.116699999999861e-05, 3.097200000000064e-05, 3.140299999999929e-05, 3.147200000000114e-05, 3.137500000000015e-05, 3.1598000000000737e-05, 3.16250000000004e-05, 3.170799999999835e-05, 3.181999999999838e-05, 3.148599999999724e-05, 3.116700000000208e-05, 3.122200000000089e-05, 3.095900000000054e-05, 3.145900000000104e-05, 3.179199999999924e-05, 3.109700000000076e-05, 3.090300000000226e-05, 3.136100000000058e-05, 3.138800000000025e-05, 3.165200000000007e-05, 3.166599999999964e-05, 3.165299999999954e-05, 3.1568999999998654e-05, 3.102800000000239e-05, 3.172199999999792e-05, 3.149999999999681e-05, 3.141699999999886e-05, 3.120800000000132e-05, 3.136100000000058e-05, 3.113899999999947e-05, 3.11249999999999e-05, 3.172200000000139e-05, 3.14579999999981e-05, 3.165300000000301e-05, 3.150000000000028e-05, 3.104199999999849e-05, 3.125000000000003e-05, 3.131999999999788e-05, 3.15839999999977e-05, 3.099999999999978e-05, 3.099999999999978e-05]</msg>
<status status="PASS" starttime="20201030 16:03:07.144" endtime="20201030 16:03:07.147"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.140" endtime="20201030 16:03:07.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:07.151" endtime="20201030 16:03:07.170"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.149" endtime="20201030 16:03:07.171"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.148" endtime="20201030 16:03:07.171"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.791" endtime="20201030 16:03:07.171"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:06.790" endtime="20201030 16:03:07.172"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.180" endtime="20201030 16:03:07.196"></status>
</kw>
<msg timestamp="20201030 16:03:07.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:07.179" endtime="20201030 16:03:07.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:07.197" endtime="20201030 16:03:07.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.200" endtime="20201030 16:03:07.201"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.176" endtime="20201030 16:03:07.202"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.174" endtime="20201030 16:03:07.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.209" endtime="20201030 16:03:07.495"></status>
</kw>
<msg timestamp="20201030 16:03:07.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:07.207" endtime="20201030 16:03:07.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:07.499" endtime="20201030 16:03:07.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.507" endtime="20201030 16:03:07.509"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.204" endtime="20201030 16:03:07.509"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.203" endtime="20201030 16:03:07.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:07.514" level="INFO">${RESULT} = [{'diff': 3.240300000000029e-05}, {'diff': 3.233400000000192e-05}, {'diff': 3.261100000000183e-05}, {'diff': 3.2860999999998614e-05}, {'diff': 3.19310000000024e-05}, {'diff': 3.234700000000201e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:07.511" endtime="20201030 16:03:07.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:07.518" level="INFO">${ACCURACY} = {'diff': [3.240300000000029e-05, 3.233400000000192e-05, 3.261100000000183e-05, 3.2860999999998614e-05, 3.19310000000024e-05, 3.234700000000201e-05, 3.251400000000085e-05, 3.273600000000196e-05, 3.2750...</msg>
<status status="PASS" starttime="20201030 16:03:07.515" endtime="20201030 16:03:07.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.522" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 16:03:07.521" endtime="20201030 16:03:07.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.528" level="INFO">VALUE: [3.240300000000029e-05, 3.233400000000192e-05, 3.261100000000183e-05, 3.2860999999998614e-05, 3.19310000000024e-05, 3.234700000000201e-05, 3.251400000000085e-05, 3.273600000000196e-05, 3.275000000000153e-05, 3.191599999999989e-05, 3.2610999999998364e-05, 3.2568999999999654e-05, 3.213900000000047e-05, 3.2596999999998794e-05, 3.237500000000115e-05, 3.209700000000176e-05, 3.2832999999999474e-05, 3.279200000000024e-05, 3.238900000000072e-05, 3.219399999999928e-05, 3.220800000000232e-05, 3.220800000000232e-05, 3.273599999999849e-05, 3.275000000000153e-05, 3.272199999999892e-05, 3.205600000000253e-05, 3.200000000000078e-05, 3.240300000000029e-05, 3.254199999999999e-05, 3.236199999999759e-05, 3.227800000000017e-05, 3.191699999999936e-05, 3.2596999999998794e-05, 3.2527000000000944e-05, 3.216600000000014e-05, 3.2068999999999154e-05, 3.220900000000179e-05, 3.240200000000082e-05, 3.2791000000000764e-05, 3.268099999999968e-05, 3.241699999999986e-05, 3.2860999999998614e-05, 3.259700000000226e-05, 3.215300000000004e-05, 3.2832999999999474e-05, 3.219499999999875e-05, 3.229199999999974e-05, 3.222199999999842e-05, 3.1860999999997613e-05, 3.195899999999807e-05]</msg>
<status status="PASS" starttime="20201030 16:03:07.523" endtime="20201030 16:03:07.529"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.519" endtime="20201030 16:03:07.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:07.533" endtime="20201030 16:03:07.552"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.531" endtime="20201030 16:03:07.553"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.530" endtime="20201030 16:03:07.553"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.172" endtime="20201030 16:03:07.553"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.172" endtime="20201030 16:03:07.554"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.562" endtime="20201030 16:03:07.578"></status>
</kw>
<msg timestamp="20201030 16:03:07.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:07.561" endtime="20201030 16:03:07.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:07.579" endtime="20201030 16:03:07.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.582" endtime="20201030 16:03:07.583"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.558" endtime="20201030 16:03:07.584"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.556" endtime="20201030 16:03:07.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.591" endtime="20201030 16:03:07.877"></status>
</kw>
<msg timestamp="20201030 16:03:07.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019287, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:07.589" endtime="20201030 16:03:07.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019287, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:07.881" endtime="20201030 16:03:07.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.890" endtime="20201030 16:03:07.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.586" endtime="20201030 16:03:07.892"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.585" endtime="20201030 16:03:07.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:07.896" level="INFO">${RESULT} = [{'diff': 3.347199999999967e-05}, {'diff': 3.347199999999967e-05}, {'diff': 3.320800000000332e-05}, {'diff': 3.319400000000028e-05}, {'diff': 3.3319000000000404e-05}, {'diff': 3.3096999999999294e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:07.893" endtime="20201030 16:03:07.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:07.901" level="INFO">${ACCURACY} = {'diff': [3.347199999999967e-05, 3.347199999999967e-05, 3.320800000000332e-05, 3.319400000000028e-05, 3.3319000000000404e-05, 3.3096999999999294e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3....</msg>
<status status="PASS" starttime="20201030 16:03:07.897" endtime="20201030 16:03:07.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.905" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 16:03:07.904" endtime="20201030 16:03:07.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.908" level="INFO">VALUE: [3.347199999999967e-05, 3.347199999999967e-05, 3.320800000000332e-05, 3.319400000000028e-05, 3.3319000000000404e-05, 3.3096999999999294e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.3624999999998934e-05, 3.291700000000036e-05, 3.330599999999684e-05, 3.301399999999788e-05, 3.354199999999752e-05, 3.294400000000003e-05, 3.34580000000001e-05, 3.306999999999963e-05, 3.365299999999807e-05, 3.380600000000081e-05, 3.348600000000271e-05, 3.29579999999996e-05, 3.3026999999997975e-05, 3.294400000000003e-05, 3.3874999999999184e-05, 3.3777000000002194e-05, 3.294400000000003e-05, 3.319400000000028e-05, 3.3346999999999544e-05, 3.3833000000000474e-05, 3.3305000000000834e-05, 3.3138999999998e-05, 3.351400000000185e-05, 3.3069000000000154e-05, 3.299999999999831e-05, 3.316699999999714e-05, 3.329200000000074e-05, 3.322199999999942e-05, 3.344400000000053e-05, 3.297299999999864e-05, 3.3833000000000474e-05, 3.347199999999967e-05, 3.318100000000018e-05, 3.366699999999764e-05, 3.340299999999782e-05, 3.348699999999871e-05, 3.325000000000203e-05, 3.298599999999874e-05, 3.359700000000326e-05, 3.334700000000301e-05, 3.370800000000035e-05, 3.367999999999774e-05]</msg>
<status status="PASS" starttime="20201030 16:03:07.906" endtime="20201030 16:03:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.902" endtime="20201030 16:03:07.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:07.913" endtime="20201030 16:03:07.932"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.911" endtime="20201030 16:03:07.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.910" endtime="20201030 16:03:07.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.554" endtime="20201030 16:03:07.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.554" endtime="20201030 16:03:07.933"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.942" endtime="20201030 16:03:07.958"></status>
</kw>
<msg timestamp="20201030 16:03:07.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:07.940" endtime="20201030 16:03:07.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:07.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:07.959" endtime="20201030 16:03:07.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.962" endtime="20201030 16:03:07.963"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.938" endtime="20201030 16:03:07.964"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.936" endtime="20201030 16:03:07.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:07.971" endtime="20201030 16:03:08.256"></status>
</kw>
<msg timestamp="20201030 16:03:08.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:07.969" endtime="20201030 16:03:08.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:08.261" endtime="20201030 16:03:08.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.269" endtime="20201030 16:03:08.270"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.967" endtime="20201030 16:03:08.271"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.965" endtime="20201030 16:03:08.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:08.275" level="INFO">${RESULT} = [{'diff': 3.477800000000267e-05}, {'diff': 3.4138999999999003e-05}, {'diff': 3.420799999999738e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.40840000000002e-05}, {'diff': 3.438900000000272e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:08.272" endtime="20201030 16:03:08.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:08.279" level="INFO">${ACCURACY} = {'diff': [3.477800000000267e-05, 3.4138999999999003e-05, 3.420799999999738e-05, 3.475000000000006e-05, 3.40840000000002e-05, 3.438900000000272e-05, 3.4833000000001474e-05, 3.4875000000000184e-05, 3.41...</msg>
<status status="PASS" starttime="20201030 16:03:08.276" endtime="20201030 16:03:08.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.283" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 16:03:08.283" endtime="20201030 16:03:08.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.286" level="INFO">VALUE: [3.477800000000267e-05, 3.4138999999999003e-05, 3.420799999999738e-05, 3.475000000000006e-05, 3.40840000000002e-05, 3.438900000000272e-05, 3.4833000000001474e-05, 3.4875000000000184e-05, 3.418099999999771e-05, 3.443100000000143e-05, 3.426399999999913e-05, 3.4304999999998365e-05, 3.484799999999705e-05, 3.3874999999999184e-05, 3.447300000000014e-05, 3.4388999999999253e-05, 3.411200000000281e-05, 3.473699999999996e-05, 3.395900000000007e-05, 3.388900000000222e-05, 3.4833000000001474e-05, 3.393000000000146e-05, 3.419400000000128e-05, 3.4611000000000364e-05, 3.39580000000006e-05, 3.426399999999913e-05, 3.4846999999997574e-05, 3.4652999999999073e-05, 3.423599999999999e-05, 3.401399999999888e-05, 3.479200000000224e-05, 3.401399999999888e-05, 3.441700000000186e-05, 3.447200000000067e-05, 3.4097000000000294e-05, 3.4304999999998365e-05, 3.465300000000254e-05, 3.4445000000001e-05, 3.44719999999972e-05, 3.443100000000143e-05, 3.469500000000125e-05, 3.418099999999771e-05, 3.393100000000093e-05, 3.47779999999992e-05, 3.422200000000042e-05, 3.483400000000095e-05, 3.472200000000092e-05, 3.4318999999997934e-05, 3.472199999999745e-05, 3.4110999999999864e-05]</msg>
<status status="PASS" starttime="20201030 16:03:08.285" endtime="20201030 16:03:08.287"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.280" endtime="20201030 16:03:08.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:08.291" endtime="20201030 16:03:08.310"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.289" endtime="20201030 16:03:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.288" endtime="20201030 16:03:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.934" endtime="20201030 16:03:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:07.934" endtime="20201030 16:03:08.312"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.320" endtime="20201030 16:03:08.336"></status>
</kw>
<msg timestamp="20201030 16:03:08.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:08.319" endtime="20201030 16:03:08.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:08.338" endtime="20201030 16:03:08.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.340" endtime="20201030 16:03:08.342"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.316" endtime="20201030 16:03:08.342"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.314" endtime="20201030 16:03:08.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.349" endtime="20201030 16:03:08.635"></status>
</kw>
<msg timestamp="20201030 16:03:08.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020146833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:08.348" endtime="20201030 16:03:08.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020146833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:08.639" endtime="20201030 16:03:08.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.647" endtime="20201030 16:03:08.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.345" endtime="20201030 16:03:08.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.343" endtime="20201030 16:03:08.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:08.654" level="INFO">${RESULT} = [{'diff': 3.580599999999934e-05}, {'diff': 3.533399999999798e-05}, {'diff': 3.520900000000132e-05}, {'diff': 3.531999999999841e-05}, {'diff': 3.5653000000000074e-05}, {'diff': 3.548700000000071e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:08.650" endtime="20201030 16:03:08.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:08.658" level="INFO">${ACCURACY} = {'diff': [3.580599999999934e-05, 3.533399999999798e-05, 3.520900000000132e-05, 3.531999999999841e-05, 3.5653000000000074e-05, 3.548700000000071e-05, 3.483400000000095e-05, 3.5054999999999115e-05, 3.49...</msg>
<status status="PASS" starttime="20201030 16:03:08.655" endtime="20201030 16:03:08.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.662" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 16:03:08.661" endtime="20201030 16:03:08.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.664" level="INFO">VALUE: [3.580599999999934e-05, 3.533399999999798e-05, 3.520900000000132e-05, 3.531999999999841e-05, 3.5653000000000074e-05, 3.548700000000071e-05, 3.483400000000095e-05, 3.5054999999999115e-05, 3.497300000000064e-05, 3.550000000000081e-05, 3.51520000000001e-05, 3.575000000000106e-05, 3.4888999999999754e-05, 3.5111000000000864e-05, 3.5791000000000295e-05, 3.5139000000000004e-05, 3.519400000000228e-05, 3.579199999999977e-05, 3.543099999999896e-05, 3.5653000000000074e-05, 3.519399999999881e-05, 3.493000000000246e-05, 3.5583000000002224e-05, 3.531999999999841e-05, 3.5861000000001614e-05, 3.500000000000031e-05, 3.576400000000063e-05, 3.581999999999891e-05, 3.49450000000015e-05, 3.529199999999927e-05, 3.495900000000107e-05, 3.492999999999899e-05, 3.494399999999856e-05, 3.550000000000081e-05, 3.5082999999998254e-05, 3.5152999999999573e-05, 3.5110999999997394e-05, 3.51520000000001e-05, 3.5111000000000864e-05, 3.491699999999889e-05, 3.5582999999998755e-05, 3.520799999999838e-05, 3.5375000000000684e-05, 3.501399999999988e-05, 3.526400000000013e-05, 3.5388999999996784e-05, 3.522199999999795e-05, 3.5582999999998755e-05, 3.5097000000001294e-05, 3.576400000000063e-05]</msg>
<status status="PASS" starttime="20201030 16:03:08.663" endtime="20201030 16:03:08.666"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.659" endtime="20201030 16:03:08.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:08.670" endtime="20201030 16:03:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.669" endtime="20201030 16:03:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.668" endtime="20201030 16:03:08.690"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.313" endtime="20201030 16:03:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.312" endtime="20201030 16:03:08.691"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.700" endtime="20201030 16:03:08.715"></status>
</kw>
<msg timestamp="20201030 16:03:08.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:08.698" endtime="20201030 16:03:08.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:08.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:08.716" endtime="20201030 16:03:08.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.719" endtime="20201030 16:03:08.720"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.695" endtime="20201030 16:03:08.721"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.693" endtime="20201030 16:03:08.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:08.728" endtime="20201030 16:03:09.014"></status>
</kw>
<msg timestamp="20201030 16:03:09.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:08.726" endtime="20201030 16:03:09.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019479917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019516583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:09.019" endtime="20201030 16:03:09.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.027" endtime="20201030 16:03:09.028"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.724" endtime="20201030 16:03:09.029"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.722" endtime="20201030 16:03:09.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:09.033" level="INFO">${RESULT} = [{'diff': 3.666600000000117e-05}, {'diff': 3.5875000000001184e-05}, {'diff': 3.6139000000001004e-05}, {'diff': 3.6082999999999255e-05}, {'diff': 3.6569000000000185e-05}, {'diff': 3.592999999999999e-05...</msg>
<status status="PASS" starttime="20201030 16:03:09.030" endtime="20201030 16:03:09.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:09.038" level="INFO">${ACCURACY} = {'diff': [3.666600000000117e-05, 3.5875000000001184e-05, 3.6139000000001004e-05, 3.6082999999999255e-05, 3.6569000000000185e-05, 3.592999999999999e-05, 3.62780000000007e-05, 3.593099999999946e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 16:03:09.034" endtime="20201030 16:03:09.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.043" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 16:03:09.042" endtime="20201030 16:03:09.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.045" level="INFO">VALUE: [3.666600000000117e-05, 3.5875000000001184e-05, 3.6139000000001004e-05, 3.6082999999999255e-05, 3.6569000000000185e-05, 3.592999999999999e-05, 3.62780000000007e-05, 3.593099999999946e-05, 3.6639000000001504e-05, 3.674999999999859e-05, 3.6374999999998214e-05, 3.680600000000034e-05, 3.672299999999892e-05, 3.6180999999999713e-05, 3.620900000000232e-05, 3.672300000000239e-05, 3.654200000000052e-05, 3.675000000000206e-05, 3.594499999999903e-05, 3.630600000000331e-05, 3.683400000000295e-05, 3.6013000000001405e-05, 3.676399999999816e-05, 3.6597000000002794e-05, 3.591600000000042e-05, 3.6582999999999755e-05, 3.6291000000000795e-05, 3.594399999999956e-05, 3.6653000000001074e-05, 3.6332999999999505e-05, 3.602800000000045e-05, 3.6639000000001504e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6347000000002544e-05, 3.593099999999946e-05, 3.6846999999999575e-05, 3.654200000000052e-05, 3.623599999999852e-05, 3.604200000000002e-05, 3.620799999999938e-05, 3.6167000000000143e-05, 3.6430999999999963e-05, 3.6569000000000185e-05, 3.61520000000011e-05, 3.6138999999997534e-05, 3.594399999999956e-05, 3.6291000000000795e-05, 3.66659999999977e-05, 3.644400000000006e-05]</msg>
<status status="PASS" starttime="20201030 16:03:09.044" endtime="20201030 16:03:09.046"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.039" endtime="20201030 16:03:09.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:09.050" endtime="20201030 16:03:09.069"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.048" endtime="20201030 16:03:09.070"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.047" endtime="20201030 16:03:09.070"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.692" endtime="20201030 16:03:09.071"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:08.691" endtime="20201030 16:03:09.071"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.079" endtime="20201030 16:03:09.095"></status>
</kw>
<msg timestamp="20201030 16:03:09.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:09.078" endtime="20201030 16:03:09.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:09.097" endtime="20201030 16:03:09.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.099" endtime="20201030 16:03:09.101"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.075" endtime="20201030 16:03:09.101"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.073" endtime="20201030 16:03:09.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.108" endtime="20201030 16:03:09.396"></status>
</kw>
<msg timestamp="20201030 16:03:09.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01946575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:09.107" endtime="20201030 16:03:09.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01946575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:09.400" endtime="20201030 16:03:09.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.409" endtime="20201030 16:03:09.410"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.104" endtime="20201030 16:03:09.411"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.102" endtime="20201030 16:03:09.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:09.415" level="INFO">${RESULT} = [{'diff': 3.7167000000001144e-05}, {'diff': 3.705600000000059e-05}, {'diff': 3.706999999999669e-05}, {'diff': 3.761199999999937e-05}, {'diff': 3.7125000000002434e-05}, {'diff': 3.749999999999934e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:09.412" endtime="20201030 16:03:09.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:09.419" level="INFO">${ACCURACY} = {'diff': [3.7167000000001144e-05, 3.705600000000059e-05, 3.706999999999669e-05, 3.761199999999937e-05, 3.7125000000002434e-05, 3.749999999999934e-05, 3.7403000000001824e-05, 3.752799999999848e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 16:03:09.416" endtime="20201030 16:03:09.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.423" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 16:03:09.422" endtime="20201030 16:03:09.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.426" level="INFO">VALUE: [3.7167000000001144e-05, 3.705600000000059e-05, 3.706999999999669e-05, 3.761199999999937e-05, 3.7125000000002434e-05, 3.749999999999934e-05, 3.7403000000001824e-05, 3.752799999999848e-05, 3.7181000000000713e-05, 3.713799999999906e-05, 3.723599999999952e-05, 3.7124999999998964e-05, 3.7374999999999214e-05, 3.7874999999999714e-05, 3.7639000000002504e-05, 3.7417000000001394e-05, 3.7375000000002684e-05, 3.716600000000167e-05, 3.7319000000000935e-05, 3.7568999999997715e-05, 3.69719999999997e-05, 3.7638999999999034e-05, 3.695800000000013e-05, 3.7568999999997715e-05, 3.7167000000001144e-05, 3.7167000000001144e-05, 3.69719999999997e-05, 3.757000000000066e-05, 3.700000000000231e-05, 3.6903000000001324e-05, 3.733399999999998e-05, 3.6889000000001754e-05, 3.786199999999962e-05, 3.698700000000221e-05, 3.7110999999999394e-05, 3.7096999999999825e-05, 3.7319000000000935e-05, 3.7124999999998964e-05, 3.7554999999998145e-05, 3.701399999999841e-05, 3.740200000000235e-05, 3.6874999999998714e-05, 3.7139000000002004e-05, 3.7181000000000713e-05, 3.7554999999998145e-05, 3.72780000000017e-05, 3.698599999999927e-05, 3.7583000000000755e-05, 3.7652999999998604e-05, 3.704199999999755e-05]</msg>
<status status="PASS" starttime="20201030 16:03:09.424" endtime="20201030 16:03:09.427"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.420" endtime="20201030 16:03:09.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:09.431" endtime="20201030 16:03:09.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.429" endtime="20201030 16:03:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.428" endtime="20201030 16:03:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.072" endtime="20201030 16:03:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.071" endtime="20201030 16:03:09.451"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.460" endtime="20201030 16:03:09.477"></status>
</kw>
<msg timestamp="20201030 16:03:09.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:09.458" endtime="20201030 16:03:09.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:09.478" endtime="20201030 16:03:09.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.481" endtime="20201030 16:03:09.482"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.456" endtime="20201030 16:03:09.483"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.454" endtime="20201030 16:03:09.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.490" endtime="20201030 16:03:09.775"></status>
</kw>
<msg timestamp="20201030 16:03:09.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:09.488" endtime="20201030 16:03:09.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020523764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:09.780" endtime="20201030 16:03:09.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.788" endtime="20201030 16:03:09.790"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.485" endtime="20201030 16:03:09.790"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.484" endtime="20201030 16:03:09.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:09.794" level="INFO">${RESULT} = [{'diff': 3.873600000000102e-05}, {'diff': 3.850000000000034e-05}, {'diff': 3.8639000000000034e-05}, {'diff': 3.831999999999794e-05}, {'diff': 3.827799999999923e-05}, {'diff': 3.875000000000059e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:09.791" endtime="20201030 16:03:09.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:09.799" level="INFO">${ACCURACY} = {'diff': [3.873600000000102e-05, 3.850000000000034e-05, 3.8639000000000034e-05, 3.831999999999794e-05, 3.827799999999923e-05, 3.875000000000059e-05, 3.7888999999999284e-05, 3.8388999999999784e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 16:03:09.795" endtime="20201030 16:03:09.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.803" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 16:03:09.802" endtime="20201030 16:03:09.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.806" level="INFO">VALUE: [3.873600000000102e-05, 3.850000000000034e-05, 3.8639000000000034e-05, 3.831999999999794e-05, 3.827799999999923e-05, 3.875000000000059e-05, 3.7888999999999284e-05, 3.8388999999999784e-05, 3.808400000000073e-05, 3.786199999999962e-05, 3.8040999999999076e-05, 3.8083000000001255e-05, 3.8554999999999146e-05, 3.8568999999998715e-05, 3.8361000000000645e-05, 3.822200000000095e-05, 3.7888999999999284e-05, 3.8527000000000006e-05, 3.822199999999748e-05, 3.7889000000002754e-05, 3.8540999999999576e-05, 3.7847000000000575e-05, 3.8902999999999854e-05, 3.880600000000234e-05, 3.79720000000007e-05, 3.8875000000000715e-05, 3.804200000000202e-05, 3.823600000000052e-05, 3.8124999999999964e-05, 3.7847000000000575e-05, 3.8082999999997785e-05, 3.7888999999999284e-05, 3.830600000000184e-05, 3.856999999999819e-05, 3.850000000000034e-05, 3.82919999999988e-05, 3.825000000000009e-05, 3.8319000000001935e-05, 3.799999999999984e-05, 3.8597000000001325e-05, 3.8832999999998535e-05, 3.8097000000000825e-05, 3.8861000000001145e-05, 3.8568999999998715e-05, 3.8319000000001935e-05, 3.8083000000001255e-05, 3.850000000000034e-05, 3.8818999999998965e-05, 3.852799999999948e-05, 3.847300000000067e-05]</msg>
<status status="PASS" starttime="20201030 16:03:09.805" endtime="20201030 16:03:09.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.800" endtime="20201030 16:03:09.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:09.812" endtime="20201030 16:03:09.832"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.811" endtime="20201030 16:03:09.832"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.810" endtime="20201030 16:03:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.452" endtime="20201030 16:03:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.452" endtime="20201030 16:03:09.833"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.842" endtime="20201030 16:03:09.858"></status>
</kw>
<msg timestamp="20201030 16:03:09.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:09.840" endtime="20201030 16:03:09.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:09.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:09.859" endtime="20201030 16:03:09.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.862" endtime="20201030 16:03:09.863"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.838" endtime="20201030 16:03:09.864"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.836" endtime="20201030 16:03:09.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:09.870" endtime="20201030 16:03:10.156"></status>
</kw>
<msg timestamp="20201030 16:03:10.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:09.869" endtime="20201030 16:03:10.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:10.160" endtime="20201030 16:03:10.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.169" endtime="20201030 16:03:10.170"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.866" endtime="20201030 16:03:10.171"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.865" endtime="20201030 16:03:10.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:10.175" level="INFO">${RESULT} = [{'diff': 3.9611000000001895e-05}, {'diff': 3.9804999999996926e-05}, {'diff': 3.974999999999812e-05}, {'diff': 3.9568999999999716e-05}, {'diff': 3.9416999999999924e-05}, {'diff': 3.956999999999919e-05...</msg>
<status status="PASS" starttime="20201030 16:03:10.172" endtime="20201030 16:03:10.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:10.180" level="INFO">${ACCURACY} = {'diff': [3.9611000000001895e-05, 3.9804999999996926e-05, 3.974999999999812e-05, 3.9568999999999716e-05, 3.9416999999999924e-05, 3.956999999999919e-05, 3.8889000000000284e-05, 3.904199999999955e-05, 3...</msg>
<status status="PASS" starttime="20201030 16:03:10.176" endtime="20201030 16:03:10.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.184" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 16:03:10.183" endtime="20201030 16:03:10.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.187" level="INFO">VALUE: [3.9611000000001895e-05, 3.9804999999996926e-05, 3.974999999999812e-05, 3.9568999999999716e-05, 3.9416999999999924e-05, 3.956999999999919e-05, 3.8889000000000284e-05, 3.904199999999955e-05, 3.8930999999998994e-05, 3.9375000000001215e-05, 3.8903000000003324e-05, 3.9846999999999105e-05, 3.9694999999999314e-05, 3.973600000000202e-05, 3.9568999999999716e-05, 3.927800000000023e-05, 3.919400000000281e-05, 3.891599999999995e-05, 3.950000000000134e-05, 3.972199999999898e-05, 3.9596999999998855e-05, 3.9790999999997356e-05, 3.9374999999997745e-05, 3.9096999999998355e-05, 3.9096999999998355e-05, 3.902799999999998e-05, 3.977800000000073e-05, 3.923599999999805e-05, 3.9125000000000965e-05, 3.9610999999998425e-05, 3.9389000000000784e-05, 3.92919999999998e-05, 3.97920000000003e-05, 3.9153000000000104e-05, 3.9610999999998425e-05, 3.9139000000000534e-05, 3.9596999999998855e-05, 3.944399999999959e-05, 3.9555000000000146e-05, 3.923600000000152e-05, 3.96660000000007e-05, 3.9639000000001035e-05, 3.943000000000002e-05, 3.917999999999977e-05, 3.927800000000023e-05, 3.933399999999851e-05, 3.924999999999762e-05, 3.9125000000000965e-05, 3.952800000000048e-05, 3.959799999999833e-05]</msg>
<status status="PASS" starttime="20201030 16:03:10.185" endtime="20201030 16:03:10.188"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.181" endtime="20201030 16:03:10.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:10.192" endtime="20201030 16:03:10.211"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.190" endtime="20201030 16:03:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.189" endtime="20201030 16:03:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.834" endtime="20201030 16:03:10.212"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:09.834" endtime="20201030 16:03:10.212"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.221" endtime="20201030 16:03:10.236"></status>
</kw>
<msg timestamp="20201030 16:03:10.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:10.219" endtime="20201030 16:03:10.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:10.237" endtime="20201030 16:03:10.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.240" endtime="20201030 16:03:10.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.217" endtime="20201030 16:03:10.242"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.215" endtime="20201030 16:03:10.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.249" endtime="20201030 16:03:10.536"></status>
</kw>
<msg timestamp="20201030 16:03:10.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019329042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:10.247" endtime="20201030 16:03:10.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019329042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:10.541" endtime="20201030 16:03:10.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.549" endtime="20201030 16:03:10.550"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.244" endtime="20201030 16:03:10.551"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.243" endtime="20201030 16:03:10.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:10.555" level="INFO">${RESULT} = [{'diff': 4.080600000000087e-05}, {'diff': 4.0124999999998495e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 4.015199999999816e-05}, {'diff': 4.052800000000148e-05}, {'diff': 4.0833000000000536e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:10.552" endtime="20201030 16:03:10.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:10.560" level="INFO">${ACCURACY} = {'diff': [4.080600000000087e-05, 4.0124999999998495e-05, 4.0167000000000674e-05, 4.015199999999816e-05, 4.052800000000148e-05, 4.0833000000000536e-05, 4.022199999999948e-05, 4.0374999999998745e-05, 4....</msg>
<status status="PASS" starttime="20201030 16:03:10.556" endtime="20201030 16:03:10.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.564" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 16:03:10.563" endtime="20201030 16:03:10.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.566" level="INFO">VALUE: [4.080600000000087e-05, 4.0124999999998495e-05, 4.0167000000000674e-05, 4.015199999999816e-05, 4.052800000000148e-05, 4.0833000000000536e-05, 4.022199999999948e-05, 4.0374999999998745e-05, 4.0653000000001605e-05, 4.041599999999798e-05, 4.0652999999998135e-05, 4.072199999999998e-05, 4.070799999999694e-05, 4.07920000000013e-05, 4.0181000000000244e-05, 4.030600000000037e-05, 3.9888999999997815e-05, 3.999999999999837e-05, 4.0346999999999605e-05, 4.047199999999973e-05, 4.054200000000105e-05, 4.0526999999998536e-05, 4.079199999999783e-05, 4.0695000000000314e-05, 4.0569000000000716e-05, 3.995800000000313e-05, 4.023599999999905e-05, 4.01660000000012e-05, 4.070800000000041e-05, 4.001400000000141e-05, 4.026399999999819e-05, 4.0596999999999855e-05, 3.9902999999997385e-05, 4.052799999999801e-05, 3.9903000000000854e-05, 4.020799999999991e-05, 4.0375000000002215e-05, 4.0819000000000966e-05, 3.9889000000001285e-05, 4.001400000000141e-05, 4.0333000000000035e-05, 4.0110999999998925e-05, 4.0431000000000494e-05, 4.082000000000044e-05, 3.9902999999997385e-05, 4.006999999999969e-05, 4.023599999999905e-05, 3.9944999999999564e-05, 4.0791000000001826e-05, 4.0375000000002215e-05]</msg>
<status status="PASS" starttime="20201030 16:03:10.565" endtime="20201030 16:03:10.567"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.560" endtime="20201030 16:03:10.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:10.571" endtime="20201030 16:03:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.570" endtime="20201030 16:03:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.569" endtime="20201030 16:03:10.591"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.213" endtime="20201030 16:03:10.592"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.213" endtime="20201030 16:03:10.592"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.600" endtime="20201030 16:03:10.616"></status>
</kw>
<msg timestamp="20201030 16:03:10.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:10.599" endtime="20201030 16:03:10.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:10.618" endtime="20201030 16:03:10.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.620" endtime="20201030 16:03:10.622"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.596" endtime="20201030 16:03:10.622"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.594" endtime="20201030 16:03:10.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.629" endtime="20201030 16:03:10.916"></status>
</kw>
<msg timestamp="20201030 16:03:10.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:10.628" endtime="20201030 16:03:10.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:10.920" endtime="20201030 16:03:10.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.928" endtime="20201030 16:03:10.930"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.625" endtime="20201030 16:03:10.930"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.623" endtime="20201030 16:03:10.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:10.935" level="INFO">${RESULT} = [{'diff': 4.1347000000000605e-05}, {'diff': 4.095800000000066e-05}, {'diff': 4.1847000000001106e-05}, {'diff': 4.126399999999919e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.1667000000002175e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:10.931" endtime="20201030 16:03:10.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:10.939" level="INFO">${ACCURACY} = {'diff': [4.1347000000000605e-05, 4.095800000000066e-05, 4.1847000000001106e-05, 4.126399999999919e-05, 4.176399999999969e-05, 4.1667000000002175e-05, 4.1194999999997345e-05, 4.154200000000205e-05, 4....</msg>
<status status="PASS" starttime="20201030 16:03:10.935" endtime="20201030 16:03:10.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.943" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 16:03:10.942" endtime="20201030 16:03:10.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:10.948" level="INFO">VALUE: [4.1347000000000605e-05, 4.095800000000066e-05, 4.1847000000001106e-05, 4.126399999999919e-05, 4.176399999999969e-05, 4.1667000000002175e-05, 4.1194999999997345e-05, 4.154200000000205e-05, 4.102800000000198e-05, 4.1097000000000355e-05, 4.1709000000000884e-05, 4.1624999999999995e-05, 4.126399999999919e-05, 4.1041000000002076e-05, 4.165199999999966e-05, 4.1555000000002146e-05, 4.1083000000000786e-05, 4.1653000000002605e-05, 4.177799999999926e-05, 4.122200000000048e-05, 4.147200000000073e-05, 4.172200000000098e-05, 4.102799999999851e-05, 4.1389000000002785e-05, 4.129199999999833e-05, 4.1347000000000605e-05, 4.1680999999998275e-05, 4.1681000000001744e-05, 4.1888999999999815e-05, 4.132000000000094e-05, 4.1276999999999286e-05, 4.142999999999855e-05, 4.17920000000023e-05, 4.1361000000000175e-05, 4.1138999999999065e-05, 4.145800000000116e-05, 4.097200000000023e-05, 4.169400000000184e-05, 4.1082999999997316e-05, 4.091599999999848e-05, 4.093000000000152e-05, 4.1861000000000675e-05, 4.1833000000001536e-05, 4.1153000000002105e-05, 4.0916999999997955e-05, 4.1361000000000175e-05, 4.099999999999937e-05, 4.170800000000141e-05, 4.104200000000155e-05, 4.0888999999998815e-05]</msg>
<status status="PASS" starttime="20201030 16:03:10.944" endtime="20201030 16:03:10.950"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.940" endtime="20201030 16:03:10.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:10.954" endtime="20201030 16:03:10.973"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.952" endtime="20201030 16:03:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.951" endtime="20201030 16:03:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.593" endtime="20201030 16:03:10.974"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.592" endtime="20201030 16:03:10.974"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:10.983" endtime="20201030 16:03:10.999"></status>
</kw>
<msg timestamp="20201030 16:03:10.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:10.981" endtime="20201030 16:03:10.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:11.000" endtime="20201030 16:03:11.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.003" endtime="20201030 16:03:11.004"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.979" endtime="20201030 16:03:11.005"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.977" endtime="20201030 16:03:11.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.011" endtime="20201030 16:03:11.298"></status>
</kw>
<msg timestamp="20201030 16:03:11.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019354042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:11.010" endtime="20201030 16:03:11.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019354042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:11.302" endtime="20201030 16:03:11.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.310" endtime="20201030 16:03:11.312"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.007" endtime="20201030 16:03:11.312"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.006" endtime="20201030 16:03:11.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:11.317" level="INFO">${RESULT} = [{'diff': 4.231999999999847e-05}, {'diff': 4.2152999999999635e-05}, {'diff': 4.2208999999997915e-05}, {'diff': 4.234799999999761e-05}, {'diff': 4.24860000000013e-05}, {'diff': 4.195799999999819e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:11.313" endtime="20201030 16:03:11.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:11.322" level="INFO">${ACCURACY} = {'diff': [4.231999999999847e-05, 4.2152999999999635e-05, 4.2208999999997915e-05, 4.234799999999761e-05, 4.24860000000013e-05, 4.195799999999819e-05, 4.226400000000019e-05, 4.254099999999664e-05, 4.206...</msg>
<status status="PASS" starttime="20201030 16:03:11.318" endtime="20201030 16:03:11.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.326" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 16:03:11.325" endtime="20201030 16:03:11.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.328" level="INFO">VALUE: [4.231999999999847e-05, 4.2152999999999635e-05, 4.2208999999997915e-05, 4.234799999999761e-05, 4.24860000000013e-05, 4.195799999999819e-05, 4.226400000000019e-05, 4.254099999999664e-05, 4.2068999999998746e-05, 4.2804999999999926e-05, 4.200000000000037e-05, 4.269399999999937e-05, 4.227799999999976e-05, 4.2097000000001356e-05, 4.229199999999933e-05, 4.2680999999999275e-05, 4.277800000000026e-05, 4.2125000000000495e-05, 4.229199999999933e-05, 4.247200000000173e-05, 4.2402999999999885e-05, 4.2416999999999455e-05, 4.23059999999989e-05, 4.256999999999872e-05, 4.205600000000212e-05, 4.1902999999999385e-05, 4.202800000000298e-05, 4.251300000000097e-05, 4.269399999999937e-05, 4.2610999999997956e-05, 4.202799999999951e-05, 4.219400000000234e-05, 4.2111000000000925e-05, 4.272200000000198e-05, 4.26799999999998e-05, 4.2389000000000315e-05, 4.279199999999983e-05, 4.251400000000044e-05, 4.194400000000209e-05, 4.1902999999999385e-05, 4.2610999999997956e-05, 4.2375000000000745e-05, 4.248599999999783e-05, 4.2181000000002244e-05, 4.258400000000176e-05, 4.2416999999999455e-05, 4.2402999999999885e-05, 4.2666999999999705e-05, 4.2610999999997956e-05, 4.1874999999996776e-05]</msg>
<status status="PASS" starttime="20201030 16:03:11.327" endtime="20201030 16:03:11.329"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.322" endtime="20201030 16:03:11.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:11.333" endtime="20201030 16:03:11.353"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.332" endtime="20201030 16:03:11.353"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.331" endtime="20201030 16:03:11.354"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.975" endtime="20201030 16:03:11.354"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:10.975" endtime="20201030 16:03:11.354"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.362" endtime="20201030 16:03:11.379"></status>
</kw>
<msg timestamp="20201030 16:03:11.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:11.361" endtime="20201030 16:03:11.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:11.380" endtime="20201030 16:03:11.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.383" endtime="20201030 16:03:11.384"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.358" endtime="20201030 16:03:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.356" endtime="20201030 16:03:11.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.391" endtime="20201030 16:03:11.677"></status>
</kw>
<msg timestamp="20201030 16:03:11.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019381667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019425444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:11.390" endtime="20201030 16:03:11.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019381667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019425444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:11.681" endtime="20201030 16:03:11.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.690" endtime="20201030 16:03:11.691"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.387" endtime="20201030 16:03:11.692"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.386" endtime="20201030 16:03:11.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:11.696" level="INFO">${RESULT} = [{'diff': 4.377699999999832e-05}, {'diff': 4.3819000000000496e-05}, {'diff': 4.302700000000104e-05}, {'diff': 4.295799999999919e-05}, {'diff': 4.319399999999987e-05}, {'diff': 4.319399999999987e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:11.693" endtime="20201030 16:03:11.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:11.700" level="INFO">${ACCURACY} = {'diff': [4.377699999999832e-05, 4.3819000000000496e-05, 4.302700000000104e-05, 4.295799999999919e-05, 4.319399999999987e-05, 4.319399999999987e-05, 4.2902999999996916e-05, 4.3082999999999316e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 16:03:11.697" endtime="20201030 16:03:11.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.705" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 16:03:11.704" endtime="20201030 16:03:11.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.707" level="INFO">VALUE: [4.377699999999832e-05, 4.3819000000000496e-05, 4.302700000000104e-05, 4.295799999999919e-05, 4.319399999999987e-05, 4.319399999999987e-05, 4.2902999999996916e-05, 4.3082999999999316e-05, 4.344400000000012e-05, 4.327799999999729e-05, 4.3610999999998956e-05, 4.295799999999919e-05, 4.3846999999999636e-05, 4.306999999999922e-05, 4.374999999999865e-05, 4.350000000000187e-05, 4.351400000000144e-05, 4.33059999999999e-05, 4.376399999999822e-05, 4.3431000000000025e-05, 4.2986999999997805e-05, 4.327699999999782e-05, 4.297200000000223e-05, 4.325000000000162e-05, 4.300000000000137e-05, 4.3582999999999816e-05, 4.297199999999876e-05, 4.2861000000001676e-05, 4.3582999999999816e-05, 4.3346999999999136e-05, 4.3125000000001495e-05, 4.3346999999999136e-05, 4.3555000000000677e-05, 4.350000000000187e-05, 4.3375000000001745e-05, 4.351399999999797e-05, 4.355600000000015e-05, 4.307000000000269e-05, 4.3638999999998096e-05, 4.3180999999999775e-05, 4.324999999999815e-05, 4.341599999999751e-05, 4.309799999999836e-05, 4.3403000000000885e-05, 4.3860999999999206e-05, 4.3375000000001745e-05, 4.3846999999999636e-05, 4.358399999999929e-05, 4.3375000000001745e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201030 16:03:11.706" endtime="20201030 16:03:11.718"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.701" endtime="20201030 16:03:11.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:11.722" endtime="20201030 16:03:11.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.720" endtime="20201030 16:03:11.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.719" endtime="20201030 16:03:11.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.355" endtime="20201030 16:03:11.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.354" endtime="20201030 16:03:11.743"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.751" endtime="20201030 16:03:11.767"></status>
</kw>
<msg timestamp="20201030 16:03:11.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:11.750" endtime="20201030 16:03:11.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:11.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:11.769" endtime="20201030 16:03:11.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.771" endtime="20201030 16:03:11.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.747" endtime="20201030 16:03:11.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.745" endtime="20201030 16:03:11.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:11.780" endtime="20201030 16:03:12.067"></status>
</kw>
<msg timestamp="20201030 16:03:12.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:11.778" endtime="20201030 16:03:12.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:12.071" endtime="20201030 16:03:12.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.079" endtime="20201030 16:03:12.081"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.776" endtime="20201030 16:03:12.081"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.774" endtime="20201030 16:03:12.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:12.085" level="INFO">${RESULT} = [{'diff': 4.397199999999976e-05}, {'diff': 4.444399999999765e-05}, {'diff': 4.454099999999864e-05}, {'diff': 4.470800000000094e-05}, {'diff': 4.4653000000002135e-05}, {'diff': 4.467999999999833e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:12.082" endtime="20201030 16:03:12.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:12.089" level="INFO">${ACCURACY} = {'diff': [4.397199999999976e-05, 4.444399999999765e-05, 4.454099999999864e-05, 4.470800000000094e-05, 4.4653000000002135e-05, 4.467999999999833e-05, 4.422200000000001e-05, 4.395800000000019e-05, 4.401...</msg>
<status status="PASS" starttime="20201030 16:03:12.086" endtime="20201030 16:03:12.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.094" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 16:03:12.093" endtime="20201030 16:03:12.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.096" level="INFO">VALUE: [4.397199999999976e-05, 4.444399999999765e-05, 4.454099999999864e-05, 4.470800000000094e-05, 4.4653000000002135e-05, 4.467999999999833e-05, 4.422200000000001e-05, 4.395800000000019e-05, 4.401400000000194e-05, 4.4319000000000996e-05, 4.4624999999999526e-05, 4.429199999999786e-05, 4.3931000000000525e-05, 4.429199999999786e-05, 4.4652999999998666e-05, 4.4110999999999456e-05, 4.4709000000000415e-05, 4.408399999999979e-05, 4.461199999999943e-05, 4.402799999999804e-05, 4.482000000000097e-05, 4.477699999999932e-05, 4.415200000000216e-05, 4.3889000000001815e-05, 4.465199999999919e-05, 4.394400000000062e-05, 4.391599999999801e-05, 4.41800000000013e-05, 4.423599999999958e-05, 4.454200000000158e-05, 4.426399999999872e-05, 4.4417000000001455e-05, 4.3846999999999636e-05, 4.479199999999836e-05, 4.3945000000000095e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.424999999999915e-05, 4.4208999999999915e-05, 4.4583000000000816e-05, 4.43060000000009e-05, 4.480499999999846e-05, 4.3888999999998346e-05, 4.4833000000001066e-05, 4.3888999999998346e-05, 4.422200000000001e-05, 4.424999999999915e-05, 4.442999999999808e-05, 4.4652999999998666e-05, 4.44999999999994e-05]</msg>
<status status="PASS" starttime="20201030 16:03:12.095" endtime="20201030 16:03:12.098"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.090" endtime="20201030 16:03:12.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:12.102" endtime="20201030 16:03:12.121"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.101" endtime="20201030 16:03:12.122"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.099" endtime="20201030 16:03:12.122"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.743" endtime="20201030 16:03:12.123"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:11.743" endtime="20201030 16:03:12.123"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.131" endtime="20201030 16:03:12.148"></status>
</kw>
<msg timestamp="20201030 16:03:12.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:12.130" endtime="20201030 16:03:12.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:12.149" endtime="20201030 16:03:12.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.152" endtime="20201030 16:03:12.153"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.127" endtime="20201030 16:03:12.154"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.125" endtime="20201030 16:03:12.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.160" endtime="20201030 16:03:12.446"></status>
</kw>
<msg timestamp="20201030 16:03:12.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:12.159" endtime="20201030 16:03:12.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:12.451" endtime="20201030 16:03:12.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.459" endtime="20201030 16:03:12.460"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.156" endtime="20201030 16:03:12.461"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.155" endtime="20201030 16:03:12.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:12.465" level="INFO">${RESULT} = [{'diff': 4.523600000000058e-05}, {'diff': 4.5347000000001136e-05}, {'diff': 4.58190000000025e-05}, {'diff': 4.5319000000001997e-05}, {'diff': 4.581899999999903e-05}, {'diff': 4.5166999999998736e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:12.462" endtime="20201030 16:03:12.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:12.470" level="INFO">${ACCURACY} = {'diff': [4.523600000000058e-05, 4.5347000000001136e-05, 4.58190000000025e-05, 4.5319000000001997e-05, 4.581899999999903e-05, 4.5166999999998736e-05, 4.554199999999911e-05, 4.522200000000101e-05, 4.49...</msg>
<status status="PASS" starttime="20201030 16:03:12.466" endtime="20201030 16:03:12.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.474" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 16:03:12.473" endtime="20201030 16:03:12.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.477" level="INFO">VALUE: [4.523600000000058e-05, 4.5347000000001136e-05, 4.58190000000025e-05, 4.5319000000001997e-05, 4.581899999999903e-05, 4.5166999999998736e-05, 4.554199999999911e-05, 4.522200000000101e-05, 4.494400000000162e-05, 4.4944999999997626e-05, 4.551399999999997e-05, 4.515199999999969e-05, 4.5625000000000526e-05, 4.4973000000000235e-05, 4.5195000000001345e-05, 4.544399999999865e-05, 4.4874999999999776e-05, 4.5167000000002205e-05, 4.490199999999944e-05, 4.579199999999936e-05, 4.527699999999982e-05, 4.5111000000000456e-05, 4.567999999999933e-05, 4.49999999999999e-05, 4.527799999999929e-05, 4.56939999999989e-05, 4.520799999999797e-05, 4.526399999999972e-05, 4.4944999999997626e-05, 4.5417000000002455e-05, 4.5666999999999236e-05, 4.5430999999998556e-05, 4.5152999999999166e-05, 4.523599999999711e-05, 4.502800000000251e-05, 4.555600000000215e-05, 4.5416999999998986e-05, 4.507000000000122e-05, 4.495799999999772e-05, 4.554099999999964e-05, 4.506899999999828e-05, 4.584699999999817e-05, 4.558299999999835e-05, 4.5347000000001136e-05, 4.547200000000126e-05, 4.529200000000233e-05, 4.531899999999853e-05, 4.525000000000015e-05, 4.498600000000033e-05, 4.536099999999724e-05]</msg>
<status status="PASS" starttime="20201030 16:03:12.476" endtime="20201030 16:03:12.478"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.471" endtime="20201030 16:03:12.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:12.482" endtime="20201030 16:03:12.501"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.480" endtime="20201030 16:03:12.502"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.479" endtime="20201030 16:03:12.502"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.124" endtime="20201030 16:03:12.502"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.123" endtime="20201030 16:03:12.503"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.511" endtime="20201030 16:03:12.528"></status>
</kw>
<msg timestamp="20201030 16:03:12.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:12.510" endtime="20201030 16:03:12.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:12.529" endtime="20201030 16:03:12.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.532" endtime="20201030 16:03:12.533"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.507" endtime="20201030 16:03:12.534"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.505" endtime="20201030 16:03:12.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.541" endtime="20201030 16:03:12.827"></status>
</kw>
<msg timestamp="20201030 16:03:12.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019333389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:12.539" endtime="20201030 16:03:12.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0192875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019333389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:12.831" endtime="20201030 16:03:12.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.839" endtime="20201030 16:03:12.841"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.537" endtime="20201030 16:03:12.841"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.535" endtime="20201030 16:03:12.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:12.846" level="INFO">${RESULT} = [{'diff': 4.5889000000000346e-05}, {'diff': 4.6416999999999986e-05}, {'diff': 4.655599999999968e-05}, {'diff': 4.651400000000097e-05}, {'diff': 4.66529999999972e-05}, {'diff': 4.6389000000000846e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:12.842" endtime="20201030 16:03:12.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:12.850" level="INFO">${ACCURACY} = {'diff': [4.5889000000000346e-05, 4.6416999999999986e-05, 4.655599999999968e-05, 4.651400000000097e-05, 4.66529999999972e-05, 4.6389000000000846e-05, 4.611099999999799e-05, 4.654200000000011e-05, 4.58...</msg>
<status status="PASS" starttime="20201030 16:03:12.847" endtime="20201030 16:03:12.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.855" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 16:03:12.854" endtime="20201030 16:03:12.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.858" level="INFO">VALUE: [4.5889000000000346e-05, 4.6416999999999986e-05, 4.655599999999968e-05, 4.651400000000097e-05, 4.66529999999972e-05, 4.6389000000000846e-05, 4.611099999999799e-05, 4.654200000000011e-05, 4.5875000000000776e-05, 4.676399999999775e-05, 4.604199999999961e-05, 4.615200000000069e-05, 4.6153000000000166e-05, 4.673600000000208e-05, 4.636099999999824e-05, 4.597199999999829e-05, 4.61939999999994e-05, 4.630499999999996e-05, 4.641600000000051e-05, 4.676399999999775e-05, 4.6653000000000666e-05, 4.654200000000011e-05, 4.5930999999999056e-05, 4.651400000000097e-05, 4.651400000000097e-05, 4.659699999999892e-05, 4.648600000000183e-05, 4.6861000000002206e-05, 4.6361000000001706e-05, 4.661099999999849e-05, 4.630499999999996e-05, 4.688899999999788e-05, 4.5944999999998626e-05, 4.592999999999958e-05, 4.601400000000047e-05, 4.647199999999879e-05, 4.673599999999861e-05, 4.6125000000001026e-05, 4.5916999999999486e-05, 4.655500000000021e-05, 4.609699999999842e-05, 4.6139000000000596e-05, 4.6430999999999556e-05, 4.679200000000036e-05, 4.6861000000002206e-05, 4.640299999999695e-05, 4.652800000000054e-05, 4.679199999999689e-05, 4.611099999999799e-05, 4.656899999999978e-05]</msg>
<status status="PASS" starttime="20201030 16:03:12.856" endtime="20201030 16:03:12.858"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.851" endtime="20201030 16:03:12.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:12.862" endtime="20201030 16:03:12.882"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.861" endtime="20201030 16:03:12.882"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.860" endtime="20201030 16:03:12.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.503" endtime="20201030 16:03:12.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.503" endtime="20201030 16:03:12.883"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.892" endtime="20201030 16:03:12.909"></status>
</kw>
<msg timestamp="20201030 16:03:12.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:12.890" endtime="20201030 16:03:12.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:12.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:12.911" endtime="20201030 16:03:12.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.913" endtime="20201030 16:03:12.915"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.888" endtime="20201030 16:03:12.915"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.886" endtime="20201030 16:03:12.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:12.922" endtime="20201030 16:03:13.207"></status>
</kw>
<msg timestamp="20201030 16:03:13.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020832194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:12.921" endtime="20201030 16:03:13.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020832194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:13.212" endtime="20201030 16:03:13.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.220" endtime="20201030 16:03:13.221"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.918" endtime="20201030 16:03:13.222"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.917" endtime="20201030 16:03:13.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:13.226" level="INFO">${RESULT} = [{'diff': 4.716599999999779e-05}, {'diff': 4.720799999999997e-05}, {'diff': 4.772200000000004e-05}, {'diff': 4.779099999999842e-05}, {'diff': 4.737499999999881e-05}, {'diff': 4.690199999999797e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:13.223" endtime="20201030 16:03:13.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:13.230" level="INFO">${ACCURACY} = {'diff': [4.716599999999779e-05, 4.720799999999997e-05, 4.772200000000004e-05, 4.779099999999842e-05, 4.737499999999881e-05, 4.690199999999797e-05, 4.734699999999967e-05, 4.691600000000101e-05, 4.7221...</msg>
<status status="PASS" starttime="20201030 16:03:13.227" endtime="20201030 16:03:13.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.235" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 16:03:13.234" endtime="20201030 16:03:13.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.237" level="INFO">VALUE: [4.716599999999779e-05, 4.720799999999997e-05, 4.772200000000004e-05, 4.779099999999842e-05, 4.737499999999881e-05, 4.690199999999797e-05, 4.734699999999967e-05, 4.691600000000101e-05, 4.722199999999954e-05, 4.73330000000001e-05, 4.787499999999931e-05, 4.722199999999954e-05, 4.7403000000001416e-05, 4.695799999999972e-05, 4.733399999999957e-05, 4.720799999999997e-05, 4.772200000000004e-05, 4.783400000000007e-05, 4.725000000000215e-05, 4.736199999999871e-05, 4.706900000000028e-05, 4.711200000000193e-05, 4.774999999999918e-05, 4.697200000000276e-05, 4.698599999999886e-05, 4.736099999999924e-05, 4.706900000000028e-05, 4.6917000000000486e-05, 4.708299999999985e-05, 4.690299999999745e-05, 4.6917000000000486e-05, 4.784700000000017e-05, 4.736099999999924e-05, 4.78330000000006e-05, 4.7194999999999876e-05, 4.726400000000172e-05, 4.754200000000111e-05, 4.6972999999998766e-05, 4.751400000000197e-05, 4.776399999999875e-05, 4.779100000000189e-05, 4.737499999999881e-05, 4.692999999999711e-05, 4.727700000000182e-05, 4.784800000000311e-05, 4.763899999999863e-05, 4.744400000000065e-05, 4.755499999999774e-05, 4.751400000000197e-05, 4.777800000000179e-05]</msg>
<status status="PASS" starttime="20201030 16:03:13.236" endtime="20201030 16:03:13.239"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.231" endtime="20201030 16:03:13.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:13.243" endtime="20201030 16:03:13.262"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.241" endtime="20201030 16:03:13.263"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.240" endtime="20201030 16:03:13.263"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.884" endtime="20201030 16:03:13.263"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:12.884" endtime="20201030 16:03:13.264"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.272" endtime="20201030 16:03:13.287"></status>
</kw>
<msg timestamp="20201030 16:03:13.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:13.271" endtime="20201030 16:03:13.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:13.289" endtime="20201030 16:03:13.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.291" endtime="20201030 16:03:13.293"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.268" endtime="20201030 16:03:13.293"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.266" endtime="20201030 16:03:13.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.300" endtime="20201030 16:03:13.586"></status>
</kw>
<msg timestamp="20201030 16:03:13.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:13.299" endtime="20201030 16:03:13.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:13.590" endtime="20201030 16:03:13.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.599" endtime="20201030 16:03:13.600"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.296" endtime="20201030 16:03:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.294" endtime="20201030 16:03:13.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:13.605" level="INFO">${RESULT} = [{'diff': 4.834700000000067e-05}, {'diff': 4.859700000000092e-05}, {'diff': 4.881900000000203e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.837499999999981e-05}, {'diff': 4.880599999999846e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:13.602" endtime="20201030 16:03:13.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:13.610" level="INFO">${ACCURACY} = {'diff': [4.834700000000067e-05, 4.859700000000092e-05, 4.881900000000203e-05, 4.813899999999913e-05, 4.837499999999981e-05, 4.880599999999846e-05, 4.877800000000279e-05, 4.877699999999985e-05, 4.8070...</msg>
<status status="PASS" starttime="20201030 16:03:13.606" endtime="20201030 16:03:13.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.614" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 16:03:13.613" endtime="20201030 16:03:13.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.617" level="INFO">VALUE: [4.834700000000067e-05, 4.859700000000092e-05, 4.881900000000203e-05, 4.813899999999913e-05, 4.837499999999981e-05, 4.880599999999846e-05, 4.877800000000279e-05, 4.877699999999985e-05, 4.807000000000075e-05, 4.802800000000204e-05, 4.869499999999791e-05, 4.805500000000171e-05, 4.856900000000178e-05, 4.816599999999879e-05, 4.881899999999856e-05, 4.861100000000049e-05, 4.806899999999781e-05, 4.818000000000183e-05, 4.858299999999788e-05, 4.788899999999888e-05, 4.802800000000204e-05, 4.818099999999784e-05, 4.8167000000001736e-05, 4.787499999999931e-05, 4.8125000000003026e-05, 4.812499999999956e-05, 4.8431000000001556e-05, 4.876399999999975e-05, 4.80269999999991e-05, 4.7917000000001486e-05, 4.8667000000002236e-05, 4.791599999999854e-05, 4.801299999999953e-05, 4.863800000000015e-05, 4.830499999999849e-05, 4.81529999999987e-05, 4.812499999999956e-05, 4.872200000000104e-05, 4.854199999999864e-05, 4.8667000000002236e-05, 4.884700000000117e-05, 4.873599999999714e-05, 4.841699999999852e-05, 4.840299999999895e-05, 4.8181000000001306e-05, 4.8013999999999e-05, 4.879200000000236e-05, 4.852799999999907e-05, 4.823600000000011e-05, 4.809799999999989e-05]</msg>
<status status="PASS" starttime="20201030 16:03:13.615" endtime="20201030 16:03:13.618"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.611" endtime="20201030 16:03:13.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:13.622" endtime="20201030 16:03:13.641"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.620" endtime="20201030 16:03:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.619" endtime="20201030 16:03:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.264" endtime="20201030 16:03:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.264" endtime="20201030 16:03:13.642"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.651" endtime="20201030 16:03:13.668"></status>
</kw>
<msg timestamp="20201030 16:03:13.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:13.649" endtime="20201030 16:03:13.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:13.669" endtime="20201030 16:03:13.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.672" endtime="20201030 16:03:13.673"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.647" endtime="20201030 16:03:13.674"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.645" endtime="20201030 16:03:13.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.681" endtime="20201030 16:03:13.967"></status>
</kw>
<msg timestamp="20201030 16:03:13.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:13.679" endtime="20201030 16:03:13.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019993694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:13.972" endtime="20201030 16:03:13.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:13.980" endtime="20201030 16:03:13.981"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.677" endtime="20201030 16:03:13.982"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.675" endtime="20201030 16:03:13.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:13.986" level="INFO">${RESULT} = [{'diff': 4.95140000000005e-05}, {'diff': 4.894399999999868e-05}, {'diff': 4.895799999999825e-05}, {'diff': 4.913900000000013e-05}, {'diff': 4.9014e-05}, {'diff': 4.95140000000005e-05}, {'diff': 4.983...</msg>
<status status="PASS" starttime="20201030 16:03:13.983" endtime="20201030 16:03:13.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:13.990" level="INFO">${ACCURACY} = {'diff': [4.95140000000005e-05, 4.894399999999868e-05, 4.895799999999825e-05, 4.913900000000013e-05, 4.9014e-05, 4.95140000000005e-05, 4.983299999999913e-05, 4.9320000000002e-05, 4.911100000000099e-05...</msg>
<status status="PASS" starttime="20201030 16:03:13.987" endtime="20201030 16:03:13.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.994" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 16:03:13.993" endtime="20201030 16:03:13.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:13.997" level="INFO">VALUE: [4.95140000000005e-05, 4.894399999999868e-05, 4.895799999999825e-05, 4.913900000000013e-05, 4.9014e-05, 4.95140000000005e-05, 4.983299999999913e-05, 4.9320000000002e-05, 4.911100000000099e-05, 4.893099999999859e-05, 4.894499999999816e-05, 4.887500000000031e-05, 4.888899999999988e-05, 4.9695000000002376e-05, 4.88200000000015e-05, 4.916599999999979e-05, 4.938900000000038e-05, 4.88880000000004e-05, 4.940200000000047e-05, 4.905499999999924e-05, 4.986099999999827e-05, 4.938900000000038e-05, 4.916699999999927e-05, 4.986100000000174e-05, 4.930600000000243e-05, 4.976399999999728e-05, 4.976400000000075e-05, 4.907000000000175e-05, 4.918099999999884e-05, 4.966699999999977e-05, 4.962500000000106e-05, 4.958400000000182e-05, 4.927799999999982e-05, 4.915200000000022e-05, 4.886100000000074e-05, 4.906899999999881e-05, 4.95270000000006e-05, 4.938900000000038e-05, 4.967999999999986e-05, 4.898599999999739e-05, 4.948600000000136e-05, 4.912500000000056e-05, 4.945799999999875e-05, 4.925000000000068e-05, 4.972199999999857e-05, 4.948599999999789e-05, 4.968099999999934e-05, 4.912500000000056e-05, 4.905599999999871e-05, 4.9014e-05]</msg>
<status status="PASS" starttime="20201030 16:03:13.996" endtime="20201030 16:03:13.998"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.991" endtime="20201030 16:03:13.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:14.002" endtime="20201030 16:03:14.021"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.000" endtime="20201030 16:03:14.022"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.999" endtime="20201030 16:03:14.022"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.643" endtime="20201030 16:03:14.023"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:13.643" endtime="20201030 16:03:14.023"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.031" endtime="20201030 16:03:14.049"></status>
</kw>
<msg timestamp="20201030 16:03:14.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:14.030" endtime="20201030 16:03:14.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:14.050" endtime="20201030 16:03:14.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.053" endtime="20201030 16:03:14.054"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.027" endtime="20201030 16:03:14.055"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.025" endtime="20201030 16:03:14.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.062" endtime="20201030 16:03:14.347"></status>
</kw>
<msg timestamp="20201030 16:03:14.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020866944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020917278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:14.060" endtime="20201030 16:03:14.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020866944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020917278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:14.351" endtime="20201030 16:03:14.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.359" endtime="20201030 16:03:14.361"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.058" endtime="20201030 16:03:14.362"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.056" endtime="20201030 16:03:14.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:14.366" level="INFO">${RESULT} = [{'diff': 5.033400000000257e-05}, {'diff': 5.049999999999846e-05}, {'diff': 5.070899999999948e-05}, {'diff': 4.9973000000001766e-05}, {'diff': 4.990300000000045e-05}, {'diff': 5.0165999999997324e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:14.363" endtime="20201030 16:03:14.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:14.370" level="INFO">${ACCURACY} = {'diff': [5.033400000000257e-05, 5.049999999999846e-05, 5.070899999999948e-05, 4.9973000000001766e-05, 4.990300000000045e-05, 5.0165999999997324e-05, 5.0402000000001473e-05, 5.005499999999677e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 16:03:14.367" endtime="20201030 16:03:14.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.374" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 16:03:14.373" endtime="20201030 16:03:14.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.380" level="INFO">VALUE: [5.033400000000257e-05, 5.049999999999846e-05, 5.070899999999948e-05, 4.9973000000001766e-05, 4.990300000000045e-05, 5.0165999999997324e-05, 5.0402000000001473e-05, 5.005499999999677e-05, 5.069400000000043e-05, 5.011100000000199e-05, 5.0652000000001723e-05, 5.079199999999742e-05, 5.022199999999907e-05, 5.036100000000224e-05, 5.002800000000057e-05, 5.068099999999687e-05, 5.029200000000039e-05, 5.044499999999966e-05, 5.005599999999971e-05, 5.043100000000009e-05, 5.023600000000211e-05, 5.094500000000016e-05, 5.026400000000125e-05, 4.997199999999882e-05, 5.022200000000254e-05, 5.004100000000067e-05, 5.081900000000056e-05, 5.005499999999677e-05, 5.054100000000117e-05, 5.047200000000279e-05, 5.077800000000132e-05, 5.009700000000242e-05, 5.019399999999993e-05, 5.023599999999864e-05, 5.020800000000297e-05, 5.011099999999852e-05, 5.044400000000018e-05, 5.0014000000001e-05, 4.998599999999839e-05, 5.041700000000052e-05, 5.006899999999981e-05, 5.008399999999885e-05, 5.02079999999995e-05, 5.0429999999997144e-05, 5.033299999999963e-05, 4.990200000000097e-05, 5.058299999999988e-05, 4.987500000000131e-05, 5.048600000000236e-05, 5.022199999999907e-05]</msg>
<status status="PASS" starttime="20201030 16:03:14.375" endtime="20201030 16:03:14.381"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.371" endtime="20201030 16:03:14.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:14.385" endtime="20201030 16:03:14.404"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.383" endtime="20201030 16:03:14.405"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.382" endtime="20201030 16:03:14.405"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.024" endtime="20201030 16:03:14.405"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.023" endtime="20201030 16:03:14.406"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.414" endtime="20201030 16:03:14.430"></status>
</kw>
<msg timestamp="20201030 16:03:14.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:14.413" endtime="20201030 16:03:14.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:14.431" endtime="20201030 16:03:14.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.434" endtime="20201030 16:03:14.435"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.410" endtime="20201030 16:03:14.436"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.408" endtime="20201030 16:03:14.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.443" endtime="20201030 16:03:14.728"></status>
</kw>
<msg timestamp="20201030 16:03:14.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019271347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:14.441" endtime="20201030 16:03:14.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019271347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:14.732" endtime="20201030 16:03:14.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.740" endtime="20201030 16:03:14.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.439" endtime="20201030 16:03:14.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.437" endtime="20201030 16:03:14.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:14.747" level="INFO">${RESULT} = [{'diff': 5.112499999999909e-05}, {'diff': 5.172200000000057e-05}, {'diff': 5.154199999999817e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.1693999999997964e-05}, {'diff': 5.148599999999989e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:14.743" endtime="20201030 16:03:14.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:14.752" level="INFO">${ACCURACY} = {'diff': [5.112499999999909e-05, 5.172200000000057e-05, 5.154199999999817e-05, 5.161100000000002e-05, 5.1693999999997964e-05, 5.148599999999989e-05, 5.133300000000063e-05, 5.098600000000286e-05, 5.095...</msg>
<status status="PASS" starttime="20201030 16:03:14.748" endtime="20201030 16:03:14.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.756" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 16:03:14.755" endtime="20201030 16:03:14.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.758" level="INFO">VALUE: [5.112499999999909e-05, 5.172200000000057e-05, 5.154199999999817e-05, 5.161100000000002e-05, 5.1693999999997964e-05, 5.148599999999989e-05, 5.133300000000063e-05, 5.098600000000286e-05, 5.095899999999973e-05, 5.115299999999823e-05, 5.14729999999998e-05, 5.090299999999798e-05, 5.138900000000238e-05, 5.180500000000199e-05, 5.145800000000075e-05, 5.1638000000003154e-05, 5.129099999999845e-05, 5.147200000000032e-05, 5.149999999999946e-05, 5.13470000000002e-05, 5.162499999999959e-05, 5.097199999999982e-05, 5.1693999999997964e-05, 5.162499999999959e-05, 5.163899999999916e-05, 5.145800000000075e-05, 5.154199999999817e-05, 5.102800000000157e-05, 5.138899999999891e-05, 5.15279999999986e-05, 5.141699999999805e-05, 5.084799999999917e-05, 5.098599999999939e-05, 5.131899999999759e-05, 5.122200000000007e-05, 5.1693999999997964e-05, 5.095800000000025e-05, 5.126400000000225e-05, 5.155500000000174e-05, 5.1014000000002e-05, 5.104199999999767e-05, 5.174999999999971e-05, 5.163899999999916e-05, 5.130600000000096e-05, 5.181999999999756e-05, 5.16669999999983e-05, 5.173600000000014e-05, 5.137499999999934e-05, 5.086099999999927e-05, 5.16669999999983e-05]</msg>
<status status="PASS" starttime="20201030 16:03:14.757" endtime="20201030 16:03:14.759"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.752" endtime="20201030 16:03:14.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:14.763" endtime="20201030 16:03:14.783"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.762" endtime="20201030 16:03:14.783"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.761" endtime="20201030 16:03:14.784"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.407" endtime="20201030 16:03:14.784"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.406" endtime="20201030 16:03:14.784"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.792" endtime="20201030 16:03:14.810"></status>
</kw>
<msg timestamp="20201030 16:03:14.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:14.791" endtime="20201030 16:03:14.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:14.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:14.811" endtime="20201030 16:03:14.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.813" endtime="20201030 16:03:14.815"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.788" endtime="20201030 16:03:14.816"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.786" endtime="20201030 16:03:14.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:14.822" endtime="20201030 16:03:15.108"></status>
</kw>
<msg timestamp="20201030 16:03:15.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019257931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019310444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:14.821" endtime="20201030 16:03:15.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019257931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019310444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:15.113" endtime="20201030 16:03:15.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.121" endtime="20201030 16:03:15.123"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.818" endtime="20201030 16:03:15.123"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.817" endtime="20201030 16:03:15.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:15.127" level="INFO">${RESULT} = [{'diff': 5.251300000000056e-05}, {'diff': 5.251300000000056e-05}, {'diff': 5.254199999999917e-05}, {'diff': 5.258300000000188e-05}, {'diff': 5.247200000000132e-05}, {'diff': 5.259700000000145e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:15.124" endtime="20201030 16:03:15.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:15.132" level="INFO">${ACCURACY} = {'diff': [5.251300000000056e-05, 5.251300000000056e-05, 5.254199999999917e-05, 5.258300000000188e-05, 5.247200000000132e-05, 5.259700000000145e-05, 5.281899999999909e-05, 5.209700000000095e-05, 5.1916...</msg>
<status status="PASS" starttime="20201030 16:03:15.128" endtime="20201030 16:03:15.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.136" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 16:03:15.135" endtime="20201030 16:03:15.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.139" level="INFO">VALUE: [5.251300000000056e-05, 5.251300000000056e-05, 5.254199999999917e-05, 5.258300000000188e-05, 5.247200000000132e-05, 5.259700000000145e-05, 5.281899999999909e-05, 5.209700000000095e-05, 5.191699999999855e-05, 5.268100000000234e-05, 5.191699999999855e-05, 5.2485999999997424e-05, 5.2693999999998964e-05, 5.218000000000236e-05, 5.238899999999991e-05, 5.279199999999942e-05, 5.279200000000289e-05, 5.187499999999984e-05, 5.191700000000202e-05, 5.225000000000021e-05, 5.2708000000002e-05, 5.1957999999997784e-05, 5.240299999999948e-05, 5.2429999999999144e-05, 5.231899999999859e-05, 5.226399999999978e-05, 5.211100000000052e-05, 5.225000000000021e-05, 5.197200000000082e-05, 5.237500000000034e-05, 5.190299999999898e-05, 5.281999999999856e-05, 5.25279999999996e-05, 5.279199999999942e-05, 5.24730000000008e-05, 5.268099999999887e-05, 5.270900000000148e-05, 5.258299999999841e-05, 5.250000000000046e-05, 5.2471999999997854e-05, 5.225000000000021e-05, 5.229099999999945e-05, 5.2665999999999824e-05, 5.2193999999998464e-05, 5.23609999999973e-05, 5.20279999999991e-05, 5.2457999999998284e-05, 5.219500000000141e-05, 5.284800000000117e-05, 5.251400000000003e-05]</msg>
<status status="PASS" starttime="20201030 16:03:15.137" endtime="20201030 16:03:15.139"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.133" endtime="20201030 16:03:15.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:15.143" endtime="20201030 16:03:15.163"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.142" endtime="20201030 16:03:15.163"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.141" endtime="20201030 16:03:15.164"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.785" endtime="20201030 16:03:15.164"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:14.784" endtime="20201030 16:03:15.164"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.173" endtime="20201030 16:03:15.191"></status>
</kw>
<msg timestamp="20201030 16:03:15.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:15.171" endtime="20201030 16:03:15.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:15.192" endtime="20201030 16:03:15.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.195" endtime="20201030 16:03:15.196"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.169" endtime="20201030 16:03:15.197"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.167" endtime="20201030 16:03:15.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.203" endtime="20201030 16:03:15.489"></status>
</kw>
<msg timestamp="20201030 16:03:15.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:15.202" endtime="20201030 16:03:15.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:15.493" endtime="20201030 16:03:15.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.501" endtime="20201030 16:03:15.503"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.199" endtime="20201030 16:03:15.503"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.198" endtime="20201030 16:03:15.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:15.508" level="INFO">${RESULT} = [{'diff': 5.379199999999695e-05}, {'diff': 5.3166000000000324e-05}, {'diff': 5.3430000000000144e-05}, {'diff': 5.3749999999998244e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.373600000000214e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:15.504" endtime="20201030 16:03:15.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:15.512" level="INFO">${ACCURACY} = {'diff': [5.379199999999695e-05, 5.3166000000000324e-05, 5.3430000000000144e-05, 5.3749999999998244e-05, 5.312500000000109e-05, 5.373600000000214e-05, 5.336100000000177e-05, 5.375000000000171e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 16:03:15.509" endtime="20201030 16:03:15.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.516" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 16:03:15.515" endtime="20201030 16:03:15.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.518" level="INFO">VALUE: [5.379199999999695e-05, 5.3166000000000324e-05, 5.3430000000000144e-05, 5.3749999999998244e-05, 5.312500000000109e-05, 5.373600000000214e-05, 5.336100000000177e-05, 5.375000000000171e-05, 5.3916000000001074e-05, 5.340299999999701e-05, 5.338900000000091e-05, 5.373600000000214e-05, 5.294500000000216e-05, 5.369499999999944e-05, 5.327699999999741e-05, 5.383399999999913e-05, 5.329100000000045e-05, 5.301400000000053e-05, 5.359700000000245e-05, 5.3402000000001004e-05, 5.288900000000041e-05, 5.383300000000313e-05, 5.320900000000198e-05, 5.300000000000096e-05, 5.311100000000152e-05, 5.298600000000139e-05, 5.297299999999783e-05, 5.337500000000134e-05, 5.359699999999898e-05, 5.329199999999992e-05, 5.295900000000173e-05, 5.3680000000000394e-05, 5.358399999999888e-05, 5.356999999999931e-05, 5.31669999999998e-05, 5.3652000000001254e-05, 5.380500000000052e-05, 5.305499999999977e-05, 5.362499999999812e-05, 5.305499999999977e-05, 5.283299999999866e-05, 5.376400000000128e-05, 5.3457999999999284e-05, 5.295800000000225e-05, 5.341700000000005e-05, 5.311099999999805e-05, 5.329199999999992e-05, 5.319499999999894e-05, 5.288900000000041e-05, 5.311100000000152e-05]</msg>
<status status="PASS" starttime="20201030 16:03:15.517" endtime="20201030 16:03:15.520"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.512" endtime="20201030 16:03:15.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:15.524" endtime="20201030 16:03:15.543"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.523" endtime="20201030 16:03:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.521" endtime="20201030 16:03:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.165" endtime="20201030 16:03:15.545"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.164" endtime="20201030 16:03:15.545"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.553" endtime="20201030 16:03:15.569"></status>
</kw>
<msg timestamp="20201030 16:03:15.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:15.552" endtime="20201030 16:03:15.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:15.571" endtime="20201030 16:03:15.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.573" endtime="20201030 16:03:15.575"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.549" endtime="20201030 16:03:15.575"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.547" endtime="20201030 16:03:15.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.582" endtime="20201030 16:03:15.868"></status>
</kw>
<msg timestamp="20201030 16:03:15.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019453569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:15.581" endtime="20201030 16:03:15.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019398847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019453569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:15.872" endtime="20201030 16:03:15.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.880" endtime="20201030 16:03:15.882"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.578" endtime="20201030 16:03:15.882"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.576" endtime="20201030 16:03:15.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:15.887" level="INFO">${RESULT} = [{'diff': 5.4722000000000104e-05}, {'diff': 5.4194000000000464e-05}, {'diff': 5.4471999999999854e-05}, {'diff': 5.415300000000123e-05}, {'diff': 5.484700000000023e-05}, {'diff': 5.401400000000153e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:15.883" endtime="20201030 16:03:15.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:15.892" level="INFO">${ACCURACY} = {'diff': [5.4722000000000104e-05, 5.4194000000000464e-05, 5.4471999999999854e-05, 5.415300000000123e-05, 5.484700000000023e-05, 5.401400000000153e-05, 5.4249999999998744e-05, 5.408299999999991e-05, 5....</msg>
<status status="PASS" starttime="20201030 16:03:15.888" endtime="20201030 16:03:15.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.897" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 16:03:15.896" endtime="20201030 16:03:15.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.900" level="INFO">VALUE: [5.4722000000000104e-05, 5.4194000000000464e-05, 5.4471999999999854e-05, 5.415300000000123e-05, 5.484700000000023e-05, 5.401400000000153e-05, 5.4249999999998744e-05, 5.408299999999991e-05, 5.4707999999997065e-05, 5.426400000000178e-05, 5.487499999999937e-05, 5.4027999999997633e-05, 5.412499999999862e-05, 5.440300000000148e-05, 5.465300000000173e-05, 5.480500000000152e-05, 5.41809999999969e-05, 5.4429999999997675e-05, 5.438899999999844e-05, 5.4471999999999854e-05, 5.461099999999955e-05, 5.462499999999912e-05, 5.430500000000102e-05, 5.4722000000000104e-05, 5.481900000000109e-05, 5.4777999999998384e-05, 5.4735999999999674e-05, 5.3971999999999354e-05, 5.443100000000062e-05, 5.4291999999997453e-05, 5.4471999999999854e-05, 5.395899999999926e-05, 5.40549999999973e-05, 5.415299999999776e-05, 5.4499999999998994e-05, 5.450000000000246e-05, 5.4458000000000284e-05, 5.484700000000023e-05, 5.430500000000102e-05, 5.454200000000117e-05, 5.4749999999999244e-05, 5.443100000000062e-05, 5.440299999999801e-05, 5.458300000000041e-05, 5.458300000000041e-05, 5.409699999999948e-05, 5.408399999999938e-05, 5.404099999999773e-05, 5.426400000000178e-05, 5.443099999999715e-05]</msg>
<status status="PASS" starttime="20201030 16:03:15.898" endtime="20201030 16:03:15.901"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.893" endtime="20201030 16:03:15.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:15.905" endtime="20201030 16:03:15.924"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.903" endtime="20201030 16:03:15.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.902" endtime="20201030 16:03:15.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.546" endtime="20201030 16:03:15.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.545" endtime="20201030 16:03:15.925"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.934" endtime="20201030 16:03:15.950"></status>
</kw>
<msg timestamp="20201030 16:03:15.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:15.932" endtime="20201030 16:03:15.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:15.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:15.951" endtime="20201030 16:03:15.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.954" endtime="20201030 16:03:15.955"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.930" endtime="20201030 16:03:15.956"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.928" endtime="20201030 16:03:15.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:15.963" endtime="20201030 16:03:16.250"></status>
</kw>
<msg timestamp="20201030 16:03:16.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019359722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:15.961" endtime="20201030 16:03:16.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019359722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:16.254" endtime="20201030 16:03:16.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.262" endtime="20201030 16:03:16.264"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.959" endtime="20201030 16:03:16.264"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.957" endtime="20201030 16:03:16.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:16.269" level="INFO">${RESULT} = [{'diff': 5.532000000000106e-05}, {'diff': 5.50280000000021e-05}, {'diff': 5.544500000000119e-05}, {'diff': 5.512499999999962e-05}, {'diff': 5.531999999999759e-05}, {'diff': 5.5305999999998023e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:16.265" endtime="20201030 16:03:16.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:16.273" level="INFO">${ACCURACY} = {'diff': [5.532000000000106e-05, 5.50280000000021e-05, 5.544500000000119e-05, 5.512499999999962e-05, 5.531999999999759e-05, 5.5305999999998023e-05, 5.519500000000094e-05, 5.5499999999999994e-05, 5.551...</msg>
<status status="PASS" starttime="20201030 16:03:16.270" endtime="20201030 16:03:16.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.277" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 16:03:16.276" endtime="20201030 16:03:16.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.279" level="INFO">VALUE: [5.532000000000106e-05, 5.50280000000021e-05, 5.544500000000119e-05, 5.512499999999962e-05, 5.531999999999759e-05, 5.5305999999998023e-05, 5.519500000000094e-05, 5.5499999999999994e-05, 5.551300000000009e-05, 5.5527999999999134e-05, 5.559700000000098e-05, 5.512499999999962e-05, 5.5151999999999285e-05, 5.511100000000005e-05, 5.4999999999999494e-05, 5.538899999999944e-05, 5.491700000000155e-05, 5.4999999999999494e-05, 5.581900000000209e-05, 5.562500000000012e-05, 5.5471999999997385e-05, 5.563899999999969e-05, 5.519499999999747e-05, 5.505599999999777e-05, 5.5555999999998273e-05, 5.573700000000015e-05, 5.4944000000001214e-05, 5.5013999999999064e-05, 5.4958000000000784e-05, 5.5249999999999744e-05, 5.5513999999999564e-05, 5.584700000000123e-05, 5.4985999999999924e-05, 5.48609999999998e-05, 5.566699999999883e-05, 5.538900000000291e-05, 5.487499999999937e-05, 5.488900000000241e-05, 5.494500000000069e-05, 5.572300000000058e-05, 5.5472000000000854e-05, 5.540299999999901e-05, 5.509700000000048e-05, 5.547300000000033e-05, 5.4943999999997745e-05, 5.5693999999998495e-05, 5.5680000000002394e-05, 5.5736000000000674e-05, 5.5443999999998245e-05, 5.490299999999851e-05]</msg>
<status status="PASS" starttime="20201030 16:03:16.278" endtime="20201030 16:03:16.280"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.273" endtime="20201030 16:03:16.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:16.284" endtime="20201030 16:03:16.304"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.283" endtime="20201030 16:03:16.304"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.282" endtime="20201030 16:03:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.926" endtime="20201030 16:03:16.305"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:15.926" endtime="20201030 16:03:16.305"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.314" endtime="20201030 16:03:16.330"></status>
</kw>
<msg timestamp="20201030 16:03:16.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:16.312" endtime="20201030 16:03:16.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:16.332" endtime="20201030 16:03:16.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.334" endtime="20201030 16:03:16.336"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.310" endtime="20201030 16:03:16.337"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.308" endtime="20201030 16:03:16.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.343" endtime="20201030 16:03:16.629"></status>
</kw>
<msg timestamp="20201030 16:03:16.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:16.342" endtime="20201030 16:03:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:16.633" endtime="20201030 16:03:16.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.642" endtime="20201030 16:03:16.643"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.339" endtime="20201030 16:03:16.644"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.338" endtime="20201030 16:03:16.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:16.648" level="INFO">${RESULT} = [{'diff': 5.6791999999999954e-05}, {'diff': 5.6027999999999634e-05}, {'diff': 5.6778000000000384e-05}, {'diff': 5.6235999999997704e-05}, {'diff': 5.620899999999804e-05}, {'diff': 5.594499999999822e-05...</msg>
<status status="PASS" starttime="20201030 16:03:16.645" endtime="20201030 16:03:16.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:16.652" level="INFO">${ACCURACY} = {'diff': [5.6791999999999954e-05, 5.6027999999999634e-05, 5.6778000000000384e-05, 5.6235999999997704e-05, 5.620899999999804e-05, 5.594499999999822e-05, 5.5957999999998315e-05, 5.641699999999958e-05, 5...</msg>
<status status="PASS" starttime="20201030 16:03:16.649" endtime="20201030 16:03:16.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.656" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 16:03:16.655" endtime="20201030 16:03:16.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.659" level="INFO">VALUE: [5.6791999999999954e-05, 5.6027999999999634e-05, 5.6778000000000384e-05, 5.6235999999997704e-05, 5.620899999999804e-05, 5.594499999999822e-05, 5.5957999999998315e-05, 5.641699999999958e-05, 5.630499999999955e-05, 5.676299999999787e-05, 5.6652000000000785e-05, 5.60549999999993e-05, 5.680500000000005e-05, 5.6791999999999954e-05, 5.630499999999955e-05, 5.63610000000013e-05, 5.6472000000001854e-05, 5.68610000000018e-05, 5.613900000000019e-05, 5.595900000000126e-05, 5.583400000000113e-05, 5.672300000000158e-05, 5.6528000000000134e-05, 5.626299999999737e-05, 5.683299999999919e-05, 5.681899999999962e-05, 5.60549999999993e-05, 5.613900000000019e-05, 5.663899999999722e-05, 5.636099999999783e-05, 5.665300000000026e-05, 5.609700000000148e-05, 5.6541999999999704e-05, 5.665300000000026e-05, 5.61809999999989e-05, 5.6500000000000994e-05, 5.670900000000201e-05, 5.6014000000000064e-05, 5.6485999999997955e-05, 5.6555999999999274e-05, 5.6138000000000715e-05, 5.661099999999808e-05, 5.630499999999955e-05, 5.6764000000000814e-05, 5.5929999999999175e-05, 5.687500000000137e-05, 5.643100000000262e-05, 5.6735999999998205e-05, 5.6499999999997524e-05, 5.612500000000062e-05]</msg>
<status status="PASS" starttime="20201030 16:03:16.657" endtime="20201030 16:03:16.660"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.653" endtime="20201030 16:03:16.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:16.665" endtime="20201030 16:03:16.684"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.663" endtime="20201030 16:03:16.685"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.662" endtime="20201030 16:03:16.685"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.306" endtime="20201030 16:03:16.685"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.305" endtime="20201030 16:03:16.685"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.694" endtime="20201030 16:03:16.711"></status>
</kw>
<msg timestamp="20201030 16:03:16.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:16.692" endtime="20201030 16:03:16.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:16.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:16.712" endtime="20201030 16:03:16.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.715" endtime="20201030 16:03:16.716"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.690" endtime="20201030 16:03:16.717"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.688" endtime="20201030 16:03:16.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:16.724" endtime="20201030 16:03:17.010"></status>
</kw>
<msg timestamp="20201030 16:03:17.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01976375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:16.722" endtime="20201030 16:03:17.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01976375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:17.014" endtime="20201030 16:03:17.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.022" endtime="20201030 16:03:17.024"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.720" endtime="20201030 16:03:17.024"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.718" endtime="20201030 16:03:17.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:17.029" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.706899999999987e-05}, {'diff': 5.6986000000001924e-05}, {'diff': 5.7250000000001744e-05}, {'diff': 5.7471999999999385e-05}, {'diff': 5.7000000000001494e-05...</msg>
<status status="PASS" starttime="20201030 16:03:17.025" endtime="20201030 16:03:17.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:17.033" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.706899999999987e-05, 5.6986000000001924e-05, 5.7250000000001744e-05, 5.7471999999999385e-05, 5.7000000000001494e-05, 5.737500000000187e-05, 5.711100000000205e-05, 5....</msg>
<status status="PASS" starttime="20201030 16:03:17.030" endtime="20201030 16:03:17.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.038" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 16:03:17.037" endtime="20201030 16:03:17.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.040" level="INFO">VALUE: [5.733299999999969e-05, 5.706899999999987e-05, 5.6986000000001924e-05, 5.7250000000001744e-05, 5.7471999999999385e-05, 5.7000000000001494e-05, 5.737500000000187e-05, 5.711100000000205e-05, 5.762500000000212e-05, 5.7500000000001994e-05, 5.7235999999998705e-05, 5.759699999999951e-05, 5.7249999999998274e-05, 5.7457999999999815e-05, 5.712499999999815e-05, 5.759699999999951e-05, 5.7264000000001314e-05, 5.6971999999998885e-05, 5.7486000000002424e-05, 5.7278000000000884e-05, 5.7833999999999663e-05, 5.762499999999865e-05, 5.7749999999998775e-05, 5.756900000000037e-05, 5.708299999999944e-05, 5.7556000000000274e-05, 5.741700000000058e-05, 5.7319999999999593e-05, 5.720899999999904e-05, 5.723700000000165e-05, 5.7569999999999844e-05, 5.740300000000101e-05, 5.704099999999726e-05, 5.727700000000141e-05, 5.7721999999999635e-05, 5.7207999999999565e-05, 5.6958000000002784e-05, 5.690300000000051e-05, 5.706899999999987e-05, 5.783299999999672e-05, 5.712500000000162e-05, 5.7221999999999135e-05, 5.6943999999999745e-05, 5.741700000000058e-05, 5.7401999999998066e-05, 5.747299999999886e-05, 5.73610000000023e-05, 5.7250000000001744e-05, 5.7457999999999815e-05, 5.693099999999965e-05]</msg>
<status status="PASS" starttime="20201030 16:03:17.039" endtime="20201030 16:03:17.045"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.034" endtime="20201030 16:03:17.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:17.050" endtime="20201030 16:03:17.069"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.048" endtime="20201030 16:03:17.070"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.047" endtime="20201030 16:03:17.070"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.686" endtime="20201030 16:03:17.070"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:16.686" endtime="20201030 16:03:17.070"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.079" endtime="20201030 16:03:17.096"></status>
</kw>
<msg timestamp="20201030 16:03:17.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:17.077" endtime="20201030 16:03:17.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:17.097" endtime="20201030 16:03:17.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.100" endtime="20201030 16:03:17.101"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.075" endtime="20201030 16:03:17.102"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.073" endtime="20201030 16:03:17.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.108" endtime="20201030 16:03:17.395"></status>
</kw>
<msg timestamp="20201030 16:03:17.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019584972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:17.107" endtime="20201030 16:03:17.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019584972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:17.400" endtime="20201030 16:03:17.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.408" endtime="20201030 16:03:17.410"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.104" endtime="20201030 16:03:17.410"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.103" endtime="20201030 16:03:17.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:17.414" level="INFO">${RESULT} = [{'diff': 5.7944000000000745e-05}, {'diff': 5.8180000000001425e-05}, {'diff': 5.790300000000151e-05}, {'diff': 5.8194000000000995e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.858300000000094e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:17.411" endtime="20201030 16:03:17.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:17.418" level="INFO">${ACCURACY} = {'diff': [5.7944000000000745e-05, 5.8180000000001425e-05, 5.790300000000151e-05, 5.8194000000000995e-05, 5.83749999999994e-05, 5.858300000000094e-05, 5.8041999999997734e-05, 5.811099999999958e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 16:03:17.415" endtime="20201030 16:03:17.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.423" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 16:03:17.422" endtime="20201030 16:03:17.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.425" level="INFO">VALUE: [5.7944000000000745e-05, 5.8180000000001425e-05, 5.790300000000151e-05, 5.8194000000000995e-05, 5.83749999999994e-05, 5.858300000000094e-05, 5.8041999999997734e-05, 5.811099999999958e-05, 5.7971999999999885e-05, 5.819500000000047e-05, 5.841700000000158e-05, 5.8485999999999955e-05, 5.8028000000001634e-05, 5.8597999999999983e-05, 5.8083999999999913e-05, 5.8499999999999525e-05, 5.809700000000001e-05, 5.8665999999998886e-05, 5.834700000000026e-05, 5.85550000000018e-05, 5.831900000000112e-05, 5.8472000000000385e-05, 5.8735999999996735e-05, 5.8263999999998844e-05, 5.886100000000033e-05, 5.8458000000000815e-05, 5.8499999999999525e-05, 5.7930000000001175e-05, 5.790299999999804e-05, 5.812499999999915e-05, 5.8306000000001024e-05, 5.8527999999998664e-05, 5.7887999999998996e-05, 5.8208000000000565e-05, 5.858299999999747e-05, 5.8679999999998456e-05, 5.8027999999998164e-05, 5.8041999999997734e-05, 5.811100000000305e-05, 5.793100000000065e-05, 5.8027999999998164e-05, 5.8334000000000163e-05, 5.793100000000065e-05, 5.81810000000009e-05, 5.8528000000002134e-05, 5.813899999999872e-05, 5.8444000000001245e-05, 5.8235999999999705e-05, 5.83749999999994e-05, 5.8749999999999775e-05]</msg>
<status status="PASS" starttime="20201030 16:03:17.424" endtime="20201030 16:03:17.426"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.419" endtime="20201030 16:03:17.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:17.430" endtime="20201030 16:03:17.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.429" endtime="20201030 16:03:17.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.427" endtime="20201030 16:03:17.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.071" endtime="20201030 16:03:17.451"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.071" endtime="20201030 16:03:17.451"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.459" endtime="20201030 16:03:17.477"></status>
</kw>
<msg timestamp="20201030 16:03:17.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:17.458" endtime="20201030 16:03:17.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:17.478" endtime="20201030 16:03:17.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.481" endtime="20201030 16:03:17.482"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.455" endtime="20201030 16:03:17.483"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.453" endtime="20201030 16:03:17.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.490" endtime="20201030 16:03:17.775"></status>
</kw>
<msg timestamp="20201030 16:03:17.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:17.488" endtime="20201030 16:03:17.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020519833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:17.780" endtime="20201030 16:03:17.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.790" endtime="20201030 16:03:17.792"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.486" endtime="20201030 16:03:17.792"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.484" endtime="20201030 16:03:17.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:17.797" level="INFO">${RESULT} = [{'diff': 5.9069999999997874e-05}, {'diff': 5.894500000000122e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.9735999999997735e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.898699999999993e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:17.794" endtime="20201030 16:03:17.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:17.801" level="INFO">${ACCURACY} = {'diff': [5.9069999999997874e-05, 5.894500000000122e-05, 5.912500000000015e-05, 5.9735999999997735e-05, 5.9000000000000025e-05, 5.898699999999993e-05, 5.9250000000000275e-05, 5.962500000000065e-05, 5....</msg>
<status status="PASS" starttime="20201030 16:03:17.798" endtime="20201030 16:03:17.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.805" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 16:03:17.804" endtime="20201030 16:03:17.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.811" level="INFO">VALUE: [5.9069999999997874e-05, 5.894500000000122e-05, 5.912500000000015e-05, 5.9735999999997735e-05, 5.9000000000000025e-05, 5.898699999999993e-05, 5.9250000000000275e-05, 5.962500000000065e-05, 5.956900000000237e-05, 5.9652000000000316e-05, 5.9750000000000775e-05, 5.915299999999929e-05, 5.890299999999904e-05, 5.962500000000065e-05, 5.90689999999984e-05, 5.9486000000000955e-05, 5.919500000000147e-05, 5.915300000000276e-05, 5.920900000000104e-05, 5.91810000000019e-05, 5.886100000000033e-05, 5.963900000000022e-05, 5.9584000000001414e-05, 5.9541999999999234e-05, 5.9151999999999816e-05, 5.983299999999872e-05, 5.929099999999951e-05, 5.9457999999998346e-05, 5.8972000000000885e-05, 5.884700000000076e-05, 5.906900000000187e-05, 5.8972000000000885e-05, 5.888899999999947e-05, 5.9555999999998804e-05, 5.894499999999775e-05, 5.9333999999997694e-05, 5.9292000000002454e-05, 5.913899999999972e-05, 5.918099999999843e-05, 5.90689999999984e-05, 5.927699999999994e-05, 5.894500000000122e-05, 5.9457999999998346e-05, 5.909700000000101e-05, 5.908300000000144e-05, 5.9514000000000095e-05, 5.934699999999779e-05, 5.9277999999999414e-05, 5.9722000000001635e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201030 16:03:17.807" endtime="20201030 16:03:17.812"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.802" endtime="20201030 16:03:17.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:17.816" endtime="20201030 16:03:17.836"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.815" endtime="20201030 16:03:17.836"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.814" endtime="20201030 16:03:17.837"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.452" endtime="20201030 16:03:17.837"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.451" endtime="20201030 16:03:17.837"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.846" endtime="20201030 16:03:17.863"></status>
</kw>
<msg timestamp="20201030 16:03:17.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:17.844" endtime="20201030 16:03:17.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:17.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:17.864" endtime="20201030 16:03:17.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.867" endtime="20201030 16:03:17.868"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.842" endtime="20201030 16:03:17.869"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.839" endtime="20201030 16:03:17.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:17.876" endtime="20201030 16:03:18.162"></status>
</kw>
<msg timestamp="20201030 16:03:18.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:17.874" endtime="20201030 16:03:18.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019432986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:18.166" endtime="20201030 16:03:18.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.174" endtime="20201030 16:03:18.176"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.872" endtime="20201030 16:03:18.176"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.870" endtime="20201030 16:03:18.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:18.181" level="INFO">${RESULT} = [{'diff': 6.011099999999811e-05}, {'diff': 6.0471999999998916e-05}, {'diff': 5.9986000000001455e-05}, {'diff': 6.0819999999999624e-05}, {'diff': 6.0444000000003245e-05}, {'diff': 6.022300000000161e-05...</msg>
<status status="PASS" starttime="20201030 16:03:18.177" endtime="20201030 16:03:18.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:18.185" level="INFO">${ACCURACY} = {'diff': [6.011099999999811e-05, 6.0471999999998916e-05, 5.9986000000001455e-05, 6.0819999999999624e-05, 6.0444000000003245e-05, 6.022300000000161e-05, 6.063900000000122e-05, 6.072299999999864e-05, 6....</msg>
<status status="PASS" starttime="20201030 16:03:18.181" endtime="20201030 16:03:18.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.190" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 16:03:18.189" endtime="20201030 16:03:18.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.192" level="INFO">VALUE: [6.011099999999811e-05, 6.0471999999998916e-05, 5.9986000000001455e-05, 6.0819999999999624e-05, 6.0444000000003245e-05, 6.022300000000161e-05, 6.063900000000122e-05, 6.072299999999864e-05, 6.0569999999999374e-05, 6.0598000000001984e-05, 6.030500000000008e-05, 6.077700000000144e-05, 6.0652000000001316e-05, 6.036099999999836e-05, 6.0500000000001525e-05, 6.079099999999754e-05, 6.0013999999997125e-05, 6.019500000000247e-05, 5.98750000000009e-05, 6.03750000000014e-05, 6.016699999999986e-05, 6.03889999999975e-05, 5.993099999999918e-05, 6.012500000000115e-05, 5.997300000000136e-05, 6.052699999999772e-05, 6.059699999999904e-05, 6.0165999999996916e-05, 6.0527999999997195e-05, 6.005499999999983e-05, 5.9971999999998415e-05, 6.0569999999999374e-05, 6.084700000000276e-05, 6.038900000000097e-05, 6.0528000000000665e-05, 6.0013999999997125e-05, 6.0721999999999166e-05, 6.044499999999925e-05, 6.043099999999968e-05, 6.0569999999999374e-05, 6.0806000000000054e-05, 6.0486000000001955e-05, 6.063899999999775e-05, 6.0443999999999776e-05, 6.054100000000076e-05, 6.0430000000000206e-05, 6.068099999999993e-05, 6.083300000000319e-05, 5.9985999999997985e-05, 6.0193999999999526e-05]</msg>
<status status="PASS" starttime="20201030 16:03:18.191" endtime="20201030 16:03:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.186" endtime="20201030 16:03:18.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:18.197" endtime="20201030 16:03:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.196" endtime="20201030 16:03:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.194" endtime="20201030 16:03:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.838" endtime="20201030 16:03:18.218"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:17.837" endtime="20201030 16:03:18.218"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.226" endtime="20201030 16:03:18.244"></status>
</kw>
<msg timestamp="20201030 16:03:18.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:18.225" endtime="20201030 16:03:18.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:18.245" endtime="20201030 16:03:18.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.248" endtime="20201030 16:03:18.249"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.222" endtime="20201030 16:03:18.250"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.220" endtime="20201030 16:03:18.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.257" endtime="20201030 16:03:18.543"></status>
</kw>
<msg timestamp="20201030 16:03:18.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019369083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:18.255" endtime="20201030 16:03:18.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019369083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:18.548" endtime="20201030 16:03:18.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.556" endtime="20201030 16:03:18.557"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.253" endtime="20201030 16:03:18.558"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.251" endtime="20201030 16:03:18.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:18.562" level="INFO">${RESULT} = [{'diff': 6.15140000000021e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.145800000000035e-05}, {'diff': 6.173599999999974e-05}, {'diff': 6.158300000000047e-05}, {'diff': 6.08750000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:18.559" endtime="20201030 16:03:18.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:18.566" level="INFO">${ACCURACY} = {'diff': [6.15140000000021e-05, 6.187499999999943e-05, 6.145800000000035e-05, 6.173599999999974e-05, 6.158300000000047e-05, 6.08750000000019e-05, 6.177799999999845e-05, 6.180600000000105e-05, 6.084699...</msg>
<status status="PASS" starttime="20201030 16:03:18.563" endtime="20201030 16:03:18.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.571" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 16:03:18.570" endtime="20201030 16:03:18.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.573" level="INFO">VALUE: [6.15140000000021e-05, 6.187499999999943e-05, 6.145800000000035e-05, 6.173599999999974e-05, 6.158300000000047e-05, 6.08750000000019e-05, 6.177799999999845e-05, 6.180600000000105e-05, 6.084699999999929e-05, 6.12499999999988e-05, 6.179199999999802e-05, 6.118100000000043e-05, 6.1888999999999e-05, 6.161199999999908e-05, 6.144400000000078e-05, 6.1013999999998125e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.163900000000222e-05, 6.137499999999893e-05, 6.0999999999998555e-05, 6.090299999999757e-05, 6.129200000000098e-05, 6.126399999999838e-05, 6.159799999999951e-05, 6.091700000000061e-05, 6.108399999999944e-05, 6.155499999999786e-05, 6.1582999999997e-05, 6.17499999999993e-05, 6.187499999999943e-05, 6.117999999999749e-05, 6.0944000000000276e-05, 6.0902000000001566e-05, 6.136100000000283e-05, 6.173599999999974e-05, 6.112500000000215e-05, 6.165299999999832e-05, 6.150000000000252e-05, 6.109700000000301e-05, 6.111099999999911e-05, 6.141700000000111e-05, 6.165300000000179e-05, 6.170900000000007e-05, 6.165299999999832e-05, 6.10690000000004e-05, 6.134699999999979e-05, 6.14300000000012e-05, 6.1000000000002025e-05, 6.102700000000169e-05]</msg>
<status status="PASS" starttime="20201030 16:03:18.572" endtime="20201030 16:03:18.574"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.567" endtime="20201030 16:03:18.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:18.578" endtime="20201030 16:03:18.597"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.577" endtime="20201030 16:03:18.598"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.575" endtime="20201030 16:03:18.598"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.219" endtime="20201030 16:03:18.599"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.218" endtime="20201030 16:03:18.599"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.607" endtime="20201030 16:03:18.625"></status>
</kw>
<msg timestamp="20201030 16:03:18.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:18.606" endtime="20201030 16:03:18.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:18.627" endtime="20201030 16:03:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.629" endtime="20201030 16:03:18.630"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.603" endtime="20201030 16:03:18.631"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.601" endtime="20201030 16:03:18.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.638" endtime="20201030 16:03:18.924"></status>
</kw>
<msg timestamp="20201030 16:03:18.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:18.636" endtime="20201030 16:03:18.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:18.928" endtime="20201030 16:03:18.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.937" endtime="20201030 16:03:18.938"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.634" endtime="20201030 16:03:18.939"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.632" endtime="20201030 16:03:18.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:18.943" level="INFO">${RESULT} = [{'diff': 6.23750000000034e-05}, {'diff': 6.279199999999902e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.247200000000092e-05}, {'diff': 6.194500000000075e-05}, {'diff': 6.236100000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:18.940" endtime="20201030 16:03:18.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:18.948" level="INFO">${ACCURACY} = {'diff': [6.23750000000034e-05, 6.279199999999902e-05, 6.234700000000079e-05, 6.247200000000092e-05, 6.194500000000075e-05, 6.236100000000036e-05, 6.20279999999987e-05, 6.248600000000049e-05, 6.226399...</msg>
<status status="PASS" starttime="20201030 16:03:18.944" endtime="20201030 16:03:18.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.952" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 16:03:18.951" endtime="20201030 16:03:18.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:18.954" level="INFO">VALUE: [6.23750000000034e-05, 6.279199999999902e-05, 6.234700000000079e-05, 6.247200000000092e-05, 6.194500000000075e-05, 6.236100000000036e-05, 6.20279999999987e-05, 6.248600000000049e-05, 6.226399999999938e-05, 6.22499999999998e-05, 6.211100000000011e-05, 6.199999999999956e-05, 6.27500000000003e-05, 6.191599999999867e-05, 6.258400000000094e-05, 6.261099999999714e-05, 6.273600000000074e-05, 6.240200000000307e-05, 6.266600000000289e-05, 6.226399999999938e-05, 6.199999999999956e-05, 6.266699999999889e-05, 6.222200000000067e-05, 6.201399999999913e-05, 6.245799999999788e-05, 6.263899999999975e-05, 6.230500000000208e-05, 6.247200000000092e-05, 6.248599999999702e-05, 6.286199999999686e-05, 6.225000000000327e-05, 6.197200000000042e-05, 6.194400000000128e-05, 6.259700000000104e-05, 6.263899999999975e-05, 6.236099999999689e-05, 6.240300000000254e-05, 6.262500000000018e-05, 6.279200000000248e-05, 6.229199999999852e-05, 6.282000000000162e-05, 6.279199999999902e-05, 6.190299999999857e-05, 6.237499999999993e-05, 6.265299999999932e-05, 6.279099999999954e-05, 6.222200000000067e-05, 6.248600000000049e-05, 6.192999999999824e-05, 6.265299999999932e-05]</msg>
<status status="PASS" starttime="20201030 16:03:18.953" endtime="20201030 16:03:18.956"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.948" endtime="20201030 16:03:18.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:18.960" endtime="20201030 16:03:18.980"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.959" endtime="20201030 16:03:18.980"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.957" endtime="20201030 16:03:18.980"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.600" endtime="20201030 16:03:18.981"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.599" endtime="20201030 16:03:18.981"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:18.989" endtime="20201030 16:03:19.006"></status>
</kw>
<msg timestamp="20201030 16:03:19.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:18.988" endtime="20201030 16:03:19.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:19.008" endtime="20201030 16:03:19.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.010" endtime="20201030 16:03:19.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.985" endtime="20201030 16:03:19.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.983" endtime="20201030 16:03:19.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.019" endtime="20201030 16:03:19.305"></status>
</kw>
<msg timestamp="20201030 16:03:19.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019518139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:19.017" endtime="20201030 16:03:19.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019518139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:19.309" endtime="20201030 16:03:19.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.317" endtime="20201030 16:03:19.319"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.015" endtime="20201030 16:03:19.319"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.013" endtime="20201030 16:03:19.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:19.324" level="INFO">${RESULT} = [{'diff': 6.370799999999913e-05}, {'diff': 6.343100000000268e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.319499999999853e-05}, {'diff': 6.341600000000017e-05}, {'diff': 6.367999999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:19.321" endtime="20201030 16:03:19.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:19.329" level="INFO">${ACCURACY} = {'diff': [6.370799999999913e-05, 6.343100000000268e-05, 6.351400000000063e-05, 6.319499999999853e-05, 6.341600000000017e-05, 6.367999999999999e-05, 6.355499999999986e-05, 6.334700000000179e-05, 6.3707...</msg>
<status status="PASS" starttime="20201030 16:03:19.325" endtime="20201030 16:03:19.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.333" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 16:03:19.332" endtime="20201030 16:03:19.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.336" level="INFO">VALUE: [6.370799999999913e-05, 6.343100000000268e-05, 6.351400000000063e-05, 6.319499999999853e-05, 6.341600000000017e-05, 6.367999999999999e-05, 6.355499999999986e-05, 6.334700000000179e-05, 6.370799999999913e-05, 6.320799999999863e-05, 6.32219999999982e-05, 6.342999999999974e-05, 6.294400000000228e-05, 6.284700000000129e-05, 6.376400000000088e-05, 6.322200000000167e-05, 6.35280000000002e-05, 6.333399999999823e-05, 6.379200000000002e-05, 6.354100000000029e-05, 6.347300000000139e-05, 6.377700000000097e-05, 6.342999999999974e-05, 6.338899999999703e-05, 6.316599999999992e-05, 6.34029999999966e-05, 6.298599999999752e-05, 6.361100000000161e-05, 6.340300000000007e-05, 6.336100000000136e-05, 6.350000000000106e-05, 6.347199999999845e-05, 6.308400000000144e-05, 6.35280000000002e-05, 6.373599999999827e-05, 6.356899999999943e-05, 6.326400000000038e-05, 6.367999999999999e-05, 6.337499999999746e-05, 6.334699999999832e-05, 6.355499999999986e-05, 6.35690000000029e-05, 6.368099999999946e-05, 6.30829999999985e-05, 6.365300000000032e-05, 6.295899999999785e-05, 6.369499999999903e-05, 6.359700000000204e-05, 6.305599999999884e-05, 6.333399999999823e-05]</msg>
<status status="PASS" starttime="20201030 16:03:19.334" endtime="20201030 16:03:19.336"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.330" endtime="20201030 16:03:19.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:19.340" endtime="20201030 16:03:19.360"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.339" endtime="20201030 16:03:19.360"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.338" endtime="20201030 16:03:19.361"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.982" endtime="20201030 16:03:19.361"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:18.981" endtime="20201030 16:03:19.361"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.370" endtime="20201030 16:03:19.387"></status>
</kw>
<msg timestamp="20201030 16:03:19.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:19.368" endtime="20201030 16:03:19.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:19.389" endtime="20201030 16:03:19.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.391" endtime="20201030 16:03:19.393"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.366" endtime="20201030 16:03:19.393"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.363" endtime="20201030 16:03:19.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.400" endtime="20201030 16:03:19.687"></status>
</kw>
<msg timestamp="20201030 16:03:19.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020325639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:19.398" endtime="20201030 16:03:19.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020325639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:19.691" endtime="20201030 16:03:19.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.699" endtime="20201030 16:03:19.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.396" endtime="20201030 16:03:19.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.394" endtime="20201030 16:03:19.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:19.706" level="INFO">${RESULT} = [{'diff': 6.398600000000199e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.39439999999998e-05}, {'diff': 6.47219999999997e-05}, {'diff': 6.440300000000107e-05}, {'diff': 6.395899999999885e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:19.703" endtime="20201030 16:03:19.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:19.710" level="INFO">${ACCURACY} = {'diff': [6.398600000000199e-05, 6.479200000000102e-05, 6.39439999999998e-05, 6.47219999999997e-05, 6.440300000000107e-05, 6.395899999999885e-05, 6.43479999999988e-05, 6.458399999999948e-05, 6.4527999...</msg>
<status status="PASS" starttime="20201030 16:03:19.707" endtime="20201030 16:03:19.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.714" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 16:03:19.713" endtime="20201030 16:03:19.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.717" level="INFO">VALUE: [6.398600000000199e-05, 6.479200000000102e-05, 6.39439999999998e-05, 6.47219999999997e-05, 6.440300000000107e-05, 6.395899999999885e-05, 6.43479999999988e-05, 6.458399999999948e-05, 6.452799999999773e-05, 6.423599999999877e-05, 6.463900000000175e-05, 6.462499999999871e-05, 6.490300000000157e-05, 6.404100000000079e-05, 6.454200000000077e-05, 6.479199999999755e-05, 6.4583e-05, 6.433399999999923e-05, 6.391700000000014e-05, 6.387500000000143e-05, 6.419499999999953e-05, 6.404200000000027e-05, 6.426400000000138e-05, 6.42089999999991e-05, 6.451400000000163e-05, 6.412500000000168e-05, 6.400000000000156e-05, 6.424999999999834e-05, 6.465200000000185e-05, 6.466700000000089e-05, 6.398599999999852e-05, 6.429200000000052e-05, 6.484699999999982e-05, 6.395799999999938e-05, 6.452799999999773e-05, 6.405599999999984e-05, 6.44029999999976e-05, 6.466699999999742e-05, 6.482000000000016e-05, 6.409800000000201e-05, 6.476400000000188e-05, 6.483300000000025e-05, 6.404099999999732e-05, 6.401399999999766e-05, 6.451399999999816e-05, 6.400000000000156e-05, 6.413899999999778e-05, 6.404200000000027e-05, 6.431999999999966e-05, 6.419499999999953e-05]</msg>
<status status="PASS" starttime="20201030 16:03:19.715" endtime="20201030 16:03:19.717"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.711" endtime="20201030 16:03:19.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:19.721" endtime="20201030 16:03:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.720" endtime="20201030 16:03:19.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.719" endtime="20201030 16:03:19.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.362" endtime="20201030 16:03:19.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.361" endtime="20201030 16:03:19.742"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.751" endtime="20201030 16:03:19.768"></status>
</kw>
<msg timestamp="20201030 16:03:19.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:19.749" endtime="20201030 16:03:19.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:19.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:19.769" endtime="20201030 16:03:19.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.772" endtime="20201030 16:03:19.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.747" endtime="20201030 16:03:19.774"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.744" endtime="20201030 16:03:19.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:19.781" endtime="20201030 16:03:20.067"></status>
</kw>
<msg timestamp="20201030 16:03:20.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:19.779" endtime="20201030 16:03:20.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020270319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:20.071" endtime="20201030 16:03:20.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.079" endtime="20201030 16:03:20.081"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.777" endtime="20201030 16:03:20.081"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.775" endtime="20201030 16:03:20.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:20.086" level="INFO">${RESULT} = [{'diff': 6.518100000000096e-05}, {'diff': 6.52220000000002e-05}, {'diff': 6.494500000000028e-05}, {'diff': 6.563899999999928e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.530600000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:20.082" endtime="20201030 16:03:20.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:20.090" level="INFO">${ACCURACY} = {'diff': [6.518100000000096e-05, 6.52220000000002e-05, 6.494500000000028e-05, 6.563899999999928e-05, 6.512499999999921e-05, 6.530600000000109e-05, 6.499999999999909e-05, 6.502699999999875e-05, 6.57769...</msg>
<status status="PASS" starttime="20201030 16:03:20.087" endtime="20201030 16:03:20.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.094" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 16:03:20.093" endtime="20201030 16:03:20.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.096" level="INFO">VALUE: [6.518100000000096e-05, 6.52220000000002e-05, 6.494500000000028e-05, 6.563899999999928e-05, 6.512499999999921e-05, 6.530600000000109e-05, 6.499999999999909e-05, 6.502699999999875e-05, 6.57769999999995e-05, 6.57220000000007e-05, 6.556900000000143e-05, 6.54029999999986e-05, 6.495800000000038e-05, 6.534700000000032e-05, 6.580600000000159e-05, 6.487500000000243e-05, 6.509700000000007e-05, 6.494500000000028e-05, 6.582000000000116e-05, 6.543100000000121e-05, 6.509700000000007e-05, 6.498599999999952e-05, 6.573600000000027e-05, 6.531900000000118e-05, 6.574999999999984e-05, 6.581899999999821e-05, 6.491600000000167e-05, 6.523599999999977e-05, 6.537500000000293e-05, 6.574999999999984e-05, 6.579200000000202e-05, 6.524999999999934e-05, 6.50419999999978e-05, 6.536099999999989e-05, 6.55280000000022e-05, 6.559700000000057e-05, 6.523599999999977e-05, 6.519400000000106e-05, 6.533300000000075e-05, 6.533300000000075e-05, 6.487499999999896e-05, 6.50830000000005e-05, 6.531899999999771e-05, 6.55419999999983e-05, 6.515299999999835e-05, 6.586100000000039e-05, 6.55280000000022e-05, 6.548600000000002e-05, 6.561100000000014e-05, 6.491700000000114e-05]</msg>
<status status="PASS" starttime="20201030 16:03:20.095" endtime="20201030 16:03:20.098"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.090" endtime="20201030 16:03:20.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:20.102" endtime="20201030 16:03:20.122"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.101" endtime="20201030 16:03:20.122"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.099" endtime="20201030 16:03:20.122"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.743" endtime="20201030 16:03:20.123"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:19.742" endtime="20201030 16:03:20.123"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.131" endtime="20201030 16:03:20.149"></status>
</kw>
<msg timestamp="20201030 16:03:20.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:20.130" endtime="20201030 16:03:20.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:20.150" endtime="20201030 16:03:20.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.152" endtime="20201030 16:03:20.154"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.127" endtime="20201030 16:03:20.155"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.125" endtime="20201030 16:03:20.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.161" endtime="20201030 16:03:20.447"></status>
</kw>
<msg timestamp="20201030 16:03:20.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:20.160" endtime="20201030 16:03:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019636264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:20.451" endtime="20201030 16:03:20.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.459" endtime="20201030 16:03:20.461"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.157" endtime="20201030 16:03:20.461"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.156" endtime="20201030 16:03:20.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:20.466" level="INFO">${RESULT} = [{'diff': 6.618100000000196e-05}, {'diff': 6.608400000000098e-05}, {'diff': 6.681999999999869e-05}, {'diff': 6.647299999999745e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.588899999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:20.463" endtime="20201030 16:03:20.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:20.471" level="INFO">${ACCURACY} = {'diff': [6.618100000000196e-05, 6.608400000000098e-05, 6.681999999999869e-05, 6.647299999999745e-05, 6.612500000000021e-05, 6.588899999999953e-05, 6.598600000000052e-05, 6.613899999999978e-05, 6.6804...</msg>
<status status="PASS" starttime="20201030 16:03:20.467" endtime="20201030 16:03:20.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.475" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 16:03:20.474" endtime="20201030 16:03:20.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.478" level="INFO">VALUE: [6.618100000000196e-05, 6.608400000000098e-05, 6.681999999999869e-05, 6.647299999999745e-05, 6.612500000000021e-05, 6.588899999999953e-05, 6.598600000000052e-05, 6.613899999999978e-05, 6.680499999999964e-05, 6.679100000000007e-05, 6.640300000000307e-05, 6.662500000000071e-05, 6.648600000000102e-05, 6.623600000000077e-05, 6.618100000000196e-05, 6.608299999999803e-05, 6.601399999999966e-05, 6.613899999999978e-05, 6.593100000000171e-05, 6.651400000000016e-05, 6.633400000000123e-05, 6.638900000000003e-05, 6.605499999999889e-05, 6.677799999999998e-05, 6.587499999999996e-05, 6.598600000000052e-05, 6.633399999999776e-05, 6.673600000000127e-05, 6.638900000000003e-05, 6.615299999999935e-05, 6.638800000000056e-05, 6.62090000000011e-05, 6.612500000000021e-05, 6.604200000000227e-05, 6.672199999999823e-05, 6.673700000000074e-05, 6.666599999999995e-05, 6.630499999999914e-05, 6.616699999999892e-05, 6.67640000000004e-05, 6.677799999999998e-05, 6.681899999999921e-05, 6.679199999999955e-05, 6.686099999999792e-05, 6.681999999999869e-05, 6.62639999999999e-05, 6.666699999999942e-05, 6.659799999999758e-05, 6.647200000000145e-05, 6.630599999999862e-05]</msg>
<status status="PASS" starttime="20201030 16:03:20.476" endtime="20201030 16:03:20.478"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.472" endtime="20201030 16:03:20.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:20.482" endtime="20201030 16:03:20.502"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.481" endtime="20201030 16:03:20.502"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.480" endtime="20201030 16:03:20.503"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.124" endtime="20201030 16:03:20.503"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.123" endtime="20201030 16:03:20.503"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.512" endtime="20201030 16:03:20.530"></status>
</kw>
<msg timestamp="20201030 16:03:20.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:20.510" endtime="20201030 16:03:20.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:20.531" endtime="20201030 16:03:20.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.533" endtime="20201030 16:03:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.508" endtime="20201030 16:03:20.536"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.506" endtime="20201030 16:03:20.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.542" endtime="20201030 16:03:20.829"></status>
</kw>
<msg timestamp="20201030 16:03:20.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:20.541" endtime="20201030 16:03:20.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:20.833" endtime="20201030 16:03:20.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.841" endtime="20201030 16:03:20.843"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.538" endtime="20201030 16:03:20.843"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.537" endtime="20201030 16:03:20.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:20.847" level="INFO">${RESULT} = [{'diff': 6.780600000000012e-05}, {'diff': 6.730599999999962e-05}, {'diff': 6.770899999999913e-05}, {'diff': 6.687500000000096e-05}, {'diff': 6.725000000000134e-05}, {'diff': 6.780500000000064e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:20.844" endtime="20201030 16:03:20.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:20.851" level="INFO">${ACCURACY} = {'diff': [6.780600000000012e-05, 6.730599999999962e-05, 6.770899999999913e-05, 6.687500000000096e-05, 6.725000000000134e-05, 6.780500000000064e-05, 6.70969999999986e-05, 6.783299999999978e-05, 6.72640...</msg>
<status status="PASS" starttime="20201030 16:03:20.848" endtime="20201030 16:03:20.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.856" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 16:03:20.855" endtime="20201030 16:03:20.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.858" level="INFO">VALUE: [6.780600000000012e-05, 6.730599999999962e-05, 6.770899999999913e-05, 6.687500000000096e-05, 6.725000000000134e-05, 6.780500000000064e-05, 6.70969999999986e-05, 6.783299999999978e-05, 6.72640000000009e-05, 6.694400000000281e-05, 6.686100000000139e-05, 6.691699999999967e-05, 6.761099999999867e-05, 6.737500000000146e-05, 6.765300000000085e-05, 6.781999999999969e-05, 6.737499999999799e-05, 6.730500000000014e-05, 6.740200000000113e-05, 6.754100000000082e-05, 6.726399999999744e-05, 6.72359999999983e-05, 6.747199999999898e-05, 6.719399999999959e-05, 6.738899999999756e-05, 6.692999999999977e-05, 6.694499999999881e-05, 6.74299999999968e-05, 6.70419999999998e-05, 6.709700000000207e-05, 6.687500000000096e-05, 6.74030000000006e-05, 6.70419999999998e-05, 6.726299999999796e-05, 6.781900000000021e-05, 6.756899999999996e-05, 6.72359999999983e-05, 6.751399999999769e-05, 6.740299999999713e-05, 6.738900000000103e-05, 6.693099999999924e-05, 6.72359999999983e-05, 6.693100000000271e-05, 6.72359999999983e-05, 6.744500000000278e-05, 6.723600000000177e-05, 6.723600000000177e-05, 6.758299999999953e-05, 6.752699999999778e-05, 6.787500000000196e-05]</msg>
<status status="PASS" starttime="20201030 16:03:20.857" endtime="20201030 16:03:20.859"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.852" endtime="20201030 16:03:20.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:20.863" endtime="20201030 16:03:20.882"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.862" endtime="20201030 16:03:20.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.860" endtime="20201030 16:03:20.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.504" endtime="20201030 16:03:20.884"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.504" endtime="20201030 16:03:20.884"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.892" endtime="20201030 16:03:20.910"></status>
</kw>
<msg timestamp="20201030 16:03:20.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:20.891" endtime="20201030 16:03:20.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:20.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:20.912" endtime="20201030 16:03:20.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.914" endtime="20201030 16:03:20.916"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.888" endtime="20201030 16:03:20.917"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.886" endtime="20201030 16:03:20.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:20.923" endtime="20201030 16:03:21.209"></status>
</kw>
<msg timestamp="20201030 16:03:21.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:20.922" endtime="20201030 16:03:21.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:21.213" endtime="20201030 16:03:21.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.221" endtime="20201030 16:03:21.223"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.919" endtime="20201030 16:03:21.224"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.918" endtime="20201030 16:03:21.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:21.228" level="INFO">${RESULT} = [{'diff': 6.877799999999851e-05}, {'diff': 6.798600000000252e-05}, {'diff': 6.808300000000003e-05}, {'diff': 6.837499999999899e-05}, {'diff': 6.794499999999981e-05}, {'diff': 6.880599999999765e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:21.225" endtime="20201030 16:03:21.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:21.232" level="INFO">${ACCURACY} = {'diff': [6.877799999999851e-05, 6.798600000000252e-05, 6.808300000000003e-05, 6.837499999999899e-05, 6.794499999999981e-05, 6.880599999999765e-05, 6.834699999999985e-05, 6.87229999999997e-05, 6.82080...</msg>
<status status="PASS" starttime="20201030 16:03:21.229" endtime="20201030 16:03:21.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.236" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 16:03:21.235" endtime="20201030 16:03:21.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.242" level="INFO">VALUE: [6.877799999999851e-05, 6.798600000000252e-05, 6.808300000000003e-05, 6.837499999999899e-05, 6.794499999999981e-05, 6.880599999999765e-05, 6.834699999999985e-05, 6.87229999999997e-05, 6.820800000000016e-05, 6.870900000000013e-05, 6.886099999999992e-05, 6.794400000000034e-05, 6.825000000000234e-05, 6.847199999999998e-05, 6.836099999999942e-05, 6.865300000000185e-05, 6.797200000000295e-05, 6.82640000000019e-05, 6.848599999999955e-05, 6.830600000000062e-05, 6.836100000000289e-05, 6.830499999999767e-05, 6.857000000000044e-05, 6.855500000000139e-05, 6.870800000000066e-05, 6.883300000000078e-05, 6.805499999999742e-05, 6.801399999999819e-05, 6.787499999999849e-05, 6.883300000000078e-05, 6.787499999999849e-05, 6.858300000000053e-05, 6.808400000000298e-05, 6.862499999999924e-05, 6.791700000000067e-05, 6.838899999999856e-05, 6.87229999999997e-05, 6.798600000000252e-05, 6.820800000000016e-05, 6.802700000000175e-05, 6.830499999999767e-05, 6.856900000000096e-05, 6.818000000000102e-05, 6.790299999999763e-05, 6.857000000000044e-05, 6.813900000000178e-05, 6.881900000000121e-05, 6.818100000000049e-05, 6.816700000000092e-05, 6.855600000000087e-05]</msg>
<status status="PASS" starttime="20201030 16:03:21.238" endtime="20201030 16:03:21.243"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.233" endtime="20201030 16:03:21.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:21.247" endtime="20201030 16:03:21.267"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.246" endtime="20201030 16:03:21.267"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.244" endtime="20201030 16:03:21.267"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.885" endtime="20201030 16:03:21.268"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:20.884" endtime="20201030 16:03:21.268"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.276" endtime="20201030 16:03:21.294"></status>
</kw>
<msg timestamp="20201030 16:03:21.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:21.275" endtime="20201030 16:03:21.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:21.296" endtime="20201030 16:03:21.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.298" endtime="20201030 16:03:21.300"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.272" endtime="20201030 16:03:21.300"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.270" endtime="20201030 16:03:21.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.307" endtime="20201030 16:03:21.593"></status>
</kw>
<msg timestamp="20201030 16:03:21.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019382667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:21.305" endtime="20201030 16:03:21.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019382667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:21.597" endtime="20201030 16:03:21.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.605" endtime="20201030 16:03:21.607"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.303" endtime="20201030 16:03:21.607"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.301" endtime="20201030 16:03:21.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:21.612" level="INFO">${RESULT} = [{'diff': 6.961100000000067e-05}, {'diff': 6.961200000000015e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.915199999999941e-05}, {'diff': 6.980499999999917e-05}, {'diff': 6.936100000000042e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:21.608" endtime="20201030 16:03:21.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:21.616" level="INFO">${ACCURACY} = {'diff': [6.961100000000067e-05, 6.961200000000015e-05, 6.934700000000085e-05, 6.915199999999941e-05, 6.980499999999917e-05, 6.936100000000042e-05, 6.936100000000042e-05, 6.911100000000017e-05, 6.9417...</msg>
<status status="PASS" starttime="20201030 16:03:21.612" endtime="20201030 16:03:21.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.621" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 16:03:21.620" endtime="20201030 16:03:21.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.623" level="INFO">VALUE: [6.961100000000067e-05, 6.961200000000015e-05, 6.934700000000085e-05, 6.915199999999941e-05, 6.980499999999917e-05, 6.936100000000042e-05, 6.936100000000042e-05, 6.911100000000017e-05, 6.941700000000217e-05, 6.913899999999931e-05, 6.977799999999951e-05, 6.895800000000091e-05, 6.943100000000174e-05, 6.919399999999812e-05, 6.979199999999908e-05, 6.901400000000266e-05, 6.930599999999815e-05, 6.886099999999992e-05, 6.941599999999923e-05, 6.952799999999926e-05, 6.952800000000273e-05, 6.912499999999974e-05, 6.916699999999845e-05, 6.940299999999913e-05, 6.938899999999956e-05, 6.911100000000017e-05, 6.97230000000007e-05, 6.932000000000119e-05, 6.926299999999996e-05, 6.890299999999863e-05, 6.97230000000007e-05, 6.886099999999992e-05, 6.90970000000006e-05, 6.89299999999983e-05, 6.89299999999983e-05, 6.933300000000128e-05, 6.981899999999874e-05, 6.947300000000045e-05, 6.95559999999984e-05, 6.965299999999938e-05, 6.948600000000055e-05, 6.980599999999865e-05, 6.958399999999754e-05, 6.926399999999944e-05, 6.904099999999885e-05, 6.887500000000296e-05, 6.936100000000042e-05, 6.952799999999926e-05, 6.980499999999917e-05, 6.94169999999987e-05]</msg>
<status status="PASS" starttime="20201030 16:03:21.622" endtime="20201030 16:03:21.624"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.617" endtime="20201030 16:03:21.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:21.628" endtime="20201030 16:03:21.648"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.627" endtime="20201030 16:03:21.648"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.625" endtime="20201030 16:03:21.648"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.269" endtime="20201030 16:03:21.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.268" endtime="20201030 16:03:21.649"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.657" endtime="20201030 16:03:21.675"></status>
</kw>
<msg timestamp="20201030 16:03:21.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:21.656" endtime="20201030 16:03:21.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:21.677" endtime="20201030 16:03:21.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.679" endtime="20201030 16:03:21.681"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.653" endtime="20201030 16:03:21.681"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.651" endtime="20201030 16:03:21.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.688" endtime="20201030 16:03:21.974"></status>
</kw>
<msg timestamp="20201030 16:03:21.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019378722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:21.687" endtime="20201030 16:03:21.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:21.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019378722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:21.979" endtime="20201030 16:03:21.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:21.988" endtime="20201030 16:03:21.989"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.684" endtime="20201030 16:03:21.990"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.682" endtime="20201030 16:03:21.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:21.994" level="INFO">${RESULT} = [{'diff': 7.016599999999998e-05}, {'diff': 7.081899999999974e-05}, {'diff': 7.00970000000016e-05}, {'diff': 7.020800000000216e-05}, {'diff': 7.086099999999845e-05}, {'diff': 6.997200000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:21.991" endtime="20201030 16:03:21.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:21.998" level="INFO">${ACCURACY} = {'diff': [7.016599999999998e-05, 7.081899999999974e-05, 7.00970000000016e-05, 7.020800000000216e-05, 7.086099999999845e-05, 6.997200000000148e-05, 6.994500000000181e-05, 7.032000000000219e-05, 7.00969...</msg>
<status status="PASS" starttime="20201030 16:03:21.995" endtime="20201030 16:03:21.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.003" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 16:03:22.002" endtime="20201030 16:03:22.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.005" level="INFO">VALUE: [7.016599999999998e-05, 7.081899999999974e-05, 7.00970000000016e-05, 7.020800000000216e-05, 7.086099999999845e-05, 6.997200000000148e-05, 6.994500000000181e-05, 7.032000000000219e-05, 7.009699999999813e-05, 7.007000000000194e-05, 7.069500000000256e-05, 7.077799999999704e-05, 7.02230000000012e-05, 7.058299999999906e-05, 7.017999999999955e-05, 7.017999999999955e-05, 7.047200000000198e-05, 7.011100000000117e-05, 7.006899999999899e-05, 7.084699999999888e-05, 7.009699999999813e-05, 7.069499999999909e-05, 7.036099999999795e-05, 7.062500000000124e-05, 7.05979999999981e-05, 7.026400000000044e-05, 7.051400000000069e-05, 7.058299999999906e-05, 7.020799999999869e-05, 7.000000000000062e-05, 7.027800000000001e-05, 7.025000000000087e-05, 7.047199999999851e-05, 7.04169999999997e-05, 7.079200000000008e-05, 7.040300000000013e-05, 6.997200000000148e-05, 7.063900000000081e-05, 6.994499999999834e-05, 7.040300000000013e-05, 7.051400000000069e-05, 7.068000000000005e-05, 7.005499999999942e-05, 7.033299999999881e-05, 7.022200000000173e-05, 6.995799999999844e-05, 7.036099999999795e-05, 7.012499999999727e-05, 7.005600000000237e-05, 6.994399999999887e-05]</msg>
<status status="PASS" starttime="20201030 16:03:22.004" endtime="20201030 16:03:22.006"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.999" endtime="20201030 16:03:22.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:22.010" endtime="20201030 16:03:22.029"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.008" endtime="20201030 16:03:22.030"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.007" endtime="20201030 16:03:22.030"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.650" endtime="20201030 16:03:22.030"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:21.649" endtime="20201030 16:03:22.031"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.039" endtime="20201030 16:03:22.058"></status>
</kw>
<msg timestamp="20201030 16:03:22.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:22.038" endtime="20201030 16:03:22.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:22.059" endtime="20201030 16:03:22.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.062" endtime="20201030 16:03:22.063"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.035" endtime="20201030 16:03:22.064"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.033" endtime="20201030 16:03:22.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.071" endtime="20201030 16:03:22.355"></status>
</kw>
<msg timestamp="20201030 16:03:22.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02123825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:22.069" endtime="20201030 16:03:22.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02123825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:22.360" endtime="20201030 16:03:22.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.368" endtime="20201030 16:03:22.370"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.067" endtime="20201030 16:03:22.370"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.065" endtime="20201030 16:03:22.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:22.374" level="INFO">${RESULT} = [{'diff': 7.129200000000058e-05}, {'diff': 7.104200000000033e-05}, {'diff': 7.081899999999974e-05}, {'diff': 7.125000000000187e-05}, {'diff': 7.081899999999974e-05}, {'diff': 7.136099999999895e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:22.371" endtime="20201030 16:03:22.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:22.378" level="INFO">${ACCURACY} = {'diff': [7.129200000000058e-05, 7.104200000000033e-05, 7.081899999999974e-05, 7.125000000000187e-05, 7.081899999999974e-05, 7.136099999999895e-05, 7.158300000000006e-05, 7.09170000000002e-05, 7.12920...</msg>
<status status="PASS" starttime="20201030 16:03:22.375" endtime="20201030 16:03:22.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.383" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 16:03:22.382" endtime="20201030 16:03:22.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.385" level="INFO">VALUE: [7.129200000000058e-05, 7.104200000000033e-05, 7.081899999999974e-05, 7.125000000000187e-05, 7.081899999999974e-05, 7.136099999999895e-05, 7.158300000000006e-05, 7.09170000000002e-05, 7.129200000000058e-05, 7.168100000000052e-05, 7.156999999999997e-05, 7.159699999999963e-05, 7.154200000000083e-05, 7.148699999999855e-05, 7.148700000000202e-05, 7.109800000000208e-05, 7.162499999999877e-05, 7.150000000000212e-05, 7.088900000000106e-05, 7.155499999999745e-05, 7.108299999999956e-05, 7.119400000000012e-05, 7.177799999999804e-05, 7.098599999999858e-05, 7.127799999999754e-05, 7.130600000000015e-05, 7.108399999999904e-05, 7.147299999999898e-05, 7.165200000000191e-05, 7.17499999999989e-05, 7.094399999999987e-05, 7.12910000000011e-05, 7.138900000000156e-05, 7.116700000000045e-05, 7.098600000000205e-05, 7.12360000000023e-05, 7.104200000000033e-05, 7.138900000000156e-05, 7.145799999999994e-05, 7.14170000000007e-05, 7.095899999999891e-05, 7.165300000000138e-05, 7.159799999999911e-05, 7.130500000000067e-05, 7.088799999999812e-05, 7.101399999999772e-05, 7.136100000000242e-05, 7.17499999999989e-05, 7.097200000000248e-05, 7.176399999999847e-05]</msg>
<status status="PASS" starttime="20201030 16:03:22.384" endtime="20201030 16:03:22.387"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.379" endtime="20201030 16:03:22.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:22.391" endtime="20201030 16:03:22.410"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.389" endtime="20201030 16:03:22.411"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.388" endtime="20201030 16:03:22.411"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.031" endtime="20201030 16:03:22.411"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.031" endtime="20201030 16:03:22.412"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.420" endtime="20201030 16:03:22.439"></status>
</kw>
<msg timestamp="20201030 16:03:22.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:22.419" endtime="20201030 16:03:22.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:22.440" endtime="20201030 16:03:22.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.442" endtime="20201030 16:03:22.444"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.416" endtime="20201030 16:03:22.445"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.414" endtime="20201030 16:03:22.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.451" endtime="20201030 16:03:22.739"></status>
</kw>
<msg timestamp="20201030 16:03:22.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:22.450" endtime="20201030 16:03:22.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:22.745" endtime="20201030 16:03:22.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.756" endtime="20201030 16:03:22.759"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.447" endtime="20201030 16:03:22.760"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.446" endtime="20201030 16:03:22.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:22.767" level="INFO">${RESULT} = [{'diff': 7.262499999999977e-05}, {'diff': 7.236099999999995e-05}, {'diff': 7.230600000000115e-05}, {'diff': 7.27499999999999e-05}, {'diff': 7.194500000000034e-05}, {'diff': 7.258300000000106e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:22.762" endtime="20201030 16:03:22.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:22.773" level="INFO">${ACCURACY} = {'diff': [7.262499999999977e-05, 7.236099999999995e-05, 7.230600000000115e-05, 7.27499999999999e-05, 7.194500000000034e-05, 7.258300000000106e-05, 7.194400000000087e-05, 7.255500000000192e-05, 7.25689...</msg>
<status status="PASS" starttime="20201030 16:03:22.768" endtime="20201030 16:03:22.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.778" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 16:03:22.777" endtime="20201030 16:03:22.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.781" level="INFO">VALUE: [7.262499999999977e-05, 7.236099999999995e-05, 7.230600000000115e-05, 7.27499999999999e-05, 7.194500000000034e-05, 7.258300000000106e-05, 7.194400000000087e-05, 7.255500000000192e-05, 7.256899999999802e-05, 7.199999999999915e-05, 7.213899999999884e-05, 7.202800000000176e-05, 7.2069000000001e-05, 7.265299999999891e-05, 7.244500000000084e-05, 7.232000000000072e-05, 7.215299999999841e-05, 7.241699999999823e-05, 7.227699999999906e-05, 7.194500000000034e-05, 7.277699999999956e-05, 7.190199999999869e-05, 7.266599999999901e-05, 7.251400000000269e-05, 7.270800000000119e-05, 7.223599999999983e-05, 7.273600000000033e-05, 7.227799999999854e-05, 7.223599999999983e-05, 7.236099999999995e-05, 7.276399999999947e-05, 7.208400000000004e-05, 7.184699999999988e-05, 7.26110000000002e-05, 7.272200000000076e-05, 7.219399999999765e-05, 7.208300000000056e-05, 7.208300000000056e-05, 7.220800000000069e-05, 7.284700000000088e-05, 7.213899999999884e-05, 7.258400000000054e-05, 7.262499999999977e-05, 7.208400000000004e-05, 7.208400000000004e-05, 7.199999999999915e-05, 7.187499999999902e-05, 7.233299999999734e-05, 7.195800000000044e-05, 7.222199999999679e-05]</msg>
<status status="PASS" starttime="20201030 16:03:22.779" endtime="20201030 16:03:22.782"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.774" endtime="20201030 16:03:22.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:22.787" endtime="20201030 16:03:22.807"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.785" endtime="20201030 16:03:22.807"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.783" endtime="20201030 16:03:22.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.413" endtime="20201030 16:03:22.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.412" endtime="20201030 16:03:22.808"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.816" endtime="20201030 16:03:22.835"></status>
</kw>
<msg timestamp="20201030 16:03:22.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:22.815" endtime="20201030 16:03:22.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:22.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:22.836" endtime="20201030 16:03:22.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.839" endtime="20201030 16:03:22.841"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.812" endtime="20201030 16:03:22.841"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.810" endtime="20201030 16:03:22.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:22.848" endtime="20201030 16:03:23.135"></status>
</kw>
<msg timestamp="20201030 16:03:23.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:22.847" endtime="20201030 16:03:23.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:23.139" endtime="20201030 16:03:23.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.147" endtime="20201030 16:03:23.149"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.844" endtime="20201030 16:03:23.150"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.842" endtime="20201030 16:03:23.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:23.154" level="INFO">${RESULT} = [{'diff': 7.30829999999981e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.370799999999872e-05}, {'diff': 7.342999999999933e-05}, {'diff': 7.334700000000138e-05}, {'diff': 7.304200000000233e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:23.151" endtime="20201030 16:03:23.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:23.158" level="INFO">${ACCURACY} = {'diff': [7.30829999999981e-05, 7.300000000000015e-05, 7.370799999999872e-05, 7.342999999999933e-05, 7.334700000000138e-05, 7.304200000000233e-05, 7.327799999999954e-05, 7.326399999999997e-05, 7.30139...</msg>
<status status="PASS" starttime="20201030 16:03:23.155" endtime="20201030 16:03:23.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.162" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 16:03:23.161" endtime="20201030 16:03:23.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.165" level="INFO">VALUE: [7.30829999999981e-05, 7.300000000000015e-05, 7.370799999999872e-05, 7.342999999999933e-05, 7.334700000000138e-05, 7.304200000000233e-05, 7.327799999999954e-05, 7.326399999999997e-05, 7.301399999999972e-05, 7.35829999999986e-05, 7.366699999999948e-05, 7.309800000000061e-05, 7.337500000000052e-05, 7.29309999999983e-05, 7.315199999999994e-05, 7.379099999999666e-05, 7.356899999999902e-05, 7.345799999999847e-05, 7.304199999999886e-05, 7.37500000000009e-05, 7.330600000000215e-05, 7.337499999999705e-05, 7.372200000000176e-05, 7.359800000000111e-05, 7.286100000000045e-05, 7.294500000000134e-05, 7.302800000000276e-05, 7.313899999999984e-05, 7.336099999999748e-05, 7.347199999999804e-05, 7.340299999999966e-05, 7.309699999999766e-05, 7.322200000000126e-05, 7.381899999999927e-05, 7.363900000000034e-05, 7.380599999999918e-05, 7.338900000000009e-05, 7.316700000000245e-05, 7.350000000000065e-05, 7.32500000000004e-05, 7.379100000000013e-05, 7.301399999999972e-05, 7.309699999999766e-05, 7.338900000000009e-05, 7.359700000000163e-05, 7.304199999999886e-05, 7.308300000000156e-05, 7.298600000000058e-05, 7.318099999999855e-05, 7.32500000000004e-05]</msg>
<status status="PASS" starttime="20201030 16:03:23.163" endtime="20201030 16:03:23.165"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.159" endtime="20201030 16:03:23.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:23.170" endtime="20201030 16:03:23.189"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.168" endtime="20201030 16:03:23.190"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.167" endtime="20201030 16:03:23.190"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.809" endtime="20201030 16:03:23.190"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:22.808" endtime="20201030 16:03:23.190"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.199" endtime="20201030 16:03:23.217"></status>
</kw>
<msg timestamp="20201030 16:03:23.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:23.197" endtime="20201030 16:03:23.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:23.218" endtime="20201030 16:03:23.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.221" endtime="20201030 16:03:23.222"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.195" endtime="20201030 16:03:23.223"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.193" endtime="20201030 16:03:23.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.230" endtime="20201030 16:03:23.515"></status>
</kw>
<msg timestamp="20201030 16:03:23.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:23.228" endtime="20201030 16:03:23.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:23.519" endtime="20201030 16:03:23.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.527" endtime="20201030 16:03:23.529"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.226" endtime="20201030 16:03:23.529"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.224" endtime="20201030 16:03:23.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:23.534" level="INFO">${RESULT} = [{'diff': 7.409699999999866e-05}, {'diff': 7.484699999999941e-05}, {'diff': 7.397199999999854e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.441600000000076e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:23.531" endtime="20201030 16:03:23.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:23.538" level="INFO">${ACCURACY} = {'diff': [7.409699999999866e-05, 7.484699999999941e-05, 7.397199999999854e-05, 7.472199999999929e-05, 7.463900000000134e-05, 7.441600000000076e-05, 7.454100000000088e-05, 7.479200000000061e-05, 7.4777...</msg>
<status status="PASS" starttime="20201030 16:03:23.535" endtime="20201030 16:03:23.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.542" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 16:03:23.541" endtime="20201030 16:03:23.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.545" level="INFO">VALUE: [7.409699999999866e-05, 7.484699999999941e-05, 7.397199999999854e-05, 7.472199999999929e-05, 7.463900000000134e-05, 7.441600000000076e-05, 7.454100000000088e-05, 7.479200000000061e-05, 7.477799999999757e-05, 7.395799999999897e-05, 7.422199999999879e-05, 7.391699999999973e-05, 7.41110000000017e-05, 7.386099999999798e-05, 7.447200000000251e-05, 7.437500000000152e-05, 7.405599999999943e-05, 7.452800000000079e-05, 7.481900000000027e-05, 7.465300000000091e-05, 7.395799999999897e-05, 7.401400000000072e-05, 7.431899999999977e-05, 7.466700000000048e-05, 7.405599999999943e-05, 7.463900000000134e-05, 7.413900000000084e-05, 7.436100000000195e-05, 7.441700000000023e-05, 7.444499999999937e-05, 7.44309999999998e-05, 7.39439999999994e-05, 7.461099999999873e-05, 7.40829999999991e-05, 7.395799999999897e-05, 7.444499999999937e-05, 7.40829999999991e-05, 7.45829999999996e-05, 7.477800000000104e-05, 7.423600000000183e-05, 7.408399999999857e-05, 7.45699999999995e-05, 7.398699999999758e-05, 7.44439999999999e-05, 7.416699999999998e-05, 7.454100000000088e-05, 7.388900000000059e-05, 7.448599999999861e-05, 7.473600000000233e-05, 7.484699999999941e-05]</msg>
<status status="PASS" starttime="20201030 16:03:23.543" endtime="20201030 16:03:23.546"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.539" endtime="20201030 16:03:23.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:23.550" endtime="20201030 16:03:23.570"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.549" endtime="20201030 16:03:23.570"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.548" endtime="20201030 16:03:23.571"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.191" endtime="20201030 16:03:23.571"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.191" endtime="20201030 16:03:23.571"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.580" endtime="20201030 16:03:23.598"></status>
</kw>
<msg timestamp="20201030 16:03:23.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:23.578" endtime="20201030 16:03:23.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:23.599" endtime="20201030 16:03:23.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.602" endtime="20201030 16:03:23.603"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.576" endtime="20201030 16:03:23.604"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.574" endtime="20201030 16:03:23.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.611" endtime="20201030 16:03:23.896"></status>
</kw>
<msg timestamp="20201030 16:03:23.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:23.609" endtime="20201030 16:03:23.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:23.900" endtime="20201030 16:03:23.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.908" endtime="20201030 16:03:23.910"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.607" endtime="20201030 16:03:23.911"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.605" endtime="20201030 16:03:23.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:23.915" level="INFO">${RESULT} = [{'diff': 7.50830000000001e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.538799999999915e-05}, {'diff': 7.576400000000247e-05}, {'diff': 7.532000000000025e-05}, {'diff': 7.551400000000222e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:23.912" endtime="20201030 16:03:23.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:23.920" level="INFO">${ACCURACY} = {'diff': [7.50830000000001e-05, 7.532000000000025e-05, 7.538799999999915e-05, 7.576400000000247e-05, 7.532000000000025e-05, 7.551400000000222e-05, 7.50830000000001e-05, 7.559700000000016e-05, 7.581900...</msg>
<status status="PASS" starttime="20201030 16:03:23.916" endtime="20201030 16:03:23.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.924" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 16:03:23.923" endtime="20201030 16:03:23.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.927" level="INFO">VALUE: [7.50830000000001e-05, 7.532000000000025e-05, 7.538799999999915e-05, 7.576400000000247e-05, 7.532000000000025e-05, 7.551400000000222e-05, 7.50830000000001e-05, 7.559700000000016e-05, 7.581900000000127e-05, 7.563899999999887e-05, 7.52500000000024e-05, 7.497199999999954e-05, 7.481900000000027e-05, 7.538899999999862e-05, 7.486099999999898e-05, 7.574999999999943e-05, 7.536099999999948e-05, 7.584799999999989e-05, 7.541700000000123e-05, 7.555600000000093e-05, 7.487500000000202e-05, 7.547200000000004e-05, 7.517999999999761e-05, 7.547200000000004e-05, 7.537499999999905e-05, 7.592999999999836e-05, 7.508399999999957e-05, 7.582000000000075e-05, 7.573599999999986e-05, 7.558400000000007e-05, 7.548699999999908e-05, 7.499999999999868e-05, 7.565200000000244e-05, 7.490199999999822e-05, 7.500000000000215e-05, 7.556900000000102e-05, 7.504199999999739e-05, 7.554200000000136e-05, 7.51249999999988e-05, 7.547200000000004e-05, 7.538899999999862e-05, 7.583400000000032e-05, 7.548599999999961e-05, 7.555600000000093e-05, 7.52500000000024e-05, 7.565199999999897e-05, 7.512500000000227e-05, 7.517999999999761e-05, 7.520800000000022e-05, 7.554099999999841e-05]</msg>
<status status="PASS" starttime="20201030 16:03:23.925" endtime="20201030 16:03:23.927"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.921" endtime="20201030 16:03:23.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:23.931" endtime="20201030 16:03:23.951"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.930" endtime="20201030 16:03:23.951"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.929" endtime="20201030 16:03:23.952"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.572" endtime="20201030 16:03:23.952"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.572" endtime="20201030 16:03:23.952"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.961" endtime="20201030 16:03:23.978"></status>
</kw>
<msg timestamp="20201030 16:03:23.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:23.959" endtime="20201030 16:03:23.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:23.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:23.980" endtime="20201030 16:03:23.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.982" endtime="20201030 16:03:23.984"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.957" endtime="20201030 16:03:23.984"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.955" endtime="20201030 16:03:23.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:23.991" endtime="20201030 16:03:24.278"></status>
</kw>
<msg timestamp="20201030 16:03:24.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:23.990" endtime="20201030 16:03:24.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:24.282" endtime="20201030 16:03:24.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.290" endtime="20201030 16:03:24.292"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.987" endtime="20201030 16:03:24.292"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.985" endtime="20201030 16:03:24.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:24.297" level="INFO">${RESULT} = [{'diff': 7.686099999999751e-05}, {'diff': 7.65830000000016e-05}, {'diff': 7.641699999999876e-05}, {'diff': 7.677800000000304e-05}, {'diff': 7.655599999999846e-05}, {'diff': 7.636100000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:24.294" endtime="20201030 16:03:24.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:24.301" level="INFO">${ACCURACY} = {'diff': [7.686099999999751e-05, 7.65830000000016e-05, 7.641699999999876e-05, 7.677800000000304e-05, 7.655599999999846e-05, 7.636100000000048e-05, 7.631999999999778e-05, 7.682000000000175e-05, 7.66669...</msg>
<status status="PASS" starttime="20201030 16:03:24.298" endtime="20201030 16:03:24.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.305" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 16:03:24.304" endtime="20201030 16:03:24.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.308" level="INFO">VALUE: [7.686099999999751e-05, 7.65830000000016e-05, 7.641699999999876e-05, 7.677800000000304e-05, 7.655599999999846e-05, 7.636100000000048e-05, 7.631999999999778e-05, 7.682000000000175e-05, 7.666699999999901e-05, 7.619400000000165e-05, 7.636099999999701e-05, 7.676300000000053e-05, 7.648600000000061e-05, 7.599999999999968e-05, 7.665299999999944e-05, 7.648600000000061e-05, 7.634700000000091e-05, 7.59310000000013e-05, 7.618100000000155e-05, 7.655600000000193e-05, 7.630599999999821e-05, 7.677799999999957e-05, 7.623699999999983e-05, 7.61249999999998e-05, 7.683299999999837e-05, 7.630499999999873e-05, 7.673600000000086e-05, 7.64310000000018e-05, 7.643099999999833e-05, 7.599999999999968e-05, 7.636100000000048e-05, 7.634700000000091e-05, 7.661099999999726e-05, 7.604200000000186e-05, 7.619500000000112e-05, 7.683399999999785e-05, 7.604100000000238e-05, 7.59579999999975e-05, 7.63050000000022e-05, 7.602799999999882e-05, 7.613899999999937e-05, 7.633299999999787e-05, 7.62639999999995e-05, 7.59029999999987e-05, 7.64029999999992e-05, 7.670900000000119e-05, 7.666700000000248e-05, 7.665299999999944e-05, 7.617999999999861e-05, 7.670799999999825e-05]</msg>
<status status="PASS" starttime="20201030 16:03:24.306" endtime="20201030 16:03:24.308"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.302" endtime="20201030 16:03:24.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:24.312" endtime="20201030 16:03:24.332"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.311" endtime="20201030 16:03:24.332"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.310" endtime="20201030 16:03:24.333"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.953" endtime="20201030 16:03:24.333"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:23.953" endtime="20201030 16:03:24.333"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.342" endtime="20201030 16:03:24.360"></status>
</kw>
<msg timestamp="20201030 16:03:24.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:24.340" endtime="20201030 16:03:24.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:24.361" endtime="20201030 16:03:24.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.364" endtime="20201030 16:03:24.365"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.338" endtime="20201030 16:03:24.366"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.336" endtime="20201030 16:03:24.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.373" endtime="20201030 16:03:24.657"></status>
</kw>
<msg timestamp="20201030 16:03:24.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020315972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:24.371" endtime="20201030 16:03:24.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020315972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:24.661" endtime="20201030 16:03:24.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.670" endtime="20201030 16:03:24.671"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.369" endtime="20201030 16:03:24.672"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.367" endtime="20201030 16:03:24.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:24.676" level="INFO">${RESULT} = [{'diff': 7.713900000000037e-05}, {'diff': 7.7457999999999e-05}, {'diff': 7.747199999999857e-05}, {'diff': 7.78189999999998e-05}, {'diff': 7.724999999999746e-05}, {'diff': 7.716699999999951e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 16:03:24.673" endtime="20201030 16:03:24.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:24.680" level="INFO">${ACCURACY} = {'diff': [7.713900000000037e-05, 7.7457999999999e-05, 7.747199999999857e-05, 7.78189999999998e-05, 7.724999999999746e-05, 7.716699999999951e-05, 7.706999999999853e-05, 7.756999999999903e-05, 7.7264000...</msg>
<status status="PASS" starttime="20201030 16:03:24.677" endtime="20201030 16:03:24.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.685" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 16:03:24.684" endtime="20201030 16:03:24.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.690" level="INFO">VALUE: [7.713900000000037e-05, 7.7457999999999e-05, 7.747199999999857e-05, 7.78189999999998e-05, 7.724999999999746e-05, 7.716699999999951e-05, 7.706999999999853e-05, 7.756999999999903e-05, 7.72640000000005e-05, 7.77770000000011e-05, 7.688900000000012e-05, 7.697200000000154e-05, 7.741600000000029e-05, 7.783299999999937e-05, 7.69440000000024e-05, 7.741700000000323e-05, 7.716699999999951e-05, 7.720900000000169e-05, 7.744500000000237e-05, 7.747300000000151e-05, 7.769500000000262e-05, 7.747300000000151e-05, 7.786099999999851e-05, 7.755499999999999e-05, 7.715200000000047e-05, 7.686099999999751e-05, 7.78189999999998e-05, 7.70830000000021e-05, 7.705499999999949e-05, 7.781999999999928e-05, 7.766700000000001e-05, 7.763900000000087e-05, 7.715299999999994e-05, 7.693099999999883e-05, 7.7457999999999e-05, 7.72770000000006e-05, 7.765200000000097e-05, 7.704099999999992e-05, 7.715299999999994e-05, 7.718099999999908e-05, 7.770799999999925e-05, 7.687499999999708e-05, 7.747200000000204e-05, 7.76389999999974e-05, 7.755599999999946e-05, 7.736100000000148e-05, 7.715299999999994e-05, 7.713900000000037e-05, 7.742999999999986e-05, 7.740200000000072e-05]</msg>
<status status="PASS" starttime="20201030 16:03:24.686" endtime="20201030 16:03:24.691"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.681" endtime="20201030 16:03:24.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:24.695" endtime="20201030 16:03:24.715"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.694" endtime="20201030 16:03:24.715"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.693" endtime="20201030 16:03:24.716"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.334" endtime="20201030 16:03:24.716"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.334" endtime="20201030 16:03:24.716"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.725" endtime="20201030 16:03:24.743"></status>
</kw>
<msg timestamp="20201030 16:03:24.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:24.723" endtime="20201030 16:03:24.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:24.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:24.744" endtime="20201030 16:03:24.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.747" endtime="20201030 16:03:24.748"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.720" endtime="20201030 16:03:24.749"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.718" endtime="20201030 16:03:24.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:24.756" endtime="20201030 16:03:25.042"></status>
</kw>
<msg timestamp="20201030 16:03:25.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019351458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:24.754" endtime="20201030 16:03:25.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019272722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019351458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:25.046" endtime="20201030 16:03:25.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.054" endtime="20201030 16:03:25.056"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.752" endtime="20201030 16:03:25.056"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.750" endtime="20201030 16:03:25.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:25.060" level="INFO">${RESULT} = [{'diff': 7.873599999999939e-05}, {'diff': 7.786099999999851e-05}, {'diff': 7.797200000000254e-05}, {'diff': 7.786100000000198e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.844400000000043e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:25.057" endtime="20201030 16:03:25.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:25.065" level="INFO">${ACCURACY} = {'diff': [7.873599999999939e-05, 7.786099999999851e-05, 7.797200000000254e-05, 7.786100000000198e-05, 7.879200000000114e-05, 7.844400000000043e-05, 7.794500000000287e-05, 7.829199999999717e-05, 7.8236...</msg>
<status status="PASS" starttime="20201030 16:03:25.061" endtime="20201030 16:03:25.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.070" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 16:03:25.069" endtime="20201030 16:03:25.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.072" level="INFO">VALUE: [7.873599999999939e-05, 7.786099999999851e-05, 7.797200000000254e-05, 7.786100000000198e-05, 7.879200000000114e-05, 7.844400000000043e-05, 7.794500000000287e-05, 7.829199999999717e-05, 7.823699999999836e-05, 7.854200000000089e-05, 7.837499999999858e-05, 7.816700000000051e-05, 7.794399999999993e-05, 7.812499999999833e-05, 7.825000000000193e-05, 7.848600000000261e-05, 7.86250000000023e-05, 7.855500000000099e-05, 7.816700000000051e-05, 7.787500000000155e-05, 7.8070000000003e-05, 7.848599999999914e-05, 7.883399999999985e-05, 7.87779999999981e-05, 7.79030000000007e-05, 7.849999999999871e-05, 7.813900000000137e-05, 7.819400000000018e-05, 7.847199999999957e-05, 7.787500000000155e-05, 7.826399999999803e-05, 7.829200000000064e-05, 7.79030000000007e-05, 7.830600000000021e-05, 7.82640000000015e-05, 7.854200000000089e-05, 7.869399999999721e-05, 7.85129999999988e-05, 7.793000000000036e-05, 7.791599999999732e-05, 7.78189999999998e-05, 7.793000000000036e-05, 7.819400000000018e-05, 7.829200000000064e-05, 7.873599999999939e-05, 7.843100000000033e-05, 7.823599999999889e-05, 7.859799999999917e-05, 7.872200000000329e-05, 7.804200000000039e-05]</msg>
<status status="PASS" starttime="20201030 16:03:25.071" endtime="20201030 16:03:25.073"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.066" endtime="20201030 16:03:25.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:25.077" endtime="20201030 16:03:25.097"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.076" endtime="20201030 16:03:25.097"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.074" endtime="20201030 16:03:25.097"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.717" endtime="20201030 16:03:25.098"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:24.716" endtime="20201030 16:03:25.098"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.106" endtime="20201030 16:03:25.124"></status>
</kw>
<msg timestamp="20201030 16:03:25.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:25.105" endtime="20201030 16:03:25.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:25.126" endtime="20201030 16:03:25.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.128" endtime="20201030 16:03:25.130"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.102" endtime="20201030 16:03:25.130"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.100" endtime="20201030 16:03:25.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.137" endtime="20201030 16:03:25.424"></status>
</kw>
<msg timestamp="20201030 16:03:25.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019325958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:25.136" endtime="20201030 16:03:25.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019246694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019325958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:25.428" endtime="20201030 16:03:25.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.436" endtime="20201030 16:03:25.438"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.133" endtime="20201030 16:03:25.439"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.132" endtime="20201030 16:03:25.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:25.444" level="INFO">${RESULT} = [{'diff': 7.926399999999903e-05}, {'diff': 7.966699999999854e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.95970000000007e-05}, {'diff': 7.90970000000002e-05}, {'diff': 7.929199999999817e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:25.440" endtime="20201030 16:03:25.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:25.449" level="INFO">${ACCURACY} = {'diff': [7.926399999999903e-05, 7.966699999999854e-05, 7.976399999999953e-05, 7.95970000000007e-05, 7.90970000000002e-05, 7.929199999999817e-05, 7.938899999999915e-05, 7.938900000000262e-05, 7.954199...</msg>
<status status="PASS" starttime="20201030 16:03:25.445" endtime="20201030 16:03:25.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.453" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 16:03:25.452" endtime="20201030 16:03:25.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.455" level="INFO">VALUE: [7.926399999999903e-05, 7.966699999999854e-05, 7.976399999999953e-05, 7.95970000000007e-05, 7.90970000000002e-05, 7.929199999999817e-05, 7.938899999999915e-05, 7.938900000000262e-05, 7.954199999999842e-05, 7.944499999999743e-05, 7.981999999999781e-05, 7.932000000000078e-05, 7.898600000000311e-05, 7.936100000000001e-05, 7.905500000000149e-05, 7.922200000000032e-05, 7.884699999999994e-05, 7.919500000000065e-05, 7.954199999999842e-05, 7.888899999999865e-05, 7.899999999999921e-05, 7.89450000000004e-05, 7.952799999999885e-05, 7.905500000000149e-05, 7.940200000000272e-05, 7.886099999999951e-05, 7.961100000000026e-05, 7.898599999999964e-05, 7.936100000000001e-05, 7.938899999999915e-05, 7.902799999999835e-05, 7.902799999999835e-05, 7.968099999999811e-05, 7.913900000000237e-05, 7.968000000000211e-05, 7.958300000000113e-05, 7.933300000000088e-05, 7.970800000000125e-05, 7.943000000000186e-05, 7.901399999999878e-05, 7.911099999999976e-05, 7.94030000000022e-05, 7.958300000000113e-05, 7.912499999999933e-05, 7.923599999999989e-05, 7.954199999999842e-05, 7.894400000000093e-05, 7.986100000000051e-05, 7.924999999999946e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201030 16:03:25.454" endtime="20201030 16:03:25.456"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.450" endtime="20201030 16:03:25.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:25.460" endtime="20201030 16:03:25.480"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.459" endtime="20201030 16:03:25.480"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.458" endtime="20201030 16:03:25.481"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.099" endtime="20201030 16:03:25.481"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.098" endtime="20201030 16:03:25.481"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.490" endtime="20201030 16:03:25.509"></status>
</kw>
<msg timestamp="20201030 16:03:25.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:25.488" endtime="20201030 16:03:25.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:25.510" endtime="20201030 16:03:25.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.513" endtime="20201030 16:03:25.514"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.485" endtime="20201030 16:03:25.515"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.483" endtime="20201030 16:03:25.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.522" endtime="20201030 16:03:25.808"></status>
</kw>
<msg timestamp="20201030 16:03:25.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:25.520" endtime="20201030 16:03:25.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020262917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:25.812" endtime="20201030 16:03:25.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.820" endtime="20201030 16:03:25.821"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.518" endtime="20201030 16:03:25.822"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.516" endtime="20201030 16:03:25.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:25.826" level="INFO">${RESULT} = [{'diff': 8.05970000000017e-05}, {'diff': 8.05970000000017e-05}, {'diff': 8.04719999999981e-05}, {'diff': 8.034699999999798e-05}, {'diff': 8.026400000000003e-05}, {'diff': 8.00840000000011e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 16:03:25.823" endtime="20201030 16:03:25.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:25.830" level="INFO">${ACCURACY} = {'diff': [8.05970000000017e-05, 8.05970000000017e-05, 8.04719999999981e-05, 8.034699999999798e-05, 8.026400000000003e-05, 8.00840000000011e-05, 8.088900000000065e-05, 8.020799999999828e-05, 8.03610000...</msg>
<status status="PASS" starttime="20201030 16:03:25.827" endtime="20201030 16:03:25.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.835" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 16:03:25.834" endtime="20201030 16:03:25.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.837" level="INFO">VALUE: [8.05970000000017e-05, 8.05970000000017e-05, 8.04719999999981e-05, 8.034699999999798e-05, 8.026400000000003e-05, 8.00840000000011e-05, 8.088900000000065e-05, 8.020799999999828e-05, 8.036100000000101e-05, 8.008399999999763e-05, 8.073599999999792e-05, 8.081899999999934e-05, 8.04030000000032e-05, 8.019499999999818e-05, 7.992999999999889e-05, 8.016700000000251e-05, 8.02230000000008e-05, 8.054200000000289e-05, 8.002699999999988e-05, 8.002799999999935e-05, 8.026400000000003e-05, 8.07910000000002e-05, 8.066699999999954e-05, 7.993100000000183e-05, 8.018099999999861e-05, 8.054199999999942e-05, 8.004199999999892e-05, 8.018100000000208e-05, 8.06109999999978e-05, 8.016699999999904e-05, 7.992999999999889e-05, 8.042999999999939e-05, 7.995799999999803e-05, 8.023599999999742e-05, 8.051400000000028e-05, 8.036100000000101e-05, 8.022200000000132e-05, 8.030600000000221e-05, 8.000000000000021e-05, 8.029200000000264e-05, 7.987500000000008e-05, 8.080499999999977e-05, 8.047299999999757e-05, 8.009699999999773e-05, 8.086100000000151e-05, 8.043099999999886e-05, 8.004199999999892e-05, 8.03329999999984e-05, 8.019499999999818e-05, 8.025000000000046e-05]</msg>
<status status="PASS" starttime="20201030 16:03:25.836" endtime="20201030 16:03:25.839"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.831" endtime="20201030 16:03:25.839"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:25.843" endtime="20201030 16:03:25.862"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.841" endtime="20201030 16:03:25.863"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.840" endtime="20201030 16:03:25.863"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.482" endtime="20201030 16:03:25.863"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.481" endtime="20201030 16:03:25.864"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.872" endtime="20201030 16:03:25.890"></status>
</kw>
<msg timestamp="20201030 16:03:25.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:25.871" endtime="20201030 16:03:25.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:25.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:25.891" endtime="20201030 16:03:25.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.894" endtime="20201030 16:03:25.895"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.868" endtime="20201030 16:03:25.896"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.866" endtime="20201030 16:03:25.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:25.903" endtime="20201030 16:03:26.189"></status>
</kw>
<msg timestamp="20201030 16:03:26.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019329958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:25.901" endtime="20201030 16:03:26.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019329958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:26.193" endtime="20201030 16:03:26.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.201" endtime="20201030 16:03:26.203"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.899" endtime="20201030 16:03:26.203"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.897" endtime="20201030 16:03:26.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:26.208" level="INFO">${RESULT} = [{'diff': 8.119399999999971e-05}, {'diff': 8.18329999999999e-05}, {'diff': 8.16529999999975e-05}, {'diff': 8.166700000000054e-05}, {'diff': 8.1152999999997e-05}, {'diff': 8.095900000000197e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 16:03:26.204" endtime="20201030 16:03:26.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:26.213" level="INFO">${ACCURACY} = {'diff': [8.119399999999971e-05, 8.18329999999999e-05, 8.16529999999975e-05, 8.166700000000054e-05, 8.1152999999997e-05, 8.095900000000197e-05, 8.152799999999738e-05, 8.129200000000017e-05, 8.11670000...</msg>
<status status="PASS" starttime="20201030 16:03:26.209" endtime="20201030 16:03:26.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.217" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 16:03:26.216" endtime="20201030 16:03:26.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.219" level="INFO">VALUE: [8.119399999999971e-05, 8.18329999999999e-05, 8.16529999999975e-05, 8.166700000000054e-05, 8.1152999999997e-05, 8.095900000000197e-05, 8.152799999999738e-05, 8.129200000000017e-05, 8.116700000000004e-05, 8.101399999999731e-05, 8.159699999999923e-05, 8.12910000000007e-05, 8.168000000000064e-05, 8.126399999999756e-05, 8.099999999999774e-05, 8.086100000000151e-05, 8.108299999999916e-05, 8.137500000000158e-05, 8.130599999999974e-05, 8.181999999999981e-05, 8.097300000000154e-05, 8.138900000000115e-05, 8.134699999999898e-05, 8.144399999999996e-05, 8.101400000000078e-05, 8.152800000000085e-05, 8.144399999999996e-05, 8.158299999999966e-05, 8.137499999999812e-05, 8.144499999999943e-05, 8.122200000000232e-05, 8.144499999999943e-05, 8.17780000000011e-05, 8.1458999999999e-05, 8.172299999999882e-05, 8.125000000000146e-05, 8.104099999999698e-05, 8.183300000000338e-05, 8.09719999999986e-05, 8.163899999999794e-05, 8.140299999999726e-05, 8.175000000000196e-05, 8.154200000000042e-05, 8.148599999999867e-05, 8.086100000000151e-05, 8.104100000000045e-05, 8.127799999999713e-05, 8.163799999999846e-05, 8.17910000000012e-05, 8.122199999999885e-05]</msg>
<status status="PASS" starttime="20201030 16:03:26.218" endtime="20201030 16:03:26.220"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.213" endtime="20201030 16:03:26.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:26.224" endtime="20201030 16:03:26.244"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.223" endtime="20201030 16:03:26.244"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.222" endtime="20201030 16:03:26.245"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.864" endtime="20201030 16:03:26.245"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:25.864" endtime="20201030 16:03:26.245"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.254" endtime="20201030 16:03:26.271"></status>
</kw>
<msg timestamp="20201030 16:03:26.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:26.252" endtime="20201030 16:03:26.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:26.273" endtime="20201030 16:03:26.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.275" endtime="20201030 16:03:26.277"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.250" endtime="20201030 16:03:26.278"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.248" endtime="20201030 16:03:26.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.284" endtime="20201030 16:03:26.572"></status>
</kw>
<msg timestamp="20201030 16:03:26.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:26.283" endtime="20201030 16:03:26.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:26.576" endtime="20201030 16:03:26.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.584" endtime="20201030 16:03:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.280" endtime="20201030 16:03:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.279" endtime="20201030 16:03:26.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:26.591" level="INFO">${RESULT} = [{'diff': 8.280599999999777e-05}, {'diff': 8.204200000000092e-05}, {'diff': 8.193000000000089e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.259700000000023e-05}, {'diff': 8.241600000000182e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:26.587" endtime="20201030 16:03:26.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:26.595" level="INFO">${ACCURACY} = {'diff': [8.280599999999777e-05, 8.204200000000092e-05, 8.193000000000089e-05, 8.216700000000104e-05, 8.259700000000023e-05, 8.241600000000182e-05, 8.277799999999863e-05, 8.186100000000252e-05, 8.2014...</msg>
<status status="PASS" starttime="20201030 16:03:26.592" endtime="20201030 16:03:26.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.599" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 16:03:26.598" endtime="20201030 16:03:26.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.602" level="INFO">VALUE: [8.280599999999777e-05, 8.204200000000092e-05, 8.193000000000089e-05, 8.216700000000104e-05, 8.259700000000023e-05, 8.241600000000182e-05, 8.277799999999863e-05, 8.186100000000252e-05, 8.201400000000178e-05, 8.270800000000078e-05, 8.24720000000001e-05, 8.230600000000074e-05, 8.24720000000001e-05, 8.25979999999997e-05, 8.281899999999787e-05, 8.256900000000109e-05, 8.186099999999905e-05, 8.249999999999924e-05, 8.18329999999999e-05, 8.21109999999993e-05, 8.2152999999998e-05, 8.187499999999862e-05, 8.223599999999942e-05, 8.230599999999727e-05, 8.251399999999881e-05, 8.204200000000092e-05, 8.204100000000145e-05, 8.27910000000022e-05, 8.205499999999755e-05, 8.258300000000066e-05, 8.281899999999787e-05, 8.237500000000259e-05, 8.273599999999992e-05, 8.188899999999819e-05, 8.259700000000023e-05, 8.232000000000031e-05, 8.199999999999874e-05, 8.24170000000013e-05, 8.286100000000005e-05, 8.186099999999905e-05, 8.249999999999924e-05, 8.21109999999993e-05, 8.211100000000277e-05, 8.24720000000001e-05, 8.200000000000221e-05, 8.224999999999899e-05, 8.259700000000023e-05, 8.26529999999985e-05, 8.280599999999777e-05, 8.232000000000031e-05]</msg>
<status status="PASS" starttime="20201030 16:03:26.600" endtime="20201030 16:03:26.602"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.595" endtime="20201030 16:03:26.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:26.606" endtime="20201030 16:03:26.626"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.605" endtime="20201030 16:03:26.627"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.604" endtime="20201030 16:03:26.627"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.246" endtime="20201030 16:03:26.627"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.245" endtime="20201030 16:03:26.627"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.636" endtime="20201030 16:03:26.655"></status>
</kw>
<msg timestamp="20201030 16:03:26.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:26.634" endtime="20201030 16:03:26.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:26.657" endtime="20201030 16:03:26.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.659" endtime="20201030 16:03:26.661"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.632" endtime="20201030 16:03:26.661"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.630" endtime="20201030 16:03:26.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.668" endtime="20201030 16:03:26.954"></status>
</kw>
<msg timestamp="20201030 16:03:26.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:26.667" endtime="20201030 16:03:26.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02028225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:26.958" endtime="20201030 16:03:26.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:26.967" endtime="20201030 16:03:26.968"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.664" endtime="20201030 16:03:26.969"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.662" endtime="20201030 16:03:26.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:26.973" level="INFO">${RESULT} = [{'diff': 8.344400000000196e-05}, {'diff': 8.347199999999763e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.343100000000186e-05}, {'diff': 8.318099999999815e-05}, {'diff': 8.319399999999824e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:26.970" endtime="20201030 16:03:26.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:26.978" level="INFO">${ACCURACY} = {'diff': [8.344400000000196e-05, 8.347199999999763e-05, 8.337500000000012e-05, 8.343100000000186e-05, 8.318099999999815e-05, 8.319399999999824e-05, 8.306900000000159e-05, 8.295800000000103e-05, 8.3111...</msg>
<status status="PASS" starttime="20201030 16:03:26.974" endtime="20201030 16:03:26.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.982" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 16:03:26.981" endtime="20201030 16:03:26.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:26.984" level="INFO">VALUE: [8.344400000000196e-05, 8.347199999999763e-05, 8.337500000000012e-05, 8.343100000000186e-05, 8.318099999999815e-05, 8.319399999999824e-05, 8.306900000000159e-05, 8.295800000000103e-05, 8.31110000000003e-05, 8.286100000000005e-05, 8.379099999999973e-05, 8.36529999999995e-05, 8.351399999999981e-05, 8.37919999999992e-05, 8.334700000000098e-05, 8.376400000000006e-05, 8.312499999999987e-05, 8.319499999999772e-05, 8.326399999999956e-05, 8.367999999999917e-05, 8.351399999999981e-05, 8.312499999999987e-05, 8.344399999999849e-05, 8.287499999999962e-05, 8.291699999999833e-05, 8.31110000000003e-05, 8.351399999999981e-05, 8.383299999999844e-05, 8.351399999999981e-05, 8.356999999999809e-05, 8.288899999999919e-05, 8.36529999999995e-05, 8.302699999999941e-05, 8.326399999999956e-05, 8.319400000000171e-05, 8.295800000000103e-05, 8.338899999999969e-05, 8.309700000000073e-05, 8.294499999999747e-05, 8.286099999999658e-05, 8.332000000000131e-05, 8.337500000000012e-05, 8.376300000000059e-05, 8.30980000000002e-05, 8.308299999999769e-05, 8.377700000000016e-05, 8.352799999999938e-05, 8.352799999999938e-05, 8.37919999999992e-05, 8.301399999999931e-05]</msg>
<status status="PASS" starttime="20201030 16:03:26.983" endtime="20201030 16:03:26.986"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.978" endtime="20201030 16:03:26.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:26.990" endtime="20201030 16:03:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.989" endtime="20201030 16:03:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.988" endtime="20201030 16:03:27.011"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.628" endtime="20201030 16:03:27.011"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:26.628" endtime="20201030 16:03:27.011"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.020" endtime="20201030 16:03:27.037"></status>
</kw>
<msg timestamp="20201030 16:03:27.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:27.018" endtime="20201030 16:03:27.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:27.039" endtime="20201030 16:03:27.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.041" endtime="20201030 16:03:27.043"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.015" endtime="20201030 16:03:27.043"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.013" endtime="20201030 16:03:27.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.051" endtime="20201030 16:03:27.336"></status>
</kw>
<msg timestamp="20201030 16:03:27.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019461736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:27.049" endtime="20201030 16:03:27.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019461736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:27.341" endtime="20201030 16:03:27.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.349" endtime="20201030 16:03:27.350"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.047" endtime="20201030 16:03:27.351"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.045" endtime="20201030 16:03:27.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:27.355" level="INFO">${RESULT} = [{'diff': 8.405499999999955e-05}, {'diff': 8.407000000000206e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.487500000000162e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.444499999999897e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:27.352" endtime="20201030 16:03:27.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:27.360" level="INFO">${ACCURACY} = {'diff': [8.405499999999955e-05, 8.407000000000206e-05, 8.388900000000019e-05, 8.487500000000162e-05, 8.405599999999902e-05, 8.444499999999897e-05, 8.459699999999876e-05, 8.438899999999722e-05, 8.4457...</msg>
<status status="PASS" starttime="20201030 16:03:27.356" endtime="20201030 16:03:27.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.365" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 16:03:27.364" endtime="20201030 16:03:27.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.367" level="INFO">VALUE: [8.405499999999955e-05, 8.407000000000206e-05, 8.388900000000019e-05, 8.487500000000162e-05, 8.405599999999902e-05, 8.444499999999897e-05, 8.459699999999876e-05, 8.438899999999722e-05, 8.445799999999906e-05, 8.46530000000005e-05, 8.479100000000073e-05, 8.487499999999815e-05, 8.394400000000246e-05, 8.392999999999942e-05, 8.39309999999989e-05, 8.437500000000112e-05, 8.395899999999804e-05, 8.39720000000016e-05, 8.483399999999891e-05, 8.394499999999847e-05, 8.484799999999848e-05, 8.431900000000284e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.390299999999976e-05, 8.413899999999697e-05, 8.422199999999838e-05, 8.41110000000013e-05, 8.438900000000069e-05, 8.483399999999891e-05, 8.47920000000002e-05, 8.438899999999722e-05, 8.42370000000009e-05, 8.455500000000005e-05, 8.419400000000271e-05, 8.476400000000106e-05, 8.408400000000163e-05, 8.436099999999808e-05, 8.400000000000074e-05, 8.427800000000013e-05, 8.463900000000094e-05, 8.391599999999985e-05, 8.393100000000236e-05, 8.411099999999783e-05, 8.418100000000261e-05, 8.437500000000112e-05, 8.425000000000099e-05, 8.420799999999881e-05, 8.440300000000026e-05, 8.444399999999949e-05]</msg>
<status status="PASS" starttime="20201030 16:03:27.366" endtime="20201030 16:03:27.368"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.361" endtime="20201030 16:03:27.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:27.372" endtime="20201030 16:03:27.391"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.370" endtime="20201030 16:03:27.392"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.369" endtime="20201030 16:03:27.392"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.012" endtime="20201030 16:03:27.392"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.011" endtime="20201030 16:03:27.393"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.401" endtime="20201030 16:03:27.419"></status>
</kw>
<msg timestamp="20201030 16:03:27.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:27.400" endtime="20201030 16:03:27.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:27.420" endtime="20201030 16:03:27.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.423" endtime="20201030 16:03:27.424"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.397" endtime="20201030 16:03:27.425"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.395" endtime="20201030 16:03:27.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.432" endtime="20201030 16:03:27.718"></status>
</kw>
<msg timestamp="20201030 16:03:27.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:27.430" endtime="20201030 16:03:27.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:27.722" endtime="20201030 16:03:27.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.730" endtime="20201030 16:03:27.732"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.427" endtime="20201030 16:03:27.732"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.426" endtime="20201030 16:03:27.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:27.737" level="INFO">${RESULT} = [{'diff': 8.541600000000135e-05}, {'diff': 8.5847e-05}, {'diff': 8.502699999999794e-05}, {'diff': 8.495800000000303e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.5847e-05}, {'diff': 8.555500000000...</msg>
<status status="PASS" starttime="20201030 16:03:27.733" endtime="20201030 16:03:27.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:27.741" level="INFO">${ACCURACY} = {'diff': [8.541600000000135e-05, 8.5847e-05, 8.502699999999794e-05, 8.495800000000303e-05, 8.544400000000049e-05, 8.5847e-05, 8.555500000000105e-05, 8.56249999999989e-05, 8.523599999999895e-05, 8.5208...</msg>
<status status="PASS" starttime="20201030 16:03:27.738" endtime="20201030 16:03:27.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.745" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 16:03:27.744" endtime="20201030 16:03:27.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.747" level="INFO">VALUE: [8.541600000000135e-05, 8.5847e-05, 8.502699999999794e-05, 8.495800000000303e-05, 8.544400000000049e-05, 8.5847e-05, 8.555500000000105e-05, 8.56249999999989e-05, 8.523599999999895e-05, 8.520899999999929e-05, 8.533299999999994e-05, 8.499999999999827e-05, 8.565299999999804e-05, 8.488900000000119e-05, 8.558300000000019e-05, 8.554200000000095e-05, 8.518000000000067e-05, 8.495799999999956e-05, 8.530600000000027e-05, 8.572299999999936e-05, 8.522300000000232e-05, 8.52920000000007e-05, 8.577700000000216e-05, 8.580499999999783e-05, 8.540200000000178e-05, 8.565299999999804e-05, 8.566700000000108e-05, 8.493000000000042e-05, 8.537500000000212e-05, 8.572199999999988e-05, 8.582000000000034e-05, 8.545800000000006e-05, 8.584799999999948e-05, 8.523599999999895e-05, 8.580499999999783e-05, 8.58050000000013e-05, 8.53050000000008e-05, 8.561099999999933e-05, 8.536099999999908e-05, 8.526400000000156e-05, 8.516700000000058e-05, 8.557000000000009e-05, 8.49309999999999e-05, 8.498600000000217e-05, 8.524999999999852e-05, 8.540300000000126e-05, 8.52920000000007e-05, 8.568100000000065e-05, 8.561099999999933e-05, 8.53050000000008e-05]</msg>
<status status="PASS" starttime="20201030 16:03:27.746" endtime="20201030 16:03:27.748"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.741" endtime="20201030 16:03:27.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:27.753" endtime="20201030 16:03:27.772"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.751" endtime="20201030 16:03:27.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.750" endtime="20201030 16:03:27.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.394" endtime="20201030 16:03:27.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.393" endtime="20201030 16:03:27.774"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.782" endtime="20201030 16:03:27.802"></status>
</kw>
<msg timestamp="20201030 16:03:27.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:27.781" endtime="20201030 16:03:27.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:27.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:27.804" endtime="20201030 16:03:27.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.806" endtime="20201030 16:03:27.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.778" endtime="20201030 16:03:27.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.776" endtime="20201030 16:03:27.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:27.815" endtime="20201030 16:03:28.101"></status>
</kw>
<msg timestamp="20201030 16:03:28.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020757111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020843556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:27.813" endtime="20201030 16:03:28.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020757111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020843556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:28.105" endtime="20201030 16:03:28.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.114" endtime="20201030 16:03:28.115"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.811" endtime="20201030 16:03:28.116"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.809" endtime="20201030 16:03:28.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:28.120" level="INFO">${RESULT} = [{'diff': 8.64449999999975e-05}, {'diff': 8.669400000000174e-05}, {'diff': 8.597200000000013e-05}, {'diff': 8.652799999999891e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.613899999999897e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:28.117" endtime="20201030 16:03:28.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:28.124" level="INFO">${ACCURACY} = {'diff': [8.64449999999975e-05, 8.669400000000174e-05, 8.597200000000013e-05, 8.652799999999891e-05, 8.61249999999994e-05, 8.613899999999897e-05, 8.680600000000177e-05, 8.599999999999927e-05, 8.618100...</msg>
<status status="PASS" starttime="20201030 16:03:28.121" endtime="20201030 16:03:28.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.129" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 16:03:28.128" endtime="20201030 16:03:28.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.134" level="INFO">VALUE: [8.64449999999975e-05, 8.669400000000174e-05, 8.597200000000013e-05, 8.652799999999891e-05, 8.61249999999994e-05, 8.613899999999897e-05, 8.680600000000177e-05, 8.599999999999927e-05, 8.618100000000115e-05, 8.652799999999891e-05, 8.66669999999986e-05, 8.587499999999915e-05, 8.61249999999994e-05, 8.586099999999958e-05, 8.624999999999952e-05, 8.633300000000094e-05, 8.619400000000124e-05, 8.673600000000045e-05, 8.638899999999922e-05, 8.590299999999829e-05, 8.623599999999995e-05, 8.645900000000054e-05, 8.591699999999786e-05, 8.672200000000088e-05, 8.599999999999927e-05, 8.608300000000069e-05, 8.656899999999815e-05, 8.61669999999981e-05, 8.605499999999808e-05, 8.636100000000008e-05, 8.608300000000069e-05, 8.66249999999999e-05, 8.61249999999994e-05, 8.595900000000004e-05, 8.605600000000102e-05, 8.654199999999848e-05, 8.583300000000044e-05, 8.583300000000044e-05, 8.587499999999915e-05, 8.5847e-05, 8.645800000000106e-05, 8.624999999999952e-05, 8.661099999999686e-05, 8.649999999999977e-05, 8.609700000000026e-05, 8.608400000000016e-05, 8.637499999999965e-05, 8.613799999999949e-05, 8.63470000000005e-05, 8.640199999999931e-05]</msg>
<status status="PASS" starttime="20201030 16:03:28.130" endtime="20201030 16:03:28.135"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.125" endtime="20201030 16:03:28.136"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:28.139" endtime="20201030 16:03:28.159"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.138" endtime="20201030 16:03:28.159"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.137" endtime="20201030 16:03:28.160"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.774" endtime="20201030 16:03:28.160"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:27.774" endtime="20201030 16:03:28.160"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.169" endtime="20201030 16:03:28.187"></status>
</kw>
<msg timestamp="20201030 16:03:28.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:28.167" endtime="20201030 16:03:28.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:28.188" endtime="20201030 16:03:28.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.191" endtime="20201030 16:03:28.192"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.165" endtime="20201030 16:03:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.163" endtime="20201030 16:03:28.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.200" endtime="20201030 16:03:28.487"></status>
</kw>
<msg timestamp="20201030 16:03:28.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:28.198" endtime="20201030 16:03:28.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019354653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019441861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:28.491" endtime="20201030 16:03:28.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.500" endtime="20201030 16:03:28.501"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.196" endtime="20201030 16:03:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.194" endtime="20201030 16:03:28.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:28.506" level="INFO">${RESULT} = [{'diff': 8.720800000000181e-05}, {'diff': 8.751400000000034e-05}, {'diff': 8.720900000000129e-05}, {'diff': 8.755599999999905e-05}, {'diff': 8.718099999999868e-05}, {'diff': 8.694500000000147e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:28.503" endtime="20201030 16:03:28.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:28.511" level="INFO">${ACCURACY} = {'diff': [8.720800000000181e-05, 8.751400000000034e-05, 8.720900000000129e-05, 8.755599999999905e-05, 8.718099999999868e-05, 8.694500000000147e-05, 8.71669999999991e-05, 8.754200000000295e-05, 8.74439...</msg>
<status status="PASS" starttime="20201030 16:03:28.507" endtime="20201030 16:03:28.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.516" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 16:03:28.515" endtime="20201030 16:03:28.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.518" level="INFO">VALUE: [8.720800000000181e-05, 8.751400000000034e-05, 8.720900000000129e-05, 8.755599999999905e-05, 8.718099999999868e-05, 8.694500000000147e-05, 8.71669999999991e-05, 8.754200000000295e-05, 8.744399999999902e-05, 8.69860000000007e-05, 8.737500000000065e-05, 8.713899999999997e-05, 8.705600000000202e-05, 8.747200000000163e-05, 8.709700000000126e-05, 8.719499999999825e-05, 8.743099999999893e-05, 8.706999999999812e-05, 8.706900000000212e-05, 8.716599999999963e-05, 8.787499999999768e-05, 8.752799999999991e-05, 8.773600000000145e-05, 8.783299999999897e-05, 8.700000000000027e-05, 8.736100000000108e-05, 8.688899999999972e-05, 8.76669999999996e-05, 8.697200000000113e-05, 8.772300000000136e-05, 8.74860000000012e-05, 8.74999999999973e-05, 8.741599999999988e-05, 8.786100000000158e-05, 8.745800000000206e-05, 8.733299999999847e-05, 8.747200000000163e-05, 8.779199999999973e-05, 8.744500000000197e-05, 8.770899999999832e-05, 8.745799999999859e-05, 8.720800000000181e-05, 8.686100000000058e-05, 8.745800000000206e-05, 8.709700000000126e-05, 8.772200000000188e-05, 8.751400000000034e-05, 8.707000000000159e-05, 8.702799999999941e-05, 8.765300000000004e-05]</msg>
<status status="PASS" starttime="20201030 16:03:28.517" endtime="20201030 16:03:28.519"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.512" endtime="20201030 16:03:28.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:28.523" endtime="20201030 16:03:28.542"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.521" endtime="20201030 16:03:28.543"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.520" endtime="20201030 16:03:28.543"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.161" endtime="20201030 16:03:28.543"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.161" endtime="20201030 16:03:28.544"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.552" endtime="20201030 16:03:28.571"></status>
</kw>
<msg timestamp="20201030 16:03:28.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:28.551" endtime="20201030 16:03:28.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:28.572" endtime="20201030 16:03:28.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.575" endtime="20201030 16:03:28.576"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.548" endtime="20201030 16:03:28.577"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.546" endtime="20201030 16:03:28.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.583" endtime="20201030 16:03:28.870"></status>
</kw>
<msg timestamp="20201030 16:03:28.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019583125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:28.582" endtime="20201030 16:03:28.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019583125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:28.875" endtime="20201030 16:03:28.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.883" endtime="20201030 16:03:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.579" endtime="20201030 16:03:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.578" endtime="20201030 16:03:28.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:28.889" level="INFO">${RESULT} = [{'diff': 8.827800000000066e-05}, {'diff': 8.825000000000152e-05}, {'diff': 8.793099999999943e-05}, {'diff': 8.876399999999812e-05}, {'diff': 8.855600000000005e-05}, {'diff': 8.852800000000091e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:28.886" endtime="20201030 16:03:28.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:28.893" level="INFO">${ACCURACY} = {'diff': [8.827800000000066e-05, 8.825000000000152e-05, 8.793099999999943e-05, 8.876399999999812e-05, 8.855600000000005e-05, 8.852800000000091e-05, 8.791599999999691e-05, 8.806899999999965e-05, 8.7929...</msg>
<status status="PASS" starttime="20201030 16:03:28.890" endtime="20201030 16:03:28.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.898" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 16:03:28.897" endtime="20201030 16:03:28.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.900" level="INFO">VALUE: [8.827800000000066e-05, 8.825000000000152e-05, 8.793099999999943e-05, 8.876399999999812e-05, 8.855600000000005e-05, 8.852800000000091e-05, 8.791599999999691e-05, 8.806899999999965e-05, 8.792999999999995e-05, 8.879200000000073e-05, 8.829200000000023e-05, 8.865299999999757e-05, 8.801400000000084e-05, 8.84730000000021e-05, 8.831999999999937e-05, 8.788900000000072e-05, 8.820899999999882e-05, 8.808299999999922e-05, 8.845799999999959e-05, 8.792999999999995e-05, 8.877799999999769e-05, 8.819399999999977e-05, 8.829200000000023e-05, 8.840299999999732e-05, 8.86670000000006e-05, 8.83189999999999e-05, 8.804199999999998e-05, 8.834699999999904e-05, 8.872199999999941e-05, 8.872199999999941e-05, 8.837500000000165e-05, 8.86670000000006e-05, 8.872199999999941e-05, 8.809700000000226e-05, 8.829200000000023e-05, 8.848599999999873e-05, 8.808399999999869e-05, 8.84860000000022e-05, 8.847199999999916e-05, 8.81250000000014e-05, 8.843099999999993e-05, 8.865300000000104e-05, 8.883299999999997e-05, 8.836100000000208e-05, 8.843000000000045e-05, 8.798700000000118e-05, 8.883299999999997e-05, 8.837500000000165e-05, 8.831999999999937e-05, 8.823599999999848e-05]</msg>
<status status="PASS" starttime="20201030 16:03:28.899" endtime="20201030 16:03:28.901"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.894" endtime="20201030 16:03:28.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:28.905" endtime="20201030 16:03:28.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.904" endtime="20201030 16:03:28.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.903" endtime="20201030 16:03:28.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.544" endtime="20201030 16:03:28.926"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.544" endtime="20201030 16:03:28.926"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.934" endtime="20201030 16:03:28.954"></status>
</kw>
<msg timestamp="20201030 16:03:28.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:28.933" endtime="20201030 16:03:28.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:28.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:28.956" endtime="20201030 16:03:28.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.958" endtime="20201030 16:03:28.960"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.930" endtime="20201030 16:03:28.960"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.928" endtime="20201030 16:03:28.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:28.967" endtime="20201030 16:03:29.253"></status>
</kw>
<msg timestamp="20201030 16:03:29.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:28.965" endtime="20201030 16:03:29.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020261056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:29.258" endtime="20201030 16:03:29.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.266" endtime="20201030 16:03:29.267"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.963" endtime="20201030 16:03:29.268"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.961" endtime="20201030 16:03:29.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:29.272" level="INFO">${RESULT} = [{'diff': 8.90129999999989e-05}, {'diff': 8.941700000000136e-05}, {'diff': 8.912499999999893e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.901300000000237e-05}, {'diff': 8.944400000000102e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:29.269" endtime="20201030 16:03:29.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:29.276" level="INFO">${ACCURACY} = {'diff': [8.90129999999989e-05, 8.941700000000136e-05, 8.912499999999893e-05, 8.987499999999968e-05, 8.901300000000237e-05, 8.944400000000102e-05, 8.954099999999854e-05, 8.906900000000065e-05, 8.91670...</msg>
<status status="PASS" starttime="20201030 16:03:29.273" endtime="20201030 16:03:29.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.281" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 16:03:29.280" endtime="20201030 16:03:29.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.283" level="INFO">VALUE: [8.90129999999989e-05, 8.941700000000136e-05, 8.912499999999893e-05, 8.987499999999968e-05, 8.901300000000237e-05, 8.944400000000102e-05, 8.954099999999854e-05, 8.906900000000065e-05, 8.91670000000011e-05, 8.959699999999682e-05, 8.93190000000009e-05, 8.948599999999973e-05, 8.907000000000012e-05, 8.912499999999893e-05, 8.895899999999957e-05, 8.91120000000023e-05, 8.941599999999841e-05, 8.895800000000009e-05, 8.909799999999926e-05, 8.916600000000163e-05, 8.900000000000227e-05, 8.961099999999986e-05, 8.93190000000009e-05, 8.983300000000097e-05, 8.951399999999887e-05, 8.941699999999789e-05, 8.924999999999905e-05, 8.906900000000065e-05, 8.958300000000072e-05, 8.970800000000084e-05, 8.922199999999991e-05, 8.980500000000183e-05, 8.911099999999936e-05, 8.945800000000059e-05, 8.93060000000008e-05, 8.933399999999994e-05, 8.976400000000259e-05, 8.922299999999939e-05, 8.915300000000154e-05, 8.923600000000295e-05, 8.916699999999764e-05, 8.936099999999961e-05, 8.908300000000022e-05, 8.901399999999837e-05, 8.955600000000105e-05, 8.937499999999918e-05, 8.947200000000016e-05, 8.902799999999794e-05, 8.954199999999801e-05, 8.951400000000234e-05]</msg>
<status status="PASS" starttime="20201030 16:03:29.282" endtime="20201030 16:03:29.285"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.277" endtime="20201030 16:03:29.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:29.289" endtime="20201030 16:03:29.308"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.287" endtime="20201030 16:03:29.309"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.286" endtime="20201030 16:03:29.309"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.927" endtime="20201030 16:03:29.309"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:28.926" endtime="20201030 16:03:29.310"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.318" endtime="20201030 16:03:29.337"></status>
</kw>
<msg timestamp="20201030 16:03:29.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:29.317" endtime="20201030 16:03:29.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:29.338" endtime="20201030 16:03:29.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.340" endtime="20201030 16:03:29.342"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.314" endtime="20201030 16:03:29.343"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.312" endtime="20201030 16:03:29.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.349" endtime="20201030 16:03:29.634"></status>
</kw>
<msg timestamp="20201030 16:03:29.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:29.348" endtime="20201030 16:03:29.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:29.639" endtime="20201030 16:03:29.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.647" endtime="20201030 16:03:29.648"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.345" endtime="20201030 16:03:29.649"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.344" endtime="20201030 16:03:29.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:29.653" level="INFO">${RESULT} = [{'diff': 9.034700000000104e-05}, {'diff': 9.029199999999876e-05}, {'diff': 9.029199999999876e-05}, {'diff': 8.990299999999882e-05}, {'diff': 9.025000000000005e-05}, {'diff': 9.025000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:29.650" endtime="20201030 16:03:29.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:29.658" level="INFO">${ACCURACY} = {'diff': [9.034700000000104e-05, 9.029199999999876e-05, 9.029199999999876e-05, 8.990299999999882e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.001399999999937e-05, 9.052699999999997e-05, 9.0625...</msg>
<status status="PASS" starttime="20201030 16:03:29.654" endtime="20201030 16:03:29.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.663" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 16:03:29.662" endtime="20201030 16:03:29.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.665" level="INFO">VALUE: [9.034700000000104e-05, 9.029199999999876e-05, 9.029199999999876e-05, 8.990299999999882e-05, 9.025000000000005e-05, 9.025000000000005e-05, 9.001399999999937e-05, 9.052699999999997e-05, 9.062500000000043e-05, 9.029199999999876e-05, 9.012499999999993e-05, 9.047200000000116e-05, 9.03060000000018e-05, 9.065299999999957e-05, 9.001399999999937e-05, 9.022300000000039e-05, 9.059699999999782e-05, 9.01389999999995e-05, 9.001399999999937e-05, 9.061100000000086e-05, 9.079200000000273e-05, 9.047300000000064e-05, 9.029199999999876e-05, 9.041700000000236e-05, 9.038899999999975e-05, 9.072200000000141e-05, 9.01519999999996e-05, 9.077700000000022e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.067999999999923e-05, 8.991699999999839e-05, 9.083399999999797e-05, 9.08190000000024e-05, 9.015300000000254e-05, 9.005599999999808e-05, 9.026399999999962e-05, 9.004199999999851e-05, 8.99999999999998e-05, 9.081899999999893e-05, 9.025000000000005e-05, 9.086100000000111e-05, 9.052799999999944e-05, 9.016699999999864e-05, 9.045799999999812e-05, 9.051399999999987e-05, 9.038899999999975e-05, 9.008400000000069e-05, 9.08060000000023e-05, 9.062500000000043e-05]</msg>
<status status="PASS" starttime="20201030 16:03:29.664" endtime="20201030 16:03:29.666"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.659" endtime="20201030 16:03:29.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:29.670" endtime="20201030 16:03:29.689"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.669" endtime="20201030 16:03:29.690"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.667" endtime="20201030 16:03:29.690"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.311" endtime="20201030 16:03:29.691"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.310" endtime="20201030 16:03:29.691"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.699" endtime="20201030 16:03:29.717"></status>
</kw>
<msg timestamp="20201030 16:03:29.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:29.698" endtime="20201030 16:03:29.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:29.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:29.719" endtime="20201030 16:03:29.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.721" endtime="20201030 16:03:29.723"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.695" endtime="20201030 16:03:29.723"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.693" endtime="20201030 16:03:29.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:29.730" endtime="20201030 16:03:30.017"></status>
</kw>
<msg timestamp="20201030 16:03:30.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:29.729" endtime="20201030 16:03:30.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019306458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:30.021" endtime="20201030 16:03:30.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.029" endtime="20201030 16:03:30.031"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.726" endtime="20201030 16:03:30.031"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.724" endtime="20201030 16:03:30.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:30.036" level="INFO">${RESULT} = [{'diff': 9.161100000000186e-05}, {'diff': 9.18329999999995e-05}, {'diff': 9.137500000000118e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.112500000000093e-05}, {'diff': 9.123600000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:30.033" endtime="20201030 16:03:30.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:30.040" level="INFO">${ACCURACY} = {'diff': [9.161100000000186e-05, 9.18329999999995e-05, 9.137500000000118e-05, 9.179200000000026e-05, 9.112500000000093e-05, 9.123600000000148e-05, 9.08329999999985e-05, 9.109699999999832e-05, 9.140300...</msg>
<status status="PASS" starttime="20201030 16:03:30.037" endtime="20201030 16:03:30.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.044" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 16:03:30.043" endtime="20201030 16:03:30.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.047" level="INFO">VALUE: [9.161100000000186e-05, 9.18329999999995e-05, 9.137500000000118e-05, 9.179200000000026e-05, 9.112500000000093e-05, 9.123600000000148e-05, 9.08329999999985e-05, 9.109699999999832e-05, 9.140300000000032e-05, 9.177800000000069e-05, 9.129199999999976e-05, 9.109799999999779e-05, 9.166600000000066e-05, 9.127800000000019e-05, 9.102799999999994e-05, 9.133300000000247e-05, 9.159699999999882e-05, 9.166700000000014e-05, 9.159699999999882e-05, 9.10000000000008e-05, 9.118099999999921e-05, 9.148600000000173e-05, 9.13199999999989e-05, 9.186100000000211e-05, 9.116699999999964e-05, 9.154100000000054e-05, 9.102799999999994e-05, 9.090299999999982e-05, 9.144400000000302e-05, 9.112500000000093e-05, 9.090299999999982e-05, 9.14589999999986e-05, 9.18329999999995e-05, 9.129100000000029e-05, 9.086100000000111e-05, 9.106900000000265e-05, 9.161099999999839e-05, 9.129199999999976e-05, 9.142999999999998e-05, 9.118099999999921e-05, 9.138900000000075e-05, 9.161100000000186e-05, 9.099999999999733e-05, 9.1639000000001e-05, 9.095799999999862e-05, 9.126399999999715e-05, 9.137500000000118e-05, 9.105500000000308e-05, 9.16529999999971e-05, 9.166700000000014e-05]</msg>
<status status="PASS" starttime="20201030 16:03:30.045" endtime="20201030 16:03:30.047"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.041" endtime="20201030 16:03:30.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:30.052" endtime="20201030 16:03:30.071"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.050" endtime="20201030 16:03:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.049" endtime="20201030 16:03:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.692" endtime="20201030 16:03:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:29.691" endtime="20201030 16:03:30.072"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.081" endtime="20201030 16:03:30.101"></status>
</kw>
<msg timestamp="20201030 16:03:30.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:30.079" endtime="20201030 16:03:30.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:30.103" endtime="20201030 16:03:30.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.105" endtime="20201030 16:03:30.107"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.077" endtime="20201030 16:03:30.107"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.075" endtime="20201030 16:03:30.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.114" endtime="20201030 16:03:30.398"></status>
</kw>
<msg timestamp="20201030 16:03:30.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020178139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:30.112" endtime="20201030 16:03:30.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020178139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020270847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:30.402" endtime="20201030 16:03:30.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.410" endtime="20201030 16:03:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.110" endtime="20201030 16:03:30.412"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.108" endtime="20201030 16:03:30.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:30.416" level="INFO">${RESULT} = [{'diff': 9.270800000000037e-05}, {'diff': 9.2333e-05}, {'diff': 9.25139999999984e-05}, {'diff': 9.26529999999981e-05}, {'diff': 9.187499999999821e-05}, {'diff': 9.252800000000144e-05}, {'diff': 9.259...</msg>
<status status="PASS" starttime="20201030 16:03:30.413" endtime="20201030 16:03:30.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:30.420" level="INFO">${ACCURACY} = {'diff': [9.270800000000037e-05, 9.2333e-05, 9.25139999999984e-05, 9.26529999999981e-05, 9.187499999999821e-05, 9.252800000000144e-05, 9.259699999999982e-05, 9.233399999999947e-05, 9.238899999999828e-...</msg>
<status status="PASS" starttime="20201030 16:03:30.417" endtime="20201030 16:03:30.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.425" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 16:03:30.424" endtime="20201030 16:03:30.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.427" level="INFO">VALUE: [9.270800000000037e-05, 9.2333e-05, 9.25139999999984e-05, 9.26529999999981e-05, 9.187499999999821e-05, 9.252800000000144e-05, 9.259699999999982e-05, 9.233399999999947e-05, 9.238899999999828e-05, 9.2333e-05, 9.222199999999944e-05, 9.21390000000015e-05, 9.244400000000055e-05, 9.252799999999797e-05, 9.244400000000055e-05, 9.197200000000266e-05, 9.248599999999926e-05, 9.212499999999846e-05, 9.19870000000017e-05, 9.272199999999994e-05, 9.201400000000137e-05, 9.218000000000073e-05, 9.24719999999997e-05, 9.208299999999975e-05, 9.284700000000007e-05, 9.241700000000089e-05, 9.24589999999996e-05, 9.244500000000003e-05, 9.211099999999889e-05, 9.249999999999883e-05, 9.241700000000089e-05, 9.265300000000157e-05, 9.25139999999984e-05, 9.218000000000073e-05, 9.212500000000193e-05, 9.286099999999964e-05, 9.224999999999858e-05, 9.194499999999953e-05, 9.273599999999951e-05, 9.270899999999985e-05, 9.193099999999996e-05, 9.273699999999899e-05, 9.23879999999988e-05, 9.28330000000005e-05, 9.284700000000007e-05, 9.206900000000018e-05, 9.236099999999914e-05, 9.244500000000003e-05, 9.262499999999896e-05, 9.258399999999972e-05]</msg>
<status status="PASS" starttime="20201030 16:03:30.426" endtime="20201030 16:03:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.421" endtime="20201030 16:03:30.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:30.433" endtime="20201030 16:03:30.452"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.431" endtime="20201030 16:03:30.453"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.430" endtime="20201030 16:03:30.453"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.073" endtime="20201030 16:03:30.453"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.073" endtime="20201030 16:03:30.454"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.462" endtime="20201030 16:03:30.482"></status>
</kw>
<msg timestamp="20201030 16:03:30.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:30.461" endtime="20201030 16:03:30.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:30.483" endtime="20201030 16:03:30.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.486" endtime="20201030 16:03:30.487"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.458" endtime="20201030 16:03:30.488"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.456" endtime="20201030 16:03:30.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.494" endtime="20201030 16:03:30.779"></status>
</kw>
<msg timestamp="20201030 16:03:30.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019305069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:30.493" endtime="20201030 16:03:30.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019305069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019398931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:30.784" endtime="20201030 16:03:30.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.792" endtime="20201030 16:03:30.793"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.490" endtime="20201030 16:03:30.794"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.489" endtime="20201030 16:03:30.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:30.798" level="INFO">${RESULT} = [{'diff': 9.386200000000011e-05}, {'diff': 9.318000000000173e-05}, {'diff': 9.294400000000105e-05}, {'diff': 9.331899999999796e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.3333000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:30.795" endtime="20201030 16:03:30.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:30.803" level="INFO">${ACCURACY} = {'diff': [9.386200000000011e-05, 9.318000000000173e-05, 9.294400000000105e-05, 9.331899999999796e-05, 9.311099999999989e-05, 9.3333000000001e-05, 9.308299999999728e-05, 9.331999999999743e-05, 9.345900...</msg>
<status status="PASS" starttime="20201030 16:03:30.799" endtime="20201030 16:03:30.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.808" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 16:03:30.807" endtime="20201030 16:03:30.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.810" level="INFO">VALUE: [9.386200000000011e-05, 9.318000000000173e-05, 9.294400000000105e-05, 9.331899999999796e-05, 9.311099999999989e-05, 9.3333000000001e-05, 9.308299999999728e-05, 9.331999999999743e-05, 9.34590000000006e-05, 9.36659999999992e-05, 9.291699999999792e-05, 9.354200000000201e-05, 9.33879999999998e-05, 9.372200000000094e-05, 9.322200000000044e-05, 9.363899999999953e-05, 9.338899999999928e-05, 9.362499999999996e-05, 9.299999999999933e-05, 9.361099999999692e-05, 9.318100000000121e-05, 9.358399999999725e-05, 9.368000000000223e-05, 9.349999999999983e-05, 9.35139999999994e-05, 9.34720000000007e-05, 9.302799999999847e-05, 9.316699999999817e-05, 9.36940000000018e-05, 9.358400000000072e-05, 9.307000000000065e-05, 9.359700000000082e-05, 9.324999999999958e-05, 9.291599999999844e-05, 9.329100000000229e-05, 9.290300000000182e-05, 9.295800000000062e-05, 9.3639000000003e-05, 9.368100000000171e-05, 9.348600000000026e-05, 9.344500000000103e-05, 9.326399999999915e-05, 9.338900000000275e-05, 9.330600000000133e-05, 9.380600000000183e-05, 9.344399999999808e-05, 9.291599999999844e-05, 9.336100000000014e-05, 9.327800000000219e-05, 9.361100000000039e-05]</msg>
<status status="PASS" starttime="20201030 16:03:30.809" endtime="20201030 16:03:30.811"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.804" endtime="20201030 16:03:30.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:30.815" endtime="20201030 16:03:30.834"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.813" endtime="20201030 16:03:30.835"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.812" endtime="20201030 16:03:30.835"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.455" endtime="20201030 16:03:30.835"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.454" endtime="20201030 16:03:30.836"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.844" endtime="20201030 16:03:30.863"></status>
</kw>
<msg timestamp="20201030 16:03:30.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:30.843" endtime="20201030 16:03:30.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:30.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:30.864" endtime="20201030 16:03:30.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.867" endtime="20201030 16:03:30.869"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.840" endtime="20201030 16:03:30.869"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.838" endtime="20201030 16:03:30.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:30.876" endtime="20201030 16:03:31.163"></status>
</kw>
<msg timestamp="20201030 16:03:31.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:30.874" endtime="20201030 16:03:31.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019342431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:31.167" endtime="20201030 16:03:31.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.176" endtime="20201030 16:03:31.177"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.872" endtime="20201030 16:03:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.870" endtime="20201030 16:03:31.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:31.182" level="INFO">${RESULT} = [{'diff': 9.427799999999972e-05}, {'diff': 9.477700000000075e-05}, {'diff': 9.417999999999926e-05}, {'diff': 9.442999999999951e-05}, {'diff': 9.408399999999775e-05}, {'diff': 9.43469999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:31.179" endtime="20201030 16:03:31.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:31.186" level="INFO">${ACCURACY} = {'diff': [9.427799999999972e-05, 9.477700000000075e-05, 9.417999999999926e-05, 9.442999999999951e-05, 9.408399999999775e-05, 9.43469999999981e-05, 9.425000000000058e-05, 9.404200000000251e-05, 9.44029...</msg>
<status status="PASS" starttime="20201030 16:03:31.183" endtime="20201030 16:03:31.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.191" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 16:03:31.190" endtime="20201030 16:03:31.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.193" level="INFO">VALUE: [9.427799999999972e-05, 9.477700000000075e-05, 9.417999999999926e-05, 9.442999999999951e-05, 9.408399999999775e-05, 9.43469999999981e-05, 9.425000000000058e-05, 9.404200000000251e-05, 9.440299999999985e-05, 9.397300000000067e-05, 9.484800000000154e-05, 9.430499999999939e-05, 9.423599999999754e-05, 9.479100000000032e-05, 9.41529999999996e-05, 9.423600000000101e-05, 9.430599999999886e-05, 9.407000000000165e-05, 9.430599999999886e-05, 9.447300000000117e-05, 9.480600000000283e-05, 9.438900000000028e-05, 9.440200000000037e-05, 9.442999999999951e-05, 9.409700000000132e-05, 9.408299999999828e-05, 9.441699999999942e-05, 9.398600000000076e-05, 9.41529999999996e-05, 9.472299999999795e-05, 9.429199999999929e-05, 9.405600000000208e-05, 9.448600000000126e-05, 9.391599999999944e-05, 9.448600000000126e-05, 9.454100000000007e-05, 9.467999999999976e-05, 9.47079999999989e-05, 9.429199999999929e-05, 9.436199999999714e-05, 9.436099999999767e-05, 9.409800000000079e-05, 9.431999999999843e-05, 9.408400000000122e-05, 9.386100000000064e-05, 9.391699999999892e-05, 9.422199999999797e-05, 9.472299999999795e-05, 9.454199999999954e-05, 9.452799999999997e-05]</msg>
<status status="PASS" starttime="20201030 16:03:31.192" endtime="20201030 16:03:31.194"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.187" endtime="20201030 16:03:31.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:31.198" endtime="20201030 16:03:31.217"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.196" endtime="20201030 16:03:31.218"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.195" endtime="20201030 16:03:31.218"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.837" endtime="20201030 16:03:31.219"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:30.836" endtime="20201030 16:03:31.219"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.227" endtime="20201030 16:03:31.247"></status>
</kw>
<msg timestamp="20201030 16:03:31.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:31.226" endtime="20201030 16:03:31.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:31.249" endtime="20201030 16:03:31.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.251" endtime="20201030 16:03:31.253"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.223" endtime="20201030 16:03:31.253"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.221" endtime="20201030 16:03:31.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.260" endtime="20201030 16:03:31.547"></status>
</kw>
<msg timestamp="20201030 16:03:31.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:31.259" endtime="20201030 16:03:31.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020313069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:31.551" endtime="20201030 16:03:31.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.559" endtime="20201030 16:03:31.560"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.256" endtime="20201030 16:03:31.561"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.254" endtime="20201030 16:03:31.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:31.565" level="INFO">${RESULT} = [{'diff': 9.511099999999842e-05}, {'diff': 9.501299999999796e-05}, {'diff': 9.544400000000008e-05}, {'diff': 9.566599999999773e-05}, {'diff': 9.549999999999836e-05}, {'diff': 9.566700000000067e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:31.562" endtime="20201030 16:03:31.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:31.570" level="INFO">${ACCURACY} = {'diff': [9.511099999999842e-05, 9.501299999999796e-05, 9.544400000000008e-05, 9.566599999999773e-05, 9.549999999999836e-05, 9.566700000000067e-05, 9.488899999999731e-05, 9.529199999999682e-05, 9.5375...</msg>
<status status="PASS" starttime="20201030 16:03:31.566" endtime="20201030 16:03:31.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.574" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 16:03:31.573" endtime="20201030 16:03:31.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.579" level="INFO">VALUE: [9.511099999999842e-05, 9.501299999999796e-05, 9.544400000000008e-05, 9.566599999999773e-05, 9.549999999999836e-05, 9.566700000000067e-05, 9.488899999999731e-05, 9.529199999999682e-05, 9.537500000000171e-05, 9.540300000000085e-05, 9.494499999999906e-05, 9.536100000000214e-05, 9.542999999999704e-05, 9.49859999999983e-05, 9.580499999999742e-05, 9.506899999999971e-05, 9.536099999999867e-05, 9.522199999999897e-05, 9.559699999999935e-05, 9.531999999999943e-05, 9.562500000000196e-05, 9.515199999999766e-05, 9.523599999999854e-05, 9.508299999999928e-05, 9.568000000000076e-05, 9.505500000000014e-05, 9.527799999999725e-05, 9.527800000000072e-05, 9.495799999999915e-05, 9.536099999999867e-05, 9.574999999999861e-05, 9.538900000000128e-05, 9.563900000000153e-05, 9.529099999999735e-05, 9.581899999999699e-05, 9.580600000000036e-05, 9.541700000000042e-05, 9.579200000000079e-05, 9.526400000000115e-05, 9.493099999999949e-05, 9.505599999999961e-05, 9.536100000000214e-05, 9.505599999999961e-05, 9.56530000000011e-05, 9.583300000000003e-05, 9.505500000000014e-05, 9.558299999999978e-05, 9.487500000000121e-05, 9.568100000000024e-05, 9.502800000000047e-05]</msg>
<status status="PASS" starttime="20201030 16:03:31.575" endtime="20201030 16:03:31.580"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.570" endtime="20201030 16:03:31.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:31.585" endtime="20201030 16:03:31.604"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.583" endtime="20201030 16:03:31.605"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.582" endtime="20201030 16:03:31.605"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.220" endtime="20201030 16:03:31.605"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.219" endtime="20201030 16:03:31.605"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.614" endtime="20201030 16:03:31.633"></status>
</kw>
<msg timestamp="20201030 16:03:31.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:31.612" endtime="20201030 16:03:31.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:31.635" endtime="20201030 16:03:31.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.637" endtime="20201030 16:03:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.610" endtime="20201030 16:03:31.639"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.608" endtime="20201030 16:03:31.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.646" endtime="20201030 16:03:31.930"></status>
</kw>
<msg timestamp="20201030 16:03:31.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01921075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019307431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:31.645" endtime="20201030 16:03:31.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01921075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019307431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:31.935" endtime="20201030 16:03:31.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.943" endtime="20201030 16:03:31.944"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.642" endtime="20201030 16:03:31.945"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.640" endtime="20201030 16:03:31.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:31.949" level="INFO">${RESULT} = [{'diff': 9.668100000000124e-05}, {'diff': 9.644400000000108e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.669399999999786e-05}, {'diff': 9.636099999999967e-05}, {'diff': 9.594399999999711e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:31.946" endtime="20201030 16:03:31.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:31.954" level="INFO">${ACCURACY} = {'diff': [9.668100000000124e-05, 9.644400000000108e-05, 9.674999999999961e-05, 9.669399999999786e-05, 9.636099999999967e-05, 9.594399999999711e-05, 9.669400000000133e-05, 9.662499999999949e-05, 9.6027...</msg>
<status status="PASS" starttime="20201030 16:03:31.950" endtime="20201030 16:03:31.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.959" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 16:03:31.958" endtime="20201030 16:03:31.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:31.961" level="INFO">VALUE: [9.668100000000124e-05, 9.644400000000108e-05, 9.674999999999961e-05, 9.669399999999786e-05, 9.636099999999967e-05, 9.594399999999711e-05, 9.669400000000133e-05, 9.662499999999949e-05, 9.6027999999998e-05, 9.644500000000056e-05, 9.666700000000167e-05, 9.627799999999825e-05, 9.61799999999978e-05, 9.665199999999916e-05, 9.67080000000009e-05, 9.637499999999924e-05, 9.672200000000047e-05, 9.654199999999807e-05, 9.656999999999721e-05, 9.632000000000043e-05, 9.659799999999982e-05, 9.626400000000215e-05, 9.673700000000299e-05, 9.597199999999972e-05, 9.619400000000083e-05, 9.594400000000058e-05, 9.613900000000203e-05, 9.641700000000142e-05, 9.60140000000019e-05, 9.63470000000001e-05, 9.637499999999924e-05, 9.629199999999782e-05, 9.597199999999972e-05, 9.659699999999688e-05, 9.681900000000146e-05, 9.616599999999823e-05, 9.670799999999743e-05, 9.659700000000035e-05, 9.587499999999874e-05, 9.651399999999893e-05, 9.599999999999886e-05, 9.608399999999975e-05, 9.599999999999886e-05, 9.676399999999918e-05, 9.611099999999942e-05, 9.587500000000221e-05, 9.597199999999972e-05, 9.633300000000053e-05, 9.606900000000071e-05, 9.669400000000133e-05]</msg>
<status status="PASS" starttime="20201030 16:03:31.960" endtime="20201030 16:03:31.962"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.955" endtime="20201030 16:03:31.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:31.966" endtime="20201030 16:03:31.985"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.964" endtime="20201030 16:03:31.986"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.963" endtime="20201030 16:03:31.986"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.606" endtime="20201030 16:03:31.987"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.606" endtime="20201030 16:03:31.987"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:31.995" endtime="20201030 16:03:32.014"></status>
</kw>
<msg timestamp="20201030 16:03:32.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:31.994" endtime="20201030 16:03:32.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:32.016" endtime="20201030 16:03:32.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.018" endtime="20201030 16:03:32.020"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.991" endtime="20201030 16:03:32.020"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.989" endtime="20201030 16:03:32.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.027" endtime="20201030 16:03:32.314"></status>
</kw>
<msg timestamp="20201030 16:03:32.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019261542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019359153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:32.026" endtime="20201030 16:03:32.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019261542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019359153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:32.319" endtime="20201030 16:03:32.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.327" endtime="20201030 16:03:32.328"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.023" endtime="20201030 16:03:32.329"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.021" endtime="20201030 16:03:32.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:32.333" level="INFO">${RESULT} = [{'diff': 9.761100000000092e-05}, {'diff': 9.741699999999895e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.736100000000067e-05}, {'diff': 9.711100000000042e-05}, {'diff': 9.71669999999987e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:32.330" endtime="20201030 16:03:32.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:32.337" level="INFO">${ACCURACY} = {'diff': [9.761100000000092e-05, 9.741699999999895e-05, 9.69860000000003e-05, 9.736100000000067e-05, 9.711100000000042e-05, 9.71669999999987e-05, 9.770799999999843e-05, 9.722200000000097e-05, 9.729199...</msg>
<status status="PASS" starttime="20201030 16:03:32.334" endtime="20201030 16:03:32.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.342" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 16:03:32.341" endtime="20201030 16:03:32.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.344" level="INFO">VALUE: [9.761100000000092e-05, 9.741699999999895e-05, 9.69860000000003e-05, 9.736100000000067e-05, 9.711100000000042e-05, 9.71669999999987e-05, 9.770799999999843e-05, 9.722200000000097e-05, 9.729199999999882e-05, 9.73059999999984e-05, 9.716700000000217e-05, 9.748700000000027e-05, 9.725000000000011e-05, 9.727699999999978e-05, 9.719400000000183e-05, 9.779099999999985e-05, 9.776400000000018e-05, 9.727800000000272e-05, 9.740300000000285e-05, 9.7027999999999e-05, 9.712499999999999e-05, 9.687499999999974e-05, 9.706999999999771e-05, 9.762500000000049e-05, 9.751300000000046e-05, 9.697199999999725e-05, 9.722200000000097e-05, 9.711099999999695e-05, 9.720799999999793e-05, 9.705600000000161e-05, 9.752800000000297e-05, 9.734800000000057e-05, 9.71669999999987e-05, 9.78479999999976e-05, 9.72080000000014e-05, 9.694400000000158e-05, 9.705499999999867e-05, 9.697199999999725e-05, 9.702800000000247e-05, 9.743099999999852e-05, 9.695799999999768e-05, 9.765299999999963e-05, 9.763900000000006e-05, 9.732000000000143e-05, 9.737500000000024e-05, 9.752700000000003e-05, 9.719400000000183e-05, 9.762500000000049e-05, 9.731999999999796e-05, 9.761099999999745e-05]</msg>
<status status="PASS" starttime="20201030 16:03:32.343" endtime="20201030 16:03:32.345"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.338" endtime="20201030 16:03:32.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:32.349" endtime="20201030 16:03:32.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.348" endtime="20201030 16:03:32.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.346" endtime="20201030 16:03:32.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.988" endtime="20201030 16:03:32.370"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:31.987" endtime="20201030 16:03:32.370"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.378" endtime="20201030 16:03:32.399"></status>
</kw>
<msg timestamp="20201030 16:03:32.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:32.377" endtime="20201030 16:03:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:32.400" endtime="20201030 16:03:32.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.403" endtime="20201030 16:03:32.404"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.374" endtime="20201030 16:03:32.405"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.372" endtime="20201030 16:03:32.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.411" endtime="20201030 16:03:32.697"></status>
</kw>
<msg timestamp="20201030 16:03:32.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:32.410" endtime="20201030 16:03:32.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:32.702" endtime="20201030 16:03:32.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.710" endtime="20201030 16:03:32.711"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.407" endtime="20201030 16:03:32.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.406" endtime="20201030 16:03:32.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:32.716" level="INFO">${RESULT} = [{'diff': 9.800000000000086e-05}, {'diff': 9.80410000000001e-05}, {'diff': 9.78609999999977e-05}, {'diff': 9.883299999999956e-05}, {'diff': 9.825000000000111e-05}, {'diff': 9.811100000000142e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:32.713" endtime="20201030 16:03:32.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:32.720" level="INFO">${ACCURACY} = {'diff': [9.800000000000086e-05, 9.80410000000001e-05, 9.78609999999977e-05, 9.883299999999956e-05, 9.825000000000111e-05, 9.811100000000142e-05, 9.858400000000225e-05, 9.81799999999998e-05, 9.8527000...</msg>
<status status="PASS" starttime="20201030 16:03:32.717" endtime="20201030 16:03:32.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.725" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 16:03:32.724" endtime="20201030 16:03:32.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.727" level="INFO">VALUE: [9.800000000000086e-05, 9.80410000000001e-05, 9.78609999999977e-05, 9.883299999999956e-05, 9.825000000000111e-05, 9.811100000000142e-05, 9.858400000000225e-05, 9.81799999999998e-05, 9.852700000000103e-05, 9.866600000000073e-05, 9.843000000000005e-05, 9.83470000000021e-05, 9.812500000000099e-05, 9.827700000000078e-05, 9.884699999999913e-05, 9.879199999999685e-05, 9.813900000000056e-05, 9.831999999999896e-05, 9.8028e-05, 9.815200000000066e-05, 9.884699999999913e-05, 9.800000000000086e-05, 9.83059999999994e-05, 9.881899999999999e-05, 9.813899999999709e-05, 9.791699999999945e-05, 9.854200000000007e-05, 9.838900000000081e-05, 9.827700000000078e-05, 9.858299999999931e-05, 9.825000000000111e-05, 9.809700000000185e-05, 9.84860000000018e-05, 9.800000000000086e-05, 9.873599999999857e-05, 9.8028e-05, 9.833399999999853e-05, 9.808299999999881e-05, 9.856999999999921e-05, 9.861100000000192e-05, 9.823599999999807e-05, 9.869399999999987e-05, 9.844399999999962e-05, 9.836100000000167e-05, 9.840300000000038e-05, 9.874999999999814e-05, 9.809699999999838e-05, 9.881999999999946e-05, 9.856899999999974e-05, 9.841699999999995e-05]</msg>
<status status="PASS" starttime="20201030 16:03:32.726" endtime="20201030 16:03:32.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.721" endtime="20201030 16:03:32.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:32.733" endtime="20201030 16:03:32.752"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.731" endtime="20201030 16:03:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.730" endtime="20201030 16:03:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.371" endtime="20201030 16:03:32.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.370" endtime="20201030 16:03:32.754"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.762" endtime="20201030 16:03:32.781"></status>
</kw>
<msg timestamp="20201030 16:03:32.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:32.760" endtime="20201030 16:03:32.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:32.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:32.782" endtime="20201030 16:03:32.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.785" endtime="20201030 16:03:32.786"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.758" endtime="20201030 16:03:32.787"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.756" endtime="20201030 16:03:32.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:32.793" endtime="20201030 16:03:33.079"></status>
</kw>
<msg timestamp="20201030 16:03:33.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019250472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:32.792" endtime="20201030 16:03:33.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019250472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019350069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:33.083" endtime="20201030 16:03:33.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.091" endtime="20201030 16:03:33.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.789" endtime="20201030 16:03:33.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.788" endtime="20201030 16:03:33.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:33.098" level="INFO">${RESULT} = [{'diff': 9.959699999999988e-05}, {'diff': 9.887500000000174e-05}, {'diff': 9.912500000000199e-05}, {'diff': 9.962499999999902e-05}, {'diff': 9.981900000000099e-05}, {'diff': 9.911099999999895e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:33.095" endtime="20201030 16:03:33.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:33.103" level="INFO">${ACCURACY} = {'diff': [9.959699999999988e-05, 9.887500000000174e-05, 9.912500000000199e-05, 9.962499999999902e-05, 9.981900000000099e-05, 9.911099999999895e-05, 9.983300000000056e-05, 9.926399999999821e-05, 9.8958...</msg>
<status status="PASS" starttime="20201030 16:03:33.099" endtime="20201030 16:03:33.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.107" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 16:03:33.106" endtime="20201030 16:03:33.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.110" level="INFO">VALUE: [9.959699999999988e-05, 9.887500000000174e-05, 9.912500000000199e-05, 9.962499999999902e-05, 9.981900000000099e-05, 9.911099999999895e-05, 9.983300000000056e-05, 9.926399999999821e-05, 9.895899999999916e-05, 9.908400000000275e-05, 9.951299999999899e-05, 9.948599999999932e-05, 9.951400000000193e-05, 9.915299999999766e-05, 9.915299999999766e-05, 9.968100000000077e-05, 9.905600000000014e-05, 9.89860000000023e-05, 9.959799999999935e-05, 9.974999999999914e-05, 9.973699999999905e-05, 9.938900000000181e-05, 9.983299999999709e-05, 9.919400000000037e-05, 9.906900000000024e-05, 9.948599999999932e-05, 9.951400000000193e-05, 9.973599999999957e-05, 9.908399999999928e-05, 9.919499999999984e-05, 9.897199999999926e-05, 9.938799999999887e-05, 9.981900000000099e-05, 9.895799999999969e-05, 9.915300000000113e-05, 9.944400000000062e-05, 9.888900000000131e-05, 9.915300000000113e-05, 9.945899999999966e-05, 9.951399999999846e-05, 9.972299999999948e-05, 9.908299999999981e-05, 9.888800000000184e-05, 9.958300000000031e-05, 9.890300000000088e-05, 9.945800000000019e-05, 9.962499999999902e-05, 9.96670000000012e-05, 9.945899999999966e-05, 9.973699999999905e-05]</msg>
<status status="PASS" starttime="20201030 16:03:33.108" endtime="20201030 16:03:33.115"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.104" endtime="20201030 16:03:33.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:33.119" endtime="20201030 16:03:33.139"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.118" endtime="20201030 16:03:33.139"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.116" endtime="20201030 16:03:33.140"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.754" endtime="20201030 16:03:33.140"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:32.754" endtime="20201030 16:03:33.140"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.149" endtime="20201030 16:03:33.168"></status>
</kw>
<msg timestamp="20201030 16:03:33.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:33.147" endtime="20201030 16:03:33.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:33.170" endtime="20201030 16:03:33.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.172" endtime="20201030 16:03:33.174"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.145" endtime="20201030 16:03:33.174"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.143" endtime="20201030 16:03:33.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.181" endtime="20201030 16:03:33.468"></status>
</kw>
<msg timestamp="20201030 16:03:33.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:33.180" endtime="20201030 16:03:33.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:33.473" endtime="20201030 16:03:33.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.481" endtime="20201030 16:03:33.482"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.177" endtime="20201030 16:03:33.483"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.175" endtime="20201030 16:03:33.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:33.487" level="INFO">${RESULT} = [{'diff': 0.00010048600000000033}, {'diff': 0.00010063800000000012}, {'diff': 0.00010081899999999852}, {'diff': 0.00010027799999999878}, {'diff': 0.0001001939999999979}, {'diff': 0.0001008329999999980...</msg>
<status status="PASS" starttime="20201030 16:03:33.484" endtime="20201030 16:03:33.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:33.491" level="INFO">${ACCURACY} = {'diff': [0.00010048600000000033, 0.00010063800000000012, 0.00010081899999999852, 0.00010027799999999878, 0.0001001939999999979, 0.00010083299999999809, 0.00010081900000000199, 0.00010058399999999731,...</msg>
<status status="PASS" starttime="20201030 16:03:33.488" endtime="20201030 16:03:33.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.495" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 16:03:33.494" endtime="20201030 16:03:33.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.498" level="INFO">VALUE: [0.00010048600000000033, 0.00010063800000000012, 0.00010081899999999852, 0.00010027799999999878, 0.0001001939999999979, 0.00010083299999999809, 0.00010081900000000199, 0.00010058399999999731, 0.00010083299999999809, 0.00010062500000000002, 0.00010015300000000213, 0.00010037499999999977, 0.00010006900000000124, 0.00010073600000000058, 0.00010013899999999909, 9.990300000000188e-05, 0.00010009700000000038, 0.0001004999999999999, 9.987500000000274e-05, 0.00010033400000000053, 0.00010065299999999916, 9.987499999999927e-05, 0.00010019400000000137, 0.00010079099999999938, 0.00010067999999999883, 9.991700000000145e-05, 0.00010058299999999784, 0.00010019500000000084, 0.00010055599999999817, 0.00010052799999999903, 0.00010006900000000124, 0.000100722000000001, 0.000100722000000001, 0.00010006900000000124, 9.997200000000026e-05, 0.00010076399999999971, 0.0001001939999999979, 0.00010041700000000195, 0.00010015299999999866, 9.987499999999927e-05, 0.00010023699999999955, 0.00010034700000000063, 0.00010031899999999802, 0.00010084700000000113, 0.00010080500000000242, 0.00010073600000000058, 0.00010061100000000045, 0.00010001400000000243, 0.00010076399999999971, 0.00010070800000000144]</msg>
<status status="PASS" starttime="20201030 16:03:33.496" endtime="20201030 16:03:33.499"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.492" endtime="20201030 16:03:33.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:33.503" endtime="20201030 16:03:33.522"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.501" endtime="20201030 16:03:33.523"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.500" endtime="20201030 16:03:33.523"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.141" endtime="20201030 16:03:33.523"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.141" endtime="20201030 16:03:33.523"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.532" endtime="20201030 16:03:33.551"></status>
</kw>
<msg timestamp="20201030 16:03:33.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:33.530" endtime="20201030 16:03:33.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:33.553" endtime="20201030 16:03:33.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.555" endtime="20201030 16:03:33.557"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.528" endtime="20201030 16:03:33.557"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.526" endtime="20201030 16:03:33.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.564" endtime="20201030 16:03:33.849"></status>
</kw>
<msg timestamp="20201030 16:03:33.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020823028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:33.562" endtime="20201030 16:03:33.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0207215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020823028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:33.853" endtime="20201030 16:03:33.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.862" endtime="20201030 16:03:33.863"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.560" endtime="20201030 16:03:33.864"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.558" endtime="20201030 16:03:33.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:33.868" level="INFO">${RESULT} = [{'diff': 0.00010152800000000003}, {'diff': 0.00010179199999999985}, {'diff': 0.00010098600000000083}, {'diff': 0.00010144500000000209}, {'diff': 0.00010156899999999927}, {'diff': 0.000101500000000000...</msg>
<status status="PASS" starttime="20201030 16:03:33.865" endtime="20201030 16:03:33.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:33.872" level="INFO">${ACCURACY} = {'diff': [0.00010152800000000003, 0.00010179199999999985, 0.00010098600000000083, 0.00010144500000000209, 0.00010156899999999927, 0.0001015000000000009, 0.00010142999999999958, 0.00010120799999999847,...</msg>
<status status="PASS" starttime="20201030 16:03:33.869" endtime="20201030 16:03:33.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.876" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 16:03:33.875" endtime="20201030 16:03:33.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.879" level="INFO">VALUE: [0.00010152800000000003, 0.00010179199999999985, 0.00010098600000000083, 0.00010144500000000209, 0.00010156899999999927, 0.0001015000000000009, 0.00010142999999999958, 0.00010120799999999847, 0.00010140299999999991, 0.00010143099999999905, 0.00010123600000000108, 0.00010108400000000128, 0.00010176400000000071, 0.00010118100000000227, 0.00010097200000000126, 0.00010159700000000188, 0.0001016939999999994, 0.00010129199999999935, 0.00010157000000000221, 0.00010083300000000156, 0.00010183299999999909, 0.00010122199999999804, 0.00010106999999999824, 0.0001014870000000008, 0.00010137500000000077, 0.00010159700000000188, 0.00010112500000000052, 0.00010138900000000034, 0.00010166699999999973, 0.00010156999999999874, 0.00010152800000000003, 0.00010126400000000021, 0.00010149999999999743, 0.0001015549999999997, 0.00010165300000000016, 0.00010166600000000026, 0.00010181900000000299, 0.00010180499999999995, 0.00010108300000000181, 0.00010094500000000159, 0.0001017359999999981, 0.00010098600000000083, 0.00010165300000000016, 0.00010172199999999854, 0.00010098600000000083, 0.00010158300000000231, 0.0001015549999999997, 0.00010137500000000077, 0.00010165300000000016, 0.00010090299999999941]</msg>
<status status="PASS" starttime="20201030 16:03:33.877" endtime="20201030 16:03:33.880"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.873" endtime="20201030 16:03:33.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:33.885" endtime="20201030 16:03:33.904"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.883" endtime="20201030 16:03:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.882" endtime="20201030 16:03:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.524" endtime="20201030 16:03:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.524" endtime="20201030 16:03:33.905"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.914" endtime="20201030 16:03:33.934"></status>
</kw>
<msg timestamp="20201030 16:03:33.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:33.912" endtime="20201030 16:03:33.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:33.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:33.936" endtime="20201030 16:03:33.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.938" endtime="20201030 16:03:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.910" endtime="20201030 16:03:33.941"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.908" endtime="20201030 16:03:33.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:33.947" endtime="20201030 16:03:34.233"></status>
</kw>
<msg timestamp="20201030 16:03:34.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:33.946" endtime="20201030 16:03:34.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:34.237" endtime="20201030 16:03:34.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.245" endtime="20201030 16:03:34.247"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.943" endtime="20201030 16:03:34.247"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.942" endtime="20201030 16:03:34.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:34.251" level="INFO">${RESULT} = [{'diff': 0.00010259699999999941}, {'diff': 0.00010231900000000002}, {'diff': 0.00010204100000000063}, {'diff': 0.00010197199999999879}, {'diff': 0.00010244400000000015}, {'diff': 0.000101971999999998...</msg>
<status status="PASS" starttime="20201030 16:03:34.248" endtime="20201030 16:03:34.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:34.256" level="INFO">${ACCURACY} = {'diff': [0.00010259699999999941, 0.00010231900000000002, 0.00010204100000000063, 0.00010197199999999879, 0.00010244400000000015, 0.00010197199999999879, 0.00010277799999999782, 0.00010275000000000215...</msg>
<status status="PASS" starttime="20201030 16:03:34.252" endtime="20201030 16:03:34.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.261" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 16:03:34.260" endtime="20201030 16:03:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.263" level="INFO">VALUE: [0.00010259699999999941, 0.00010231900000000002, 0.00010204100000000063, 0.00010197199999999879, 0.00010244400000000015, 0.00010197199999999879, 0.00010277799999999782, 0.00010275000000000215, 0.00010197300000000173, 0.00010206999999999924, 0.00010256900000000027, 0.00010195799999999922, 0.00010234699999999916, 0.00010225000000000165, 0.00010190299999999694, 0.00010216700000000023, 0.00010205599999999967, 0.00010229200000000035, 0.00010202700000000106, 0.00010270899999999944, 0.0001021939999999999, 0.00010286099999999923, 0.00010243000000000058, 0.00010234699999999916, 0.00010286099999999923, 0.00010259699999999941, 0.00010280600000000042, 0.00010266700000000073, 0.00010190200000000094, 0.00010237500000000177, 0.00010187500000000127, 0.00010258299999999984, 0.00010197199999999879, 0.00010261099999999898, 0.00010262500000000202, 0.00010244499999999962, 0.00010195899999999869, 0.00010258399999999931, 0.00010211099999999848, 0.00010215200000000119, 0.00010226400000000122, 0.00010197199999999879, 0.00010204100000000063, 0.00010230599999999992, 0.0001021809999999998, 0.00010248599999999886, 0.00010208400000000228, 0.00010216700000000023, 0.00010248599999999886, 0.00010279099999999791]</msg>
<status status="PASS" starttime="20201030 16:03:34.262" endtime="20201030 16:03:34.264"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.257" endtime="20201030 16:03:34.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:34.268" endtime="20201030 16:03:34.287"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.267" endtime="20201030 16:03:34.288"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.265" endtime="20201030 16:03:34.288"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.906" endtime="20201030 16:03:34.289"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:33.906" endtime="20201030 16:03:34.289"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.297" endtime="20201030 16:03:34.316"></status>
</kw>
<msg timestamp="20201030 16:03:34.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:34.296" endtime="20201030 16:03:34.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:34.318" endtime="20201030 16:03:34.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.320" endtime="20201030 16:03:34.322"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.293" endtime="20201030 16:03:34.322"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.291" endtime="20201030 16:03:34.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.329" endtime="20201030 16:03:34.616"></status>
</kw>
<msg timestamp="20201030 16:03:34.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01932875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0194325, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:34.327" endtime="20201030 16:03:34.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01932875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0194325, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:34.620" endtime="20201030 16:03:34.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.628" endtime="20201030 16:03:34.630"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.325" endtime="20201030 16:03:34.630"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.323" endtime="20201030 16:03:34.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:34.635" level="INFO">${RESULT} = [{'diff': 0.00010374999999999968}, {'diff': 0.00010372200000000054}, {'diff': 0.00010356900000000127}, {'diff': 0.00010302799999999807}, {'diff': 0.00010334799999999963}, {'diff': 0.000103124999999999...</msg>
<status status="PASS" starttime="20201030 16:03:34.631" endtime="20201030 16:03:34.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:34.639" level="INFO">${ACCURACY} = {'diff': [0.00010374999999999968, 0.00010372200000000054, 0.00010356900000000127, 0.00010302799999999807, 0.00010334799999999963, 0.00010312499999999905, 0.00010365200000000269, 0.00010370800000000097...</msg>
<status status="PASS" starttime="20201030 16:03:34.636" endtime="20201030 16:03:34.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.643" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 16:03:34.642" endtime="20201030 16:03:34.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.645" level="INFO">VALUE: [0.00010374999999999968, 0.00010372200000000054, 0.00010356900000000127, 0.00010302799999999807, 0.00010334799999999963, 0.00010312499999999905, 0.00010365200000000269, 0.00010370800000000097, 0.00010313900000000209, 0.00010305600000000067, 0.0001037360000000001, 0.00010366700000000173, 0.00010340300000000191, 0.00010330600000000092, 0.00010344500000000062, 0.00010359700000000041, 0.00010308300000000034, 0.000103513999999999, 0.00010363900000000259, 0.00010354199999999814, 0.00010376400000000272, 0.00010322200000000004, 0.00010319500000000037, 0.00010349999999999943, 0.0001029160000000015, 0.00010322200000000004, 0.00010383300000000109, 0.0001032359999999996, 0.00010293000000000108, 0.00010336099999999973, 0.00010359700000000041, 0.000103820000000001, 0.00010329200000000135, 0.00010312499999999905, 0.00010340300000000191, 0.00010295799999999675, 0.00010368000000000183, 0.000103513999999999, 0.00010308300000000034, 0.00010363900000000259, 0.00010379200000000185, 0.00010361099999999998, 0.00010344500000000062, 0.00010352799999999857, 0.00010351299999999952, 0.00010329099999999841, 0.00010299999999999893, 0.00010344500000000062, 0.0001030420000000011, 0.00010327800000000179]</msg>
<status status="PASS" starttime="20201030 16:03:34.644" endtime="20201030 16:03:34.646"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.639" endtime="20201030 16:03:34.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:34.650" endtime="20201030 16:03:34.670"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.649" endtime="20201030 16:03:34.670"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.648" endtime="20201030 16:03:34.671"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.290" endtime="20201030 16:03:34.671"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.289" endtime="20201030 16:03:34.671"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.679" endtime="20201030 16:03:34.700"></status>
</kw>
<msg timestamp="20201030 16:03:34.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:34.678" endtime="20201030 16:03:34.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:34.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:34.702" endtime="20201030 16:03:34.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.704" endtime="20201030 16:03:34.706"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.675" endtime="20201030 16:03:34.707"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.673" endtime="20201030 16:03:34.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:34.713" endtime="20201030 16:03:34.999"></status>
</kw>
<msg timestamp="20201030 16:03:35.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020896486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021000569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:34.712" endtime="20201030 16:03:35.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:35.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020896486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021000569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:35.003" endtime="20201030 16:03:35.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:35.011" endtime="20201030 16:03:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.709" endtime="20201030 16:03:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.708" endtime="20201030 16:03:35.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:35.018" level="INFO">${RESULT} = [{'diff': 0.00010408300000000134}, {'diff': 0.00010394500000000112}, {'diff': 0.00010459700000000141}, {'diff': 0.00010468099999999883}, {'diff': 0.00010390300000000241}, {'diff': 0.000104277999999999...</msg>
<status status="PASS" starttime="20201030 16:03:35.014" endtime="20201030 16:03:35.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:35.021" level="INFO">${ACCURACY} = {'diff': [0.00010408300000000134, 0.00010394500000000112, 0.00010459700000000141, 0.00010468099999999883, 0.00010390300000000241, 0.00010427799999999932, 0.00010413899999999962, 0.00010415299999999919...</msg>
<status status="PASS" starttime="20201030 16:03:35.019" endtime="20201030 16:03:35.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:35.026" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 16:03:35.025" endtime="20201030 16:03:35.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:35.031" level="INFO">VALUE: [0.00010408300000000134, 0.00010394500000000112, 0.00010459700000000141, 0.00010468099999999883, 0.00010390300000000241, 0.00010427799999999932, 0.00010413899999999962, 0.00010415299999999919, 0.00010393100000000155, 0.00010423700000000008, 0.00010463800000000065, 0.00010454099999999966, 0.00010462500000000055, 0.00010398600000000036, 0.00010458299999999837, 0.00010463900000000012, 0.00010465299999999969, 0.0001045689999999988, 0.00010431899999999855, 0.00010384799999999667, 0.00010405499999999873, 0.00010440300000000291, 0.00010436099999999726, 0.00010472199999999807, 0.00010416700000000223, 0.00010441599999999954, 0.00010445900000000119, 0.00010448700000000033, 0.00010463900000000012, 0.00010390200000000294, 0.00010440199999999997, 0.00010442999999999911, 0.0001047499999999972, 0.00010451299999999705, 0.00010419500000000137, 0.00010393100000000155, 0.00010461100000000098, 0.00010426399999999975, 0.00010480499999999948, 0.0001046940000000024, 0.00010430499999999898, 0.00010476400000000025, 0.00010434700000000116, 0.00010458299999999837, 0.00010388899999999937, 0.00010455499999999923, 0.00010458400000000131, 0.00010472300000000101, 0.00010466699999999926, 0.00010445799999999825]</msg>
<status status="PASS" starttime="20201030 16:03:35.027" endtime="20201030 16:03:35.032"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.022" endtime="20201030 16:03:35.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:35.037" endtime="20201030 16:03:35.056"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.035" endtime="20201030 16:03:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.034" endtime="20201030 16:03:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.672" endtime="20201030 16:03:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:34.671" endtime="20201030 16:03:35.057"></status>
</kw>
<status status="PASS" starttime="20201030 16:02:56.834" endtime="20201030 16:03:35.058"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:02:53.742" endtime="20201030 16:03:35.058" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:35.065" endtime="20201030 16:03:35.084"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.063" endtime="20201030 16:03:35.085"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:35.098" endtime="20201030 16:03:38.119"></status>
</kw>
<msg timestamp="20201030 16:03:38.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:35.096" endtime="20201030 16:03:38.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.125" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.122" endtime="20201030 16:03:38.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.132" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:03:38.127" endtime="20201030 16:03:38.133"></status>
</kw>
<status status="FAIL" starttime="20201030 16:03:35.093" endtime="20201030 16:03:38.134"></status>
</kw>
<status status="FAIL" starttime="20201030 16:03:35.091" endtime="20201030 16:03:38.136"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.090" endtime="20201030 16:03:38.137"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:03:38.145" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:03:38.143" endtime="20201030 16:03:38.145"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.139" endtime="20201030 16:03:38.146"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.089" endtime="20201030 16:03:38.146"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.088" endtime="20201030 16:03:38.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.148" endtime="20201030 16:03:38.151"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.087" endtime="20201030 16:03:38.152"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.085" endtime="20201030 16:03:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:35.062" endtime="20201030 16:03:38.154"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.175" endtime="20201030 16:03:38.193"></status>
</kw>
<msg timestamp="20201030 16:03:38.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.172" endtime="20201030 16:03:38.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.197" endtime="20201030 16:03:38.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.202" endtime="20201030 16:03:38.206"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.164" endtime="20201030 16:03:38.207"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.160" endtime="20201030 16:03:38.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.221" endtime="20201030 16:03:38.521"></status>
</kw>
<msg timestamp="20201030 16:03:38.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102478597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102500806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:38.218" endtime="20201030 16:03:38.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102478597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.102500806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:38.525" endtime="20201030 16:03:38.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.533" endtime="20201030 16:03:38.535"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.212" endtime="20201030 16:03:38.535"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.209" endtime="20201030 16:03:38.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:38.539" level="INFO">${RESULT} = [{'diff': 2.220899999993975e-05}, {'diff': 2.2194999999669562e-05}, {'diff': 2.224999999977939e-05}, {'diff': 2.155500000000643e-05}, {'diff': 2.1833999999998355e-05}, {'diff': 2.2319000000159406e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:38.536" endtime="20201030 16:03:38.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:38.543" level="INFO">${ACCURACY} = {'diff': [2.220899999993975e-05, 2.2194999999669562e-05, 2.224999999977939e-05, 2.155500000000643e-05, 2.1833999999998355e-05, 2.2319000000159406e-05, 2.180499999981933e-05, 2.151400000016679e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 16:03:38.540" endtime="20201030 16:03:38.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.549" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 16:03:38.548" endtime="20201030 16:03:38.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.551" level="INFO">VALUE: [2.220899999993975e-05, 2.2194999999669562e-05, 2.224999999977939e-05, 2.155500000000643e-05, 2.1833999999998355e-05, 2.2319000000159406e-05, 2.180499999981933e-05, 2.151400000016679e-05, 2.1985999999696304e-05, 2.2361000000081788e-05, 2.2332999999985503e-05, 2.1472000000244407e-05, 2.1665999999864738e-05, 2.2319000000159406e-05, 2.2458000000113998e-05, 2.1568999999832528e-05, 2.2167000000017367e-05, 2.2332999999985503e-05, 2.1929999999947825e-05, 2.1666999999947478e-05, 2.2125000000094985e-05, 2.18610000000119e-05, 2.1792000000075973e-05, 2.1875000000282085e-05, 2.199999999996649e-05, 2.2138999999921083e-05, 2.244399999984381e-05, 2.1792000000075973e-05, 2.1874999999837996e-05, 2.1971999999870206e-05, 2.2292000000145862e-05, 2.175000000015359e-05, 2.240300000000417e-05, 2.220899999993975e-05, 2.244499999992655e-05, 2.205599999971497e-05, 2.244399999984381e-05, 2.229100000006312e-05, 2.170900000031395e-05, 2.205600000015906e-05, 2.219500000011365e-05, 2.1762999999896948e-05, 2.1972999999952947e-05, 2.2179999999760724e-05, 2.180499999981933e-05, 2.2125000000094985e-05, 2.1527000000354235e-05, 2.230499999988922e-05, 2.190199999985154e-05, 2.1790999999993232e-05]</msg>
<status status="PASS" starttime="20201030 16:03:38.550" endtime="20201030 16:03:38.552"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.544" endtime="20201030 16:03:38.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:38.555" endtime="20201030 16:03:38.575"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.554" endtime="20201030 16:03:38.576"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.553" endtime="20201030 16:03:38.576"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.157" endtime="20201030 16:03:38.576"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.156" endtime="20201030 16:03:38.576"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.585" endtime="20201030 16:03:38.600"></status>
</kw>
<msg timestamp="20201030 16:03:38.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.583" endtime="20201030 16:03:38.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.602" endtime="20201030 16:03:38.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.604" endtime="20201030 16:03:38.606"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.581" endtime="20201030 16:03:38.606"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.579" endtime="20201030 16:03:38.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.613" endtime="20201030 16:03:38.898"></status>
</kw>
<msg timestamp="20201030 16:03:38.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01987275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:38.612" endtime="20201030 16:03:38.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01987275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:38.902" endtime="20201030 16:03:38.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.910" endtime="20201030 16:03:38.911"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.609" endtime="20201030 16:03:38.912"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.607" endtime="20201030 16:03:38.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:38.916" level="INFO">${RESULT} = [{'diff': 2.2013999999997286e-05}, {'diff': 2.1486000000001115e-05}, {'diff': 2.2207999999999256e-05}, {'diff': 2.2235999999998396e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.2278000000000575e-0...</msg>
<status status="PASS" starttime="20201030 16:03:38.913" endtime="20201030 16:03:38.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:38.921" level="INFO">${ACCURACY} = {'diff': [2.2013999999997286e-05, 2.1486000000001115e-05, 2.2207999999999256e-05, 2.2235999999998396e-05, 2.236099999999852e-05, 2.2278000000000575e-05, 2.215300000000045e-05, 2.2277999999997106e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:38.917" endtime="20201030 16:03:38.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.926" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 16:03:38.925" endtime="20201030 16:03:38.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.928" level="INFO">VALUE: [2.2013999999997286e-05, 2.1486000000001115e-05, 2.2207999999999256e-05, 2.2235999999998396e-05, 2.236099999999852e-05, 2.2278000000000575e-05, 2.215300000000045e-05, 2.2277999999997106e-05, 2.156899999999906e-05, 2.2207999999999256e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.2028000000000325e-05, 2.215300000000045e-05, 2.2055999999999465e-05, 2.1986000000001615e-05, 2.1735999999997896e-05, 2.220899999999873e-05, 2.1500000000000685e-05, 2.1819999999998785e-05, 2.2098000000001644e-05, 2.163900000000038e-05, 2.188900000000063e-05, 2.215300000000045e-05, 2.1985999999998146e-05, 2.2319999999999285e-05, 2.229100000000067e-05, 2.2277999999997106e-05, 2.229100000000067e-05, 2.2193999999999686e-05, 2.22770000000011e-05, 2.2443999999999936e-05, 2.2457999999999506e-05, 2.158299999999863e-05, 2.20830000000026e-05, 2.2471999999999076e-05, 2.1500000000000685e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.19030000000002e-05, 2.1500000000000685e-05, 2.244499999999941e-05, 2.212500000000131e-05, 2.241700000000027e-05, 2.1707999999998756e-05, 2.206899999999956e-05, 2.2193999999999686e-05, 2.166699999999952e-05, 2.2471999999999076e-05, 2.183300000000235e-05]</msg>
<status status="PASS" starttime="20201030 16:03:38.927" endtime="20201030 16:03:38.929"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.922" endtime="20201030 16:03:38.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:38.933" endtime="20201030 16:03:38.952"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.931" endtime="20201030 16:03:38.953"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.930" endtime="20201030 16:03:38.953"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.577" endtime="20201030 16:03:38.953"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.577" endtime="20201030 16:03:38.953"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.962" endtime="20201030 16:03:38.978"></status>
</kw>
<msg timestamp="20201030 16:03:38.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.961" endtime="20201030 16:03:38.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:38.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:38.979" endtime="20201030 16:03:38.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.981" endtime="20201030 16:03:38.983"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.958" endtime="20201030 16:03:38.983"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.956" endtime="20201030 16:03:38.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:38.990" endtime="20201030 16:03:39.276"></status>
</kw>
<msg timestamp="20201030 16:03:39.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:38.989" endtime="20201030 16:03:39.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019898417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:39.280" endtime="20201030 16:03:39.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.288" endtime="20201030 16:03:39.290"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.986" endtime="20201030 16:03:39.291"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.984" endtime="20201030 16:03:39.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:39.295" level="INFO">${RESULT} = [{'diff': 2.2292000000000145e-05}, {'diff': 2.215300000000045e-05}, {'diff': 2.2111999999997745e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.168100000000256e-05}, {'diff': 2.1791999999999645e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:39.292" endtime="20201030 16:03:39.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:39.299" level="INFO">${ACCURACY} = {'diff': [2.2292000000000145e-05, 2.215300000000045e-05, 2.2111999999997745e-05, 2.161100000000124e-05, 2.168100000000256e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.1679999999999616e-05, 2....</msg>
<status status="PASS" starttime="20201030 16:03:39.296" endtime="20201030 16:03:39.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.303" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 16:03:39.302" endtime="20201030 16:03:39.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.306" level="INFO">VALUE: [2.2292000000000145e-05, 2.215300000000045e-05, 2.2111999999997745e-05, 2.161100000000124e-05, 2.168100000000256e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.1679999999999616e-05, 2.213900000000088e-05, 2.1791999999999645e-05, 2.2152000000000976e-05, 2.226300000000153e-05, 2.1736000000001365e-05, 2.2472000000002545e-05, 2.1707999999998756e-05, 2.209700000000217e-05, 2.155499999999949e-05, 2.1666000000000046e-05, 2.2430000000000366e-05, 2.1694000000002656e-05, 2.165299999999995e-05, 2.2207999999999256e-05, 2.213900000000088e-05, 2.1778000000000075e-05, 2.1791999999999645e-05, 2.24030000000007e-05, 2.183299999999888e-05, 2.233299999999938e-05, 2.234700000000242e-05, 2.215300000000045e-05, 2.216700000000002e-05, 2.1820000000002254e-05, 2.1500000000000685e-05, 2.1707999999998756e-05, 2.184700000000192e-05, 2.1736000000001365e-05, 2.245899999999898e-05, 2.1764000000000505e-05, 2.1500000000000685e-05, 2.238900000000113e-05, 2.161100000000124e-05, 2.1514000000000255e-05, 2.191699999999977e-05, 2.2014000000000755e-05, 2.187500000000106e-05, 2.2485999999998646e-05, 2.1848000000001394e-05, 2.212499999999784e-05, 2.2221999999998826e-05, 2.2236000000001865e-05]</msg>
<status status="PASS" starttime="20201030 16:03:39.304" endtime="20201030 16:03:39.306"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.300" endtime="20201030 16:03:39.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:39.310" endtime="20201030 16:03:39.330"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.309" endtime="20201030 16:03:39.331"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.308" endtime="20201030 16:03:39.331"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.954" endtime="20201030 16:03:39.331"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.954" endtime="20201030 16:03:39.331"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.341" endtime="20201030 16:03:39.358"></status>
</kw>
<msg timestamp="20201030 16:03:39.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:39.338" endtime="20201030 16:03:39.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:39.359" endtime="20201030 16:03:39.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.362" endtime="20201030 16:03:39.363"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.336" endtime="20201030 16:03:39.364"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.334" endtime="20201030 16:03:39.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.371" endtime="20201030 16:03:39.656"></status>
</kw>
<msg timestamp="20201030 16:03:39.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:39.369" endtime="20201030 16:03:39.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:39.660" endtime="20201030 16:03:39.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.668" endtime="20201030 16:03:39.670"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.367" endtime="20201030 16:03:39.670"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.365" endtime="20201030 16:03:39.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:39.675" level="INFO">${RESULT} = [{'diff': 2.2028000000000325e-05}, {'diff': 2.1721999999998326e-05}, {'diff': 2.2222000000002295e-05}, {'diff': 2.1680000000003086e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.2041999999999895e-0...</msg>
<status status="PASS" starttime="20201030 16:03:39.671" endtime="20201030 16:03:39.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:39.679" level="INFO">${ACCURACY} = {'diff': [2.2028000000000325e-05, 2.1721999999998326e-05, 2.2222000000002295e-05, 2.1680000000003086e-05, 2.234699999999895e-05, 2.2041999999999895e-05, 2.2486000000002115e-05, 2.181899999999931e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:39.676" endtime="20201030 16:03:39.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.683" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 16:03:39.682" endtime="20201030 16:03:39.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.686" level="INFO">VALUE: [2.2028000000000325e-05, 2.1721999999998326e-05, 2.2222000000002295e-05, 2.1680000000003086e-05, 2.234699999999895e-05, 2.2041999999999895e-05, 2.2486000000002115e-05, 2.181899999999931e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.1971999999998576e-05, 2.188900000000063e-05, 2.168099999999909e-05, 2.231899999999981e-05, 2.2278000000000575e-05, 2.1555999999998965e-05, 2.1806000000002684e-05, 2.169499999999866e-05, 2.1584000000001574e-05, 2.24030000000007e-05, 2.2028000000000325e-05, 2.1806000000002684e-05, 2.2041999999999895e-05, 2.165299999999995e-05, 2.2333999999998855e-05, 2.2112000000001214e-05, 2.2041999999999895e-05, 2.188900000000063e-05, 2.1847999999997925e-05, 2.148700000000059e-05, 2.1999999999997716e-05, 2.195899999999848e-05, 2.2278000000000575e-05, 2.234699999999895e-05, 2.20969999999987e-05, 2.2166000000000546e-05, 2.213900000000088e-05, 2.211100000000174e-05, 2.1500000000000685e-05, 2.2401999999997757e-05, 2.1500000000000685e-05, 2.2264000000001005e-05, 2.181900000000278e-05, 2.1958000000002476e-05, 2.1666000000000046e-05, 2.212500000000131e-05, 2.186100000000149e-05, 2.158299999999863e-05, 2.2264000000001005e-05, 2.237499999999809e-05]</msg>
<status status="PASS" starttime="20201030 16:03:39.684" endtime="20201030 16:03:39.687"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.680" endtime="20201030 16:03:39.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:39.691" endtime="20201030 16:03:39.711"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.690" endtime="20201030 16:03:39.711"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.689" endtime="20201030 16:03:39.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.332" endtime="20201030 16:03:39.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.332" endtime="20201030 16:03:39.712"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.721" endtime="20201030 16:03:39.736"></status>
</kw>
<msg timestamp="20201030 16:03:39.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:39.719" endtime="20201030 16:03:39.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:39.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:39.737" endtime="20201030 16:03:39.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.740" endtime="20201030 16:03:39.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.716" endtime="20201030 16:03:39.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.714" endtime="20201030 16:03:39.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:39.749" endtime="20201030 16:03:40.035"></status>
</kw>
<msg timestamp="20201030 16:03:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01939525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:39.747" endtime="20201030 16:03:40.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01939525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:40.039" endtime="20201030 16:03:40.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.047" endtime="20201030 16:03:40.049"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.744" endtime="20201030 16:03:40.050"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.743" endtime="20201030 16:03:40.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:40.054" level="INFO">${RESULT} = [{'diff': 2.233299999999938e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.187500000000106e-05}, {'diff': 2.152700000000035e-05}, {'diff': 2.1707999999998756e-05}, {'diff': 2.237500000000156e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:40.051" endtime="20201030 16:03:40.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:40.059" level="INFO">${ACCURACY} = {'diff': [2.233299999999938e-05, 2.162500000000081e-05, 2.187500000000106e-05, 2.152700000000035e-05, 2.1707999999998756e-05, 2.237500000000156e-05, 2.161100000000124e-05, 2.184699999999845e-05, 2.208...</msg>
<status status="PASS" starttime="20201030 16:03:40.055" endtime="20201030 16:03:40.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.063" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 16:03:40.062" endtime="20201030 16:03:40.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.066" level="INFO">VALUE: [2.233299999999938e-05, 2.162500000000081e-05, 2.187500000000106e-05, 2.152700000000035e-05, 2.1707999999998756e-05, 2.237500000000156e-05, 2.161100000000124e-05, 2.184699999999845e-05, 2.208299999999913e-05, 2.1971999999998576e-05, 2.230500000000024e-05, 2.17090000000017e-05, 2.166699999999952e-05, 2.162499999999734e-05, 2.247299999999855e-05, 2.233299999999938e-05, 2.238900000000113e-05, 2.234699999999895e-05, 2.1986000000001615e-05, 2.1736000000001365e-05, 2.1985999999998146e-05, 2.1721999999998326e-05, 2.1791999999999645e-05, 2.168099999999909e-05, 2.1764000000000505e-05, 2.191699999999977e-05, 2.2069999999999035e-05, 2.219499999999916e-05, 2.212500000000131e-05, 2.247299999999855e-05, 2.1735999999997896e-05, 2.195899999999848e-05, 2.188900000000063e-05, 2.2207999999999256e-05, 2.1834000000001824e-05, 2.2443999999999936e-05, 2.1679999999999616e-05, 2.2193999999999686e-05, 2.2137999999997937e-05, 2.204100000000042e-05, 2.151300000000078e-05, 2.2207999999999256e-05, 2.204100000000042e-05, 2.1541999999999395e-05, 2.2040999999996952e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1514000000000255e-05, 2.181900000000278e-05, 2.188899999999716e-05]</msg>
<status status="PASS" starttime="20201030 16:03:40.064" endtime="20201030 16:03:40.066"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.060" endtime="20201030 16:03:40.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:40.071" endtime="20201030 16:03:40.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.069" endtime="20201030 16:03:40.091"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.068" endtime="20201030 16:03:40.091"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.713" endtime="20201030 16:03:40.091"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:39.712" endtime="20201030 16:03:40.091"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.100" endtime="20201030 16:03:40.116"></status>
</kw>
<msg timestamp="20201030 16:03:40.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:40.098" endtime="20201030 16:03:40.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:40.117" endtime="20201030 16:03:40.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.120" endtime="20201030 16:03:40.121"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.096" endtime="20201030 16:03:40.122"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.094" endtime="20201030 16:03:40.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.129" endtime="20201030 16:03:40.415"></status>
</kw>
<msg timestamp="20201030 16:03:40.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:40.127" endtime="20201030 16:03:40.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019430097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:40.419" endtime="20201030 16:03:40.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.428" endtime="20201030 16:03:40.429"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.125" endtime="20201030 16:03:40.430"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.123" endtime="20201030 16:03:40.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:40.434" level="INFO">${RESULT} = [{'diff': 2.1972000000002045e-05}, {'diff': 2.234700000000242e-05}, {'diff': 2.2180000000000116e-05}, {'diff': 2.1527999999999825e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.24030000000007e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:40.431" endtime="20201030 16:03:40.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:40.438" level="INFO">${ACCURACY} = {'diff': [2.1972000000002045e-05, 2.234700000000242e-05, 2.2180000000000116e-05, 2.1527999999999825e-05, 2.234699999999895e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.211099999999827e-05, 2.15...</msg>
<status status="PASS" starttime="20201030 16:03:40.435" endtime="20201030 16:03:40.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.442" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 16:03:40.441" endtime="20201030 16:03:40.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.445" level="INFO">VALUE: [2.1972000000002045e-05, 2.234700000000242e-05, 2.2180000000000116e-05, 2.1527999999999825e-05, 2.234699999999895e-05, 2.24030000000007e-05, 2.237499999999809e-05, 2.211099999999827e-05, 2.156899999999906e-05, 2.209700000000217e-05, 2.183299999999888e-05, 2.2457999999999506e-05, 2.1514000000000255e-05, 2.19030000000002e-05, 2.2278000000000575e-05, 2.238900000000113e-05, 2.212499999999784e-05, 2.211100000000174e-05, 2.2083999999998605e-05, 2.155499999999949e-05, 2.187500000000106e-05, 2.2221999999998826e-05, 2.2264000000001005e-05, 2.247300000000202e-05, 2.197299999999805e-05, 2.1721999999998326e-05, 2.226300000000153e-05, 2.20830000000026e-05, 2.204100000000042e-05, 2.2028000000000325e-05, 2.20969999999987e-05, 2.202700000000085e-05, 2.2402000000001226e-05, 2.233299999999938e-05, 2.1722000000001795e-05, 2.2250000000001435e-05, 2.2458000000002976e-05, 2.179100000000017e-05, 2.236099999999852e-05, 2.213900000000088e-05, 2.2221999999998826e-05, 2.2221999999998826e-05, 2.1750000000000935e-05, 2.2040999999996952e-05, 2.20830000000026e-05, 2.233300000000285e-05, 2.1791999999999645e-05, 2.233299999999938e-05, 2.1778000000000075e-05, 2.2208000000002726e-05]</msg>
<status status="PASS" starttime="20201030 16:03:40.443" endtime="20201030 16:03:40.446"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.439" endtime="20201030 16:03:40.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:40.450" endtime="20201030 16:03:40.469"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.448" endtime="20201030 16:03:40.470"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.447" endtime="20201030 16:03:40.470"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.092" endtime="20201030 16:03:40.470"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.092" endtime="20201030 16:03:40.471"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.481" endtime="20201030 16:03:40.497"></status>
</kw>
<msg timestamp="20201030 16:03:40.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:40.479" endtime="20201030 16:03:40.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:40.499" endtime="20201030 16:03:40.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.501" endtime="20201030 16:03:40.503"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.477" endtime="20201030 16:03:40.503"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.474" endtime="20201030 16:03:40.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.510" endtime="20201030 16:03:40.797"></status>
</kw>
<msg timestamp="20201030 16:03:40.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:40.509" endtime="20201030 16:03:40.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:40.801" endtime="20201030 16:03:40.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.809" endtime="20201030 16:03:40.811"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.506" endtime="20201030 16:03:40.811"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.504" endtime="20201030 16:03:40.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:40.816" level="INFO">${RESULT} = [{'diff': 2.2443999999999936e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.243099999999984e-05}, {'diff': 2.233299999999938e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:40.812" endtime="20201030 16:03:40.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:40.820" level="INFO">${ACCURACY} = {'diff': [2.2443999999999936e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.1750000000000935e-05, 2.243099999999984e-05, 2.233299999999938e-05, 2.1693999999999186e-05, 2.2457999999999506e-05, 2....</msg>
<status status="PASS" starttime="20201030 16:03:40.817" endtime="20201030 16:03:40.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.824" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 16:03:40.823" endtime="20201030 16:03:40.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.827" level="INFO">VALUE: [2.2443999999999936e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.1750000000000935e-05, 2.243099999999984e-05, 2.233299999999938e-05, 2.1693999999999186e-05, 2.2457999999999506e-05, 2.241700000000027e-05, 2.2443999999999936e-05, 2.241700000000027e-05, 2.1805999999999215e-05, 2.2207999999999256e-05, 2.181899999999931e-05, 2.2443999999999936e-05, 2.219499999999916e-05, 2.218100000000306e-05, 2.1514000000000255e-05, 2.212500000000131e-05, 2.191699999999977e-05, 2.170899999999823e-05, 2.19030000000002e-05, 2.24030000000007e-05, 2.244499999999941e-05, 2.1848000000001394e-05, 2.166699999999952e-05, 2.1862000000000964e-05, 2.187499999999759e-05, 2.170899999999823e-05, 2.2348000000001894e-05, 2.245899999999898e-05, 2.2084000000002074e-05, 2.1736000000001365e-05, 2.1834000000001824e-05, 2.233300000000285e-05, 2.1666000000000046e-05, 2.2471999999999076e-05, 2.1736000000001365e-05, 2.2443999999999936e-05, 2.208299999999913e-05, 2.183299999999888e-05, 2.234700000000242e-05, 2.183299999999888e-05, 2.233299999999938e-05, 2.216700000000002e-05, 2.1972000000002045e-05, 2.1513999999996786e-05, 2.2041999999999895e-05, 2.162500000000081e-05, 2.1736000000001365e-05]</msg>
<status status="PASS" starttime="20201030 16:03:40.825" endtime="20201030 16:03:40.828"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.821" endtime="20201030 16:03:40.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:40.832" endtime="20201030 16:03:40.852"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.831" endtime="20201030 16:03:40.852"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.830" endtime="20201030 16:03:40.853"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.472" endtime="20201030 16:03:40.853"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.471" endtime="20201030 16:03:40.853"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.862" endtime="20201030 16:03:40.877"></status>
</kw>
<msg timestamp="20201030 16:03:40.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:40.860" endtime="20201030 16:03:40.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:40.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:40.879" endtime="20201030 16:03:40.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.881" endtime="20201030 16:03:40.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.857" endtime="20201030 16:03:40.883"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.855" endtime="20201030 16:03:40.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:40.890" endtime="20201030 16:03:41.175"></status>
</kw>
<msg timestamp="20201030 16:03:41.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:40.889" endtime="20201030 16:03:41.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:41.179" endtime="20201030 16:03:41.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.187" endtime="20201030 16:03:41.189"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.886" endtime="20201030 16:03:41.190"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.884" endtime="20201030 16:03:41.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:41.194" level="INFO">${RESULT} = [{'diff': 2.2180000000000116e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.193099999999934e-05}, {'diff': 2.186099999999802e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:41.191" endtime="20201030 16:03:41.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:41.199" level="INFO">${ACCURACY} = {'diff': [2.2180000000000116e-05, 2.1750000000000935e-05, 2.19030000000002e-05, 2.162500000000081e-05, 2.193099999999934e-05, 2.186099999999802e-05, 2.209700000000217e-05, 2.161100000000124e-05, 2.173...</msg>
<status status="PASS" starttime="20201030 16:03:41.195" endtime="20201030 16:03:41.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.203" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 16:03:41.202" endtime="20201030 16:03:41.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.206" level="INFO">VALUE: [2.2180000000000116e-05, 2.1750000000000935e-05, 2.19030000000002e-05, 2.162500000000081e-05, 2.193099999999934e-05, 2.186099999999802e-05, 2.209700000000217e-05, 2.161100000000124e-05, 2.1736000000001365e-05, 2.163900000000038e-05, 2.168100000000256e-05, 2.1514000000000255e-05, 2.2305999999999715e-05, 2.1957999999999006e-05, 2.1778000000000075e-05, 2.2319999999999285e-05, 2.2207999999999256e-05, 2.163900000000038e-05, 2.2250000000001435e-05, 2.216700000000002e-05, 2.159700000000167e-05, 2.2014000000000755e-05, 2.1514000000000255e-05, 2.245899999999898e-05, 2.2055999999999465e-05, 2.237500000000156e-05, 2.17770000000006e-05, 2.1569999999998535e-05, 2.195899999999848e-05, 2.2112000000001214e-05, 2.1778000000000075e-05, 2.206899999999956e-05, 2.233299999999938e-05, 2.226300000000153e-05, 2.212500000000131e-05, 2.1514000000000255e-05, 2.22090000000022e-05, 2.2151999999997507e-05, 2.209700000000217e-05, 2.2166000000000546e-05, 2.211100000000174e-05, 2.233300000000285e-05, 2.1986000000001615e-05, 2.179100000000017e-05, 2.181899999999931e-05, 2.2221999999998826e-05, 2.1721999999998326e-05, 2.24030000000007e-05, 2.156899999999906e-05, 2.213900000000088e-05]</msg>
<status status="PASS" starttime="20201030 16:03:41.204" endtime="20201030 16:03:41.206"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.200" endtime="20201030 16:03:41.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:41.211" endtime="20201030 16:03:41.230"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.209" endtime="20201030 16:03:41.231"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.208" endtime="20201030 16:03:41.231"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.854" endtime="20201030 16:03:41.231"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:40.853" endtime="20201030 16:03:41.231"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.240" endtime="20201030 16:03:41.255"></status>
</kw>
<msg timestamp="20201030 16:03:41.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:41.238" endtime="20201030 16:03:41.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:41.257" endtime="20201030 16:03:41.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.259" endtime="20201030 16:03:41.261"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.236" endtime="20201030 16:03:41.261"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.234" endtime="20201030 16:03:41.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.268" endtime="20201030 16:03:41.558"></status>
</kw>
<msg timestamp="20201030 16:03:41.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:41.266" endtime="20201030 16:03:41.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019362153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:41.562" endtime="20201030 16:03:41.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.570" endtime="20201030 16:03:41.572"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.264" endtime="20201030 16:03:41.572"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.262" endtime="20201030 16:03:41.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:41.577" level="INFO">${RESULT} = [{'diff': 2.2166000000000546e-05}, {'diff': 2.2112000000001214e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.1971999999998576e-05}, {'diff': 2.233299999999938e-05}, {'diff': 2.161100000000124e-05...</msg>
<status status="PASS" starttime="20201030 16:03:41.573" endtime="20201030 16:03:41.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:41.581" level="INFO">${ACCURACY} = {'diff': [2.2166000000000546e-05, 2.2112000000001214e-05, 2.2193999999999686e-05, 2.1971999999998576e-05, 2.233299999999938e-05, 2.161100000000124e-05, 2.155500000000296e-05, 2.204100000000042e-05, 2....</msg>
<status status="PASS" starttime="20201030 16:03:41.578" endtime="20201030 16:03:41.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.585" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 16:03:41.584" endtime="20201030 16:03:41.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.587" level="INFO">VALUE: [2.2166000000000546e-05, 2.2112000000001214e-05, 2.2193999999999686e-05, 2.1971999999998576e-05, 2.233299999999938e-05, 2.161100000000124e-05, 2.155500000000296e-05, 2.204100000000042e-05, 2.202700000000085e-05, 2.158299999999863e-05, 2.2152000000000976e-05, 2.215300000000045e-05, 2.15830000000021e-05, 2.20969999999987e-05, 2.1957999999999006e-05, 2.234699999999895e-05, 2.205499999999999e-05, 2.2193999999999686e-05, 2.156899999999906e-05, 2.2028000000000325e-05, 2.1819999999998785e-05, 2.211099999999827e-05, 2.1957999999999006e-05, 2.1805999999999215e-05, 2.238900000000113e-05, 2.19030000000002e-05, 2.2292000000000145e-05, 2.1514000000000255e-05, 2.1514000000000255e-05, 2.194499999999891e-05, 2.237500000000156e-05, 2.2098000000001644e-05, 2.166699999999952e-05, 2.1722000000001795e-05, 2.2028000000000325e-05, 2.222300000000177e-05, 2.1848000000001394e-05, 2.245899999999898e-05, 2.2320000000002754e-05, 2.2250000000001435e-05, 2.172300000000127e-05, 2.1862000000000964e-05, 2.241700000000027e-05, 2.244499999999941e-05, 2.2235999999998396e-05, 2.229100000000067e-05, 2.211100000000174e-05, 2.24030000000007e-05, 2.1486000000001115e-05, 2.211100000000174e-05]</msg>
<status status="PASS" starttime="20201030 16:03:41.586" endtime="20201030 16:03:41.588"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.581" endtime="20201030 16:03:41.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:41.592" endtime="20201030 16:03:41.612"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.591" endtime="20201030 16:03:41.612"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.590" endtime="20201030 16:03:41.613"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.232" endtime="20201030 16:03:41.613"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.232" endtime="20201030 16:03:41.613"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.621" endtime="20201030 16:03:41.639"></status>
</kw>
<msg timestamp="20201030 16:03:41.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:41.620" endtime="20201030 16:03:41.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:41.641" endtime="20201030 16:03:41.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.643" endtime="20201030 16:03:41.645"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.617" endtime="20201030 16:03:41.645"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.615" endtime="20201030 16:03:41.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.652" endtime="20201030 16:03:41.938"></status>
</kw>
<msg timestamp="20201030 16:03:41.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:41.650" endtime="20201030 16:03:41.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:41.942" endtime="20201030 16:03:41.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:41.950" endtime="20201030 16:03:41.952"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.648" endtime="20201030 16:03:41.952"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.646" endtime="20201030 16:03:41.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:41.957" level="INFO">${RESULT} = [{'diff': 2.161100000000124e-05}, {'diff': 2.238900000000113e-05}, {'diff': 2.230500000000024e-05}, {'diff': 2.156900000000253e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.1541999999999395e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:41.953" endtime="20201030 16:03:41.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:41.961" level="INFO">${ACCURACY} = {'diff': [2.161100000000124e-05, 2.238900000000113e-05, 2.230500000000024e-05, 2.156900000000253e-05, 2.213900000000088e-05, 2.1541999999999395e-05, 2.213900000000088e-05, 2.215300000000045e-05, 2.209...</msg>
<status status="PASS" starttime="20201030 16:03:41.958" endtime="20201030 16:03:41.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.965" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 16:03:41.964" endtime="20201030 16:03:41.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:41.968" level="INFO">VALUE: [2.161100000000124e-05, 2.238900000000113e-05, 2.230500000000024e-05, 2.156900000000253e-05, 2.213900000000088e-05, 2.1541999999999395e-05, 2.213900000000088e-05, 2.215300000000045e-05, 2.209700000000217e-05, 2.1971999999998576e-05, 2.208299999999913e-05, 2.2319999999999285e-05, 2.238900000000113e-05, 2.2207999999999256e-05, 2.1569999999998535e-05, 2.2485999999998646e-05, 2.2098000000001644e-05, 2.1778000000000075e-05, 2.218099999999959e-05, 2.188900000000063e-05, 2.220899999999873e-05, 2.162500000000081e-05, 2.187499999999759e-05, 2.2292000000000145e-05, 2.193099999999934e-05, 2.237499999999809e-05, 2.173700000000084e-05, 2.186100000000149e-05, 2.234699999999895e-05, 2.1929999999999866e-05, 2.2500000000001685e-05, 2.238900000000113e-05, 2.2165999999997077e-05, 2.2026999999997382e-05, 2.2278000000000575e-05, 2.188899999999716e-05, 2.2221999999998826e-05, 2.156899999999906e-05, 2.215300000000045e-05, 2.165299999999995e-05, 2.215300000000045e-05, 2.1943999999999436e-05, 2.24030000000007e-05, 2.1471999999998076e-05, 2.2041999999999895e-05, 2.161100000000124e-05, 2.186100000000149e-05, 2.241700000000027e-05, 2.213900000000088e-05, 2.162499999999734e-05]</msg>
<status status="PASS" starttime="20201030 16:03:41.966" endtime="20201030 16:03:41.969"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.962" endtime="20201030 16:03:41.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:41.973" endtime="20201030 16:03:41.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.972" endtime="20201030 16:03:41.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.971" endtime="20201030 16:03:41.994"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.614" endtime="20201030 16:03:41.994"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.613" endtime="20201030 16:03:41.994"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.003" endtime="20201030 16:03:42.018"></status>
</kw>
<msg timestamp="20201030 16:03:42.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:42.001" endtime="20201030 16:03:42.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:42.019" endtime="20201030 16:03:42.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.021" endtime="20201030 16:03:42.023"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.999" endtime="20201030 16:03:42.024"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.996" endtime="20201030 16:03:42.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.030" endtime="20201030 16:03:42.317"></status>
</kw>
<msg timestamp="20201030 16:03:42.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:42.029" endtime="20201030 16:03:42.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:42.321" endtime="20201030 16:03:42.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.330" endtime="20201030 16:03:42.331"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.026" endtime="20201030 16:03:42.332"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.024" endtime="20201030 16:03:42.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:42.336" level="INFO">${RESULT} = [{'diff': 2.2749999999998466e-05}, {'diff': 2.2985999999999146e-05}, {'diff': 2.268100000000009e-05}, {'diff': 2.3263999999998536e-05}, {'diff': 2.3028000000001325e-05}, {'diff': 2.3000000000002185e-0...</msg>
<status status="PASS" starttime="20201030 16:03:42.333" endtime="20201030 16:03:42.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:42.341" level="INFO">${ACCURACY} = {'diff': [2.2749999999998466e-05, 2.2985999999999146e-05, 2.268100000000009e-05, 2.3263999999998536e-05, 2.3028000000001325e-05, 2.3000000000002185e-05, 2.266700000000052e-05, 2.313900000000188e-05, 2...</msg>
<status status="PASS" starttime="20201030 16:03:42.337" endtime="20201030 16:03:42.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.345" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 16:03:42.344" endtime="20201030 16:03:42.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.348" level="INFO">VALUE: [2.2749999999998466e-05, 2.2985999999999146e-05, 2.268100000000009e-05, 2.3263999999998536e-05, 2.3028000000001325e-05, 2.3000000000002185e-05, 2.266700000000052e-05, 2.313900000000188e-05, 2.2736000000002365e-05, 2.34030000000017e-05, 2.3013999999998286e-05, 2.3026999999998382e-05, 2.333300000000038e-05, 2.270899999999923e-05, 2.329100000000167e-05, 2.320899999999973e-05, 2.29030000000012e-05, 2.3194000000000686e-05, 2.333300000000038e-05, 2.3151999999998507e-05, 2.258299999999963e-05, 2.313900000000188e-05, 2.3221999999999826e-05, 2.284699999999945e-05, 2.3026999999998382e-05, 2.312500000000231e-05, 2.336099999999952e-05, 2.315299999999798e-05, 2.2778000000001075e-05, 2.255500000000049e-05, 2.2777999999997606e-05, 2.315299999999798e-05, 2.340299999999823e-05, 2.29030000000012e-05, 2.2541999999996926e-05, 2.2778000000001075e-05, 2.261100000000224e-05, 2.261100000000224e-05, 2.266700000000052e-05, 2.3263999999998536e-05, 2.2735999999998896e-05, 2.3485999999999646e-05, 2.2985999999999146e-05, 2.34030000000017e-05, 2.338900000000213e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3013999999998286e-05, 2.286099999999902e-05, 2.291700000000077e-05]</msg>
<status status="PASS" starttime="20201030 16:03:42.346" endtime="20201030 16:03:42.349"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.342" endtime="20201030 16:03:42.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:42.353" endtime="20201030 16:03:42.372"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.351" endtime="20201030 16:03:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.350" endtime="20201030 16:03:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.995" endtime="20201030 16:03:42.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:41.994" endtime="20201030 16:03:42.373"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.382" endtime="20201030 16:03:42.397"></status>
</kw>
<msg timestamp="20201030 16:03:42.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:42.381" endtime="20201030 16:03:42.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:42.399" endtime="20201030 16:03:42.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.401" endtime="20201030 16:03:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.378" endtime="20201030 16:03:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.376" endtime="20201030 16:03:42.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.410" endtime="20201030 16:03:42.698"></status>
</kw>
<msg timestamp="20201030 16:03:42.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01952025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:42.409" endtime="20201030 16:03:42.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019496597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01952025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:42.702" endtime="20201030 16:03:42.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.710" endtime="20201030 16:03:42.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.406" endtime="20201030 16:03:42.712"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.404" endtime="20201030 16:03:42.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:42.717" level="INFO">${RESULT} = [{'diff': 2.365299999999848e-05}, {'diff': 2.434700000000095e-05}, {'diff': 2.4318999999998342e-05}, {'diff': 2.4000000000003185e-05}, {'diff': 2.361099999999977e-05}, {'diff': 2.433300000000138e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:42.714" endtime="20201030 16:03:42.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:42.721" level="INFO">${ACCURACY} = {'diff': [2.365299999999848e-05, 2.434700000000095e-05, 2.4318999999998342e-05, 2.4000000000003185e-05, 2.361099999999977e-05, 2.433300000000138e-05, 2.3986000000000146e-05, 2.4194000000001686e-05, 2....</msg>
<status status="PASS" starttime="20201030 16:03:42.718" endtime="20201030 16:03:42.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.725" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 16:03:42.724" endtime="20201030 16:03:42.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.728" level="INFO">VALUE: [2.365299999999848e-05, 2.434700000000095e-05, 2.4318999999998342e-05, 2.4000000000003185e-05, 2.361099999999977e-05, 2.433300000000138e-05, 2.3986000000000146e-05, 2.4194000000001686e-05, 2.4346999999997482e-05, 2.4346999999997482e-05, 2.4333999999997385e-05, 2.412499999999984e-05, 2.4041999999998426e-05, 2.3806000000001215e-05, 2.3570000000000535e-05, 2.391700000000177e-05, 2.37229999999998e-05, 2.4013999999999286e-05, 2.4361999999999995e-05, 2.4041999999998426e-05, 2.3791999999998176e-05, 2.4276999999999632e-05, 2.437500000000009e-05, 2.404100000000242e-05, 2.3832999999997412e-05, 2.4458000000001506e-05, 2.362499999999934e-05, 2.386100000000002e-05, 2.4457999999998037e-05, 2.406900000000156e-05, 2.3999999999999716e-05, 2.363900000000238e-05, 2.362499999999934e-05, 2.3930000000001866e-05, 2.4042000000001895e-05, 2.416699999999855e-05, 2.420899999999726e-05, 2.3943999999997967e-05, 2.3971999999997107e-05, 2.393099999999787e-05, 2.4277999999999106e-05, 2.4306000000001715e-05, 2.3570000000000535e-05, 2.388899999999916e-05, 2.3763999999999036e-05, 2.418099999999812e-05, 2.3485999999999646e-05, 2.368100000000109e-05, 2.413899999999941e-05, 2.3792000000001645e-05]</msg>
<status status="PASS" starttime="20201030 16:03:42.726" endtime="20201030 16:03:42.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.722" endtime="20201030 16:03:42.729"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:42.733" endtime="20201030 16:03:42.752"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.731" endtime="20201030 16:03:42.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.730" endtime="20201030 16:03:42.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.374" endtime="20201030 16:03:42.753"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.374" endtime="20201030 16:03:42.753"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.762" endtime="20201030 16:03:42.778"></status>
</kw>
<msg timestamp="20201030 16:03:42.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:42.760" endtime="20201030 16:03:42.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:42.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:42.780" endtime="20201030 16:03:42.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.782" endtime="20201030 16:03:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.758" endtime="20201030 16:03:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.756" endtime="20201030 16:03:42.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:42.791" endtime="20201030 16:03:43.078"></status>
</kw>
<msg timestamp="20201030 16:03:43.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:42.789" endtime="20201030 16:03:43.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 16:03:43.083" endtime="20201030 16:03:43.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.091" endtime="20201030 16:03:43.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.787" endtime="20201030 16:03:43.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.785" endtime="20201030 16:03:43.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:43.098" level="INFO">${RESULT} = [{'diff': 2.516699999999955e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.4721999999997857e-05}, {'diff': 2.4764000000000036e-05}, {'diff': 2.4777999999999606e-05}, {'diff': 2.5457999999999037e-0...</msg>
<status status="PASS" starttime="20201030 16:03:43.094" endtime="20201030 16:03:43.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:43.102" level="INFO">${ACCURACY} = {'diff': [2.516699999999955e-05, 2.4707999999998287e-05, 2.4721999999997857e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.5457999999999037e-05, 2.5444000000002936e-05, 2.512500000000084e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:43.099" endtime="20201030 16:03:43.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.106" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 16:03:43.105" endtime="20201030 16:03:43.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.108" level="INFO">VALUE: [2.516699999999955e-05, 2.4707999999998287e-05, 2.4721999999997857e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.5457999999999037e-05, 2.5444000000002936e-05, 2.512500000000084e-05, 2.5096999999998232e-05, 2.5305999999999246e-05, 2.463899999999991e-05, 2.533300000000238e-05, 2.5084000000001605e-05, 2.462500000000034e-05, 2.470900000000123e-05, 2.495900000000148e-05, 2.538900000000066e-05, 2.47230000000008e-05, 2.512500000000084e-05, 2.465299999999948e-05, 2.4862000000000495e-05, 2.5152000000000507e-05, 2.516699999999955e-05, 2.4679999999999147e-05, 2.537499999999762e-05, 2.462500000000034e-05, 2.5138000000000937e-05, 2.4500000000000216e-05, 2.5304999999999772e-05, 2.515299999999998e-05, 2.4486000000000646e-05, 2.4999999999997247e-05, 2.4846999999997982e-05, 2.5068999999999092e-05, 2.481900000000231e-05, 2.4777999999999606e-05, 2.5054999999999522e-05, 2.5222000000001826e-05, 2.462500000000034e-05, 2.5096999999998232e-05, 2.5444000000002936e-05, 2.4778000000003075e-05, 2.5082999999998662e-05, 2.4818999999998842e-05, 2.5264000000000536e-05, 2.486100000000102e-05, 2.4569999999998066e-05, 2.5069999999998566e-05, 2.544500000000241e-05, 2.4540999999999452e-05]</msg>
<status status="PASS" starttime="20201030 16:03:43.107" endtime="20201030 16:03:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.102" endtime="20201030 16:03:43.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:43.114" endtime="20201030 16:03:43.134"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.113" endtime="20201030 16:03:43.134"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.112" endtime="20201030 16:03:43.135"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.754" endtime="20201030 16:03:43.135"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:42.754" endtime="20201030 16:03:43.135"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.143" endtime="20201030 16:03:43.160"></status>
</kw>
<msg timestamp="20201030 16:03:43.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:43.142" endtime="20201030 16:03:43.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:43.162" endtime="20201030 16:03:43.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.165" endtime="20201030 16:03:43.168"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.139" endtime="20201030 16:03:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.137" endtime="20201030 16:03:43.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.178" endtime="20201030 16:03:43.466"></status>
</kw>
<msg timestamp="20201030 16:03:43.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:43.177" endtime="20201030 16:03:43.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:43.471" endtime="20201030 16:03:43.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.480" endtime="20201030 16:03:43.482"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.174" endtime="20201030 16:03:43.483"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.171" endtime="20201030 16:03:43.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:43.487" level="INFO">${RESULT} = [{'diff': 2.5749999999997997e-05}, {'diff': 2.644499999999994e-05}, {'diff': 2.5971999999999107e-05}, {'diff': 2.6028000000000856e-05}, {'diff': 2.6027999999997387e-05}, {'diff': 2.593099999999987e-05...</msg>
<status status="PASS" starttime="20201030 16:03:43.484" endtime="20201030 16:03:43.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:43.492" level="INFO">${ACCURACY} = {'diff': [2.5749999999997997e-05, 2.644499999999994e-05, 2.5971999999999107e-05, 2.6028000000000856e-05, 2.6027999999997387e-05, 2.593099999999987e-05, 2.643100000000037e-05, 2.640300000000123e-05, 2....</msg>
<status status="PASS" starttime="20201030 16:03:43.488" endtime="20201030 16:03:43.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.497" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 16:03:43.496" endtime="20201030 16:03:43.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.499" level="INFO">VALUE: [2.5749999999997997e-05, 2.644499999999994e-05, 2.5971999999999107e-05, 2.6028000000000856e-05, 2.6027999999997387e-05, 2.593099999999987e-05, 2.643100000000037e-05, 2.640300000000123e-05, 2.5861999999998025e-05, 2.5569999999999066e-05, 2.6262999999998593e-05, 2.6124999999998372e-05, 2.6485999999999177e-05, 2.5694000000003187e-05, 2.6166000000001077e-05, 2.6249999999998497e-05, 2.611100000000227e-05, 2.6319000000000342e-05, 2.587500000000159e-05, 2.6416000000001327e-05, 2.6110999999998802e-05, 2.6124999999998372e-05, 2.6070000000003035e-05, 2.5972000000002576e-05, 2.5943999999999967e-05, 2.6028000000000856e-05, 2.6194000000000217e-05, 2.5514000000000786e-05, 2.5598000000001675e-05, 2.5999999999998247e-05, 2.5596999999998732e-05, 2.613899999999794e-05, 2.6306000000000246e-05, 2.6207999999999787e-05, 2.566700000000005e-05, 2.5514000000000786e-05, 2.586100000000202e-05, 2.616700000000055e-05, 2.563900000000091e-05, 2.562500000000134e-05, 2.593099999999987e-05, 2.5861999999998025e-05, 2.6112000000001745e-05, 2.6347999999998956e-05, 2.5514000000000786e-05, 2.6097999999998706e-05, 2.6207999999999787e-05, 2.6026999999997913e-05, 2.5777000000001132e-05, 2.6096999999999232e-05]</msg>
<status status="PASS" starttime="20201030 16:03:43.498" endtime="20201030 16:03:43.500"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.493" endtime="20201030 16:03:43.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:43.504" endtime="20201030 16:03:43.523"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.502" endtime="20201030 16:03:43.524"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.501" endtime="20201030 16:03:43.524"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.136" endtime="20201030 16:03:43.525"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.135" endtime="20201030 16:03:43.525"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.533" endtime="20201030 16:03:43.549"></status>
</kw>
<msg timestamp="20201030 16:03:43.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:43.532" endtime="20201030 16:03:43.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:43.550" endtime="20201030 16:03:43.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.553" endtime="20201030 16:03:43.554"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.529" endtime="20201030 16:03:43.555"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.527" endtime="20201030 16:03:43.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.562" endtime="20201030 16:03:43.850"></status>
</kw>
<msg timestamp="20201030 16:03:43.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:43.560" endtime="20201030 16:03:43.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:43.854" endtime="20201030 16:03:43.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.862" endtime="20201030 16:03:43.864"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.558" endtime="20201030 16:03:43.864"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.556" endtime="20201030 16:03:43.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:43.869" level="INFO">${RESULT} = [{'diff': 2.6888999999998692e-05}, {'diff': 2.7124999999999372e-05}, {'diff': 2.7320000000000816e-05}, {'diff': 2.694500000000044e-05}, {'diff': 2.6943999999997498e-05}, {'diff': 2.744499999999747e-05...</msg>
<status status="PASS" starttime="20201030 16:03:43.866" endtime="20201030 16:03:43.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:43.873" level="INFO">${ACCURACY} = {'diff': [2.6888999999998692e-05, 2.7124999999999372e-05, 2.7320000000000816e-05, 2.694500000000044e-05, 2.6943999999997498e-05, 2.744499999999747e-05, 2.7291000000002202e-05, 2.7486000000000177e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:43.870" endtime="20201030 16:03:43.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.877" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 16:03:43.876" endtime="20201030 16:03:43.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.880" level="INFO">VALUE: [2.6888999999998692e-05, 2.7124999999999372e-05, 2.7320000000000816e-05, 2.694500000000044e-05, 2.6943999999997498e-05, 2.744499999999747e-05, 2.7291000000002202e-05, 2.7486000000000177e-05, 2.69170000000013e-05, 2.690299999999826e-05, 2.7026999999998913e-05, 2.7416000000002327e-05, 2.6901999999998788e-05, 2.7333000000000912e-05, 2.6624999999998872e-05, 2.6819000000000842e-05, 2.6570000000000066e-05, 2.7276999999999163e-05, 2.6680000000001147e-05, 2.6805999999997276e-05, 2.665299999999801e-05, 2.6778000000001606e-05, 2.716699999999808e-05, 2.7430000000001897e-05, 2.7235999999999927e-05, 2.7014000000002286e-05, 2.7458000000001037e-05, 2.7277999999998637e-05, 2.7207999999997318e-05, 2.7138999999998942e-05, 2.7027999999998387e-05, 2.6638999999998442e-05, 2.6860999999999552e-05, 2.6610999999999302e-05, 2.7388999999999192e-05, 2.7361000000000052e-05, 2.7084000000000136e-05, 2.7013999999998817e-05, 2.7334000000000386e-05, 2.697299999999958e-05, 2.6915999999998358e-05, 2.6847999999999456e-05, 2.668100000000062e-05, 2.7304999999998303e-05, 2.7347999999999956e-05, 2.6805000000001272e-05, 2.6887999999999218e-05, 2.6901999999998788e-05, 2.6583000000000162e-05, 2.7361000000000052e-05]</msg>
<status status="PASS" starttime="20201030 16:03:43.878" endtime="20201030 16:03:43.880"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.874" endtime="20201030 16:03:43.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:43.885" endtime="20201030 16:03:43.904"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.883" endtime="20201030 16:03:43.905"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.882" endtime="20201030 16:03:43.905"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.526" endtime="20201030 16:03:43.905"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.525" endtime="20201030 16:03:43.905"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.914" endtime="20201030 16:03:43.930"></status>
</kw>
<msg timestamp="20201030 16:03:43.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:43.912" endtime="20201030 16:03:43.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:43.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:43.931" endtime="20201030 16:03:43.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.934" endtime="20201030 16:03:43.935"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.910" endtime="20201030 16:03:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.908" endtime="20201030 16:03:43.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:43.943" endtime="20201030 16:03:44.229"></status>
</kw>
<msg timestamp="20201030 16:03:44.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020491556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:43.941" endtime="20201030 16:03:44.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020491556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020519625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:44.233" endtime="20201030 16:03:44.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.241" endtime="20201030 16:03:44.243"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.939" endtime="20201030 16:03:44.243"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.937" endtime="20201030 16:03:44.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:44.248" level="INFO">${RESULT} = [{'diff': 2.8068999999998623e-05}, {'diff': 2.84309999999989e-05}, {'diff': 2.7527999999998887e-05}, {'diff': 2.7694000000001717e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.7847000000000982e-05...</msg>
<status status="PASS" starttime="20201030 16:03:44.244" endtime="20201030 16:03:44.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:44.252" level="INFO">${ACCURACY} = {'diff': [2.8068999999998623e-05, 2.84309999999989e-05, 2.7527999999998887e-05, 2.7694000000001717e-05, 2.8472000000001607e-05, 2.7847000000000982e-05, 2.8222000000001357e-05, 2.7985999999997208e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:44.249" endtime="20201030 16:03:44.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.256" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 16:03:44.255" endtime="20201030 16:03:44.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.259" level="INFO">VALUE: [2.8068999999998623e-05, 2.84309999999989e-05, 2.7527999999998887e-05, 2.7694000000001717e-05, 2.8472000000001607e-05, 2.7847000000000982e-05, 2.8222000000001357e-05, 2.7985999999997208e-05, 2.8084000000001136e-05, 2.7722000000000857e-05, 2.8291999999999207e-05, 2.7527999999998887e-05, 2.820900000000126e-05, 2.797300000000058e-05, 2.741699999999833e-05, 2.822300000000083e-05, 2.8069999999998096e-05, 2.7693999999998248e-05, 2.7776999999999663e-05, 2.8277000000000163e-05, 2.8208000000001787e-05, 2.8097000000001232e-05, 2.7749999999999997e-05, 2.8472000000001607e-05, 2.7972000000001107e-05, 2.8318999999998873e-05, 2.8000000000000247e-05, 2.8332999999998443e-05, 2.8138999999999942e-05, 2.8208000000001787e-05, 2.8041999999998957e-05, 2.7958000000001537e-05, 2.8111000000000802e-05, 2.8138999999999942e-05, 2.79309999999984e-05, 2.7861000000000552e-05, 2.7749999999999997e-05, 2.7820000000001316e-05, 2.7776999999999663e-05, 2.79170000000023e-05, 2.7569999999997596e-05, 2.8027999999999387e-05, 2.7834000000000886e-05, 2.8013999999999817e-05, 2.7778000000002606e-05, 2.816700000000255e-05, 2.822300000000083e-05, 2.8334000000001386e-05, 2.8000000000000247e-05, 2.7763999999999567e-05]</msg>
<status status="PASS" starttime="20201030 16:03:44.257" endtime="20201030 16:03:44.260"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.252" endtime="20201030 16:03:44.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:44.264" endtime="20201030 16:03:44.284"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.263" endtime="20201030 16:03:44.284"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.262" endtime="20201030 16:03:44.285"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.906" endtime="20201030 16:03:44.285"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:43.906" endtime="20201030 16:03:44.285"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.293" endtime="20201030 16:03:44.310"></status>
</kw>
<msg timestamp="20201030 16:03:44.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:44.292" endtime="20201030 16:03:44.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:44.312" endtime="20201030 16:03:44.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.314" endtime="20201030 16:03:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.289" endtime="20201030 16:03:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.287" endtime="20201030 16:03:44.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.323" endtime="20201030 16:03:44.608"></status>
</kw>
<msg timestamp="20201030 16:03:44.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:44.322" endtime="20201030 16:03:44.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:44.613" endtime="20201030 16:03:44.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.621" endtime="20201030 16:03:44.622"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.319" endtime="20201030 16:03:44.623"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.317" endtime="20201030 16:03:44.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:44.627" level="INFO">${RESULT} = [{'diff': 2.9333999999998916e-05}, {'diff': 2.8736000000001427e-05}, {'diff': 2.8818999999999373e-05}, {'diff': 2.923699999999793e-05}, {'diff': 2.9319999999999347e-05}, {'diff': 2.9320000000002816e-0...</msg>
<status status="PASS" starttime="20201030 16:03:44.624" endtime="20201030 16:03:44.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:44.634" level="INFO">${ACCURACY} = {'diff': [2.9333999999998916e-05, 2.8736000000001427e-05, 2.8818999999999373e-05, 2.923699999999793e-05, 2.9319999999999347e-05, 2.9320000000002816e-05, 2.9041000000000483e-05, 2.8847000000001982e-05,...</msg>
<status status="PASS" starttime="20201030 16:03:44.628" endtime="20201030 16:03:44.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.640" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 16:03:44.638" endtime="20201030 16:03:44.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.644" level="INFO">VALUE: [2.9333999999998916e-05, 2.8736000000001427e-05, 2.8818999999999373e-05, 2.923699999999793e-05, 2.9319999999999347e-05, 2.9320000000002816e-05, 2.9041000000000483e-05, 2.8847000000001982e-05, 2.9457999999999568e-05, 2.8527000000000413e-05, 2.8764000000000567e-05, 2.9305000000000303e-05, 2.9264000000001067e-05, 2.9082999999999193e-05, 2.9388999999997723e-05, 2.9096999999998763e-05, 2.8986000000001677e-05, 2.9041999999999957e-05, 2.8527999999999887e-05, 2.9402999999997292e-05, 2.9236000000001927e-05, 2.9374999999998153e-05, 2.8750000000000997e-05, 2.9278000000000637e-05, 2.9167000000000082e-05, 2.9305999999999777e-05, 2.8499999999997278e-05, 2.8583999999998166e-05, 2.8653000000000012e-05, 2.9347000000002482e-05, 2.8554999999999553e-05, 2.920899999999879e-05, 2.843100000000237e-05, 2.8750000000000997e-05, 2.8805999999999277e-05, 2.8819000000002842e-05, 2.898700000000115e-05, 2.9166000000000608e-05, 2.8693999999999248e-05, 2.8791000000000233e-05, 2.9443999999999998e-05, 2.9012999999997874e-05, 2.9166000000000608e-05, 2.9193999999999748e-05, 2.9235999999998458e-05, 2.9318999999999873e-05, 2.9055000000000053e-05, 2.893100000000287e-05, 2.9167000000000082e-05, 2.8721999999998388e-05]</msg>
<status status="PASS" starttime="20201030 16:03:44.642" endtime="20201030 16:03:44.645"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.635" endtime="20201030 16:03:44.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:44.653" endtime="20201030 16:03:44.673"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.650" endtime="20201030 16:03:44.673"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.649" endtime="20201030 16:03:44.674"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.286" endtime="20201030 16:03:44.674"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.285" endtime="20201030 16:03:44.674"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.683" endtime="20201030 16:03:44.699"></status>
</kw>
<msg timestamp="20201030 16:03:44.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:44.681" endtime="20201030 16:03:44.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:44.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:44.700" endtime="20201030 16:03:44.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.702" endtime="20201030 16:03:44.704"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.679" endtime="20201030 16:03:44.705"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.677" endtime="20201030 16:03:44.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:44.711" endtime="20201030 16:03:45.000"></status>
</kw>
<msg timestamp="20201030 16:03:45.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:44.710" endtime="20201030 16:03:45.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:45.004" endtime="20201030 16:03:45.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.012" endtime="20201030 16:03:45.014"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.707" endtime="20201030 16:03:45.014"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.706" endtime="20201030 16:03:45.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:45.019" level="INFO">${RESULT} = [{'diff': 3.0083999999999667e-05}, {'diff': 2.9806000000000277e-05}, {'diff': 2.9778000000001137e-05}, {'diff': 3.0042000000000957e-05}, {'diff': 3.0374999999999153e-05}, {'diff': 2.995899999999954e-0...</msg>
<status status="PASS" starttime="20201030 16:03:45.015" endtime="20201030 16:03:45.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:45.023" level="INFO">${ACCURACY} = {'diff': [3.0083999999999667e-05, 2.9806000000000277e-05, 2.9778000000001137e-05, 3.0042000000000957e-05, 3.0374999999999153e-05, 2.995899999999954e-05, 3.019500000000022e-05, 2.9638999999997973e-05, ...</msg>
<status status="PASS" starttime="20201030 16:03:45.020" endtime="20201030 16:03:45.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.027" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 16:03:45.026" endtime="20201030 16:03:45.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.030" level="INFO">VALUE: [3.0083999999999667e-05, 2.9806000000000277e-05, 2.9778000000001137e-05, 3.0042000000000957e-05, 3.0374999999999153e-05, 2.995899999999954e-05, 3.019500000000022e-05, 2.9638999999997973e-05, 2.9764000000001567e-05, 2.9610999999998833e-05, 2.9944000000000498e-05, 3.0013999999998348e-05, 3.04579999999971e-05, 3.0026999999998444e-05, 2.9902000000001788e-05, 3.016599999999814e-05, 3.0221999999999888e-05, 2.9763999999998098e-05, 3.0152999999998042e-05, 3.0347000000000013e-05, 2.9930000000000928e-05, 3.0125000000002372e-05, 2.9777999999997667e-05, 3.0458000000000568e-05, 2.9707999999999818e-05, 3.0070000000000097e-05, 2.9917000000000832e-05, 2.9569999999999597e-05, 3.0070000000000097e-05, 2.9513999999997848e-05, 2.9625000000001872e-05, 2.9763999999998098e-05, 2.9792000000000707e-05, 3.0347000000000013e-05, 3.0013999999998348e-05, 3.0028000000001387e-05, 3.0263999999998598e-05, 2.9485999999998708e-05, 3.0264000000002067e-05, 2.9763000000002093e-05, 2.9889000000001692e-05, 3.038799999999925e-05, 2.9721999999999388e-05, 2.9846999999999513e-05, 2.9832999999999943e-05, 2.9916000000001358e-05, 2.9847000000002982e-05, 2.9832999999999943e-05, 2.9625000000001872e-05, 3.0347000000000013e-05]</msg>
<status status="PASS" starttime="20201030 16:03:45.028" endtime="20201030 16:03:45.030"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.024" endtime="20201030 16:03:45.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:45.034" endtime="20201030 16:03:45.054"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.033" endtime="20201030 16:03:45.054"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.032" endtime="20201030 16:03:45.055"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.675" endtime="20201030 16:03:45.055"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:44.674" endtime="20201030 16:03:45.055"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.064" endtime="20201030 16:03:45.080"></status>
</kw>
<msg timestamp="20201030 16:03:45.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:45.062" endtime="20201030 16:03:45.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:45.082" endtime="20201030 16:03:45.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.084" endtime="20201030 16:03:45.086"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.060" endtime="20201030 16:03:45.086"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.058" endtime="20201030 16:03:45.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.093" endtime="20201030 16:03:45.400"></status>
</kw>
<msg timestamp="20201030 16:03:45.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:45.091" endtime="20201030 16:03:45.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:45.410" endtime="20201030 16:03:45.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.423" endtime="20201030 16:03:45.425"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.089" endtime="20201030 16:03:45.426"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.087" endtime="20201030 16:03:45.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:45.430" level="INFO">${RESULT} = [{'diff': 3.122199999999742e-05}, {'diff': 3.102799999999892e-05}, {'diff': 3.123600000000046e-05}, {'diff': 3.098600000000021e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.068099999999768e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:45.427" endtime="20201030 16:03:45.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:45.434" level="INFO">${ACCURACY} = {'diff': [3.122199999999742e-05, 3.102799999999892e-05, 3.123600000000046e-05, 3.098600000000021e-05, 3.06249999999994e-05, 3.068099999999768e-05, 3.141699999999886e-05, 3.084700000000051e-05, 3.09860...</msg>
<status status="PASS" starttime="20201030 16:03:45.431" endtime="20201030 16:03:45.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.439" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 16:03:45.438" endtime="20201030 16:03:45.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.441" level="INFO">VALUE: [3.122199999999742e-05, 3.102799999999892e-05, 3.123600000000046e-05, 3.098600000000021e-05, 3.06249999999994e-05, 3.068099999999768e-05, 3.141699999999886e-05, 3.084700000000051e-05, 3.098600000000021e-05, 3.119399999999828e-05, 3.0790999999998764e-05, 3.069400000000125e-05, 3.1332999999997974e-05, 3.101399999999935e-05, 3.059700000000026e-05, 3.111100000000033e-05, 3.08050000000018e-05, 3.059700000000026e-05, 3.0499999999999278e-05, 3.101399999999935e-05, 3.142999999999896e-05, 3.06249999999994e-05, 3.066599999999864e-05, 3.105600000000153e-05, 3.119399999999828e-05, 3.059700000000026e-05, 3.1332999999997974e-05, 3.1362000000000056e-05, 3.0568999999997654e-05, 3.07639999999991e-05, 3.143099999999843e-05, 3.123600000000046e-05, 3.061099999999983e-05, 3.052800000000189e-05, 3.082000000000085e-05, 3.098699999999968e-05, 3.1263000000000124e-05, 3.06249999999994e-05, 3.119400000000175e-05, 3.1082999999997724e-05, 3.120800000000132e-05, 3.127700000000316e-05, 3.0804999999998334e-05, 3.0513999999998848e-05, 3.11249999999999e-05, 3.099999999999978e-05, 3.1054999999998584e-05, 3.077800000000214e-05, 3.119399999999828e-05, 3.101399999999935e-05]</msg>
<status status="PASS" starttime="20201030 16:03:45.440" endtime="20201030 16:03:45.443"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.435" endtime="20201030 16:03:45.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:45.448" endtime="20201030 16:03:45.467"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.446" endtime="20201030 16:03:45.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.445" endtime="20201030 16:03:45.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.056" endtime="20201030 16:03:45.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.055" endtime="20201030 16:03:45.468"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.477" endtime="20201030 16:03:45.493"></status>
</kw>
<msg timestamp="20201030 16:03:45.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:45.476" endtime="20201030 16:03:45.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:45.495" endtime="20201030 16:03:45.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.498" endtime="20201030 16:03:45.499"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.473" endtime="20201030 16:03:45.500"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.471" endtime="20201030 16:03:45.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.507" endtime="20201030 16:03:45.793"></status>
</kw>
<msg timestamp="20201030 16:03:45.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:45.505" endtime="20201030 16:03:45.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:45.797" endtime="20201030 16:03:45.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.806" endtime="20201030 16:03:45.807"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.503" endtime="20201030 16:03:45.808"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.501" endtime="20201030 16:03:45.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:45.812" level="INFO">${RESULT} = [{'diff': 3.234799999999802e-05}, {'diff': 3.223699999999746e-05}, {'diff': 3.187500000000065e-05}, {'diff': 3.222300000000136e-05}, {'diff': 3.227800000000017e-05}, {'diff': 3.243099999999943e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:45.809" endtime="20201030 16:03:45.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:45.818" level="INFO">${ACCURACY} = {'diff': [3.234799999999802e-05, 3.223699999999746e-05, 3.187500000000065e-05, 3.222300000000136e-05, 3.227800000000017e-05, 3.243099999999943e-05, 3.237500000000115e-05, 3.2332999999998974e-05, 3.169...</msg>
<status status="PASS" starttime="20201030 16:03:45.813" endtime="20201030 16:03:45.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.822" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 16:03:45.821" endtime="20201030 16:03:45.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.825" level="INFO">VALUE: [3.234799999999802e-05, 3.223699999999746e-05, 3.187500000000065e-05, 3.222300000000136e-05, 3.227800000000017e-05, 3.243099999999943e-05, 3.237500000000115e-05, 3.2332999999998974e-05, 3.169399999999878e-05, 3.186100000000108e-05, 3.1832999999998474e-05, 3.188900000000022e-05, 3.2318999999999404e-05, 3.186100000000108e-05, 3.186100000000108e-05, 3.241699999999986e-05, 3.186100000000108e-05, 3.2332999999998974e-05, 3.238900000000072e-05, 3.204199999999949e-05, 3.188900000000022e-05, 3.191699999999936e-05, 3.150000000000028e-05, 3.1832999999998474e-05, 3.173599999999749e-05, 3.2444999999999e-05, 3.218099999999918e-05, 3.229199999999974e-05, 3.220899999999832e-05, 3.204199999999949e-05, 3.166699999999911e-05, 3.17640000000001e-05, 3.198600000000121e-05, 3.240300000000029e-05, 3.20839999999982e-05, 3.208300000000219e-05, 3.215300000000004e-05, 3.232000000000235e-05, 3.167999999999921e-05, 3.245800000000257e-05, 3.2346999999998544e-05, 3.1554999999999084e-05, 3.238900000000072e-05, 3.1790999999999764e-05, 3.24310000000029e-05, 3.2304999999999834e-05, 3.197199999999817e-05, 3.1540999999999514e-05, 3.173600000000096e-05, 3.218099999999918e-05]</msg>
<status status="PASS" starttime="20201030 16:03:45.823" endtime="20201030 16:03:45.825"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.819" endtime="20201030 16:03:45.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:45.830" endtime="20201030 16:03:45.850"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.828" endtime="20201030 16:03:45.851"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.827" endtime="20201030 16:03:45.852"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.469" endtime="20201030 16:03:45.852"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.469" endtime="20201030 16:03:45.853"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.866" endtime="20201030 16:03:45.883"></status>
</kw>
<msg timestamp="20201030 16:03:45.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:45.864" endtime="20201030 16:03:45.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:45.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:45.884" endtime="20201030 16:03:45.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.887" endtime="20201030 16:03:45.889"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.859" endtime="20201030 16:03:45.889"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.856" endtime="20201030 16:03:45.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:45.896" endtime="20201030 16:03:46.184"></status>
</kw>
<msg timestamp="20201030 16:03:46.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026727639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026760278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:45.895" endtime="20201030 16:03:46.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026727639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026760278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:46.188" endtime="20201030 16:03:46.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.197" endtime="20201030 16:03:46.198"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.892" endtime="20201030 16:03:46.199"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.890" endtime="20201030 16:03:46.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:46.203" level="INFO">${RESULT} = [{'diff': 3.26389999999975e-05}, {'diff': 3.275000000000153e-05}, {'diff': 3.2874999999998183e-05}, {'diff': 3.315299999999757e-05}, {'diff': 3.268099999999968e-05}, {'diff': 3.3276999999998225e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:46.200" endtime="20201030 16:03:46.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:46.208" level="INFO">${ACCURACY} = {'diff': [3.26389999999975e-05, 3.275000000000153e-05, 3.2874999999998183e-05, 3.315299999999757e-05, 3.268099999999968e-05, 3.3276999999998225e-05, 3.311100000000233e-05, 3.2846999999999044e-05, 3.31...</msg>
<status status="PASS" starttime="20201030 16:03:46.204" endtime="20201030 16:03:46.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.212" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 16:03:46.211" endtime="20201030 16:03:46.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.215" level="INFO">VALUE: [3.26389999999975e-05, 3.275000000000153e-05, 3.2874999999998183e-05, 3.315299999999757e-05, 3.268099999999968e-05, 3.3276999999998225e-05, 3.311100000000233e-05, 3.2846999999999044e-05, 3.313900000000147e-05, 3.340199999999835e-05, 3.320799999999985e-05, 3.344400000000053e-05, 3.322199999999942e-05, 3.2568999999999654e-05, 3.336100000000258e-05, 3.3082999999999724e-05, 3.32640000000016e-05, 3.302800000000092e-05, 3.323599999999899e-05, 3.280599999999981e-05, 3.265300000000054e-05, 3.311200000000181e-05, 3.276399999999763e-05, 3.250000000000128e-05, 3.295899999999907e-05, 3.299999999999831e-05, 3.333399999999945e-05, 3.298599999999874e-05, 3.305600000000006e-05, 3.273600000000196e-05, 3.2804999999996864e-05, 3.309800000000224e-05, 3.3124999999998433e-05, 3.322300000000236e-05, 3.277800000000067e-05, 3.331999999999988e-05, 3.26250000000014e-05, 3.3096999999999294e-05, 3.2791000000000764e-05, 3.3013000000001874e-05, 3.255599999999956e-05, 3.298599999999874e-05, 3.290300000000079e-05, 3.347199999999967e-05, 3.316600000000114e-05, 3.268000000000021e-05, 3.3319000000000404e-05, 3.252800000000042e-05, 3.315300000000104e-05, 3.2846999999999044e-05]</msg>
<status status="PASS" starttime="20201030 16:03:46.213" endtime="20201030 16:03:46.216"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.209" endtime="20201030 16:03:46.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:46.220" endtime="20201030 16:03:46.240"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.219" endtime="20201030 16:03:46.240"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.217" endtime="20201030 16:03:46.240"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.854" endtime="20201030 16:03:46.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:45.853" endtime="20201030 16:03:46.241"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.250" endtime="20201030 16:03:46.268"></status>
</kw>
<msg timestamp="20201030 16:03:46.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:46.248" endtime="20201030 16:03:46.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:46.269" endtime="20201030 16:03:46.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.272" endtime="20201030 16:03:46.273"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.246" endtime="20201030 16:03:46.274"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.243" endtime="20201030 16:03:46.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.281" endtime="20201030 16:03:46.568"></status>
</kw>
<msg timestamp="20201030 16:03:46.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:46.279" endtime="20201030 16:03:46.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021581264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:46.572" endtime="20201030 16:03:46.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.581" endtime="20201030 16:03:46.582"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.277" endtime="20201030 16:03:46.583"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.275" endtime="20201030 16:03:46.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:46.587" level="INFO">${RESULT} = [{'diff': 3.369500000000025e-05}, {'diff': 3.426399999999913e-05}, {'diff': 3.3791000000001764e-05}, {'diff': 3.390299999999832e-05}, {'diff': 3.401400000000235e-05}, {'diff': 3.382000000000038e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:46.584" endtime="20201030 16:03:46.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:46.592" level="INFO">${ACCURACY} = {'diff': [3.369500000000025e-05, 3.426399999999913e-05, 3.3791000000001764e-05, 3.390299999999832e-05, 3.401400000000235e-05, 3.382000000000038e-05, 3.401400000000235e-05, 3.423599999999999e-05, 3.386...</msg>
<status status="PASS" starttime="20201030 16:03:46.589" endtime="20201030 16:03:46.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.596" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 16:03:46.595" endtime="20201030 16:03:46.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.599" level="INFO">VALUE: [3.369500000000025e-05, 3.426399999999913e-05, 3.3791000000001764e-05, 3.390299999999832e-05, 3.401400000000235e-05, 3.382000000000038e-05, 3.401400000000235e-05, 3.423599999999999e-05, 3.386200000000256e-05, 3.395900000000007e-05, 3.44580000000011e-05, 3.4304999999998365e-05, 3.419399999999781e-05, 3.351399999999838e-05, 3.3860999999999614e-05, 3.404200000000149e-05, 3.390299999999832e-05, 3.398599999999974e-05, 3.369500000000025e-05, 3.392999999999799e-05, 3.380600000000081e-05, 3.365299999999807e-05, 3.373600000000296e-05, 3.44580000000011e-05, 3.4319000000001404e-05, 3.416700000000161e-05, 3.4138999999999003e-05, 3.390299999999832e-05, 3.447200000000067e-05, 3.4445000000001e-05, 3.351400000000185e-05, 3.405599999999759e-05, 3.413799999999953e-05, 3.357000000000013e-05, 3.430600000000131e-05, 3.397299999999964e-05, 3.42779999999987e-05, 3.372199999999992e-05, 3.419400000000128e-05, 3.3791000000001764e-05, 3.4012999999999405e-05, 3.369400000000078e-05, 3.3804999999997865e-05, 3.351399999999838e-05, 3.374999999999906e-05, 3.440300000000229e-05, 3.4361000000000114e-05, 3.375000000000253e-05, 3.391600000000189e-05, 3.442999999999849e-05]</msg>
<status status="PASS" starttime="20201030 16:03:46.597" endtime="20201030 16:03:46.601"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.593" endtime="20201030 16:03:46.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:46.605" endtime="20201030 16:03:46.625"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.603" endtime="20201030 16:03:46.625"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.602" endtime="20201030 16:03:46.626"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.242" endtime="20201030 16:03:46.627"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.241" endtime="20201030 16:03:46.627"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.638" endtime="20201030 16:03:46.654"></status>
</kw>
<msg timestamp="20201030 16:03:46.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:46.636" endtime="20201030 16:03:46.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:46.656" endtime="20201030 16:03:46.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.659" endtime="20201030 16:03:46.660"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.633" endtime="20201030 16:03:46.661"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.631" endtime="20201030 16:03:46.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.669" endtime="20201030 16:03:46.955"></status>
</kw>
<msg timestamp="20201030 16:03:46.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02306975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023104917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:46.667" endtime="20201030 16:03:46.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02306975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023104917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:46.960" endtime="20201030 16:03:46.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:46.968" endtime="20201030 16:03:46.970"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.664" endtime="20201030 16:03:46.971"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.662" endtime="20201030 16:03:46.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:46.975" level="INFO">${RESULT} = [{'diff': 3.5166999999999143e-05}, {'diff': 3.500000000000031e-05}, {'diff': 3.494499999999803e-05}, {'diff': 3.494399999999856e-05}, {'diff': 3.498600000000074e-05}, {'diff': 3.5333000000001974e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:46.972" endtime="20201030 16:03:46.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:46.980" level="INFO">${ACCURACY} = {'diff': [3.5166999999999143e-05, 3.500000000000031e-05, 3.494499999999803e-05, 3.494399999999856e-05, 3.498600000000074e-05, 3.5333000000001974e-05, 3.5402999999999823e-05, 3.5054999999999115e-05, 3....</msg>
<status status="PASS" starttime="20201030 16:03:46.976" endtime="20201030 16:03:46.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.985" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 16:03:46.984" endtime="20201030 16:03:46.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:46.988" level="INFO">VALUE: [3.5166999999999143e-05, 3.500000000000031e-05, 3.494499999999803e-05, 3.494399999999856e-05, 3.498600000000074e-05, 3.5333000000001974e-05, 3.5402999999999823e-05, 3.5054999999999115e-05, 3.529199999999927e-05, 3.517999999999924e-05, 3.476399999999963e-05, 3.467999999999874e-05, 3.494400000000203e-05, 3.4833000000001474e-05, 3.472200000000092e-05, 3.5389000000000254e-05, 3.5389000000000254e-05, 3.4638999999999504e-05, 3.449999999999981e-05, 3.545799999999863e-05, 3.479200000000224e-05, 3.504199999999902e-05, 3.4861000000000614e-05, 3.515300000000304e-05, 3.47779999999992e-05, 3.4902999999999323e-05, 3.530599999999884e-05, 3.552799999999995e-05, 3.545900000000157e-05, 3.4790999999999295e-05, 3.473600000000049e-05, 3.505600000000206e-05, 3.520900000000132e-05, 3.50979999999973e-05, 3.505599999999859e-05, 3.4846999999997574e-05, 3.5374999999997214e-05, 3.4902999999999323e-05, 3.5347000000001544e-05, 3.4846999999997574e-05, 3.5332999999998504e-05, 3.5290999999999795e-05, 3.49580000000016e-05, 3.502799999999945e-05, 3.542999999999949e-05, 3.52779999999997e-05, 3.455600000000156e-05, 3.519400000000228e-05, 3.4819000000001904e-05, 3.520799999999838e-05]</msg>
<status status="PASS" starttime="20201030 16:03:46.986" endtime="20201030 16:03:46.988"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.981" endtime="20201030 16:03:46.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:46.993" endtime="20201030 16:03:47.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.991" endtime="20201030 16:03:47.013"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.990" endtime="20201030 16:03:47.013"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.629" endtime="20201030 16:03:47.014"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:46.628" endtime="20201030 16:03:47.014"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.023" endtime="20201030 16:03:47.039"></status>
</kw>
<msg timestamp="20201030 16:03:47.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:47.021" endtime="20201030 16:03:47.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:47.040" endtime="20201030 16:03:47.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.043" endtime="20201030 16:03:47.045"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.019" endtime="20201030 16:03:47.045"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.016" endtime="20201030 16:03:47.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.053" endtime="20201030 16:03:47.341"></status>
</kw>
<msg timestamp="20201030 16:03:47.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025975, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:47.051" endtime="20201030 16:03:47.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02025975, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:47.345" endtime="20201030 16:03:47.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.354" endtime="20201030 16:03:47.356"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.049" endtime="20201030 16:03:47.356"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.046" endtime="20201030 16:03:47.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:47.361" level="INFO">${RESULT} = [{'diff': 3.625000000000156e-05}, {'diff': 3.597200000000217e-05}, {'diff': 3.573600000000149e-05}, {'diff': 3.633399999999898e-05}, {'diff': 3.5861000000001614e-05}, {'diff': 3.598600000000174e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:47.357" endtime="20201030 16:03:47.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:47.365" level="INFO">${ACCURACY} = {'diff': [3.625000000000156e-05, 3.597200000000217e-05, 3.573600000000149e-05, 3.633399999999898e-05, 3.5861000000001614e-05, 3.598600000000174e-05, 3.644499999999953e-05, 3.552799999999995e-05, 3.586...</msg>
<status status="PASS" starttime="20201030 16:03:47.362" endtime="20201030 16:03:47.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.370" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 16:03:47.369" endtime="20201030 16:03:47.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.372" level="INFO">VALUE: [3.625000000000156e-05, 3.597200000000217e-05, 3.573600000000149e-05, 3.633399999999898e-05, 3.5861000000001614e-05, 3.598600000000174e-05, 3.644499999999953e-05, 3.552799999999995e-05, 3.5861000000001614e-05, 3.604200000000002e-05, 3.584799999999805e-05, 3.645799999999963e-05, 3.626399999999766e-05, 3.6305000000000365e-05, 3.5818999999999435e-05, 3.6360999999998644e-05, 3.622200000000242e-05, 3.573600000000149e-05, 3.566600000000017e-05, 3.5777000000000725e-05, 3.6097000000002294e-05, 3.6332999999999505e-05, 3.5903000000000324e-05, 3.5818999999999435e-05, 3.647200000000267e-05, 3.6430999999999963e-05, 3.5888999999997284e-05, 3.5666999999999643e-05, 3.598599999999827e-05, 3.64589999999991e-05, 3.551400000000038e-05, 3.599999999999784e-05, 3.57780000000002e-05, 3.5903000000000324e-05, 3.5916999999999893e-05, 3.633399999999898e-05, 3.597299999999817e-05, 3.64589999999991e-05, 3.572300000000139e-05, 3.57780000000002e-05, 3.634799999999855e-05, 3.5874999999997714e-05, 3.616600000000067e-05, 3.573599999999802e-05, 3.6153000000000574e-05, 3.6277000000001225e-05, 3.5889000000000754e-05, 3.62780000000007e-05, 3.576399999999716e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201030 16:03:47.371" endtime="20201030 16:03:47.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.366" endtime="20201030 16:03:47.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:47.377" endtime="20201030 16:03:47.397"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.376" endtime="20201030 16:03:47.398"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.375" endtime="20201030 16:03:47.398"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.015" endtime="20201030 16:03:47.398"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.014" endtime="20201030 16:03:47.399"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.408" endtime="20201030 16:03:47.425"></status>
</kw>
<msg timestamp="20201030 16:03:47.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:47.407" endtime="20201030 16:03:47.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:47.427" endtime="20201030 16:03:47.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.429" endtime="20201030 16:03:47.431"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.404" endtime="20201030 16:03:47.431"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.401" endtime="20201030 16:03:47.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.439" endtime="20201030 16:03:47.725"></status>
</kw>
<msg timestamp="20201030 16:03:47.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:47.437" endtime="20201030 16:03:47.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:47.729" endtime="20201030 16:03:47.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.738" endtime="20201030 16:03:47.739"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.434" endtime="20201030 16:03:47.740"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.433" endtime="20201030 16:03:47.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:47.744" level="INFO">${RESULT} = [{'diff': 3.725000000000256e-05}, {'diff': 3.672199999999945e-05}, {'diff': 3.7277000000002225e-05}, {'diff': 3.67780000000012e-05}, {'diff': 3.6638999999998034e-05}, {'diff': 3.747299999999967e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:47.741" endtime="20201030 16:03:47.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:47.749" level="INFO">${ACCURACY} = {'diff': [3.725000000000256e-05, 3.672199999999945e-05, 3.7277000000002225e-05, 3.67780000000012e-05, 3.6638999999998034e-05, 3.747299999999967e-05, 3.695900000000307e-05, 3.6610999999998894e-05, 3.68...</msg>
<status status="PASS" starttime="20201030 16:03:47.745" endtime="20201030 16:03:47.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.753" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 16:03:47.752" endtime="20201030 16:03:47.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.756" level="INFO">VALUE: [3.725000000000256e-05, 3.672199999999945e-05, 3.7277000000002225e-05, 3.67780000000012e-05, 3.6638999999998034e-05, 3.747299999999967e-05, 3.695900000000307e-05, 3.6610999999998894e-05, 3.684799999999905e-05, 3.7360999999999644e-05, 3.655600000000009e-05, 3.673599999999902e-05, 3.663800000000203e-05, 3.6527000000001475e-05, 3.668000000000074e-05, 3.723600000000299e-05, 3.7375000000002684e-05, 3.652799999999748e-05, 3.7389000000002254e-05, 3.6555000000000615e-05, 3.704199999999755e-05, 3.7305000000001365e-05, 3.7124999999998964e-05, 3.6639000000001504e-05, 3.698599999999927e-05, 3.724999999999909e-05, 3.74590000000001e-05, 3.6930999999996994e-05, 3.657000000000313e-05, 3.7167000000001144e-05, 3.656999999999966e-05, 3.720899999999985e-05, 3.7152999999998104e-05, 3.7181000000000713e-05, 3.6667000000000644e-05, 3.698599999999927e-05, 3.7138999999998534e-05, 3.7096999999999825e-05, 3.673600000000249e-05, 3.6582999999999755e-05, 3.726399999999866e-05, 3.741600000000192e-05, 3.6569000000000185e-05, 3.7110999999999394e-05, 3.7333000000000505e-05, 3.6569000000000185e-05, 3.743000000000149e-05, 3.7139000000002004e-05, 3.7153000000001574e-05, 3.7360999999999644e-05]</msg>
<status status="PASS" starttime="20201030 16:03:47.754" endtime="20201030 16:03:47.758"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.750" endtime="20201030 16:03:47.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:47.762" endtime="20201030 16:03:47.781"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.760" endtime="20201030 16:03:47.782"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.759" endtime="20201030 16:03:47.782"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.400" endtime="20201030 16:03:47.783"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.399" endtime="20201030 16:03:47.783"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.792" endtime="20201030 16:03:47.809"></status>
</kw>
<msg timestamp="20201030 16:03:47.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:47.790" endtime="20201030 16:03:47.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:47.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:47.810" endtime="20201030 16:03:47.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.813" endtime="20201030 16:03:47.814"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.788" endtime="20201030 16:03:47.815"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.785" endtime="20201030 16:03:47.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:47.822" endtime="20201030 16:03:48.109"></status>
</kw>
<msg timestamp="20201030 16:03:48.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:47.820" endtime="20201030 16:03:48.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:48.113" endtime="20201030 16:03:48.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.122" endtime="20201030 16:03:48.123"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.818" endtime="20201030 16:03:48.124"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.816" endtime="20201030 16:03:48.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:48.129" level="INFO">${RESULT} = [{'diff': 3.8181000000001714e-05}, {'diff': 3.79590000000006e-05}, {'diff': 3.797300000000017e-05}, {'diff': 3.802800000000245e-05}, {'diff': 3.819399999999834e-05}, {'diff': 3.8416999999998924e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:48.125" endtime="20201030 16:03:48.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:48.134" level="INFO">${ACCURACY} = {'diff': [3.8181000000001714e-05, 3.79590000000006e-05, 3.797300000000017e-05, 3.802800000000245e-05, 3.819399999999834e-05, 3.8416999999998924e-05, 3.827799999999923e-05, 3.8304999999998895e-05, 3.82...</msg>
<status status="PASS" starttime="20201030 16:03:48.130" endtime="20201030 16:03:48.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.138" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 16:03:48.137" endtime="20201030 16:03:48.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.141" level="INFO">VALUE: [3.8181000000001714e-05, 3.79590000000006e-05, 3.797300000000017e-05, 3.802800000000245e-05, 3.819399999999834e-05, 3.8416999999998924e-05, 3.827799999999923e-05, 3.8304999999998895e-05, 3.82919999999988e-05, 3.84720000000012e-05, 3.8332999999998035e-05, 3.8375000000000214e-05, 3.81659999999992e-05, 3.7597000000000325e-05, 3.845800000000163e-05, 3.7888999999999284e-05, 3.7610999999999895e-05, 3.8124999999999964e-05, 3.822200000000095e-05, 3.845800000000163e-05, 3.8346999999997605e-05, 3.751399999999891e-05, 3.7902999999998854e-05, 3.8360999999997175e-05, 3.77919999999983e-05, 3.802800000000245e-05, 3.8180999999998244e-05, 3.80980000000003e-05, 3.770900000000035e-05, 3.751399999999891e-05, 3.74590000000001e-05, 3.8139000000003004e-05, 3.782000000000091e-05, 3.769400000000131e-05, 3.747299999999967e-05, 3.791599999999895e-05, 3.779200000000177e-05, 3.7568999999997715e-05, 3.801399999999941e-05, 3.748599999999977e-05, 3.7888999999999284e-05, 3.804200000000202e-05, 3.793000000000199e-05, 3.77919999999983e-05, 3.8388999999999784e-05, 3.798600000000027e-05, 3.8055000000002115e-05, 3.77780000000022e-05, 3.772200000000045e-05, 3.815199999999963e-05]</msg>
<status status="PASS" starttime="20201030 16:03:48.139" endtime="20201030 16:03:48.142"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.135" endtime="20201030 16:03:48.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:48.146" endtime="20201030 16:03:48.166"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.145" endtime="20201030 16:03:48.166"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.143" endtime="20201030 16:03:48.167"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.784" endtime="20201030 16:03:48.167"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:47.783" endtime="20201030 16:03:48.167"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.176" endtime="20201030 16:03:48.193"></status>
</kw>
<msg timestamp="20201030 16:03:48.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:48.174" endtime="20201030 16:03:48.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:48.195" endtime="20201030 16:03:48.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.197" endtime="20201030 16:03:48.199"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.172" endtime="20201030 16:03:48.200"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.170" endtime="20201030 16:03:48.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.207" endtime="20201030 16:03:48.496"></status>
</kw>
<msg timestamp="20201030 16:03:48.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020797972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020836625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:48.205" endtime="20201030 16:03:48.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020797972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020836625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:48.500" endtime="20201030 16:03:48.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.509" endtime="20201030 16:03:48.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.202" endtime="20201030 16:03:48.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.201" endtime="20201030 16:03:48.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:48.516" level="INFO">${RESULT} = [{'diff': 3.8652999999999604e-05}, {'diff': 3.8916999999999424e-05}, {'diff': 3.902799999999998e-05}, {'diff': 3.8916999999999424e-05}, {'diff': 3.901400000000041e-05}, {'diff': 3.9333000000002505e-05...</msg>
<status status="PASS" starttime="20201030 16:03:48.512" endtime="20201030 16:03:48.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:48.520" level="INFO">${ACCURACY} = {'diff': [3.8652999999999604e-05, 3.8916999999999424e-05, 3.902799999999998e-05, 3.8916999999999424e-05, 3.901400000000041e-05, 3.9333000000002505e-05, 3.9209000000001853e-05, 3.873600000000102e-05, 3...</msg>
<status status="PASS" starttime="20201030 16:03:48.517" endtime="20201030 16:03:48.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.524" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 16:03:48.523" endtime="20201030 16:03:48.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.527" level="INFO">VALUE: [3.8652999999999604e-05, 3.8916999999999424e-05, 3.902799999999998e-05, 3.8916999999999424e-05, 3.901400000000041e-05, 3.9333000000002505e-05, 3.9209000000001853e-05, 3.873600000000102e-05, 3.908399999999826e-05, 3.8916999999999424e-05, 3.925000000000109e-05, 3.873700000000049e-05, 3.9082999999998785e-05, 3.8777000000000256e-05, 3.876399999999669e-05, 3.8790999999999826e-05, 3.8777000000000256e-05, 3.926400000000066e-05, 3.877799999999973e-05, 3.902799999999998e-05, 3.9069000000002685e-05, 3.895800000000213e-05, 3.897199999999823e-05, 3.902799999999998e-05, 3.880599999999887e-05, 3.9332999999999035e-05, 3.8875000000000715e-05, 3.850000000000034e-05, 3.902799999999998e-05, 3.92919999999998e-05, 3.852800000000295e-05, 3.899999999999737e-05, 3.848600000000077e-05, 3.8959000000001603e-05, 3.913800000000106e-05, 3.8832999999998535e-05, 3.8652999999999604e-05, 3.898600000000127e-05, 3.944399999999959e-05, 3.854199999999905e-05, 3.944399999999959e-05, 3.913800000000106e-05, 3.9082999999998785e-05, 3.920800000000238e-05, 3.944399999999959e-05, 3.884799999999758e-05, 3.891599999999995e-05, 3.873600000000102e-05, 3.8916999999999424e-05, 3.898600000000127e-05]</msg>
<status status="PASS" starttime="20201030 16:03:48.526" endtime="20201030 16:03:48.533"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.521" endtime="20201030 16:03:48.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:48.537" endtime="20201030 16:03:48.557"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.536" endtime="20201030 16:03:48.557"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.534" endtime="20201030 16:03:48.558"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.168" endtime="20201030 16:03:48.558"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.168" endtime="20201030 16:03:48.558"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.567" endtime="20201030 16:03:48.584"></status>
</kw>
<msg timestamp="20201030 16:03:48.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:48.566" endtime="20201030 16:03:48.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:48.586" endtime="20201030 16:03:48.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.588" endtime="20201030 16:03:48.590"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.563" endtime="20201030 16:03:48.590"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.561" endtime="20201030 16:03:48.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.598" endtime="20201030 16:03:48.884"></status>
</kw>
<msg timestamp="20201030 16:03:48.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021185681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021225611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:48.596" endtime="20201030 16:03:48.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021185681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021225611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:48.889" endtime="20201030 16:03:48.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.897" endtime="20201030 16:03:48.899"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.593" endtime="20201030 16:03:48.899"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.591" endtime="20201030 16:03:48.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:48.904" level="INFO">${RESULT} = [{'diff': 3.992999999999705e-05}, {'diff': 4.0318999999996996e-05}, {'diff': 4.023600000000252e-05}, {'diff': 4.0333000000000035e-05}, {'diff': 3.9875000000001715e-05}, {'diff': 4.0125000000001965e-05...</msg>
<status status="PASS" starttime="20201030 16:03:48.900" endtime="20201030 16:03:48.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:48.908" level="INFO">${ACCURACY} = {'diff': [3.992999999999705e-05, 4.0318999999996996e-05, 4.023600000000252e-05, 4.0333000000000035e-05, 3.9875000000001715e-05, 4.0125000000001965e-05, 4.023599999999905e-05, 4.0445000000000064e-05, 3...</msg>
<status status="PASS" starttime="20201030 16:03:48.905" endtime="20201030 16:03:48.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.913" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 16:03:48.911" endtime="20201030 16:03:48.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.915" level="INFO">VALUE: [3.992999999999705e-05, 4.0318999999996996e-05, 4.023600000000252e-05, 4.0333000000000035e-05, 3.9875000000001715e-05, 4.0125000000001965e-05, 4.023599999999905e-05, 4.0445000000000064e-05, 3.9832999999999535e-05, 4.0403000000001354e-05, 3.951400000000091e-05, 4.0111000000002395e-05, 3.9680999999999744e-05, 4.0458999999999634e-05, 4.0458999999999634e-05, 4.001400000000141e-05, 3.97920000000003e-05, 4.0082999999999785e-05, 3.950000000000134e-05, 4.015199999999816e-05, 3.968000000000027e-05, 3.9917000000000424e-05, 4.0082999999999785e-05, 4.045800000000016e-05, 4.001400000000141e-05, 4.0054999999997176e-05, 3.973599999999855e-05, 3.9917000000000424e-05, 3.9568999999999716e-05, 4.020799999999991e-05, 3.97920000000003e-05, 4.020799999999991e-05, 4.002800000000098e-05, 4.025000000000209e-05, 3.9917000000000424e-05, 3.951400000000091e-05, 3.981999999999944e-05, 3.9972999999998704e-05, 4.02920000000008e-05, 4.049999999999887e-05, 3.958400000000223e-05, 3.9861000000002145e-05, 4.020799999999991e-05, 3.9653000000000604e-05, 4.0027000000001506e-05, 4.0068999999996746e-05, 3.975000000000159e-05, 4.0319000000000466e-05, 3.950000000000134e-05, 4.0124999999998495e-05]</msg>
<status status="PASS" starttime="20201030 16:03:48.914" endtime="20201030 16:03:48.917"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.909" endtime="20201030 16:03:48.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:48.921" endtime="20201030 16:03:48.941"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.920" endtime="20201030 16:03:48.941"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.919" endtime="20201030 16:03:48.942"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.559" endtime="20201030 16:03:48.942"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.559" endtime="20201030 16:03:48.942"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.951" endtime="20201030 16:03:48.968"></status>
</kw>
<msg timestamp="20201030 16:03:48.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:48.950" endtime="20201030 16:03:48.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:48.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:48.970" endtime="20201030 16:03:48.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.972" endtime="20201030 16:03:48.974"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.947" endtime="20201030 16:03:48.974"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.945" endtime="20201030 16:03:48.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:48.981" endtime="20201030 16:03:49.267"></status>
</kw>
<msg timestamp="20201030 16:03:49.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020888958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:48.980" endtime="20201030 16:03:49.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020848319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020888958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:49.272" endtime="20201030 16:03:49.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.280" endtime="20201030 16:03:49.282"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.977" endtime="20201030 16:03:49.282"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.975" endtime="20201030 16:03:49.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:49.287" level="INFO">${RESULT} = [{'diff': 4.0638999999998565e-05}, {'diff': 4.075000000000259e-05}, {'diff': 4.069400000000084e-05}, {'diff': 4.127799999999876e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.0847000000000105e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:49.284" endtime="20201030 16:03:49.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:49.292" level="INFO">${ACCURACY} = {'diff': [4.0638999999998565e-05, 4.075000000000259e-05, 4.069400000000084e-05, 4.127799999999876e-05, 4.1124999999999495e-05, 4.0847000000000105e-05, 4.098600000000327e-05, 4.1110999999999925e-05, 4....</msg>
<status status="PASS" starttime="20201030 16:03:49.288" endtime="20201030 16:03:49.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.297" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 16:03:49.296" endtime="20201030 16:03:49.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.299" level="INFO">VALUE: [4.0638999999998565e-05, 4.075000000000259e-05, 4.069400000000084e-05, 4.127799999999876e-05, 4.1124999999999495e-05, 4.0847000000000105e-05, 4.098600000000327e-05, 4.1110999999999925e-05, 4.051399999999844e-05, 4.105600000000112e-05, 4.1374999999999745e-05, 4.0903000000001855e-05, 4.129199999999833e-05, 4.126399999999919e-05, 4.120799999999744e-05, 4.1138999999999065e-05, 4.0903000000001855e-05, 4.109799999999983e-05, 4.134800000000008e-05, 4.129199999999833e-05, 4.1445000000001064e-05, 4.0833000000000536e-05, 4.130600000000137e-05, 4.1110999999999925e-05, 4.091600000000195e-05, 4.1097000000000355e-05, 4.122199999999701e-05, 4.095800000000066e-05, 4.07920000000013e-05, 4.1110999999999925e-05, 4.074999999999912e-05, 4.12920000000018e-05, 4.04859999999993e-05, 4.1068999999997746e-05, 4.1082999999997316e-05, 4.127799999999876e-05, 4.1181000000001244e-05, 4.122199999999701e-05, 4.0889000000002285e-05, 4.127799999999876e-05, 4.0610999999999425e-05, 4.077800000000173e-05, 4.0917000000001424e-05, 4.084799999999958e-05, 4.11660000000022e-05, 4.0681000000000744e-05, 4.076399999999869e-05, 4.1110999999999925e-05, 4.119400000000134e-05, 4.1347000000000605e-05]</msg>
<status status="PASS" starttime="20201030 16:03:49.298" endtime="20201030 16:03:49.300"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.293" endtime="20201030 16:03:49.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:49.305" endtime="20201030 16:03:49.324"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.303" endtime="20201030 16:03:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.302" endtime="20201030 16:03:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.943" endtime="20201030 16:03:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:48.942" endtime="20201030 16:03:49.325"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.334" endtime="20201030 16:03:49.350"></status>
</kw>
<msg timestamp="20201030 16:03:49.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:49.333" endtime="20201030 16:03:49.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:49.351" endtime="20201030 16:03:49.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.354" endtime="20201030 16:03:49.355"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.330" endtime="20201030 16:03:49.356"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.328" endtime="20201030 16:03:49.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.363" endtime="20201030 16:03:49.651"></status>
</kw>
<msg timestamp="20201030 16:03:49.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02007575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:49.361" endtime="20201030 16:03:49.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020033264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02007575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:49.655" endtime="20201030 16:03:49.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.663" endtime="20201030 16:03:49.665"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.359" endtime="20201030 16:03:49.666"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.357" endtime="20201030 16:03:49.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:49.670" level="INFO">${RESULT} = [{'diff': 4.24860000000013e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.1861000000000675e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.2139000000000065e-05}, {'diff': 4.1903000000002855e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:49.667" endtime="20201030 16:03:49.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:49.675" level="INFO">${ACCURACY} = {'diff': [4.24860000000013e-05, 4.179199999999883e-05, 4.1861000000000675e-05, 4.173600000000055e-05, 4.2139000000000065e-05, 4.1903000000002855e-05, 4.1847000000001106e-05, 4.2430999999999025e-05, 4....</msg>
<status status="PASS" starttime="20201030 16:03:49.671" endtime="20201030 16:03:49.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.679" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 16:03:49.678" endtime="20201030 16:03:49.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.682" level="INFO">VALUE: [4.24860000000013e-05, 4.179199999999883e-05, 4.1861000000000675e-05, 4.173600000000055e-05, 4.2139000000000065e-05, 4.1903000000002855e-05, 4.1847000000001106e-05, 4.2430999999999025e-05, 4.1888999999999815e-05, 4.1902999999999385e-05, 4.2402999999999885e-05, 4.180600000000187e-05, 4.2347000000001606e-05, 4.1973000000000704e-05, 4.1737000000000024e-05, 4.2458999999998165e-05, 4.244399999999912e-05, 4.14860000000003e-05, 4.2374999999997276e-05, 4.176399999999969e-05, 4.1847000000001106e-05, 4.169400000000184e-05, 4.151400000000291e-05, 4.2375000000000745e-05, 4.229199999999933e-05, 4.1944999999998095e-05, 4.2097000000001356e-05, 4.1959000000001134e-05, 4.2318999999998996e-05, 4.1597000000000856e-05, 4.205600000000212e-05, 4.183400000000101e-05, 4.1875000000000245e-05, 4.1916999999998955e-05, 4.1875000000000245e-05, 4.209800000000083e-05, 4.22920000000028e-05, 4.2223000000000954e-05, 4.188800000000034e-05, 4.21120000000004e-05, 4.1861000000000675e-05, 4.1832999999998066e-05, 4.2389000000000315e-05, 4.175000000000012e-05, 4.2139000000000065e-05, 4.197199999999776e-05, 4.2180999999998775e-05, 4.195800000000166e-05, 4.1888999999999815e-05, 4.2152999999999635e-05]</msg>
<status status="PASS" starttime="20201030 16:03:49.680" endtime="20201030 16:03:49.683"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.675" endtime="20201030 16:03:49.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:49.687" endtime="20201030 16:03:49.707"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.685" endtime="20201030 16:03:49.707"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.684" endtime="20201030 16:03:49.707"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.326" endtime="20201030 16:03:49.708"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.326" endtime="20201030 16:03:49.708"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.717" endtime="20201030 16:03:49.735"></status>
</kw>
<msg timestamp="20201030 16:03:49.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:49.715" endtime="20201030 16:03:49.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:49.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:49.736" endtime="20201030 16:03:49.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.739" endtime="20201030 16:03:49.740"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.713" endtime="20201030 16:03:49.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.710" endtime="20201030 16:03:49.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:49.748" endtime="20201030 16:03:50.035"></status>
</kw>
<msg timestamp="20201030 16:03:50.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:49.746" endtime="20201030 16:03:50.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:50.040" endtime="20201030 16:03:50.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.048" endtime="20201030 16:03:50.050"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.744" endtime="20201030 16:03:50.050"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.742" endtime="20201030 16:03:50.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:50.055" level="INFO">${RESULT} = [{'diff': 4.2596999999998386e-05}, {'diff': 4.297200000000223e-05}, {'diff': 4.304200000000008e-05}, {'diff': 4.3139000000001065e-05}, {'diff': 4.29999999999979e-05}, {'diff': 4.29860000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:50.052" endtime="20201030 16:03:50.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:50.059" level="INFO">${ACCURACY} = {'diff': [4.2596999999998386e-05, 4.297200000000223e-05, 4.304200000000008e-05, 4.3139000000001065e-05, 4.29999999999979e-05, 4.29860000000018e-05, 4.256999999999872e-05, 4.2458999999998165e-05, 4.286...</msg>
<status status="PASS" starttime="20201030 16:03:50.056" endtime="20201030 16:03:50.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.064" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 16:03:50.063" endtime="20201030 16:03:50.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.066" level="INFO">VALUE: [4.2596999999998386e-05, 4.297200000000223e-05, 4.304200000000008e-05, 4.3139000000001065e-05, 4.29999999999979e-05, 4.29860000000018e-05, 4.256999999999872e-05, 4.2458999999998165e-05, 4.2860999999998206e-05, 4.331999999999947e-05, 4.279199999999983e-05, 4.345799999999969e-05, 4.3291000000000857e-05, 4.3152999999997166e-05, 4.263800000000109e-05, 4.302700000000104e-05, 4.3125000000001495e-05, 4.2860999999998206e-05, 4.277800000000026e-05, 4.2903000000000385e-05, 4.316599999999726e-05, 4.327800000000076e-05, 4.3167000000000205e-05, 4.2624999999997526e-05, 4.329200000000033e-05, 4.270800000000241e-05, 4.269399999999937e-05, 4.3388999999997846e-05, 4.322199999999901e-05, 4.276400000000069e-05, 4.326399999999772e-05, 4.304200000000008e-05, 4.2903000000000385e-05, 4.304099999999714e-05, 4.276400000000069e-05, 4.329200000000033e-05, 4.304200000000008e-05, 4.294399999999962e-05, 4.291600000000048e-05, 4.2874999999997776e-05, 4.345799999999969e-05, 4.340199999999794e-05, 4.2874999999997776e-05, 4.3041000000000607e-05, 4.295799999999919e-05, 4.323600000000205e-05, 4.3318999999999996e-05, 4.3431000000000025e-05, 4.282000000000244e-05, 4.344400000000012e-05]</msg>
<status status="PASS" starttime="20201030 16:03:50.065" endtime="20201030 16:03:50.068"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.060" endtime="20201030 16:03:50.069"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:50.073" endtime="20201030 16:03:50.092"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.071" endtime="20201030 16:03:50.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.070" endtime="20201030 16:03:50.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.709" endtime="20201030 16:03:50.093"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:49.708" endtime="20201030 16:03:50.094"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.103" endtime="20201030 16:03:50.120"></status>
</kw>
<msg timestamp="20201030 16:03:50.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:50.101" endtime="20201030 16:03:50.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:50.121" endtime="20201030 16:03:50.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.124" endtime="20201030 16:03:50.125"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.098" endtime="20201030 16:03:50.126"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.096" endtime="20201030 16:03:50.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.133" endtime="20201030 16:03:50.419"></status>
</kw>
<msg timestamp="20201030 16:03:50.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:50.131" endtime="20201030 16:03:50.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021143097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021187, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:03:50.423" endtime="20201030 16:03:50.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.432" endtime="20201030 16:03:50.434"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.129" endtime="20201030 16:03:50.434"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.127" endtime="20201030 16:03:50.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:50.439" level="INFO">${RESULT} = [{'diff': 4.3903000000001385e-05}, {'diff': 4.422200000000001e-05}, {'diff': 4.41939999999974e-05}, {'diff': 4.427800000000176e-05}, {'diff': 4.429200000000133e-05}, {'diff': 4.3639000000001565e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:50.436" endtime="20201030 16:03:50.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:50.445" level="INFO">${ACCURACY} = {'diff': [4.3903000000001385e-05, 4.422200000000001e-05, 4.41939999999974e-05, 4.427800000000176e-05, 4.429200000000133e-05, 4.3639000000001565e-05, 4.4152999999998166e-05, 4.4374999999999276e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 16:03:50.440" endtime="20201030 16:03:50.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.450" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 16:03:50.449" endtime="20201030 16:03:50.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.452" level="INFO">VALUE: [4.3903000000001385e-05, 4.422200000000001e-05, 4.41939999999974e-05, 4.427800000000176e-05, 4.429200000000133e-05, 4.3639000000001565e-05, 4.4152999999998166e-05, 4.4374999999999276e-05, 4.380599999999693e-05, 4.372199999999951e-05, 4.379200000000083e-05, 4.4374999999999276e-05, 4.401400000000194e-05, 4.3903000000001385e-05, 4.4459000000000165e-05, 4.402800000000151e-05, 4.436199999999918e-05, 4.4347000000000136e-05, 4.392999999999758e-05, 4.376400000000169e-05, 4.431899999999753e-05, 4.4402999999998416e-05, 4.4388999999998846e-05, 4.402800000000151e-05, 4.423599999999958e-05, 4.3625000000001996e-05, 4.3874999999998776e-05, 4.43329999999971e-05, 4.4347000000000136e-05, 4.431899999999753e-05, 4.420800000000044e-05, 4.358399999999929e-05, 4.379200000000083e-05, 4.3624999999998526e-05, 4.422200000000001e-05, 4.3708999999999415e-05, 4.348599999999883e-05, 4.4445000000000595e-05, 4.452800000000201e-05, 4.408399999999979e-05, 4.369400000000037e-05, 4.4083000000000316e-05, 4.430499999999796e-05, 4.3596999999999386e-05, 4.3555000000000677e-05, 4.4083000000000316e-05, 4.4139000000002065e-05, 4.395800000000019e-05, 4.3860999999999206e-05, 4.372199999999951e-05]</msg>
<status status="PASS" starttime="20201030 16:03:50.451" endtime="20201030 16:03:50.453"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.446" endtime="20201030 16:03:50.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:50.457" endtime="20201030 16:03:50.477"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.456" endtime="20201030 16:03:50.478"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.455" endtime="20201030 16:03:50.478"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.094" endtime="20201030 16:03:50.478"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.094" endtime="20201030 16:03:50.478"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.487" endtime="20201030 16:03:50.504"></status>
</kw>
<msg timestamp="20201030 16:03:50.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:50.486" endtime="20201030 16:03:50.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:50.506" endtime="20201030 16:03:50.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.508" endtime="20201030 16:03:50.510"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.483" endtime="20201030 16:03:50.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.481" endtime="20201030 16:03:50.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.518" endtime="20201030 16:03:50.805"></status>
</kw>
<msg timestamp="20201030 16:03:50.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020840958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020885764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:50.516" endtime="20201030 16:03:50.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020840958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020885764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:50.809" endtime="20201030 16:03:50.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.818" endtime="20201030 16:03:50.819"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.513" endtime="20201030 16:03:50.820"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.512" endtime="20201030 16:03:50.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:50.824" level="INFO">${RESULT} = [{'diff': 4.48060000000014e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.476399999999922e-05}, {'diff': 4.451399999999897e-05}, {'diff': 4.497200000000076e-05}, {'diff': 4.5180999999998306e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:50.821" endtime="20201030 16:03:50.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:50.829" level="INFO">${ACCURACY} = {'diff': [4.48060000000014e-05, 4.5402999999999416e-05, 4.476399999999922e-05, 4.451399999999897e-05, 4.497200000000076e-05, 4.5180999999998306e-05, 4.498600000000033e-05, 4.44999999999994e-05, 4.5291...</msg>
<status status="PASS" starttime="20201030 16:03:50.825" endtime="20201030 16:03:50.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.833" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 16:03:50.832" endtime="20201030 16:03:50.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.836" level="INFO">VALUE: [4.48060000000014e-05, 4.5402999999999416e-05, 4.476399999999922e-05, 4.451399999999897e-05, 4.497200000000076e-05, 4.5180999999998306e-05, 4.498600000000033e-05, 4.44999999999994e-05, 4.529199999999886e-05, 4.4624999999999526e-05, 4.527799999999929e-05, 4.49999999999999e-05, 4.4486999999999305e-05, 4.469400000000137e-05, 4.4861000000000206e-05, 4.504100000000261e-05, 4.451399999999897e-05, 4.540199999999994e-05, 4.447200000000026e-05, 4.48329999999976e-05, 4.474999999999965e-05, 4.480500000000193e-05, 4.451399999999897e-05, 4.534699999999767e-05, 4.531899999999853e-05, 4.4874999999999776e-05, 4.5166999999998736e-05, 4.4917000000001955e-05, 4.44999999999994e-05, 4.4861000000000206e-05, 4.533400000000104e-05, 4.474999999999965e-05, 4.45129999999995e-05, 4.44999999999994e-05, 4.542999999999908e-05, 4.545799999999822e-05, 4.504099999999914e-05, 4.4597000000000386e-05, 4.5388999999999846e-05, 4.541599999999951e-05, 4.520799999999797e-05, 4.472200000000051e-05, 4.545799999999822e-05, 4.5430999999998556e-05, 4.522199999999754e-05, 4.4861000000000206e-05, 4.476299999999975e-05, 4.5097000000000886e-05, 4.455599999999768e-05, 4.5388999999999846e-05]</msg>
<status status="PASS" starttime="20201030 16:03:50.834" endtime="20201030 16:03:50.837"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.830" endtime="20201030 16:03:50.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:50.841" endtime="20201030 16:03:50.861"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.840" endtime="20201030 16:03:50.861"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.838" endtime="20201030 16:03:50.862"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.479" endtime="20201030 16:03:50.862"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.479" endtime="20201030 16:03:50.862"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.871" endtime="20201030 16:03:50.889"></status>
</kw>
<msg timestamp="20201030 16:03:50.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:50.869" endtime="20201030 16:03:50.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:50.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:50.890" endtime="20201030 16:03:50.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.893" endtime="20201030 16:03:50.894"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.867" endtime="20201030 16:03:50.895"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.864" endtime="20201030 16:03:50.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:50.902" endtime="20201030 16:03:51.188"></status>
</kw>
<msg timestamp="20201030 16:03:51.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:50.900" endtime="20201030 16:03:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021531778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:51.193" endtime="20201030 16:03:51.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.201" endtime="20201030 16:03:51.203"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.898" endtime="20201030 16:03:51.204"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.896" endtime="20201030 16:03:51.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:51.208" level="INFO">${RESULT} = [{'diff': 4.613899999999713e-05}, {'diff': 4.559699999999792e-05}, {'diff': 4.648599999999836e-05}, {'diff': 4.58329999999986e-05}, {'diff': 4.576300000000075e-05}, {'diff': 4.594400000000262e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:51.205" endtime="20201030 16:03:51.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:51.212" level="INFO">${ACCURACY} = {'diff': [4.613899999999713e-05, 4.559699999999792e-05, 4.648599999999836e-05, 4.58329999999986e-05, 4.576300000000075e-05, 4.594400000000262e-05, 4.630499999999996e-05, 4.55000000000004e-05, 4.622199...</msg>
<status status="PASS" starttime="20201030 16:03:51.209" endtime="20201030 16:03:51.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.217" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 16:03:51.216" endtime="20201030 16:03:51.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.220" level="INFO">VALUE: [4.613899999999713e-05, 4.559699999999792e-05, 4.648599999999836e-05, 4.58329999999986e-05, 4.576300000000075e-05, 4.594400000000262e-05, 4.630499999999996e-05, 4.55000000000004e-05, 4.622199999999854e-05, 4.6389000000000846e-05, 4.573599999999761e-05, 4.636099999999824e-05, 4.579199999999936e-05, 4.647199999999879e-05, 4.5681000000002275e-05, 4.5639000000000096e-05, 4.645799999999922e-05, 4.597200000000176e-05, 4.5889000000000346e-05, 4.6347000000002136e-05, 4.634699999999867e-05, 4.5959000000001665e-05, 4.5861000000001206e-05, 4.647200000000226e-05, 4.632000000000247e-05, 4.619400000000287e-05, 4.563799999999715e-05, 4.592999999999958e-05, 4.570799999999847e-05, 4.579200000000283e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.641600000000051e-05, 4.559800000000086e-05, 4.6319999999999e-05, 4.636099999999824e-05, 4.631899999999953e-05, 4.572199999999804e-05, 4.608399999999832e-05, 4.6389000000000846e-05, 4.5889000000000346e-05, 4.558400000000129e-05, 4.644399999999965e-05, 4.55000000000004e-05, 4.6319999999999e-05, 4.602800000000004e-05, 4.576300000000075e-05, 4.63879999999979e-05, 4.63879999999979e-05, 4.617999999999983e-05]</msg>
<status status="PASS" starttime="20201030 16:03:51.218" endtime="20201030 16:03:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.213" endtime="20201030 16:03:51.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:51.226" endtime="20201030 16:03:51.245"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.224" endtime="20201030 16:03:51.246"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.223" endtime="20201030 16:03:51.246"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.863" endtime="20201030 16:03:51.246"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:50.862" endtime="20201030 16:03:51.247"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.255" endtime="20201030 16:03:51.272"></status>
</kw>
<msg timestamp="20201030 16:03:51.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:51.254" endtime="20201030 16:03:51.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:51.273" endtime="20201030 16:03:51.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.276" endtime="20201030 16:03:51.278"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.251" endtime="20201030 16:03:51.278"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.249" endtime="20201030 16:03:51.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.285" endtime="20201030 16:03:51.573"></status>
</kw>
<msg timestamp="20201030 16:03:51.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:51.284" endtime="20201030 16:03:51.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020187819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020234875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:51.577" endtime="20201030 16:03:51.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.588" endtime="20201030 16:03:51.590"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.281" endtime="20201030 16:03:51.591"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.279" endtime="20201030 16:03:51.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:51.600" level="INFO">${RESULT} = [{'diff': 4.705600000000018e-05}, {'diff': 4.6889000000001346e-05}, {'diff': 4.648599999999836e-05}, {'diff': 4.708299999999985e-05}, {'diff': 4.659699999999892e-05}, {'diff': 4.708399999999932e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:51.593" endtime="20201030 16:03:51.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:51.607" level="INFO">${ACCURACY} = {'diff': [4.705600000000018e-05, 4.6889000000001346e-05, 4.648599999999836e-05, 4.708299999999985e-05, 4.659699999999892e-05, 4.708399999999932e-05, 4.651400000000097e-05, 4.6694999999999376e-05, 4.70...</msg>
<status status="PASS" starttime="20201030 16:03:51.602" endtime="20201030 16:03:51.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.614" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 16:03:51.612" endtime="20201030 16:03:51.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.617" level="INFO">VALUE: [4.705600000000018e-05, 4.6889000000001346e-05, 4.648599999999836e-05, 4.708299999999985e-05, 4.659699999999892e-05, 4.708399999999932e-05, 4.651400000000097e-05, 4.6694999999999376e-05, 4.704200000000061e-05, 4.6680999999999806e-05, 4.7222999999999016e-05, 4.654100000000064e-05, 4.731900000000053e-05, 4.73330000000001e-05, 4.684699999999917e-05, 4.726400000000172e-05, 4.702800000000104e-05, 4.655500000000021e-05, 4.75139999999985e-05, 4.680499999999699e-05, 4.679200000000036e-05, 4.734699999999967e-05, 4.699999999999843e-05, 4.7486999999998836e-05, 4.737499999999881e-05, 4.6917000000000486e-05, 4.699999999999843e-05, 4.727799999999782e-05, 4.673599999999861e-05, 4.727800000000129e-05, 4.729199999999739e-05, 4.708399999999932e-05, 4.73879999999989e-05, 4.6625000000001526e-05, 4.744400000000065e-05, 4.693000000000058e-05, 4.6625000000001526e-05, 4.691600000000101e-05, 4.7125000000002026e-05, 4.7403000000001416e-05, 4.711099999999899e-05, 4.654200000000011e-05, 4.727800000000129e-05, 4.723599999999911e-05, 4.722200000000301e-05, 4.686099999999874e-05, 4.7181000000000306e-05, 4.747199999999979e-05, 4.7153000000001166e-05, 4.674999999999818e-05]</msg>
<status status="PASS" starttime="20201030 16:03:51.615" endtime="20201030 16:03:51.618"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.608" endtime="20201030 16:03:51.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:51.623" endtime="20201030 16:03:51.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.621" endtime="20201030 16:03:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.620" endtime="20201030 16:03:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.248" endtime="20201030 16:03:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.247" endtime="20201030 16:03:51.643"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.652" endtime="20201030 16:03:51.669"></status>
</kw>
<msg timestamp="20201030 16:03:51.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:51.651" endtime="20201030 16:03:51.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:51.670" endtime="20201030 16:03:51.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.673" endtime="20201030 16:03:51.675"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.648" endtime="20201030 16:03:51.675"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.646" endtime="20201030 16:03:51.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.682" endtime="20201030 16:03:51.976"></status>
</kw>
<msg timestamp="20201030 16:03:51.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:51.681" endtime="20201030 16:03:51.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:51.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:51.980" endtime="20201030 16:03:51.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:51.988" endtime="20201030 16:03:51.990"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.678" endtime="20201030 16:03:51.991"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.676" endtime="20201030 16:03:51.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:51.995" level="INFO">${RESULT} = [{'diff': 4.776399999999875e-05}, {'diff': 4.808300000000085e-05}, {'diff': 4.81529999999987e-05}, {'diff': 4.754200000000111e-05}, {'diff': 4.773599999999961e-05}, {'diff': 4.827799999999882e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:51.992" endtime="20201030 16:03:51.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:52.000" level="INFO">${ACCURACY} = {'diff': [4.776399999999875e-05, 4.808300000000085e-05, 4.81529999999987e-05, 4.754200000000111e-05, 4.773599999999961e-05, 4.827799999999882e-05, 4.777799999999832e-05, 4.804199999999814e-05, 4.77639...</msg>
<status status="PASS" starttime="20201030 16:03:51.996" endtime="20201030 16:03:52.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.004" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 16:03:52.003" endtime="20201030 16:03:52.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.007" level="INFO">VALUE: [4.776399999999875e-05, 4.808300000000085e-05, 4.81529999999987e-05, 4.754200000000111e-05, 4.773599999999961e-05, 4.827799999999882e-05, 4.777799999999832e-05, 4.804199999999814e-05, 4.776399999999875e-05, 4.797199999999682e-05, 4.7681000000000806e-05, 4.824999999999968e-05, 4.816699999999827e-05, 4.830600000000143e-05, 4.7722999999999516e-05, 4.791699999999802e-05, 4.7681000000000806e-05, 4.829099999999892e-05, 4.780500000000146e-05, 4.786099999999974e-05, 4.81940000000014e-05, 4.755500000000121e-05, 4.779099999999842e-05, 4.826399999999925e-05, 4.795799999999725e-05, 4.8417000000001986e-05, 4.777800000000179e-05, 4.840299999999895e-05, 4.808299999999738e-05, 4.78469999999967e-05, 4.790299999999845e-05, 4.833400000000057e-05, 4.815199999999922e-05, 4.811099999999999e-05, 4.83339999999971e-05, 4.826399999999925e-05, 4.812499999999956e-05, 4.7889000000002346e-05, 4.836100000000024e-05, 4.817999999999836e-05, 4.826399999999925e-05, 4.775000000000265e-05, 4.797200000000029e-05, 4.75139999999985e-05, 4.792999999999811e-05, 4.779200000000136e-05, 4.780600000000093e-05, 4.755600000000068e-05, 4.841699999999852e-05, 4.838899999999938e-05]</msg>
<status status="PASS" starttime="20201030 16:03:52.005" endtime="20201030 16:03:52.008"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.000" endtime="20201030 16:03:52.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:52.012" endtime="20201030 16:03:52.031"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.010" endtime="20201030 16:03:52.032"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.009" endtime="20201030 16:03:52.032"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.644" endtime="20201030 16:03:52.032"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:51.644" endtime="20201030 16:03:52.033"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.042" endtime="20201030 16:03:52.060"></status>
</kw>
<msg timestamp="20201030 16:03:52.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:52.040" endtime="20201030 16:03:52.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:52.061" endtime="20201030 16:03:52.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.064" endtime="20201030 16:03:52.065"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.037" endtime="20201030 16:03:52.066"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.035" endtime="20201030 16:03:52.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.073" endtime="20201030 16:03:52.360"></status>
</kw>
<msg timestamp="20201030 16:03:52.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:52.072" endtime="20201030 16:03:52.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021511917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:52.364" endtime="20201030 16:03:52.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.373" endtime="20201030 16:03:52.374"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.069" endtime="20201030 16:03:52.375"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.067" endtime="20201030 16:03:52.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:52.379" level="INFO">${RESULT} = [{'diff': 4.887499999999684e-05}, {'diff': 4.952800000000007e-05}, {'diff': 4.852800000000254e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.855500000000221e-05}, {'diff': 4.873600000000061e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:52.376" endtime="20201030 16:03:52.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:52.384" level="INFO">${ACCURACY} = {'diff': [4.887499999999684e-05, 4.952800000000007e-05, 4.852800000000254e-05, 4.863899999999963e-05, 4.855500000000221e-05, 4.873600000000061e-05, 4.873600000000061e-05, 4.879199999999889e-05, 4.9152...</msg>
<status status="PASS" starttime="20201030 16:03:52.380" endtime="20201030 16:03:52.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.388" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 16:03:52.387" endtime="20201030 16:03:52.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.391" level="INFO">VALUE: [4.887499999999684e-05, 4.952800000000007e-05, 4.852800000000254e-05, 4.863899999999963e-05, 4.855500000000221e-05, 4.873600000000061e-05, 4.873600000000061e-05, 4.879199999999889e-05, 4.91529999999997e-05, 4.904199999999914e-05, 4.8667000000002236e-05, 4.937500000000081e-05, 4.913900000000013e-05, 4.929200000000286e-05, 4.876399999999975e-05, 4.9181000000002306e-05, 4.912500000000056e-05, 4.944399999999918e-05, 4.933299999999863e-05, 4.927799999999982e-05, 4.915200000000022e-05, 4.916699999999927e-05, 4.948600000000136e-05, 4.945799999999875e-05, 4.900000000000043e-05, 4.926400000000025e-05, 4.858300000000135e-05, 4.902799999999957e-05, 4.854199999999864e-05, 4.923599999999764e-05, 4.8695000000001376e-05, 4.863899999999963e-05, 4.884799999999717e-05, 4.898600000000086e-05, 4.929200000000286e-05, 4.926400000000025e-05, 4.8959000000001196e-05, 4.874999999999671e-05, 4.952800000000007e-05, 4.863899999999963e-05, 4.883299999999813e-05, 4.870800000000147e-05, 4.879199999999889e-05, 4.900000000000043e-05, 4.862500000000006e-05, 4.919399999999893e-05, 4.854199999999864e-05, 4.930600000000243e-05, 4.908399999999785e-05, 4.9388000000000903e-05]</msg>
<status status="PASS" starttime="20201030 16:03:52.389" endtime="20201030 16:03:52.392"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.384" endtime="20201030 16:03:52.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:52.397" endtime="20201030 16:03:52.416"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.395" endtime="20201030 16:03:52.417"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.394" endtime="20201030 16:03:52.417"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.034" endtime="20201030 16:03:52.417"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.033" endtime="20201030 16:03:52.418"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.427" endtime="20201030 16:03:52.443"></status>
</kw>
<msg timestamp="20201030 16:03:52.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:52.425" endtime="20201030 16:03:52.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:52.445" endtime="20201030 16:03:52.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.447" endtime="20201030 16:03:52.449"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.422" endtime="20201030 16:03:52.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.420" endtime="20201030 16:03:52.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.457" endtime="20201030 16:03:52.744"></status>
</kw>
<msg timestamp="20201030 16:03:52.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:52.455" endtime="20201030 16:03:52.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:52.748" endtime="20201030 16:03:52.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.756" endtime="20201030 16:03:52.758"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.452" endtime="20201030 16:03:52.759"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.451" endtime="20201030 16:03:52.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:52.763" level="INFO">${RESULT} = [{'diff': 5.037500000000181e-05}, {'diff': 5.0401999999998004e-05}, {'diff': 5.045799999999975e-05}, {'diff': 5.025000000000168e-05}, {'diff': 5.036100000000224e-05}, {'diff': 4.994399999999968e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:52.760" endtime="20201030 16:03:52.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:52.768" level="INFO">${ACCURACY} = {'diff': [5.037500000000181e-05, 5.0401999999998004e-05, 5.045799999999975e-05, 5.025000000000168e-05, 5.036100000000224e-05, 4.994399999999968e-05, 5.036099999999877e-05, 4.969399999999943e-05, 4.961...</msg>
<status status="PASS" starttime="20201030 16:03:52.764" endtime="20201030 16:03:52.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.773" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 16:03:52.772" endtime="20201030 16:03:52.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.776" level="INFO">VALUE: [5.037500000000181e-05, 5.0401999999998004e-05, 5.045799999999975e-05, 5.025000000000168e-05, 5.036100000000224e-05, 4.994399999999968e-05, 5.036099999999877e-05, 4.969399999999943e-05, 4.961099999999802e-05, 4.952800000000007e-05, 4.981999999999903e-05, 4.998600000000186e-05, 5.025000000000168e-05, 5.022199999999907e-05, 4.963900000000063e-05, 4.98469999999987e-05, 4.986200000000121e-05, 4.968099999999934e-05, 4.961200000000096e-05, 4.991600000000054e-05, 4.990200000000097e-05, 5.011100000000199e-05, 5.031900000000006e-05, 4.993000000000011e-05, 5.013899999999766e-05, 5.006899999999981e-05, 4.987500000000131e-05, 4.998599999999839e-05, 5.018000000000036e-05, 4.950000000000093e-05, 5.043100000000009e-05, 5.044499999999966e-05, 4.970899999999848e-05, 5.043100000000009e-05, 5.037500000000181e-05, 4.987500000000131e-05, 5.040300000000095e-05, 5.008399999999885e-05, 5.0222999999998547e-05, 5.047199999999932e-05, 5.027700000000135e-05, 4.979100000000042e-05, 4.96940000000029e-05, 5.044400000000018e-05, 5.002699999999763e-05, 5.03469999999992e-05, 4.987499999999784e-05, 5.040300000000095e-05, 4.976400000000075e-05, 5.011099999999852e-05]</msg>
<status status="PASS" starttime="20201030 16:03:52.774" endtime="20201030 16:03:52.776"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.769" endtime="20201030 16:03:52.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:52.781" endtime="20201030 16:03:52.800"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.779" endtime="20201030 16:03:52.801"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.778" endtime="20201030 16:03:52.801"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.419" endtime="20201030 16:03:52.802"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.418" endtime="20201030 16:03:52.802"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.811" endtime="20201030 16:03:52.827"></status>
</kw>
<msg timestamp="20201030 16:03:52.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:52.809" endtime="20201030 16:03:52.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:52.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:52.829" endtime="20201030 16:03:52.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.831" endtime="20201030 16:03:52.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.806" endtime="20201030 16:03:52.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.804" endtime="20201030 16:03:52.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:52.841" endtime="20201030 16:03:53.128"></status>
</kw>
<msg timestamp="20201030 16:03:53.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:52.839" endtime="20201030 16:03:53.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020099806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:53.132" endtime="20201030 16:03:53.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.141" endtime="20201030 16:03:53.142"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.836" endtime="20201030 16:03:53.143"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.834" endtime="20201030 16:03:53.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:53.147" level="INFO">${RESULT} = [{'diff': 5.101299999999906e-05}, {'diff': 5.1179999999997894e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.13470000000002e-05}, {'diff': 5.10409999999982e-05}, {'diff': 5.136099999999977e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:53.144" endtime="20201030 16:03:53.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:53.152" level="INFO">${ACCURACY} = {'diff': [5.101299999999906e-05, 5.1179999999997894e-05, 5.137499999999934e-05, 5.13470000000002e-05, 5.10409999999982e-05, 5.136099999999977e-05, 5.093000000000111e-05, 5.052800000000107e-05, 5.12640...</msg>
<status status="PASS" starttime="20201030 16:03:53.148" endtime="20201030 16:03:53.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.156" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 16:03:53.155" endtime="20201030 16:03:53.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.159" level="INFO">VALUE: [5.101299999999906e-05, 5.1179999999997894e-05, 5.137499999999934e-05, 5.13470000000002e-05, 5.10409999999982e-05, 5.136099999999977e-05, 5.093000000000111e-05, 5.052800000000107e-05, 5.126400000000225e-05, 5.109699999999995e-05, 5.136100000000324e-05, 5.107000000000028e-05, 5.1014000000002e-05, 5.118099999999737e-05, 5.05140000000015e-05, 5.140299999999848e-05, 5.048600000000236e-05, 5.05279999999976e-05, 5.074999999999871e-05, 5.104100000000167e-05, 5.088899999999841e-05, 5.098599999999939e-05, 5.144400000000118e-05, 5.1193999999997464e-05, 5.094400000000068e-05, 5.11530000000017e-05, 5.080600000000046e-05, 5.052800000000107e-05, 5.055600000000021e-05, 5.1014000000002e-05, 5.145800000000075e-05, 5.090300000000145e-05, 5.080600000000046e-05, 5.090300000000145e-05, 5.093100000000059e-05, 5.106900000000081e-05, 5.09729999999993e-05, 5.090300000000145e-05, 5.130500000000149e-05, 5.076399999999828e-05, 5.136099999999977e-05, 5.108300000000038e-05, 5.106899999999734e-05, 5.11530000000017e-05, 5.050000000000193e-05, 5.106899999999734e-05, 5.058299999999988e-05, 5.141700000000152e-05, 5.088900000000188e-05, 5.062499999999859e-05]</msg>
<status status="PASS" starttime="20201030 16:03:53.157" endtime="20201030 16:03:53.160"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.152" endtime="20201030 16:03:53.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:53.164" endtime="20201030 16:03:53.184"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.162" endtime="20201030 16:03:53.184"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.161" endtime="20201030 16:03:53.184"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.803" endtime="20201030 16:03:53.185"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:52.802" endtime="20201030 16:03:53.185"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.194" endtime="20201030 16:03:53.212"></status>
</kw>
<msg timestamp="20201030 16:03:53.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:53.192" endtime="20201030 16:03:53.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:53.213" endtime="20201030 16:03:53.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.216" endtime="20201030 16:03:53.218"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.190" endtime="20201030 16:03:53.218"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.188" endtime="20201030 16:03:53.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.225" endtime="20201030 16:03:53.513"></status>
</kw>
<msg timestamp="20201030 16:03:53.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:53.224" endtime="20201030 16:03:53.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:53.517" endtime="20201030 16:03:53.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.526" endtime="20201030 16:03:53.528"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.221" endtime="20201030 16:03:53.528"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.219" endtime="20201030 16:03:53.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:53.533" level="INFO">${RESULT} = [{'diff': 5.172200000000057e-05}, {'diff': 5.20279999999991e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.149999999999946e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:53.530" endtime="20201030 16:03:53.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:53.537" level="INFO">${ACCURACY} = {'diff': [5.172200000000057e-05, 5.20279999999991e-05, 5.187499999999984e-05, 5.163899999999916e-05, 5.162499999999959e-05, 5.149999999999946e-05, 5.222200000000107e-05, 5.180600000000146e-05, 5.22769...</msg>
<status status="PASS" starttime="20201030 16:03:53.534" endtime="20201030 16:03:53.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.542" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 16:03:53.541" endtime="20201030 16:03:53.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.545" level="INFO">VALUE: [5.172200000000057e-05, 5.20279999999991e-05, 5.187499999999984e-05, 5.163899999999916e-05, 5.162499999999959e-05, 5.149999999999946e-05, 5.222200000000107e-05, 5.180600000000146e-05, 5.227699999999988e-05, 5.233299999999816e-05, 5.209700000000095e-05, 5.149999999999946e-05, 5.181900000000156e-05, 5.211100000000052e-05, 5.1693999999997964e-05, 5.179199999999842e-05, 5.226400000000325e-05, 5.158300000000088e-05, 5.241700000000252e-05, 5.193100000000159e-05, 5.223600000000064e-05, 5.209799999999695e-05, 5.211100000000052e-05, 5.149999999999946e-05, 5.233299999999816e-05, 5.205599999999824e-05, 5.180599999999799e-05, 5.211100000000052e-05, 5.241699999999905e-05, 5.225000000000021e-05, 5.236100000000077e-05, 5.151399999999903e-05, 5.209800000000042e-05, 5.180500000000199e-05, 5.237500000000034e-05, 5.173600000000014e-05, 5.233300000000163e-05, 5.211100000000052e-05, 5.195800000000125e-05, 5.243100000000209e-05, 5.237500000000034e-05, 5.169499999999744e-05, 5.177699999999938e-05, 5.219499999999794e-05, 5.175000000000318e-05, 5.201300000000006e-05, 5.243099999999862e-05, 5.176299999999981e-05, 5.2402000000000004e-05, 5.238899999999991e-05]</msg>
<status status="PASS" starttime="20201030 16:03:53.543" endtime="20201030 16:03:53.550"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.538" endtime="20201030 16:03:53.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:53.554" endtime="20201030 16:03:53.574"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.553" endtime="20201030 16:03:53.575"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.551" endtime="20201030 16:03:53.575"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.186" endtime="20201030 16:03:53.575"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.185" endtime="20201030 16:03:53.575"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.584" endtime="20201030 16:03:53.601"></status>
</kw>
<msg timestamp="20201030 16:03:53.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:53.583" endtime="20201030 16:03:53.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:53.603" endtime="20201030 16:03:53.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.606" endtime="20201030 16:03:53.607"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.580" endtime="20201030 16:03:53.608"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.578" endtime="20201030 16:03:53.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.615" endtime="20201030 16:03:53.902"></status>
</kw>
<msg timestamp="20201030 16:03:53.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:53.613" endtime="20201030 16:03:53.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:53.906" endtime="20201030 16:03:53.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.915" endtime="20201030 16:03:53.916"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.611" endtime="20201030 16:03:53.917"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.609" endtime="20201030 16:03:53.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:53.921" level="INFO">${RESULT} = [{'diff': 5.2929999999999644e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.306899999999934e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.334699999999873e-05}, {'diff': 5.25279999999996e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:53.918" endtime="20201030 16:03:53.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:53.927" level="INFO">${ACCURACY} = {'diff': [5.2929999999999644e-05, 5.308299999999891e-05, 5.306899999999934e-05, 5.2693999999998964e-05, 5.334699999999873e-05, 5.25279999999996e-05, 5.276400000000028e-05, 5.312500000000109e-05, 5.262...</msg>
<status status="PASS" starttime="20201030 16:03:53.922" endtime="20201030 16:03:53.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.932" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 16:03:53.930" endtime="20201030 16:03:53.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.934" level="INFO">VALUE: [5.2929999999999644e-05, 5.308299999999891e-05, 5.306899999999934e-05, 5.2693999999998964e-05, 5.334699999999873e-05, 5.25279999999996e-05, 5.276400000000028e-05, 5.312500000000109e-05, 5.262500000000059e-05, 5.305599999999924e-05, 5.302700000000063e-05, 5.2499999999996994e-05, 5.312500000000109e-05, 5.307000000000228e-05, 5.313899999999719e-05, 5.345899999999876e-05, 5.3179999999999894e-05, 5.255499999999927e-05, 5.2957999999998784e-05, 5.340300000000048e-05, 5.3471999999998854e-05, 5.263900000000016e-05, 5.2721999999998104e-05, 5.26530000000032e-05, 5.337500000000134e-05, 5.2721999999998104e-05, 5.330599999999949e-05, 5.280599999999899e-05, 5.298600000000139e-05, 5.283399999999813e-05, 5.337500000000134e-05, 5.308400000000185e-05, 5.305599999999924e-05, 5.290299999999998e-05, 5.255600000000221e-05, 5.283300000000213e-05, 5.283300000000213e-05, 5.3457999999999284e-05, 5.261100000000102e-05, 5.28609999999978e-05, 5.3443999999999714e-05, 5.272200000000157e-05, 5.333299999999916e-05, 5.333299999999916e-05, 5.33470000000022e-05, 5.3207999999999034e-05, 5.3499999999997994e-05, 5.291699999999955e-05, 5.284699999999823e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201030 16:03:53.933" endtime="20201030 16:03:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.928" endtime="20201030 16:03:53.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:53.939" endtime="20201030 16:03:53.959"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.938" endtime="20201030 16:03:53.959"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.937" endtime="20201030 16:03:53.960"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.576" endtime="20201030 16:03:53.960"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.576" endtime="20201030 16:03:53.960"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.969" endtime="20201030 16:03:53.987"></status>
</kw>
<msg timestamp="20201030 16:03:53.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:53.967" endtime="20201030 16:03:53.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:53.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:53.988" endtime="20201030 16:03:53.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:53.991" endtime="20201030 16:03:53.992"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.965" endtime="20201030 16:03:53.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.963" endtime="20201030 16:03:53.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.000" endtime="20201030 16:03:54.287"></status>
</kw>
<msg timestamp="20201030 16:03:54.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020960528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021014431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:53.998" endtime="20201030 16:03:54.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020960528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021014431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:54.291" endtime="20201030 16:03:54.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.300" endtime="20201030 16:03:54.301"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.996" endtime="20201030 16:03:54.302"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.994" endtime="20201030 16:03:54.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:54.306" level="INFO">${RESULT} = [{'diff': 5.390300000000098e-05}, {'diff': 5.438899999999844e-05}, {'diff': 5.368099999999987e-05}, {'diff': 5.409699999999948e-05}, {'diff': 5.3944000000000214e-05}, {'diff': 5.440300000000148e-05}, ...</msg>
<status status="PASS" starttime="20201030 16:03:54.303" endtime="20201030 16:03:54.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:54.311" level="INFO">${ACCURACY} = {'diff': [5.390300000000098e-05, 5.438899999999844e-05, 5.368099999999987e-05, 5.409699999999948e-05, 5.3944000000000214e-05, 5.440300000000148e-05, 5.381900000000009e-05, 5.40410000000012e-05, 5.4096...</msg>
<status status="PASS" starttime="20201030 16:03:54.307" endtime="20201030 16:03:54.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.315" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 16:03:54.314" endtime="20201030 16:03:54.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.318" level="INFO">VALUE: [5.390300000000098e-05, 5.438899999999844e-05, 5.368099999999987e-05, 5.409699999999948e-05, 5.3944000000000214e-05, 5.440300000000148e-05, 5.381900000000009e-05, 5.40410000000012e-05, 5.409699999999948e-05, 5.362499999999812e-05, 5.409700000000295e-05, 5.3735999999998674e-05, 5.441700000000105e-05, 5.3971999999999354e-05, 5.427800000000135e-05, 5.384699999999923e-05, 5.40280000000011e-05, 5.356999999999931e-05, 5.384800000000217e-05, 5.420899999999951e-05, 5.398600000000239e-05, 5.430499999999755e-05, 5.404099999999773e-05, 5.429100000000145e-05, 5.3916000000001074e-05, 5.381900000000009e-05, 5.3944000000000214e-05, 5.35549999999968e-05, 5.441700000000105e-05, 5.387500000000184e-05, 5.36670000000003e-05, 5.419500000000341e-05, 5.3707999999999534e-05, 5.429200000000092e-05, 5.380599999999999e-05, 5.41670000000008e-05, 5.388900000000141e-05, 5.40280000000011e-05, 5.3499999999997994e-05, 5.4208000000000034e-05, 5.362500000000159e-05, 5.355500000000027e-05, 5.408299999999991e-05, 5.433300000000016e-05, 5.4277999999997883e-05, 5.3971999999999354e-05, 5.356899999999984e-05, 5.4235999999999174e-05, 5.38609999999988e-05, 5.432000000000006e-05]</msg>
<status status="PASS" starttime="20201030 16:03:54.316" endtime="20201030 16:03:54.319"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.312" endtime="20201030 16:03:54.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:54.323" endtime="20201030 16:03:54.343"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.321" endtime="20201030 16:03:54.343"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.320" endtime="20201030 16:03:54.344"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.961" endtime="20201030 16:03:54.344"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:53.960" endtime="20201030 16:03:54.344"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.353" endtime="20201030 16:03:54.371"></status>
</kw>
<msg timestamp="20201030 16:03:54.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:54.351" endtime="20201030 16:03:54.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:54.373" endtime="20201030 16:03:54.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.375" endtime="20201030 16:03:54.377"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.349" endtime="20201030 16:03:54.378"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.347" endtime="20201030 16:03:54.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.385" endtime="20201030 16:03:54.671"></status>
</kw>
<msg timestamp="20201030 16:03:54.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:54.383" endtime="20201030 16:03:54.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:54.676" endtime="20201030 16:03:54.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.684" endtime="20201030 16:03:54.686"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.380" endtime="20201030 16:03:54.687"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.379" endtime="20201030 16:03:54.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:54.691" level="INFO">${RESULT} = [{'diff': 5.53480000000002e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.5137999999999715e-05}, {'diff': 5.529099999999898e-05}, {'diff': 5.4694000000000964e-05}, {'diff': 5.5263999999999314e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:54.688" endtime="20201030 16:03:54.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:54.695" level="INFO">${ACCURACY} = {'diff': [5.53480000000002e-05, 5.5472000000000854e-05, 5.5137999999999715e-05, 5.529099999999898e-05, 5.4694000000000964e-05, 5.5263999999999314e-05, 5.5444000000001714e-05, 5.462499999999912e-05, 5....</msg>
<status status="PASS" starttime="20201030 16:03:54.692" endtime="20201030 16:03:54.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.700" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 16:03:54.699" endtime="20201030 16:03:54.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.703" level="INFO">VALUE: [5.53480000000002e-05, 5.5472000000000854e-05, 5.5137999999999715e-05, 5.529099999999898e-05, 5.4694000000000964e-05, 5.5263999999999314e-05, 5.5444000000001714e-05, 5.462499999999912e-05, 5.4749999999999244e-05, 5.490300000000198e-05, 5.541700000000205e-05, 5.526400000000278e-05, 5.544499999999772e-05, 5.515299999999876e-05, 5.484700000000023e-05, 5.530499999999855e-05, 5.526400000000278e-05, 5.509799999999995e-05, 5.53480000000002e-05, 5.494500000000069e-05, 5.506900000000134e-05, 5.4763999999998814e-05, 5.48609999999998e-05, 5.4694000000000964e-05, 5.4930000000001644e-05, 5.513899999999919e-05, 5.5208000000001034e-05, 5.540300000000248e-05, 5.527800000000235e-05, 5.538899999999944e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.506999999999734e-05, 5.465300000000173e-05, 5.4791999999997953e-05, 5.536199999999977e-05, 5.5263999999999314e-05, 5.457000000000031e-05, 5.529099999999898e-05, 5.5137999999999715e-05, 5.4985999999999924e-05, 5.506900000000134e-05, 5.5444000000001714e-05, 5.532000000000106e-05, 5.4999999999999494e-05, 5.51670000000018e-05, 5.458300000000041e-05, 5.540299999999901e-05, 5.4957999999997315e-05, 5.520900000000051e-05]</msg>
<status status="PASS" starttime="20201030 16:03:54.701" endtime="20201030 16:03:54.704"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.696" endtime="20201030 16:03:54.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:54.709" endtime="20201030 16:03:54.728"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.707" endtime="20201030 16:03:54.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.706" endtime="20201030 16:03:54.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.345" endtime="20201030 16:03:54.729"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.344" endtime="20201030 16:03:54.729"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.738" endtime="20201030 16:03:54.755"></status>
</kw>
<msg timestamp="20201030 16:03:54.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:54.737" endtime="20201030 16:03:54.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:54.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:54.757" endtime="20201030 16:03:54.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.760" endtime="20201030 16:03:54.761"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.734" endtime="20201030 16:03:54.762"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.732" endtime="20201030 16:03:54.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:54.769" endtime="20201030 16:03:55.055"></status>
</kw>
<msg timestamp="20201030 16:03:55.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020442569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:54.767" endtime="20201030 16:03:55.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020442569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:55.060" endtime="20201030 16:03:55.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.068" endtime="20201030 16:03:55.070"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.765" endtime="20201030 16:03:55.071"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.763" endtime="20201030 16:03:55.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:55.075" level="INFO">${RESULT} = [{'diff': 5.581999999999809e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.561100000000055e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.5805999999998523e-05}...</msg>
<status status="PASS" starttime="20201030 16:03:55.072" endtime="20201030 16:03:55.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:55.081" level="INFO">${ACCURACY} = {'diff': [5.581999999999809e-05, 5.6277999999999884e-05, 5.561100000000055e-05, 5.6014000000000064e-05, 5.612500000000062e-05, 5.5805999999998523e-05, 5.631899999999912e-05, 5.6416000000000105e-05, 5....</msg>
<status status="PASS" starttime="20201030 16:03:55.076" endtime="20201030 16:03:55.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.085" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 16:03:55.084" endtime="20201030 16:03:55.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.088" level="INFO">VALUE: [5.581999999999809e-05, 5.6277999999999884e-05, 5.561100000000055e-05, 5.6014000000000064e-05, 5.612500000000062e-05, 5.5805999999998523e-05, 5.631899999999912e-05, 5.6416000000000105e-05, 5.5499999999999994e-05, 5.6402000000000535e-05, 5.63610000000013e-05, 5.561100000000055e-05, 5.6416000000000105e-05, 5.562500000000012e-05, 5.637500000000087e-05, 5.558299999999794e-05, 5.591700000000255e-05, 5.615299999999976e-05, 5.6305999999999023e-05, 5.557000000000131e-05, 5.608399999999791e-05, 5.616699999999933e-05, 5.5513999999999564e-05, 5.619500000000194e-05, 5.620900000000151e-05, 5.5750000000000244e-05, 5.6528000000000134e-05, 5.5722000000001104e-05, 5.588899999999994e-05, 5.606900000000234e-05, 5.58610000000008e-05, 5.6486000000001424e-05, 5.5693999999998495e-05, 5.590299999999951e-05, 5.5972000000001354e-05, 5.580600000000199e-05, 5.640300000000001e-05, 5.557000000000131e-05, 5.5527999999999134e-05, 5.6236000000001174e-05, 5.558400000000088e-05, 5.613900000000019e-05, 5.583300000000166e-05, 5.620900000000151e-05, 5.63610000000013e-05, 5.6193999999998995e-05, 5.5499999999999994e-05, 5.558300000000141e-05, 5.61809999999989e-05, 5.590299999999951e-05]</msg>
<status status="PASS" starttime="20201030 16:03:55.086" endtime="20201030 16:03:55.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.081" endtime="20201030 16:03:55.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:55.093" endtime="20201030 16:03:55.112"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.091" endtime="20201030 16:03:55.113"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.090" endtime="20201030 16:03:55.113"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.730" endtime="20201030 16:03:55.114"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:54.730" endtime="20201030 16:03:55.114"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.123" endtime="20201030 16:03:55.140"></status>
</kw>
<msg timestamp="20201030 16:03:55.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:55.121" endtime="20201030 16:03:55.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:55.141" endtime="20201030 16:03:55.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.144" endtime="20201030 16:03:55.145"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.118" endtime="20201030 16:03:55.146"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.116" endtime="20201030 16:03:55.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.153" endtime="20201030 16:03:55.442"></status>
</kw>
<msg timestamp="20201030 16:03:55.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:55.151" endtime="20201030 16:03:55.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020102069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:55.447" endtime="20201030 16:03:55.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.455" endtime="20201030 16:03:55.457"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.149" endtime="20201030 16:03:55.457"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.147" endtime="20201030 16:03:55.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:55.462" level="INFO">${RESULT} = [{'diff': 5.7387999999998496e-05}, {'diff': 5.7457999999999815e-05}, {'diff': 5.7221999999999135e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.6930000000000175e-05...</msg>
<status status="PASS" starttime="20201030 16:03:55.459" endtime="20201030 16:03:55.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:55.466" level="INFO">${ACCURACY} = {'diff': [5.7387999999998496e-05, 5.7457999999999815e-05, 5.7221999999999135e-05, 5.6500000000000994e-05, 5.73749999999984e-05, 5.6930000000000175e-05, 5.6778000000000384e-05, 5.658299999999894e-05, 5...</msg>
<status status="PASS" starttime="20201030 16:03:55.463" endtime="20201030 16:03:55.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.471" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 16:03:55.470" endtime="20201030 16:03:55.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.473" level="INFO">VALUE: [5.7387999999998496e-05, 5.7457999999999815e-05, 5.7221999999999135e-05, 5.6500000000000994e-05, 5.73749999999984e-05, 5.6930000000000175e-05, 5.6778000000000384e-05, 5.658299999999894e-05, 5.6985999999998455e-05, 5.709700000000248e-05, 5.708299999999944e-05, 5.657000000000231e-05, 5.738899999999797e-05, 5.6528000000000134e-05, 5.69870000000014e-05, 5.7235999999998705e-05, 5.712500000000162e-05, 5.7471999999999385e-05, 5.736099999999883e-05, 5.6749999999997774e-05, 5.729099999999751e-05, 5.663900000000069e-05, 5.662500000000112e-05, 5.663900000000069e-05, 5.662499999999765e-05, 5.716699999999686e-05, 5.6943999999999745e-05, 5.6513999999997094e-05, 5.6819999999999093e-05, 5.693100000000312e-05, 5.7042000000000204e-05, 5.68610000000018e-05, 5.659799999999798e-05, 5.7416000000001105e-05, 5.6736000000001674e-05, 5.7221999999999135e-05, 5.6750000000001244e-05, 5.7264000000001314e-05, 5.6707999999999065e-05, 5.712500000000162e-05, 5.6985999999998455e-05, 5.6805999999999524e-05, 5.709700000000248e-05, 5.7292000000000454e-05, 5.658400000000188e-05, 5.6555999999999274e-05, 5.6778000000000384e-05, 5.734699999999926e-05, 5.668100000000287e-05, 5.6514000000000564e-05]</msg>
<status status="PASS" starttime="20201030 16:03:55.472" endtime="20201030 16:03:55.474"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.467" endtime="20201030 16:03:55.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:55.479" endtime="20201030 16:03:55.498"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.477" endtime="20201030 16:03:55.499"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.476" endtime="20201030 16:03:55.499"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.115" endtime="20201030 16:03:55.500"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.114" endtime="20201030 16:03:55.500"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.511" endtime="20201030 16:03:55.530"></status>
</kw>
<msg timestamp="20201030 16:03:55.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:55.509" endtime="20201030 16:03:55.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:55.532" endtime="20201030 16:03:55.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.534" endtime="20201030 16:03:55.536"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.506" endtime="20201030 16:03:55.536"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.504" endtime="20201030 16:03:55.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.544" endtime="20201030 16:03:55.829"></status>
</kw>
<msg timestamp="20201030 16:03:55.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024798583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:55.542" endtime="20201030 16:03:55.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024740111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024798583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:55.834" endtime="20201030 16:03:55.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.842" endtime="20201030 16:03:55.844"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.539" endtime="20201030 16:03:55.845"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.538" endtime="20201030 16:03:55.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:55.851" level="INFO">${RESULT} = [{'diff': 5.8472000000000385e-05}, {'diff': 5.7985999999999455e-05}, {'diff': 5.8222000000000135e-05}, {'diff': 5.834700000000026e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.794500000000022e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:55.846" endtime="20201030 16:03:55.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:55.859" level="INFO">${ACCURACY} = {'diff': [5.8472000000000385e-05, 5.7985999999999455e-05, 5.8222000000000135e-05, 5.834700000000026e-05, 5.83749999999994e-05, 5.794500000000022e-05, 5.79870000000024e-05, 5.7556000000000274e-05, 5.80...</msg>
<status status="PASS" starttime="20201030 16:03:55.853" endtime="20201030 16:03:55.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.866" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 16:03:55.863" endtime="20201030 16:03:55.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.870" level="INFO">VALUE: [5.8472000000000385e-05, 5.7985999999999455e-05, 5.8222000000000135e-05, 5.834700000000026e-05, 5.83749999999994e-05, 5.794500000000022e-05, 5.79870000000024e-05, 5.7556000000000274e-05, 5.809700000000001e-05, 5.8013999999998594e-05, 5.838899999999897e-05, 5.8401999999999066e-05, 5.8222000000000135e-05, 5.8013999999998594e-05, 5.7527999999997664e-05, 5.790300000000151e-05, 5.8320000000000594e-05, 5.756900000000037e-05, 5.8235999999999705e-05, 5.8277999999998414e-05, 5.7555999999996804e-05, 5.7514000000001564e-05, 5.81810000000009e-05, 5.762500000000212e-05, 5.762499999999865e-05, 5.8083999999999913e-05, 5.802700000000216e-05, 5.7750000000002244e-05, 5.813899999999872e-05, 5.805499999999783e-05, 5.75689999999969e-05, 5.7971999999999885e-05, 5.7999999999999025e-05, 5.763900000000169e-05, 5.7528000000001134e-05, 5.763899999999822e-05, 5.83749999999994e-05, 5.795899999999979e-05, 5.816700000000133e-05, 5.755499999999733e-05, 5.7805999999997054e-05, 5.7916000000001605e-05, 5.8041999999997734e-05, 5.8499999999999525e-05, 5.829100000000198e-05, 5.8458000000000815e-05, 5.784699999999976e-05, 5.8208000000000565e-05, 5.840300000000201e-05, 5.840300000000201e-05]</msg>
<status status="PASS" starttime="20201030 16:03:55.868" endtime="20201030 16:03:55.874"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.860" endtime="20201030 16:03:55.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:55.879" endtime="20201030 16:03:55.899"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.878" endtime="20201030 16:03:55.900"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.876" endtime="20201030 16:03:55.900"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.501" endtime="20201030 16:03:55.900"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.501" endtime="20201030 16:03:55.900"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.909" endtime="20201030 16:03:55.927"></status>
</kw>
<msg timestamp="20201030 16:03:55.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:55.908" endtime="20201030 16:03:55.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:55.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:55.929" endtime="20201030 16:03:55.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.931" endtime="20201030 16:03:55.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.905" endtime="20201030 16:03:55.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.903" endtime="20201030 16:03:55.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:55.941" endtime="20201030 16:03:56.227"></status>
</kw>
<msg timestamp="20201030 16:03:56.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020803514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:55.939" endtime="20201030 16:03:56.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020803514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020862736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:56.231" endtime="20201030 16:03:56.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.240" endtime="20201030 16:03:56.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.936" endtime="20201030 16:03:56.242"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.935" endtime="20201030 16:03:56.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:56.246" level="INFO">${RESULT} = [{'diff': 5.9222000000001135e-05}, {'diff': 5.8791999999998484e-05}, {'diff': 5.934700000000126e-05}, {'diff': 5.8819999999997624e-05}, {'diff': 5.8736000000000205e-05}, {'diff': 5.881899999999815e-05...</msg>
<status status="PASS" starttime="20201030 16:03:56.243" endtime="20201030 16:03:56.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:56.252" level="INFO">${ACCURACY} = {'diff': [5.9222000000001135e-05, 5.8791999999998484e-05, 5.934700000000126e-05, 5.8819999999997624e-05, 5.8736000000000205e-05, 5.881899999999815e-05, 5.86810000000014e-05, 5.8528000000002134e-05, 5....</msg>
<status status="PASS" starttime="20201030 16:03:56.248" endtime="20201030 16:03:56.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.256" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 16:03:56.255" endtime="20201030 16:03:56.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.259" level="INFO">VALUE: [5.9222000000001135e-05, 5.8791999999998484e-05, 5.934700000000126e-05, 5.8819999999997624e-05, 5.8736000000000205e-05, 5.881899999999815e-05, 5.86810000000014e-05, 5.8528000000002134e-05, 5.8958000000001315e-05, 5.9348000000000734e-05, 5.876299999999987e-05, 5.8958000000001315e-05, 5.8972000000000885e-05, 5.9221999999997665e-05, 5.8708000000001065e-05, 5.886100000000033e-05, 5.8957999999997845e-05, 5.8513999999999095e-05, 5.936099999999736e-05, 5.9069999999997874e-05, 5.8820000000001094e-05, 5.8736000000000205e-05, 5.8986000000000455e-05, 5.8499999999999525e-05, 5.870900000000054e-05, 5.8806000000001524e-05, 5.926300000000037e-05, 5.944499999999825e-05, 5.933299999999822e-05, 5.880499999999858e-05, 5.8957999999997845e-05, 5.8929999999998706e-05, 5.931899999999865e-05, 5.936100000000083e-05, 5.8986000000000455e-05, 5.9277999999999414e-05, 5.8958000000001315e-05, 5.862500000000312e-05, 5.886100000000033e-05, 5.9165999999999386e-05, 5.945900000000129e-05, 5.9194999999998e-05, 5.8736000000000205e-05, 5.895900000000079e-05, 5.904099999999926e-05, 5.855499999999833e-05, 5.936100000000083e-05, 5.858300000000094e-05, 5.933299999999822e-05, 5.9443999999998776e-05]</msg>
<status status="PASS" starttime="20201030 16:03:56.258" endtime="20201030 16:03:56.260"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.253" endtime="20201030 16:03:56.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:56.264" endtime="20201030 16:03:56.284"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.263" endtime="20201030 16:03:56.284"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.261" endtime="20201030 16:03:56.284"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.901" endtime="20201030 16:03:56.285"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:55.901" endtime="20201030 16:03:56.285"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.294" endtime="20201030 16:03:56.311"></status>
</kw>
<msg timestamp="20201030 16:03:56.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:56.292" endtime="20201030 16:03:56.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:56.313" endtime="20201030 16:03:56.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.315" endtime="20201030 16:03:56.317"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.290" endtime="20201030 16:03:56.318"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.288" endtime="20201030 16:03:56.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.325" endtime="20201030 16:03:56.611"></status>
</kw>
<msg timestamp="20201030 16:03:56.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:56.323" endtime="20201030 16:03:56.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020068847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020128694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:56.615" endtime="20201030 16:03:56.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.624" endtime="20201030 16:03:56.625"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.321" endtime="20201030 16:03:56.626"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.319" endtime="20201030 16:03:56.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:56.631" level="INFO">${RESULT} = [{'diff': 5.984699999999829e-05}, {'diff': 5.9764000000000345e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.9929999999999706e-05}, {'diff': 6.034699999999879e-05}, {'diff': 6.031899999999965e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:56.627" endtime="20201030 16:03:56.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:56.635" level="INFO">${ACCURACY} = {'diff': [5.984699999999829e-05, 5.9764000000000345e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 6.034699999999879e-05, 6.031899999999965e-05, 5.980499999999958e-05, 5.979100000000001e-05, 5.99...</msg>
<status status="PASS" starttime="20201030 16:03:56.632" endtime="20201030 16:03:56.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.640" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 16:03:56.639" endtime="20201030 16:03:56.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.642" level="INFO">VALUE: [5.984699999999829e-05, 5.9764000000000345e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 6.034699999999879e-05, 6.031899999999965e-05, 5.980499999999958e-05, 5.979100000000001e-05, 5.9986000000001455e-05, 5.9541999999999234e-05, 5.991699999999961e-05, 5.984700000000176e-05, 5.9749999999997305e-05, 6.0305999999999554e-05, 6.040300000000054e-05, 6.0028000000000165e-05, 6.013900000000072e-05, 5.993099999999918e-05, 6.0111999999997584e-05, 5.9556000000002274e-05, 5.980499999999958e-05, 6.0388000000001496e-05, 5.961100000000108e-05, 5.963900000000022e-05, 5.9500000000000525e-05, 6.00689999999994e-05, 5.9957999999998846e-05, 5.991699999999961e-05, 5.96949999999985e-05, 5.986100000000133e-05, 6.011100000000158e-05, 5.991699999999961e-05, 5.965299999999979e-05, 6.012500000000115e-05, 6.030500000000008e-05, 6.045900000000229e-05, 6.0320000000002594e-05, 6.011099999999811e-05, 6.0291999999999984e-05, 6.009700000000201e-05, 6.0028000000000165e-05, 5.9500000000000525e-05, 5.9499999999997055e-05, 6.031899999999965e-05, 6.015300000000029e-05, 5.986100000000133e-05, 5.988900000000047e-05, 6.043099999999968e-05, 6.03750000000014e-05, 5.969500000000197e-05]</msg>
<status status="PASS" starttime="20201030 16:03:56.641" endtime="20201030 16:03:56.643"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.636" endtime="20201030 16:03:56.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:56.647" endtime="20201030 16:03:56.667"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.646" endtime="20201030 16:03:56.667"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.644" endtime="20201030 16:03:56.668"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.286" endtime="20201030 16:03:56.668"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.285" endtime="20201030 16:03:56.668"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.677" endtime="20201030 16:03:56.695"></status>
</kw>
<msg timestamp="20201030 16:03:56.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:56.675" endtime="20201030 16:03:56.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:56.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:56.697" endtime="20201030 16:03:56.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.699" endtime="20201030 16:03:56.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.673" endtime="20201030 16:03:56.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.671" endtime="20201030 16:03:56.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:56.709" endtime="20201030 16:03:56.996"></status>
</kw>
<msg timestamp="20201030 16:03:56.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021173458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:56.707" endtime="20201030 16:03:56.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021112347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021173458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:57.000" endtime="20201030 16:03:57.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.009" endtime="20201030 16:03:57.011"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.704" endtime="20201030 16:03:57.011"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.702" endtime="20201030 16:03:57.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:57.016" level="INFO">${RESULT} = [{'diff': 6.111099999999911e-05}, {'diff': 6.0915999999997666e-05}, {'diff': 6.123700000000218e-05}, {'diff': 6.111099999999911e-05}, {'diff': 6.0930000000000706e-05}, {'diff': 6.145800000000035e-05},...</msg>
<status status="PASS" starttime="20201030 16:03:57.012" endtime="20201030 16:03:57.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:57.020" level="INFO">${ACCURACY} = {'diff': [6.111099999999911e-05, 6.0915999999997666e-05, 6.123700000000218e-05, 6.111099999999911e-05, 6.0930000000000706e-05, 6.145800000000035e-05, 6.108299999999997e-05, 6.0569999999999374e-05, 6.1...</msg>
<status status="PASS" starttime="20201030 16:03:57.017" endtime="20201030 16:03:57.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.025" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 16:03:57.024" endtime="20201030 16:03:57.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.027" level="INFO">VALUE: [6.111099999999911e-05, 6.0915999999997666e-05, 6.123700000000218e-05, 6.111099999999911e-05, 6.0930000000000706e-05, 6.145800000000035e-05, 6.108299999999997e-05, 6.0569999999999374e-05, 6.134700000000326e-05, 6.138900000000197e-05, 6.0985999999998985e-05, 6.129199999999752e-05, 6.138900000000197e-05, 6.1028000000001165e-05, 6.104100000000126e-05, 6.059699999999904e-05, 6.0764000000001345e-05, 6.115199999999835e-05, 6.0930000000000706e-05, 6.10690000000004e-05, 6.0708000000003065e-05, 6.0819999999999624e-05, 6.1000000000002025e-05, 6.104200000000073e-05, 6.0763999999997875e-05, 6.120899999999957e-05, 6.115299999999782e-05, 6.0806000000000054e-05, 6.13339999999997e-05, 6.12499999999988e-05, 6.125000000000227e-05, 6.105500000000083e-05, 6.109699999999954e-05, 6.140200000000207e-05, 6.140299999999807e-05, 6.105500000000083e-05, 6.080500000000058e-05, 6.0569999999999374e-05, 6.0985999999998985e-05, 6.0985999999998985e-05, 6.091700000000061e-05, 6.127800000000141e-05, 6.0848000000002234e-05, 6.0944000000000276e-05, 6.12499999999988e-05, 6.144500000000025e-05, 6.048699999999796e-05, 6.0638000000001746e-05, 6.0499999999998055e-05, 6.0735999999998735e-05]</msg>
<status status="PASS" starttime="20201030 16:03:57.026" endtime="20201030 16:03:57.029"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.021" endtime="20201030 16:03:57.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:57.033" endtime="20201030 16:03:57.053"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.032" endtime="20201030 16:03:57.053"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.031" endtime="20201030 16:03:57.054"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.669" endtime="20201030 16:03:57.054"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:56.669" endtime="20201030 16:03:57.054"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.063" endtime="20201030 16:03:57.080"></status>
</kw>
<msg timestamp="20201030 16:03:57.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:57.061" endtime="20201030 16:03:57.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:57.081" endtime="20201030 16:03:57.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.084" endtime="20201030 16:03:57.086"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.059" endtime="20201030 16:03:57.086"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.057" endtime="20201030 16:03:57.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.093" endtime="20201030 16:03:57.380"></status>
</kw>
<msg timestamp="20201030 16:03:57.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02020175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:57.092" endtime="20201030 16:03:57.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02020175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:57.384" endtime="20201030 16:03:57.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.393" endtime="20201030 16:03:57.394"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.089" endtime="20201030 16:03:57.395"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.087" endtime="20201030 16:03:57.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:57.400" level="INFO">${RESULT} = [{'diff': 6.15140000000021e-05}, {'diff': 6.155599999999734e-05}, {'diff': 6.195799999999738e-05}, {'diff': 6.218100000000143e-05}, {'diff': 6.209700000000054e-05}, {'diff': 6.172200000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:57.396" endtime="20201030 16:03:57.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:57.405" level="INFO">${ACCURACY} = {'diff': [6.15140000000021e-05, 6.155599999999734e-05, 6.195799999999738e-05, 6.218100000000143e-05, 6.209700000000054e-05, 6.172200000000017e-05, 6.247300000000039e-05, 6.209800000000001e-05, 6.15830...</msg>
<status status="PASS" starttime="20201030 16:03:57.401" endtime="20201030 16:03:57.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.409" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 16:03:57.408" endtime="20201030 16:03:57.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.412" level="INFO">VALUE: [6.15140000000021e-05, 6.155599999999734e-05, 6.195799999999738e-05, 6.218100000000143e-05, 6.209700000000054e-05, 6.172200000000017e-05, 6.247300000000039e-05, 6.209800000000001e-05, 6.158300000000047e-05, 6.179200000000148e-05, 6.237499999999993e-05, 6.213899999999925e-05, 6.197200000000042e-05, 6.212499999999968e-05, 6.209700000000054e-05, 6.15690000000009e-05, 6.179200000000148e-05, 6.247200000000092e-05, 6.245799999999788e-05, 6.168100000000093e-05, 6.205599999999784e-05, 6.198599999999999e-05, 6.215299999999882e-05, 6.198599999999999e-05, 6.180600000000105e-05, 6.212499999999968e-05, 6.175000000000277e-05, 6.148600000000295e-05, 6.16950000000005e-05, 6.159700000000004e-05, 6.240299999999907e-05, 6.231899999999818e-05, 6.191699999999814e-05, 6.20699999999974e-05, 6.240299999999907e-05, 6.243100000000168e-05, 6.245800000000135e-05, 6.227800000000241e-05, 6.243099999999821e-05, 6.202800000000216e-05, 6.223600000000024e-05, 6.241699999999864e-05, 6.180599999999759e-05, 6.248600000000049e-05, 6.237499999999993e-05, 6.212499999999968e-05, 6.197200000000042e-05, 6.161099999999961e-05, 6.155499999999786e-05, 6.177800000000191e-05]</msg>
<status status="PASS" starttime="20201030 16:03:57.410" endtime="20201030 16:03:57.413"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.406" endtime="20201030 16:03:57.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:57.417" endtime="20201030 16:03:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.415" endtime="20201030 16:03:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.414" endtime="20201030 16:03:57.438"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.055" endtime="20201030 16:03:57.438"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.054" endtime="20201030 16:03:57.438"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.447" endtime="20201030 16:03:57.464"></status>
</kw>
<msg timestamp="20201030 16:03:57.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:57.445" endtime="20201030 16:03:57.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:57.466" endtime="20201030 16:03:57.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.469" endtime="20201030 16:03:57.470"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.443" endtime="20201030 16:03:57.471"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.440" endtime="20201030 16:03:57.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.478" endtime="20201030 16:03:57.766"></status>
</kw>
<msg timestamp="20201030 16:03:57.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02121075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:57.476" endtime="20201030 16:03:57.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02121075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:57.770" endtime="20201030 16:03:57.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.779" endtime="20201030 16:03:57.780"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.474" endtime="20201030 16:03:57.781"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.472" endtime="20201030 16:03:57.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:57.786" level="INFO">${RESULT} = [{'diff': 6.312500000000068e-05}, {'diff': 6.280600000000205e-05}, {'diff': 6.268099999999846e-05}, {'diff': 6.269499999999803e-05}, {'diff': 6.344500000000225e-05}, {'diff': 6.250000000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:57.782" endtime="20201030 16:03:57.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:57.790" level="INFO">${ACCURACY} = {'diff': [6.312500000000068e-05, 6.280600000000205e-05, 6.268099999999846e-05, 6.269499999999803e-05, 6.344500000000225e-05, 6.250000000000006e-05, 6.304199999999927e-05, 6.347200000000192e-05, 6.3221...</msg>
<status status="PASS" starttime="20201030 16:03:57.787" endtime="20201030 16:03:57.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.794" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 16:03:57.793" endtime="20201030 16:03:57.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.797" level="INFO">VALUE: [6.312500000000068e-05, 6.280600000000205e-05, 6.268099999999846e-05, 6.269499999999803e-05, 6.344500000000225e-05, 6.250000000000006e-05, 6.304199999999927e-05, 6.347200000000192e-05, 6.32219999999982e-05, 6.298599999999752e-05, 6.327700000000047e-05, 6.266599999999942e-05, 6.292999999999924e-05, 6.284699999999782e-05, 6.341700000000311e-05, 6.287500000000043e-05, 6.341699999999964e-05, 6.290300000000304e-05, 6.332000000000212e-05, 6.290299999999957e-05, 6.250000000000006e-05, 6.251399999999963e-05, 6.287500000000043e-05, 6.27500000000003e-05, 6.345800000000235e-05, 6.298600000000099e-05, 6.345799999999888e-05, 6.313900000000025e-05, 6.326400000000038e-05, 6.268000000000246e-05, 6.279199999999902e-05, 6.270799999999813e-05, 6.294499999999828e-05, 6.300000000000056e-05, 6.261100000000061e-05, 6.33340000000017e-05, 6.294500000000175e-05, 6.304200000000273e-05, 6.262500000000018e-05, 6.293100000000218e-05, 6.280499999999911e-05, 6.30829999999985e-05, 6.291599999999967e-05, 6.295799999999838e-05, 6.323599999999777e-05, 6.323600000000124e-05, 6.309699999999807e-05, 6.25279999999992e-05, 6.280599999999859e-05, 6.287500000000043e-05]</msg>
<status status="PASS" starttime="20201030 16:03:57.796" endtime="20201030 16:03:57.798"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.791" endtime="20201030 16:03:57.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:57.802" endtime="20201030 16:03:57.822"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.801" endtime="20201030 16:03:57.822"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.799" endtime="20201030 16:03:57.823"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.439" endtime="20201030 16:03:57.823"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.438" endtime="20201030 16:03:57.823"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.832" endtime="20201030 16:03:57.849"></status>
</kw>
<msg timestamp="20201030 16:03:57.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:57.831" endtime="20201030 16:03:57.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:57.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:57.851" endtime="20201030 16:03:57.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.853" endtime="20201030 16:03:57.855"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.828" endtime="20201030 16:03:57.855"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.826" endtime="20201030 16:03:57.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:57.863" endtime="20201030 16:03:58.149"></status>
</kw>
<msg timestamp="20201030 16:03:58.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:57.861" endtime="20201030 16:03:58.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021246708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:58.153" endtime="20201030 16:03:58.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.162" endtime="20201030 16:03:58.163"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.858" endtime="20201030 16:03:58.164"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.857" endtime="20201030 16:03:58.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:58.168" level="INFO">${RESULT} = [{'diff': 6.386100000000186e-05}, {'diff': 6.416600000000092e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.37219999999987e-05}, {'diff': 6.36950000000025e-05}, {'diff': 6.386100000000186e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:03:58.165" endtime="20201030 16:03:58.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:58.173" level="INFO">${ACCURACY} = {'diff': [6.386100000000186e-05, 6.416600000000092e-05, 6.380500000000011e-05, 6.37219999999987e-05, 6.36950000000025e-05, 6.386100000000186e-05, 6.395899999999885e-05, 6.40699999999994e-05, 6.4264000...</msg>
<status status="PASS" starttime="20201030 16:03:58.169" endtime="20201030 16:03:58.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.177" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 16:03:58.176" endtime="20201030 16:03:58.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.180" level="INFO">VALUE: [6.386100000000186e-05, 6.416600000000092e-05, 6.380500000000011e-05, 6.37219999999987e-05, 6.36950000000025e-05, 6.386100000000186e-05, 6.395899999999885e-05, 6.40699999999994e-05, 6.426400000000138e-05, 6.391700000000014e-05, 6.40699999999994e-05, 6.35560000000028e-05, 6.391700000000014e-05, 6.427799999999748e-05, 6.418000000000049e-05, 6.367999999999999e-05, 6.393000000000024e-05, 6.380500000000011e-05, 6.447199999999945e-05, 6.419400000000006e-05, 6.394499999999928e-05, 6.398600000000199e-05, 6.416700000000039e-05, 6.374999999999784e-05, 6.351400000000063e-05, 6.397200000000242e-05, 6.39029999999971e-05, 6.405599999999984e-05, 6.372300000000164e-05, 6.437500000000193e-05, 6.430500000000061e-05, 6.438799999999856e-05, 6.367999999999999e-05, 6.350000000000106e-05, 6.443000000000074e-05, 6.445799999999988e-05, 6.362500000000118e-05, 6.441700000000064e-05, 6.3582999999999e-05, 6.441700000000064e-05, 6.351400000000063e-05, 6.37500000000013e-05, 6.43890000000015e-05, 6.395800000000285e-05, 6.408399999999898e-05, 6.390300000000057e-05, 6.38479999999983e-05, 6.445799999999988e-05, 6.424999999999834e-05, 6.419499999999953e-05]</msg>
<status status="PASS" starttime="20201030 16:03:58.178" endtime="20201030 16:03:58.182"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.174" endtime="20201030 16:03:58.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:58.186" endtime="20201030 16:03:58.206"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.185" endtime="20201030 16:03:58.206"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.183" endtime="20201030 16:03:58.207"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.824" endtime="20201030 16:03:58.207"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:57.823" endtime="20201030 16:03:58.207"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.216" endtime="20201030 16:03:58.233"></status>
</kw>
<msg timestamp="20201030 16:03:58.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:58.214" endtime="20201030 16:03:58.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:58.235" endtime="20201030 16:03:58.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.237" endtime="20201030 16:03:58.239"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.212" endtime="20201030 16:03:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.210" endtime="20201030 16:03:58.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.247" endtime="20201030 16:03:58.533"></status>
</kw>
<msg timestamp="20201030 16:03:58.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:58.245" endtime="20201030 16:03:58.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:03:58.538" endtime="20201030 16:03:58.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.546" endtime="20201030 16:03:58.548"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.242" endtime="20201030 16:03:58.549"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.241" endtime="20201030 16:03:58.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:58.553" level="INFO">${RESULT} = [{'diff': 6.469400000000056e-05}, {'diff': 6.527800000000195e-05}, {'diff': 6.502699999999875e-05}, {'diff': 6.523599999999977e-05}, {'diff': 6.47089999999996e-05}, {'diff': 6.505600000000084e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:03:58.550" endtime="20201030 16:03:58.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:58.559" level="INFO">${ACCURACY} = {'diff': [6.469400000000056e-05, 6.527800000000195e-05, 6.502699999999875e-05, 6.523599999999977e-05, 6.47089999999996e-05, 6.505600000000084e-05, 6.483300000000025e-05, 6.502700000000222e-05, 6.47080...</msg>
<status status="PASS" starttime="20201030 16:03:58.555" endtime="20201030 16:03:58.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.564" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 16:03:58.563" endtime="20201030 16:03:58.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.567" level="INFO">VALUE: [6.469400000000056e-05, 6.527800000000195e-05, 6.502699999999875e-05, 6.523599999999977e-05, 6.47089999999996e-05, 6.505600000000084e-05, 6.483300000000025e-05, 6.502700000000222e-05, 6.470800000000013e-05, 6.523599999999977e-05, 6.468000000000099e-05, 6.536099999999989e-05, 6.486099999999939e-05, 6.484699999999982e-05, 6.449999999999859e-05, 6.511100000000311e-05, 6.530600000000109e-05, 6.538899999999903e-05, 6.498600000000299e-05, 6.518100000000096e-05, 6.504200000000127e-05, 6.53479999999998e-05, 6.47089999999996e-05, 6.4889000000002e-05, 6.469400000000056e-05, 6.542999999999827e-05, 6.47639999999984e-05, 6.513900000000225e-05, 6.472200000000317e-05, 6.509700000000007e-05, 6.473599999999927e-05, 6.530499999999814e-05, 6.455600000000034e-05, 6.529200000000152e-05, 6.52090000000001e-05, 6.540300000000207e-05, 6.524999999999934e-05, 6.543100000000121e-05, 6.495800000000038e-05, 6.509700000000007e-05, 6.499999999999909e-05, 6.455600000000034e-05, 6.479099999999807e-05, 6.502799999999823e-05, 6.523599999999977e-05, 6.47219999999997e-05, 6.465300000000132e-05, 6.522199999999673e-05, 6.518100000000096e-05, 6.511200000000258e-05]</msg>
<status status="PASS" starttime="20201030 16:03:58.565" endtime="20201030 16:03:58.572"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.560" endtime="20201030 16:03:58.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:58.577" endtime="20201030 16:03:58.596"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.575" endtime="20201030 16:03:58.597"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.574" endtime="20201030 16:03:58.597"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.208" endtime="20201030 16:03:58.597"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.207" endtime="20201030 16:03:58.598"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.606" endtime="20201030 16:03:58.623"></status>
</kw>
<msg timestamp="20201030 16:03:58.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:58.605" endtime="20201030 16:03:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:58.625" endtime="20201030 16:03:58.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.627" endtime="20201030 16:03:58.629"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.602" endtime="20201030 16:03:58.630"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.600" endtime="20201030 16:03:58.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.637" endtime="20201030 16:03:58.927"></status>
</kw>
<msg timestamp="20201030 16:03:58.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:58.635" endtime="20201030 16:03:58.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:58.931" endtime="20201030 16:03:58.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.939" endtime="20201030 16:03:58.941"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.633" endtime="20201030 16:03:58.941"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.631" endtime="20201030 16:03:58.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:58.946" level="INFO">${RESULT} = [{'diff': 6.579199999999855e-05}, {'diff': 6.579200000000202e-05}, {'diff': 6.548699999999949e-05}, {'diff': 6.595800000000138e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.613899999999978e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:58.943" endtime="20201030 16:03:58.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:58.950" level="INFO">${ACCURACY} = {'diff': [6.579199999999855e-05, 6.579200000000202e-05, 6.548699999999949e-05, 6.595800000000138e-05, 6.548600000000002e-05, 6.613899999999978e-05, 6.623600000000077e-05, 6.570799999999766e-05, 6.6097...</msg>
<status status="PASS" starttime="20201030 16:03:58.947" endtime="20201030 16:03:58.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.954" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 16:03:58.953" endtime="20201030 16:03:58.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:58.957" level="INFO">VALUE: [6.579199999999855e-05, 6.579200000000202e-05, 6.548699999999949e-05, 6.595800000000138e-05, 6.548600000000002e-05, 6.613899999999978e-05, 6.623600000000077e-05, 6.570799999999766e-05, 6.609700000000107e-05, 6.600000000000009e-05, 6.594499999999781e-05, 6.615299999999935e-05, 6.594500000000128e-05, 6.555600000000134e-05, 6.633399999999776e-05, 6.62639999999999e-05, 6.582000000000116e-05, 6.555500000000186e-05, 6.583400000000073e-05, 6.59440000000018e-05, 6.609700000000107e-05, 6.57220000000007e-05, 6.568000000000199e-05, 6.583299999999778e-05, 6.622300000000067e-05, 6.634699999999785e-05, 6.609800000000055e-05, 6.627799999999948e-05, 6.551399999999916e-05, 6.63480000000008e-05, 6.643100000000221e-05, 6.591699999999867e-05, 6.613899999999978e-05, 6.648600000000102e-05, 6.642999999999927e-05, 6.642999999999927e-05, 6.612500000000021e-05, 6.55280000000022e-05, 6.549999999999959e-05, 6.618099999999849e-05, 6.593000000000224e-05, 6.582000000000116e-05, 6.623600000000077e-05, 6.625000000000034e-05, 6.563899999999928e-05, 6.624999999999687e-05, 6.63480000000008e-05, 6.555599999999787e-05, 6.577799999999898e-05, 6.608299999999803e-05]</msg>
<status status="PASS" starttime="20201030 16:03:58.955" endtime="20201030 16:03:58.958"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.951" endtime="20201030 16:03:58.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:58.962" endtime="20201030 16:03:58.981"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.960" endtime="20201030 16:03:58.982"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.959" endtime="20201030 16:03:58.982"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.598" endtime="20201030 16:03:58.982"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.598" endtime="20201030 16:03:58.982"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:58.991" endtime="20201030 16:03:59.009"></status>
</kw>
<msg timestamp="20201030 16:03:59.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:58.990" endtime="20201030 16:03:59.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:59.011" endtime="20201030 16:03:59.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.013" endtime="20201030 16:03:59.015"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.987" endtime="20201030 16:03:59.015"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.985" endtime="20201030 16:03:59.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.022" endtime="20201030 16:03:59.307"></status>
</kw>
<msg timestamp="20201030 16:03:59.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:59.021" endtime="20201030 16:03:59.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020673917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:59.311" endtime="20201030 16:03:59.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.319" endtime="20201030 16:03:59.321"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.018" endtime="20201030 16:03:59.321"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.016" endtime="20201030 16:03:59.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:59.326" level="INFO">${RESULT} = [{'diff': 6.727800000000048e-05}, {'diff': 6.695900000000185e-05}, {'diff': 6.749999999999812e-05}, {'diff': 6.702800000000023e-05}, {'diff': 6.680499999999964e-05}, {'diff': 6.747199999999898e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:59.323" endtime="20201030 16:03:59.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:59.330" level="INFO">${ACCURACY} = {'diff': [6.727800000000048e-05, 6.695900000000185e-05, 6.749999999999812e-05, 6.702800000000023e-05, 6.680499999999964e-05, 6.747199999999898e-05, 6.670800000000213e-05, 6.662500000000071e-05, 6.7193...</msg>
<status status="PASS" starttime="20201030 16:03:59.327" endtime="20201030 16:03:59.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.334" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 16:03:59.333" endtime="20201030 16:03:59.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.337" level="INFO">VALUE: [6.727800000000048e-05, 6.695900000000185e-05, 6.749999999999812e-05, 6.702800000000023e-05, 6.680499999999964e-05, 6.747199999999898e-05, 6.670800000000213e-05, 6.662500000000071e-05, 6.719399999999959e-05, 6.723600000000177e-05, 6.718099999999949e-05, 6.697200000000195e-05, 6.718099999999949e-05, 6.706999999999894e-05, 6.72090000000021e-05, 6.74030000000006e-05, 6.700000000000109e-05, 6.738900000000103e-05, 6.702800000000023e-05, 6.680599999999912e-05, 6.687500000000096e-05, 6.697199999999848e-05, 6.651400000000016e-05, 6.695800000000238e-05, 6.684700000000182e-05, 6.679199999999955e-05, 6.680600000000259e-05, 6.69030000000001e-05, 6.686100000000139e-05, 6.681899999999921e-05, 6.651400000000016e-05, 6.718099999999949e-05, 6.691699999999967e-05, 6.713800000000131e-05, 6.694399999999934e-05, 6.686100000000139e-05, 6.651300000000068e-05, 6.686099999999792e-05, 6.704100000000032e-05, 6.692999999999977e-05, 6.672199999999823e-05, 6.723600000000177e-05, 6.72640000000009e-05, 6.697199999999848e-05, 6.713900000000078e-05, 6.740199999999766e-05, 6.720899999999863e-05, 6.706999999999894e-05, 6.687500000000096e-05, 6.72640000000009e-05]</msg>
<status status="PASS" starttime="20201030 16:03:59.335" endtime="20201030 16:03:59.338"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.331" endtime="20201030 16:03:59.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:59.343" endtime="20201030 16:03:59.362"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.341" endtime="20201030 16:03:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.340" endtime="20201030 16:03:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.983" endtime="20201030 16:03:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:58.983" endtime="20201030 16:03:59.363"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.372" endtime="20201030 16:03:59.389"></status>
</kw>
<msg timestamp="20201030 16:03:59.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:59.370" endtime="20201030 16:03:59.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:59.390" endtime="20201030 16:03:59.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.392" endtime="20201030 16:03:59.394"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.368" endtime="20201030 16:03:59.395"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.366" endtime="20201030 16:03:59.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.401" endtime="20201030 16:03:59.686"></status>
</kw>
<msg timestamp="20201030 16:03:59.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019886375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:59.400" endtime="20201030 16:03:59.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019886375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:59.691" endtime="20201030 16:03:59.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.699" endtime="20201030 16:03:59.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.397" endtime="20201030 16:03:59.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.396" endtime="20201030 16:03:59.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:03:59.705" level="INFO">${RESULT} = [{'diff': 6.852800000000173e-05}, {'diff': 6.770799999999966e-05}, {'diff': 6.761099999999867e-05}, {'diff': 6.768000000000052e-05}, {'diff': 6.813900000000178e-05}, {'diff': 6.833300000000028e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:03:59.702" endtime="20201030 16:03:59.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:03:59.710" level="INFO">${ACCURACY} = {'diff': [6.852800000000173e-05, 6.770799999999966e-05, 6.761099999999867e-05, 6.768000000000052e-05, 6.813900000000178e-05, 6.833300000000028e-05, 6.779200000000055e-05, 6.755599999999987e-05, 6.8111...</msg>
<status status="PASS" starttime="20201030 16:03:59.706" endtime="20201030 16:03:59.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.715" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 16:03:59.714" endtime="20201030 16:03:59.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.717" level="INFO">VALUE: [6.852800000000173e-05, 6.770799999999966e-05, 6.761099999999867e-05, 6.768000000000052e-05, 6.813900000000178e-05, 6.833300000000028e-05, 6.779200000000055e-05, 6.755599999999987e-05, 6.811100000000264e-05, 6.80969999999996e-05, 6.762499999999824e-05, 6.841700000000117e-05, 6.779200000000055e-05, 6.845800000000041e-05, 6.768000000000052e-05, 6.795799999999991e-05, 6.763800000000181e-05, 6.816600000000145e-05, 6.783299999999978e-05, 6.80969999999996e-05, 6.820800000000016e-05, 6.816699999999745e-05, 6.772199999999923e-05, 6.747199999999898e-05, 6.80839999999995e-05, 6.776399999999794e-05, 6.77359999999988e-05, 6.77909999999976e-05, 6.800000000000209e-05, 6.765199999999791e-05, 6.759799999999858e-05, 6.819400000000059e-05, 6.798599999999905e-05, 6.805499999999742e-05, 6.80969999999996e-05, 6.838899999999856e-05, 6.834699999999985e-05, 6.80420000000008e-05, 6.765300000000085e-05, 6.84030000000016e-05, 6.776399999999794e-05, 6.772199999999923e-05, 6.830600000000062e-05, 6.781999999999969e-05, 6.783399999999926e-05, 6.769500000000303e-05, 6.781900000000021e-05, 6.779100000000107e-05, 6.802699999999828e-05, 6.786100000000239e-05]</msg>
<status status="PASS" starttime="20201030 16:03:59.716" endtime="20201030 16:03:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.711" endtime="20201030 16:03:59.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:03:59.722" endtime="20201030 16:03:59.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.721" endtime="20201030 16:03:59.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.720" endtime="20201030 16:03:59.743"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.364" endtime="20201030 16:03:59.743"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.364" endtime="20201030 16:03:59.743"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.752" endtime="20201030 16:03:59.769"></status>
</kw>
<msg timestamp="20201030 16:03:59.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:59.750" endtime="20201030 16:03:59.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:03:59.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:03:59.770" endtime="20201030 16:03:59.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.773" endtime="20201030 16:03:59.774"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.748" endtime="20201030 16:03:59.775"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.746" endtime="20201030 16:03:59.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:03:59.782" endtime="20201030 16:04:00.069"></status>
</kw>
<msg timestamp="20201030 16:04:00.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:03:59.780" endtime="20201030 16:04:00.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019841819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:00.073" endtime="20201030 16:04:00.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.082" endtime="20201030 16:04:00.083"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.778" endtime="20201030 16:04:00.084"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.776" endtime="20201030 16:04:00.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:00.088" level="INFO">${RESULT} = [{'diff': 6.924999999999987e-05}, {'diff': 6.876399999999894e-05}, {'diff': 6.918100000000149e-05}, {'diff': 6.907000000000094e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.894399999999787e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:00.085" endtime="20201030 16:04:00.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:00.092" level="INFO">${ACCURACY} = {'diff': [6.924999999999987e-05, 6.876399999999894e-05, 6.918100000000149e-05, 6.907000000000094e-05, 6.934700000000085e-05, 6.894399999999787e-05, 6.952700000000325e-05, 6.934700000000085e-05, 6.9097...</msg>
<status status="PASS" starttime="20201030 16:04:00.089" endtime="20201030 16:04:00.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.097" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 16:04:00.096" endtime="20201030 16:04:00.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.099" level="INFO">VALUE: [6.924999999999987e-05, 6.876399999999894e-05, 6.918100000000149e-05, 6.907000000000094e-05, 6.934700000000085e-05, 6.894399999999787e-05, 6.952700000000325e-05, 6.934700000000085e-05, 6.90970000000006e-05, 6.848599999999955e-05, 6.869500000000056e-05, 6.869500000000056e-05, 6.924999999999987e-05, 6.8584e-05, 6.880499999999817e-05, 6.874999999999937e-05, 6.952799999999926e-05, 6.87359999999998e-05, 6.934699999999738e-05, 6.865299999999838e-05, 6.856900000000096e-05, 6.927799999999901e-05, 6.907000000000094e-05, 6.884700000000035e-05, 6.936100000000042e-05, 6.913899999999931e-05, 6.865299999999838e-05, 6.891700000000167e-05, 6.909800000000008e-05, 6.92909999999991e-05, 6.862499999999924e-05, 6.945799999999794e-05, 6.913900000000278e-05, 6.937499999999999e-05, 6.926399999999944e-05, 6.90970000000006e-05, 6.911100000000017e-05, 6.870800000000066e-05, 6.945900000000088e-05, 6.909699999999713e-05, 6.868099999999752e-05, 6.868099999999752e-05, 6.927799999999901e-05, 6.893099999999777e-05, 6.948600000000055e-05, 6.90970000000006e-05, 6.947200000000098e-05, 6.920900000000063e-05, 6.872200000000023e-05, 6.92360000000003e-05]</msg>
<status status="PASS" starttime="20201030 16:04:00.098" endtime="20201030 16:04:00.100"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.093" endtime="20201030 16:04:00.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:00.104" endtime="20201030 16:04:00.124"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.103" endtime="20201030 16:04:00.124"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.102" endtime="20201030 16:04:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.744" endtime="20201030 16:04:00.125"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:59.743" endtime="20201030 16:04:00.125"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.134" endtime="20201030 16:04:00.154"></status>
</kw>
<msg timestamp="20201030 16:04:00.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:00.133" endtime="20201030 16:04:00.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:00.156" endtime="20201030 16:04:00.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.158" endtime="20201030 16:04:00.160"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.130" endtime="20201030 16:04:00.160"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.128" endtime="20201030 16:04:00.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.167" endtime="20201030 16:04:00.454"></status>
</kw>
<msg timestamp="20201030 16:04:00.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021519722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:00.166" endtime="20201030 16:04:00.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021519722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:00.458" endtime="20201030 16:04:00.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.467" endtime="20201030 16:04:00.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.163" endtime="20201030 16:04:00.469"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.162" endtime="20201030 16:04:00.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:00.473" level="INFO">${RESULT} = [{'diff': 7.006900000000246e-05}, {'diff': 7.025000000000087e-05}, {'diff': 7.038900000000056e-05}, {'diff': 6.998600000000105e-05}, {'diff': 6.961100000000067e-05}, {'diff': 6.994499999999834e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:00.470" endtime="20201030 16:04:00.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:00.478" level="INFO">${ACCURACY} = {'diff': [7.006900000000246e-05, 7.025000000000087e-05, 7.038900000000056e-05, 6.998600000000105e-05, 6.961100000000067e-05, 6.994499999999834e-05, 7.00840000000015e-05, 7.013900000000031e-05, 7.01670...</msg>
<status status="PASS" starttime="20201030 16:04:00.474" endtime="20201030 16:04:00.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.482" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 16:04:00.481" endtime="20201030 16:04:00.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.484" level="INFO">VALUE: [7.006900000000246e-05, 7.025000000000087e-05, 7.038900000000056e-05, 6.998600000000105e-05, 6.961100000000067e-05, 6.994499999999834e-05, 7.00840000000015e-05, 7.013900000000031e-05, 7.016700000000292e-05, 6.984800000000083e-05, 6.981999999999822e-05, 6.980500000000264e-05, 6.977700000000003e-05, 7.016599999999998e-05, 6.958300000000153e-05, 6.999999999999715e-05, 7.030499999999967e-05, 6.981899999999874e-05, 7.047199999999851e-05, 7.040300000000013e-05, 6.99169999999992e-05, 6.962499999999677e-05, 7.004199999999933e-05, 6.963899999999981e-05, 6.973700000000027e-05, 7.041600000000023e-05, 7.001400000000019e-05, 6.99299999999993e-05, 7.036099999999795e-05, 7.038900000000056e-05, 6.963899999999981e-05, 7.022200000000173e-05, 6.950000000000012e-05, 7.052800000000026e-05, 6.983300000000178e-05, 7.043099999999927e-05, 7.006999999999847e-05, 6.976399999999994e-05, 7.001399999999672e-05, 6.988900000000006e-05, 6.966700000000242e-05, 6.999999999999715e-05, 7.016599999999998e-05, 7.037499999999752e-05, 7.045799999999894e-05, 7.044499999999884e-05, 6.973599999999733e-05, 7.040300000000013e-05, 7.037499999999752e-05, 6.994499999999834e-05]</msg>
<status status="PASS" starttime="20201030 16:04:00.483" endtime="20201030 16:04:00.486"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.478" endtime="20201030 16:04:00.487"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:00.490" endtime="20201030 16:04:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.489" endtime="20201030 16:04:00.510"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.488" endtime="20201030 16:04:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.126" endtime="20201030 16:04:00.511"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.125" endtime="20201030 16:04:00.511"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.520" endtime="20201030 16:04:00.537"></status>
</kw>
<msg timestamp="20201030 16:04:00.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:00.518" endtime="20201030 16:04:00.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:00.538" endtime="20201030 16:04:00.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.541" endtime="20201030 16:04:00.542"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.515" endtime="20201030 16:04:00.543"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.513" endtime="20201030 16:04:00.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.550" endtime="20201030 16:04:00.836"></status>
</kw>
<msg timestamp="20201030 16:04:00.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:00.548" endtime="20201030 16:04:00.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:00.840" endtime="20201030 16:04:00.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.848" endtime="20201030 16:04:00.850"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.545" endtime="20201030 16:04:00.851"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.544" endtime="20201030 16:04:00.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:00.855" level="INFO">${RESULT} = [{'diff': 7.073700000000127e-05}, {'diff': 7.137499999999852e-05}, {'diff': 7.130600000000015e-05}, {'diff': 7.088799999999812e-05}, {'diff': 7.112500000000174e-05}, {'diff': 7.133299999999981e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:00.852" endtime="20201030 16:04:00.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:00.860" level="INFO">${ACCURACY} = {'diff': [7.073700000000127e-05, 7.137499999999852e-05, 7.130600000000015e-05, 7.088799999999812e-05, 7.112500000000174e-05, 7.133299999999981e-05, 7.127699999999806e-05, 7.087500000000149e-05, 7.0499...</msg>
<status status="PASS" starttime="20201030 16:04:00.856" endtime="20201030 16:04:00.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.864" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 16:04:00.863" endtime="20201030 16:04:00.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.867" level="INFO">VALUE: [7.073700000000127e-05, 7.137499999999852e-05, 7.130600000000015e-05, 7.088799999999812e-05, 7.112500000000174e-05, 7.133299999999981e-05, 7.127699999999806e-05, 7.087500000000149e-05, 7.049999999999765e-05, 7.063900000000081e-05, 7.05689999999995e-05, 7.049999999999765e-05, 7.095800000000291e-05, 7.075000000000137e-05, 7.116700000000045e-05, 7.144499999999984e-05, 7.070899999999866e-05, 7.062500000000124e-05, 7.083299999999931e-05, 7.118000000000055e-05, 7.102700000000128e-05, 7.12499999999984e-05, 7.141600000000123e-05, 7.055499999999992e-05, 7.134699999999938e-05, 7.069399999999962e-05, 7.123599999999883e-05, 7.07360000000018e-05, 7.126400000000144e-05, 7.125000000000187e-05, 7.051399999999722e-05, 7.087499999999802e-05, 7.147199999999951e-05, 7.081899999999974e-05, 7.131900000000024e-05, 7.113900000000131e-05, 7.098599999999858e-05, 7.080500000000017e-05, 7.063900000000081e-05, 7.055499999999992e-05, 7.137499999999852e-05, 7.116700000000045e-05, 7.076400000000094e-05, 7.116700000000045e-05, 7.081900000000321e-05, 7.140300000000113e-05, 7.11109999999987e-05, 7.084800000000183e-05, 7.047200000000198e-05, 7.066600000000048e-05]</msg>
<status status="PASS" starttime="20201030 16:04:00.865" endtime="20201030 16:04:00.868"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.861" endtime="20201030 16:04:00.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:00.872" endtime="20201030 16:04:00.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.870" endtime="20201030 16:04:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.869" endtime="20201030 16:04:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.512" endtime="20201030 16:04:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.511" endtime="20201030 16:04:00.893"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.901" endtime="20201030 16:04:00.920"></status>
</kw>
<msg timestamp="20201030 16:04:00.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:00.900" endtime="20201030 16:04:00.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:00.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:00.921" endtime="20201030 16:04:00.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.924" endtime="20201030 16:04:00.925"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.897" endtime="20201030 16:04:00.926"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.895" endtime="20201030 16:04:00.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:00.933" endtime="20201030 16:04:01.220"></status>
</kw>
<msg timestamp="20201030 16:04:01.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:00.931" endtime="20201030 16:04:01.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:01.224" endtime="20201030 16:04:01.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.233" endtime="20201030 16:04:01.234"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.929" endtime="20201030 16:04:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.927" endtime="20201030 16:04:01.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:01.239" level="INFO">${RESULT} = [{'diff': 7.206899999999752e-05}, {'diff': 7.179099999999813e-05}, {'diff': 7.198600000000305e-05}, {'diff': 7.172199999999976e-05}, {'diff': 7.162500000000224e-05}, {'diff': 7.173599999999933e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:01.236" endtime="20201030 16:04:01.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:01.243" level="INFO">${ACCURACY} = {'diff': [7.206899999999752e-05, 7.179099999999813e-05, 7.198600000000305e-05, 7.172199999999976e-05, 7.162500000000224e-05, 7.173599999999933e-05, 7.236099999999995e-05, 7.170899999999966e-05, 7.1764...</msg>
<status status="PASS" starttime="20201030 16:04:01.240" endtime="20201030 16:04:01.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.248" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 16:04:01.247" endtime="20201030 16:04:01.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.250" level="INFO">VALUE: [7.206899999999752e-05, 7.179099999999813e-05, 7.198600000000305e-05, 7.172199999999976e-05, 7.162500000000224e-05, 7.173599999999933e-05, 7.236099999999995e-05, 7.170899999999966e-05, 7.176400000000194e-05, 7.202799999999829e-05, 7.183399999999979e-05, 7.169400000000062e-05, 7.216700000000145e-05, 7.200000000000262e-05, 7.162500000000224e-05, 7.199999999999915e-05, 7.191699999999773e-05, 7.149999999999865e-05, 7.245800000000094e-05, 7.197200000000001e-05, 7.240299999999866e-05, 7.237500000000299e-05, 7.199999999999915e-05, 7.179200000000108e-05, 7.163900000000181e-05, 7.202800000000176e-05, 7.215200000000241e-05, 7.197200000000001e-05, 7.198599999999958e-05, 7.244400000000137e-05, 7.180500000000117e-05, 7.238900000000256e-05, 7.198599999999958e-05, 7.222200000000026e-05, 7.208300000000056e-05, 7.213900000000231e-05, 7.202799999999829e-05, 7.186199999999893e-05, 7.179200000000108e-05, 7.237499999999952e-05, 7.245900000000041e-05, 7.183300000000031e-05, 7.184699999999988e-05, 7.245800000000094e-05, 7.197200000000001e-05, 7.19300000000013e-05, 7.212499999999927e-05, 7.209700000000013e-05, 7.231900000000124e-05, 7.21109999999997e-05]</msg>
<status status="PASS" starttime="20201030 16:04:01.249" endtime="20201030 16:04:01.251"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.244" endtime="20201030 16:04:01.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:01.255" endtime="20201030 16:04:01.275"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.254" endtime="20201030 16:04:01.275"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.253" endtime="20201030 16:04:01.276"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.893" endtime="20201030 16:04:01.276"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:00.893" endtime="20201030 16:04:01.276"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.285" endtime="20201030 16:04:01.302"></status>
</kw>
<msg timestamp="20201030 16:04:01.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:01.283" endtime="20201030 16:04:01.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:01.304" endtime="20201030 16:04:01.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.306" endtime="20201030 16:04:01.308"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.281" endtime="20201030 16:04:01.308"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.278" endtime="20201030 16:04:01.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.315" endtime="20201030 16:04:01.602"></status>
</kw>
<msg timestamp="20201030 16:04:01.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020745736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:01.314" endtime="20201030 16:04:01.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020745736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:01.607" endtime="20201030 16:04:01.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.615" endtime="20201030 16:04:01.617"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.311" endtime="20201030 16:04:01.617"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.309" endtime="20201030 16:04:01.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:01.622" level="INFO">${RESULT} = [{'diff': 7.265300000000238e-05}, {'diff': 7.265299999999891e-05}, {'diff': 7.345800000000194e-05}, {'diff': 7.338900000000009e-05}, {'diff': 7.319499999999812e-05}, {'diff': 7.27369999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:01.618" endtime="20201030 16:04:01.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:01.626" level="INFO">${ACCURACY} = {'diff': [7.265300000000238e-05, 7.265299999999891e-05, 7.345800000000194e-05, 7.338900000000009e-05, 7.319499999999812e-05, 7.27369999999998e-05, 7.298600000000058e-05, 7.318000000000255e-05, 7.31529...</msg>
<status status="PASS" starttime="20201030 16:04:01.623" endtime="20201030 16:04:01.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.630" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 16:04:01.629" endtime="20201030 16:04:01.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.633" level="INFO">VALUE: [7.265300000000238e-05, 7.265299999999891e-05, 7.345800000000194e-05, 7.338900000000009e-05, 7.319499999999812e-05, 7.27369999999998e-05, 7.298600000000058e-05, 7.318000000000255e-05, 7.315299999999941e-05, 7.326399999999997e-05, 7.262499999999977e-05, 7.290299999999916e-05, 7.34300000000028e-05, 7.323600000000083e-05, 7.284700000000088e-05, 7.344400000000237e-05, 7.298600000000058e-05, 7.316699999999898e-05, 7.248600000000008e-05, 7.304199999999886e-05, 7.283300000000131e-05, 7.333299999999834e-05, 7.277699999999956e-05, 7.268100000000152e-05, 7.251299999999974e-05, 7.270800000000119e-05, 7.308300000000156e-05, 7.317999999999908e-05, 7.329099999999963e-05, 7.300000000000015e-05, 7.288899999999959e-05, 7.318100000000202e-05, 7.269500000000109e-05, 7.315199999999994e-05, 7.338900000000009e-05, 7.272300000000023e-05, 7.313899999999984e-05, 7.286100000000045e-05, 7.326399999999997e-05, 7.331899999999877e-05, 7.306899999999852e-05, 7.298599999999711e-05, 7.254199999999836e-05, 7.342999999999933e-05, 7.29309999999983e-05, 7.340299999999966e-05, 7.286099999999698e-05, 7.298700000000005e-05, 7.297200000000101e-05, 7.281900000000174e-05]</msg>
<status status="PASS" starttime="20201030 16:04:01.631" endtime="20201030 16:04:01.634"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.627" endtime="20201030 16:04:01.635"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:01.639" endtime="20201030 16:04:01.658"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.637" endtime="20201030 16:04:01.659"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.636" endtime="20201030 16:04:01.659"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.277" endtime="20201030 16:04:01.659"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.276" endtime="20201030 16:04:01.659"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.668" endtime="20201030 16:04:01.686"></status>
</kw>
<msg timestamp="20201030 16:04:01.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:01.666" endtime="20201030 16:04:01.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:01.687" endtime="20201030 16:04:01.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.690" endtime="20201030 16:04:01.691"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.664" endtime="20201030 16:04:01.692"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.662" endtime="20201030 16:04:01.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.699" endtime="20201030 16:04:01.984"></status>
</kw>
<msg timestamp="20201030 16:04:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:01.697" endtime="20201030 16:04:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:01.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:01.989" endtime="20201030 16:04:01.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:01.997" endtime="20201030 16:04:01.999"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.695" endtime="20201030 16:04:01.999"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.693" endtime="20201030 16:04:02.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:02.004" level="INFO">${RESULT} = [{'diff': 7.38049999999997e-05}, {'diff': 7.43050000000002e-05}, {'diff': 7.366699999999948e-05}, {'diff': 7.422199999999879e-05}, {'diff': 7.397199999999854e-05}, {'diff': 7.422200000000226e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:04:02.000" endtime="20201030 16:04:02.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:02.009" level="INFO">${ACCURACY} = {'diff': [7.38049999999997e-05, 7.43050000000002e-05, 7.366699999999948e-05, 7.422199999999879e-05, 7.397199999999854e-05, 7.422200000000226e-05, 7.373600000000133e-05, 7.370900000000166e-05, 7.423600...</msg>
<status status="PASS" starttime="20201030 16:04:02.004" endtime="20201030 16:04:02.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.013" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 16:04:02.012" endtime="20201030 16:04:02.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.015" level="INFO">VALUE: [7.38049999999997e-05, 7.43050000000002e-05, 7.366699999999948e-05, 7.422199999999879e-05, 7.397199999999854e-05, 7.422200000000226e-05, 7.373600000000133e-05, 7.370900000000166e-05, 7.423600000000183e-05, 7.39309999999993e-05, 7.36110000000012e-05, 7.427700000000106e-05, 7.372200000000176e-05, 7.445799999999947e-05, 7.362500000000077e-05, 7.391699999999973e-05, 7.387500000000102e-05, 7.404199999999986e-05, 7.411099999999823e-05, 7.390300000000016e-05, 7.440300000000066e-05, 7.363899999999687e-05, 7.397300000000148e-05, 7.393100000000277e-05, 7.412500000000127e-05, 7.379199999999961e-05, 7.350000000000065e-05, 7.386099999999798e-05, 7.392999999999983e-05, 7.402699999999734e-05, 7.41249999999978e-05, 7.422199999999879e-05, 7.437500000000152e-05, 7.438899999999762e-05, 7.39170000000032e-05, 7.399999999999768e-05, 7.395899999999844e-05, 7.397199999999854e-05, 7.409799999999814e-05, 7.383299999999884e-05, 7.445900000000241e-05, 7.40829999999991e-05, 7.427700000000106e-05, 7.35829999999986e-05, 7.412500000000127e-05, 7.441700000000023e-05, 7.383299999999884e-05, 7.405599999999943e-05, 7.420899999999869e-05, 7.395899999999844e-05]</msg>
<status status="PASS" starttime="20201030 16:04:02.014" endtime="20201030 16:04:02.016"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.009" endtime="20201030 16:04:02.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:02.020" endtime="20201030 16:04:02.040"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.019" endtime="20201030 16:04:02.041"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.018" endtime="20201030 16:04:02.041"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.660" endtime="20201030 16:04:02.041"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:01.660" endtime="20201030 16:04:02.041"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.050" endtime="20201030 16:04:02.067"></status>
</kw>
<msg timestamp="20201030 16:04:02.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:02.048" endtime="20201030 16:04:02.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:02.069" endtime="20201030 16:04:02.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.071" endtime="20201030 16:04:02.073"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.046" endtime="20201030 16:04:02.073"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.044" endtime="20201030 16:04:02.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.080" endtime="20201030 16:04:02.368"></status>
</kw>
<msg timestamp="20201030 16:04:02.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020100875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:02.079" endtime="20201030 16:04:02.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020100875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:02.372" endtime="20201030 16:04:02.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.380" endtime="20201030 16:04:02.382"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.076" endtime="20201030 16:04:02.383"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.074" endtime="20201030 16:04:02.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:02.387" level="INFO">${RESULT} = [{'diff': 7.45829999999996e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.487499999999855e-05}, {'diff': 7.454200000000036e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.523599999999936e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:02.384" endtime="20201030 16:04:02.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:02.391" level="INFO">${ACCURACY} = {'diff': [7.45829999999996e-05, 7.488900000000159e-05, 7.487499999999855e-05, 7.454200000000036e-05, 7.548599999999961e-05, 7.523599999999936e-05, 7.547299999999951e-05, 7.454100000000088e-05, 7.48750...</msg>
<status status="PASS" starttime="20201030 16:04:02.388" endtime="20201030 16:04:02.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.396" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 16:04:02.395" endtime="20201030 16:04:02.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.398" level="INFO">VALUE: [7.45829999999996e-05, 7.488900000000159e-05, 7.487499999999855e-05, 7.454200000000036e-05, 7.548599999999961e-05, 7.523599999999936e-05, 7.547299999999951e-05, 7.454100000000088e-05, 7.487500000000202e-05, 7.497199999999954e-05, 7.454200000000036e-05, 7.533300000000034e-05, 7.473599999999886e-05, 7.522199999999979e-05, 7.534699999999991e-05, 7.487499999999855e-05, 7.47500000000019e-05, 7.449999999999818e-05, 7.483399999999932e-05, 7.465300000000091e-05, 7.547299999999951e-05, 7.483299999999984e-05, 7.499999999999868e-05, 7.487499999999855e-05, 7.472199999999929e-05, 7.504200000000086e-05, 7.484699999999941e-05, 7.488899999999812e-05, 7.49310000000003e-05, 7.520800000000022e-05, 7.532000000000025e-05, 7.519500000000012e-05, 7.52639999999985e-05, 7.504199999999739e-05, 7.486200000000193e-05, 7.501300000000224e-05, 7.470799999999972e-05, 7.522199999999979e-05, 7.459699999999916e-05, 7.470799999999972e-05, 7.468000000000058e-05, 7.497199999999954e-05, 7.515299999999794e-05, 7.544500000000037e-05, 7.472199999999929e-05, 7.522299999999926e-05, 7.473599999999886e-05, 7.545899999999994e-05, 7.448700000000155e-05, 7.459700000000263e-05]</msg>
<status status="PASS" starttime="20201030 16:04:02.397" endtime="20201030 16:04:02.399"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.392" endtime="20201030 16:04:02.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:02.403" endtime="20201030 16:04:02.422"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.401" endtime="20201030 16:04:02.423"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.400" endtime="20201030 16:04:02.423"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.042" endtime="20201030 16:04:02.424"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.042" endtime="20201030 16:04:02.424"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.432" endtime="20201030 16:04:02.451"></status>
</kw>
<msg timestamp="20201030 16:04:02.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:02.431" endtime="20201030 16:04:02.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:02.452" endtime="20201030 16:04:02.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.455" endtime="20201030 16:04:02.457"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.428" endtime="20201030 16:04:02.457"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.426" endtime="20201030 16:04:02.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.464" endtime="20201030 16:04:02.750"></status>
</kw>
<msg timestamp="20201030 16:04:02.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:04:02.462" endtime="20201030 16:04:02.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:04:02.754" endtime="20201030 16:04:02.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.763" endtime="20201030 16:04:02.764"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.460" endtime="20201030 16:04:02.765"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.458" endtime="20201030 16:04:02.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:02.769" level="INFO">${RESULT} = [{'diff': 7.577799999999857e-05}, {'diff': 7.604199999999839e-05}, {'diff': 7.627799999999907e-05}, {'diff': 7.619400000000165e-05}, {'diff': 7.62639999999995e-05}, {'diff': 7.61379999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:04:02.766" endtime="20201030 16:04:02.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:02.773" level="INFO">${ACCURACY} = {'diff': [7.577799999999857e-05, 7.604199999999839e-05, 7.627799999999907e-05, 7.619400000000165e-05, 7.62639999999995e-05, 7.61379999999999e-05, 7.565300000000191e-05, 7.613899999999937e-05, 7.633300...</msg>
<status status="PASS" starttime="20201030 16:04:02.770" endtime="20201030 16:04:02.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.778" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 16:04:02.777" endtime="20201030 16:04:02.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.780" level="INFO">VALUE: [7.577799999999857e-05, 7.604199999999839e-05, 7.627799999999907e-05, 7.619400000000165e-05, 7.62639999999995e-05, 7.61379999999999e-05, 7.565300000000191e-05, 7.613899999999937e-05, 7.633300000000134e-05, 7.587499999999955e-05, 7.634699999999744e-05, 7.586099999999998e-05, 7.644500000000137e-05, 7.604200000000186e-05, 7.59029999999987e-05, 7.618000000000208e-05, 7.577799999999857e-05, 7.619399999999818e-05, 7.645800000000147e-05, 7.636100000000048e-05, 7.580499999999823e-05, 7.573599999999986e-05, 7.62639999999995e-05, 7.598600000000011e-05, 7.594500000000087e-05, 7.561099999999973e-05, 7.605600000000143e-05, 7.574999999999943e-05, 7.577799999999857e-05, 7.627799999999907e-05, 7.624999999999993e-05, 7.598699999999958e-05, 7.597200000000054e-05, 7.613899999999937e-05, 7.563900000000234e-05, 7.579099999999866e-05, 7.584700000000041e-05, 7.586099999999998e-05, 7.59029999999987e-05, 7.582000000000075e-05, 7.620799999999775e-05, 7.569500000000062e-05, 7.616699999999851e-05, 7.580600000000118e-05, 7.623699999999983e-05, 7.587499999999955e-05, 7.609700000000066e-05, 7.623600000000036e-05, 7.6457999999998e-05, 7.633300000000134e-05]</msg>
<status status="PASS" starttime="20201030 16:04:02.779" endtime="20201030 16:04:02.782"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.774" endtime="20201030 16:04:02.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:02.786" endtime="20201030 16:04:02.806"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.785" endtime="20201030 16:04:02.806"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.783" endtime="20201030 16:04:02.806"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.425" endtime="20201030 16:04:02.807"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.424" endtime="20201030 16:04:02.807"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.815" endtime="20201030 16:04:02.833"></status>
</kw>
<msg timestamp="20201030 16:04:02.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:02.814" endtime="20201030 16:04:02.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:02.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:02.834" endtime="20201030 16:04:02.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.837" endtime="20201030 16:04:02.838"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.811" endtime="20201030 16:04:02.839"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.809" endtime="20201030 16:04:02.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:02.846" endtime="20201030 16:04:03.132"></status>
</kw>
<msg timestamp="20201030 16:04:03.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:02.844" endtime="20201030 16:04:03.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:03.136" endtime="20201030 16:04:03.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.144" endtime="20201030 16:04:03.146"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.842" endtime="20201030 16:04:03.146"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.840" endtime="20201030 16:04:03.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:03.151" level="INFO">${RESULT} = [{'diff': 7.655600000000193e-05}, {'diff': 7.680499999999923e-05}, {'diff': 7.747200000000204e-05}, {'diff': 7.683300000000184e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.681900000000227e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:03.147" endtime="20201030 16:04:03.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:03.156" level="INFO">${ACCURACY} = {'diff': [7.655600000000193e-05, 7.680499999999923e-05, 7.747200000000204e-05, 7.683300000000184e-05, 7.702799999999982e-05, 7.681900000000227e-05, 7.730599999999921e-05, 7.684700000000141e-05, 7.7000...</msg>
<status status="PASS" starttime="20201030 16:04:03.152" endtime="20201030 16:04:03.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.160" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 16:04:03.159" endtime="20201030 16:04:03.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.162" level="INFO">VALUE: [7.655600000000193e-05, 7.680499999999923e-05, 7.747200000000204e-05, 7.683300000000184e-05, 7.702799999999982e-05, 7.681900000000227e-05, 7.730599999999921e-05, 7.684700000000141e-05, 7.700000000000068e-05, 7.650000000000018e-05, 7.700000000000068e-05, 7.695900000000144e-05, 7.672300000000076e-05, 7.673600000000086e-05, 7.7457999999999e-05, 7.708299999999862e-05, 7.691599999999979e-05, 7.734700000000191e-05, 7.661099999999726e-05, 7.74030000000002e-05, 7.68189999999988e-05, 7.722199999999832e-05, 7.666700000000248e-05, 7.697200000000154e-05, 7.748600000000161e-05, 7.691699999999926e-05, 7.72640000000005e-05, 7.684700000000141e-05, 7.734699999999844e-05, 7.745800000000247e-05, 7.687500000000055e-05, 7.727800000000007e-05, 7.655499999999898e-05, 7.691699999999926e-05, 7.711099999999776e-05, 7.730599999999921e-05, 7.70839999999981e-05, 7.680599999999871e-05, 7.706899999999905e-05, 7.665300000000291e-05, 7.702700000000035e-05, 7.701400000000025e-05, 7.723600000000136e-05, 7.704199999999939e-05, 7.691599999999979e-05, 7.715299999999994e-05, 7.702799999999982e-05, 7.69310000000023e-05, 7.715200000000047e-05, 7.71250000000008e-05]</msg>
<status status="PASS" starttime="20201030 16:04:03.161" endtime="20201030 16:04:03.163"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.157" endtime="20201030 16:04:03.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:03.168" endtime="20201030 16:04:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.166" endtime="20201030 16:04:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.165" endtime="20201030 16:04:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.808" endtime="20201030 16:04:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:02.807" endtime="20201030 16:04:03.188"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.197" endtime="20201030 16:04:03.214"></status>
</kw>
<msg timestamp="20201030 16:04:03.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:03.195" endtime="20201030 16:04:03.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:03.216" endtime="20201030 16:04:03.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.218" endtime="20201030 16:04:03.220"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.193" endtime="20201030 16:04:03.220"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.191" endtime="20201030 16:04:03.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.227" endtime="20201030 16:04:03.513"></status>
</kw>
<msg timestamp="20201030 16:04:03.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:03.226" endtime="20201030 16:04:03.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:03.517" endtime="20201030 16:04:03.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.526" endtime="20201030 16:04:03.527"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.223" endtime="20201030 16:04:03.528"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.221" endtime="20201030 16:04:03.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:03.532" level="INFO">${RESULT} = [{'diff': 7.750000000000118e-05}, {'diff': 7.786100000000198e-05}, {'diff': 7.804200000000039e-05}, {'diff': 7.816700000000051e-05}, {'diff': 7.808400000000257e-05}, {'diff': 7.780599999999971e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:03.529" endtime="20201030 16:04:03.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:03.536" level="INFO">${ACCURACY} = {'diff': [7.750000000000118e-05, 7.786100000000198e-05, 7.804200000000039e-05, 7.816700000000051e-05, 7.808400000000257e-05, 7.780599999999971e-05, 7.76250000000013e-05, 7.792999999999689e-05, 7.75689...</msg>
<status status="PASS" starttime="20201030 16:04:03.533" endtime="20201030 16:04:03.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.541" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 16:04:03.540" endtime="20201030 16:04:03.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.543" level="INFO">VALUE: [7.750000000000118e-05, 7.786100000000198e-05, 7.804200000000039e-05, 7.816700000000051e-05, 7.808400000000257e-05, 7.780599999999971e-05, 7.76250000000013e-05, 7.792999999999689e-05, 7.756899999999955e-05, 7.827699999999813e-05, 7.779200000000014e-05, 7.844400000000043e-05, 7.787500000000155e-05, 7.794500000000287e-05, 7.822300000000226e-05, 7.77779999999971e-05, 7.780599999999971e-05, 7.781999999999928e-05, 7.82640000000015e-05, 7.755599999999946e-05, 7.779100000000067e-05, 7.777699999999763e-05, 7.76250000000013e-05, 7.787499999999808e-05, 7.769399999999968e-05, 7.793099999999983e-05, 7.836100000000248e-05, 7.79169999999968e-05, 7.805599999999996e-05, 7.838900000000162e-05, 7.747200000000204e-05, 7.834799999999892e-05, 7.805500000000049e-05, 7.834699999999944e-05, 7.788800000000165e-05, 7.761099999999826e-05, 7.762499999999783e-05, 7.770799999999925e-05, 7.829200000000064e-05, 7.769399999999968e-05, 7.765299999999697e-05, 7.777800000000057e-05, 7.77770000000011e-05, 7.80839999999991e-05, 7.809800000000214e-05, 7.769399999999968e-05, 7.766700000000001e-05, 7.852799999999785e-05, 7.770800000000272e-05, 7.755499999999999e-05]</msg>
<status status="PASS" starttime="20201030 16:04:03.542" endtime="20201030 16:04:03.544"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.537" endtime="20201030 16:04:03.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:03.548" endtime="20201030 16:04:03.568"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.547" endtime="20201030 16:04:03.568"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.545" endtime="20201030 16:04:03.568"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.189" endtime="20201030 16:04:03.569"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.189" endtime="20201030 16:04:03.569"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.578" endtime="20201030 16:04:03.595"></status>
</kw>
<msg timestamp="20201030 16:04:03.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:03.576" endtime="20201030 16:04:03.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:03.597" endtime="20201030 16:04:03.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.600" endtime="20201030 16:04:03.601"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.573" endtime="20201030 16:04:03.602"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.571" endtime="20201030 16:04:03.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.609" endtime="20201030 16:04:03.895"></status>
</kw>
<msg timestamp="20201030 16:04:03.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020798389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:03.607" endtime="20201030 16:04:03.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020798389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020877361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:03.899" endtime="20201030 16:04:03.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.908" endtime="20201030 16:04:03.909"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.604" endtime="20201030 16:04:03.910"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.603" endtime="20201030 16:04:03.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:03.914" level="INFO">${RESULT} = [{'diff': 7.897200000000007e-05}, {'diff': 7.891700000000126e-05}, {'diff': 7.883399999999985e-05}, {'diff': 7.9458000000001e-05}, {'diff': 7.918100000000108e-05}, {'diff': 7.934700000000044e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:04:03.911" endtime="20201030 16:04:03.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:03.918" level="INFO">${ACCURACY} = {'diff': [7.897200000000007e-05, 7.891700000000126e-05, 7.883399999999985e-05, 7.9458000000001e-05, 7.918100000000108e-05, 7.934700000000044e-05, 7.912499999999933e-05, 7.850000000000218e-05, 7.874999...</msg>
<status status="PASS" starttime="20201030 16:04:03.915" endtime="20201030 16:04:03.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.923" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 16:04:03.922" endtime="20201030 16:04:03.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.925" level="INFO">VALUE: [7.897200000000007e-05, 7.891700000000126e-05, 7.883399999999985e-05, 7.9458000000001e-05, 7.918100000000108e-05, 7.934700000000044e-05, 7.912499999999933e-05, 7.850000000000218e-05, 7.874999999999896e-05, 7.944399999999796e-05, 7.930500000000174e-05, 7.937499999999958e-05, 7.886099999999951e-05, 7.869400000000068e-05, 7.873599999999939e-05, 7.886099999999951e-05, 7.918100000000108e-05, 7.870899999999972e-05, 7.897299999999954e-05, 7.920900000000022e-05, 7.857000000000003e-05, 7.90840000000001e-05, 7.870800000000025e-05, 7.886099999999951e-05, 7.934699999999698e-05, 7.905499999999802e-05, 7.882000000000028e-05, 7.89169999999978e-05, 7.888899999999865e-05, 7.934799999999992e-05, 7.851399999999828e-05, 7.904199999999792e-05, 7.870800000000025e-05, 7.849999999999871e-05, 7.868000000000111e-05, 7.884699999999994e-05, 7.900000000000268e-05, 7.854099999999795e-05, 7.863900000000187e-05, 7.858300000000012e-05, 7.856900000000056e-05, 7.873599999999939e-05, 7.886099999999951e-05, 7.922200000000032e-05, 7.944499999999743e-05, 7.879200000000114e-05, 7.882000000000028e-05, 7.938899999999915e-05, 7.884699999999994e-05, 7.92779999999986e-05]</msg>
<status status="PASS" starttime="20201030 16:04:03.924" endtime="20201030 16:04:03.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.919" endtime="20201030 16:04:03.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:03.937" endtime="20201030 16:04:03.957"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.936" endtime="20201030 16:04:03.958"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.935" endtime="20201030 16:04:03.958"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.570" endtime="20201030 16:04:03.958"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.569" endtime="20201030 16:04:03.958"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.967" endtime="20201030 16:04:03.985"></status>
</kw>
<msg timestamp="20201030 16:04:03.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:03.965" endtime="20201030 16:04:03.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:03.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:03.987" endtime="20201030 16:04:03.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.989" endtime="20201030 16:04:03.991"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.963" endtime="20201030 16:04:03.991"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.961" endtime="20201030 16:04:03.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:03.998" endtime="20201030 16:04:04.284"></status>
</kw>
<msg timestamp="20201030 16:04:04.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:03.997" endtime="20201030 16:04:04.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:04.289" endtime="20201030 16:04:04.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.297" endtime="20201030 16:04:04.299"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.994" endtime="20201030 16:04:04.299"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.992" endtime="20201030 16:04:04.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:04.303" level="INFO">${RESULT} = [{'diff': 8.004200000000239e-05}, {'diff': 7.968099999999811e-05}, {'diff': 8.036099999999755e-05}, {'diff': 7.993099999999836e-05}, {'diff': 8.044499999999843e-05}, {'diff': 7.95840000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:04.300" endtime="20201030 16:04:04.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:04.309" level="INFO">${ACCURACY} = {'diff': [8.004200000000239e-05, 7.968099999999811e-05, 8.036099999999755e-05, 7.993099999999836e-05, 8.044499999999843e-05, 7.95840000000006e-05, 8.034699999999798e-05, 8.019500000000165e-05, 7.94860...</msg>
<status status="PASS" starttime="20201030 16:04:04.304" endtime="20201030 16:04:04.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.313" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 16:04:04.312" endtime="20201030 16:04:04.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.315" level="INFO">VALUE: [8.004200000000239e-05, 7.968099999999811e-05, 8.036099999999755e-05, 7.993099999999836e-05, 8.044499999999843e-05, 7.95840000000006e-05, 8.034699999999798e-05, 8.019500000000165e-05, 7.948600000000014e-05, 7.973600000000039e-05, 7.988900000000312e-05, 8.048599999999767e-05, 7.979199999999867e-05, 7.998600000000064e-05, 7.983399999999738e-05, 7.956899999999809e-05, 7.965299999999897e-05, 8.02779999999996e-05, 7.976399999999953e-05, 7.986100000000051e-05, 8.023599999999742e-05, 7.994399999999846e-05, 8.038800000000068e-05, 8.031899999999884e-05, 7.97779999999991e-05, 8.000000000000021e-05, 7.954199999999842e-05, 7.951399999999928e-05, 8.015299999999947e-05, 8.018099999999861e-05, 7.976399999999953e-05, 7.962499999999983e-05, 8.038900000000015e-05, 8.030499999999927e-05, 8.044399999999896e-05, 7.97909999999992e-05, 8.022199999999785e-05, 7.992999999999889e-05, 7.998600000000064e-05, 7.998600000000064e-05, 7.995799999999803e-05, 8.022199999999785e-05, 8.04169999999993e-05, 8.016699999999904e-05, 8.002699999999988e-05, 8.015299999999947e-05, 7.990299999999922e-05, 7.954099999999895e-05, 7.991700000000226e-05, 7.992999999999889e-05]</msg>
<status status="PASS" starttime="20201030 16:04:04.314" endtime="20201030 16:04:04.316"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.309" endtime="20201030 16:04:04.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:04.320" endtime="20201030 16:04:04.340"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.319" endtime="20201030 16:04:04.340"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.318" endtime="20201030 16:04:04.341"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.959" endtime="20201030 16:04:04.341"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:03.959" endtime="20201030 16:04:04.341"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.350" endtime="20201030 16:04:04.368"></status>
</kw>
<msg timestamp="20201030 16:04:04.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:04.348" endtime="20201030 16:04:04.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:04.370" endtime="20201030 16:04:04.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.372" endtime="20201030 16:04:04.374"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.346" endtime="20201030 16:04:04.375"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.344" endtime="20201030 16:04:04.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.381" endtime="20201030 16:04:04.669"></status>
</kw>
<msg timestamp="20201030 16:04:04.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:04.380" endtime="20201030 16:04:04.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:04.673" endtime="20201030 16:04:04.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.681" endtime="20201030 16:04:04.683"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.377" endtime="20201030 16:04:04.683"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.376" endtime="20201030 16:04:04.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:04.688" level="INFO">${RESULT} = [{'diff': 8.138899999999769e-05}, {'diff': 8.105599999999949e-05}, {'diff': 8.097300000000154e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.150000000000171e-05}, {'diff': 8.145799999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:04.685" endtime="20201030 16:04:04.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:04.692" level="INFO">${ACCURACY} = {'diff': [8.138899999999769e-05, 8.105599999999949e-05, 8.097300000000154e-05, 8.138900000000115e-05, 8.150000000000171e-05, 8.145799999999953e-05, 8.052700000000038e-05, 8.102800000000035e-05, 8.1139...</msg>
<status status="PASS" starttime="20201030 16:04:04.689" endtime="20201030 16:04:04.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.696" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 16:04:04.695" endtime="20201030 16:04:04.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.699" level="INFO">VALUE: [8.138899999999769e-05, 8.105599999999949e-05, 8.097300000000154e-05, 8.138900000000115e-05, 8.150000000000171e-05, 8.145799999999953e-05, 8.052700000000038e-05, 8.102800000000035e-05, 8.11390000000009e-05, 8.116600000000057e-05, 8.054199999999942e-05, 8.108299999999916e-05, 8.122199999999885e-05, 8.140300000000072e-05, 8.111100000000177e-05, 8.119499999999918e-05, 8.133400000000235e-05, 8.081899999999934e-05, 8.081999999999881e-05, 8.077700000000063e-05, 8.11390000000009e-05, 8.115199999999753e-05, 8.098600000000164e-05, 8.080599999999924e-05, 8.106899999999959e-05, 8.095799999999903e-05, 8.11109999999983e-05, 8.049999999999724e-05, 8.068099999999911e-05, 8.129200000000017e-05, 8.1458000000003e-05, 8.118000000000014e-05, 8.111100000000177e-05, 8.11390000000009e-05, 8.140300000000072e-05, 8.081999999999881e-05, 8.062500000000083e-05, 8.080599999999924e-05, 8.106999999999906e-05, 8.112500000000133e-05, 8.09169999999998e-05, 8.056999999999856e-05, 8.07780000000001e-05, 8.052800000000332e-05, 8.055499999999952e-05, 8.109699999999873e-05, 8.080500000000324e-05, 8.120800000000275e-05, 8.062500000000083e-05, 8.06390000000004e-05]</msg>
<status status="PASS" starttime="20201030 16:04:04.698" endtime="20201030 16:04:04.700"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.693" endtime="20201030 16:04:04.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:04.704" endtime="20201030 16:04:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.702" endtime="20201030 16:04:04.724"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.701" endtime="20201030 16:04:04.724"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.342" endtime="20201030 16:04:04.724"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.341" endtime="20201030 16:04:04.725"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.733" endtime="20201030 16:04:04.753"></status>
</kw>
<msg timestamp="20201030 16:04:04.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:04.732" endtime="20201030 16:04:04.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:04.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:04.755" endtime="20201030 16:04:04.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.757" endtime="20201030 16:04:04.759"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.729" endtime="20201030 16:04:04.760"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.727" endtime="20201030 16:04:04.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:04.766" endtime="20201030 16:04:05.053"></status>
</kw>
<msg timestamp="20201030 16:04:05.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021235528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021317556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:04.765" endtime="20201030 16:04:05.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021235528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021317556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:05.057" endtime="20201030 16:04:05.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.066" endtime="20201030 16:04:05.067"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.762" endtime="20201030 16:04:05.068"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.761" endtime="20201030 16:04:05.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:05.072" level="INFO">${RESULT} = [{'diff': 8.202800000000135e-05}, {'diff': 8.172199999999935e-05}, {'diff': 8.222200000000332e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.240299999999826e-05}, {'diff': 8.172199999999935e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:05.069" endtime="20201030 16:04:05.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:05.076" level="INFO">${ACCURACY} = {'diff': [8.202800000000135e-05, 8.172199999999935e-05, 8.222200000000332e-05, 8.209699999999973e-05, 8.240299999999826e-05, 8.172199999999935e-05, 8.158299999999966e-05, 8.209699999999973e-05, 8.1653...</msg>
<status status="PASS" starttime="20201030 16:04:05.073" endtime="20201030 16:04:05.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.081" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 16:04:05.080" endtime="20201030 16:04:05.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.083" level="INFO">VALUE: [8.202800000000135e-05, 8.172199999999935e-05, 8.222200000000332e-05, 8.209699999999973e-05, 8.240299999999826e-05, 8.172199999999935e-05, 8.158299999999966e-05, 8.209699999999973e-05, 8.165300000000097e-05, 8.213899999999844e-05, 8.198599999999917e-05, 8.24720000000001e-05, 8.16390000000014e-05, 8.226400000000203e-05, 8.201399999999831e-05, 8.149999999999824e-05, 8.204100000000145e-05, 8.22780000000016e-05, 8.173599999999892e-05, 8.180600000000024e-05, 8.245800000000053e-05, 8.202800000000135e-05, 8.24170000000013e-05, 8.179200000000067e-05, 8.180600000000024e-05, 8.238899999999869e-05, 8.238799999999921e-05, 8.192999999999742e-05, 8.219400000000071e-05, 8.158299999999966e-05, 8.156900000000009e-05, 8.173599999999892e-05, 8.181999999999981e-05, 8.181999999999981e-05, 8.157000000000303e-05, 8.238899999999869e-05, 8.187500000000208e-05, 8.150000000000171e-05, 8.2152000000002e-05, 8.172199999999935e-05, 8.201399999999831e-05, 8.23330000000004e-05, 8.198599999999917e-05, 8.193000000000089e-05, 8.19719999999996e-05, 8.199999999999874e-05, 8.155599999999999e-05, 8.216700000000104e-05, 8.22230000000028e-05, 8.175000000000196e-05]</msg>
<status status="PASS" starttime="20201030 16:04:05.082" endtime="20201030 16:04:05.085"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.077" endtime="20201030 16:04:05.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:05.089" endtime="20201030 16:04:05.108"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.087" endtime="20201030 16:04:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.086" endtime="20201030 16:04:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.726" endtime="20201030 16:04:05.110"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:04.725" endtime="20201030 16:04:05.110"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.118" endtime="20201030 16:04:05.136"></status>
</kw>
<msg timestamp="20201030 16:04:05.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:05.117" endtime="20201030 16:04:05.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:05.138" endtime="20201030 16:04:05.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.140" endtime="20201030 16:04:05.142"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.114" endtime="20201030 16:04:05.142"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.112" endtime="20201030 16:04:05.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.149" endtime="20201030 16:04:05.436"></status>
</kw>
<msg timestamp="20201030 16:04:05.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020427653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:05.148" endtime="20201030 16:04:05.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020427653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:05.440" endtime="20201030 16:04:05.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.448" endtime="20201030 16:04:05.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.145" endtime="20201030 16:04:05.451"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.143" endtime="20201030 16:04:05.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:05.455" level="INFO">${RESULT} = [{'diff': 8.334700000000098e-05}, {'diff': 8.305600000000149e-05}, {'diff': 8.298699999999964e-05}, {'diff': 8.268000000000164e-05}, {'diff': 8.251399999999881e-05}, {'diff': 8.270800000000078e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:05.452" endtime="20201030 16:04:05.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:05.460" level="INFO">${ACCURACY} = {'diff': [8.334700000000098e-05, 8.305600000000149e-05, 8.298699999999964e-05, 8.268000000000164e-05, 8.251399999999881e-05, 8.270800000000078e-05, 8.299999999999974e-05, 8.267999999999817e-05, 8.2986...</msg>
<status status="PASS" starttime="20201030 16:04:05.456" endtime="20201030 16:04:05.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.464" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 16:04:05.463" endtime="20201030 16:04:05.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.467" level="INFO">VALUE: [8.334700000000098e-05, 8.305600000000149e-05, 8.298699999999964e-05, 8.268000000000164e-05, 8.251399999999881e-05, 8.270800000000078e-05, 8.299999999999974e-05, 8.267999999999817e-05, 8.298600000000017e-05, 8.344400000000196e-05, 8.330599999999827e-05, 8.26109999999998e-05, 8.304200000000192e-05, 8.27919999999982e-05, 8.344500000000143e-05, 8.323600000000042e-05, 8.323600000000042e-05, 8.28330000000009e-05, 8.273599999999992e-05, 8.263899999999894e-05, 8.338899999999969e-05, 8.329099999999923e-05, 8.322200000000085e-05, 8.2846999999997e-05, 8.286100000000005e-05, 8.340299999999926e-05, 8.322299999999686e-05, 8.34859999999972e-05, 8.316699999999858e-05, 8.254100000000195e-05, 8.281900000000134e-05, 8.316699999999858e-05, 8.298600000000017e-05, 8.316699999999858e-05, 8.270799999999731e-05, 8.327799999999913e-05, 8.338899999999969e-05, 8.250000000000271e-05, 8.279200000000167e-05, 8.262499999999937e-05, 8.334700000000098e-05, 8.331900000000184e-05, 8.327699999999966e-05, 8.290300000000222e-05, 8.251399999999881e-05, 8.34720000000011e-05, 8.286100000000005e-05, 8.313899999999944e-05, 8.298600000000017e-05, 8.27919999999982e-05]</msg>
<status status="PASS" starttime="20201030 16:04:05.466" endtime="20201030 16:04:05.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.461" endtime="20201030 16:04:05.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:05.472" endtime="20201030 16:04:05.491"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.470" endtime="20201030 16:04:05.492"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.469" endtime="20201030 16:04:05.492"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.111" endtime="20201030 16:04:05.493"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.110" endtime="20201030 16:04:05.493"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.501" endtime="20201030 16:04:05.519"></status>
</kw>
<msg timestamp="20201030 16:04:05.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:05.500" endtime="20201030 16:04:05.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:05.521" endtime="20201030 16:04:05.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.523" endtime="20201030 16:04:05.525"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.497" endtime="20201030 16:04:05.525"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.495" endtime="20201030 16:04:05.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.532" endtime="20201030 16:04:05.822"></status>
</kw>
<msg timestamp="20201030 16:04:05.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:05.531" endtime="20201030 16:04:05.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019829028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:05.828" endtime="20201030 16:04:05.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.839" endtime="20201030 16:04:05.841"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.528" endtime="20201030 16:04:05.842"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.526" endtime="20201030 16:04:05.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:05.848" level="INFO">${RESULT} = [{'diff': 8.449999999999777e-05}, {'diff': 8.370799999999831e-05}, {'diff': 8.419500000000218e-05}, {'diff': 8.398700000000064e-05}, {'diff': 8.420899999999829e-05}, {'diff': 8.358399999999766e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:05.843" endtime="20201030 16:04:05.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:05.853" level="INFO">${ACCURACY} = {'diff': [8.449999999999777e-05, 8.370799999999831e-05, 8.419500000000218e-05, 8.398700000000064e-05, 8.420899999999829e-05, 8.358399999999766e-05, 8.405499999999955e-05, 8.404099999999998e-05, 8.3819...</msg>
<status status="PASS" starttime="20201030 16:04:05.849" endtime="20201030 16:04:05.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.859" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 16:04:05.857" endtime="20201030 16:04:05.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.862" level="INFO">VALUE: [8.449999999999777e-05, 8.370799999999831e-05, 8.419500000000218e-05, 8.398700000000064e-05, 8.420899999999829e-05, 8.358399999999766e-05, 8.405499999999955e-05, 8.404099999999998e-05, 8.381900000000234e-05, 8.422199999999838e-05, 8.395800000000203e-05, 8.441699999999983e-05, 8.441699999999983e-05, 8.408300000000216e-05, 8.434799999999798e-05, 8.4153e-05, 8.426400000000056e-05, 8.355599999999852e-05, 8.444399999999949e-05, 8.418100000000261e-05, 8.373600000000092e-05, 8.444399999999949e-05, 8.427800000000013e-05, 8.42919999999997e-05, 8.350000000000024e-05, 8.413900000000044e-05, 8.420900000000175e-05, 8.386199999999705e-05, 8.422199999999838e-05, 8.404199999999945e-05, 8.399999999999727e-05, 8.406899999999912e-05, 8.358299999999819e-05, 8.423599999999795e-05, 8.36529999999995e-05, 8.449999999999777e-05, 8.397199999999813e-05, 8.387500000000062e-05, 8.433399999999841e-05, 8.383399999999791e-05, 8.40980000000012e-05, 8.384700000000148e-05, 8.399999999999727e-05, 8.395800000000203e-05, 8.372199999999788e-05, 8.36529999999995e-05, 8.395800000000203e-05, 8.416700000000304e-05, 8.388900000000019e-05, 8.423600000000142e-05]</msg>
<status status="PASS" starttime="20201030 16:04:05.860" endtime="20201030 16:04:05.863"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.854" endtime="20201030 16:04:05.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:05.867" endtime="20201030 16:04:05.886"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.865" endtime="20201030 16:04:05.887"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.864" endtime="20201030 16:04:05.887"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.494" endtime="20201030 16:04:05.888"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.493" endtime="20201030 16:04:05.888"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.896" endtime="20201030 16:04:05.962"></status>
</kw>
<msg timestamp="20201030 16:04:05.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:05.895" endtime="20201030 16:04:05.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:05.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:05.964" endtime="20201030 16:04:05.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.967" endtime="20201030 16:04:05.968"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.892" endtime="20201030 16:04:05.969"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.890" endtime="20201030 16:04:05.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:05.975" endtime="20201030 16:04:06.262"></status>
</kw>
<msg timestamp="20201030 16:04:06.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066370347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066455792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:05.974" endtime="20201030 16:04:06.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066370347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066455792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:06.266" endtime="20201030 16:04:06.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.274" endtime="20201030 16:04:06.276"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.971" endtime="20201030 16:04:06.277"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.970" endtime="20201030 16:04:06.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:06.281" level="INFO">${RESULT} = [{'diff': 8.544500000000343e-05}, {'diff': 8.451399999999387e-05}, {'diff': 8.519399999999677e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.452700000000091e-05}, {'diff': 8.5332999999993e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:04:06.278" endtime="20201030 16:04:06.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:06.285" level="INFO">${ACCURACY} = {'diff': [8.544500000000343e-05, 8.451399999999387e-05, 8.519399999999677e-05, 8.455599999999952e-05, 8.452700000000091e-05, 8.5332999999993e-05, 8.49720000000026e-05, 8.46669999999966e-05, 8.47920000...</msg>
<status status="PASS" starttime="20201030 16:04:06.282" endtime="20201030 16:04:06.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.290" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 16:04:06.289" endtime="20201030 16:04:06.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.292" level="INFO">VALUE: [8.544500000000343e-05, 8.451399999999387e-05, 8.519399999999677e-05, 8.455599999999952e-05, 8.452700000000091e-05, 8.5332999999993e-05, 8.49720000000026e-05, 8.46669999999966e-05, 8.47920000000002e-05, 8.504199999999351e-05, 8.473599999998804e-05, 8.475000000000843e-05, 8.454099999999354e-05, 8.484799999999848e-05, 8.547199999998922e-05, 8.536100000000602e-05, 8.491599999999044e-05, 8.462500000000484e-05, 8.472199999999541e-05, 8.490299999999729e-05, 8.531999999999984e-05, 8.534799999999898e-05, 8.498599999999523e-05, 8.481999999999934e-05, 8.523600000000242e-05, 8.544500000000343e-05, 8.523600000000242e-05, 8.508299999999969e-05, 8.522199999999591e-05, 8.498600000000911e-05, 8.512499999999146e-05, 8.52920000000007e-05, 8.518100000000361e-05, 8.54170000000043e-05, 8.474999999999455e-05, 8.484799999999848e-05, 8.450000000000124e-05, 8.450000000000124e-05, 8.505600000000002e-05, 8.504100000000792e-05, 8.529100000000123e-05, 8.536100000000602e-05, 8.480500000000724e-05, 8.46520000000045e-05, 8.530599999999333e-05, 8.54310000000108e-05, 8.477799999999369e-05, 8.508399999999916e-05, 8.484799999999848e-05, 8.498700000000858e-05]</msg>
<status status="PASS" starttime="20201030 16:04:06.291" endtime="20201030 16:04:06.293"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.286" endtime="20201030 16:04:06.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:06.297" endtime="20201030 16:04:06.317"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.296" endtime="20201030 16:04:06.317"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.295" endtime="20201030 16:04:06.318"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.889" endtime="20201030 16:04:06.318"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:05.888" endtime="20201030 16:04:06.318"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.327" endtime="20201030 16:04:06.345"></status>
</kw>
<msg timestamp="20201030 16:04:06.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:06.325" endtime="20201030 16:04:06.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:06.346" endtime="20201030 16:04:06.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.349" endtime="20201030 16:04:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.323" endtime="20201030 16:04:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.321" endtime="20201030 16:04:06.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.358" endtime="20201030 16:04:06.645"></status>
</kw>
<msg timestamp="20201030 16:04:06.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:06.356" endtime="20201030 16:04:06.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:06.649" endtime="20201030 16:04:06.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.658" endtime="20201030 16:04:06.659"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.354" endtime="20201030 16:04:06.660"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.352" endtime="20201030 16:04:06.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:06.665" level="INFO">${RESULT} = [{'diff': 8.555500000000105e-05}, {'diff': 8.555500000000105e-05}, {'diff': 8.641599999999888e-05}, {'diff': 8.574999999999902e-05}, {'diff': 8.650000000000324e-05}, {'diff': 8.570800000000031e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:06.661" endtime="20201030 16:04:06.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:06.670" level="INFO">${ACCURACY} = {'diff': [8.555500000000105e-05, 8.555500000000105e-05, 8.641599999999888e-05, 8.574999999999902e-05, 8.650000000000324e-05, 8.570800000000031e-05, 8.638899999999922e-05, 8.577799999999816e-05, 8.5695...</msg>
<status status="PASS" starttime="20201030 16:04:06.666" endtime="20201030 16:04:06.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.675" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 16:04:06.674" endtime="20201030 16:04:06.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.678" level="INFO">VALUE: [8.555500000000105e-05, 8.555500000000105e-05, 8.641599999999888e-05, 8.574999999999902e-05, 8.650000000000324e-05, 8.570800000000031e-05, 8.638899999999922e-05, 8.577799999999816e-05, 8.569500000000022e-05, 8.56530000000015e-05, 8.549999999999877e-05, 8.6153000000002e-05, 8.580499999999783e-05, 8.643000000000192e-05, 8.56799999999977e-05, 8.647200000000063e-05, 8.641700000000183e-05, 8.590300000000176e-05, 8.632000000000084e-05, 8.619500000000072e-05, 8.576400000000206e-05, 8.605600000000102e-05, 8.577799999999816e-05, 8.581900000000087e-05, 8.599999999999927e-05, 8.576400000000206e-05, 8.594400000000099e-05, 8.579099999999826e-05, 8.572199999999988e-05, 8.638899999999922e-05, 8.631900000000137e-05, 8.591700000000133e-05, 8.604200000000145e-05, 8.632000000000084e-05, 8.602799999999841e-05, 8.600000000000274e-05, 8.557000000000009e-05, 8.624999999999952e-05, 8.620800000000081e-05, 8.56249999999989e-05, 8.561099999999933e-05, 8.647199999999716e-05, 8.640299999999879e-05, 8.550000000000224e-05, 8.624999999999952e-05, 8.602800000000188e-05, 8.626400000000256e-05, 8.59310000000009e-05, 8.586099999999958e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201030 16:04:06.676" endtime="20201030 16:04:06.678"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.671" endtime="20201030 16:04:06.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:06.682" endtime="20201030 16:04:06.703"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.681" endtime="20201030 16:04:06.703"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.680" endtime="20201030 16:04:06.704"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.319" endtime="20201030 16:04:06.704"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.319" endtime="20201030 16:04:06.704"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.713" endtime="20201030 16:04:06.732"></status>
</kw>
<msg timestamp="20201030 16:04:06.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:06.711" endtime="20201030 16:04:06.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:06.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:06.734" endtime="20201030 16:04:06.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.737" endtime="20201030 16:04:06.739"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.709" endtime="20201030 16:04:06.739"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.707" endtime="20201030 16:04:06.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:06.748" endtime="20201030 16:04:07.035"></status>
</kw>
<msg timestamp="20201030 16:04:07.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02089875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:06.745" endtime="20201030 16:04:07.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020811875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02089875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:07.039" endtime="20201030 16:04:07.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.047" endtime="20201030 16:04:07.049"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.742" endtime="20201030 16:04:07.050"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.740" endtime="20201030 16:04:07.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:07.054" level="INFO">${RESULT} = [{'diff': 8.687500000000015e-05}, {'diff': 8.691699999999886e-05}, {'diff': 8.729199999999923e-05}, {'diff': 8.727799999999966e-05}, {'diff': 8.673600000000045e-05}, {'diff': 8.73059999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:07.051" endtime="20201030 16:04:07.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:07.058" level="INFO">${ACCURACY} = {'diff': [8.687500000000015e-05, 8.691699999999886e-05, 8.729199999999923e-05, 8.727799999999966e-05, 8.673600000000045e-05, 8.73059999999988e-05, 8.672200000000088e-05, 8.668000000000217e-05, 8.67769...</msg>
<status status="PASS" starttime="20201030 16:04:07.055" endtime="20201030 16:04:07.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.062" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 16:04:07.061" endtime="20201030 16:04:07.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.065" level="INFO">VALUE: [8.687500000000015e-05, 8.691699999999886e-05, 8.729199999999923e-05, 8.727799999999966e-05, 8.673600000000045e-05, 8.73059999999988e-05, 8.672200000000088e-05, 8.668000000000217e-05, 8.677699999999969e-05, 8.740200000000031e-05, 8.66799999999987e-05, 8.745799999999859e-05, 8.71120000000003e-05, 8.676399999999959e-05, 8.690299999999929e-05, 8.69860000000007e-05, 8.722300000000086e-05, 8.727700000000019e-05, 8.677800000000263e-05, 8.665299999999904e-05, 8.695799999999809e-05, 8.683299999999797e-05, 8.691599999999938e-05, 8.736100000000108e-05, 8.737500000000065e-05, 8.675000000000002e-05, 8.71669999999991e-05, 8.729199999999923e-05, 8.663899999999947e-05, 8.698700000000018e-05, 8.658300000000119e-05, 8.736099999999761e-05, 8.688899999999972e-05, 8.740299999999979e-05, 8.750000000000077e-05, 8.656899999999815e-05, 8.669500000000122e-05, 8.683299999999797e-05, 8.6944999999998e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.743099999999893e-05, 8.675000000000002e-05, 8.747200000000163e-05, 8.741599999999988e-05, 8.659700000000076e-05, 8.68050000000023e-05, 8.69860000000007e-05, 8.651399999999934e-05, 8.729199999999923e-05]</msg>
<status status="PASS" starttime="20201030 16:04:07.063" endtime="20201030 16:04:07.066"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.059" endtime="20201030 16:04:07.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:07.070" endtime="20201030 16:04:07.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.068" endtime="20201030 16:04:07.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.067" endtime="20201030 16:04:07.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.705" endtime="20201030 16:04:07.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:06.705" endtime="20201030 16:04:07.091"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.100" endtime="20201030 16:04:07.118"></status>
</kw>
<msg timestamp="20201030 16:04:07.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:07.099" endtime="20201030 16:04:07.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:07.120" endtime="20201030 16:04:07.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.123" endtime="20201030 16:04:07.125"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.095" endtime="20201030 16:04:07.125"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.093" endtime="20201030 16:04:07.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.132" endtime="20201030 16:04:07.419"></status>
</kw>
<msg timestamp="20201030 16:04:07.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020896, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020984375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:04:07.131" endtime="20201030 16:04:07.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020896, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020984375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 16:04:07.423" endtime="20201030 16:04:07.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.431" endtime="20201030 16:04:07.433"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.128" endtime="20201030 16:04:07.434"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.126" endtime="20201030 16:04:07.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:07.438" level="INFO">${RESULT} = [{'diff': 8.837499999999818e-05}, {'diff': 8.754199999999948e-05}, {'diff': 8.83059999999998e-05}, {'diff': 8.783400000000191e-05}, {'diff': 8.833299999999947e-05}, {'diff': 8.748700000000068e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:07.435" endtime="20201030 16:04:07.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:07.442" level="INFO">${ACCURACY} = {'diff': [8.837499999999818e-05, 8.754199999999948e-05, 8.83059999999998e-05, 8.783400000000191e-05, 8.833299999999947e-05, 8.748700000000068e-05, 8.840200000000131e-05, 8.793000000000342e-05, 8.80970...</msg>
<status status="PASS" starttime="20201030 16:04:07.439" endtime="20201030 16:04:07.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.447" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 16:04:07.446" endtime="20201030 16:04:07.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.450" level="INFO">VALUE: [8.837499999999818e-05, 8.754199999999948e-05, 8.83059999999998e-05, 8.783400000000191e-05, 8.833299999999947e-05, 8.748700000000068e-05, 8.840200000000131e-05, 8.793000000000342e-05, 8.809700000000226e-05, 8.813900000000097e-05, 8.801400000000084e-05, 8.845799999999959e-05, 8.781999999999887e-05, 8.779199999999973e-05, 8.78059999999993e-05, 8.78189999999994e-05, 8.76799999999997e-05, 8.762499999999743e-05, 8.844400000000002e-05, 8.829099999999729e-05, 8.76799999999997e-05, 8.784699999999854e-05, 8.78189999999994e-05, 8.770899999999832e-05, 8.804199999999998e-05, 8.797199999999866e-05, 8.838900000000122e-05, 8.815300000000054e-05, 8.818099999999968e-05, 8.816600000000063e-05, 8.800000000000127e-05, 8.804099999999704e-05, 8.843000000000045e-05, 8.826399999999762e-05, 8.78189999999994e-05, 8.804199999999998e-05, 8.793099999999943e-05, 8.779199999999973e-05, 8.826399999999762e-05, 8.793099999999943e-05, 8.76250000000009e-05, 8.769399999999927e-05, 8.79860000000017e-05, 8.833299999999947e-05, 8.759699999999829e-05, 8.809699999999879e-05, 8.837499999999818e-05, 8.844400000000002e-05, 8.843099999999993e-05, 8.793099999999943e-05]</msg>
<status status="PASS" starttime="20201030 16:04:07.448" endtime="20201030 16:04:07.451"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.443" endtime="20201030 16:04:07.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:07.455" endtime="20201030 16:04:07.474"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.453" endtime="20201030 16:04:07.475"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.452" endtime="20201030 16:04:07.475"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.092" endtime="20201030 16:04:07.475"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.091" endtime="20201030 16:04:07.475"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.484" endtime="20201030 16:04:07.503"></status>
</kw>
<msg timestamp="20201030 16:04:07.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:07.483" endtime="20201030 16:04:07.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:07.505" endtime="20201030 16:04:07.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.507" endtime="20201030 16:04:07.509"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.480" endtime="20201030 16:04:07.509"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.478" endtime="20201030 16:04:07.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.516" endtime="20201030 16:04:07.801"></status>
</kw>
<msg timestamp="20201030 16:04:07.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:07.514" endtime="20201030 16:04:07.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019663042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:07.805" endtime="20201030 16:04:07.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.814" endtime="20201030 16:04:07.815"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.512" endtime="20201030 16:04:07.816"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.510" endtime="20201030 16:04:07.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:07.820" level="INFO">${RESULT} = [{'diff': 8.945900000000007e-05}, {'diff': 8.945900000000007e-05}, {'diff': 8.852800000000091e-05}, {'diff': 8.934700000000004e-05}, {'diff': 8.86800000000007e-05}, {'diff': 8.880500000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:07.817" endtime="20201030 16:04:07.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:07.825" level="INFO">${ACCURACY} = {'diff': [8.945900000000007e-05, 8.945900000000007e-05, 8.852800000000091e-05, 8.934700000000004e-05, 8.86800000000007e-05, 8.880500000000083e-05, 8.858299999999972e-05, 8.905500000000108e-05, 8.92780...</msg>
<status status="PASS" starttime="20201030 16:04:07.821" endtime="20201030 16:04:07.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.830" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 16:04:07.829" endtime="20201030 16:04:07.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.832" level="INFO">VALUE: [8.945900000000007e-05, 8.945900000000007e-05, 8.852800000000091e-05, 8.934700000000004e-05, 8.86800000000007e-05, 8.880500000000083e-05, 8.858299999999972e-05, 8.905500000000108e-05, 8.927800000000166e-05, 8.917999999999773e-05, 8.852800000000091e-05, 8.84999999999983e-05, 8.924999999999905e-05, 8.932000000000037e-05, 8.923699999999896e-05, 8.945900000000007e-05, 8.888899999999825e-05, 8.941600000000188e-05, 8.879100000000126e-05, 8.858299999999972e-05, 8.920800000000034e-05, 8.902799999999794e-05, 8.91939999999973e-05, 8.856999999999962e-05, 8.857000000000309e-05, 8.872199999999941e-05, 8.84999999999983e-05, 8.856999999999962e-05, 8.858299999999972e-05, 8.948599999999973e-05, 8.886099999999911e-05, 8.887499999999868e-05, 8.947200000000016e-05, 8.934700000000004e-05, 8.886100000000258e-05, 8.865300000000104e-05, 8.93199999999969e-05, 8.883399999999944e-05, 8.86670000000006e-05, 8.911199999999883e-05, 8.913900000000197e-05, 8.906899999999718e-05, 8.86519999999981e-05, 8.927799999999819e-05, 8.901399999999837e-05, 8.881999999999987e-05, 8.877800000000116e-05, 8.884700000000301e-05, 8.852800000000091e-05, 8.892999999999748e-05]</msg>
<status status="PASS" starttime="20201030 16:04:07.831" endtime="20201030 16:04:07.833"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.826" endtime="20201030 16:04:07.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:07.837" endtime="20201030 16:04:07.857"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.836" endtime="20201030 16:04:07.858"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.835" endtime="20201030 16:04:07.858"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.476" endtime="20201030 16:04:07.858"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.476" endtime="20201030 16:04:07.858"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.867" endtime="20201030 16:04:07.885"></status>
</kw>
<msg timestamp="20201030 16:04:07.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:07.865" endtime="20201030 16:04:07.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:07.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:07.886" endtime="20201030 16:04:07.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.889" endtime="20201030 16:04:07.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.863" endtime="20201030 16:04:07.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.861" endtime="20201030 16:04:07.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:07.898" endtime="20201030 16:04:08.185"></status>
</kw>
<msg timestamp="20201030 16:04:08.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019747569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:07.896" endtime="20201030 16:04:08.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019747569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:08.190" endtime="20201030 16:04:08.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.198" endtime="20201030 16:04:08.200"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.894" endtime="20201030 16:04:08.200"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.892" endtime="20201030 16:04:08.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:08.205" level="INFO">${RESULT} = [{'diff': 8.991599999999891e-05}, {'diff': 8.972199999999694e-05}, {'diff': 8.977699999999922e-05}, {'diff': 8.974999999999955e-05}, {'diff': 9.009800000000026e-05}, {'diff': 9.004199999999851e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:08.201" endtime="20201030 16:04:08.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:08.209" level="INFO">${ACCURACY} = {'diff': [8.991599999999891e-05, 8.972199999999694e-05, 8.977699999999922e-05, 8.974999999999955e-05, 9.009800000000026e-05, 9.004199999999851e-05, 8.965299999999857e-05, 9.002800000000241e-05, 8.9749...</msg>
<status status="PASS" starttime="20201030 16:04:08.206" endtime="20201030 16:04:08.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.213" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 16:04:08.212" endtime="20201030 16:04:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.215" level="INFO">VALUE: [8.991599999999891e-05, 8.972199999999694e-05, 8.977699999999922e-05, 8.974999999999955e-05, 9.009800000000026e-05, 9.004199999999851e-05, 8.965299999999857e-05, 9.002800000000241e-05, 8.974999999999955e-05, 9.012499999999993e-05, 8.993100000000143e-05, 9.034800000000051e-05, 9.044499999999803e-05, 9.03190000000019e-05, 9.011100000000036e-05, 9.029099999999929e-05, 9.004199999999851e-05, 9.036100000000061e-05, 8.956900000000115e-05, 8.94999999999993e-05, 9.027799999999919e-05, 9.038899999999975e-05, 9.016699999999864e-05, 9.022300000000039e-05, 9.008400000000069e-05, 8.962499999999943e-05, 8.997199999999719e-05, 8.995800000000109e-05, 8.948599999999973e-05, 9.001400000000284e-05, 9.034700000000104e-05, 8.963900000000247e-05, 9.045900000000107e-05, 9.007000000000112e-05, 9.005599999999808e-05, 8.993099999999796e-05, 9.025000000000005e-05, 9.001399999999937e-05, 9.038899999999975e-05, 9.037500000000018e-05, 8.952799999999844e-05, 8.99999999999998e-05, 9.031899999999843e-05, 8.958400000000019e-05, 8.963800000000299e-05, 8.958400000000019e-05, 9.042999999999898e-05, 8.951399999999887e-05, 8.986100000000011e-05, 9.023600000000048e-05]</msg>
<status status="PASS" starttime="20201030 16:04:08.214" endtime="20201030 16:04:08.216"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.210" endtime="20201030 16:04:08.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:08.220" endtime="20201030 16:04:08.240"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.219" endtime="20201030 16:04:08.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.218" endtime="20201030 16:04:08.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.859" endtime="20201030 16:04:08.241"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:07.859" endtime="20201030 16:04:08.241"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.251" endtime="20201030 16:04:08.269"></status>
</kw>
<msg timestamp="20201030 16:04:08.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:08.248" endtime="20201030 16:04:08.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:08.271" endtime="20201030 16:04:08.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.273" endtime="20201030 16:04:08.275"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.246" endtime="20201030 16:04:08.275"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.244" endtime="20201030 16:04:08.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.282" endtime="20201030 16:04:08.568"></status>
</kw>
<msg timestamp="20201030 16:04:08.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:08.281" endtime="20201030 16:04:08.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:08.572" endtime="20201030 16:04:08.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.580" endtime="20201030 16:04:08.582"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.278" endtime="20201030 16:04:08.582"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.276" endtime="20201030 16:04:08.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:08.587" level="INFO">${RESULT} = [{'diff': 9.127800000000019e-05}, {'diff': 9.086100000000111e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.116699999999964e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.101400000000037e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:08.584" endtime="20201030 16:04:08.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:08.591" level="INFO">${ACCURACY} = {'diff': [9.127800000000019e-05, 9.086100000000111e-05, 9.115300000000007e-05, 9.116699999999964e-05, 9.075000000000055e-05, 9.101400000000037e-05, 9.106999999999865e-05, 9.091699999999939e-05, 9.0958...</msg>
<status status="PASS" starttime="20201030 16:04:08.588" endtime="20201030 16:04:08.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.596" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 16:04:08.594" endtime="20201030 16:04:08.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.599" level="INFO">VALUE: [9.127800000000019e-05, 9.086100000000111e-05, 9.115300000000007e-05, 9.116699999999964e-05, 9.075000000000055e-05, 9.101400000000037e-05, 9.106999999999865e-05, 9.091699999999939e-05, 9.09589999999981e-05, 9.102700000000047e-05, 9.06939999999988e-05, 9.125000000000105e-05, 9.066599999999966e-05, 9.06939999999988e-05, 9.087500000000068e-05, 9.073600000000098e-05, 9.136199999999761e-05, 9.140300000000032e-05, 9.138900000000075e-05, 9.116699999999964e-05, 9.14719999999987e-05, 9.1332999999999e-05, 9.098600000000123e-05, 9.087500000000068e-05, 9.133399999999847e-05, 9.112500000000093e-05, 9.105599999999908e-05, 9.079199999999926e-05, 9.070900000000132e-05, 9.116699999999964e-05, 9.120900000000182e-05, 9.0639e-05, 9.111100000000136e-05, 9.104100000000004e-05, 9.08199999999984e-05, 9.066599999999966e-05, 9.054199999999901e-05, 9.140300000000032e-05, 9.091699999999939e-05, 9.058400000000119e-05, 9.122199999999844e-05, 9.136099999999814e-05, 9.102799999999994e-05, 9.059699999999782e-05, 9.094399999999905e-05, 9.061099999999739e-05, 9.101400000000037e-05, 9.145799999999912e-05, 9.105599999999908e-05, 9.0639e-05]</msg>
<status status="PASS" starttime="20201030 16:04:08.597" endtime="20201030 16:04:08.599"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.592" endtime="20201030 16:04:08.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:08.604" endtime="20201030 16:04:08.623"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.602" endtime="20201030 16:04:08.624"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.601" endtime="20201030 16:04:08.624"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.242" endtime="20201030 16:04:08.624"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.242" endtime="20201030 16:04:08.624"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.633" endtime="20201030 16:04:08.653"></status>
</kw>
<msg timestamp="20201030 16:04:08.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:08.631" endtime="20201030 16:04:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:08.655" endtime="20201030 16:04:08.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.657" endtime="20201030 16:04:08.659"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.629" endtime="20201030 16:04:08.659"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.627" endtime="20201030 16:04:08.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.666" endtime="20201030 16:04:08.952"></status>
</kw>
<msg timestamp="20201030 16:04:08.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:08.665" endtime="20201030 16:04:08.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020544819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:08.956" endtime="20201030 16:04:08.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:08.964" endtime="20201030 16:04:08.966"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.662" endtime="20201030 16:04:08.966"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.660" endtime="20201030 16:04:08.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:08.971" level="INFO">${RESULT} = [{'diff': 9.172199999999894e-05}, {'diff': 9.176399999999765e-05}, {'diff': 9.245800000000012e-05}, {'diff': 9.177800000000069e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.212499999999846e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:08.968" endtime="20201030 16:04:08.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:08.976" level="INFO">${ACCURACY} = {'diff': [9.172199999999894e-05, 9.176399999999765e-05, 9.245800000000012e-05, 9.177800000000069e-05, 9.179200000000026e-05, 9.212499999999846e-05, 9.193099999999996e-05, 9.176399999999765e-05, 9.1708...</msg>
<status status="PASS" starttime="20201030 16:04:08.972" endtime="20201030 16:04:08.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.980" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 16:04:08.979" endtime="20201030 16:04:08.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:08.983" level="INFO">VALUE: [9.172199999999894e-05, 9.176399999999765e-05, 9.245800000000012e-05, 9.177800000000069e-05, 9.179200000000026e-05, 9.212499999999846e-05, 9.193099999999996e-05, 9.176399999999765e-05, 9.170899999999885e-05, 9.170900000000232e-05, 9.215300000000107e-05, 9.156999999999915e-05, 9.206900000000018e-05, 9.19719999999992e-05, 9.204100000000104e-05, 9.211099999999889e-05, 9.170799999999937e-05, 9.194499999999953e-05, 9.155599999999958e-05, 9.215300000000107e-05, 9.166700000000014e-05, 9.152800000000044e-05, 9.223600000000248e-05, 9.181899999999993e-05, 9.149999999999783e-05, 9.15139999999974e-05, 9.234699999999957e-05, 9.169499999999928e-05, 9.158300000000272e-05, 9.20000000000018e-05, 9.219500000000325e-05, 9.183399999999897e-05, 9.172199999999894e-05, 9.209799999999879e-05, 9.176300000000165e-05, 9.15000000000013e-05, 9.15139999999974e-05, 9.224999999999858e-05, 9.248600000000273e-05, 9.184699999999907e-05, 9.190300000000082e-05, 9.205500000000061e-05, 9.229199999999729e-05, 9.224999999999858e-05, 9.184799999999854e-05, 9.148699999999774e-05, 9.176299999999818e-05, 9.236100000000261e-05, 9.191700000000039e-05, 9.179100000000079e-05]</msg>
<status status="PASS" starttime="20201030 16:04:08.981" endtime="20201030 16:04:08.988"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.977" endtime="20201030 16:04:08.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:08.992" endtime="20201030 16:04:09.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.990" endtime="20201030 16:04:09.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.989" endtime="20201030 16:04:09.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.625" endtime="20201030 16:04:09.013"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:08.625" endtime="20201030 16:04:09.013"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.022" endtime="20201030 16:04:09.040"></status>
</kw>
<msg timestamp="20201030 16:04:09.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:09.020" endtime="20201030 16:04:09.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:09.041" endtime="20201030 16:04:09.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.043" endtime="20201030 16:04:09.045"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.017" endtime="20201030 16:04:09.046"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.015" endtime="20201030 16:04:09.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.052" endtime="20201030 16:04:09.338"></status>
</kw>
<msg timestamp="20201030 16:04:09.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:09.051" endtime="20201030 16:04:09.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:09.343" endtime="20201030 16:04:09.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.351" endtime="20201030 16:04:09.353"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.048" endtime="20201030 16:04:09.353"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.047" endtime="20201030 16:04:09.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:09.358" level="INFO">${RESULT} = [{'diff': 9.267999999999776e-05}, {'diff': 9.291599999999844e-05}, {'diff': 9.3026999999999e-05}, {'diff': 9.280500000000136e-05}, {'diff': 9.308300000000075e-05}, {'diff': 9.326299999999968e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:04:09.354" endtime="20201030 16:04:09.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:09.362" level="INFO">${ACCURACY} = {'diff': [9.267999999999776e-05, 9.291599999999844e-05, 9.3026999999999e-05, 9.280500000000136e-05, 9.308300000000075e-05, 9.326299999999968e-05, 9.344499999999756e-05, 9.295799999999715e-05, 9.277800...</msg>
<status status="PASS" starttime="20201030 16:04:09.359" endtime="20201030 16:04:09.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.366" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 16:04:09.365" endtime="20201030 16:04:09.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.369" level="INFO">VALUE: [9.267999999999776e-05, 9.291599999999844e-05, 9.3026999999999e-05, 9.280500000000136e-05, 9.308300000000075e-05, 9.326299999999968e-05, 9.344499999999756e-05, 9.295799999999715e-05, 9.277800000000169e-05, 9.304099999999857e-05, 9.263800000000252e-05, 9.323600000000001e-05, 9.273600000000298e-05, 9.31940000000013e-05, 9.27079999999969e-05, 9.29720000000002e-05, 9.341699999999842e-05, 9.298599999999976e-05, 9.29720000000002e-05, 9.274999999999908e-05, 9.316700000000164e-05, 9.258399999999972e-05, 9.322200000000044e-05, 9.334700000000057e-05, 9.329100000000229e-05, 9.298599999999976e-05, 9.304200000000151e-05, 9.255600000000058e-05, 9.293100000000096e-05, 9.337499999999971e-05, 9.34720000000007e-05, 9.333400000000047e-05, 9.322299999999992e-05, 9.331899999999796e-05, 9.301299999999943e-05, 9.323600000000001e-05, 9.262499999999896e-05, 9.293100000000096e-05, 9.275000000000255e-05, 9.324999999999958e-05, 9.290300000000182e-05, 9.311099999999989e-05, 9.302800000000194e-05, 9.259799999999929e-05, 9.34590000000006e-05, 9.340199999999937e-05, 9.26520000000021e-05, 9.331899999999796e-05, 9.279199999999779e-05, 9.327799999999872e-05]</msg>
<status status="PASS" starttime="20201030 16:04:09.367" endtime="20201030 16:04:09.369"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.362" endtime="20201030 16:04:09.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:09.373" endtime="20201030 16:04:09.393"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.372" endtime="20201030 16:04:09.394"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.371" endtime="20201030 16:04:09.394"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.014" endtime="20201030 16:04:09.394"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.013" endtime="20201030 16:04:09.394"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.403" endtime="20201030 16:04:09.424"></status>
</kw>
<msg timestamp="20201030 16:04:09.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:09.401" endtime="20201030 16:04:09.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:09.425" endtime="20201030 16:04:09.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.428" endtime="20201030 16:04:09.429"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.399" endtime="20201030 16:04:09.430"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.397" endtime="20201030 16:04:09.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.437" endtime="20201030 16:04:09.723"></status>
</kw>
<msg timestamp="20201030 16:04:09.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:09.435" endtime="20201030 16:04:09.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022268125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022361806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:09.727" endtime="20201030 16:04:09.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.736" endtime="20201030 16:04:09.737"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.433" endtime="20201030 16:04:09.738"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.431" endtime="20201030 16:04:09.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:09.742" level="INFO">${RESULT} = [{'diff': 9.368100000000171e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.381900000000193e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.415200000000012e-05}, {'diff': 9.367999999999876e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:09.739" endtime="20201030 16:04:09.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:09.746" level="INFO">${ACCURACY} = {'diff': [9.368100000000171e-05, 9.41529999999996e-05, 9.381900000000193e-05, 9.400000000000033e-05, 9.415200000000012e-05, 9.367999999999876e-05, 9.376400000000312e-05, 9.39720000000012e-05, 9.441699...</msg>
<status status="PASS" starttime="20201030 16:04:09.743" endtime="20201030 16:04:09.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.751" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 16:04:09.750" endtime="20201030 16:04:09.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.753" level="INFO">VALUE: [9.368100000000171e-05, 9.41529999999996e-05, 9.381900000000193e-05, 9.400000000000033e-05, 9.415200000000012e-05, 9.367999999999876e-05, 9.376400000000312e-05, 9.39720000000012e-05, 9.441699999999942e-05, 9.42079999999984e-05, 9.420899999999788e-05, 9.419500000000178e-05, 9.377800000000269e-05, 9.409800000000079e-05, 9.415200000000012e-05, 9.450000000000083e-05, 9.375000000000008e-05, 9.386100000000064e-05, 9.44590000000016e-05, 9.379200000000226e-05, 9.363899999999953e-05, 9.376399999999965e-05, 9.394499999999806e-05, 9.437499999999724e-05, 9.366699999999867e-05, 9.376300000000018e-05, 9.429099999999982e-05, 9.349999999999983e-05, 9.412500000000046e-05, 9.404199999999904e-05, 9.400000000000033e-05, 9.373600000000051e-05, 9.416699999999917e-05, 9.349999999999983e-05, 9.387500000000021e-05, 9.427799999999972e-05, 9.430499999999939e-05, 9.398600000000076e-05, 9.3639000000003e-05, 9.436100000000114e-05, 9.411100000000089e-05, 9.426400000000015e-05, 9.416699999999917e-05, 9.376399999999965e-05, 9.398600000000076e-05, 9.390299999999935e-05, 9.380499999999889e-05, 9.398600000000076e-05, 9.390299999999935e-05, 9.4333000000002e-05]</msg>
<status status="PASS" starttime="20201030 16:04:09.752" endtime="20201030 16:04:09.755"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.747" endtime="20201030 16:04:09.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:09.759" endtime="20201030 16:04:09.778"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.758" endtime="20201030 16:04:09.779"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.756" endtime="20201030 16:04:09.779"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.395" endtime="20201030 16:04:09.780"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.395" endtime="20201030 16:04:09.780"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.788" endtime="20201030 16:04:09.808"></status>
</kw>
<msg timestamp="20201030 16:04:09.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:09.787" endtime="20201030 16:04:09.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:09.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:09.809" endtime="20201030 16:04:09.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.812" endtime="20201030 16:04:09.813"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.784" endtime="20201030 16:04:09.814"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.782" endtime="20201030 16:04:09.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:09.821" endtime="20201030 16:04:10.106"></status>
</kw>
<msg timestamp="20201030 16:04:10.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01994275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020037597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:09.819" endtime="20201030 16:04:10.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01994275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020037597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:10.111" endtime="20201030 16:04:10.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.119" endtime="20201030 16:04:10.120"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.816" endtime="20201030 16:04:10.121"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.815" endtime="20201030 16:04:10.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:10.125" level="INFO">${RESULT} = [{'diff': 9.484700000000207e-05}, {'diff': 9.459700000000182e-05}, {'diff': 9.469399999999933e-05}, {'diff': 9.500000000000133e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.475000000000108e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:10.122" endtime="20201030 16:04:10.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:10.130" level="INFO">${ACCURACY} = {'diff': [9.484700000000207e-05, 9.459700000000182e-05, 9.469399999999933e-05, 9.500000000000133e-05, 9.52079999999994e-05, 9.475000000000108e-05, 9.516700000000017e-05, 9.504200000000004e-05, 9.49169...</msg>
<status status="PASS" starttime="20201030 16:04:10.126" endtime="20201030 16:04:10.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.135" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 16:04:10.134" endtime="20201030 16:04:10.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.137" level="INFO">VALUE: [9.484700000000207e-05, 9.459700000000182e-05, 9.469399999999933e-05, 9.500000000000133e-05, 9.52079999999994e-05, 9.475000000000108e-05, 9.516700000000017e-05, 9.504200000000004e-05, 9.491699999999992e-05, 9.479100000000032e-05, 9.462500000000096e-05, 9.479100000000032e-05, 9.458300000000225e-05, 9.50140000000009e-05, 9.547199999999922e-05, 9.512499999999799e-05, 9.487500000000121e-05, 9.456999999999868e-05, 9.505600000000308e-05, 9.468099999999924e-05, 9.509799999999832e-05, 9.544400000000008e-05, 9.51660000000007e-05, 9.491600000000044e-05, 9.495799999999915e-05, 9.498600000000176e-05, 9.540300000000085e-05, 9.463900000000053e-05, 9.488899999999731e-05, 9.519499999999931e-05, 9.543099999999999e-05, 9.511099999999842e-05, 9.540200000000137e-05, 9.545799999999965e-05, 9.518000000000026e-05, 9.506899999999971e-05, 9.533299999999953e-05, 9.51530000000006e-05, 9.487500000000121e-05, 9.480599999999936e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.495899999999863e-05, 9.462500000000096e-05, 9.475000000000108e-05, 9.51660000000007e-05, 9.490300000000035e-05, 9.548600000000226e-05, 9.511099999999842e-05, 9.530599999999986e-05]</msg>
<status status="PASS" starttime="20201030 16:04:10.136" endtime="20201030 16:04:10.138"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.131" endtime="20201030 16:04:10.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:10.142" endtime="20201030 16:04:10.162"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.141" endtime="20201030 16:04:10.162"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.140" endtime="20201030 16:04:10.163"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.781" endtime="20201030 16:04:10.163"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:09.780" endtime="20201030 16:04:10.163"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.172" endtime="20201030 16:04:10.190"></status>
</kw>
<msg timestamp="20201030 16:04:10.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:10.170" endtime="20201030 16:04:10.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:10.191" endtime="20201030 16:04:10.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.194" endtime="20201030 16:04:10.195"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.168" endtime="20201030 16:04:10.196"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.166" endtime="20201030 16:04:10.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.203" endtime="20201030 16:04:10.489"></status>
</kw>
<msg timestamp="20201030 16:04:10.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:10.201" endtime="20201030 16:04:10.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019734819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:10.494" endtime="20201030 16:04:10.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.502" endtime="20201030 16:04:10.504"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.199" endtime="20201030 16:04:10.504"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.197" endtime="20201030 16:04:10.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:10.509" level="INFO">${RESULT} = [{'diff': 9.638799999999934e-05}, {'diff': 9.57079999999999e-05}, {'diff': 9.630499999999792e-05}, {'diff': 9.579099999999785e-05}, {'diff': 9.627700000000225e-05}, {'diff': 9.591600000000144e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:10.505" endtime="20201030 16:04:10.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:10.513" level="INFO">${ACCURACY} = {'diff': [9.638799999999934e-05, 9.57079999999999e-05, 9.630499999999792e-05, 9.579099999999785e-05, 9.627700000000225e-05, 9.591600000000144e-05, 9.55140000000014e-05, 9.587499999999874e-05, 9.612499...</msg>
<status status="PASS" starttime="20201030 16:04:10.510" endtime="20201030 16:04:10.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.517" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 16:04:10.516" endtime="20201030 16:04:10.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.520" level="INFO">VALUE: [9.638799999999934e-05, 9.57079999999999e-05, 9.630499999999792e-05, 9.579099999999785e-05, 9.627700000000225e-05, 9.591600000000144e-05, 9.55140000000014e-05, 9.587499999999874e-05, 9.612499999999899e-05, 9.636099999999967e-05, 9.620899999999988e-05, 9.644500000000056e-05, 9.632000000000043e-05, 9.61660000000017e-05, 9.551399999999793e-05, 9.62080000000004e-05, 9.591600000000144e-05, 9.611099999999942e-05, 9.568100000000024e-05, 9.586099999999917e-05, 9.558299999999978e-05, 9.638900000000228e-05, 9.558299999999978e-05, 9.613900000000203e-05, 9.629100000000182e-05, 9.633300000000053e-05, 9.64859999999998e-05, 9.61799999999978e-05, 9.627800000000172e-05, 9.631900000000096e-05, 9.638900000000228e-05, 9.636099999999967e-05, 9.574999999999861e-05, 9.634799999999957e-05, 9.569400000000033e-05, 9.555500000000064e-05, 9.630500000000139e-05, 9.645800000000065e-05, 9.647200000000022e-05, 9.556900000000021e-05, 9.587500000000221e-05, 9.645800000000065e-05, 9.647199999999675e-05, 9.551399999999793e-05, 9.618000000000126e-05, 9.579199999999732e-05, 9.615199999999866e-05, 9.587500000000221e-05, 9.565299999999763e-05, 9.574999999999861e-05]</msg>
<status status="PASS" starttime="20201030 16:04:10.518" endtime="20201030 16:04:10.520"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.514" endtime="20201030 16:04:10.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:10.525" endtime="20201030 16:04:10.544"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.523" endtime="20201030 16:04:10.545"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.522" endtime="20201030 16:04:10.545"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.164" endtime="20201030 16:04:10.545"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.163" endtime="20201030 16:04:10.546"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.554" endtime="20201030 16:04:10.575"></status>
</kw>
<msg timestamp="20201030 16:04:10.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:10.553" endtime="20201030 16:04:10.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:10.577" endtime="20201030 16:04:10.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.579" endtime="20201030 16:04:10.581"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.550" endtime="20201030 16:04:10.581"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.548" endtime="20201030 16:04:10.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.588" endtime="20201030 16:04:10.876"></status>
</kw>
<msg timestamp="20201030 16:04:10.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020766472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020863097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:10.587" endtime="20201030 16:04:10.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020766472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020863097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:10.880" endtime="20201030 16:04:10.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.889" endtime="20201030 16:04:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.584" endtime="20201030 16:04:10.891"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.582" endtime="20201030 16:04:10.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:10.895" level="INFO">${RESULT} = [{'diff': 9.662499999999949e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.67080000000009e-05}, {'diff': 9.669399999999786e-05}, {'diff': 9.704199999999857e-05}, {'diff': 9.677800000000222e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 16:04:10.892" endtime="20201030 16:04:10.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:10.899" level="INFO">${ACCURACY} = {'diff': [9.662499999999949e-05, 9.69860000000003e-05, 9.67080000000009e-05, 9.669399999999786e-05, 9.704199999999857e-05, 9.677800000000222e-05, 9.711100000000042e-05, 9.659799999999982e-05, 9.727699...</msg>
<status status="PASS" starttime="20201030 16:04:10.896" endtime="20201030 16:04:10.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.904" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 16:04:10.903" endtime="20201030 16:04:10.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.907" level="INFO">VALUE: [9.662499999999949e-05, 9.69860000000003e-05, 9.67080000000009e-05, 9.669399999999786e-05, 9.704199999999857e-05, 9.677800000000222e-05, 9.711100000000042e-05, 9.659799999999982e-05, 9.727699999999978e-05, 9.688899999999931e-05, 9.744499999999809e-05, 9.654100000000207e-05, 9.669399999999786e-05, 9.725000000000011e-05, 9.697200000000072e-05, 9.713899999999956e-05, 9.66530000000021e-05, 9.668100000000124e-05, 9.679199999999832e-05, 9.662499999999949e-05, 9.745800000000165e-05, 9.658300000000078e-05, 9.691599999999898e-05, 9.742999999999905e-05, 9.661099999999992e-05, 9.704199999999857e-05, 9.679199999999832e-05, 9.691699999999845e-05, 9.681999999999746e-05, 9.661099999999992e-05, 9.670900000000038e-05, 9.741599999999948e-05, 9.715200000000312e-05, 9.687499999999974e-05, 9.730499999999892e-05, 9.73470000000011e-05, 9.659700000000035e-05, 9.741700000000242e-05, 9.691700000000192e-05, 9.684800000000007e-05, 9.688899999999931e-05, 9.743099999999852e-05, 9.663799999999959e-05, 9.727699999999978e-05, 9.738899999999981e-05, 9.652800000000197e-05, 9.662499999999949e-05, 9.740299999999938e-05, 9.745800000000165e-05, 9.668099999999777e-05]</msg>
<status status="PASS" starttime="20201030 16:04:10.905" endtime="20201030 16:04:10.908"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.900" endtime="20201030 16:04:10.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:10.912" endtime="20201030 16:04:10.931"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.910" endtime="20201030 16:04:10.932"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.909" endtime="20201030 16:04:10.932"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.547" endtime="20201030 16:04:10.933"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.546" endtime="20201030 16:04:10.933"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.941" endtime="20201030 16:04:10.960"></status>
</kw>
<msg timestamp="20201030 16:04:10.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:10.940" endtime="20201030 16:04:10.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:10.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:10.962" endtime="20201030 16:04:10.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.964" endtime="20201030 16:04:10.966"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.937" endtime="20201030 16:04:10.966"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.935" endtime="20201030 16:04:10.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:10.973" endtime="20201030 16:04:11.260"></status>
</kw>
<msg timestamp="20201030 16:04:11.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:10.972" endtime="20201030 16:04:11.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019769569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:11.264" endtime="20201030 16:04:11.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.273" endtime="20201030 16:04:11.274"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.969" endtime="20201030 16:04:11.275"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.967" endtime="20201030 16:04:11.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:11.279" level="INFO">${RESULT} = [{'diff': 9.779099999999985e-05}, {'diff': 9.848599999999832e-05}, {'diff': 9.78470000000016e-05}, {'diff': 9.755500000000264e-05}, {'diff': 9.843099999999952e-05}, {'diff': 9.833299999999906e-05}, {'...</msg>
<status status="PASS" starttime="20201030 16:04:11.276" endtime="20201030 16:04:11.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:11.284" level="INFO">${ACCURACY} = {'diff': [9.779099999999985e-05, 9.848599999999832e-05, 9.78470000000016e-05, 9.755500000000264e-05, 9.843099999999952e-05, 9.833299999999906e-05, 9.768100000000224e-05, 9.808400000000175e-05, 9.83610...</msg>
<status status="PASS" starttime="20201030 16:04:11.280" endtime="20201030 16:04:11.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.289" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 16:04:11.288" endtime="20201030 16:04:11.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.291" level="INFO">VALUE: [9.779099999999985e-05, 9.848599999999832e-05, 9.78470000000016e-05, 9.755500000000264e-05, 9.843099999999952e-05, 9.833299999999906e-05, 9.768100000000224e-05, 9.808400000000175e-05, 9.836100000000167e-05, 9.812499999999752e-05, 9.819399999999937e-05, 9.80410000000001e-05, 9.763900000000006e-05, 9.805500000000314e-05, 9.833299999999906e-05, 9.808299999999881e-05, 9.776400000000018e-05, 9.818099999999927e-05, 9.791700000000292e-05, 9.805599999999914e-05, 9.804199999999957e-05, 9.780499999999942e-05, 9.75279999999995e-05, 9.786100000000117e-05, 9.797199999999825e-05, 9.758300000000178e-05, 9.797200000000172e-05, 9.756899999999874e-05, 9.762500000000049e-05, 9.806999999999871e-05, 9.769500000000181e-05, 9.765299999999963e-05, 9.779099999999985e-05, 9.756899999999874e-05, 9.823599999999807e-05, 9.75279999999995e-05, 9.804199999999957e-05, 9.841699999999995e-05, 9.845799999999919e-05, 9.837500000000124e-05, 9.825000000000111e-05, 9.750000000000036e-05, 9.809800000000132e-05, 9.762500000000049e-05, 9.780499999999942e-05, 9.82219999999985e-05, 9.747200000000122e-05, 9.837500000000124e-05, 9.750000000000036e-05, 9.820799999999894e-05]</msg>
<status status="PASS" starttime="20201030 16:04:11.290" endtime="20201030 16:04:11.292"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.285" endtime="20201030 16:04:11.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:11.296" endtime="20201030 16:04:11.316"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.295" endtime="20201030 16:04:11.316"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.294" endtime="20201030 16:04:11.317"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.934" endtime="20201030 16:04:11.317"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:10.933" endtime="20201030 16:04:11.317"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.326" endtime="20201030 16:04:11.344"></status>
</kw>
<msg timestamp="20201030 16:04:11.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:11.324" endtime="20201030 16:04:11.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:11.346" endtime="20201030 16:04:11.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.349" endtime="20201030 16:04:11.350"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.322" endtime="20201030 16:04:11.351"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.320" endtime="20201030 16:04:11.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.358" endtime="20201030 16:04:11.645"></status>
</kw>
<msg timestamp="20201030 16:04:11.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019694333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:11.356" endtime="20201030 16:04:11.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019694333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:11.649" endtime="20201030 16:04:11.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.658" endtime="20201030 16:04:11.660"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.353" endtime="20201030 16:04:11.660"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.352" endtime="20201030 16:04:11.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:11.665" level="INFO">${RESULT} = [{'diff': 9.944500000000009e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.940300000000138e-05}, {'diff': 9.897199999999926e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.876400000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 16:04:11.661" endtime="20201030 16:04:11.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:11.669" level="INFO">${ACCURACY} = {'diff': [9.944500000000009e-05, 9.879200000000032e-05, 9.940300000000138e-05, 9.897199999999926e-05, 9.859699999999888e-05, 9.876400000000118e-05, 9.873600000000204e-05, 9.91800000000008e-05, 9.93750...</msg>
<status status="PASS" starttime="20201030 16:04:11.666" endtime="20201030 16:04:11.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.674" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 16:04:11.672" endtime="20201030 16:04:11.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.676" level="INFO">VALUE: [9.944500000000009e-05, 9.879200000000032e-05, 9.940300000000138e-05, 9.897199999999926e-05, 9.859699999999888e-05, 9.876400000000118e-05, 9.873600000000204e-05, 9.91800000000008e-05, 9.937500000000224e-05, 9.941699999999748e-05, 9.890299999999741e-05, 9.901400000000143e-05, 9.947299999999923e-05, 9.898700000000177e-05, 9.879100000000085e-05, 9.877700000000128e-05, 9.941700000000095e-05, 9.850000000000136e-05, 9.926400000000168e-05, 9.879200000000032e-05, 9.934699999999963e-05, 9.908400000000275e-05, 9.911099999999895e-05, 9.943100000000052e-05, 9.870799999999944e-05, 9.919400000000037e-05, 9.942999999999758e-05, 9.880500000000042e-05, 9.869399999999987e-05, 9.879200000000032e-05, 9.909699999999938e-05, 9.873600000000204e-05, 9.943100000000052e-05, 9.872300000000195e-05, 9.922299999999898e-05, 9.879100000000085e-05, 9.929100000000135e-05, 9.916599999999776e-05, 9.877800000000075e-05, 9.85280000000005e-05, 9.912500000000199e-05, 9.913900000000156e-05, 9.900000000000186e-05, 9.852799999999703e-05, 9.893100000000002e-05, 9.894400000000012e-05, 9.926400000000168e-05, 9.897200000000272e-05, 9.884699999999913e-05, 9.851399999999746e-05]</msg>
<status status="PASS" starttime="20201030 16:04:11.675" endtime="20201030 16:04:11.677"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.670" endtime="20201030 16:04:11.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:11.681" endtime="20201030 16:04:11.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.680" endtime="20201030 16:04:11.701"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.678" endtime="20201030 16:04:11.702"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.318" endtime="20201030 16:04:11.702"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.317" endtime="20201030 16:04:11.702"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.711" endtime="20201030 16:04:11.731"></status>
</kw>
<msg timestamp="20201030 16:04:11.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:11.710" endtime="20201030 16:04:11.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:11.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:11.733" endtime="20201030 16:04:11.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.736" endtime="20201030 16:04:11.738"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.707" endtime="20201030 16:04:11.738"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.704" endtime="20201030 16:04:11.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:11.746" endtime="20201030 16:04:12.032"></status>
</kw>
<msg timestamp="20201030 16:04:12.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021343861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02144425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:11.745" endtime="20201030 16:04:12.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021343861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02144425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 16:04:12.037" endtime="20201030 16:04:12.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.045" endtime="20201030 16:04:12.047"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.742" endtime="20201030 16:04:12.048"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.740" endtime="20201030 16:04:12.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:12.052" level="INFO">${RESULT} = [{'diff': 0.00010038900000000281}, {'diff': 0.00010008300000000081}, {'diff': 0.00010037499999999977}, {'diff': 0.00010033300000000106}, {'diff': 9.98060000000009e-05}, {'diff': 9.979199999999785e-05}...</msg>
<status status="PASS" starttime="20201030 16:04:12.049" endtime="20201030 16:04:12.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:12.056" level="INFO">${ACCURACY} = {'diff': [0.00010038900000000281, 0.00010008300000000081, 0.00010037499999999977, 0.00010033300000000106, 9.98060000000009e-05, 9.979199999999785e-05, 0.00010047300000000023, 9.948700000000227e-05, 9....</msg>
<status status="PASS" starttime="20201030 16:04:12.053" endtime="20201030 16:04:12.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.061" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 16:04:12.060" endtime="20201030 16:04:12.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.064" level="INFO">VALUE: [0.00010038900000000281, 0.00010008300000000081, 0.00010037499999999977, 0.00010033300000000106, 9.98060000000009e-05, 9.979199999999785e-05, 0.00010047300000000023, 9.948700000000227e-05, 9.997200000000026e-05, 9.980499999999795e-05, 9.959699999999988e-05, 9.967999999999783e-05, 0.00010000000000000286, 9.988899999999884e-05, 0.00010027799999999878, 0.00010005599999999767, 0.0001003610000000002, 0.000100415999999999, 0.0001003480000000001, 9.994400000000112e-05, 0.00010026400000000268, 0.0001002220000000005, 0.00010026400000000268, 9.970800000000044e-05, 0.00010002799999999853, 0.00010008300000000081, 9.977799999999828e-05, 0.00010040299999999891, 0.00010029199999999835, 9.977699999999881e-05, 0.0001000549999999982, 0.00010038899999999934, 0.00010040300000000238, 9.958399999999978e-05, 9.9722e-05, 0.00010020800000000094, 9.984700000000013e-05, 0.00010020900000000041, 9.998599999999983e-05, 0.0001002220000000005, 0.00010024999999999964, 9.987499999999927e-05, 0.00010002799999999853, 9.958300000000031e-05, 0.00010034700000000063, 0.00010023600000000008, 9.951399999999846e-05, 0.0001003199999999975, 9.99999999999994e-05, 9.979099999999838e-05]</msg>
<status status="PASS" starttime="20201030 16:04:12.062" endtime="20201030 16:04:12.065"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.057" endtime="20201030 16:04:12.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:12.070" endtime="20201030 16:04:12.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.068" endtime="20201030 16:04:12.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.067" endtime="20201030 16:04:12.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.703" endtime="20201030 16:04:12.090"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:11.702" endtime="20201030 16:04:12.090"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.099" endtime="20201030 16:04:12.119"></status>
</kw>
<msg timestamp="20201030 16:04:12.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:12.098" endtime="20201030 16:04:12.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:12.120" endtime="20201030 16:04:12.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.123" endtime="20201030 16:04:12.124"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.095" endtime="20201030 16:04:12.125"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.093" endtime="20201030 16:04:12.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.132" endtime="20201030 16:04:12.418"></status>
</kw>
<msg timestamp="20201030 16:04:12.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:12.131" endtime="20201030 16:04:12.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020208042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:12.422" endtime="20201030 16:04:12.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.430" endtime="20201030 16:04:12.432"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.128" endtime="20201030 16:04:12.432"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.126" endtime="20201030 16:04:12.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:12.437" level="INFO">${RESULT} = [{'diff': 0.00010077799999999928}, {'diff': 0.00010140200000000044}, {'diff': 0.00010083300000000156}, {'diff': 0.0001010000000000004}, {'diff': 0.00010083400000000103}, {'diff': 0.0001008329999999980...</msg>
<status status="PASS" starttime="20201030 16:04:12.434" endtime="20201030 16:04:12.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:12.442" level="INFO">${ACCURACY} = {'diff': [0.00010077799999999928, 0.00010140200000000044, 0.00010083300000000156, 0.0001010000000000004, 0.00010083400000000103, 0.00010083299999999809, 0.00010082000000000146, 0.00010116699999999923,...</msg>
<status status="PASS" starttime="20201030 16:04:12.438" endtime="20201030 16:04:12.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.447" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 16:04:12.445" endtime="20201030 16:04:12.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.449" level="INFO">VALUE: [0.00010077799999999928, 0.00010140200000000044, 0.00010083300000000156, 0.0001010000000000004, 0.00010083400000000103, 0.00010083299999999809, 0.00010082000000000146, 0.00010116699999999923, 0.0001006670000000022, 0.00010088899999999984, 0.00010105599999999867, 0.00010134799999999763, 0.00010120800000000194, 0.00010126400000000021, 0.00010108299999999834, 0.00010113900000000009, 0.00010051399999999946, 0.00010076399999999971, 0.00010069400000000187, 0.0001013610000000012, 0.00010120899999999794, 0.00010058300000000131, 0.0001011809999999988, 0.00010113800000000062, 0.000100722000000001, 0.0001008610000000007, 0.00010058300000000131, 0.00010075000000000014, 0.00010123600000000108, 0.00010091700000000245, 0.00010145899999999819, 0.0001010000000000004, 0.0001011809999999988, 0.00010067999999999883, 0.00010148599999999786, 0.00010065199999999969, 0.00010130500000000292, 0.00010108299999999834, 0.00010136099999999773, 0.00010116699999999923, 0.00010129199999999935, 0.000100722000000001, 0.00010070900000000091, 0.00010147299999999776, 0.0001010000000000004, 0.00010073600000000058, 0.00010095899999999769, 0.00010104200000000257, 0.00010083300000000156, 0.00010133299999999859]</msg>
<status status="PASS" starttime="20201030 16:04:12.448" endtime="20201030 16:04:12.450"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.443" endtime="20201030 16:04:12.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:12.454" endtime="20201030 16:04:12.474"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.453" endtime="20201030 16:04:12.474"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.451" endtime="20201030 16:04:12.474"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.091" endtime="20201030 16:04:12.475"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.091" endtime="20201030 16:04:12.475"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.484" endtime="20201030 16:04:12.503"></status>
</kw>
<msg timestamp="20201030 16:04:12.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:12.482" endtime="20201030 16:04:12.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:12.505" endtime="20201030 16:04:12.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.508" endtime="20201030 16:04:12.509"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.480" endtime="20201030 16:04:12.510"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.477" endtime="20201030 16:04:12.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.517" endtime="20201030 16:04:12.805"></status>
</kw>
<msg timestamp="20201030 16:04:12.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020788208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:12.515" endtime="20201030 16:04:12.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020788208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:12.809" endtime="20201030 16:04:12.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.818" endtime="20201030 16:04:12.820"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.513" endtime="20201030 16:04:12.820"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.511" endtime="20201030 16:04:12.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:12.825" level="INFO">${RESULT} = [{'diff': 0.00010163900000000059}, {'diff': 0.00010216600000000076}, {'diff': 0.0001016809999999993}, {'diff': 0.00010190300000000041}, {'diff': 0.00010245799999999972}, {'diff': 0.0001023469999999991...</msg>
<status status="PASS" starttime="20201030 16:04:12.821" endtime="20201030 16:04:12.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:12.829" level="INFO">${ACCURACY} = {'diff': [0.00010163900000000059, 0.00010216600000000076, 0.0001016809999999993, 0.00010190300000000041, 0.00010245799999999972, 0.00010234699999999916, 0.00010183399999999856, 0.00010233399999999906,...</msg>
<status status="PASS" starttime="20201030 16:04:12.826" endtime="20201030 16:04:12.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.833" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 16:04:12.832" endtime="20201030 16:04:12.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.836" level="INFO">VALUE: [0.00010163900000000059, 0.00010216600000000076, 0.0001016809999999993, 0.00010190300000000041, 0.00010245799999999972, 0.00010234699999999916, 0.00010183399999999856, 0.00010233399999999906, 0.00010197299999999826, 0.00010211099999999848, 0.0001015000000000009, 0.00010218000000000033, 0.00010226400000000122, 0.00010151400000000046, 0.00010230599999999992, 0.00010197200000000226, 0.00010237500000000177, 0.00010191699999999998, 0.00010188900000000084, 0.0001019160000000005, 0.00010163800000000112, 0.00010194399999999965, 0.00010158299999999884, 0.00010238899999999787, 0.00010163900000000059, 0.00010226400000000122, 0.00010193099999999955, 0.00010241700000000048, 0.00010227800000000078, 0.00010230500000000045, 0.00010180500000000342, 0.00010161100000000145, 0.00010248599999999886, 0.00010184699999999866, 0.00010177800000000028, 0.00010170799999999897, 0.00010209699999999891, 0.00010224999999999818, 0.00010241699999999701, 0.00010226399999999775, 0.00010243000000000058, 0.00010152699999999709, 0.00010179100000000038, 0.00010162500000000102, 0.00010220799999999947, 0.00010191699999999998, 0.0001016809999999993, 0.00010245899999999919, 0.00010213899999999762, 0.00010161100000000145]</msg>
<status status="PASS" starttime="20201030 16:04:12.834" endtime="20201030 16:04:12.837"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.830" endtime="20201030 16:04:12.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:12.841" endtime="20201030 16:04:12.861"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.840" endtime="20201030 16:04:12.861"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.838" endtime="20201030 16:04:12.862"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.476" endtime="20201030 16:04:12.862"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.475" endtime="20201030 16:04:12.862"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.871" endtime="20201030 16:04:12.893"></status>
</kw>
<msg timestamp="20201030 16:04:12.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:12.869" endtime="20201030 16:04:12.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:12.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:12.895" endtime="20201030 16:04:12.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.898" endtime="20201030 16:04:12.899"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.867" endtime="20201030 16:04:12.900"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.864" endtime="20201030 16:04:12.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:12.907" endtime="20201030 16:04:13.192"></status>
</kw>
<msg timestamp="20201030 16:04:13.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023336611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:12.905" endtime="20201030 16:04:13.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023336611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:13.197" endtime="20201030 16:04:13.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.205" endtime="20201030 16:04:13.207"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.903" endtime="20201030 16:04:13.207"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.901" endtime="20201030 16:04:13.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:13.212" level="INFO">${RESULT} = [{'diff': 0.00010268000000000083}, {'diff': 0.00010307000000000024}, {'diff': 0.0001028749999999988}, {'diff': 0.0001027359999999991}, {'diff': 0.0001028619999999987}, {'diff': 0.00010345799999999725}...</msg>
<status status="PASS" starttime="20201030 16:04:13.209" endtime="20201030 16:04:13.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:13.216" level="INFO">${ACCURACY} = {'diff': [0.00010268000000000083, 0.00010307000000000024, 0.0001028749999999988, 0.0001027359999999991, 0.0001028619999999987, 0.00010345799999999725, 0.00010330500000000145, 0.00010344400000000115, 0...</msg>
<status status="PASS" starttime="20201030 16:04:13.213" endtime="20201030 16:04:13.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.221" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 16:04:13.220" endtime="20201030 16:04:13.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.223" level="INFO">VALUE: [0.00010268000000000083, 0.00010307000000000024, 0.0001028749999999988, 0.0001027359999999991, 0.0001028619999999987, 0.00010345799999999725, 0.00010330500000000145, 0.00010344400000000115, 0.00010309699999999991, 0.00010291700000000098, 0.00010331900000000102, 0.0001030139999999985, 0.00010297199999999979, 0.00010307000000000024, 0.00010295899999999969, 0.00010330500000000145, 0.00010333300000000059, 0.00010263900000000159, 0.00010281900000000052, 0.00010340299999999844, 0.00010311099999999948, 0.00010291699999999751, 0.00010327799999999832, 0.00010304199999999764, 0.00010284699999999966, 0.00010326399999999875, 0.00010284699999999966, 0.00010288800000000237, 0.00010299999999999893, 0.00010320800000000047, 0.00010290300000000141, 0.00010334700000000016, 0.00010311099999999948, 0.00010325000000000265, 0.00010340300000000191, 0.00010266699999999726, 0.00010291699999999751, 0.0001031940000000009, 0.000103416000000002, 0.00010280500000000095, 0.00010336099999999973, 0.00010312499999999905, 0.00010283300000000009, 0.00010347199999999682, 0.00010309699999999991, 0.00010269499999999987, 0.0001025000000000019, 0.0001030000000000024, 0.00010315199999999872, 0.00010347200000000029]</msg>
<status status="PASS" starttime="20201030 16:04:13.222" endtime="20201030 16:04:13.225"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.217" endtime="20201030 16:04:13.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:13.229" endtime="20201030 16:04:13.249"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.228" endtime="20201030 16:04:13.249"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.226" endtime="20201030 16:04:13.250"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.863" endtime="20201030 16:04:13.250"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:12.862" endtime="20201030 16:04:13.250"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.259" endtime="20201030 16:04:13.279"></status>
</kw>
<msg timestamp="20201030 16:04:13.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:13.257" endtime="20201030 16:04:13.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:13.280" endtime="20201030 16:04:13.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.283" endtime="20201030 16:04:13.285"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.255" endtime="20201030 16:04:13.285"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.252" endtime="20201030 16:04:13.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.292" endtime="20201030 16:04:13.579"></status>
</kw>
<msg timestamp="20201030 16:04:13.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020100361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:13.291" endtime="20201030 16:04:13.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020100361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:13.584" endtime="20201030 16:04:13.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.592" endtime="20201030 16:04:13.594"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.288" endtime="20201030 16:04:13.594"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.286" endtime="20201030 16:04:13.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:13.599" level="INFO">${RESULT} = [{'diff': 0.00010420800000000147}, {'diff': 0.00010434700000000116}, {'diff': 0.00010412500000000005}, {'diff': 0.00010416699999999876}, {'diff': 0.00010369500000000087}, {'diff': 0.000104083999999997...</msg>
<status status="PASS" starttime="20201030 16:04:13.596" endtime="20201030 16:04:13.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:13.604" level="INFO">${ACCURACY} = {'diff': [0.00010420800000000147, 0.00010434700000000116, 0.00010412500000000005, 0.00010416699999999876, 0.00010369500000000087, 0.00010408399999999735, 0.00010427699999999984, 0.00010416599999999929...</msg>
<status status="PASS" starttime="20201030 16:04:13.600" endtime="20201030 16:04:13.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.609" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 16:04:13.608" endtime="20201030 16:04:13.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.611" level="INFO">VALUE: [0.00010420800000000147, 0.00010434700000000116, 0.00010412500000000005, 0.00010416699999999876, 0.00010369500000000087, 0.00010408399999999735, 0.00010427699999999984, 0.00010416599999999929, 0.00010408300000000134, 0.00010417999999999886, 0.00010399999999999993, 0.00010395800000000122, 0.00010359700000000041, 0.00010380599999999796, 0.00010391699999999851, 0.00010411199999999995, 0.00010359700000000041, 0.00010372199999999707, 0.00010384700000000066, 0.00010404099999999916, 0.00010415299999999919, 0.0001040139999999995, 0.00010413899999999962, 0.00010388899999999937, 0.00010363900000000259, 0.00010352799999999857, 0.00010380500000000195, 0.00010370800000000097, 0.00010374999999999968, 0.000103513999999999, 0.00010405499999999873, 0.00010438899999999987, 0.00010416699999999876, 0.00010348599999999986, 0.00010395800000000122, 0.00010362500000000302, 0.00010434800000000063, 0.0001037079999999975, 0.00010383299999999762, 0.00010380500000000195, 0.00010415299999999919, 0.00010394500000000112, 0.0001037360000000001, 0.00010399999999999993, 0.00010408399999999735, 0.00010402800000000254, 0.00010444500000000162, 0.00010380499999999848, 0.000103513999999999, 0.00010390299999999894]</msg>
<status status="PASS" starttime="20201030 16:04:13.610" endtime="20201030 16:04:13.612"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.605" endtime="20201030 16:04:13.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:13.616" endtime="20201030 16:04:13.636"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.615" endtime="20201030 16:04:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.614" endtime="20201030 16:04:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.251" endtime="20201030 16:04:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.250" endtime="20201030 16:04:13.637"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.646" endtime="20201030 16:04:13.667"></status>
</kw>
<msg timestamp="20201030 16:04:13.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:13.645" endtime="20201030 16:04:13.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:13.669" endtime="20201030 16:04:13.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.671" endtime="20201030 16:04:13.673"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.642" endtime="20201030 16:04:13.674"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.640" endtime="20201030 16:04:13.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.681" endtime="20201030 16:04:13.968"></status>
</kw>
<msg timestamp="20201030 16:04:13.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:13.679" endtime="20201030 16:04:13.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:13.972" endtime="20201030 16:04:13.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:13.981" endtime="20201030 16:04:13.982"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.676" endtime="20201030 16:04:13.983"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.675" endtime="20201030 16:04:13.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:13.987" level="INFO">${RESULT} = [{'diff': 0.00010481900000000252}, {'diff': 0.00010467999999999936}, {'diff': 0.00010544399999999968}, {'diff': 0.000104820000000002}, {'diff': 0.0001051949999999989}, {'diff': 0.00010516699999999976}...</msg>
<status status="PASS" starttime="20201030 16:04:13.984" endtime="20201030 16:04:13.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:13.991" level="INFO">${ACCURACY} = {'diff': [0.00010481900000000252, 0.00010467999999999936, 0.00010544399999999968, 0.000104820000000002, 0.0001051949999999989, 0.00010516699999999976, 0.00010522300000000151, 0.00010534799999999817, 0...</msg>
<status status="PASS" starttime="20201030 16:04:13.988" endtime="20201030 16:04:13.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.996" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 16:04:13.995" endtime="20201030 16:04:13.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:13.998" level="INFO">VALUE: [0.00010481900000000252, 0.00010467999999999936, 0.00010544399999999968, 0.000104820000000002, 0.0001051949999999989, 0.00010516699999999976, 0.00010522300000000151, 0.00010534799999999817, 0.00010526300000000127, 0.00010498600000000136, 0.00010479099999999991, 0.00010452799999999957, 0.00010480500000000295, 0.00010486100000000123, 0.00010513899999999715, 0.00010544500000000262, 0.0001048750000000008, 0.00010541700000000001, 0.00010472200000000154, 0.000105207999999999, 0.00010544399999999968, 0.000105207999999999, 0.00010543099999999958, 0.00010506999999999878, 0.00010500000000000093, 0.0001047360000000011, 0.00010526400000000075, 0.00010516600000000029, 0.00010547200000000229, 0.00010456900000000227, 0.00010527800000000032, 0.00010476400000000025, 0.00010493100000000255, 0.00010475000000000068, 0.00010501399999999703, 0.00010511100000000148, 0.00010483400000000156, 0.00010466699999999926, 0.00010476400000000025, 0.00010488900000000037, 0.00010529199999999989, 0.00010473599999999764, 0.00010513899999999715, 0.00010477799999999982, 0.00010462500000000055, 0.00010502800000000007, 0.00010516699999999976, 0.0001050689999999993, 0.0001047079999999985, 0.00010522199999999857]</msg>
<status status="PASS" starttime="20201030 16:04:13.997" endtime="20201030 16:04:14.003"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.992" endtime="20201030 16:04:14.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:14.008" endtime="20201030 16:04:14.027"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.006" endtime="20201030 16:04:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.005" endtime="20201030 16:04:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.638" endtime="20201030 16:04:14.028"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:13.638" endtime="20201030 16:04:14.029"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.037" endtime="20201030 16:04:14.057"></status>
</kw>
<msg timestamp="20201030 16:04:14.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:14.036" endtime="20201030 16:04:14.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:14.058" endtime="20201030 16:04:14.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.061" endtime="20201030 16:04:14.063"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.033" endtime="20201030 16:04:14.063"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.031" endtime="20201030 16:04:14.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.070" endtime="20201030 16:04:14.356"></status>
</kw>
<msg timestamp="20201030 16:04:14.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020957556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021063292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:14.069" endtime="20201030 16:04:14.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020957556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021063292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:14.361" endtime="20201030 16:04:14.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.369" endtime="20201030 16:04:14.371"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.066" endtime="20201030 16:04:14.371"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.064" endtime="20201030 16:04:14.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:14.376" level="INFO">${RESULT} = [{'diff': 0.0001057360000000021}, {'diff': 0.00010643100000000058}, {'diff': 0.00010570800000000297}, {'diff': 0.00010611100000000248}, {'diff': 0.00010576400000000125}, {'diff': 0.0001060420000000006...</msg>
<status status="PASS" starttime="20201030 16:04:14.373" endtime="20201030 16:04:14.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:14.380" level="INFO">${ACCURACY} = {'diff': [0.0001057360000000021, 0.00010643100000000058, 0.00010570800000000297, 0.00010611100000000248, 0.00010576400000000125, 0.00010604200000000064, 0.0001055559999999997, 0.00010604200000000064, ...</msg>
<status status="PASS" starttime="20201030 16:04:14.377" endtime="20201030 16:04:14.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.385" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 16:04:14.383" endtime="20201030 16:04:14.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.387" level="INFO">VALUE: [0.0001057360000000021, 0.00010643100000000058, 0.00010570800000000297, 0.00010611100000000248, 0.00010576400000000125, 0.00010604200000000064, 0.0001055559999999997, 0.00010604200000000064, 0.00010586100000000223, 0.00010573599999999864, 0.00010569399999999993, 0.00010619400000000043, 0.0001064019999999985, 0.00010579100000000091, 0.00010569399999999993, 0.00010573599999999864, 0.00010631900000000055, 0.00010613900000000162, 0.00010557000000000274, 0.00010579200000000039, 0.0001063889999999984, 0.00010580500000000048, 0.00010644400000000068, 0.00010623599999999914, 0.00010641700000000101, 0.00010637499999999883, 0.00010637499999999883, 0.00010620900000000294, 0.00010626399999999828, 0.00010631900000000055, 0.00010584799999999867, 0.00010634699999999969, 0.00010568000000000036, 0.00010602800000000107, 0.00010625000000000218, 0.00010634699999999969, 0.00010633300000000012, 0.0001062499999999987, 0.0001060560000000002, 0.00010602800000000107, 0.00010576399999999778, 0.00010587499999999833, 0.00010549999999999796, 0.00010581900000000005, 0.00010588900000000137, 0.00010618100000000033, 0.00010609699999999944, 0.00010586099999999876, 0.00010565300000000069, 0.00010565300000000069]</msg>
<status status="PASS" starttime="20201030 16:04:14.386" endtime="20201030 16:04:14.389"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.381" endtime="20201030 16:04:14.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:14.393" endtime="20201030 16:04:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.392" endtime="20201030 16:04:14.413"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.390" endtime="20201030 16:04:14.414"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.030" endtime="20201030 16:04:14.414"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.029" endtime="20201030 16:04:14.414"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.423" endtime="20201030 16:04:14.443"></status>
</kw>
<msg timestamp="20201030 16:04:14.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:14.421" endtime="20201030 16:04:14.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:14.444" endtime="20201030 16:04:14.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.447" endtime="20201030 16:04:14.448"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.419" endtime="20201030 16:04:14.449"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.417" endtime="20201030 16:04:14.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.456" endtime="20201030 16:04:14.742"></status>
</kw>
<msg timestamp="20201030 16:04:14.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:14.454" endtime="20201030 16:04:14.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:14.746" endtime="20201030 16:04:14.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.754" endtime="20201030 16:04:14.756"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.452" endtime="20201030 16:04:14.756"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.450" endtime="20201030 16:04:14.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:14.761" level="INFO">${RESULT} = [{'diff': 0.00010693100000000108}, {'diff': 0.00010663899999999865}, {'diff': 0.00010712499999999958}, {'diff': 0.00010706899999999783}, {'diff': 0.00010716699999999829}, {'diff': 0.000106610999999999...</msg>
<status status="PASS" starttime="20201030 16:04:14.758" endtime="20201030 16:04:14.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:14.766" level="INFO">${ACCURACY} = {'diff': [0.00010693100000000108, 0.00010663899999999865, 0.00010712499999999958, 0.00010706899999999783, 0.00010716699999999829, 0.00010661099999999951, 0.0001065690000000008, 0.00010690300000000194,...</msg>
<status status="PASS" starttime="20201030 16:04:14.762" endtime="20201030 16:04:14.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.771" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 16:04:14.770" endtime="20201030 16:04:14.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.773" level="INFO">VALUE: [0.00010693100000000108, 0.00010663899999999865, 0.00010712499999999958, 0.00010706899999999783, 0.00010716699999999829, 0.00010661099999999951, 0.0001065690000000008, 0.00010690300000000194, 0.00010701399999999903, 0.00010694500000000065, 0.00010736100000000026, 0.0001068340000000001, 0.0001065699999999968, 0.00010699999999999946, 0.00010709799999999992, 0.00010734700000000069, 0.00010663899999999865, 0.00010680500000000148, 0.00010693100000000108, 0.00010690299999999847, 0.00010720799999999753, 0.00010682000000000053, 0.00010679200000000139, 0.00010744500000000115, 0.000106901999999999, 0.00010741599999999907, 0.00010722200000000057, 0.00010654200000000114, 0.00010711100000000001, 0.00010686099999999976, 0.00010673599999999964, 0.00010697200000000032, 0.000106514000000002, 0.00010716599999999882, 0.00010691599999999857, 0.00010658300000000037, 0.00010726399999999928, 0.0001065690000000008, 0.00010708300000000087, 0.00010687499999999933, 0.00010666700000000126, 0.00010657000000000028, 0.00010655500000000123, 0.0001070690000000013, 0.00010742999999999864, 0.00010748599999999692, 0.00010733300000000112, 0.00010673599999999964, 0.00010700000000000293, 0.00010668099999999736]</msg>
<status status="PASS" starttime="20201030 16:04:14.772" endtime="20201030 16:04:14.774"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.767" endtime="20201030 16:04:14.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:14.779" endtime="20201030 16:04:14.799"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.777" endtime="20201030 16:04:14.799"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.776" endtime="20201030 16:04:14.800"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.415" endtime="20201030 16:04:14.800"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.414" endtime="20201030 16:04:14.800"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.809" endtime="20201030 16:04:14.830"></status>
</kw>
<msg timestamp="20201030 16:04:14.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:14.807" endtime="20201030 16:04:14.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:14.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:14.832" endtime="20201030 16:04:14.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.834" endtime="20201030 16:04:14.836"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.805" endtime="20201030 16:04:14.837"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.802" endtime="20201030 16:04:14.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:14.844" endtime="20201030 16:04:15.131"></status>
</kw>
<msg timestamp="20201030 16:04:15.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021094347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:14.842" endtime="20201030 16:04:15.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021094347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:15.135" endtime="20201030 16:04:15.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.143" endtime="20201030 16:04:15.145"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.839" endtime="20201030 16:04:15.146"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.838" endtime="20201030 16:04:15.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:15.150" level="INFO">${RESULT} = [{'diff': 0.0001083890000000004}, {'diff': 0.0001082500000000007}, {'diff': 0.00010822200000000157}, {'diff': 0.00010768099999999836}, {'diff': 0.00010795899999999775}, {'diff': 0.0001080279999999996}...</msg>
<status status="PASS" starttime="20201030 16:04:15.147" endtime="20201030 16:04:15.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:15.154" level="INFO">${ACCURACY} = {'diff': [0.0001083890000000004, 0.0001082500000000007, 0.00010822200000000157, 0.00010768099999999836, 0.00010795899999999775, 0.0001080279999999996, 0.00010749999999999996, 0.00010834699999999822, 0...</msg>
<status status="PASS" starttime="20201030 16:04:15.151" endtime="20201030 16:04:15.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.159" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 16:04:15.158" endtime="20201030 16:04:15.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.161" level="INFO">VALUE: [0.0001083890000000004, 0.0001082500000000007, 0.00010822200000000157, 0.00010768099999999836, 0.00010795899999999775, 0.0001080279999999996, 0.00010749999999999996, 0.00010834699999999822, 0.00010829099999999994, 0.00010776399999999978, 0.00010834700000000169, 0.0001075560000000017, 0.0001080279999999996, 0.00010779200000000239, 0.00010779200000000239, 0.00010793099999999861, 0.00010762500000000008, 0.0001078889999999999, 0.00010780499999999901, 0.00010763899999999965, 0.00010841700000000301, 0.00010845800000000225, 0.00010751399999999953, 0.00010812500000000058, 0.00010794400000000218, 0.00010797300000000079, 0.00010766699999999879, 0.0001077080000000015, 0.00010795800000000175, 0.00010815300000000319, 0.00010809700000000144, 0.00010840299999999997, 0.00010798599999999742, 0.00010816600000000329, 0.00010849999999999749, 0.00010854199999999967, 0.00010822200000000157, 0.00010813900000000015, 0.00010845799999999878, 0.00010794400000000218, 0.00010769400000000193, 0.00010823599999999767, 0.00010772300000000054, 0.00010815299999999972, 0.0001077089999999975, 0.00010823600000000114, 0.0001077500000000002, 0.00010802800000000307, 0.00010812500000000058, 0.00010798599999999742]</msg>
<status status="PASS" starttime="20201030 16:04:15.160" endtime="20201030 16:04:15.162"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.155" endtime="20201030 16:04:15.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:15.167" endtime="20201030 16:04:15.186"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.165" endtime="20201030 16:04:15.187"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.164" endtime="20201030 16:04:15.187"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.801" endtime="20201030 16:04:15.187"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:14.800" endtime="20201030 16:04:15.188"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.197" endtime="20201030 16:04:15.216"></status>
</kw>
<msg timestamp="20201030 16:04:15.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:15.195" endtime="20201030 16:04:15.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:15.218" endtime="20201030 16:04:15.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.221" endtime="20201030 16:04:15.222"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.192" endtime="20201030 16:04:15.223"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.190" endtime="20201030 16:04:15.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.230" endtime="20201030 16:04:15.516"></status>
</kw>
<msg timestamp="20201030 16:04:15.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:15.228" endtime="20201030 16:04:15.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:15.521" endtime="20201030 16:04:15.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.529" endtime="20201030 16:04:15.531"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.226" endtime="20201030 16:04:15.531"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.224" endtime="20201030 16:04:15.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:15.536" level="INFO">${RESULT} = [{'diff': 0.00010916700000000029}, {'diff': 0.00010876400000000078}, {'diff': 0.0001088890000000009}, {'diff': 0.00010897200000000232}, {'diff': 0.00010850000000000096}, {'diff': 0.0001093329999999996...</msg>
<status status="PASS" starttime="20201030 16:04:15.532" endtime="20201030 16:04:15.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:15.540" level="INFO">${ACCURACY} = {'diff': [0.00010916700000000029, 0.00010876400000000078, 0.0001088890000000009, 0.00010897200000000232, 0.00010850000000000096, 0.00010933299999999965, 0.0001094029999999975, 0.00010948599999999892, ...</msg>
<status status="PASS" starttime="20201030 16:04:15.537" endtime="20201030 16:04:15.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.544" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 16:04:15.543" endtime="20201030 16:04:15.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.547" level="INFO">VALUE: [0.00010916700000000029, 0.00010876400000000078, 0.0001088890000000009, 0.00010897200000000232, 0.00010850000000000096, 0.00010933299999999965, 0.0001094029999999975, 0.00010948599999999892, 0.00010858400000000185, 0.00010933399999999913, 0.00010866700000000326, 0.00010873600000000164, 0.00010887500000000133, 0.00010943000000000064, 0.00010911099999999854, 0.00010861099999999804, 0.00010911100000000201, 0.0001085699999999988, 0.00010937499999999836, 0.000108902999999997, 0.00010899999999999799, 0.00010893000000000014, 0.00010941600000000107, 0.00010923599999999867, 0.00010875000000000121, 0.00010869499999999893, 0.00010898599999999842, 0.00010947199999999935, 0.00010869399999999946, 0.0001088890000000009, 0.00010879199999999992, 0.00010876299999999783, 0.00010904200000000017, 0.00010906899999999983, 0.00010895799999999928, 0.00010880599999999949, 0.00010898599999999842, 0.0001086950000000024, 0.00010872300000000154, 0.00010934699999999922, 0.00010897200000000232, 0.00010918000000000039, 0.00010913900000000115, 0.00010926400000000128, 0.00010904200000000017, 0.00010879199999999992, 0.00010937499999999836, 0.00010948699999999839, 0.00010862500000000108, 0.00010909700000000244]</msg>
<status status="PASS" starttime="20201030 16:04:15.545" endtime="20201030 16:04:15.549"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.541" endtime="20201030 16:04:15.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:15.553" endtime="20201030 16:04:15.572"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.551" endtime="20201030 16:04:15.573"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.550" endtime="20201030 16:04:15.573"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.188" endtime="20201030 16:04:15.574"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.188" endtime="20201030 16:04:15.574"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.583" endtime="20201030 16:04:15.601"></status>
</kw>
<msg timestamp="20201030 16:04:15.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:15.581" endtime="20201030 16:04:15.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:15.603" endtime="20201030 16:04:15.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.606" endtime="20201030 16:04:15.607"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.579" endtime="20201030 16:04:15.608"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.576" endtime="20201030 16:04:15.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.615" endtime="20201030 16:04:15.901"></status>
</kw>
<msg timestamp="20201030 16:04:15.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:15.613" endtime="20201030 16:04:15.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020531931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:15.905" endtime="20201030 16:04:15.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.914" endtime="20201030 16:04:15.915"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.611" endtime="20201030 16:04:15.916"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.609" endtime="20201030 16:04:15.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:15.921" level="INFO">${RESULT} = [{'diff': 0.0001104029999999985}, {'diff': 0.00011040199999999903}, {'diff': 0.00011016599999999835}, {'diff': 0.00010979100000000144}, {'diff': 0.00011009799999999945}, {'diff': 0.0001100139999999985...</msg>
<status status="PASS" starttime="20201030 16:04:15.917" endtime="20201030 16:04:15.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:15.926" level="INFO">${ACCURACY} = {'diff': [0.0001104029999999985, 0.00011040199999999903, 0.00011016599999999835, 0.00010979100000000144, 0.00011009799999999945, 0.00011001399999999856, 0.00010952799999999763, 0.00011029200000000142,...</msg>
<status status="PASS" starttime="20201030 16:04:15.922" endtime="20201030 16:04:15.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.930" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 16:04:15.929" endtime="20201030 16:04:15.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.933" level="INFO">VALUE: [0.0001104029999999985, 0.00011040199999999903, 0.00011016599999999835, 0.00010979100000000144, 0.00011009799999999945, 0.00011001399999999856, 0.00010952799999999763, 0.00011029200000000142, 0.00010961099999999904, 0.00011016699999999782, 0.00010990300000000147, 0.00011019399999999749, 0.00011033300000000065, 0.00010979099999999797, 0.00010970800000000003, 0.00011036099999999979, 0.00011047200000000035, 0.00010974999999999874, 0.00010974999999999874, 0.00011034700000000022, 0.00011045800000000078, 0.00011018000000000139, 0.0001097219999999996, 0.00011038899999999893, 0.00010995800000000028, 0.00010993100000000061, 0.00010993100000000061, 0.00011019500000000043, 0.00011038800000000293, 0.00011032000000000056, 0.00011016599999999835, 0.00011015199999999878, 0.00011047200000000035, 0.0001103890000000024, 0.00010950000000000196, 0.00010966699999999732, 0.0001100419999999977, 0.00011016700000000129, 0.00010948700000000186, 0.00011006899999999736, 0.00011034700000000022, 0.00010992999999999767, 0.00010983300000000015, 0.00010976399999999831, 0.00010950000000000196, 0.00011036099999999979, 0.00010962500000000208, 0.0001103479999999997, 0.00011029100000000194, 0.0001097219999999996]</msg>
<status status="PASS" starttime="20201030 16:04:15.931" endtime="20201030 16:04:15.934"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.926" endtime="20201030 16:04:15.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:15.938" endtime="20201030 16:04:15.957"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.936" endtime="20201030 16:04:15.958"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.935" endtime="20201030 16:04:15.958"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.575" endtime="20201030 16:04:15.959"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.574" endtime="20201030 16:04:15.959"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.968" endtime="20201030 16:04:15.987"></status>
</kw>
<msg timestamp="20201030 16:04:15.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:15.966" endtime="20201030 16:04:15.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:15.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:15.989" endtime="20201030 16:04:15.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:15.991" endtime="20201030 16:04:15.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.963" endtime="20201030 16:04:15.994"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.961" endtime="20201030 16:04:15.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:16.001" endtime="20201030 16:04:16.288"></status>
</kw>
<msg timestamp="20201030 16:04:16.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:15.999" endtime="20201030 16:04:16.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020215319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:16.292" endtime="20201030 16:04:16.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:16.301" endtime="20201030 16:04:16.302"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.996" endtime="20201030 16:04:16.303"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.995" endtime="20201030 16:04:16.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:16.307" level="INFO">${RESULT} = [{'diff': 0.00011099999999999999}, {'diff': 0.00011079199999999845}, {'diff': 0.00011138899999999993}, {'diff': 0.00011147200000000135}, {'diff': 0.00011125000000000024}, {'diff': 0.000110611000000000...</msg>
<status status="PASS" starttime="20201030 16:04:16.304" endtime="20201030 16:04:16.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:16.311" level="INFO">${ACCURACY} = {'diff': [0.00011099999999999999, 0.00011079199999999845, 0.00011138899999999993, 0.00011147200000000135, 0.00011125000000000024, 0.00011061100000000004, 0.00011069500000000093, 0.00011144500000000168...</msg>
<status status="PASS" starttime="20201030 16:04:16.308" endtime="20201030 16:04:16.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.316" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 16:04:16.315" endtime="20201030 16:04:16.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.319" level="INFO">VALUE: [0.00011099999999999999, 0.00011079199999999845, 0.00011138899999999993, 0.00011147200000000135, 0.00011125000000000024, 0.00011061100000000004, 0.00011069500000000093, 0.00011144500000000168, 0.00011127799999999938, 0.00011129099999999947, 0.00011083300000000115, 0.00011077799999999888, 0.0001114159999999996, 0.00011086100000000029, 0.00011090300000000247, 0.00011076399999999931, 0.00011141699999999907, 0.0001107220000000006, 0.00011086100000000029, 0.00011062499999999961, 0.00011109700000000097, 0.00011129099999999947, 0.00011142999999999917, 0.00011109700000000097, 0.0001110280000000026, 0.00011125000000000024, 0.00011088899999999943, 0.00011073699999999964, 0.00011123600000000067, 0.0001110830000000014, 0.00011141699999999907, 0.00011126399999999981, 0.00011079199999999845, 0.00011068100000000136, 0.00011134700000000122, 0.00011141700000000254, 0.00011077800000000235, 0.00011126399999999981, 0.00011108399999999741, 0.00011051399999999906, 0.00011109700000000097, 0.00011136100000000079, 0.00011137500000000036, 0.0001112220000000011, 0.0001110969999999975, 0.00011113899999999968, 0.0001112769999999999, 0.00011080600000000149, 0.00011086100000000029, 0.00011137500000000036]</msg>
<status status="PASS" starttime="20201030 16:04:16.317" endtime="20201030 16:04:16.319"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.312" endtime="20201030 16:04:16.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:16.324" endtime="20201030 16:04:16.345"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.322" endtime="20201030 16:04:16.345"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.321" endtime="20201030 16:04:16.346"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.960" endtime="20201030 16:04:16.346"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:15.959" endtime="20201030 16:04:16.346"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:16.361" endtime="20201030 16:04:16.384"></status>
</kw>
<msg timestamp="20201030 16:04:16.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:16.359" endtime="20201030 16:04:16.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:16.386" endtime="20201030 16:04:16.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:16.389" endtime="20201030 16:04:16.390"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.354" endtime="20201030 16:04:16.391"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.350" endtime="20201030 16:04:16.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:16.398" endtime="20201030 16:04:16.685"></status>
</kw>
<msg timestamp="20201030 16:04:16.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031432639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031544944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:16.396" endtime="20201030 16:04:16.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031432639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031544944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:16.689" endtime="20201030 16:04:16.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:16.697" endtime="20201030 16:04:16.699"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.394" endtime="20201030 16:04:16.700"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.392" endtime="20201030 16:04:16.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:16.704" level="INFO">${RESULT} = [{'diff': 0.00011230500000000004}, {'diff': 0.00011219400000000296}, {'diff': 0.0001117220000000016}, {'diff': 0.00011237500000000483}, {'diff': 0.00011175000000000074}, {'diff': 0.0001124029999999970...</msg>
<status status="PASS" starttime="20201030 16:04:16.701" endtime="20201030 16:04:16.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 16:04:16.708" level="INFO">${ACCURACY} = {'diff': [0.00011230500000000004, 0.00011219400000000296, 0.0001117220000000016, 0.00011237500000000483, 0.00011175000000000074, 0.00011240299999999703, 0.00011181999999999859, 0.00011169500000000193,...</msg>
<status status="PASS" starttime="20201030 16:04:16.705" endtime="20201030 16:04:16.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.713" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 16:04:16.712" endtime="20201030 16:04:16.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.715" level="INFO">VALUE: [0.00011230500000000004, 0.00011219400000000296, 0.0001117220000000016, 0.00011237500000000483, 0.00011175000000000074, 0.00011240299999999703, 0.00011181999999999859, 0.00011169500000000193, 0.00011173700000000064, 0.00011186100000000476, 0.00011181899999999911, 0.00011165299999999628, 0.00011180499999999954, 0.00011245800000000278, 0.00011168099999999542, 0.00011218100000000286, 0.00011216700000000329, 0.0001117090000000015, 0.00011211199999999755, 0.00011161100000000451, 0.00011161099999999757, 0.00011236099999999832, 0.00011184699999999825, 0.00011193100000000261, 0.00011168099999999542, 0.00011231999999999909, 0.00011193000000000314, 0.00011244500000000268, 0.00011163799999999724, 0.00011225000000000124, 0.00011226400000000081, 0.00011175000000000074, 0.00011254100000000072, 0.00011180599999999902, 0.00011249999999999455, 0.00011186099999999782, 0.000111596999999998, 0.000111596999999998, 0.00011175000000000074, 0.00011241700000000354, 0.00011208299999999893, 0.00011194399999999577, 0.00011187500000000433, 0.00011158299999999843, 0.00011179199999999945, 0.00011173600000000117, 0.00011169500000000193, 0.00011211099999999807, 0.00011156999999999834, 0.00011190300000000347]</msg>
<status status="PASS" starttime="20201030 16:04:16.714" endtime="20201030 16:04:16.717"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.709" endtime="20201030 16:04:16.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:16.721" endtime="20201030 16:04:16.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.720" endtime="20201030 16:04:16.741"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.719" endtime="20201030 16:04:16.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.347" endtime="20201030 16:04:16.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.347" endtime="20201030 16:04:16.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:03:38.155" endtime="20201030 16:04:16.742"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:03:35.060" endtime="20201030 16:04:16.743" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 16:02:46.247" endtime="20201030 16:04:16.747"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 16:04:16.800" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 16:04:16.809" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 16:04:17.962" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 16:04:16.799" endtime="20201030 16:04:17.963"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 16:04:20.966" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 16:04:17.964" endtime="20201030 16:04:20.967"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.797" endtime="20201030 16:04:20.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:20.972" endtime="20201030 16:04:21.215"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:20.970" endtime="20201030 16:04:21.215"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:21.228" endtime="20201030 16:04:24.251"></status>
</kw>
<msg timestamp="20201030 16:04:24.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:21.226" endtime="20201030 16:04:24.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:24.258" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:24.255" endtime="20201030 16:04:24.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:04:24.265" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:04:24.260" endtime="20201030 16:04:24.265"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:21.224" endtime="20201030 16:04:24.267"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:21.221" endtime="20201030 16:04:24.268"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:21.220" endtime="20201030 16:04:24.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:04:24.277" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:04:24.275" endtime="20201030 16:04:24.278"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.271" endtime="20201030 16:04:24.278"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:21.219" endtime="20201030 16:04:24.279"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:21.219" endtime="20201030 16:04:24.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:24.281" endtime="20201030 16:04:24.284"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:21.218" endtime="20201030 16:04:24.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:24.287" endtime="20201030 16:04:24.290"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:21.216" endtime="20201030 16:04:24.291"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:16.796" endtime="20201030 16:04:24.292"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:24.305" endtime="20201030 16:04:24.327"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.302" endtime="20201030 16:04:24.328"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:24.357" endtime="20201030 16:04:27.382"></status>
</kw>
<msg timestamp="20201030 16:04:27.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:24.354" endtime="20201030 16:04:27.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:27.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:27.385" endtime="20201030 16:04:27.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:04:27.395" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:04:27.391" endtime="20201030 16:04:27.398"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:24.348" endtime="20201030 16:04:27.399"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:24.343" endtime="20201030 16:04:27.400"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.340" endtime="20201030 16:04:27.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:04:27.409" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:04:27.407" endtime="20201030 16:04:27.410"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:27.403" endtime="20201030 16:04:27.410"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.338" endtime="20201030 16:04:27.411"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.337" endtime="20201030 16:04:27.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:27.413" endtime="20201030 16:04:27.416"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.333" endtime="20201030 16:04:27.417"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.330" endtime="20201030 16:04:27.418"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:24.299" endtime="20201030 16:04:27.419"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:27.437" endtime="20201030 16:04:33.563"></status>
</kw>
<msg timestamp="20201030 16:04:33.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:27.433" endtime="20201030 16:04:33.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.570" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:33.567" endtime="20201030 16:04:33.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:33.572" endtime="20201030 16:04:33.576"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:27.427" endtime="20201030 16:04:33.577"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:27.423" endtime="20201030 16:04:33.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:33.583" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 16:04:33.580" endtime="20201030 16:04:33.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.593" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 16:04:33.591" endtime="20201030 16:04:33.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.598" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 16:04:33.596" endtime="20201030 16:04:33.599"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.585" endtime="20201030 16:04:33.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.607" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 16:04:33.606" endtime="20201030 16:04:33.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.609" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 16:04:33.608" endtime="20201030 16:04:33.609"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.601" endtime="20201030 16:04:33.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.614" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 16:04:33.613" endtime="20201030 16:04:33.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.616" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 16:04:33.615" endtime="20201030 16:04:33.616"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.610" endtime="20201030 16:04:33.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:33.623" endtime="20201030 16:04:33.931"></status>
</kw>
<msg timestamp="20201030 16:04:33.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.122779694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.222805278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:33.622" endtime="20201030 16:04:33.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.122779694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.222805278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:33.935" endtime="20201030 16:04:33.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:33.943" endtime="20201030 16:04:33.945"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.619" endtime="20201030 16:04:33.946"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.617" endtime="20201030 16:04:33.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 16:04:33.950" level="INFO">${FILTERED} = [{'diff': 0.10002558399999995}, {'diff': 0.10000908399999986}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000003536197e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095305e-07}, {'dif...</msg>
<status status="PASS" starttime="20201030 16:04:33.947" endtime="20201030 16:04:33.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:33.954" level="INFO">${RESULT} = {'diff': [0.10002558399999995, 0.10000908399999986, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.40999999...</msg>
<status status="PASS" starttime="20201030 16:04:33.951" endtime="20201030 16:04:33.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.959" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 16:04:33.958" endtime="20201030 16:04:33.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:33.961" level="INFO">VALUE: [0.10002558399999995, 0.10000908399999986, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999986600033e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 16:04:33.960" endtime="20201030 16:04:33.961"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.955" endtime="20201030 16:04:33.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:33.966" endtime="20201030 16:04:33.986"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.965" endtime="20201030 16:04:33.986"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.963" endtime="20201030 16:04:33.987"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:27.420" endtime="20201030 16:04:33.987"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:04:24.293" endtime="20201030 16:04:33.988" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:33.994" endtime="20201030 16:04:34.014"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.993" endtime="20201030 16:04:34.014"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:34.029" endtime="20201030 16:04:37.051"></status>
</kw>
<msg timestamp="20201030 16:04:37.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:34.027" endtime="20201030 16:04:37.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:37.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:37.056" endtime="20201030 16:04:37.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:04:37.070" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:04:37.064" endtime="20201030 16:04:37.071"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:34.024" endtime="20201030 16:04:37.073"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:34.022" endtime="20201030 16:04:37.075"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:34.021" endtime="20201030 16:04:37.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:04:37.087" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:04:37.084" endtime="20201030 16:04:37.088"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:37.078" endtime="20201030 16:04:37.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:34.020" endtime="20201030 16:04:37.089"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:34.019" endtime="20201030 16:04:37.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:37.091" endtime="20201030 16:04:37.095"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:34.017" endtime="20201030 16:04:37.096"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:34.015" endtime="20201030 16:04:37.097"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:33.991" endtime="20201030 16:04:37.097"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:37.116" endtime="20201030 16:04:43.242"></status>
</kw>
<msg timestamp="20201030 16:04:43.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:37.112" endtime="20201030 16:04:43.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:43.245" endtime="20201030 16:04:43.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:43.251" endtime="20201030 16:04:43.255"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:37.106" endtime="20201030 16:04:43.256"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:37.102" endtime="20201030 16:04:43.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:43.263" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 16:04:43.259" endtime="20201030 16:04:43.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.271" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 16:04:43.269" endtime="20201030 16:04:43.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.278" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 16:04:43.274" endtime="20201030 16:04:43.279"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.264" endtime="20201030 16:04:43.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.289" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 16:04:43.286" endtime="20201030 16:04:43.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.293" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 16:04:43.291" endtime="20201030 16:04:43.294"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.281" endtime="20201030 16:04:43.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.303" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 16:04:43.301" endtime="20201030 16:04:43.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.308" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 16:04:43.306" endtime="20201030 16:04:43.309"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.296" endtime="20201030 16:04:43.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:43.324" endtime="20201030 16:04:43.627"></status>
</kw>
<msg timestamp="20201030 16:04:43.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.112578028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.212619458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:43.321" endtime="20201030 16:04:43.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.112578028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.212619458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:43.631" endtime="20201030 16:04:43.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:43.639" endtime="20201030 16:04:43.641"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.315" endtime="20201030 16:04:43.642"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.311" endtime="20201030 16:04:43.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 16:04:43.646" level="INFO">${FILTERED} = [{'diff': 0.10004142999999965}, {'diff': 0.09999355600000026}, {'diff': 0.10001087500000017}, {'diff': 0.1000108609999999}, {'diff': 0.10001084700000007}, {'diff': 0.1000108609999999}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201030 16:04:43.643" endtime="20201030 16:04:43.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:43.651" level="INFO">${RESULT} = {'diff': [0.10004142999999965, 0.09999355600000026, 0.10001087500000017, 0.1000108609999999, 0.10001084700000007, 0.1000108609999999, 0.1000108609999999, 0.10001086100000034, 0.10001087499999972, 0.10...</msg>
<status status="PASS" starttime="20201030 16:04:43.647" endtime="20201030 16:04:43.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.655" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 16:04:43.654" endtime="20201030 16:04:43.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:43.658" level="INFO">VALUE: [0.10004142999999965, 0.09999355600000026, 0.10001087500000017, 0.1000108609999999, 0.10001084700000007, 0.1000108609999999, 0.1000108609999999, 0.10001086100000034, 0.10001087499999972, 0.10001086099999945, 0.10001086100000034, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001086100000034, 0.10001084700000007, 0.10001087500000061, 0.10001086100000034, 0.10001086099999945, 0.10001087499999972, 0.10001087500000061, 0.10001087500000061, 0.10001084700000007, 0.10001087499999972, 0.10001087500000061, 0.10001087500000061, 0.10001087499999972, 0.10001084700000007, 0.10001087500000061, 0.10001087500000061, 0.10001086100000034, 0.10001087500000061, 0.10001087500000061, 0.10001086100000034, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034, 0.10001091699999964, 0.10001086099999945, 0.10001084700000007, 0.10001090300000026, 0.10001084800000015, 0.10001087499999972, 0.10001088899999999, 0.10001086200000042, 0.10001087499999972, 0.10001088899999999, 0.10001087500000061]</msg>
<status status="PASS" starttime="20201030 16:04:43.656" endtime="20201030 16:04:43.658"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.652" endtime="20201030 16:04:43.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:43.663" endtime="20201030 16:04:43.682"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.661" endtime="20201030 16:04:43.683"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.660" endtime="20201030 16:04:43.683"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:37.099" endtime="20201030 16:04:43.683"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:04:33.989" endtime="20201030 16:04:43.684" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:43.691" endtime="20201030 16:04:43.710"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.689" endtime="20201030 16:04:43.711"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:43.724" endtime="20201030 16:04:46.746"></status>
</kw>
<msg timestamp="20201030 16:04:46.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:43.722" endtime="20201030 16:04:46.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:46.753" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:46.750" endtime="20201030 16:04:46.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:04:46.759" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:04:46.755" endtime="20201030 16:04:46.760"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:43.720" endtime="20201030 16:04:46.762"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:43.717" endtime="20201030 16:04:46.763"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.716" endtime="20201030 16:04:46.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:04:46.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:04:46.770" endtime="20201030 16:04:46.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:46.765" endtime="20201030 16:04:46.773"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.715" endtime="20201030 16:04:46.774"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.715" endtime="20201030 16:04:46.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:46.776" endtime="20201030 16:04:46.779"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.713" endtime="20201030 16:04:46.780"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.712" endtime="20201030 16:04:46.781"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:43.688" endtime="20201030 16:04:46.782"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:46.802" endtime="20201030 16:04:52.928"></status>
</kw>
<msg timestamp="20201030 16:04:52.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:46.799" endtime="20201030 16:04:52.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:52.932" endtime="20201030 16:04:52.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:52.938" endtime="20201030 16:04:52.942"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:46.793" endtime="20201030 16:04:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:46.786" endtime="20201030 16:04:52.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:52.949" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 16:04:52.946" endtime="20201030 16:04:52.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.958" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 16:04:52.956" endtime="20201030 16:04:52.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.963" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 16:04:52.961" endtime="20201030 16:04:52.964"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:52.951" endtime="20201030 16:04:52.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.973" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 16:04:52.971" endtime="20201030 16:04:52.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.978" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 16:04:52.975" endtime="20201030 16:04:52.978"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:52.966" endtime="20201030 16:04:52.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.988" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 16:04:52.986" endtime="20201030 16:04:52.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:52.992" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 16:04:52.990" endtime="20201030 16:04:52.993"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:52.981" endtime="20201030 16:04:52.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:53.009" endtime="20201030 16:04:53.317"></status>
</kw>
<msg timestamp="20201030 16:04:53.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102422819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202531833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:53.005" endtime="20201030 16:04:53.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:53.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.102422819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.202531833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:04:53.322" endtime="20201030 16:04:53.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:53.330" endtime="20201030 16:04:53.331"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:52.999" endtime="20201030 16:04:53.332"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:52.996" endtime="20201030 16:04:53.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 16:04:53.337" level="INFO">${FILTERED} = [{'diff': 0.10010901400000005}, {'diff': 0.09992727800000001}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095305e-07}, {'diff': 5.409999999095305e-07}, {'diff': 5.419999999922709e-07}, {'dif...</msg>
<status status="PASS" starttime="20201030 16:04:53.333" endtime="20201030 16:04:53.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:04:53.342" level="INFO">${RESULT} = {'diff': [0.10010901400000005, 0.09992727800000001, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.41000000...</msg>
<status status="PASS" starttime="20201030 16:04:53.338" endtime="20201030 16:04:53.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:04:53.346" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 16:04:53.345" endtime="20201030 16:04:53.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:04:53.349" level="INFO">VALUE: [0.10010901400000005, 0.09992727800000001, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001136099999997, 0.10001087499999972, 0.10001087499999972, 0.10001086099999945, 0.10001087499999972, 0.10001088899999999, 0.10001090200000018, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001134700000058]</msg>
<status status="PASS" starttime="20201030 16:04:53.347" endtime="20201030 16:04:53.349"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.342" endtime="20201030 16:04:53.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:53.354" endtime="20201030 16:04:53.373"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.352" endtime="20201030 16:04:53.374"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.351" endtime="20201030 16:04:53.374"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:46.783" endtime="20201030 16:04:53.374"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:04:43.685" endtime="20201030 16:04:53.375" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:04:53.381" endtime="20201030 16:04:53.401"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.380" endtime="20201030 16:04:53.402"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:53.418" endtime="20201030 16:04:56.441"></status>
</kw>
<msg timestamp="20201030 16:04:56.442" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:53.416" endtime="20201030 16:04:56.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:04:56.448" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:56.444" endtime="20201030 16:04:56.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:04:56.455" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:04:56.450" endtime="20201030 16:04:56.455"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:53.413" endtime="20201030 16:04:56.457"></status>
</kw>
<status status="FAIL" starttime="20201030 16:04:53.408" endtime="20201030 16:04:56.458"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.407" endtime="20201030 16:04:56.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:04:56.467" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:04:56.465" endtime="20201030 16:04:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:56.460" endtime="20201030 16:04:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.406" endtime="20201030 16:04:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.405" endtime="20201030 16:04:56.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:56.470" endtime="20201030 16:04:56.474"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.404" endtime="20201030 16:04:56.475"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.402" endtime="20201030 16:04:56.476"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:53.379" endtime="20201030 16:04:56.476"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:04:56.494" endtime="20201030 16:05:02.620"></status>
</kw>
<msg timestamp="20201030 16:05:02.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:04:56.491" endtime="20201030 16:05:02.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.627" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:02.623" endtime="20201030 16:05:02.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:02.630" endtime="20201030 16:05:02.633"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:56.485" endtime="20201030 16:05:02.635"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:56.481" endtime="20201030 16:05:02.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:05:02.641" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 16:05:02.637" endtime="20201030 16:05:02.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.650" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 16:05:02.648" endtime="20201030 16:05:02.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.654" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 16:05:02.652" endtime="20201030 16:05:02.655"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:02.643" endtime="20201030 16:05:02.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.665" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 16:05:02.662" endtime="20201030 16:05:02.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.669" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 16:05:02.667" endtime="20201030 16:05:02.670"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:02.657" endtime="20201030 16:05:02.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.680" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 16:05:02.677" endtime="20201030 16:05:02.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:02.684" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 16:05:02.682" endtime="20201030 16:05:02.685"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:02.672" endtime="20201030 16:05:02.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:02.700" endtime="20201030 16:05:03.003"></status>
</kw>
<msg timestamp="20201030 16:05:03.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104031292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204206944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:05:02.697" endtime="20201030 16:05:03.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:03.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104031292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204206944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:05:03.007" endtime="20201030 16:05:03.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:03.015" endtime="20201030 16:05:03.017"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:02.691" endtime="20201030 16:05:03.017"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:02.687" endtime="20201030 16:05:03.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 16:05:03.022" level="INFO">${FILTERED} = [{'diff': 0.10017565199999989}, {'diff': 0.09989431999999976}, {'diff': 0.09997570899999975}, {'diff': 0.10001087500000017}, {'diff': 0.1000108609999999}, {'diff': 0.10001088899999999}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 16:05:03.019" endtime="20201030 16:05:03.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:05:03.026" level="INFO">${RESULT} = {'diff': [0.10017565199999989, 0.09989431999999976, 0.09997570899999975, 0.10001087500000017, 0.1000108609999999, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001087500000061, 0....</msg>
<status status="PASS" starttime="20201030 16:05:03.023" endtime="20201030 16:05:03.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:03.030" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 16:05:03.029" endtime="20201030 16:05:03.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:03.033" level="INFO">VALUE: [0.10017565199999989, 0.09989431999999976, 0.09997570899999975, 0.10001087500000017, 0.1000108609999999, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001087500000061, 0.10001087499999972, 0.10001091599999956, 0.10001084700000007, 0.10001090300000026, 0.10001086199999953, 0.10001090299999937, 0.10001090200000018, 0.10001084700000007, 0.10001090299999937, 0.10001086199999953, 0.10001090300000026, 0.10001095800000037, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001143000000035, 0.10001137499999935, 0.10001090200000018, 0.10001087500000061, 0.10001088899999999, 0.10001093099999991, 0.10001087500000061, 0.10001086100000034, 0.10001086100000034, 0.10001088900000088, 0.10001083399999988, 0.10001087499999972, 0.10001084700000007, 0.10001087500000061, 0.10001087499999883, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201030 16:05:03.031" endtime="20201030 16:05:03.033"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.027" endtime="20201030 16:05:03.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:05:03.038" endtime="20201030 16:05:03.057"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.036" endtime="20201030 16:05:03.058"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.035" endtime="20201030 16:05:03.058"></status>
</kw>
<status status="PASS" starttime="20201030 16:04:56.478" endtime="20201030 16:05:03.058"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:04:53.376" endtime="20201030 16:05:03.059" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:05:03.065" endtime="20201030 16:05:03.085"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.064" endtime="20201030 16:05:03.086"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:03.100" endtime="20201030 16:05:06.122"></status>
</kw>
<msg timestamp="20201030 16:05:06.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:03.099" endtime="20201030 16:05:06.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:06.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:06.125" endtime="20201030 16:05:06.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:05:06.135" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:05:06.131" endtime="20201030 16:05:06.135"></status>
</kw>
<status status="FAIL" starttime="20201030 16:05:03.096" endtime="20201030 16:05:06.137"></status>
</kw>
<status status="FAIL" starttime="20201030 16:05:03.093" endtime="20201030 16:05:06.138"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.092" endtime="20201030 16:05:06.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:05:06.147" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:05:06.145" endtime="20201030 16:05:06.148"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:06.141" endtime="20201030 16:05:06.148"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.091" endtime="20201030 16:05:06.149"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.091" endtime="20201030 16:05:06.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:06.151" endtime="20201030 16:05:06.154"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.088" endtime="20201030 16:05:06.155"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.087" endtime="20201030 16:05:06.156"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:03.063" endtime="20201030 16:05:06.157"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:06.174" endtime="20201030 16:05:12.299"></status>
</kw>
<msg timestamp="20201030 16:05:12.300" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:06.171" endtime="20201030 16:05:12.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.305" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:12.302" endtime="20201030 16:05:12.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:12.309" endtime="20201030 16:05:12.312"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:06.165" endtime="20201030 16:05:12.313"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:06.161" endtime="20201030 16:05:12.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:05:12.320" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 16:05:12.316" endtime="20201030 16:05:12.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.329" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 16:05:12.326" endtime="20201030 16:05:12.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.333" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 16:05:12.331" endtime="20201030 16:05:12.334"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.321" endtime="20201030 16:05:12.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.344" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 16:05:12.341" endtime="20201030 16:05:12.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.346" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 16:05:12.345" endtime="20201030 16:05:12.347"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.336" endtime="20201030 16:05:12.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.351" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 16:05:12.350" endtime="20201030 16:05:12.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.353" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 16:05:12.352" endtime="20201030 16:05:12.353"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.348" endtime="20201030 16:05:12.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:12.361" endtime="20201030 16:05:12.660"></status>
</kw>
<msg timestamp="20201030 16:05:12.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098306292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198561389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:05:12.359" endtime="20201030 16:05:12.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098306292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198561389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:05:12.664" endtime="20201030 16:05:12.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:12.672" endtime="20201030 16:05:12.673"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.356" endtime="20201030 16:05:12.674"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.355" endtime="20201030 16:05:12.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 16:05:12.678" level="INFO">${FILTERED} = [{'diff': 0.1002550969999998}, {'diff': 0.0998175269999999}, {'diff': 0.09997356900000032}, {'diff': 0.10001091699999964}, {'diff': 0.10001136099999997}, {'diff': 0.1000108609999999}, {'diff': 0.10001...</msg>
<status status="PASS" starttime="20201030 16:05:12.675" endtime="20201030 16:05:12.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:05:12.682" level="INFO">${RESULT} = {'diff': [0.1002550969999998, 0.0998175269999999, 0.09997356900000032, 0.10001091699999964, 0.10001136099999997, 0.1000108609999999, 0.10001088899999999, 0.10001084700000007, 0.10001088800000035, 0.10...</msg>
<status status="PASS" starttime="20201030 16:05:12.679" endtime="20201030 16:05:12.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.687" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 16:05:12.686" endtime="20201030 16:05:12.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:12.689" level="INFO">VALUE: [0.1002550969999998, 0.0998175269999999, 0.09997356900000032, 0.10001091699999964, 0.10001136099999997, 0.1000108609999999, 0.10001088899999999, 0.10001084700000007, 0.10001088800000035, 0.10001084700000007, 0.10001086099999945, 0.10001087499999972, 0.10001088899999999, 0.10001084700000007, 0.10001087499999972, 0.10001090200000018, 0.10001084700000007, 0.10001086100000034, 0.10001087500000061, 0.10001084800000015, 0.10001087499999972, 0.10001087500000061, 0.10001086100000034, 0.10001087500000061, 0.10001087500000061, 0.10001088899999999, 0.10001087499999972, 0.10001084699999918, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001087500000061, 0.10001088899999999, 0.10001086099999945, 0.10001087499999972, 0.10001090300000026, 0.10001084700000007, 0.10001088899999999, 0.10001088899999999, 0.10001086099999945, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001087500000061, 0.10001088900000088, 0.10001090300000115]</msg>
<status status="PASS" starttime="20201030 16:05:12.688" endtime="20201030 16:05:12.690"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.683" endtime="20201030 16:05:12.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:05:12.694" endtime="20201030 16:05:12.714"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.693" endtime="20201030 16:05:12.714"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.692" endtime="20201030 16:05:12.715"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:06.158" endtime="20201030 16:05:12.715"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:05:03.060" endtime="20201030 16:05:12.715" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:05:12.722" endtime="20201030 16:05:12.742"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.720" endtime="20201030 16:05:12.743"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:12.763" endtime="20201030 16:05:15.786"></status>
</kw>
<msg timestamp="20201030 16:05:15.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:12.759" endtime="20201030 16:05:15.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:15.792" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:15.789" endtime="20201030 16:05:15.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 16:05:15.798" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 16:05:15.794" endtime="20201030 16:05:15.799"></status>
</kw>
<status status="FAIL" starttime="20201030 16:05:12.757" endtime="20201030 16:05:15.800"></status>
</kw>
<status status="FAIL" starttime="20201030 16:05:12.752" endtime="20201030 16:05:15.801"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.750" endtime="20201030 16:05:15.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 16:05:15.809" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 16:05:15.808" endtime="20201030 16:05:15.810"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:15.803" endtime="20201030 16:05:15.810"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.750" endtime="20201030 16:05:15.811"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.749" endtime="20201030 16:05:15.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:15.813" endtime="20201030 16:05:15.815"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.747" endtime="20201030 16:05:15.817"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.745" endtime="20201030 16:05:15.818"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:12.719" endtime="20201030 16:05:15.818"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:15.837" endtime="20201030 16:05:21.962"></status>
</kw>
<msg timestamp="20201030 16:05:21.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:15.834" endtime="20201030 16:05:21.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:21.968" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 16:05:21.965" endtime="20201030 16:05:21.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:21.975" endtime="20201030 16:05:21.978"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:15.826" endtime="20201030 16:05:21.979"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:15.822" endtime="20201030 16:05:21.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:05:21.985" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 16:05:21.982" endtime="20201030 16:05:21.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:21.993" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 16:05:21.991" endtime="20201030 16:05:21.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:21.998" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 16:05:21.996" endtime="20201030 16:05:21.998"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:21.987" endtime="20201030 16:05:21.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.007" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 16:05:22.005" endtime="20201030 16:05:22.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.012" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 16:05:22.010" endtime="20201030 16:05:22.012"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.001" endtime="20201030 16:05:22.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.021" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 16:05:22.019" endtime="20201030 16:05:22.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.025" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 16:05:22.023" endtime="20201030 16:05:22.026"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.015" endtime="20201030 16:05:22.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:22.040" endtime="20201030 16:05:22.341"></status>
</kw>
<msg timestamp="20201030 16:05:22.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106353222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206602764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:05:22.037" endtime="20201030 16:05:22.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106353222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.206602764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 16:05:22.345" endtime="20201030 16:05:22.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 16:05:22.353" endtime="20201030 16:05:22.354"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.032" endtime="20201030 16:05:22.355"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.028" endtime="20201030 16:05:22.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 16:05:22.359" level="INFO">${FILTERED} = [{'diff': 0.1002495419999998}, {'diff': 0.09981648599999993}, {'diff': 0.10001916699999969}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.420000004363601e-07}, {'diff':...</msg>
<status status="PASS" starttime="20201030 16:05:22.356" endtime="20201030 16:05:22.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 16:05:22.364" level="INFO">${RESULT} = {'diff': [0.1002495419999998, 0.09981648599999993, 0.10001916699999969, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.42000000436...</msg>
<status status="PASS" starttime="20201030 16:05:22.360" endtime="20201030 16:05:22.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.368" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 16:05:22.367" endtime="20201030 16:05:22.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 16:05:22.371" level="INFO">VALUE: [0.1002495419999998, 0.09981648599999993, 0.10001916699999969, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001137500000024, 0.10001088799999991, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001093099999991, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.420000004363601e-07, 0.1000113890000005, 0.10001081900000042, 0.10001086100000034, 0.10001086099999945, 0.10001087499999972, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001084700000007, 0.10001087499999972, 0.10001087499999972, 0.10001094500000018, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 16:05:22.369" endtime="20201030 16:05:22.371"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.365" endtime="20201030 16:05:22.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 16:05:22.375" endtime="20201030 16:05:22.395"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.374" endtime="20201030 16:05:22.395"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:22.373" endtime="20201030 16:05:22.396"></status>
</kw>
<status status="PASS" starttime="20201030 16:05:15.819" endtime="20201030 16:05:22.396"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 16:05:12.717" endtime="20201030 16:05:22.397" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 16:04:16.755" endtime="20201030 16:05:22.403"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201030 15:56:13.243" endtime="20201030 16:05:22.436"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="6">Critical Tests</stat>
<stat pass="12" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="6">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="6">BOARD_arduino-due</stat>
<stat pass="4" fail="6">dev</stat>
</tag>
<suite>
<stat pass="12" fail="6" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="3" fail="6" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
