<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 15:50:29.915" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:50:31.219" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:50:31.235" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:50:32.115" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:50:31.214" endtime="20201030 15:50:32.118"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.125" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:50:32.121" endtime="20201030 15:50:35.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:31.211" endtime="20201030 15:50:35.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:35.132" endtime="20201030 15:50:35.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.129" endtime="20201030 15:50:35.404"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.419" endtime="20201030 15:50:35.439"></status>
</kw>
<msg timestamp="20201030 15:50:35.440" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:35.418" endtime="20201030 15:50:35.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:35.442" endtime="20201030 15:50:35.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.453" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:35.449" endtime="20201030 15:50:35.454"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:35.414" endtime="20201030 15:50:35.456"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:35.411" endtime="20201030 15:50:35.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.410" endtime="20201030 15:50:35.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:35.467" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:35.465" endtime="20201030 15:50:35.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.460" endtime="20201030 15:50:35.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.409" endtime="20201030 15:50:35.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.408" endtime="20201030 15:50:35.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.470" endtime="20201030 15:50:35.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.407" endtime="20201030 15:50:35.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.477" endtime="20201030 15:50:35.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.405" endtime="20201030 15:50:35.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:31.208" endtime="20201030 15:50:35.483"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:35.498" endtime="20201030 15:50:35.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.494" endtime="20201030 15:50:35.521"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.558" endtime="20201030 15:50:35.577"></status>
</kw>
<msg timestamp="20201030 15:50:35.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:35.554" endtime="20201030 15:50:35.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:35.581" endtime="20201030 15:50:35.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.593" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:35.588" endtime="20201030 15:50:35.593"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:35.546" endtime="20201030 15:50:35.595"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:35.539" endtime="20201030 15:50:35.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.535" endtime="20201030 15:50:35.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:35.606" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:35.605" endtime="20201030 15:50:35.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.600" endtime="20201030 15:50:35.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.533" endtime="20201030 15:50:35.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.531" endtime="20201030 15:50:35.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.611" endtime="20201030 15:50:35.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.527" endtime="20201030 15:50:35.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.523" endtime="20201030 15:50:35.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.491" endtime="20201030 15:50:35.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.639" endtime="20201030 15:50:35.654"></status>
</kw>
<msg timestamp="20201030 15:50:35.655" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:35.635" endtime="20201030 15:50:35.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.661" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:35.657" endtime="20201030 15:50:35.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:35.663" endtime="20201030 15:50:35.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.626" endtime="20201030 15:50:35.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.620" endtime="20201030 15:50:35.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.680" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:50:35.678" endtime="20201030 15:50:35.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.685" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:50:35.682" endtime="20201030 15:50:35.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.672" endtime="20201030 15:50:35.687"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:50:35.484" endtime="20201030 15:50:35.689" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:50:30.195" endtime="20201030 15:50:35.695"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:50:35.829" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:50:35.845" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:50:38.260" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:50:35.825" endtime="20201030 15:50:38.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:50:41.267" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:50:38.264" endtime="20201030 15:50:41.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.822" endtime="20201030 15:50:41.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:41.274" endtime="20201030 15:50:41.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.272" endtime="20201030 15:50:41.624"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.654" endtime="20201030 15:50:41.676"></status>
</kw>
<msg timestamp="20201030 15:50:41.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:50:41.651" endtime="20201030 15:50:41.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:41.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:50:41.680" endtime="20201030 15:50:41.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:41.690" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:41.686" endtime="20201030 15:50:41.691"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:41.644" endtime="20201030 15:50:41.693"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:41.639" endtime="20201030 15:50:41.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.636" endtime="20201030 15:50:41.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:41.703" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:41.702" endtime="20201030 15:50:41.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.697" endtime="20201030 15:50:41.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.634" endtime="20201030 15:50:41.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.632" endtime="20201030 15:50:41.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.707" endtime="20201030 15:50:41.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.629" endtime="20201030 15:50:41.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.714" endtime="20201030 15:50:41.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.626" endtime="20201030 15:50:41.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:35.819" endtime="20201030 15:50:41.720"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:41.733" endtime="20201030 15:50:41.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.730" endtime="20201030 15:50:41.757"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.854" endtime="20201030 15:50:41.873"></status>
</kw>
<msg timestamp="20201030 15:50:41.874" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:41.850" endtime="20201030 15:50:41.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:41.880" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:41.876" endtime="20201030 15:50:41.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:41.887" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:41.883" endtime="20201030 15:50:41.888"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:41.842" endtime="20201030 15:50:41.890"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:41.773" endtime="20201030 15:50:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.770" endtime="20201030 15:50:41.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:41.900" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:41.898" endtime="20201030 15:50:41.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.894" endtime="20201030 15:50:41.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.768" endtime="20201030 15:50:41.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.767" endtime="20201030 15:50:41.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.903" endtime="20201030 15:50:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.763" endtime="20201030 15:50:41.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.758" endtime="20201030 15:50:41.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.727" endtime="20201030 15:50:41.910"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.933" endtime="20201030 15:50:41.950"></status>
</kw>
<msg timestamp="20201030 15:50:41.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:41.929" endtime="20201030 15:50:41.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:41.958" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:41.954" endtime="20201030 15:50:41.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.962" endtime="20201030 15:50:41.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.922" endtime="20201030 15:50:41.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.917" endtime="20201030 15:50:41.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:41.993" endtime="20201030 15:50:42.324"></status>
</kw>
<msg timestamp="20201030 15:50:42.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.192703514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.192716528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:41.989" endtime="20201030 15:50:42.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.192703514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.192716528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:42.331" endtime="20201030 15:50:42.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.343" endtime="20201030 15:50:42.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.979" endtime="20201030 15:50:42.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.973" endtime="20201030 15:50:42.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:42.359" level="INFO">${RESULT} = [{'diff': 1.3014000000005632e-05}, {'diff': 1.258400000000992e-05}, {'diff': 1.5860999999978143e-05}, {'diff': 8.79200000000746e-06}, {'diff': 6.805000000026373e-06}, {'diff': 9.167000000004366e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:50:42.352" endtime="20201030 15:50:42.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:42.367" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3014000000005632e-05, 1.258400000000992e-05, 1.5860999999978143e-05, 8.79200000000746e-06, 6.805000000026373e-06, 9.167000000004366e-06, 5.555000000018184e-06, 1.680500000000862e-05, 1.108...</msg>
<status status="PASS" starttime="20201030 15:50:42.362" endtime="20201030 15:50:42.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.377" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:42.375" endtime="20201030 15:50:42.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.382" level="INFO">VALUE: [1.3014000000005632e-05, 1.258400000000992e-05, 1.5860999999978143e-05, 8.79200000000746e-06, 6.805000000026373e-06, 9.167000000004366e-06, 5.555000000018184e-06, 1.680500000000862e-05, 1.1082999999995069e-05, 1.2917000000001178e-05, 9.486000000002992e-06, 1.4916000000003704e-05, 1.5138999999997349e-05, 1.0485999999976237e-05, 8.235999999994803e-06, 9.915999999998704e-06, 1.156899999998906e-05, 1.0236999999996277e-05, 1.0916999999999177e-05, 5.597999999995551e-06, 1.268099999998662e-05, 1.1208000000012541e-05, 1.5777999999994075e-05, 1.3917000000002178e-05, 1.1985999999991614e-05]</msg>
<status status="PASS" starttime="20201030 15:50:42.380" endtime="20201030 15:50:42.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.369" endtime="20201030 15:50:42.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:42.394" endtime="20201030 15:50:42.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.389" endtime="20201030 15:50:42.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.387" endtime="20201030 15:50:42.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.914" endtime="20201030 15:50:42.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.913" endtime="20201030 15:50:42.419"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.439" endtime="20201030 15:50:42.452"></status>
</kw>
<msg timestamp="20201030 15:50:42.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:42.435" endtime="20201030 15:50:42.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.460" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:42.456" endtime="20201030 15:50:42.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.462" endtime="20201030 15:50:42.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.428" endtime="20201030 15:50:42.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.424" endtime="20201030 15:50:42.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.486" endtime="20201030 15:50:42.806"></status>
</kw>
<msg timestamp="20201030 15:50:42.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035746389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035758889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:42.482" endtime="20201030 15:50:42.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035746389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035758889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:42.812" endtime="20201030 15:50:42.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.825" endtime="20201030 15:50:42.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.474" endtime="20201030 15:50:42.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.470" endtime="20201030 15:50:42.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:42.840" level="INFO">${RESULT} = [{'diff': 1.2499999999998623e-05}, {'diff': 1.2236000000005742e-05}, {'diff': 1.2916999999994239e-05}, {'diff': 9.471999999996483e-06}, {'diff': 1.0263999999995943e-05}, {'diff': 1.2749999999998873e-0...</msg>
<status status="PASS" starttime="20201030 15:50:42.833" endtime="20201030 15:50:42.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:42.850" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2499999999998623e-05, 1.2236000000005742e-05, 1.2916999999994239e-05, 9.471999999996483e-06, 1.0263999999995943e-05, 1.2749999999998873e-05, 1.5041999999999833e-05, 1.1361000000001398e-05,...</msg>
<status status="PASS" starttime="20201030 15:50:42.843" endtime="20201030 15:50:42.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.861" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:42.858" endtime="20201030 15:50:42.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.866" level="INFO">VALUE: [1.2499999999998623e-05, 1.2236000000005742e-05, 1.2916999999994239e-05, 9.471999999996483e-06, 1.0263999999995943e-05, 1.2749999999998873e-05, 1.5041999999999833e-05, 1.1361000000001398e-05, 5.110999999995147e-06, 1.6901999999999195e-05, 1.2235999999998803e-05, 8.082999999999008e-06, 1.2485999999999053e-05, 1.3487000000006466e-05, 1.5028000000000263e-05, 1.2472000000006422e-05, 1.0459000000004326e-05, 1.0319000000001688e-05, 1.636099999999946e-05, 7.805999999999091e-06, 1.5916000000004704e-05, 1.1930999999999747e-05, 1.0485999999997053e-05, 8.902999999997607e-06, 1.4236000000000804e-05]</msg>
<status status="PASS" starttime="20201030 15:50:42.863" endtime="20201030 15:50:42.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.852" endtime="20201030 15:50:42.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:42.878" endtime="20201030 15:50:42.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.874" endtime="20201030 15:50:42.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.871" endtime="20201030 15:50:42.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.420" endtime="20201030 15:50:42.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.419" endtime="20201030 15:50:42.904"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.924" endtime="20201030 15:50:42.937"></status>
</kw>
<msg timestamp="20201030 15:50:42.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:42.921" endtime="20201030 15:50:42.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:42.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:42.940" endtime="20201030 15:50:42.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.946" endtime="20201030 15:50:42.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.913" endtime="20201030 15:50:42.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.909" endtime="20201030 15:50:42.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:42.970" endtime="20201030 15:50:43.315"></status>
</kw>
<msg timestamp="20201030 15:50:43.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036105097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:42.967" endtime="20201030 15:50:43.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036105097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:43.322" endtime="20201030 15:50:43.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.335" endtime="20201030 15:50:43.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.959" endtime="20201030 15:50:43.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.954" endtime="20201030 15:50:43.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:43.351" level="INFO">${RESULT} = [{'diff': 9.471999999996483e-06}, {'diff': 1.5569999999999473e-05}, {'diff': 1.0902000000000134e-05}, {'diff': 1.2653000000001358e-05}, {'diff': 1.2708999999999637e-05}, {'diff': 1.1152999999999857e-0...</msg>
<status status="PASS" starttime="20201030 15:50:43.343" endtime="20201030 15:50:43.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:43.359" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.471999999996483e-06, 1.5569999999999473e-05, 1.0902000000000134e-05, 1.2653000000001358e-05, 1.2708999999999637e-05, 1.1152999999999857e-05, 1.0832999999994819e-05, 1.1805000000003618e-05,...</msg>
<status status="PASS" starttime="20201030 15:50:43.353" endtime="20201030 15:50:43.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.369" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:43.367" endtime="20201030 15:50:43.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.374" level="INFO">VALUE: [9.471999999996483e-06, 1.5569999999999473e-05, 1.0902000000000134e-05, 1.2653000000001358e-05, 1.2708999999999637e-05, 1.1152999999999857e-05, 1.0832999999994819e-05, 1.1805000000003618e-05, 1.0861000000000898e-05, 1.1124999999993779e-05, 9.028000000001202e-06, 1.536099999999846e-05, 1.0138999999999287e-05, 9.597000000000078e-06, 6.097000000003516e-06, 8.333000000006197e-06, 1.1695000000006006e-05, 8.693999999996593e-06, 1.8014000000003694e-05, 1.330499999999818e-05, 1.3028000000005202e-05, 9.014000000001632e-06, 1.2889000000002038e-05, 8.486000000001992e-06, 9.583000000000508e-06]</msg>
<status status="PASS" starttime="20201030 15:50:43.372" endtime="20201030 15:50:43.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.361" endtime="20201030 15:50:43.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:43.387" endtime="20201030 15:50:43.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.382" endtime="20201030 15:50:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.380" endtime="20201030 15:50:43.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.905" endtime="20201030 15:50:43.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:42.904" endtime="20201030 15:50:43.412"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.433" endtime="20201030 15:50:43.448"></status>
</kw>
<msg timestamp="20201030 15:50:43.449" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:43.430" endtime="20201030 15:50:43.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:43.451" endtime="20201030 15:50:43.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.457" endtime="20201030 15:50:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.422" endtime="20201030 15:50:43.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.417" endtime="20201030 15:50:43.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.481" endtime="20201030 15:50:43.828"></status>
</kw>
<msg timestamp="20201030 15:50:43.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037713097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03772775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:50:43.478" endtime="20201030 15:50:43.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037713097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03772775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:50:43.835" endtime="20201030 15:50:43.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.849" endtime="20201030 15:50:43.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.470" endtime="20201030 15:50:43.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.466" endtime="20201030 15:50:43.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:43.866" level="INFO">${RESULT} = [{'diff': 1.4652999999996419e-05}, {'diff': 1.0028000000002202e-05}, {'diff': 1.0832999999994819e-05}, {'diff': 1.0680999999998497e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 1.5250000000001374e-...</msg>
<status status="PASS" starttime="20201030 15:50:43.858" endtime="20201030 15:50:43.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:43.875" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.4652999999996419e-05, 1.0028000000002202e-05, 1.0832999999994819e-05, 1.0680999999998497e-05, 1.5250000000001374e-05, 1.5250000000001374e-05, 1.5693999999996655e-05, 9.041999999993833e-06,...</msg>
<status status="PASS" starttime="20201030 15:50:43.868" endtime="20201030 15:50:43.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.887" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:43.884" endtime="20201030 15:50:43.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.893" level="INFO">VALUE: [1.4652999999996419e-05, 1.0028000000002202e-05, 1.0832999999994819e-05, 1.0680999999998497e-05, 1.5250000000001374e-05, 1.5250000000001374e-05, 1.5693999999996655e-05, 9.041999999993833e-06, 4.930999999999686e-06, 1.0361000000000398e-05, 1.2999999999999123e-05, 8.472000000002422e-06, 1.381899999999825e-05, 1.427700000000004e-05, 1.581900000000025e-05, 1.2056000000003342e-05, 6.2639999999988816e-06, 9.805999999994153e-06, 1.380499999999868e-05, 7.235999999993803e-06, 1.0694999999998067e-05, 1.5013999999993755e-05, 1.691699999999824e-05, 9.847000000000328e-06, 9.721999999996733e-06]</msg>
<status status="PASS" starttime="20201030 15:50:43.890" endtime="20201030 15:50:43.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.877" endtime="20201030 15:50:43.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:43.907" endtime="20201030 15:50:43.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.902" endtime="20201030 15:50:43.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.899" endtime="20201030 15:50:43.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.414" endtime="20201030 15:50:43.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.413" endtime="20201030 15:50:43.933"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.957" endtime="20201030 15:50:43.970"></status>
</kw>
<msg timestamp="20201030 15:50:43.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:43.953" endtime="20201030 15:50:43.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:43.978" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:43.974" endtime="20201030 15:50:43.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:43.981" endtime="20201030 15:50:43.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.945" endtime="20201030 15:50:43.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.939" endtime="20201030 15:50:43.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.007" endtime="20201030 15:50:44.335"></status>
</kw>
<msg timestamp="20201030 15:50:44.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040338792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040350486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:44.003" endtime="20201030 15:50:44.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040338792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040350486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:44.341" endtime="20201030 15:50:44.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.354" endtime="20201030 15:50:44.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.995" endtime="20201030 15:50:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.990" endtime="20201030 15:50:44.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:44.370" level="INFO">${RESULT} = [{'diff': 1.1693999999999594e-05}, {'diff': 1.1597000000002078e-05}, {'diff': 1.1569000000002938e-05}, {'diff': 1.1041999999995833e-05}, {'diff': 1.0138999999999287e-05}, {'diff': 6.5279999999987015e-...</msg>
<status status="PASS" starttime="20201030 15:50:44.363" endtime="20201030 15:50:44.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:44.378" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1693999999999594e-05, 1.1597000000002078e-05, 1.1569000000002938e-05, 1.1041999999995833e-05, 1.0138999999999287e-05, 6.5279999999987015e-06, 9.264000000001882e-06, 1.1820000000002662e-05,...</msg>
<status status="PASS" starttime="20201030 15:50:44.372" endtime="20201030 15:50:44.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.388" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:44.386" endtime="20201030 15:50:44.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.393" level="INFO">VALUE: [1.1693999999999594e-05, 1.1597000000002078e-05, 1.1569000000002938e-05, 1.1041999999995833e-05, 1.0138999999999287e-05, 6.5279999999987015e-06, 9.264000000001882e-06, 1.1820000000002662e-05, 1.7250000000003374e-05, 9.486000000002992e-06, 1.4263999999999943e-05, 1.0151999999999384e-05, 1.1806000000003092e-05, 1.0193999999998093e-05, 1.0472000000004422e-05, 9.360999999999398e-06, 6.763999999999382e-06, 1.3375000000002968e-05, 1.4805999999999153e-05, 7.680000000002962e-06, 1.3139000000002288e-05, 1.2166000000000954e-05, 1.7277999999995575e-05, 9.473000000002896e-06, 1.0611000000000648e-05]</msg>
<status status="PASS" starttime="20201030 15:50:44.391" endtime="20201030 15:50:44.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.380" endtime="20201030 15:50:44.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:44.406" endtime="20201030 15:50:44.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.401" endtime="20201030 15:50:44.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.399" endtime="20201030 15:50:44.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.935" endtime="20201030 15:50:44.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:43.934" endtime="20201030 15:50:44.431"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.451" endtime="20201030 15:50:44.465"></status>
</kw>
<msg timestamp="20201030 15:50:44.466" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:44.448" endtime="20201030 15:50:44.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.472" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:44.468" endtime="20201030 15:50:44.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.474" endtime="20201030 15:50:44.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.440" endtime="20201030 15:50:44.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.436" endtime="20201030 15:50:44.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.498" endtime="20201030 15:50:44.810"></status>
</kw>
<msg timestamp="20201030 15:50:44.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036123125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036138278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:44.494" endtime="20201030 15:50:44.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036123125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036138278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:44.817" endtime="20201030 15:50:44.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.830" endtime="20201030 15:50:44.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.487" endtime="20201030 15:50:44.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.482" endtime="20201030 15:50:44.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:44.849" level="INFO">${RESULT} = [{'diff': 1.5153000000003858e-05}, {'diff': 9.569000000000938e-06}, {'diff': 7.804999999999618e-06}, {'diff': 7.290999999999548e-06}, {'diff': 1.558299999999957e-05}, {'diff': 8.041999999999772e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:50:44.841" endtime="20201030 15:50:44.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:44.857" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.5153000000003858e-05, 9.569000000000938e-06, 7.804999999999618e-06, 7.290999999999548e-06, 1.558299999999957e-05, 8.041999999999772e-06, 1.3472000000000484e-05, 1.3389000000002538e-05, 7.0...</msg>
<status status="PASS" starttime="20201030 15:50:44.851" endtime="20201030 15:50:44.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.867" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:44.865" endtime="20201030 15:50:44.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.872" level="INFO">VALUE: [1.5153000000003858e-05, 9.569000000000938e-06, 7.804999999999618e-06, 7.290999999999548e-06, 1.558299999999957e-05, 8.041999999999772e-06, 1.3472000000000484e-05, 1.3389000000002538e-05, 7.0280000000061404e-06, 1.5138999999997349e-05, 1.484699999999839e-05, 1.6042000000000833e-05, 1.0361000000000398e-05, 1.4888999999997099e-05, 1.0028000000002202e-05, 1.0457999999997913e-05, 1.2597000000003078e-05, 8.291000000000548e-06, 1.1360999999994459e-05, 1.0791999999995583e-05, 9.264000000001882e-06, 1.4416999999995739e-05, 1.4361000000004398e-05, 1.3486000000000054e-05, 9.583999999999981e-06]</msg>
<status status="PASS" starttime="20201030 15:50:44.869" endtime="20201030 15:50:44.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.859" endtime="20201030 15:50:44.874"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:44.883" endtime="20201030 15:50:44.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.879" endtime="20201030 15:50:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.877" endtime="20201030 15:50:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.432" endtime="20201030 15:50:44.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.432" endtime="20201030 15:50:44.908"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.931" endtime="20201030 15:50:44.945"></status>
</kw>
<msg timestamp="20201030 15:50:44.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:44.928" endtime="20201030 15:50:44.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:44.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:44.948" endtime="20201030 15:50:44.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.955" endtime="20201030 15:50:44.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.920" endtime="20201030 15:50:44.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.915" endtime="20201030 15:50:44.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:44.978" endtime="20201030 15:50:45.293"></status>
</kw>
<msg timestamp="20201030 15:50:45.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038465847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038475, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:50:44.975" endtime="20201030 15:50:45.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038465847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038475, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:50:45.300" endtime="20201030 15:50:45.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.313" endtime="20201030 15:50:45.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.968" endtime="20201030 15:50:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.963" endtime="20201030 15:50:45.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:45.328" level="INFO">${RESULT} = [{'diff': 9.153000000004796e-06}, {'diff': 1.3695000000001067e-05}, {'diff': 1.1485999999998053e-05}, {'diff': 1.0027999999995263e-05}, {'diff': 1.6014000000001694e-05}, {'diff': 1.0485999999997053e-0...</msg>
<status status="PASS" starttime="20201030 15:50:45.321" endtime="20201030 15:50:45.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:45.336" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.153000000004796e-06, 1.3695000000001067e-05, 1.1485999999998053e-05, 1.0027999999995263e-05, 1.6014000000001694e-05, 1.0485999999997053e-05, 8.930999999996747e-06, 9.027000000001728e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:50:45.330" endtime="20201030 15:50:45.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.346" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:45.344" endtime="20201030 15:50:45.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.351" level="INFO">VALUE: [9.153000000004796e-06, 1.3695000000001067e-05, 1.1485999999998053e-05, 1.0027999999995263e-05, 1.6014000000001694e-05, 1.0485999999997053e-05, 8.930999999996747e-06, 9.027000000001728e-06, 1.3041999999997833e-05, 1.4930999999995809e-05, 1.3597000000004078e-05, 1.1082999999995069e-05, 1.2583999999996043e-05, 1.0583000000001508e-05, 1.0902999999999607e-05, 6.805000000005557e-06, 1.8693999999999655e-05, 1.7693999999998655e-05, 6.58400000000392e-06, 1.3235999999999803e-05, 1.0361000000000398e-05, 1.2291999999997083e-05, 1.2013999999997693e-05, 1.0138999999999287e-05, 9.721999999996733e-06]</msg>
<status status="PASS" starttime="20201030 15:50:45.349" endtime="20201030 15:50:45.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.338" endtime="20201030 15:50:45.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:45.363" endtime="20201030 15:50:45.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.359" endtime="20201030 15:50:45.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.356" endtime="20201030 15:50:45.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.910" endtime="20201030 15:50:45.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:44.909" endtime="20201030 15:50:45.388"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.408" endtime="20201030 15:50:45.423"></status>
</kw>
<msg timestamp="20201030 15:50:45.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:45.405" endtime="20201030 15:50:45.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:45.426" endtime="20201030 15:50:45.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.432" endtime="20201030 15:50:45.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.398" endtime="20201030 15:50:45.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.393" endtime="20201030 15:50:45.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.457" endtime="20201030 15:50:45.779"></status>
</kw>
<msg timestamp="20201030 15:50:45.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036017931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036028819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:45.453" endtime="20201030 15:50:45.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036017931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036028819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:45.786" endtime="20201030 15:50:45.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.798" endtime="20201030 15:50:45.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.445" endtime="20201030 15:50:45.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.441" endtime="20201030 15:50:45.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:45.814" level="INFO">${RESULT} = [{'diff': 1.0887999999993625e-05}, {'diff': 8.250000000001312e-06}, {'diff': 1.2777999999998013e-05}, {'diff': 1.2680000000001024e-05}, {'diff': 1.5833999999999293e-05}, {'diff': 8.263999999993943e-06...</msg>
<status status="PASS" starttime="20201030 15:50:45.807" endtime="20201030 15:50:45.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:45.826" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0887999999993625e-05, 8.250000000001312e-06, 1.2777999999998013e-05, 1.2680000000001024e-05, 1.5833999999999293e-05, 8.263999999993943e-06, 1.4250000000000373e-05, 1.280499999999768e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:50:45.816" endtime="20201030 15:50:45.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.844" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:45.841" endtime="20201030 15:50:45.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.851" level="INFO">VALUE: [1.0887999999993625e-05, 8.250000000001312e-06, 1.2777999999998013e-05, 1.2680000000001024e-05, 1.5833999999999293e-05, 8.263999999993943e-06, 1.4250000000000373e-05, 1.280499999999768e-05, 1.7527999999995825e-05, 1.1597000000002078e-05, 1.7721999999997795e-05, 1.3387999999996125e-05, 1.5929999999997335e-05, 1.5902000000005134e-05, 1.2805000000004618e-05, 9.360999999999398e-06, 5.8050000000045565e-06, 9.819000000001188e-06, 1.1611000000001648e-05, 1.458299999999857e-05, 1.1819000000003188e-05, 1.2028000000004202e-05, 1.2041999999996833e-05, 1.2582999999996569e-05, 9.915999999998704e-06]</msg>
<status status="PASS" starttime="20201030 15:50:45.847" endtime="20201030 15:50:45.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.829" endtime="20201030 15:50:45.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:45.867" endtime="20201030 15:50:45.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.862" endtime="20201030 15:50:45.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.858" endtime="20201030 15:50:45.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.390" endtime="20201030 15:50:45.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.389" endtime="20201030 15:50:45.894"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.920" endtime="20201030 15:50:45.934"></status>
</kw>
<msg timestamp="20201030 15:50:45.935" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:45.915" endtime="20201030 15:50:45.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:45.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:45.938" endtime="20201030 15:50:45.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.946" endtime="20201030 15:50:45.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.906" endtime="20201030 15:50:45.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.900" endtime="20201030 15:50:45.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:45.996" endtime="20201030 15:50:46.307"></status>
</kw>
<msg timestamp="20201030 15:50:46.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043595958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:45.991" endtime="20201030 15:50:46.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043595958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:46.314" endtime="20201030 15:50:46.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.326" endtime="20201030 15:50:46.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.982" endtime="20201030 15:50:46.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.976" endtime="20201030 15:50:46.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:46.342" level="INFO">${RESULT} = [{'diff': 1.458299999999857e-05}, {'diff': 1.1250000000004312e-05}, {'diff': 8.222000000002172e-06}, {'diff': 1.0264000000002882e-05}, {'diff': 1.4583999999998043e-05}, {'diff': 1.180499999999668e-05}...</msg>
<status status="PASS" starttime="20201030 15:50:46.335" endtime="20201030 15:50:46.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:46.349" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.458299999999857e-05, 1.1250000000004312e-05, 8.222000000002172e-06, 1.0264000000002882e-05, 1.4583999999998043e-05, 1.180499999999668e-05, 6.819999999997661e-06, 1.2348000000002302e-05, 7....</msg>
<status status="PASS" starttime="20201030 15:50:46.344" endtime="20201030 15:50:46.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.360" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:46.358" endtime="20201030 15:50:46.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.365" level="INFO">VALUE: [1.458299999999857e-05, 1.1250000000004312e-05, 8.222000000002172e-06, 1.0264000000002882e-05, 1.4583999999998043e-05, 1.180499999999668e-05, 6.819999999997661e-06, 1.2348000000002302e-05, 7.139000000003226e-06, 1.3361999999995933e-05, 1.0471999999997483e-05, 7.916000000003642e-06, 9.138999999998287e-06, 1.3708000000001164e-05, 9.51299999999572e-06, 9.694000000004532e-06, 9.360999999999398e-06, 1.504100000000036e-05, 9.778000000001952e-06, 1.2361000000002398e-05, 1.3346999999996889e-05, 8.472000000002422e-06, 6.7779999999989515e-06, 1.3569000000004938e-05, 1.1472999999997957e-05]</msg>
<status status="PASS" starttime="20201030 15:50:46.362" endtime="20201030 15:50:46.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.352" endtime="20201030 15:50:46.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:46.377" endtime="20201030 15:50:46.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.372" endtime="20201030 15:50:46.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.370" endtime="20201030 15:50:46.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.896" endtime="20201030 15:50:46.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:45.895" endtime="20201030 15:50:46.402"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.422" endtime="20201030 15:50:46.435"></status>
</kw>
<msg timestamp="20201030 15:50:46.437" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:46.419" endtime="20201030 15:50:46.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:46.439" endtime="20201030 15:50:46.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.446" endtime="20201030 15:50:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.411" endtime="20201030 15:50:46.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.407" endtime="20201030 15:50:46.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.470" endtime="20201030 15:50:46.783"></status>
</kw>
<msg timestamp="20201030 15:50:46.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0361355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036151861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:50:46.466" endtime="20201030 15:50:46.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0361355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036151861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:50:46.789" endtime="20201030 15:50:46.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.802" endtime="20201030 15:50:46.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.459" endtime="20201030 15:50:46.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.454" endtime="20201030 15:50:46.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:46.818" level="INFO">${RESULT} = [{'diff': 1.636099999999946e-05}, {'diff': 1.4888999999997099e-05}, {'diff': 8.278000000000452e-06}, {'diff': 1.5028000000000263e-05}, {'diff': 1.3694000000001594e-05}, {'diff': 1.736100000000046e-05}...</msg>
<status status="PASS" starttime="20201030 15:50:46.810" endtime="20201030 15:50:46.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:46.825" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.636099999999946e-05, 1.4888999999997099e-05, 8.278000000000452e-06, 1.5028000000000263e-05, 1.3694000000001594e-05, 1.736100000000046e-05, 1.615299999999792e-05, 1.0750000000003812e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:50:46.820" endtime="20201030 15:50:46.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.862" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:46.860" endtime="20201030 15:50:46.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.867" level="INFO">VALUE: [1.636099999999946e-05, 1.4888999999997099e-05, 8.278000000000452e-06, 1.5028000000000263e-05, 1.3694000000001594e-05, 1.736100000000046e-05, 1.615299999999792e-05, 1.0750000000003812e-05, 1.1806000000003092e-05, 6.389000000002476e-06, 1.077699999999654e-05, 1.1014000000003632e-05, 1.3931000000001748e-05, 1.308299999999707e-05, 1.2930000000001274e-05, 1.3153000000001858e-05, 7.554999999999368e-06, 1.0250000000003312e-05, 9.264000000001882e-06, 1.1361000000001398e-05, 8.583999999998981e-06, 1.1028000000003202e-05, 1.2917000000001178e-05, 9.527999999994763e-06, 1.279099999999811e-05]</msg>
<status status="PASS" starttime="20201030 15:50:46.864" endtime="20201030 15:50:46.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.827" endtime="20201030 15:50:46.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:46.879" endtime="20201030 15:50:46.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.874" endtime="20201030 15:50:46.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.872" endtime="20201030 15:50:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.403" endtime="20201030 15:50:46.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.402" endtime="20201030 15:50:46.903"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.924" endtime="20201030 15:50:46.937"></status>
</kw>
<msg timestamp="20201030 15:50:46.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:46.921" endtime="20201030 15:50:46.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:46.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:46.940" endtime="20201030 15:50:46.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.947" endtime="20201030 15:50:46.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.914" endtime="20201030 15:50:46.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.909" endtime="20201030 15:50:46.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:46.970" endtime="20201030 15:50:47.283"></status>
</kw>
<msg timestamp="20201030 15:50:47.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036056514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036062653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:46.966" endtime="20201030 15:50:47.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036056514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036062653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:47.289" endtime="20201030 15:50:47.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.302" endtime="20201030 15:50:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.959" endtime="20201030 15:50:47.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.954" endtime="20201030 15:50:47.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:47.317" level="INFO">${RESULT} = [{'diff': 6.139000000002226e-06}, {'diff': 8.889000000004976e-06}, {'diff': 1.5681000000003498e-05}, {'diff': 8.694999999996067e-06}, {'diff': 1.0027999999995263e-05}, {'diff': 1.1903000000000608e-05}...</msg>
<status status="PASS" starttime="20201030 15:50:47.310" endtime="20201030 15:50:47.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:47.324" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.139000000002226e-06, 8.889000000004976e-06, 1.5681000000003498e-05, 8.694999999996067e-06, 1.0027999999995263e-05, 1.1903000000000608e-05, 1.1584000000001982e-05, 1.4305999999998653e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:50:47.319" endtime="20201030 15:50:47.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.335" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:47.333" endtime="20201030 15:50:47.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.340" level="INFO">VALUE: [6.139000000002226e-06, 8.889000000004976e-06, 1.5681000000003498e-05, 8.694999999996067e-06, 1.0027999999995263e-05, 1.1903000000000608e-05, 1.1584000000001982e-05, 1.4305999999998653e-05, 1.0861000000000898e-05, 1.2138000000001814e-05, 1.7389000000006538e-05, 1.5819999999999723e-05, 1.1443999999999344e-05, 1.0041000000002298e-05, 1.0014000000002632e-05, 1.2097000000002578e-05, 1.3917000000002178e-05, 1.1569999999995473e-05, 1.2263999999997943e-05, 7.472000000001422e-06, 9.346999999999828e-06, 1.2361000000002398e-05, 1.0097000000000578e-05, 1.1569000000002938e-05, 1.0042000000001772e-05]</msg>
<status status="PASS" starttime="20201030 15:50:47.337" endtime="20201030 15:50:47.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.326" endtime="20201030 15:50:47.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:47.352" endtime="20201030 15:50:47.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.347" endtime="20201030 15:50:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.345" endtime="20201030 15:50:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.906" endtime="20201030 15:50:47.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:46.904" endtime="20201030 15:50:47.376"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.397" endtime="20201030 15:50:47.410"></status>
</kw>
<msg timestamp="20201030 15:50:47.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:47.393" endtime="20201030 15:50:47.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.417" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:47.413" endtime="20201030 15:50:47.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.419" endtime="20201030 15:50:47.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.386" endtime="20201030 15:50:47.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.381" endtime="20201030 15:50:47.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.442" endtime="20201030 15:50:47.764"></status>
</kw>
<msg timestamp="20201030 15:50:47.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035663125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035681264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:47.439" endtime="20201030 15:50:47.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035663125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035681264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:47.770" endtime="20201030 15:50:47.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.783" endtime="20201030 15:50:47.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.432" endtime="20201030 15:50:47.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.427" endtime="20201030 15:50:47.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:47.799" level="INFO">${RESULT} = [{'diff': 1.813900000000035e-05}, {'diff': 1.0916999999999177e-05}, {'diff': 8.708999999995637e-06}, {'diff': 1.2583000000003508e-05}, {'diff': 1.0179999999998524e-05}, {'diff': 8.680000000003962e-06}...</msg>
<status status="PASS" starttime="20201030 15:50:47.791" endtime="20201030 15:50:47.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:47.806" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.813900000000035e-05, 1.0916999999999177e-05, 8.708999999995637e-06, 1.2583000000003508e-05, 1.0179999999998524e-05, 8.680000000003962e-06, 6.375000000002906e-06, 1.593099999999681e-05, 1.4...</msg>
<status status="PASS" starttime="20201030 15:50:47.801" endtime="20201030 15:50:47.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:47.815" endtime="20201030 15:50:47.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.822" level="INFO">VALUE: [1.813900000000035e-05, 1.0916999999999177e-05, 8.708999999995637e-06, 1.2583000000003508e-05, 1.0179999999998524e-05, 8.680000000003962e-06, 6.375000000002906e-06, 1.593099999999681e-05, 1.480499999999968e-05, 1.1235999999997803e-05, 1.2263999999997943e-05, 8.124999999997717e-06, 1.1819000000003188e-05, 1.2375000000001968e-05, 1.3861000000003898e-05, 1.2513999999998193e-05, 1.0986000000004492e-05, 1.1792000000003522e-05, 1.1375000000000968e-05, 1.1694999999999067e-05, 8.569999999999411e-06, 1.8471999999998545e-05, 9.583000000000508e-06, 1.2194000000000094e-05, 1.0264000000002882e-05]</msg>
<status status="PASS" starttime="20201030 15:50:47.819" endtime="20201030 15:50:47.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.808" endtime="20201030 15:50:47.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:47.833" endtime="20201030 15:50:47.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.829" endtime="20201030 15:50:47.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.827" endtime="20201030 15:50:47.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.378" endtime="20201030 15:50:47.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.377" endtime="20201030 15:50:47.858"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.878" endtime="20201030 15:50:47.891"></status>
</kw>
<msg timestamp="20201030 15:50:47.893" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:47.875" endtime="20201030 15:50:47.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:47.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:47.895" endtime="20201030 15:50:47.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.901" endtime="20201030 15:50:47.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.868" endtime="20201030 15:50:47.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.863" endtime="20201030 15:50:47.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:47.924" endtime="20201030 15:50:48.236"></status>
</kw>
<msg timestamp="20201030 15:50:48.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035636903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035650694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:47.921" endtime="20201030 15:50:48.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035636903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035650694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:48.243" endtime="20201030 15:50:48.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.256" endtime="20201030 15:50:48.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.914" endtime="20201030 15:50:48.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.909" endtime="20201030 15:50:48.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:48.273" level="INFO">${RESULT} = [{'diff': 1.379099999999911e-05}, {'diff': 1.3568999999998e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 9.333000000000258e-06}, {'diff': 9.360999999999398e-06}, {'diff': 1.2707999999993225e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:50:48.265" endtime="20201030 15:50:48.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:48.280" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.379099999999911e-05, 1.3568999999998e-05, 1.5250000000001374e-05, 9.333000000000258e-06, 9.360999999999398e-06, 1.2707999999993225e-05, 1.4250000000000373e-05, 1.5917000000004178e-05, 1.60...</msg>
<status status="PASS" starttime="20201030 15:50:48.275" endtime="20201030 15:50:48.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.291" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:48.288" endtime="20201030 15:50:48.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.296" level="INFO">VALUE: [1.379099999999911e-05, 1.3568999999998e-05, 1.5250000000001374e-05, 9.333000000000258e-06, 9.360999999999398e-06, 1.2707999999993225e-05, 1.4250000000000373e-05, 1.5917000000004178e-05, 1.6028000000001263e-05, 1.0554999999995429e-05, 7.804999999999618e-06, 1.1263999999996943e-05, 8.681000000003436e-06, 9.694000000004532e-06, 1.533299999999932e-05, 1.5707999999996225e-05, 8.596999999999078e-06, 1.758300000000157e-05, 1.3139000000002288e-05, 8.472999999994957e-06, 1.480499999999968e-05, 1.1028000000003202e-05, 1.4389000000003538e-05, 8.806000000000092e-06, 8.473000000001896e-06]</msg>
<status status="PASS" starttime="20201030 15:50:48.293" endtime="20201030 15:50:48.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.282" endtime="20201030 15:50:48.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:48.307" endtime="20201030 15:50:48.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.303" endtime="20201030 15:50:48.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.300" endtime="20201030 15:50:48.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.860" endtime="20201030 15:50:48.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:47.859" endtime="20201030 15:50:48.332"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.352" endtime="20201030 15:50:48.365"></status>
</kw>
<msg timestamp="20201030 15:50:48.366" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:48.349" endtime="20201030 15:50:48.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:48.368" endtime="20201030 15:50:48.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.375" endtime="20201030 15:50:48.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.341" endtime="20201030 15:50:48.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.337" endtime="20201030 15:50:48.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.398" endtime="20201030 15:50:48.711"></status>
</kw>
<msg timestamp="20201030 15:50:48.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035705292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035717083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:48.394" endtime="20201030 15:50:48.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035705292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035717083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:48.718" endtime="20201030 15:50:48.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.730" endtime="20201030 15:50:48.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.387" endtime="20201030 15:50:48.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.383" endtime="20201030 15:50:48.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:48.748" level="INFO">${RESULT} = [{'diff': 1.179099999999711e-05}, {'diff': 1.3027999999998263e-05}, {'diff': 1.793099999999881e-05}, {'diff': 5.2639999999978815e-06}, {'diff': 1.1916000000000704e-05}, {'diff': 1.3666999999994989e-05...</msg>
<status status="PASS" starttime="20201030 15:50:48.740" endtime="20201030 15:50:48.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:48.755" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.179099999999711e-05, 1.3027999999998263e-05, 1.793099999999881e-05, 5.2639999999978815e-06, 1.1916000000000704e-05, 1.3666999999994989e-05, 1.2139000000001288e-05, 1.3681000000001498e-05, ...</msg>
<status status="PASS" starttime="20201030 15:50:48.750" endtime="20201030 15:50:48.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.766" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:48.763" endtime="20201030 15:50:48.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.771" level="INFO">VALUE: [1.179099999999711e-05, 1.3027999999998263e-05, 1.793099999999881e-05, 5.2639999999978815e-06, 1.1916000000000704e-05, 1.3666999999994989e-05, 1.2139000000001288e-05, 1.3681000000001498e-05, 1.3931000000001748e-05, 1.1528000000003702e-05, 1.4055999999998403e-05, 7.708000000002102e-06, 1.6985999999996615e-05, 1.6695000000004068e-05, 9.500000000002562e-06, 7.568999999998938e-06, 1.4486000000001054e-05, 9.902999999998607e-06, 7.80600000000603e-06, 1.2694000000000594e-05, 1.7028000000002264e-05, 6.360999999996397e-06, 1.4139000000003288e-05, 1.2431000000000247e-05, 1.5915999999997765e-05]</msg>
<status status="PASS" starttime="20201030 15:50:48.768" endtime="20201030 15:50:48.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.757" endtime="20201030 15:50:48.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:48.782" endtime="20201030 15:50:48.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.778" endtime="20201030 15:50:48.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.775" endtime="20201030 15:50:48.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.334" endtime="20201030 15:50:48.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.333" endtime="20201030 15:50:48.807"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.827" endtime="20201030 15:50:48.839"></status>
</kw>
<msg timestamp="20201030 15:50:48.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:48.824" endtime="20201030 15:50:48.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:48.847" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:48.843" endtime="20201030 15:50:48.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.849" endtime="20201030 15:50:48.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.817" endtime="20201030 15:50:48.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.812" endtime="20201030 15:50:48.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:48.872" endtime="20201030 15:50:49.201"></status>
</kw>
<msg timestamp="20201030 15:50:49.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035633556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035642917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:48.869" endtime="20201030 15:50:49.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035633556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035642917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:49.208" endtime="20201030 15:50:49.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.220" endtime="20201030 15:50:49.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.862" endtime="20201030 15:50:49.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.857" endtime="20201030 15:50:49.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:49.237" level="INFO">${RESULT} = [{'diff': 9.361000000006336e-06}, {'diff': 9.346999999999828e-06}, {'diff': 1.2125000000001718e-05}, {'diff': 9.806000000001092e-06}, {'diff': 8.138999999997287e-06}, {'diff': 9.264000000001882e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:50:49.230" endtime="20201030 15:50:49.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:49.245" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.361000000006336e-06, 9.346999999999828e-06, 1.2125000000001718e-05, 9.806000000001092e-06, 8.138999999997287e-06, 9.264000000001882e-06, 9.513000000002658e-06, 7.361000000004336e-06, 1.547...</msg>
<status status="PASS" starttime="20201030 15:50:49.239" endtime="20201030 15:50:49.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.255" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:49.252" endtime="20201030 15:50:49.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.260" level="INFO">VALUE: [9.361000000006336e-06, 9.346999999999828e-06, 1.2125000000001718e-05, 9.806000000001092e-06, 8.138999999997287e-06, 9.264000000001882e-06, 9.513000000002658e-06, 7.361000000004336e-06, 1.5473000000001957e-05, 1.4819000000006188e-05, 6.957999999994413e-06, 9.694000000004532e-06, 1.2027999999997263e-05, 9.138999999998287e-06, 6.804999999998618e-06, 1.4361000000004398e-05, 1.3417000000001678e-05, 9.360999999999398e-06, 9.695000000004006e-06, 1.458299999999857e-05, 7.833000000005697e-06, 1.459699999999814e-05, 6.4729999999998955e-06, 1.0680999999998497e-05, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201030 15:50:49.258" endtime="20201030 15:50:49.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.246" endtime="20201030 15:50:49.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:49.272" endtime="20201030 15:50:49.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.268" endtime="20201030 15:50:49.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.265" endtime="20201030 15:50:49.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.809" endtime="20201030 15:50:49.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:48.808" endtime="20201030 15:50:49.297"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.318" endtime="20201030 15:50:49.331"></status>
</kw>
<msg timestamp="20201030 15:50:49.332" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:49.314" endtime="20201030 15:50:49.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.339" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:49.335" endtime="20201030 15:50:49.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.341" endtime="20201030 15:50:49.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.307" endtime="20201030 15:50:49.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.302" endtime="20201030 15:50:49.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.364" endtime="20201030 15:50:49.686"></status>
</kw>
<msg timestamp="20201030 15:50:49.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036134625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036148111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:49.361" endtime="20201030 15:50:49.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036134625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036148111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:49.693" endtime="20201030 15:50:49.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.705" endtime="20201030 15:50:49.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.353" endtime="20201030 15:50:49.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.349" endtime="20201030 15:50:49.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:49.723" level="INFO">${RESULT} = [{'diff': 1.3486000000000054e-05}, {'diff': 7.916999999996177e-06}, {'diff': 1.1139000000000288e-05}, {'diff': 1.4791999999999583e-05}, {'diff': 8.458000000002852e-06}, {'diff': 1.7249999999996435e-05...</msg>
<status status="PASS" starttime="20201030 15:50:49.716" endtime="20201030 15:50:49.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:49.730" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.3486000000000054e-05, 7.916999999996177e-06, 1.1139000000000288e-05, 1.4791999999999583e-05, 8.458000000002852e-06, 1.7249999999996435e-05, 9.054999999993929e-06, 1.5597999999998613e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:50:49.725" endtime="20201030 15:50:49.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.740" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:49.738" endtime="20201030 15:50:49.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.746" level="INFO">VALUE: [1.3486000000000054e-05, 7.916999999996177e-06, 1.1139000000000288e-05, 1.4791999999999583e-05, 8.458000000002852e-06, 1.7249999999996435e-05, 9.054999999993929e-06, 1.5597999999998613e-05, 1.1250000000004312e-05, 1.0111000000000148e-05, 5.804999999997618e-06, 1.3235999999999803e-05, 1.6806000000001153e-05, 1.3139000000002288e-05, 1.3249999999999373e-05, 1.1486000000004992e-05, 1.2041999999996833e-05, 1.3972000000000984e-05, 1.1485999999998053e-05, 9.360999999999398e-06, 1.4388999999996599e-05, 1.8305999999995715e-05, 6.693999999994593e-06, 7.473000000000896e-06, 1.4486000000001054e-05]</msg>
<status status="PASS" starttime="20201030 15:50:49.743" endtime="20201030 15:50:49.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.732" endtime="20201030 15:50:49.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:49.757" endtime="20201030 15:50:49.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.753" endtime="20201030 15:50:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.751" endtime="20201030 15:50:49.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.299" endtime="20201030 15:50:49.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.298" endtime="20201030 15:50:49.782"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.803" endtime="20201030 15:50:49.816"></status>
</kw>
<msg timestamp="20201030 15:50:49.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:49.799" endtime="20201030 15:50:49.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:49.823" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:49.819" endtime="20201030 15:50:49.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.826" endtime="20201030 15:50:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.792" endtime="20201030 15:50:49.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.788" endtime="20201030 15:50:49.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:49.849" endtime="20201030 15:50:50.173"></status>
</kw>
<msg timestamp="20201030 15:50:50.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036051236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:49.846" endtime="20201030 15:50:50.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036051236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:50.179" endtime="20201030 15:50:50.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.192" endtime="20201030 15:50:50.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.838" endtime="20201030 15:50:50.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.834" endtime="20201030 15:50:50.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:50.209" level="INFO">${RESULT} = [{'diff': 8.695000000003006e-06}, {'diff': 8.917000000004116e-06}, {'diff': 9.915999999998704e-06}, {'diff': 1.5152999999996919e-05}, {'diff': 7.791999999999522e-06}, {'diff': 1.1361000000001398e-05},...</msg>
<status status="PASS" starttime="20201030 15:50:50.202" endtime="20201030 15:50:50.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:50.216" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.695000000003006e-06, 8.917000000004116e-06, 9.915999999998704e-06, 1.5152999999996919e-05, 7.791999999999522e-06, 1.1361000000001398e-05, 1.426300000000047e-05, 1.2041000000004298e-05, 1.0...</msg>
<status status="PASS" starttime="20201030 15:50:50.211" endtime="20201030 15:50:50.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.226" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:50.224" endtime="20201030 15:50:50.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.232" level="INFO">VALUE: [8.695000000003006e-06, 8.917000000004116e-06, 9.915999999998704e-06, 1.5152999999996919e-05, 7.791999999999522e-06, 1.1361000000001398e-05, 1.426300000000047e-05, 1.2041000000004298e-05, 1.0471999999997483e-05, 1.3139000000002288e-05, 1.2471999999999483e-05, 1.3709000000000637e-05, 1.8014000000003694e-05, 1.6985999999996615e-05, 7.750000000000812e-06, 1.505499999999993e-05, 1.6138000000005814e-05, 1.1584000000001982e-05, 1.0902000000000134e-05, 1.1847000000002328e-05, 1.4013999999999693e-05, 1.1361000000001398e-05, 1.3472000000000484e-05, 1.080499999999568e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201030 15:50:50.229" endtime="20201030 15:50:50.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.218" endtime="20201030 15:50:50.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:50.244" endtime="20201030 15:50:50.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.239" endtime="20201030 15:50:50.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.237" endtime="20201030 15:50:50.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.784" endtime="20201030 15:50:50.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:49.783" endtime="20201030 15:50:50.269"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.289" endtime="20201030 15:50:50.302"></status>
</kw>
<msg timestamp="20201030 15:50:50.303" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:50.286" endtime="20201030 15:50:50.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.310" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:50.306" endtime="20201030 15:50:50.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.312" endtime="20201030 15:50:50.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.279" endtime="20201030 15:50:50.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.274" endtime="20201030 15:50:50.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.335" endtime="20201030 15:50:50.659"></status>
</kw>
<msg timestamp="20201030 15:50:50.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036049, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036060542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:50:50.332" endtime="20201030 15:50:50.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036049, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036060542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:50:50.669" endtime="20201030 15:50:50.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.686" endtime="20201030 15:50:50.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.325" endtime="20201030 15:50:50.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.320" endtime="20201030 15:50:50.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:50.710" level="INFO">${RESULT} = [{'diff': 1.1542000000003272e-05}, {'diff': 1.1848000000001802e-05}, {'diff': 1.5695000000003068e-05}, {'diff': 1.5722000000002734e-05}, {'diff': 8.152999999996857e-06}, {'diff': 1.202699999999779e-05...</msg>
<status status="PASS" starttime="20201030 15:50:50.702" endtime="20201030 15:50:50.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:50.717" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1542000000003272e-05, 1.1848000000001802e-05, 1.5695000000003068e-05, 1.5722000000002734e-05, 8.152999999996857e-06, 1.202699999999779e-05, 1.6570000000000473e-05, 8.917000000004116e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:50:50.712" endtime="20201030 15:50:50.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.728" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:50.725" endtime="20201030 15:50:50.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.733" level="INFO">VALUE: [1.1542000000003272e-05, 1.1848000000001802e-05, 1.5695000000003068e-05, 1.5722000000002734e-05, 8.152999999996857e-06, 1.202699999999779e-05, 1.6570000000000473e-05, 8.917000000004116e-06, 1.0929999999999274e-05, 8.804999999993679e-06, 1.0347000000000828e-05, 6.055999999997341e-06, 1.0207999999997663e-05, 5.554999999997368e-06, 1.4250000000000373e-05, 1.1584000000001982e-05, 1.2263999999997943e-05, 1.2528000000004702e-05, 1.3931000000001748e-05, 1.633300000000032e-05, 9.805999999994153e-06, 9.693999999997593e-06, 9.916000000005643e-06, 9.237000000002216e-06, 9.180999999996997e-06]</msg>
<status status="PASS" starttime="20201030 15:50:50.730" endtime="20201030 15:50:50.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.719" endtime="20201030 15:50:50.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:50.745" endtime="20201030 15:50:50.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.741" endtime="20201030 15:50:50.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.738" endtime="20201030 15:50:50.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.271" endtime="20201030 15:50:50.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.270" endtime="20201030 15:50:50.770"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.791" endtime="20201030 15:50:50.804"></status>
</kw>
<msg timestamp="20201030 15:50:50.805" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:50.787" endtime="20201030 15:50:50.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:50.811" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:50.807" endtime="20201030 15:50:50.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.813" endtime="20201030 15:50:50.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.780" endtime="20201030 15:50:50.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.775" endtime="20201030 15:50:50.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:50.837" endtime="20201030 15:50:51.160"></status>
</kw>
<msg timestamp="20201030 15:50:51.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036084306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036091444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:50.833" endtime="20201030 15:50:51.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036084306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036091444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:51.166" endtime="20201030 15:50:51.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.180" endtime="20201030 15:50:51.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.826" endtime="20201030 15:50:51.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.822" endtime="20201030 15:50:51.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:51.197" level="INFO">${RESULT} = [{'diff': 7.1380000000037525e-06}, {'diff': 1.4694000000002594e-05}, {'diff': 1.6679999999998085e-05}, {'diff': 1.126299999999747e-05}, {'diff': 9.805999999994153e-06}, {'diff': 1.4929999999996335e-05...</msg>
<status status="PASS" starttime="20201030 15:50:51.190" endtime="20201030 15:50:51.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:51.204" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.1380000000037525e-06, 1.4694000000002594e-05, 1.6679999999998085e-05, 1.126299999999747e-05, 9.805999999994153e-06, 1.4929999999996335e-05, 6.4729999999998955e-06, 9.471999999996483e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:50:51.199" endtime="20201030 15:50:51.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.214" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:51.212" endtime="20201030 15:50:51.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.220" level="INFO">VALUE: [7.1380000000037525e-06, 1.4694000000002594e-05, 1.6679999999998085e-05, 1.126299999999747e-05, 9.805999999994153e-06, 1.4929999999996335e-05, 6.4729999999998955e-06, 9.471999999996483e-06, 1.1499999999997623e-05, 1.1249999999997373e-05, 1.2916000000001704e-05, 1.5542000000000333e-05, 1.3138999999995349e-05, 1.2749999999998873e-05, 1.1471999999998483e-05, 1.2653000000001358e-05, 1.5264000000000943e-05, 7.111000000004086e-06, 1.4916999999996239e-05, 1.1973000000005396e-05, 1.380499999999868e-05, 1.0471999999997483e-05, 7.959000000001826e-06, 1.4875000000004468e-05, 8.374999999997967e-06]</msg>
<status status="PASS" starttime="20201030 15:50:51.217" endtime="20201030 15:50:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.206" endtime="20201030 15:50:51.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:51.232" endtime="20201030 15:50:51.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.228" endtime="20201030 15:50:51.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.225" endtime="20201030 15:50:51.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.772" endtime="20201030 15:50:51.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:50.771" endtime="20201030 15:50:51.257"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.278" endtime="20201030 15:50:51.291"></status>
</kw>
<msg timestamp="20201030 15:50:51.292" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:51.274" endtime="20201030 15:50:51.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.298" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:51.294" endtime="20201030 15:50:51.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.300" endtime="20201030 15:50:51.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.267" endtime="20201030 15:50:51.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.262" endtime="20201030 15:50:51.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.324" endtime="20201030 15:50:51.647"></status>
</kw>
<msg timestamp="20201030 15:50:51.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036345472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036354569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:51.320" endtime="20201030 15:50:51.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036345472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036354569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:51.654" endtime="20201030 15:50:51.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.667" endtime="20201030 15:50:51.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.313" endtime="20201030 15:50:51.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.308" endtime="20201030 15:50:51.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:51.684" level="INFO">${RESULT} = [{'diff': 9.097000000006517e-06}, {'diff': 1.4360999999997459e-05}, {'diff': 8.806000000000092e-06}, {'diff': 1.0915999999999704e-05}, {'diff': 1.2222999999998707e-05}, {'diff': 1.0318999999994749e-05...</msg>
<status status="PASS" starttime="20201030 15:50:51.677" endtime="20201030 15:50:51.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:51.691" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.097000000006517e-06, 1.4360999999997459e-05, 8.806000000000092e-06, 1.0915999999999704e-05, 1.2222999999998707e-05, 1.0318999999994749e-05, 1.6929999999998335e-05, 1.536099999999846e-05, 7...</msg>
<status status="PASS" starttime="20201030 15:50:51.686" endtime="20201030 15:50:51.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.701" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:50:51.699" endtime="20201030 15:50:51.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.707" level="INFO">VALUE: [9.097000000006517e-06, 1.4360999999997459e-05, 8.806000000000092e-06, 1.0915999999999704e-05, 1.2222999999998707e-05, 1.0318999999994749e-05, 1.6929999999998335e-05, 1.536099999999846e-05, 7.0969999999975775e-06, 9.360999999999398e-06, 1.5250000000001374e-05, 1.5929999999997335e-05, 8.624999999998217e-06, 1.1806000000003092e-05, 6.860999999996897e-06, 1.2250000000005312e-05, 1.2791999999997583e-05, 1.0916999999999177e-05, 1.1459000000005326e-05, 1.5486000000002054e-05, 1.0056000000001342e-05, 1.636099999999946e-05, 1.0763999999996443e-05, 1.6945000000004318e-05, 1.0485999999997053e-05]</msg>
<status status="PASS" starttime="20201030 15:50:51.704" endtime="20201030 15:50:51.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.693" endtime="20201030 15:50:51.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:51.719" endtime="20201030 15:50:51.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.714" endtime="20201030 15:50:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.712" endtime="20201030 15:50:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.259" endtime="20201030 15:50:51.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.258" endtime="20201030 15:50:51.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:41.911" endtime="20201030 15:50:51.744"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:50:41.721" endtime="20201030 15:50:51.746" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:51.763" endtime="20201030 15:50:51.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.759" endtime="20201030 15:50:51.786"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.821" endtime="20201030 15:50:51.840"></status>
</kw>
<msg timestamp="20201030 15:50:51.841" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:51.816" endtime="20201030 15:50:51.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.848" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:51.843" endtime="20201030 15:50:51.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.854" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:50:51.850" endtime="20201030 15:50:51.855"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:51.809" endtime="20201030 15:50:51.857"></status>
</kw>
<status status="FAIL" starttime="20201030 15:50:51.802" endtime="20201030 15:50:51.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.800" endtime="20201030 15:50:51.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:50:51.867" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:50:51.865" endtime="20201030 15:50:51.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.861" endtime="20201030 15:50:51.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.798" endtime="20201030 15:50:51.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.796" endtime="20201030 15:50:51.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.870" endtime="20201030 15:50:51.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.792" endtime="20201030 15:50:51.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.788" endtime="20201030 15:50:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.757" endtime="20201030 15:50:51.877"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.899" endtime="20201030 15:50:51.921"></status>
</kw>
<msg timestamp="20201030 15:50:51.923" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:51.896" endtime="20201030 15:50:51.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:51.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:51.925" endtime="20201030 15:50:51.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.931" endtime="20201030 15:50:51.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.889" endtime="20201030 15:50:51.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.884" endtime="20201030 15:50:51.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:51.954" endtime="20201030 15:50:52.309"></status>
</kw>
<msg timestamp="20201030 15:50:52.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135697125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:51.951" endtime="20201030 15:50:52.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135697125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:52.318" endtime="20201030 15:50:52.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:52.337" endtime="20201030 15:50:52.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.944" endtime="20201030 15:50:52.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.939" endtime="20201030 15:50:52.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:52.354" level="INFO">${RESULT} = [{'diff': 1.4720000000023603e-06}, {'diff': 1.555999999985902e-06}, {'diff': 1.555000000014184e-06}, {'diff': 1.555999999985902e-06}, {'diff': 1.5420000000210266e-06}, {'diff': 1.5689999999790594e-06}...</msg>
<status status="PASS" starttime="20201030 15:50:52.345" endtime="20201030 15:50:52.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:52.365" level="INFO">${OVERHEAD} = {'diff': [1.4720000000023603e-06, 1.555999999985902e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.5420000000210266e-06, 1.5689999999790594e-06, 1.555999999985902e-06, 1.500000000015378e-06, 1.5...</msg>
<status status="PASS" starttime="20201030 15:50:52.356" endtime="20201030 15:50:52.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.375" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:52.373" endtime="20201030 15:50:52.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.380" level="INFO">VALUE: [1.4720000000023603e-06, 1.555999999985902e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.5420000000210266e-06, 1.5689999999790594e-06, 1.555999999985902e-06, 1.500000000015378e-06, 1.5549999999864283e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.555999999985902e-06, 1.514000000008009e-06, 1.4859999999949913e-06, 1.5560000000136576e-06, 1.5560000000136576e-06, 1.52800000000064e-06, 1.5560000000136576e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.555999999985902e-06, 1.5970000000198326e-06, 1.555000000014184e-06, 1.5549999999864283e-06, 1.555000000014184e-06, 1.5700000000062886e-06, 1.5560000000136576e-06, 1.5560000000136576e-06, 1.610999999984708e-06, 1.5560000000136576e-06, 1.569000000006815e-06, 1.5549999999864283e-06, 1.541999999993271e-06, 1.555999999985902e-06, 1.555999999985902e-06, 1.5560000000136576e-06, 1.541000000021553e-06, 1.596999999992077e-06, 1.555999999985902e-06, 1.5549999999864283e-06, 1.514000000008009e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.5560000000136576e-06, 1.555999999985902e-06, 1.555999999985902e-06, 1.5560000000136576e-06, 1.555000000014184e-06, 1.569000000006815e-06, 1.555000000014184e-06]</msg>
<status status="PASS" starttime="20201030 15:50:52.377" endtime="20201030 15:50:52.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.367" endtime="20201030 15:50:52.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:52.392" endtime="20201030 15:50:52.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.388" endtime="20201030 15:50:52.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.385" endtime="20201030 15:50:52.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.881" endtime="20201030 15:50:52.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.880" endtime="20201030 15:50:52.417"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:52.438" endtime="20201030 15:50:52.453"></status>
</kw>
<msg timestamp="20201030 15:50:52.454" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:52.435" endtime="20201030 15:50:52.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.461" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:52.457" endtime="20201030 15:50:52.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:52.463" endtime="20201030 15:50:52.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.427" endtime="20201030 15:50:52.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.422" endtime="20201030 15:50:52.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:52.486" endtime="20201030 15:50:52.833"></status>
</kw>
<msg timestamp="20201030 15:50:52.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038230819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038232319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:52.483" endtime="20201030 15:50:52.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038230819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038232319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:52.842" endtime="20201030 15:50:52.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:52.861" endtime="20201030 15:50:52.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.476" endtime="20201030 15:50:52.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.471" endtime="20201030 15:50:52.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:52.878" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-...</msg>
<status status="PASS" starttime="20201030 15:50:52.869" endtime="20201030 15:50:52.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:52.889" level="INFO">${OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06...</msg>
<status status="PASS" starttime="20201030 15:50:52.880" endtime="20201030 15:50:52.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.903" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:52.900" endtime="20201030 15:50:52.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:52.911" level="INFO">VALUE: [1.5000000000015001e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.6109999999985858e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5549999999933672e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.527999999993701e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:50:52.906" endtime="20201030 15:50:52.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.892" endtime="20201030 15:50:52.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:52.926" endtime="20201030 15:50:52.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.921" endtime="20201030 15:50:52.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.917" endtime="20201030 15:50:52.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.419" endtime="20201030 15:50:52.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.418" endtime="20201030 15:50:52.953"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:52.980" endtime="20201030 15:50:52.995"></status>
</kw>
<msg timestamp="20201030 15:50:52.996" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:52.971" endtime="20201030 15:50:52.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.003" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:52.999" endtime="20201030 15:50:53.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.005" endtime="20201030 15:50:53.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.963" endtime="20201030 15:50:53.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.958" endtime="20201030 15:50:53.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.028" endtime="20201030 15:50:53.375"></status>
</kw>
<msg timestamp="20201030 15:50:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044964528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044966014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:53.025" endtime="20201030 15:50:53.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044964528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044966014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:53.385" endtime="20201030 15:50:53.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.404" endtime="20201030 15:50:53.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.018" endtime="20201030 15:50:53.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.013" endtime="20201030 15:50:53.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:53.421" level="INFO">${RESULT} = [{'diff': 1.4860000000019302e-06}, {'diff': 1.4999999999945612e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5550000000003061e-...</msg>
<status status="PASS" starttime="20201030 15:50:53.412" endtime="20201030 15:50:53.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:53.430" level="INFO">${OVERHEAD} = {'diff': [1.4860000000019302e-06, 1.4999999999945612e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:50:53.423" endtime="20201030 15:50:53.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.440" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:53.438" endtime="20201030 15:50:53.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.446" level="INFO">VALUE: [1.4860000000019302e-06, 1.4999999999945612e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.4999999999945612e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.541999999993271e-06, 1.5420000000002099e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:50:53.442" endtime="20201030 15:50:53.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.432" endtime="20201030 15:50:53.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:53.460" endtime="20201030 15:50:53.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.454" endtime="20201030 15:50:53.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.450" endtime="20201030 15:50:53.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.955" endtime="20201030 15:50:53.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:52.954" endtime="20201030 15:50:53.485"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.505" endtime="20201030 15:50:53.520"></status>
</kw>
<msg timestamp="20201030 15:50:53.521" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:53.501" endtime="20201030 15:50:53.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.527" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:53.523" endtime="20201030 15:50:53.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.529" endtime="20201030 15:50:53.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.494" endtime="20201030 15:50:53.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.490" endtime="20201030 15:50:53.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.553" endtime="20201030 15:50:53.899"></status>
</kw>
<msg timestamp="20201030 15:50:53.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037023569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037025125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:53.549" endtime="20201030 15:50:53.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037023569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037025125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:53.909" endtime="20201030 15:50:53.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:53.930" endtime="20201030 15:50:53.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.542" endtime="20201030 15:50:53.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.537" endtime="20201030 15:50:53.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:53.952" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.582999999999446e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 15:50:53.941" endtime="20201030 15:50:53.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:53.964" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:50:53.954" endtime="20201030 15:50:53.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.977" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:53.974" endtime="20201030 15:50:53.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:53.984" level="INFO">VALUE: [1.5559999999997798e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.6109999999985858e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5840000000058585e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201030 15:50:53.980" endtime="20201030 15:50:53.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.967" endtime="20201030 15:50:53.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:54.000" endtime="20201030 15:50:54.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.994" endtime="20201030 15:50:54.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.991" endtime="20201030 15:50:54.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.486" endtime="20201030 15:50:54.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:53.486" endtime="20201030 15:50:54.025"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.045" endtime="20201030 15:50:54.060"></status>
</kw>
<msg timestamp="20201030 15:50:54.061" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:54.042" endtime="20201030 15:50:54.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:54.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:54.063" endtime="20201030 15:50:54.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.069" endtime="20201030 15:50:54.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.035" endtime="20201030 15:50:54.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.030" endtime="20201030 15:50:54.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.092" endtime="20201030 15:50:54.426"></status>
</kw>
<msg timestamp="20201030 15:50:54.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0370925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037094069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:50:54.089" endtime="20201030 15:50:54.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:54.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0370925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037094069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:50:54.436" endtime="20201030 15:50:54.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.454" endtime="20201030 15:50:54.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.082" endtime="20201030 15:50:54.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.077" endtime="20201030 15:50:54.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:54.471" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06...</msg>
<status status="PASS" starttime="20201030 15:50:54.463" endtime="20201030 15:50:54.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:54.482" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, ...</msg>
<status status="PASS" starttime="20201030 15:50:54.473" endtime="20201030 15:50:54.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:54.492" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:54.490" endtime="20201030 15:50:54.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:54.498" level="INFO">VALUE: [1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5700000000062886e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5979999999984895e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5979999999984895e-06]</msg>
<status status="PASS" starttime="20201030 15:50:54.495" endtime="20201030 15:50:54.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.484" endtime="20201030 15:50:54.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:54.510" endtime="20201030 15:50:54.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.506" endtime="20201030 15:50:54.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.503" endtime="20201030 15:50:54.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.027" endtime="20201030 15:50:54.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.026" endtime="20201030 15:50:54.535"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.555" endtime="20201030 15:50:54.570"></status>
</kw>
<msg timestamp="20201030 15:50:54.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:54.552" endtime="20201030 15:50:54.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:54.577" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:54.573" endtime="20201030 15:50:54.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.579" endtime="20201030 15:50:54.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.545" endtime="20201030 15:50:54.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.540" endtime="20201030 15:50:54.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.602" endtime="20201030 15:50:54.937"></status>
</kw>
<msg timestamp="20201030 15:50:54.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036473139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036474694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:54.599" endtime="20201030 15:50:54.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:54.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036473139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036474694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:54.947" endtime="20201030 15:50:54.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:54.966" endtime="20201030 15:50:54.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.592" endtime="20201030 15:50:54.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.587" endtime="20201030 15:50:54.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:54.983" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}...</msg>
<status status="PASS" starttime="20201030 15:50:54.974" endtime="20201030 15:50:54.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:54.992" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:50:54.985" endtime="20201030 15:50:54.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.002" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:55.000" endtime="20201030 15:50:55.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.008" level="INFO">VALUE: [1.5550000000003061e-06, 1.5699999999993497e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5560000000067187e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.4870000000014039e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5549999999933672e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5840000000058585e-06, 1.51400000000107e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5970000000059548e-06]</msg>
<status status="PASS" starttime="20201030 15:50:55.004" endtime="20201030 15:50:55.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.994" endtime="20201030 15:50:55.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:55.020" endtime="20201030 15:50:55.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.016" endtime="20201030 15:50:55.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.013" endtime="20201030 15:50:55.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.537" endtime="20201030 15:50:55.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:54.536" endtime="20201030 15:50:55.045"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.065" endtime="20201030 15:50:55.079"></status>
</kw>
<msg timestamp="20201030 15:50:55.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:55.061" endtime="20201030 15:50:55.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.086" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:55.082" endtime="20201030 15:50:55.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.089" endtime="20201030 15:50:55.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.054" endtime="20201030 15:50:55.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.050" endtime="20201030 15:50:55.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.113" endtime="20201030 15:50:55.451"></status>
</kw>
<msg timestamp="20201030 15:50:55.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036706167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036707722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:55.110" endtime="20201030 15:50:55.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036706167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036707722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:55.462" endtime="20201030 15:50:55.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.482" endtime="20201030 15:50:55.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.103" endtime="20201030 15:50:55.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.098" endtime="20201030 15:50:55.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:55.500" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5410000000007362e-06}, {'diff': 1.5130000000015964e-06}, {'diff': 1.568999999999876e-0...</msg>
<status status="PASS" starttime="20201030 15:50:55.491" endtime="20201030 15:50:55.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:55.510" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5130000000015964e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06,...</msg>
<status status="PASS" starttime="20201030 15:50:55.502" endtime="20201030 15:50:55.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.520" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:55.517" endtime="20201030 15:50:55.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.525" level="INFO">VALUE: [1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5130000000015964e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5560000000067187e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5549999999933672e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:50:55.522" endtime="20201030 15:50:55.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.511" endtime="20201030 15:50:55.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:55.539" endtime="20201030 15:50:55.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.533" endtime="20201030 15:50:55.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.531" endtime="20201030 15:50:55.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.047" endtime="20201030 15:50:55.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.046" endtime="20201030 15:50:55.564"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.584" endtime="20201030 15:50:55.599"></status>
</kw>
<msg timestamp="20201030 15:50:55.600" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:55.581" endtime="20201030 15:50:55.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.606" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:55.602" endtime="20201030 15:50:55.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.608" endtime="20201030 15:50:55.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.573" endtime="20201030 15:50:55.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.569" endtime="20201030 15:50:55.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.632" endtime="20201030 15:50:55.969"></status>
</kw>
<msg timestamp="20201030 15:50:55.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036764847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036766403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:55.628" endtime="20201030 15:50:55.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:55.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036764847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036766403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:55.978" endtime="20201030 15:50:55.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:55.997" endtime="20201030 15:50:56.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.621" endtime="20201030 15:50:56.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.616" endtime="20201030 15:50:56.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:56.014" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-...</msg>
<status status="PASS" starttime="20201030 15:50:56.005" endtime="20201030 15:50:56.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:56.025" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5000000000015001e-06...</msg>
<status status="PASS" starttime="20201030 15:50:56.016" endtime="20201030 15:50:56.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.035" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:56.033" endtime="20201030 15:50:56.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.040" level="INFO">VALUE: [1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.569000000006815e-06, 1.5559999999997798e-06, 1.5269999999942274e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5700000000062886e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.5700000000062886e-06, 1.52800000000064e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201030 15:50:56.037" endtime="20201030 15:50:56.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.027" endtime="20201030 15:50:56.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:56.052" endtime="20201030 15:50:56.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.048" endtime="20201030 15:50:56.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.046" endtime="20201030 15:50:56.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.566" endtime="20201030 15:50:56.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:55.565" endtime="20201030 15:50:56.077"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.097" endtime="20201030 15:50:56.111"></status>
</kw>
<msg timestamp="20201030 15:50:56.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:56.094" endtime="20201030 15:50:56.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.119" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:56.115" endtime="20201030 15:50:56.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.121" endtime="20201030 15:50:56.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.087" endtime="20201030 15:50:56.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.082" endtime="20201030 15:50:56.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.144" endtime="20201030 15:50:56.483"></status>
</kw>
<msg timestamp="20201030 15:50:56.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036846208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036847722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:56.141" endtime="20201030 15:50:56.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036846208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036847722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:56.492" endtime="20201030 15:50:56.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.511" endtime="20201030 15:50:56.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.133" endtime="20201030 15:50:56.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.129" endtime="20201030 15:50:56.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:56.528" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.5980000000054284e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5549999999933672e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06...</msg>
<status status="PASS" starttime="20201030 15:50:56.519" endtime="20201030 15:50:56.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:56.539" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.5980000000054284e-06, 1.5420000000002099e-06, 1.5549999999933672e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, ...</msg>
<status status="PASS" starttime="20201030 15:50:56.530" endtime="20201030 15:50:56.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.549" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:56.547" endtime="20201030 15:50:56.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.554" level="INFO">VALUE: [1.51400000000107e-06, 1.5980000000054284e-06, 1.5420000000002099e-06, 1.5549999999933672e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201030 15:50:56.551" endtime="20201030 15:50:56.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.541" endtime="20201030 15:50:56.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:56.567" endtime="20201030 15:50:56.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.562" endtime="20201030 15:50:56.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.560" endtime="20201030 15:50:56.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.079" endtime="20201030 15:50:56.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.078" endtime="20201030 15:50:56.592"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.612" endtime="20201030 15:50:56.627"></status>
</kw>
<msg timestamp="20201030 15:50:56.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:56.608" endtime="20201030 15:50:56.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:56.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:56.630" endtime="20201030 15:50:56.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.637" endtime="20201030 15:50:56.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.601" endtime="20201030 15:50:56.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.597" endtime="20201030 15:50:56.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:56.660" endtime="20201030 15:50:56.999"></status>
</kw>
<msg timestamp="20201030 15:50:57.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036756472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036758028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:56.657" endtime="20201030 15:50:57.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036756472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036758028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:57.009" endtime="20201030 15:50:57.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.028" endtime="20201030 15:50:57.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.650" endtime="20201030 15:50:57.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.645" endtime="20201030 15:50:57.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:57.045" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.4860000000019302e-...</msg>
<status status="PASS" starttime="20201030 15:50:57.036" endtime="20201030 15:50:57.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:57.054" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.5699999999993497e-06...</msg>
<status status="PASS" starttime="20201030 15:50:57.047" endtime="20201030 15:50:57.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.064" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:57.062" endtime="20201030 15:50:57.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.069" level="INFO">VALUE: [1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5560000000067187e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.541999999993271e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 15:50:57.066" endtime="20201030 15:50:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.056" endtime="20201030 15:50:57.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:57.082" endtime="20201030 15:50:57.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.078" endtime="20201030 15:50:57.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.075" endtime="20201030 15:50:57.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.593" endtime="20201030 15:50:57.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:56.592" endtime="20201030 15:50:57.107"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.127" endtime="20201030 15:50:57.142"></status>
</kw>
<msg timestamp="20201030 15:50:57.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:57.123" endtime="20201030 15:50:57.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:57.145" endtime="20201030 15:50:57.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.151" endtime="20201030 15:50:57.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.116" endtime="20201030 15:50:57.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.112" endtime="20201030 15:50:57.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.174" endtime="20201030 15:50:57.513"></status>
</kw>
<msg timestamp="20201030 15:50:57.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036870597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036872153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:57.171" endtime="20201030 15:50:57.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036870597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036872153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:57.522" endtime="20201030 15:50:57.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.541" endtime="20201030 15:50:57.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.164" endtime="20201030 15:50:57.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.159" endtime="20201030 15:50:57.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:57.558" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5839999999989196e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.6109999999985858e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5420000000002099e-0...</msg>
<status status="PASS" starttime="20201030 15:50:57.549" endtime="20201030 15:50:57.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:57.568" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.527999999993701e-06, ...</msg>
<status status="PASS" starttime="20201030 15:50:57.560" endtime="20201030 15:50:57.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.577" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:57.575" endtime="20201030 15:50:57.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.583" level="INFO">VALUE: [1.5559999999997798e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.527999999993701e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5979999999984895e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5129999999946575e-06, 1.5550000000003061e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201030 15:50:57.580" endtime="20201030 15:50:57.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.569" endtime="20201030 15:50:57.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:57.597" endtime="20201030 15:50:57.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.591" endtime="20201030 15:50:57.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.588" endtime="20201030 15:50:57.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.108" endtime="20201030 15:50:57.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.107" endtime="20201030 15:50:57.622"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.642" endtime="20201030 15:50:57.657"></status>
</kw>
<msg timestamp="20201030 15:50:57.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:57.639" endtime="20201030 15:50:57.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:57.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:57.660" endtime="20201030 15:50:57.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.668" endtime="20201030 15:50:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.631" endtime="20201030 15:50:57.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.627" endtime="20201030 15:50:57.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:57.692" endtime="20201030 15:50:58.020"></status>
</kw>
<msg timestamp="20201030 15:50:58.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037358292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037359833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:57.689" endtime="20201030 15:50:58.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037358292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037359833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:58.030" endtime="20201030 15:50:58.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.048" endtime="20201030 15:50:58.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.681" endtime="20201030 15:50:58.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.677" endtime="20201030 15:50:58.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:58.065" level="INFO">${RESULT} = [{'diff': 1.5410000000007362e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5969999999990159e-06}, {'diff': 1.5549999999933672e-...</msg>
<status status="PASS" starttime="20201030 15:50:58.056" endtime="20201030 15:50:58.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:58.080" level="INFO">${OVERHEAD} = {'diff': [1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.4860000000019302e-06...</msg>
<status status="PASS" starttime="20201030 15:50:58.067" endtime="20201030 15:50:58.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.090" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:58.087" endtime="20201030 15:50:58.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.095" level="INFO">VALUE: [1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.4860000000019302e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.527999999993701e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5700000000062886e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5979999999984895e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5840000000058585e-06, 1.5549999999933672e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 15:50:58.092" endtime="20201030 15:50:58.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.081" endtime="20201030 15:50:58.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:58.107" endtime="20201030 15:50:58.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.103" endtime="20201030 15:50:58.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.101" endtime="20201030 15:50:58.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.623" endtime="20201030 15:50:58.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:57.622" endtime="20201030 15:50:58.132"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.152" endtime="20201030 15:50:58.167"></status>
</kw>
<msg timestamp="20201030 15:50:58.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:58.149" endtime="20201030 15:50:58.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:58.170" endtime="20201030 15:50:58.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.176" endtime="20201030 15:50:58.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.142" endtime="20201030 15:50:58.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.137" endtime="20201030 15:50:58.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.199" endtime="20201030 15:50:58.537"></status>
</kw>
<msg timestamp="20201030 15:50:58.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036715903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:58.196" endtime="20201030 15:50:58.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036715903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:58.547" endtime="20201030 15:50:58.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.565" endtime="20201030 15:50:58.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.189" endtime="20201030 15:50:58.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.184" endtime="20201030 15:50:58.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:58.582" level="INFO">${RESULT} = [{'diff': 1.5420000000002099e-06}, {'diff': 1.5560000000067187e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.6389999999977256e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-...</msg>
<status status="PASS" starttime="20201030 15:50:58.574" endtime="20201030 15:50:58.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:58.593" level="INFO">${OVERHEAD} = {'diff': [1.5420000000002099e-06, 1.5560000000067187e-06, 1.5699999999993497e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5000000000015001e-06...</msg>
<status status="PASS" starttime="20201030 15:50:58.584" endtime="20201030 15:50:58.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.604" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:58.601" endtime="20201030 15:50:58.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.609" level="INFO">VALUE: [1.5420000000002099e-06, 1.5560000000067187e-06, 1.5699999999993497e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5549999999933672e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5839999999989196e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5139999999941312e-06, 1.5979999999984895e-06, 1.5559999999997798e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 15:50:58.606" endtime="20201030 15:50:58.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.595" endtime="20201030 15:50:58.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:58.621" endtime="20201030 15:50:58.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.617" endtime="20201030 15:50:58.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.614" endtime="20201030 15:50:58.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.134" endtime="20201030 15:50:58.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.133" endtime="20201030 15:50:58.646"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.666" endtime="20201030 15:50:58.681"></status>
</kw>
<msg timestamp="20201030 15:50:58.682" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:58.663" endtime="20201030 15:50:58.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:58.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:58.684" endtime="20201030 15:50:58.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.691" endtime="20201030 15:50:58.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.656" endtime="20201030 15:50:58.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.651" endtime="20201030 15:50:58.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:58.714" endtime="20201030 15:50:59.054"></status>
</kw>
<msg timestamp="20201030 15:50:59.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036739528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036741111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:58.710" endtime="20201030 15:50:59.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036739528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036741111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:59.063" endtime="20201030 15:50:59.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.082" endtime="20201030 15:50:59.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.703" endtime="20201030 15:50:59.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.699" endtime="20201030 15:50:59.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:59.099" level="INFO">${RESULT} = [{'diff': 1.582999999999446e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-0...</msg>
<status status="PASS" starttime="20201030 15:50:59.090" endtime="20201030 15:50:59.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:59.109" level="INFO">${OVERHEAD} = {'diff': [1.582999999999446e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:50:59.101" endtime="20201030 15:50:59.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:59.116" endtime="20201030 15:50:59.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.124" level="INFO">VALUE: [1.582999999999446e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5130000000015964e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.4870000000014039e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5969999999990159e-06, 1.5700000000062886e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 15:50:59.121" endtime="20201030 15:50:59.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.110" endtime="20201030 15:50:59.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:59.136" endtime="20201030 15:50:59.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.132" endtime="20201030 15:50:59.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.129" endtime="20201030 15:50:59.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.648" endtime="20201030 15:50:59.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:58.647" endtime="20201030 15:50:59.161"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.181" endtime="20201030 15:50:59.195"></status>
</kw>
<msg timestamp="20201030 15:50:59.197" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.178" endtime="20201030 15:50:59.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.199" endtime="20201030 15:50:59.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.205" endtime="20201030 15:50:59.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.171" endtime="20201030 15:50:59.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.166" endtime="20201030 15:50:59.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.230" endtime="20201030 15:50:59.566"></status>
</kw>
<msg timestamp="20201030 15:50:59.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036960208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036961764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:59.227" endtime="20201030 15:50:59.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036960208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036961764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:50:59.576" endtime="20201030 15:50:59.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.594" endtime="20201030 15:50:59.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.219" endtime="20201030 15:50:59.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.214" endtime="20201030 15:50:59.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:50:59.611" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5549999999933672e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5550000000003061e-06...</msg>
<status status="PASS" starttime="20201030 15:50:59.602" endtime="20201030 15:50:59.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:50:59.620" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, ...</msg>
<status status="PASS" starttime="20201030 15:50:59.613" endtime="20201030 15:50:59.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.630" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:50:59.628" endtime="20201030 15:50:59.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.636" level="INFO">VALUE: [1.5559999999997798e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.4999999999945612e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5560000000067187e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.637999999998252e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 15:50:59.633" endtime="20201030 15:50:59.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.622" endtime="20201030 15:50:59.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:50:59.650" endtime="20201030 15:50:59.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.644" endtime="20201030 15:50:59.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.642" endtime="20201030 15:50:59.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.163" endtime="20201030 15:50:59.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.162" endtime="20201030 15:50:59.675"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.696" endtime="20201030 15:50:59.711"></status>
</kw>
<msg timestamp="20201030 15:50:59.713" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.692" endtime="20201030 15:50:59.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:50:59.720" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:50:59.715" endtime="20201030 15:50:59.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.722" endtime="20201030 15:50:59.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.684" endtime="20201030 15:50:59.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.680" endtime="20201030 15:50:59.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:50:59.750" endtime="20201030 15:51:00.085"></status>
</kw>
<msg timestamp="20201030 15:51:00.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038479181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03848075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:50:59.746" endtime="20201030 15:51:00.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038479181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03848075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:00.094" endtime="20201030 15:51:00.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.113" endtime="20201030 15:51:00.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.738" endtime="20201030 15:51:00.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.732" endtime="20201030 15:51:00.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:00.130" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06...</msg>
<status status="PASS" starttime="20201030 15:51:00.121" endtime="20201030 15:51:00.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:00.141" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:00.132" endtime="20201030 15:51:00.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.151" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:00.148" endtime="20201030 15:51:00.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.156" level="INFO">VALUE: [1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5970000000059548e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.4999999999945612e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5560000000067187e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5979999999984895e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 15:51:00.153" endtime="20201030 15:51:00.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.142" endtime="20201030 15:51:00.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:00.168" endtime="20201030 15:51:00.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.164" endtime="20201030 15:51:00.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.161" endtime="20201030 15:51:00.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.677" endtime="20201030 15:51:00.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:59.676" endtime="20201030 15:51:00.193"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.213" endtime="20201030 15:51:00.227"></status>
</kw>
<msg timestamp="20201030 15:51:00.229" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:00.210" endtime="20201030 15:51:00.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:00.231" endtime="20201030 15:51:00.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.237" endtime="20201030 15:51:00.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.203" endtime="20201030 15:51:00.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.198" endtime="20201030 15:51:00.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.260" endtime="20201030 15:51:00.595"></status>
</kw>
<msg timestamp="20201030 15:51:00.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037009764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037011319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:00.257" endtime="20201030 15:51:00.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037009764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037011319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:00.605" endtime="20201030 15:51:00.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.623" endtime="20201030 15:51:00.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.250" endtime="20201030 15:51:00.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.245" endtime="20201030 15:51:00.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:00.641" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.4860000000019302e-06}, {'diff': 1.5969999999990159e-06}, {'diff': 1.5420000000002099e-0...</msg>
<status status="PASS" starttime="20201030 15:51:00.632" endtime="20201030 15:51:00.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:00.652" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.4860000000019302e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:00.643" endtime="20201030 15:51:00.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.662" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:00.660" endtime="20201030 15:51:00.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.668" level="INFO">VALUE: [1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.4860000000019302e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.6249999999981557e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5549999999933672e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5549999999933672e-06, 1.5549999999933672e-06, 1.5000000000015001e-06, 1.5970000000059548e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 15:51:00.664" endtime="20201030 15:51:00.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.654" endtime="20201030 15:51:00.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:00.682" endtime="20201030 15:51:00.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.677" endtime="20201030 15:51:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.673" endtime="20201030 15:51:00.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.195" endtime="20201030 15:51:00.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.194" endtime="20201030 15:51:00.707"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.728" endtime="20201030 15:51:00.742"></status>
</kw>
<msg timestamp="20201030 15:51:00.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:00.724" endtime="20201030 15:51:00.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:00.750" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:00.746" endtime="20201030 15:51:00.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.752" endtime="20201030 15:51:00.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.717" endtime="20201030 15:51:00.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.712" endtime="20201030 15:51:00.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:00.775" endtime="20201030 15:51:01.122"></status>
</kw>
<msg timestamp="20201030 15:51:01.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036981, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036982542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:00.772" endtime="20201030 15:51:01.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036981, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036982542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:01.133" endtime="20201030 15:51:01.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.154" endtime="20201030 15:51:01.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.765" endtime="20201030 15:51:01.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.760" endtime="20201030 15:51:01.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:01.174" level="INFO">${RESULT} = [{'diff': 1.5420000000002099e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.4860000000019302e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06...</msg>
<status status="PASS" starttime="20201030 15:51:01.164" endtime="20201030 15:51:01.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:01.183" level="INFO">${OVERHEAD} = {'diff': [1.5420000000002099e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:01.176" endtime="20201030 15:51:01.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.193" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:01.191" endtime="20201030 15:51:01.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.199" level="INFO">VALUE: [1.5420000000002099e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:51:01.196" endtime="20201030 15:51:01.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.185" endtime="20201030 15:51:01.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:01.211" endtime="20201030 15:51:01.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.207" endtime="20201030 15:51:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.204" endtime="20201030 15:51:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.709" endtime="20201030 15:51:01.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:00.708" endtime="20201030 15:51:01.236"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.257" endtime="20201030 15:51:01.272"></status>
</kw>
<msg timestamp="20201030 15:51:01.274" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:01.253" endtime="20201030 15:51:01.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:01.276" endtime="20201030 15:51:01.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.282" endtime="20201030 15:51:01.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.246" endtime="20201030 15:51:01.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.241" endtime="20201030 15:51:01.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.307" endtime="20201030 15:51:01.673"></status>
</kw>
<msg timestamp="20201030 15:51:01.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038653889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038655458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:01.303" endtime="20201030 15:51:01.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038653889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038655458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:01.682" endtime="20201030 15:51:01.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.701" endtime="20201030 15:51:01.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.295" endtime="20201030 15:51:01.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.290" endtime="20201030 15:51:01.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:01.718" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.6250000000050946e-06}, {'diff': 1.4860000000019302e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5270000000011663e-06...</msg>
<status status="PASS" starttime="20201030 15:51:01.709" endtime="20201030 15:51:01.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:01.728" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.6250000000050946e-06, 1.4860000000019302e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.4999999999945612e-06, 1.5420000000002099e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:01.720" endtime="20201030 15:51:01.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.738" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:01.735" endtime="20201030 15:51:01.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.743" level="INFO">VALUE: [1.568999999999876e-06, 1.6250000000050946e-06, 1.4860000000019302e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.4999999999945612e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5549999999933672e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5130000000015964e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5549999999933672e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5139999999941312e-06]</msg>
<status status="PASS" starttime="20201030 15:51:01.740" endtime="20201030 15:51:01.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.729" endtime="20201030 15:51:01.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:01.757" endtime="20201030 15:51:01.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.751" endtime="20201030 15:51:01.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.749" endtime="20201030 15:51:01.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.238" endtime="20201030 15:51:01.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.237" endtime="20201030 15:51:01.782"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.802" endtime="20201030 15:51:01.816"></status>
</kw>
<msg timestamp="20201030 15:51:01.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:01.799" endtime="20201030 15:51:01.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:01.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:01.820" endtime="20201030 15:51:01.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.826" endtime="20201030 15:51:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.792" endtime="20201030 15:51:01.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.787" endtime="20201030 15:51:01.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:01.849" endtime="20201030 15:51:02.186"></status>
</kw>
<msg timestamp="20201030 15:51:02.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03696875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036970306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:01.846" endtime="20201030 15:51:02.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03696875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036970306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:02.196" endtime="20201030 15:51:02.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.214" endtime="20201030 15:51:02.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.838" endtime="20201030 15:51:02.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.834" endtime="20201030 15:51:02.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:02.231" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5000000000015001e-...</msg>
<status status="PASS" starttime="20201030 15:51:02.223" endtime="20201030 15:51:02.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:02.242" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5420000000002099e-06...</msg>
<status status="PASS" starttime="20201030 15:51:02.234" endtime="20201030 15:51:02.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.252" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:02.250" endtime="20201030 15:51:02.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.258" level="INFO">VALUE: [1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5420000000002099e-06, 1.527999999993701e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.51400000000107e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5980000000054284e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.527999999993701e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201030 15:51:02.254" endtime="20201030 15:51:02.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.244" endtime="20201030 15:51:02.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:02.279" endtime="20201030 15:51:02.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.274" endtime="20201030 15:51:02.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.272" endtime="20201030 15:51:02.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.783" endtime="20201030 15:51:02.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:01.783" endtime="20201030 15:51:02.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:50:51.878" endtime="20201030 15:51:02.304"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:50:51.750" endtime="20201030 15:51:02.305" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:02.322" endtime="20201030 15:51:02.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.319" endtime="20201030 15:51:02.345"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.378" endtime="20201030 15:51:02.397"></status>
</kw>
<msg timestamp="20201030 15:51:02.398" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.375" endtime="20201030 15:51:02.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.404" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.400" endtime="20201030 15:51:02.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.411" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:02.407" endtime="20201030 15:51:02.411"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:02.368" endtime="20201030 15:51:02.413"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:02.361" endtime="20201030 15:51:02.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.359" endtime="20201030 15:51:02.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:02.423" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:02.422" endtime="20201030 15:51:02.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.417" endtime="20201030 15:51:02.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.357" endtime="20201030 15:51:02.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.355" endtime="20201030 15:51:02.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.429" endtime="20201030 15:51:02.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.351" endtime="20201030 15:51:02.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.347" endtime="20201030 15:51:02.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.316" endtime="20201030 15:51:02.436"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.458" endtime="20201030 15:51:02.480"></status>
</kw>
<msg timestamp="20201030 15:51:02.481" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.454" endtime="20201030 15:51:02.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.487" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:02.483" endtime="20201030 15:51:02.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.490" endtime="20201030 15:51:02.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.447" endtime="20201030 15:51:02.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.441" endtime="20201030 15:51:02.497"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.502" endtime="20201030 15:51:02.507"></status>
</kw>
<msg timestamp="20201030 15:51:02.508" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:02.499" endtime="20201030 15:51:02.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.518" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:02.515" endtime="20201030 15:51:02.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.522" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:02.520" endtime="20201030 15:51:02.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.509" endtime="20201030 15:51:02.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.534" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:02.532" endtime="20201030 15:51:02.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.539" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:02.537" endtime="20201030 15:51:02.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.526" endtime="20201030 15:51:02.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.559" endtime="20201030 15:51:02.904"></status>
</kw>
<msg timestamp="20201030 15:51:02.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128596764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:02.555" endtime="20201030 15:51:02.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128596764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:02.913" endtime="20201030 15:51:02.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:02.932" endtime="20201030 15:51:02.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.548" endtime="20201030 15:51:02.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.543" endtime="20201030 15:51:02.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:02.949" level="INFO">${RESULT} = [{'diff': 4.3200000000021e-06}, {'diff': 4.457999999984974e-06}, {'diff': 4.500000000018378e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.485999999997992e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:02.940" endtime="20201030 15:51:02.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:02.964" level="INFO">${OVERHEAD} = {'diff': [4.3200000000021e-06, 4.457999999984974e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.416999999978799e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.513999999983254e-06, 4.49999...</msg>
<status status="PASS" starttime="20201030 15:51:02.951" endtime="20201030 15:51:02.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.975" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:02.973" endtime="20201030 15:51:02.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:02.981" level="INFO">VALUE: [4.3200000000021e-06, 4.457999999984974e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.416999999978799e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.513999999983254e-06, 4.499999999990623e-06, 4.471999999977605e-06, 4.472999999977079e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.4720000000053606e-06, 4.555999999988902e-06, 4.485999999997992e-06, 4.472999999977079e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.514000000011009e-06, 4.486000000025747e-06, 4.443999999992343e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.499999999990623e-06, 4.486000000025747e-06, 4.486000000025747e-06, 4.471999999977605e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.473000000004834e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.457999999984974e-06, 4.485999999997992e-06, 4.486999999997465e-06, 4.471999999977605e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06]</msg>
<status status="PASS" starttime="20201030 15:51:02.978" endtime="20201030 15:51:02.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.966" endtime="20201030 15:51:02.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:02.993" endtime="20201030 15:51:03.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.989" endtime="20201030 15:51:03.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.986" endtime="20201030 15:51:03.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:02.437" endtime="20201030 15:51:03.018"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:02.310" endtime="20201030 15:51:03.019" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:03.036" endtime="20201030 15:51:03.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.032" endtime="20201030 15:51:03.059"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.094" endtime="20201030 15:51:03.112"></status>
</kw>
<msg timestamp="20201030 15:51:03.113" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.089" endtime="20201030 15:51:03.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.120" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.115" endtime="20201030 15:51:03.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.126" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:03.122" endtime="20201030 15:51:03.127"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:03.082" endtime="20201030 15:51:03.129"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:03.075" endtime="20201030 15:51:03.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.073" endtime="20201030 15:51:03.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:03.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:03.137" endtime="20201030 15:51:03.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.133" endtime="20201030 15:51:03.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.071" endtime="20201030 15:51:03.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.069" endtime="20201030 15:51:03.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.142" endtime="20201030 15:51:03.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.065" endtime="20201030 15:51:03.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.061" endtime="20201030 15:51:03.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.030" endtime="20201030 15:51:03.149"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.171" endtime="20201030 15:51:03.252"></status>
</kw>
<msg timestamp="20201030 15:51:03.254" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.168" endtime="20201030 15:51:03.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.261" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.256" endtime="20201030 15:51:03.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.265" endtime="20201030 15:51:03.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.161" endtime="20201030 15:51:03.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.155" endtime="20201030 15:51:03.274"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.279" endtime="20201030 15:51:03.283"></status>
</kw>
<msg timestamp="20201030 15:51:03.284" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:03.276" endtime="20201030 15:51:03.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.294" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:03.292" endtime="20201030 15:51:03.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.299" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:03.297" endtime="20201030 15:51:03.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.286" endtime="20201030 15:51:03.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.311" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:03.309" endtime="20201030 15:51:03.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.315" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:03.313" endtime="20201030 15:51:03.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.303" endtime="20201030 15:51:03.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.334" endtime="20201030 15:51:03.685"></status>
</kw>
<msg timestamp="20201030 15:51:03.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12931975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129360792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:03.331" endtime="20201030 15:51:03.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.12931975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129360792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:03.697" endtime="20201030 15:51:03.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.716" endtime="20201030 15:51:03.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.323" endtime="20201030 15:51:03.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.319" endtime="20201030 15:51:03.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:03.733" level="INFO">${RESULT} = [{'diff': 4.104199999999114e-05}, {'diff': 4.098599999999286e-05}, {'diff': 4.088900000001616e-05}, {'diff': 4.095900000000707e-05}, {'diff': 4.094399999998721e-05}, {'diff': 4.0930999999994055e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:03.724" endtime="20201030 15:51:03.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:03.743" level="INFO">${OVERHEAD} = {'diff': [4.104199999999114e-05, 4.098599999999286e-05, 4.088900000001616e-05, 4.095900000000707e-05, 4.094399999998721e-05, 4.0930999999994055e-05, 4.095900000000707e-05, 4.0903000000008793e-05, 4.09...</msg>
<status status="PASS" starttime="20201030 15:51:03.735" endtime="20201030 15:51:03.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.754" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:03.752" endtime="20201030 15:51:03.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.760" level="INFO">VALUE: [4.104199999999114e-05, 4.098599999999286e-05, 4.088900000001616e-05, 4.095900000000707e-05, 4.094399999998721e-05, 4.0930999999994055e-05, 4.095900000000707e-05, 4.0903000000008793e-05, 4.092999999999458e-05, 4.088899999998841e-05, 4.097200000000023e-05, 4.094399999998721e-05, 4.0930999999994055e-05, 4.0957999999979844e-05, 4.0874999999995776e-05, 4.094400000001497e-05, 4.0957999999979844e-05, 4.094500000001444e-05, 4.098599999999286e-05, 4.094399999998721e-05, 4.091600000000195e-05, 4.094400000001497e-05, 4.092999999999458e-05, 4.095900000000707e-05, 4.095900000000707e-05, 4.09580000000076e-05, 4.095900000000707e-05, 4.0944999999986686e-05, 4.0874999999995776e-05, 4.099999999998549e-05, 4.088899999998841e-05, 4.09580000000076e-05, 4.094399999998721e-05, 4.0903000000008793e-05, 4.0944999999986686e-05, 4.095899999997932e-05, 4.0944999999986686e-05, 4.094500000001444e-05, 4.092999999999458e-05, 4.100000000001325e-05, 4.093100000002181e-05, 4.0944999999986686e-05, 4.094400000001497e-05, 4.09580000000076e-05, 4.092999999999458e-05, 4.094400000001497e-05, 4.094399999998721e-05, 4.095900000000707e-05, 4.094500000001444e-05, 4.095900000000707e-05]</msg>
<status status="PASS" starttime="20201030 15:51:03.756" endtime="20201030 15:51:03.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.744" endtime="20201030 15:51:03.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:03.772" endtime="20201030 15:51:03.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.768" endtime="20201030 15:51:03.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.765" endtime="20201030 15:51:03.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.150" endtime="20201030 15:51:03.797"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:03.023" endtime="20201030 15:51:03.799" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:03.816" endtime="20201030 15:51:03.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.812" endtime="20201030 15:51:03.840"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.875" endtime="20201030 15:51:03.893"></status>
</kw>
<msg timestamp="20201030 15:51:03.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.871" endtime="20201030 15:51:03.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.897" endtime="20201030 15:51:03.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:03.916" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:03.908" endtime="20201030 15:51:03.919"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:03.864" endtime="20201030 15:51:03.921"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:03.858" endtime="20201030 15:51:03.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.855" endtime="20201030 15:51:03.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:03.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:03.935" endtime="20201030 15:51:03.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.927" endtime="20201030 15:51:03.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.853" endtime="20201030 15:51:03.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.850" endtime="20201030 15:51:03.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.941" endtime="20201030 15:51:03.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.846" endtime="20201030 15:51:03.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.841" endtime="20201030 15:51:03.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.810" endtime="20201030 15:51:03.955"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:03.978" endtime="20201030 15:51:04.215"></status>
</kw>
<msg timestamp="20201030 15:51:04.218" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:03.975" endtime="20201030 15:51:04.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.226" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.221" endtime="20201030 15:51:04.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.229" endtime="20201030 15:51:04.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.967" endtime="20201030 15:51:04.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.962" endtime="20201030 15:51:04.239"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.245" endtime="20201030 15:51:04.252"></status>
</kw>
<msg timestamp="20201030 15:51:04.253" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:04.241" endtime="20201030 15:51:04.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.268" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:04.265" endtime="20201030 15:51:04.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.272" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:04.270" endtime="20201030 15:51:04.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.256" endtime="20201030 15:51:04.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.284" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:04.282" endtime="20201030 15:51:04.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.290" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:04.288" endtime="20201030 15:51:04.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.276" endtime="20201030 15:51:04.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.309" endtime="20201030 15:51:04.661"></status>
</kw>
<msg timestamp="20201030 15:51:04.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.158570986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.158650222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:04.306" endtime="20201030 15:51:04.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.158570986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.158650222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:04.671" endtime="20201030 15:51:04.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.688" endtime="20201030 15:51:04.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.299" endtime="20201030 15:51:04.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.294" endtime="20201030 15:51:04.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:04.706" level="INFO">${RESULT} = [{'diff': 7.92360000000103e-05}, {'diff': 7.861099999997845e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.86110000000062e-05}, {'diff': 7.834700000000638e-05}, {'diff': 7.862499999999883e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:04.697" endtime="20201030 15:51:04.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:04.715" level="INFO">${OVERHEAD} = {'diff': [7.92360000000103e-05, 7.861099999997845e-05, 7.856900000000056e-05, 7.86110000000062e-05, 7.834700000000638e-05, 7.862499999999883e-05, 7.863899999999147e-05, 7.86110000000062e-05, 7.8611000...</msg>
<status status="PASS" starttime="20201030 15:51:04.708" endtime="20201030 15:51:04.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.726" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:04.724" endtime="20201030 15:51:04.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.731" level="INFO">VALUE: [7.92360000000103e-05, 7.861099999997845e-05, 7.856900000000056e-05, 7.86110000000062e-05, 7.834700000000638e-05, 7.862499999999883e-05, 7.863899999999147e-05, 7.86110000000062e-05, 7.86110000000062e-05, 7.859799999998529e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.837499999999165e-05, 7.862499999999883e-05, 7.858300000002094e-05, 7.859700000001357e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.859799999998529e-05, 7.863899999999147e-05, 7.836099999999901e-05, 7.863899999999147e-05, 7.861099999995069e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.863899999999147e-05, 7.834700000003414e-05, 7.859799999998529e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.859700000001357e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.830600000002796e-05, 7.86110000000062e-05, 7.859699999995806e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.86110000000062e-05, 7.859700000001357e-05, 7.836099999997126e-05, 7.86110000000062e-05, 7.85980000000408e-05, 7.86110000000062e-05, 7.863900000004698e-05, 7.862499999999883e-05, 7.86110000000062e-05]</msg>
<status status="PASS" starttime="20201030 15:51:04.728" endtime="20201030 15:51:04.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.717" endtime="20201030 15:51:04.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:04.745" endtime="20201030 15:51:04.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.739" endtime="20201030 15:51:04.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.737" endtime="20201030 15:51:04.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:03.957" endtime="20201030 15:51:04.770"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:03.803" endtime="20201030 15:51:04.771" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:04.789" endtime="20201030 15:51:04.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.785" endtime="20201030 15:51:04.812"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.845" endtime="20201030 15:51:04.863"></status>
</kw>
<msg timestamp="20201030 15:51:04.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.842" endtime="20201030 15:51:04.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.871" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.867" endtime="20201030 15:51:04.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.877" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:04.873" endtime="20201030 15:51:04.878"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:04.835" endtime="20201030 15:51:04.880"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:04.828" endtime="20201030 15:51:04.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.826" endtime="20201030 15:51:04.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:04.890" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:04.888" endtime="20201030 15:51:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.884" endtime="20201030 15:51:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.824" endtime="20201030 15:51:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.822" endtime="20201030 15:51:04.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.893" endtime="20201030 15:51:04.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.818" endtime="20201030 15:51:04.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.814" endtime="20201030 15:51:04.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.782" endtime="20201030 15:51:04.900"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.924" endtime="20201030 15:51:04.948"></status>
</kw>
<msg timestamp="20201030 15:51:04.949" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.919" endtime="20201030 15:51:04.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.955" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:04.951" endtime="20201030 15:51:04.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.958" endtime="20201030 15:51:04.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.912" endtime="20201030 15:51:04.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.906" endtime="20201030 15:51:04.965"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:04.970" endtime="20201030 15:51:04.974"></status>
</kw>
<msg timestamp="20201030 15:51:04.976" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:04.967" endtime="20201030 15:51:04.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.985" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:04.983" endtime="20201030 15:51:04.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:04.990" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:04.988" endtime="20201030 15:51:04.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.977" endtime="20201030 15:51:04.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.011" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:05.007" endtime="20201030 15:51:05.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.020" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:05.016" endtime="20201030 15:51:05.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.996" endtime="20201030 15:51:05.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.051" endtime="20201030 15:51:05.426"></status>
</kw>
<msg timestamp="20201030 15:51:05.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129149181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129150528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:05.047" endtime="20201030 15:51:05.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129149181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129150528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:05.443" endtime="20201030 15:51:05.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.476" endtime="20201030 15:51:05.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.040" endtime="20201030 15:51:05.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.032" endtime="20201030 15:51:05.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:05.503" level="INFO">${RESULT} = [{'diff': 1.346999999984888e-06}, {'diff': 1.346999999984888e-06}, {'diff': 1.3470000000126436e-06}, {'diff': 1.3889999999905367e-06}, {'diff': 1.332999999992257e-06}, {'diff': 1.3610000000052747e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:05.491" endtime="20201030 15:51:05.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:05.514" level="INFO">${OVERHEAD} = {'diff': [1.346999999984888e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.3889999999905367e-06, 1.332999999992257e-06, 1.3610000000052747e-06, 1.3480000000121173e-06, 1.3610000000052747e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:05.505" endtime="20201030 15:51:05.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.526" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:05.523" endtime="20201030 15:51:05.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.531" level="INFO">VALUE: [1.346999999984888e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.3889999999905367e-06, 1.332999999992257e-06, 1.3610000000052747e-06, 1.3480000000121173e-06, 1.3610000000052747e-06, 1.360999999977519e-06, 1.3330000000200126e-06, 1.3339999999917307e-06, 1.332999999992257e-06, 1.3480000000121173e-06, 1.3330000000200126e-06, 1.4170000000035543e-06, 1.360999999977519e-06, 1.3470000000126436e-06, 1.3330000000200126e-06, 1.3610000000052747e-06, 1.3330000000200126e-06, 1.291999999986082e-06, 1.332999999992257e-06, 1.3479999999843617e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.346999999984888e-06, 1.3750000000256613e-06, 1.346999999984888e-06, 1.4029999999831677e-06, 1.4170000000035543e-06, 1.3470000000126436e-06, 1.3479999999843617e-06, 1.3610000000052747e-06, 1.3339999999917307e-06, 1.346999999984888e-06, 1.3480000000121173e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.318999999999626e-06, 1.3480000000121173e-06, 1.318999999999626e-06, 1.332999999992257e-06, 1.3470000000126436e-06, 1.3470000000126436e-06, 1.3610000000052747e-06, 1.3479999999843617e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.360999999977519e-06]</msg>
<status status="PASS" starttime="20201030 15:51:05.528" endtime="20201030 15:51:05.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.516" endtime="20201030 15:51:05.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:05.544" endtime="20201030 15:51:05.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.540" endtime="20201030 15:51:05.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.537" endtime="20201030 15:51:05.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:04.901" endtime="20201030 15:51:05.569"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:04.776" endtime="20201030 15:51:05.571" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:05.588" endtime="20201030 15:51:05.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.584" endtime="20201030 15:51:05.612"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.646" endtime="20201030 15:51:05.664"></status>
</kw>
<msg timestamp="20201030 15:51:05.666" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.642" endtime="20201030 15:51:05.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.668" endtime="20201030 15:51:05.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.682" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:05.676" endtime="20201030 15:51:05.683"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:05.635" endtime="20201030 15:51:05.685"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:05.628" endtime="20201030 15:51:05.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.625" endtime="20201030 15:51:05.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:05.700" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:05.698" endtime="20201030 15:51:05.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.692" endtime="20201030 15:51:05.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.624" endtime="20201030 15:51:05.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.622" endtime="20201030 15:51:05.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.706" endtime="20201030 15:51:05.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.618" endtime="20201030 15:51:05.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.613" endtime="20201030 15:51:05.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.582" endtime="20201030 15:51:05.717"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.746" endtime="20201030 15:51:05.828"></status>
</kw>
<msg timestamp="20201030 15:51:05.829" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.742" endtime="20201030 15:51:05.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.835" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:05.831" endtime="20201030 15:51:05.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.838" endtime="20201030 15:51:05.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.735" endtime="20201030 15:51:05.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.726" endtime="20201030 15:51:05.846"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.850" endtime="20201030 15:51:05.855"></status>
</kw>
<msg timestamp="20201030 15:51:05.856" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:05.847" endtime="20201030 15:51:05.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.867" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:05.864" endtime="20201030 15:51:05.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.871" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:05.869" endtime="20201030 15:51:05.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.858" endtime="20201030 15:51:05.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.884" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:05.881" endtime="20201030 15:51:05.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:05.888" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:05.886" endtime="20201030 15:51:05.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.875" endtime="20201030 15:51:05.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:05.908" endtime="20201030 15:51:06.279"></status>
</kw>
<msg timestamp="20201030 15:51:06.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152715236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.152729514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:05.904" endtime="20201030 15:51:06.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152715236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.152729514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:06.288" endtime="20201030 15:51:06.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.307" endtime="20201030 15:51:06.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.897" endtime="20201030 15:51:06.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.892" endtime="20201030 15:51:06.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:06.327" level="INFO">${RESULT} = [{'diff': 1.4278000000006452e-05}, {'diff': 1.4333000000005258e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4264000000013821e-05}, {'diff': 1.4221999999980417e-05}, {'diff': 1.4221999999980417e-...</msg>
<status status="PASS" starttime="20201030 15:51:06.317" endtime="20201030 15:51:06.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:06.338" level="INFO">${OVERHEAD} = {'diff': [1.4278000000006452e-05, 1.4333000000005258e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.4221999999980417e-05, 1.4221999999980417e-05, 1.4278000000006452e-05, 1.4221999999980417e-05...</msg>
<status status="PASS" starttime="20201030 15:51:06.329" endtime="20201030 15:51:06.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.349" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:06.347" endtime="20201030 15:51:06.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.355" level="INFO">VALUE: [1.4278000000006452e-05, 1.4333000000005258e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.4221999999980417e-05, 1.4221999999980417e-05, 1.4278000000006452e-05, 1.4221999999980417e-05, 1.4277999999978697e-05, 1.4236000000000804e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4305999999991714e-05, 1.4278000000006452e-05, 1.4263999999986066e-05, 1.4222000000008173e-05, 1.4264000000013821e-05, 1.4278000000006452e-05, 1.4305000000019996e-05, 1.4278000000006452e-05, 1.429099999999961e-05, 1.4277999999978697e-05, 1.4264000000013821e-05, 1.4263999999986066e-05, 1.4277000000006979e-05, 1.4264000000013821e-05, 1.4277999999978697e-05, 1.4249999999993435e-05, 1.429099999999961e-05, 1.4237000000000277e-05, 1.4277000000006979e-05, 1.4222000000008173e-05, 1.4278000000006452e-05, 1.4291999999999083e-05, 1.4221999999980417e-05, 1.4278000000006452e-05, 1.4249999999993435e-05, 1.429099999999961e-05, 1.4277000000006979e-05, 1.4278000000006452e-05, 1.4319999999984345e-05, 1.4291999999999083e-05, 1.4305999999991714e-05, 1.4263999999986066e-05, 1.4264000000013821e-05, 1.434699999999789e-05, 1.4277999999978697e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4277999999978697e-05]</msg>
<status status="PASS" starttime="20201030 15:51:06.352" endtime="20201030 15:51:06.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.340" endtime="20201030 15:51:06.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:06.373" endtime="20201030 15:51:06.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.363" endtime="20201030 15:51:06.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.360" endtime="20201030 15:51:06.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:05.719" endtime="20201030 15:51:06.402"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:05.575" endtime="20201030 15:51:06.404" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:06.424" endtime="20201030 15:51:06.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.420" endtime="20201030 15:51:06.449"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.485" endtime="20201030 15:51:06.506"></status>
</kw>
<msg timestamp="20201030 15:51:06.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.481" endtime="20201030 15:51:06.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.510" endtime="20201030 15:51:06.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.523" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:06.518" endtime="20201030 15:51:06.524"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:06.473" endtime="20201030 15:51:06.526"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:06.466" endtime="20201030 15:51:06.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.464" endtime="20201030 15:51:06.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:06.537" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:06.536" endtime="20201030 15:51:06.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.531" endtime="20201030 15:51:06.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.462" endtime="20201030 15:51:06.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.460" endtime="20201030 15:51:06.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.541" endtime="20201030 15:51:06.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.456" endtime="20201030 15:51:06.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.451" endtime="20201030 15:51:06.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.417" endtime="20201030 15:51:06.549"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.572" endtime="20201030 15:51:06.814"></status>
</kw>
<msg timestamp="20201030 15:51:06.816" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.569" endtime="20201030 15:51:06.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.825" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:06.819" endtime="20201030 15:51:06.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.828" endtime="20201030 15:51:06.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.561" endtime="20201030 15:51:06.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.555" endtime="20201030 15:51:06.836"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.841" endtime="20201030 15:51:06.846"></status>
</kw>
<msg timestamp="20201030 15:51:06.847" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:06.838" endtime="20201030 15:51:06.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.857" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:06.855" endtime="20201030 15:51:06.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.862" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:06.860" endtime="20201030 15:51:06.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.849" endtime="20201030 15:51:06.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.875" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:06.873" endtime="20201030 15:51:06.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:06.880" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:06.878" endtime="20201030 15:51:06.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.866" endtime="20201030 15:51:06.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:06.901" endtime="20201030 15:51:07.275"></status>
</kw>
<msg timestamp="20201030 15:51:07.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145367889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145395306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:06.898" endtime="20201030 15:51:07.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145367889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145395306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:07.285" endtime="20201030 15:51:07.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.305" endtime="20201030 15:51:07.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.889" endtime="20201030 15:51:07.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.884" endtime="20201030 15:51:07.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:07.323" level="INFO">${RESULT} = [{'diff': 2.74170000000018e-05}, {'diff': 2.747300000000008e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7458000000007976e-05}, {'diff': 2.7485999999993238e-05}, {'diff': 2.7485999999993238e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:07.314" endtime="20201030 15:51:07.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:07.334" level="INFO">${OVERHEAD} = {'diff': [2.74170000000018e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.7458000000007976e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:51:07.326" endtime="20201030 15:51:07.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.345" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:07.343" endtime="20201030 15:51:07.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.351" level="INFO">VALUE: [2.74170000000018e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.7458000000007976e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.747300000000008e-05, 2.740300000000917e-05, 2.7458000000007976e-05, 2.7458000000007976e-05, 2.7500000000013625e-05, 2.745900000000745e-05, 2.7486000000020994e-05, 2.7472000000000607e-05, 2.749999999998587e-05, 2.749999999998587e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.747300000000008e-05, 2.747300000000008e-05, 2.744399999998759e-05, 2.749999999998587e-05, 2.7527999999998887e-05, 2.745800000003573e-05, 2.747199999997285e-05, 2.7472000000028363e-05, 2.75410000000198e-05, 2.742999999999496e-05, 2.745799999998022e-05, 2.7486000000020994e-05, 2.745799999998022e-05, 2.747199999997285e-05, 2.7500000000013625e-05, 2.747300000000008e-05, 2.754099999996429e-05, 2.745800000003573e-05, 2.7486000000020994e-05, 2.7499999999958114e-05, 2.7499999999958114e-05, 2.747199999997285e-05, 2.7472000000028363e-05, 2.7500000000013625e-05, 2.747199999997285e-05, 2.7472000000028363e-05, 2.7486000000020994e-05, 2.7472000000028363e-05, 2.745900000000745e-05, 2.7472000000028363e-05]</msg>
<status status="PASS" starttime="20201030 15:51:07.348" endtime="20201030 15:51:07.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.335" endtime="20201030 15:51:07.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:07.371" endtime="20201030 15:51:07.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.366" endtime="20201030 15:51:07.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.363" endtime="20201030 15:51:07.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:06.550" endtime="20201030 15:51:07.396"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:06.410" endtime="20201030 15:51:07.398" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:07.416" endtime="20201030 15:51:07.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.412" endtime="20201030 15:51:07.440"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.484" endtime="20201030 15:51:07.505"></status>
</kw>
<msg timestamp="20201030 15:51:07.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:07.480" endtime="20201030 15:51:07.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.515" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:07.510" endtime="20201030 15:51:07.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:07.519" endtime="20201030 15:51:07.526"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:07.471" endtime="20201030 15:51:07.528"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:07.464" endtime="20201030 15:51:07.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.461" endtime="20201030 15:51:07.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:07.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:07.542" endtime="20201030 15:51:07.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.534" endtime="20201030 15:51:07.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.459" endtime="20201030 15:51:07.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.450" endtime="20201030 15:51:07.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:07.549" endtime="20201030 15:51:07.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.446" endtime="20201030 15:51:07.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.441" endtime="20201030 15:51:07.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.409" endtime="20201030 15:51:07.557"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:07.566" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:07.582" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:08.444" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:07.562" endtime="20201030 15:51:08.445"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.451" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:51:08.448" endtime="20201030 15:51:11.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:07.558" endtime="20201030 15:51:11.454"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.479" endtime="20201030 15:51:11.489"></status>
</kw>
<msg timestamp="20201030 15:51:11.490" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.475" endtime="20201030 15:51:11.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.497" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.492" endtime="20201030 15:51:11.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.499" endtime="20201030 15:51:11.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.467" endtime="20201030 15:51:11.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.462" endtime="20201030 15:51:11.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.522" endtime="20201030 15:51:11.871"></status>
</kw>
<msg timestamp="20201030 15:51:11.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.931601361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.006131944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.519" endtime="20201030 15:51:11.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.931601361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.006131944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:11.881" endtime="20201030 15:51:11.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:11.900" endtime="20201030 15:51:11.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.512" endtime="20201030 15:51:11.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.507" endtime="20201030 15:51:11.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:11.916" level="INFO">${PHILIP_RES} = [{'diff': 0.07453058300000004}, {'diff': 4.555999999489302e-06}, {'diff': 4.597000000217122e-06}, {'diff': 4.569999999759489e-06}, {'diff': 4.583999999141497e-06}, {'diff': 4.5549999994065615e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:11.909" endtime="20201030 15:51:11.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:11.926" level="INFO">${RESULT} = {'diff': [0.07453058300000004, 4.555999999489302e-06, 4.597000000217122e-06, 4.569999999759489e-06, 4.583999999141497e-06, 4.5549999994065615e-06, 4.569999999759489e-06, 4.5420000001072935e-06, 4.5410...</msg>
<status status="PASS" starttime="20201030 15:51:11.918" endtime="20201030 15:51:11.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.937" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:11.934" endtime="20201030 15:51:11.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:11.942" level="INFO">VALUE: [0.07453058300000004, 4.555999999489302e-06, 4.597000000217122e-06, 4.569999999759489e-06, 4.583999999141497e-06, 4.5549999994065615e-06, 4.569999999759489e-06, 4.5420000001072935e-06, 4.541000000024553e-06, 4.555999999489302e-06, 4.5420000001072935e-06, 4.55500000029474e-06, 4.555999999489302e-06, 4.569999999759489e-06, 4.568999999676748e-06, 4.486999999997465e-06, 4.5420000001072935e-06, 4.568999999676748e-06, 4.569000000564927e-06, 4.555999999489302e-06, 4.55500000029474e-06, 4.55600000037748e-06, 4.55600000037748e-06, 4.568999999676748e-06, 4.597000000217122e-06, 4.55600000037748e-06, 4.5549999994065615e-06, 4.555999999489302e-06, 4.624999999869317e-06, 4.569000000564927e-06, 4.569000000564927e-06, 4.555999999489302e-06, 4.55500000029474e-06, 4.55500000029474e-06, 4.555999999489302e-06, 4.55500000029474e-06, 4.55500000029474e-06, 4.5840000000296754e-06, 4.624999999869317e-06, 4.5549999994065615e-06, 4.569999999759489e-06, 4.5549999994065615e-06, 4.55500000029474e-06, 4.55600000037748e-06, 4.582999999946935e-06, 4.51399999956692e-06, 4.55600000037748e-06, 4.5420000001072935e-06, 4.5549999994065615e-06, 4.55600000037748e-06, 4.5420000001072935e-06]</msg>
<status status="PASS" starttime="20201030 15:51:11.939" endtime="20201030 15:51:11.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.928" endtime="20201030 15:51:11.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:11.954" endtime="20201030 15:51:11.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.949" endtime="20201030 15:51:11.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.947" endtime="20201030 15:51:11.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.458" endtime="20201030 15:51:11.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.457" endtime="20201030 15:51:11.979"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.001" endtime="20201030 15:51:12.012"></status>
</kw>
<msg timestamp="20201030 15:51:12.013" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:11.998" endtime="20201030 15:51:12.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.019" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.015" endtime="20201030 15:51:12.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.021" endtime="20201030 15:51:12.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.990" endtime="20201030 15:51:12.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.984" endtime="20201030 15:51:12.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.046" endtime="20201030 15:51:12.395"></status>
</kw>
<msg timestamp="20201030 15:51:12.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037561806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037570694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.043" endtime="20201030 15:51:12.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037561806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037570694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.405" endtime="20201030 15:51:12.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.424" endtime="20201030 15:51:12.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.036" endtime="20201030 15:51:12.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.031" endtime="20201030 15:51:12.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:12.441" level="INFO">${PHILIP_RES} = [{'diff': 8.887999999998564e-06}, {'diff': 8.846999999999328e-06}, {'diff': 8.847999999998801e-06}, {'diff': 8.847000000006267e-06}, {'diff': 8.860999999998898e-06}, {'diff': 8.846999999999328e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:12.433" endtime="20201030 15:51:12.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.450" level="INFO">${RESULT} = {'diff': [8.887999999998564e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.847000000006267e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.8329...</msg>
<status status="PASS" starttime="20201030 15:51:12.443" endtime="20201030 15:51:12.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.461" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:12.459" endtime="20201030 15:51:12.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.466" level="INFO">VALUE: [8.887999999998564e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.847000000006267e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.805000000000618e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.887999999998564e-06, 8.819999999999661e-06, 8.805000000000618e-06, 8.819999999999661e-06, 8.888999999998037e-06, 8.860999999998898e-06, 8.86200000000531e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.84800000000574e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.875000000005406e-06, 8.887999999998564e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.888999999998037e-06, 8.846999999999328e-06, 8.861999999998371e-06]</msg>
<status status="PASS" starttime="20201030 15:51:12.463" endtime="20201030 15:51:12.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.452" endtime="20201030 15:51:12.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:12.480" endtime="20201030 15:51:12.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.474" endtime="20201030 15:51:12.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.471" endtime="20201030 15:51:12.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.980" endtime="20201030 15:51:12.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.979" endtime="20201030 15:51:12.515"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.538" endtime="20201030 15:51:12.549"></status>
</kw>
<msg timestamp="20201030 15:51:12.550" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.535" endtime="20201030 15:51:12.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.557" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:12.553" endtime="20201030 15:51:12.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.559" endtime="20201030 15:51:12.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.527" endtime="20201030 15:51:12.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.521" endtime="20201030 15:51:12.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.584" endtime="20201030 15:51:12.941"></status>
</kw>
<msg timestamp="20201030 15:51:12.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048968597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.581" endtime="20201030 15:51:12.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:12.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048968597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:12.951" endtime="20201030 15:51:12.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:12.969" endtime="20201030 15:51:12.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.573" endtime="20201030 15:51:12.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.568" endtime="20201030 15:51:12.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:12.986" level="INFO">${PHILIP_RES} = [{'diff': 1.3916999999995239e-05}, {'diff': 1.3902000000003134e-05}, {'diff': 1.3902000000003134e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.3917000000002178e-05}, {'diff': 1.3916999999995239e-...</msg>
<status status="PASS" starttime="20201030 15:51:12.978" endtime="20201030 15:51:12.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:12.997" level="INFO">${RESULT} = {'diff': [1.3916999999995239e-05, 1.3902000000003134e-05, 1.3902000000003134e-05, 1.3889000000003038e-05, 1.3917000000002178e-05, 1.3916999999995239e-05, 1.3915999999995765e-05, 1.3903000000002608e-05...</msg>
<status status="PASS" starttime="20201030 15:51:12.988" endtime="20201030 15:51:12.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.007" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:13.005" endtime="20201030 15:51:13.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.013" level="INFO">VALUE: [1.3916999999995239e-05, 1.3902000000003134e-05, 1.3902000000003134e-05, 1.3889000000003038e-05, 1.3917000000002178e-05, 1.3916999999995239e-05, 1.3915999999995765e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3931000000001748e-05, 1.3902999999995669e-05, 1.3874999999996529e-05, 1.3887999999996625e-05, 1.3917000000002178e-05, 1.3875000000003468e-05, 1.3903000000002608e-05, 1.3915999999995765e-05, 1.3901999999996195e-05, 1.3972000000000984e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3901999999996195e-05, 1.3902999999995669e-05, 1.3874999999996529e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3833000000004758e-05, 1.3874999999996529e-05, 1.3888999999996099e-05, 1.3903000000002608e-05, 1.3973000000000457e-05, 1.3888000000003564e-05, 1.3903000000002608e-05, 1.3902999999995669e-05, 1.3902999999995669e-05, 1.3930000000002274e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3903000000002608e-05, 1.3902999999995669e-05, 1.3915999999995765e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3902999999995669e-05, 1.3901999999996195e-05, 1.3902999999995669e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3973000000000457e-05]</msg>
<status status="PASS" starttime="20201030 15:51:13.010" endtime="20201030 15:51:13.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.998" endtime="20201030 15:51:13.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.025" endtime="20201030 15:51:13.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.021" endtime="20201030 15:51:13.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.018" endtime="20201030 15:51:13.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.517" endtime="20201030 15:51:13.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:12.516" endtime="20201030 15:51:13.050"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.072" endtime="20201030 15:51:13.082"></status>
</kw>
<msg timestamp="20201030 15:51:13.083" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.068" endtime="20201030 15:51:13.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.090" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.086" endtime="20201030 15:51:13.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.092" endtime="20201030 15:51:13.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.061" endtime="20201030 15:51:13.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.056" endtime="20201030 15:51:13.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.115" endtime="20201030 15:51:13.468"></status>
</kw>
<msg timestamp="20201030 15:51:13.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036780069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036799806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.112" endtime="20201030 15:51:13.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036780069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036799806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.478" endtime="20201030 15:51:13.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.500" endtime="20201030 15:51:13.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.105" endtime="20201030 15:51:13.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.100" endtime="20201030 15:51:13.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:13.520" level="INFO">${PHILIP_RES} = [{'diff': 1.973699999999884e-05}, {'diff': 1.973699999999884e-05}, {'diff': 1.972299999999927e-05}, {'diff': 1.972299999999927e-05}, {'diff': 1.973699999999884e-05}, {'diff': 1.9735999999999365e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:13.511" endtime="20201030 15:51:13.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:13.534" level="INFO">${RESULT} = {'diff': [1.973699999999884e-05, 1.973699999999884e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.973699999999884e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.97089999999997e-05, 1.9805...</msg>
<status status="PASS" starttime="20201030 15:51:13.523" endtime="20201030 15:51:13.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.547" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:13.544" endtime="20201030 15:51:13.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.554" level="INFO">VALUE: [1.973699999999884e-05, 1.973699999999884e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.973699999999884e-05, 1.9735999999999365e-05, 1.972299999999927e-05, 1.97089999999997e-05, 1.9805999999997215e-05, 1.9735999999999365e-05, 1.9722000000006734e-05, 1.9735999999999365e-05, 1.9637999999995437e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9680000000001086e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9722000000006734e-05, 1.9708000000000225e-05, 1.9679999999994147e-05, 1.9721999999999795e-05, 1.9694000000000655e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.963900000000185e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9777999999998075e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.972299999999927e-05]</msg>
<status status="PASS" starttime="20201030 15:51:13.550" endtime="20201030 15:51:13.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.536" endtime="20201030 15:51:13.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:13.571" endtime="20201030 15:51:13.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.565" endtime="20201030 15:51:13.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.562" endtime="20201030 15:51:13.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.052" endtime="20201030 15:51:13.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.051" endtime="20201030 15:51:13.598"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.624" endtime="20201030 15:51:13.636"></status>
</kw>
<msg timestamp="20201030 15:51:13.637" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.621" endtime="20201030 15:51:13.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:13.643" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:13.640" endtime="20201030 15:51:13.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.646" endtime="20201030 15:51:13.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.612" endtime="20201030 15:51:13.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.606" endtime="20201030 15:51:13.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:13.669" endtime="20201030 15:51:14.012"></status>
</kw>
<msg timestamp="20201030 15:51:14.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043892972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043919278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:13.666" endtime="20201030 15:51:14.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043892972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043919278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.022" endtime="20201030 15:51:14.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.042" endtime="20201030 15:51:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.659" endtime="20201030 15:51:14.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.654" endtime="20201030 15:51:14.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:14.058" level="INFO">${PHILIP_RES} = [{'diff': 2.6305999999996776e-05}, {'diff': 2.6318999999996873e-05}, {'diff': 2.6305999999996776e-05}, {'diff': 2.6332999999996443e-05}, {'diff': 2.6263999999998067e-05}, {'diff': 2.6291999999997206e-...</msg>
<status status="PASS" starttime="20201030 15:51:14.050" endtime="20201030 15:51:14.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.068" level="INFO">${RESULT} = {'diff': [2.6305999999996776e-05, 2.6318999999996873e-05, 2.6305999999996776e-05, 2.6332999999996443e-05, 2.6263999999998067e-05, 2.6291999999997206e-05, 2.6318999999996873e-05, 2.6304999999997303e-05...</msg>
<status status="PASS" starttime="20201030 15:51:14.060" endtime="20201030 15:51:14.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.078" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:14.076" endtime="20201030 15:51:14.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.084" level="INFO">VALUE: [2.6305999999996776e-05, 2.6318999999996873e-05, 2.6305999999996776e-05, 2.6332999999996443e-05, 2.6263999999998067e-05, 2.6291999999997206e-05, 2.6318999999996873e-05, 2.6304999999997303e-05, 2.6306000000003715e-05, 2.633300000000338e-05, 2.630500000000424e-05, 2.6306000000003715e-05, 2.630500000000424e-05, 2.633300000000338e-05, 2.6320000000003285e-05, 2.630500000000424e-05, 2.6320000000003285e-05, 2.633300000000338e-05, 2.6278000000004575e-05, 2.6334000000002855e-05, 2.6292000000004145e-05, 2.631900000000381e-05, 2.6236000000005866e-05, 2.631900000000381e-05, 2.6305999999996776e-05, 2.6334000000002855e-05, 2.6304999999997303e-05, 2.6291999999997206e-05, 2.6291999999997206e-05, 2.6318999999996873e-05, 2.6305999999996776e-05, 2.6304999999997303e-05, 2.6290999999997733e-05, 2.6291999999997206e-05, 2.6318999999996873e-05, 2.6304999999997303e-05, 2.6319999999996346e-05, 2.6304999999997303e-05, 2.6305999999996776e-05, 2.6291999999997206e-05, 2.6318999999996873e-05, 2.6305999999996776e-05, 2.6305999999996776e-05, 2.6346999999996012e-05, 2.6320000000003285e-05, 2.630500000000424e-05, 2.6292000000004145e-05, 2.6306000000003715e-05, 2.633300000000338e-05, 2.6320000000003285e-05]</msg>
<status status="PASS" starttime="20201030 15:51:14.081" endtime="20201030 15:51:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.069" endtime="20201030 15:51:14.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.097" endtime="20201030 15:51:14.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.092" endtime="20201030 15:51:14.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.090" endtime="20201030 15:51:14.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.601" endtime="20201030 15:51:14.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:13.599" endtime="20201030 15:51:14.122"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.144" endtime="20201030 15:51:14.156"></status>
</kw>
<msg timestamp="20201030 15:51:14.157" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.141" endtime="20201030 15:51:14.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.164" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.160" endtime="20201030 15:51:14.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.166" endtime="20201030 15:51:14.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.134" endtime="20201030 15:51:14.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.128" endtime="20201030 15:51:14.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.191" endtime="20201030 15:51:14.529"></status>
</kw>
<msg timestamp="20201030 15:51:14.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038205069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038238778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.188" endtime="20201030 15:51:14.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038205069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038238778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.539" endtime="20201030 15:51:14.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.558" endtime="20201030 15:51:14.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.181" endtime="20201030 15:51:14.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.176" endtime="20201030 15:51:14.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:14.574" level="INFO">${PHILIP_RES} = [{'diff': 3.370899999999982e-05}, {'diff': 3.36380000000025e-05}, {'diff': 3.368000000000121e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.3638999999995034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:14.567" endtime="20201030 15:51:14.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:14.584" level="INFO">${RESULT} = {'diff': [3.370899999999982e-05, 3.36380000000025e-05, 3.368000000000121e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.3638999999995034e-05, 3.3624999999995464e-05, 3.3652999999994604e-05, 3.36...</msg>
<status status="PASS" starttime="20201030 15:51:14.576" endtime="20201030 15:51:14.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.595" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:14.592" endtime="20201030 15:51:14.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.600" level="INFO">VALUE: [3.370899999999982e-05, 3.36380000000025e-05, 3.368000000000121e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.3638999999995034e-05, 3.3624999999995464e-05, 3.3652999999994604e-05, 3.3666999999994174e-05, 3.3638999999995034e-05, 3.3638999999995034e-05, 3.369500000000025e-05, 3.365200000000207e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.369500000000025e-05, 3.365200000000207e-05, 3.36250000000024e-05, 3.36250000000024e-05, 3.368100000000068e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.366600000000164e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.36380000000025e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.36250000000024e-05, 3.3638999999995034e-05, 3.365199999999513e-05, 3.356999999999666e-05, 3.3652999999994604e-05, 3.3680999999993744e-05, 3.3610999999995894e-05, 3.3624999999995464e-05, 3.363799999999556e-05, 3.3638999999995034e-05, 3.369400000000078e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.36250000000024e-05, 3.373599999999949e-05, 3.365300000000154e-05, 3.359700000000326e-05, 3.365300000000154e-05, 3.365300000000154e-05]</msg>
<status status="PASS" starttime="20201030 15:51:14.597" endtime="20201030 15:51:14.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.586" endtime="20201030 15:51:14.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:14.614" endtime="20201030 15:51:14.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.609" endtime="20201030 15:51:14.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.606" endtime="20201030 15:51:14.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.124" endtime="20201030 15:51:14.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.123" endtime="20201030 15:51:14.640"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.664" endtime="20201030 15:51:14.678"></status>
</kw>
<msg timestamp="20201030 15:51:14.679" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.659" endtime="20201030 15:51:14.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:14.686" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:14.681" endtime="20201030 15:51:14.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.689" endtime="20201030 15:51:14.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.651" endtime="20201030 15:51:14.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.646" endtime="20201030 15:51:14.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:14.717" endtime="20201030 15:51:15.061"></status>
</kw>
<msg timestamp="20201030 15:51:15.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040040556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040082306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:14.714" endtime="20201030 15:51:15.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040040556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040082306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.071" endtime="20201030 15:51:15.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.090" endtime="20201030 15:51:15.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.706" endtime="20201030 15:51:15.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.700" endtime="20201030 15:51:15.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:15.106" level="INFO">${PHILIP_RES} = [{'diff': 4.175000000000012e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.176300000000022e-05}, {'diff': 4.181999999999797e-05}, {'diff': 4.176399999999969e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:15.098" endtime="20201030 15:51:15.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.117" level="INFO">${RESULT} = {'diff': [4.175000000000012e-05, 4.177799999999926e-05, 4.177799999999926e-05, 4.176300000000022e-05, 4.181999999999797e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.17780000000062e-05, 4.17500...</msg>
<status status="PASS" starttime="20201030 15:51:15.108" endtime="20201030 15:51:15.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.128" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:15.125" endtime="20201030 15:51:15.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.133" level="INFO">VALUE: [4.175000000000012e-05, 4.177799999999926e-05, 4.177799999999926e-05, 4.176300000000022e-05, 4.181999999999797e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.17780000000062e-05, 4.175000000000012e-05, 4.182000000000491e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.173600000000055e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.179200000000577e-05, 4.176400000000663e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.179199999999883e-05, 4.179200000000577e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.1847000000004575e-05, 4.176399999999969e-05, 4.172200000000098e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.1790999999999356e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.176399999999969e-05]</msg>
<status status="PASS" starttime="20201030 15:51:15.130" endtime="20201030 15:51:15.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.119" endtime="20201030 15:51:15.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.146" endtime="20201030 15:51:15.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.141" endtime="20201030 15:51:15.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.139" endtime="20201030 15:51:15.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.642" endtime="20201030 15:51:15.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:14.641" endtime="20201030 15:51:15.171"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.193" endtime="20201030 15:51:15.206"></status>
</kw>
<msg timestamp="20201030 15:51:15.208" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.190" endtime="20201030 15:51:15.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.214" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.210" endtime="20201030 15:51:15.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.216" endtime="20201030 15:51:15.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.182" endtime="20201030 15:51:15.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.177" endtime="20201030 15:51:15.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.240" endtime="20201030 15:51:15.592"></status>
</kw>
<msg timestamp="20201030 15:51:15.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038024028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038074667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.237" endtime="20201030 15:51:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038024028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038074667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.601" endtime="20201030 15:51:15.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.620" endtime="20201030 15:51:15.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.229" endtime="20201030 15:51:15.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.225" endtime="20201030 15:51:15.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:15.637" level="INFO">${PHILIP_RES} = [{'diff': 5.063899999999816e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.066600000000476e-05}, {'diff': 5.0651999999998254e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.062499999999859e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:15.629" endtime="20201030 15:51:15.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:15.648" level="INFO">${RESULT} = {'diff': [5.063899999999816e-05, 5.063899999999816e-05, 5.066600000000476e-05, 5.0651999999998254e-05, 5.063899999999816e-05, 5.062499999999859e-05, 5.0639000000005097e-05, 5.062500000000553e-05, 5.07...</msg>
<status status="PASS" starttime="20201030 15:51:15.639" endtime="20201030 15:51:15.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.659" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:15.657" endtime="20201030 15:51:15.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.665" level="INFO">VALUE: [5.063899999999816e-05, 5.063899999999816e-05, 5.066600000000476e-05, 5.0651999999998254e-05, 5.063899999999816e-05, 5.062499999999859e-05, 5.0639000000005097e-05, 5.062500000000553e-05, 5.0709000000002946e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.0681000000003806e-05, 5.0653000000004667e-05, 5.063899999999816e-05, 5.059699999999945e-05, 5.062499999999859e-05, 5.0639000000005097e-05, 5.0639000000005097e-05, 5.065299999999773e-05, 5.056999999999978e-05, 5.065299999999773e-05, 5.065200000000519e-05, 5.0679999999997394e-05, 5.0651999999998254e-05, 5.0637999999998684e-05, 5.059699999999945e-05, 5.063899999999816e-05, 5.063899999999816e-05, 5.06669999999973e-05, 5.065299999999773e-05, 5.062500000000553e-05, 5.0653000000004667e-05, 5.063899999999816e-05, 5.06669999999973e-05, 5.063899999999816e-05, 5.061099999999902e-05, 5.065299999999773e-05, 5.065299999999773e-05, 5.062499999999859e-05, 5.070800000000347e-05, 5.062500000000553e-05, 5.0651999999998254e-05, 5.063899999999816e-05, 5.0651999999998254e-05, 5.0639000000005097e-05, 5.0653000000004667e-05, 5.065299999999773e-05, 5.06669999999973e-05, 5.058299999999988e-05, 5.0695000000003376e-05]</msg>
<status status="PASS" starttime="20201030 15:51:15.661" endtime="20201030 15:51:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.650" endtime="20201030 15:51:15.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:15.677" endtime="20201030 15:51:15.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.673" endtime="20201030 15:51:15.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.670" endtime="20201030 15:51:15.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.173" endtime="20201030 15:51:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.172" endtime="20201030 15:51:15.702"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.725" endtime="20201030 15:51:15.740"></status>
</kw>
<msg timestamp="20201030 15:51:15.741" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.721" endtime="20201030 15:51:15.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:15.748" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:15.744" endtime="20201030 15:51:15.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.750" endtime="20201030 15:51:15.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.714" endtime="20201030 15:51:15.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.709" endtime="20201030 15:51:15.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:15.774" endtime="20201030 15:51:16.129"></status>
</kw>
<msg timestamp="20201030 15:51:16.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039562264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:15.771" endtime="20201030 15:51:16.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039562264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039622528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.138" endtime="20201030 15:51:16.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.158" endtime="20201030 15:51:16.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.763" endtime="20201030 15:51:16.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.758" endtime="20201030 15:51:16.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:16.174" level="INFO">${PHILIP_RES} = [{'diff': 6.0263999999997375e-05}, {'diff': 6.033300000000269e-05}, {'diff': 6.0263999999997375e-05}, {'diff': 6.0291999999996515e-05}, {'diff': 6.0278000000003884e-05}, {'diff': 6.0291999999996515e-0...</msg>
<status status="PASS" starttime="20201030 15:51:16.166" endtime="20201030 15:51:16.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.183" level="INFO">${RESULT} = {'diff': [6.0263999999997375e-05, 6.033300000000269e-05, 6.0263999999997375e-05, 6.0291999999996515e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.0263999999997375e-05, 6.030500000000355e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:16.176" endtime="20201030 15:51:16.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.194" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:16.192" endtime="20201030 15:51:16.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.200" level="INFO">VALUE: [6.0263999999997375e-05, 6.033300000000269e-05, 6.0263999999997375e-05, 6.0291999999996515e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.0263999999997375e-05, 6.030500000000355e-05, 6.0263999999997375e-05, 6.0292000000003454e-05, 6.0263999999997375e-05, 6.0333999999995225e-05, 6.036100000000183e-05, 6.030499999999661e-05, 6.0278000000003884e-05, 6.027699999999747e-05, 6.033299999999575e-05, 6.0264000000004314e-05, 6.0277999999996945e-05, 6.029100000000398e-05, 6.034700000000226e-05, 6.030499999999661e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 6.0333999999995225e-05, 6.031900000000312e-05, 6.029099999999704e-05, 6.027699999999747e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.0292000000003454e-05, 6.0291999999996515e-05, 6.0263999999997375e-05, 6.030500000000355e-05, 6.0277999999996945e-05, 6.0292000000003454e-05, 6.0291999999996515e-05, 6.0291999999996515e-05, 6.0264000000004314e-05, 6.027699999999747e-05, 6.0278000000003884e-05, 6.0292000000003454e-05, 6.029099999999704e-05, 6.0221999999998665e-05, 6.0263999999997375e-05, 6.0319999999995655e-05, 6.029100000000398e-05, 6.0263999999997375e-05, 6.0278000000003884e-05, 6.0263999999997375e-05]</msg>
<status status="PASS" starttime="20201030 15:51:16.197" endtime="20201030 15:51:16.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.185" endtime="20201030 15:51:16.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.212" endtime="20201030 15:51:16.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.208" endtime="20201030 15:51:16.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.206" endtime="20201030 15:51:16.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.704" endtime="20201030 15:51:16.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:15.703" endtime="20201030 15:51:16.238"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.266" endtime="20201030 15:51:16.285"></status>
</kw>
<msg timestamp="20201030 15:51:16.287" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.258" endtime="20201030 15:51:16.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.299" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.289" endtime="20201030 15:51:16.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.301" endtime="20201030 15:51:16.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.249" endtime="20201030 15:51:16.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.244" endtime="20201030 15:51:16.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.330" endtime="20201030 15:51:16.662"></status>
</kw>
<msg timestamp="20201030 15:51:16.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044775694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:16.327" endtime="20201030 15:51:16.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044775694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:16.671" endtime="20201030 15:51:16.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.690" endtime="20201030 15:51:16.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.320" endtime="20201030 15:51:16.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.315" endtime="20201030 15:51:16.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:16.705" level="INFO">${PHILIP_RES} = [{'diff': 7.069399999999615e-05}, {'diff': 7.069500000000256e-05}, {'diff': 7.068099999999605e-05}, {'diff': 7.068000000000352e-05}, {'diff': 7.063899999999734e-05}, {'diff': 7.070799999999572e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:16.698" endtime="20201030 15:51:16.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:16.715" level="INFO">${RESULT} = {'diff': [7.069399999999615e-05, 7.069500000000256e-05, 7.068099999999605e-05, 7.068000000000352e-05, 7.063899999999734e-05, 7.070799999999572e-05, 7.066700000000342e-05, 7.066599999999701e-05, 7.0681...</msg>
<status status="PASS" starttime="20201030 15:51:16.707" endtime="20201030 15:51:16.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.725" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:16.723" endtime="20201030 15:51:16.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.730" level="INFO">VALUE: [7.069399999999615e-05, 7.069500000000256e-05, 7.068099999999605e-05, 7.068000000000352e-05, 7.063899999999734e-05, 7.070799999999572e-05, 7.066700000000342e-05, 7.066599999999701e-05, 7.068100000000299e-05, 7.069500000000256e-05, 7.067999999999658e-05, 7.069400000000309e-05, 7.070799999999572e-05, 7.069500000000256e-05, 7.068000000000352e-05, 7.063899999999734e-05, 7.066700000000342e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.066700000000342e-05, 7.068099999999605e-05, 7.070900000000213e-05, 7.068000000000352e-05, 7.069399999999615e-05, 7.066700000000342e-05, 7.059699999999863e-05, 7.069400000000309e-05, 7.069400000000309e-05, 7.068099999999605e-05, 7.075000000000137e-05, 7.066599999999701e-05, 7.075000000000137e-05, 7.069500000000256e-05, 7.067999999999658e-05, 7.070800000000266e-05, 7.069499999999562e-05, 7.068099999999605e-05, 7.069400000000309e-05, 7.070799999999572e-05, 7.063900000000428e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.062499999999777e-05, 7.069499999999562e-05, 7.066600000000395e-05, 7.069399999999615e-05, 7.069399999999615e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.070800000000266e-05]</msg>
<status status="PASS" starttime="20201030 15:51:16.727" endtime="20201030 15:51:16.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.716" endtime="20201030 15:51:16.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:16.744" endtime="20201030 15:51:16.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.738" endtime="20201030 15:51:16.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.736" endtime="20201030 15:51:16.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.240" endtime="20201030 15:51:16.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.239" endtime="20201030 15:51:16.769"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.790" endtime="20201030 15:51:16.804"></status>
</kw>
<msg timestamp="20201030 15:51:16.806" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.787" endtime="20201030 15:51:16.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:16.812" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:16.808" endtime="20201030 15:51:16.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.814" endtime="20201030 15:51:16.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.780" endtime="20201030 15:51:16.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.775" endtime="20201030 15:51:16.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:16.837" endtime="20201030 15:51:17.170"></status>
</kw>
<msg timestamp="20201030 15:51:17.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036688139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036770014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:16.834" endtime="20201030 15:51:17.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036688139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036770014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.179" endtime="20201030 15:51:17.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.198" endtime="20201030 15:51:17.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.827" endtime="20201030 15:51:17.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.822" endtime="20201030 15:51:17.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:17.214" level="INFO">${PHILIP_RES} = [{'diff': 8.187499999999515e-05}, {'diff': 8.187500000000208e-05}, {'diff': 8.182000000000328e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.184700000000295e-05}, {'diff': 8.186100000000252e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:17.206" endtime="20201030 15:51:17.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.225" level="INFO">${RESULT} = {'diff': [8.187499999999515e-05, 8.187500000000208e-05, 8.182000000000328e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.1846999999996e-05, 8.183299...</msg>
<status status="PASS" starttime="20201030 15:51:17.216" endtime="20201030 15:51:17.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.235" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:17.233" endtime="20201030 15:51:17.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.240" level="INFO">VALUE: [8.187499999999515e-05, 8.187500000000208e-05, 8.182000000000328e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.1846999999996e-05, 8.183299999999644e-05, 8.187499999999515e-05, 8.187500000000208e-05, 8.188900000000165e-05, 8.179200000000414e-05, 8.186100000000252e-05, 8.187500000000208e-05, 8.181999999999634e-05, 8.1846999999996e-05, 8.186099999999558e-05, 8.184799999999548e-05, 8.187500000000208e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.186200000000199e-05, 8.181999999999634e-05, 8.1846999999996e-05, 8.1846999999996e-05, 8.184799999999548e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.183400000000285e-05, 8.184700000000295e-05, 8.18049999999973e-05, 8.186099999999558e-05, 8.181999999999634e-05, 8.1846999999996e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.183400000000285e-05, 8.190200000000175e-05, 8.184700000000295e-05, 8.184700000000295e-05, 8.183399999999591e-05, 8.187499999999515e-05, 8.187499999999515e-05, 8.184700000000295e-05, 8.184800000000242e-05, 8.180600000000371e-05, 8.186100000000252e-05, 8.186100000000252e-05]</msg>
<status status="PASS" starttime="20201030 15:51:17.237" endtime="20201030 15:51:17.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.226" endtime="20201030 15:51:17.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.253" endtime="20201030 15:51:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.248" endtime="20201030 15:51:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.246" endtime="20201030 15:51:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.771" endtime="20201030 15:51:17.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:16.770" endtime="20201030 15:51:17.277"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.299" endtime="20201030 15:51:17.314"></status>
</kw>
<msg timestamp="20201030 15:51:17.315" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.295" endtime="20201030 15:51:17.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.321" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.317" endtime="20201030 15:51:17.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.323" endtime="20201030 15:51:17.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.288" endtime="20201030 15:51:17.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.283" endtime="20201030 15:51:17.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.346" endtime="20201030 15:51:17.678"></status>
</kw>
<msg timestamp="20201030 15:51:17.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036673944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036767736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.343" endtime="20201030 15:51:17.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036673944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036767736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:17.688" endtime="20201030 15:51:17.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.706" endtime="20201030 15:51:17.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.336" endtime="20201030 15:51:17.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.331" endtime="20201030 15:51:17.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:17.722" level="INFO">${PHILIP_RES} = [{'diff': 9.379200000000226e-05}, {'diff': 9.376399999999618e-05}, {'diff': 9.376399999999618e-05}, {'diff': 9.379100000000279e-05}, {'diff': 9.380600000000183e-05}, {'diff': 9.38200000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:17.715" endtime="20201030 15:51:17.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:17.733" level="INFO">${RESULT} = {'diff': [9.379200000000226e-05, 9.376399999999618e-05, 9.376399999999618e-05, 9.379100000000279e-05, 9.380600000000183e-05, 9.38200000000014e-05, 9.379199999999532e-05, 9.377799999999575e-05, 9.37780...</msg>
<status status="PASS" starttime="20201030 15:51:17.724" endtime="20201030 15:51:17.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.744" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:17.741" endtime="20201030 15:51:17.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.749" level="INFO">VALUE: [9.379200000000226e-05, 9.376399999999618e-05, 9.376399999999618e-05, 9.379100000000279e-05, 9.380600000000183e-05, 9.38200000000014e-05, 9.379199999999532e-05, 9.377799999999575e-05, 9.377800000000269e-05, 9.379100000000279e-05, 9.377699999999628e-05, 9.380499999999542e-05, 9.38330000000015e-05, 9.379200000000226e-05, 9.377800000000269e-05, 9.384800000000054e-05, 9.383399999999403e-05, 9.377700000000322e-05, 9.380500000000236e-05, 9.380500000000236e-05, 9.379199999999532e-05, 9.376399999999618e-05, 9.376400000000312e-05, 9.379200000000226e-05, 9.377799999999575e-05, 9.381899999999499e-05, 9.387500000000021e-05, 9.375000000000355e-05, 9.376400000000312e-05, 9.38059999999949e-05, 9.380600000000183e-05, 9.37079999999979e-05, 9.377800000000269e-05, 9.383400000000097e-05, 9.376399999999618e-05, 9.380500000000236e-05, 9.377800000000269e-05, 9.377800000000269e-05, 9.379199999999532e-05, 9.379199999999532e-05, 9.379100000000279e-05, 9.376300000000365e-05, 9.377800000000269e-05, 9.38059999999949e-05, 9.379200000000226e-05, 9.377800000000269e-05, 9.377800000000269e-05, 9.377799999999575e-05, 9.377699999999628e-05, 9.379100000000279e-05]</msg>
<status status="PASS" starttime="20201030 15:51:17.746" endtime="20201030 15:51:17.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.735" endtime="20201030 15:51:17.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:17.768" endtime="20201030 15:51:17.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.763" endtime="20201030 15:51:17.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.761" endtime="20201030 15:51:17.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.279" endtime="20201030 15:51:17.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.278" endtime="20201030 15:51:17.793"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.814" endtime="20201030 15:51:17.831"></status>
</kw>
<msg timestamp="20201030 15:51:17.832" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.811" endtime="20201030 15:51:17.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:17.838" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:17.834" endtime="20201030 15:51:17.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.840" endtime="20201030 15:51:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.804" endtime="20201030 15:51:17.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.798" endtime="20201030 15:51:17.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:17.863" endtime="20201030 15:51:18.208"></status>
</kw>
<msg timestamp="20201030 15:51:18.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036765014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0368715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:17.860" endtime="20201030 15:51:18.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036765014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0368715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:18.217" endtime="20201030 15:51:18.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.236" endtime="20201030 15:51:18.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.853" endtime="20201030 15:51:18.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.848" endtime="20201030 15:51:18.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:18.252" level="INFO">${PHILIP_RES} = [{'diff': 0.00010648600000000286}, {'diff': 0.00010648599999999592}, {'diff': 0.00010648600000000286}, {'diff': 0.00010648600000000286}, {'diff': 0.00010647299999999582}, {'diff': 0.000106486000000002...</msg>
<status status="PASS" starttime="20201030 15:51:18.244" endtime="20201030 15:51:18.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.261" level="INFO">${RESULT} = {'diff': [0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010648600000000286, 0.00010647299999999582, 0.00010648600000000286, 0.00010647199999999635, 0.00010650000000000243...</msg>
<status status="PASS" starttime="20201030 15:51:18.254" endtime="20201030 15:51:18.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.271" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:18.269" endtime="20201030 15:51:18.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.276" level="INFO">VALUE: [0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010648600000000286, 0.00010647299999999582, 0.00010648600000000286, 0.00010647199999999635, 0.00010650000000000243, 0.00010648600000000286, 0.00010647199999999635, 0.00010645800000000372, 0.00010647199999999635, 0.00010647300000000276, 0.00010648600000000286, 0.00010648699999999539, 0.00010650000000000243, 0.00010652800000000157, 0.00010645799999999678, 0.00010640299999999797, 0.00010648599999999592, 0.00010648600000000286, 0.00010647199999999635, 0.00010647300000000276, 0.00010648700000000233, 0.00010649999999999549, 0.00010648600000000286, 0.00010648600000000286, 0.00010642999999999764, 0.00010647200000000329, 0.00010647199999999635, 0.00010647200000000329, 0.00010652800000000157, 0.00010645899999999625, 0.00010647300000000276, 0.00010644399999999721, 0.00010648600000000286, 0.00010650000000000243, 0.00010645799999999678, 0.00010647200000000329, 0.00010649999999999549, 0.00010648600000000286, 0.00010648600000000286, 0.00010649999999999549, 0.00010647200000000329, 0.00010647199999999635, 0.00010648600000000286, 0.0001065560000000007, 0.00010647199999999635, 0.00010641700000000448, 0.00010647199999999635]</msg>
<status status="PASS" starttime="20201030 15:51:18.273" endtime="20201030 15:51:18.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.262" endtime="20201030 15:51:18.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.289" endtime="20201030 15:51:18.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.284" endtime="20201030 15:51:18.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.282" endtime="20201030 15:51:18.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.794" endtime="20201030 15:51:18.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:17.793" endtime="20201030 15:51:18.314"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.335" endtime="20201030 15:51:18.353"></status>
</kw>
<msg timestamp="20201030 15:51:18.354" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.332" endtime="20201030 15:51:18.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.361" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.357" endtime="20201030 15:51:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.363" endtime="20201030 15:51:18.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.325" endtime="20201030 15:51:18.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.320" endtime="20201030 15:51:18.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.388" endtime="20201030 15:51:18.723"></status>
</kw>
<msg timestamp="20201030 15:51:18.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036872083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036992028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.384" endtime="20201030 15:51:18.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036872083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036992028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.732" endtime="20201030 15:51:18.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.753" endtime="20201030 15:51:18.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.377" endtime="20201030 15:51:18.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.372" endtime="20201030 15:51:18.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:18.769" level="INFO">${PHILIP_RES} = [{'diff': 0.00011994500000000324}, {'diff': 0.00011994400000000377}, {'diff': 0.00011995900000000281}, {'diff': 0.0001199579999999964}, {'diff': 0.00011993099999999673}, {'diff': 0.0001199309999999967...</msg>
<status status="PASS" starttime="20201030 15:51:18.761" endtime="20201030 15:51:18.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:18.778" level="INFO">${RESULT} = {'diff': [0.00011994500000000324, 0.00011994400000000377, 0.00011995900000000281, 0.0001199579999999964, 0.00011993099999999673, 0.00011993099999999673, 0.00011997199999999597, 0.0001199449999999963, ...</msg>
<status status="PASS" starttime="20201030 15:51:18.771" endtime="20201030 15:51:18.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.788" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:18.786" endtime="20201030 15:51:18.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.793" level="INFO">VALUE: [0.00011994500000000324, 0.00011994400000000377, 0.00011995900000000281, 0.0001199579999999964, 0.00011993099999999673, 0.00011993099999999673, 0.00011997199999999597, 0.0001199449999999963, 0.0001199579999999964, 0.0001199449999999963, 0.00011987499999999846, 0.0001199449999999963, 0.00011990199999999812, 0.00011993100000000367, 0.0001199300000000042, 0.00011986099999999889, 0.00011995800000000334, 0.00011995800000000334, 0.00011993100000000367, 0.0001199300000000042, 0.00011993100000000367, 0.0001199300000000042, 0.00011997300000000238, 0.00011994400000000377, 0.00011993099999999673, 0.00011991599999999769, 0.0001199579999999964, 0.0001199449999999963, 0.00012001400000000162, 0.0001199449999999963, 0.0001199579999999964, 0.0001199449999999963, 0.00011994399999999683, 0.00011995899999999587, 0.00011994399999999683, 0.00011995900000000281, 0.00011998600000000248, 0.00011993100000000367, 0.00011995800000000334, 0.0001199170000000041, 0.00011990300000000453, 0.00011990300000000453, 0.00011997300000000238, 0.00011994400000000377, 0.00011995900000000281, 0.00011992999999999726, 0.00011994399999999683, 0.0001199449999999963, 0.00011992999999999726, 0.00011994399999999683]</msg>
<status status="PASS" starttime="20201030 15:51:18.791" endtime="20201030 15:51:18.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.780" endtime="20201030 15:51:18.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:18.807" endtime="20201030 15:51:18.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.802" endtime="20201030 15:51:18.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.799" endtime="20201030 15:51:18.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.316" endtime="20201030 15:51:18.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.315" endtime="20201030 15:51:18.832"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.854" endtime="20201030 15:51:18.871"></status>
</kw>
<msg timestamp="20201030 15:51:18.873" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.851" endtime="20201030 15:51:18.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:18.879" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:18.875" endtime="20201030 15:51:18.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.881" endtime="20201030 15:51:18.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.843" endtime="20201030 15:51:18.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.838" endtime="20201030 15:51:18.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:18.904" endtime="20201030 15:51:19.238"></status>
</kw>
<msg timestamp="20201030 15:51:19.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037100292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037234472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:18.901" endtime="20201030 15:51:19.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037100292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037234472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.247" endtime="20201030 15:51:19.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.265" endtime="20201030 15:51:19.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.894" endtime="20201030 15:51:19.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.889" endtime="20201030 15:51:19.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:19.281" level="INFO">${PHILIP_RES} = [{'diff': 0.00013417999999999763}, {'diff': 0.00013423600000000285}, {'diff': 0.00013420799999999677}, {'diff': 0.00013416700000000448}, {'diff': 0.00013415299999999797}, {'diff': 0.000134167000000004...</msg>
<status status="PASS" starttime="20201030 15:51:19.274" endtime="20201030 15:51:19.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.291" level="INFO">${RESULT} = {'diff': [0.00013417999999999763, 0.00013423600000000285, 0.00013420799999999677, 0.00013416700000000448, 0.00013415299999999797, 0.00013416700000000448, 0.00013415299999999797, 0.00013423600000000285...</msg>
<status status="PASS" starttime="20201030 15:51:19.283" endtime="20201030 15:51:19.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.302" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:19.300" endtime="20201030 15:51:19.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.307" level="INFO">VALUE: [0.00013417999999999763, 0.00013423600000000285, 0.00013420799999999677, 0.00013416700000000448, 0.00013415299999999797, 0.00013416700000000448, 0.00013415299999999797, 0.00013423600000000285, 0.00013420899999999625, 0.00013416699999999754, 0.00013412499999999883, 0.00013416599999999806, 0.00013416599999999806, 0.0001341519999999985, 0.0001341530000000049, 0.0001341809999999971, 0.00013413900000000534, 0.0001341809999999971, 0.00013425000000000242, 0.00013416699999999754, 0.00013416699999999754, 0.00013416599999999806, 0.0001341519999999985, 0.00013416599999999806, 0.00013417999999999763, 0.00013416700000000448, 0.00013416699999999754, 0.00013418100000000405, 0.0001341809999999971, 0.00013418100000000405, 0.00013412499999999883, 0.00013418100000000405, 0.00013416599999999806, 0.00013413900000000534, 0.0001341389999999984, 0.00013416599999999806, 0.00013417999999999763, 0.00013416699999999754, 0.00013409799999999916, 0.00013416699999999754, 0.00013416700000000448, 0.00013411099999999926, 0.00013413900000000534, 0.00013415299999999797, 0.000134166000000005, 0.00013411099999999926, 0.00013418000000000457, 0.00013415299999999797, 0.00013416699999999754, 0.00013416699999999754]</msg>
<status status="PASS" starttime="20201030 15:51:19.304" endtime="20201030 15:51:19.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.293" endtime="20201030 15:51:19.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.320" endtime="20201030 15:51:19.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.315" endtime="20201030 15:51:19.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.313" endtime="20201030 15:51:19.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.834" endtime="20201030 15:51:19.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:18.833" endtime="20201030 15:51:19.344"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.366" endtime="20201030 15:51:19.385"></status>
</kw>
<msg timestamp="20201030 15:51:19.386" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.363" endtime="20201030 15:51:19.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.392" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.388" endtime="20201030 15:51:19.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.394" endtime="20201030 15:51:19.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.356" endtime="20201030 15:51:19.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.351" endtime="20201030 15:51:19.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.417" endtime="20201030 15:51:19.751"></status>
</kw>
<msg timestamp="20201030 15:51:19.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037020736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.414" endtime="20201030 15:51:19.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036871528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037020736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.760" endtime="20201030 15:51:19.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.778" endtime="20201030 15:51:19.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.407" endtime="20201030 15:51:19.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.402" endtime="20201030 15:51:19.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:19.794" level="INFO">${PHILIP_RES} = [{'diff': 0.0001492079999999979}, {'diff': 0.0001491529999999991}, {'diff': 0.00014916699999999866}, {'diff': 0.0001491949999999978}, {'diff': 0.00014916699999999866}, {'diff': 0.00014915300000000603}...</msg>
<status status="PASS" starttime="20201030 15:51:19.786" endtime="20201030 15:51:19.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:19.805" level="INFO">${RESULT} = {'diff': [0.0001492079999999979, 0.0001491529999999991, 0.00014916699999999866, 0.0001491949999999978, 0.00014916699999999866, 0.00014915300000000603, 0.0001491529999999991, 0.0001491529999999991, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:19.796" endtime="20201030 15:51:19.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.815" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:19.813" endtime="20201030 15:51:19.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.820" level="INFO">VALUE: [0.0001492079999999979, 0.0001491529999999991, 0.00014916699999999866, 0.0001491949999999978, 0.00014916699999999866, 0.00014915300000000603, 0.0001491529999999991, 0.0001491529999999991, 0.0001491529999999991, 0.00014913899999999952, 0.00014913899999999952, 0.00014908300000000124, 0.00014911100000000038, 0.00014913899999999952, 0.00014913899999999952, 0.0001491659999999992, 0.00014913900000000646, 0.00014915199999999962, 0.00014916699999999866, 0.0001491659999999992, 0.0001491529999999991, 0.00014915199999999962, 0.0001491529999999991, 0.0001491659999999992, 0.00014922299999999694, 0.00014915199999999962, 0.0001491529999999991, 0.00014911100000000038, 0.00014919500000000474, 0.00014912499999999995, 0.0001491529999999991, 0.00014913899999999952, 0.00014916699999999866, 0.0001613889999999979, 0.0001491529999999991, 0.00014915199999999962, 0.0001491529999999991, 0.00014915199999999962, 0.00014915300000000603, 0.00014915199999999962, 0.00014912499999999995, 0.00014915199999999962, 0.00014913899999999952, 0.0001491659999999992, 0.00014913899999999952, 0.00014922199999999747, 0.0001491529999999991, 0.0001491529999999991, 0.0001491670000000056, 0.0001491670000000056]</msg>
<status status="PASS" starttime="20201030 15:51:19.817" endtime="20201030 15:51:19.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.806" endtime="20201030 15:51:19.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:19.833" endtime="20201030 15:51:19.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.829" endtime="20201030 15:51:19.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.826" endtime="20201030 15:51:19.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.347" endtime="20201030 15:51:19.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.345" endtime="20201030 15:51:19.858"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.879" endtime="20201030 15:51:19.899"></status>
</kw>
<msg timestamp="20201030 15:51:19.900" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.876" endtime="20201030 15:51:19.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:19.906" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:19.902" endtime="20201030 15:51:19.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.909" endtime="20201030 15:51:19.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.869" endtime="20201030 15:51:19.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.863" endtime="20201030 15:51:19.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:19.932" endtime="20201030 15:51:20.267"></status>
</kw>
<msg timestamp="20201030 15:51:20.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036793639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036958569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:19.928" endtime="20201030 15:51:20.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036793639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036958569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.277" endtime="20201030 15:51:20.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.295" endtime="20201030 15:51:20.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.921" endtime="20201030 15:51:20.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.917" endtime="20201030 15:51:20.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:20.311" level="INFO">${PHILIP_RES} = [{'diff': 0.0001649299999999937}, {'diff': 0.00016491600000000106}, {'diff': 0.00016495799999999977}, {'diff': 0.00016491700000000054}, {'diff': 0.00016491700000000054}, {'diff': 0.0001649030000000009...</msg>
<status status="PASS" starttime="20201030 15:51:20.303" endtime="20201030 15:51:20.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.320" level="INFO">${RESULT} = {'diff': [0.0001649299999999937, 0.00016491600000000106, 0.00016495799999999977, 0.00016491700000000054, 0.00016491700000000054, 0.00016490300000000097, 0.00016493000000000063, 0.00016491600000000106,...</msg>
<status status="PASS" starttime="20201030 15:51:20.313" endtime="20201030 15:51:20.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.330" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:20.328" endtime="20201030 15:51:20.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.335" level="INFO">VALUE: [0.0001649299999999937, 0.00016491600000000106, 0.00016495799999999977, 0.00016491700000000054, 0.00016491700000000054, 0.00016490300000000097, 0.00016493000000000063, 0.00016491600000000106, 0.00016491600000000106, 0.0001649310000000001, 0.00016491700000000054, 0.00016491700000000054, 0.0001648890000000014, 0.0001648749999999949, 0.00016493000000000063, 0.00016490300000000097, 0.00016491700000000054, 0.00016491700000000054, 0.00016486100000000226, 0.00016490300000000097, 0.00016488799999999498, 0.00016490300000000097, 0.00016491700000000054, 0.00016488899999999446, 0.00016490300000000097, 0.00016495799999999977, 0.00016491599999999412, 0.0001649859999999989, 0.00016491700000000054, 0.00016491700000000054, 0.00016491700000000054, 0.00016491700000000054, 0.00016491600000000106, 0.00016491600000000106, 0.00016490300000000097, 0.00016491700000000054, 0.00016494499999999968, 0.00016491700000000054, 0.00016493000000000063, 0.00016490199999999455, 0.0001648890000000014, 0.00016490300000000097, 0.00016491700000000054, 0.00016490300000000097, 0.0001648890000000014, 0.00016491600000000106, 0.0001648749999999949, 0.00016487500000000183, 0.00016491700000000054, 0.00016488899999999446]</msg>
<status status="PASS" starttime="20201030 15:51:20.332" endtime="20201030 15:51:20.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.321" endtime="20201030 15:51:20.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.348" endtime="20201030 15:51:20.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.343" endtime="20201030 15:51:20.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.341" endtime="20201030 15:51:20.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.860" endtime="20201030 15:51:20.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:19.858" endtime="20201030 15:51:20.373"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.394" endtime="20201030 15:51:20.414"></status>
</kw>
<msg timestamp="20201030 15:51:20.415" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.391" endtime="20201030 15:51:20.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.421" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.417" endtime="20201030 15:51:20.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.423" endtime="20201030 15:51:20.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.384" endtime="20201030 15:51:20.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.379" endtime="20201030 15:51:20.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.455" endtime="20201030 15:51:20.793"></status>
</kw>
<msg timestamp="20201030 15:51:20.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036754764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036936278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.450" endtime="20201030 15:51:20.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036754764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036936278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.802" endtime="20201030 15:51:20.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.820" endtime="20201030 15:51:20.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.440" endtime="20201030 15:51:20.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.434" endtime="20201030 15:51:20.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:20.836" level="INFO">${PHILIP_RES} = [{'diff': 0.00018151400000000067}, {'diff': 0.00018141700000000316}, {'diff': 0.00018144400000000283}, {'diff': 0.0001814309999999958}, {'diff': 0.00018147200000000197}, {'diff': 0.0001814720000000019...</msg>
<status status="PASS" starttime="20201030 15:51:20.829" endtime="20201030 15:51:20.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:20.845" level="INFO">${RESULT} = {'diff': [0.00018151400000000067, 0.00018141700000000316, 0.00018144400000000283, 0.0001814309999999958, 0.00018147200000000197, 0.00018147200000000197, 0.00018141699999999622, 0.0001814450000000023, ...</msg>
<status status="PASS" starttime="20201030 15:51:20.838" endtime="20201030 15:51:20.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.855" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:20.853" endtime="20201030 15:51:20.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.861" level="INFO">VALUE: [0.00018151400000000067, 0.00018141700000000316, 0.00018144400000000283, 0.0001814309999999958, 0.00018147200000000197, 0.00018147200000000197, 0.00018141699999999622, 0.0001814450000000023, 0.00018140299999999665, 0.00018143100000000273, 0.00018143100000000273, 0.00018141699999999622, 0.00018143100000000273, 0.00018141700000000316, 0.00018145799999999546, 0.00018134699999999837, 0.00018143000000000326, 0.00018142999999999632, 0.00018140200000000412, 0.00018147200000000197, 0.00018141599999999675, 0.0001814580000000024, 0.00018141699999999622, 0.00018144399999999589, 0.0001814030000000036, 0.00018141699999999622, 0.00018141699999999622, 0.00018147200000000197, 0.00018141699999999622, 0.00018142999999999632, 0.00018141700000000316, 0.0001814309999999958, 0.0001814030000000036, 0.00018147300000000144, 0.00018141699999999622, 0.00018141700000000316, 0.00018143000000000326, 0.0001815000000000011, 0.0001815000000000011, 0.00018138899999999708, 0.00018140199999999718, 0.00018143000000000326, 0.00018140199999999718, 0.00018147199999999503, 0.00018144400000000283, 0.00018144399999999589, 0.00018141700000000316, 0.00018138900000000402, 0.0001814309999999958, 0.00018147200000000197]</msg>
<status status="PASS" starttime="20201030 15:51:20.858" endtime="20201030 15:51:20.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.847" endtime="20201030 15:51:20.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:20.874" endtime="20201030 15:51:20.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.869" endtime="20201030 15:51:20.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.866" endtime="20201030 15:51:20.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.375" endtime="20201030 15:51:20.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.374" endtime="20201030 15:51:20.899"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.921" endtime="20201030 15:51:20.942"></status>
</kw>
<msg timestamp="20201030 15:51:20.943" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.917" endtime="20201030 15:51:20.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.949" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:20.945" endtime="20201030 15:51:20.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.951" endtime="20201030 15:51:20.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.910" endtime="20201030 15:51:20.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.905" endtime="20201030 15:51:20.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:20.974" endtime="20201030 15:51:21.307"></status>
</kw>
<msg timestamp="20201030 15:51:21.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036522722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036721486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:20.971" endtime="20201030 15:51:21.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036522722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036721486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:21.316" endtime="20201030 15:51:21.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.334" endtime="20201030 15:51:21.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.964" endtime="20201030 15:51:21.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.959" endtime="20201030 15:51:21.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:21.350" level="INFO">${PHILIP_RES} = [{'diff': 0.0001987639999999971}, {'diff': 0.0001987089999999983}, {'diff': 0.00019876299999999764}, {'diff': 0.0001986669999999996}, {'diff': 0.00019869399999999926}, {'diff': 0.0001986799999999997},...</msg>
<status status="PASS" starttime="20201030 15:51:21.343" endtime="20201030 15:51:21.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.365" level="INFO">${RESULT} = {'diff': [0.0001987639999999971, 0.0001987089999999983, 0.00019876299999999764, 0.0001986669999999996, 0.00019869399999999926, 0.0001986799999999997, 0.00019870799999999883, 0.00019862500000000088, 0....</msg>
<status status="PASS" starttime="20201030 15:51:21.352" endtime="20201030 15:51:21.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.375" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:21.373" endtime="20201030 15:51:21.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.380" level="INFO">VALUE: [0.0001987639999999971, 0.0001987089999999983, 0.00019876299999999764, 0.0001986669999999996, 0.00019869399999999926, 0.0001986799999999997, 0.00019870799999999883, 0.00019862500000000088, 0.00019869500000000567, 0.00019866700000000653, 0.00019870799999999883, 0.0001986799999999997, 0.00019870799999999883, 0.00019869399999999926, 0.0001987219999999984, 0.00019869499999999873, 0.00019869499999999873, 0.00019870799999999883, 0.00019863900000000045, 0.0001986799999999997, 0.00019869399999999926, 0.0001987219999999984, 0.00019870900000000524, 0.00019869500000000567, 0.00019872200000000534, 0.00019870800000000577, 0.00019869399999999926, 0.00019870799999999883, 0.0001987089999999983, 0.0001987219999999984, 0.00019868099999999916, 0.00019870799999999883, 0.00019865300000000002, 0.00019870799999999883, 0.00019869399999999926, 0.0001987089999999983, 0.0001987089999999983, 0.00019863900000000045, 0.00019868099999999916, 0.00019863900000000045, 0.00019872200000000534, 0.00019870799999999883, 0.00019869499999999873, 0.0001987089999999983, 0.00019869499999999873, 0.00019868099999999916, 0.00019869399999999926, 0.00019870799999999883, 0.0001986799999999997, 0.0001986799999999997]</msg>
<status status="PASS" starttime="20201030 15:51:21.377" endtime="20201030 15:51:21.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.367" endtime="20201030 15:51:21.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.393" endtime="20201030 15:51:21.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.389" endtime="20201030 15:51:21.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.386" endtime="20201030 15:51:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.901" endtime="20201030 15:51:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.900" endtime="20201030 15:51:21.418"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.439" endtime="20201030 15:51:21.461"></status>
</kw>
<msg timestamp="20201030 15:51:21.462" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.436" endtime="20201030 15:51:21.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.468" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.464" endtime="20201030 15:51:21.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.470" endtime="20201030 15:51:21.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.429" endtime="20201030 15:51:21.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.423" endtime="20201030 15:51:21.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.493" endtime="20201030 15:51:21.827"></status>
</kw>
<msg timestamp="20201030 15:51:21.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03665225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036869014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:21.490" endtime="20201030 15:51:21.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03665225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036869014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:21.836" endtime="20201030 15:51:21.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.854" endtime="20201030 15:51:21.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.483" endtime="20201030 15:51:21.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.478" endtime="20201030 15:51:21.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:21.870" level="INFO">${PHILIP_RES} = [{'diff': 0.00021676400000000123}, {'diff': 0.00021679200000000037}, {'diff': 0.00021675000000000166}, {'diff': 0.00021675000000000166}, {'diff': 0.0002167360000000021}, {'diff': 0.000216723000000002}...</msg>
<status status="PASS" starttime="20201030 15:51:21.863" endtime="20201030 15:51:21.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:21.881" level="INFO">${RESULT} = {'diff': [0.00021676400000000123, 0.00021679200000000037, 0.00021675000000000166, 0.00021675000000000166, 0.0002167360000000021, 0.000216723000000002, 0.0002166529999999972, 0.00021674999999999472, 0....</msg>
<status status="PASS" starttime="20201030 15:51:21.872" endtime="20201030 15:51:21.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.891" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:21.889" endtime="20201030 15:51:21.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.897" level="INFO">VALUE: [0.00021676400000000123, 0.00021679200000000037, 0.00021675000000000166, 0.00021675000000000166, 0.0002167360000000021, 0.000216723000000002, 0.0002166529999999972, 0.00021674999999999472, 0.00021674999999999472, 0.0002167360000000021, 0.0002167360000000021, 0.00021676400000000123, 0.00021676400000000123, 0.00021672299999999506, 0.0002167360000000021, 0.0002167360000000021, 0.00021675000000000166, 0.00021676400000000123, 0.00021676400000000123, 0.0002167639999999943, 0.00021670800000000295, 0.000216723000000002, 0.00021666700000000372, 0.00021672200000000252, 0.00021675000000000166, 0.00021674999999999472, 0.00021669400000000338, 0.00021672200000000252, 0.00021675000000000166, 0.0002167780000000008, 0.00021673599999999515, 0.00021673599999999515, 0.00021672200000000252, 0.00021675000000000166, 0.00021675000000000166, 0.00021676400000000123, 0.00021669399999999645, 0.00021672299999999506, 0.0002167360000000021, 0.0002167360000000021, 0.00021672200000000252, 0.00021675000000000166, 0.00021675000000000166, 0.00021673599999999515, 0.00021675000000000166, 0.000216723000000002, 0.00021675000000000166, 0.0002167360000000021, 0.00021673599999999515, 0.00021674999999999472]</msg>
<status status="PASS" starttime="20201030 15:51:21.894" endtime="20201030 15:51:21.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.883" endtime="20201030 15:51:21.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.909" endtime="20201030 15:51:21.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.905" endtime="20201030 15:51:21.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.902" endtime="20201030 15:51:21.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.420" endtime="20201030 15:51:21.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.418" endtime="20201030 15:51:21.934"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.955" endtime="20201030 15:51:21.978"></status>
</kw>
<msg timestamp="20201030 15:51:21.979" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.952" endtime="20201030 15:51:21.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.985" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.981" endtime="20201030 15:51:21.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.987" endtime="20201030 15:51:21.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.945" endtime="20201030 15:51:21.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.940" endtime="20201030 15:51:21.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.010" endtime="20201030 15:51:22.344"></status>
</kw>
<msg timestamp="20201030 15:51:22.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036702986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036938528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.007" endtime="20201030 15:51:22.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036702986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036938528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.354" endtime="20201030 15:51:22.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.373" endtime="20201030 15:51:22.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.000" endtime="20201030 15:51:22.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.995" endtime="20201030 15:51:22.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:22.389" level="INFO">${PHILIP_RES} = [{'diff': 0.0002355419999999983}, {'diff': 0.00023554200000000525}, {'diff': 0.00023556999999999745}, {'diff': 0.00023555599999999788}, {'diff': 0.00023555600000000482}, {'diff': 0.0002355559999999978...</msg>
<status status="PASS" starttime="20201030 15:51:22.381" endtime="20201030 15:51:22.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.398" level="INFO">${RESULT} = {'diff': [0.0002355419999999983, 0.00023554200000000525, 0.00023556999999999745, 0.00023555599999999788, 0.00023555600000000482, 0.00023555599999999788, 0.0002355419999999983, 0.00023555600000000482, ...</msg>
<status status="PASS" starttime="20201030 15:51:22.391" endtime="20201030 15:51:22.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.408" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:22.406" endtime="20201030 15:51:22.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.413" level="INFO">VALUE: [0.0002355419999999983, 0.00023554200000000525, 0.00023556999999999745, 0.00023555599999999788, 0.00023555600000000482, 0.00023555599999999788, 0.0002355419999999983, 0.00023555600000000482, 0.00023555599999999788, 0.00023555599999999788, 0.00023555600000000482, 0.00023558399999999702, 0.00023555599999999788, 0.00023559699999999711, 0.00023555599999999788, 0.0002354999999999996, 0.00023556999999999745, 0.00023551399999999917, 0.0002355700000000044, 0.00023555599999999788, 0.00025202800000000136, 0.0002355419999999983, 0.00023552800000000568, 0.0002355419999999983, 0.00023552799999999874, 0.00023555600000000482, 0.00023555599999999788, 0.0002355419999999983, 0.00023555600000000482, 0.00023556999999999745, 0.0002354999999999996, 0.00023558300000000448, 0.00023556999999999745, 0.00023555599999999788, 0.00023555600000000482, 0.00023555599999999788, 0.0002354999999999996, 0.00023555600000000482, 0.00023556999999999745, 0.00023555599999999788, 0.0002354999999999996, 0.00023556899999999797, 0.0002355700000000044, 0.00023548600000000003, 0.0002355419999999983, 0.00023550000000000654, 0.00023552799999999874, 0.0002355419999999983, 0.00023554200000000525, 0.00023559699999999711]</msg>
<status status="PASS" starttime="20201030 15:51:22.410" endtime="20201030 15:51:22.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.399" endtime="20201030 15:51:22.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.426" endtime="20201030 15:51:22.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.421" endtime="20201030 15:51:22.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.419" endtime="20201030 15:51:22.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.936" endtime="20201030 15:51:22.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.934" endtime="20201030 15:51:22.451"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.472" endtime="20201030 15:51:22.498"></status>
</kw>
<msg timestamp="20201030 15:51:22.499" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.469" endtime="20201030 15:51:22.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.505" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.501" endtime="20201030 15:51:22.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.508" endtime="20201030 15:51:22.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.462" endtime="20201030 15:51:22.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.457" endtime="20201030 15:51:22.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.531" endtime="20201030 15:51:22.862"></status>
</kw>
<msg timestamp="20201030 15:51:22.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038487653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038742778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.528" endtime="20201030 15:51:22.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038487653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038742778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:22.871" endtime="20201030 15:51:22.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.890" endtime="20201030 15:51:22.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.520" endtime="20201030 15:51:22.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.516" endtime="20201030 15:51:22.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:22.905" level="INFO">${PHILIP_RES} = [{'diff': 0.0002551250000000019}, {'diff': 0.00025513900000000145}, {'diff': 0.0002551250000000019}, {'diff': 0.0002551250000000019}, {'diff': 0.00025508400000000264}, {'diff': 0.000255138000000002}, ...</msg>
<status status="PASS" starttime="20201030 15:51:22.898" endtime="20201030 15:51:22.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:22.914" level="INFO">${RESULT} = {'diff': [0.0002551250000000019, 0.00025513900000000145, 0.0002551250000000019, 0.0002551250000000019, 0.00025508400000000264, 0.000255138000000002, 0.0002551250000000019, 0.0002551250000000019, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:22.907" endtime="20201030 15:51:22.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.925" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:22.922" endtime="20201030 15:51:22.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.930" level="INFO">VALUE: [0.0002551250000000019, 0.00025513900000000145, 0.0002551250000000019, 0.0002551250000000019, 0.00025508400000000264, 0.000255138000000002, 0.0002551250000000019, 0.0002551250000000019, 0.0002551250000000019, 0.00025512499999999494, 0.0002551250000000019, 0.00025512499999999494, 0.0002551250000000019, 0.00025512499999999494, 0.0002551110000000023, 0.00025512499999999494, 0.000255153000000001, 0.00025512499999999494, 0.0002551250000000019, 0.00025508299999999623, 0.0002551110000000023, 0.0002551250000000019, 0.0002551250000000019, 0.0002551250000000019, 0.0002551110000000023, 0.0002551250000000019, 0.0002550969999999958, 0.0002551250000000019, 0.00025508400000000264, 0.0002551250000000019, 0.00025511099999999537, 0.00025509700000000274, 0.0002550980000000022, 0.0002551250000000019, 0.00025512499999999494, 0.0002550690000000036, 0.00025511099999999537, 0.00025513900000000145, 0.00025513900000000145, 0.000270013999999999, 0.00025513900000000145, 0.0002551660000000011, 0.00025513900000000145, 0.00025513900000000145, 0.00025512499999999494, 0.0002551250000000019, 0.0002551529999999941, 0.0002551110000000023, 0.00025512499999999494, 0.0002551250000000019]</msg>
<status status="PASS" starttime="20201030 15:51:22.927" endtime="20201030 15:51:22.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.916" endtime="20201030 15:51:22.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:22.950" endtime="20201030 15:51:22.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.944" endtime="20201030 15:51:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.942" endtime="20201030 15:51:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.453" endtime="20201030 15:51:22.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.451" endtime="20201030 15:51:22.975"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.997" endtime="20201030 15:51:23.022"></status>
</kw>
<msg timestamp="20201030 15:51:23.023" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.994" endtime="20201030 15:51:23.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.029" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.025" endtime="20201030 15:51:23.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.031" endtime="20201030 15:51:23.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.987" endtime="20201030 15:51:23.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.981" endtime="20201030 15:51:23.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.055" endtime="20201030 15:51:23.391"></status>
</kw>
<msg timestamp="20201030 15:51:23.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037027569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037303028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.051" endtime="20201030 15:51:23.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037027569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037303028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.400" endtime="20201030 15:51:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.418" endtime="20201030 15:51:23.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.044" endtime="20201030 15:51:23.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.040" endtime="20201030 15:51:23.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:23.434" level="INFO">${PHILIP_RES} = [{'diff': 0.00027545899999999873}, {'diff': 0.0002754300000000001}, {'diff': 0.00027544499999999916}, {'diff': 0.000275417}, {'diff': 0.00027545799999999926}, {'diff': 0.00027545899999999873}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:51:23.427" endtime="20201030 15:51:23.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.444" level="INFO">${RESULT} = {'diff': [0.00027545899999999873, 0.0002754300000000001, 0.00027544499999999916, 0.000275417, 0.00027545799999999926, 0.00027545899999999873, 0.00027545799999999926, 0.00027547200000000577, 0.00027545...</msg>
<status status="PASS" starttime="20201030 15:51:23.436" endtime="20201030 15:51:23.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.455" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:23.453" endtime="20201030 15:51:23.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.460" level="INFO">VALUE: [0.00027545899999999873, 0.0002754300000000001, 0.00027544499999999916, 0.000275417, 0.00027545799999999926, 0.00027545899999999873, 0.00027545799999999926, 0.00027547200000000577, 0.00027545799999999926, 0.00027547200000000577, 0.0002754729999999983, 0.00027541600000000055, 0.00027545899999999873, 0.00027547199999999883, 0.0002754439999999997, 0.00027547199999999883, 0.00027547199999999883, 0.00027545899999999873, 0.0002754580000000062, 0.0002754300000000001, 0.0002754450000000061, 0.00027551399999999754, 0.00027544499999999916, 0.0002754439999999997, 0.00027545799999999926, 0.0002755270000000046, 0.00027545799999999926, 0.00027545899999999873, 0.00027547199999999883, 0.00027547199999999883, 0.00027544499999999916, 0.0002754580000000062, 0.0002754729999999983, 0.0002754439999999997, 0.00027547199999999883, 0.00027544499999999916, 0.0002754439999999997, 0.00027545899999999873, 0.00027545799999999926, 0.00027545899999999873, 0.0002924860000000015, 0.00027547199999999883, 0.00027544499999999916, 0.00027551299999999807, 0.00027545799999999926, 0.0002754729999999983, 0.00027545799999999926, 0.0002754309999999996, 0.0002754580000000062, 0.00027545799999999926]</msg>
<status status="PASS" starttime="20201030 15:51:23.457" endtime="20201030 15:51:23.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.446" endtime="20201030 15:51:23.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.473" endtime="20201030 15:51:23.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.468" endtime="20201030 15:51:23.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.466" endtime="20201030 15:51:23.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.977" endtime="20201030 15:51:23.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.976" endtime="20201030 15:51:23.497"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.519" endtime="20201030 15:51:23.545"></status>
</kw>
<msg timestamp="20201030 15:51:23.546" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.516" endtime="20201030 15:51:23.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.552" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.548" endtime="20201030 15:51:23.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.554" endtime="20201030 15:51:23.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.508" endtime="20201030 15:51:23.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.503" endtime="20201030 15:51:23.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.578" endtime="20201030 15:51:23.911"></status>
</kw>
<msg timestamp="20201030 15:51:23.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036934569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037231125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.575" endtime="20201030 15:51:23.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036934569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037231125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.920" endtime="20201030 15:51:23.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.938" endtime="20201030 15:51:23.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.567" endtime="20201030 15:51:23.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.563" endtime="20201030 15:51:23.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:23.954" level="INFO">${PHILIP_RES} = [{'diff': 0.00029655599999999643}, {'diff': 0.0002964859999999986}, {'diff': 0.00029657000000000294}, {'diff': 0.000296569999999996}, {'diff': 0.0002965420000000038}, {'diff': 0.0002965279999999973}, ...</msg>
<status status="PASS" starttime="20201030 15:51:23.947" endtime="20201030 15:51:23.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.965" level="INFO">${RESULT} = {'diff': [0.00029655599999999643, 0.0002964859999999986, 0.00029657000000000294, 0.000296569999999996, 0.0002965420000000038, 0.0002965279999999973, 0.00029657000000000294, 0.0002966390000000013, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:23.956" endtime="20201030 15:51:23.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.976" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:23.973" endtime="20201030 15:51:23.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.981" level="INFO">VALUE: [0.00029655599999999643, 0.0002964859999999986, 0.00029657000000000294, 0.000296569999999996, 0.0002965420000000038, 0.0002965279999999973, 0.00029657000000000294, 0.0002966390000000013, 0.00029649999999999815, 0.00029655599999999643, 0.00029655499999999696, 0.00029656900000000347, 0.00029655499999999696, 0.00029656900000000347, 0.0002965279999999973, 0.00029656900000000347, 0.00029655499999999696, 0.0002966390000000013, 0.00029652800000000423, 0.00029654199999999686, 0.00029652800000000423, 0.00029654199999999686, 0.00029662500000000175, 0.00029655599999999643, 0.0002965970000000026, 0.00029655599999999643, 0.00029656899999999653, 0.0002965550000000039, 0.0002965409999999974, 0.0002965550000000039, 0.00029655499999999696, 0.00029652800000000423, 0.00029654199999999686, 0.0002965279999999973, 0.00029657000000000294, 0.000296569999999996, 0.00029657000000000294, 0.00029649999999999815, 0.0002965139999999977, 0.000296569999999996, 0.00029654199999999686, 0.00029655599999999643, 0.00029655599999999643, 0.00029658300000000304, 0.0002965139999999977, 0.0003054720000000011, 0.00029655600000000337, 0.00029655599999999643, 0.00029655600000000337, 0.0002965829999999961]</msg>
<status status="PASS" starttime="20201030 15:51:23.978" endtime="20201030 15:51:23.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.967" endtime="20201030 15:51:23.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.993" endtime="20201030 15:51:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.989" endtime="20201030 15:51:24.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.986" endtime="20201030 15:51:24.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.499" endtime="20201030 15:51:24.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.498" endtime="20201030 15:51:24.018"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.040" endtime="20201030 15:51:24.067"></status>
</kw>
<msg timestamp="20201030 15:51:24.068" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.036" endtime="20201030 15:51:24.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.074" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.070" endtime="20201030 15:51:24.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.076" endtime="20201030 15:51:24.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.029" endtime="20201030 15:51:24.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.024" endtime="20201030 15:51:24.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.100" endtime="20201030 15:51:24.440"></status>
</kw>
<msg timestamp="20201030 15:51:24.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037066958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037385403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.096" endtime="20201030 15:51:24.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037066958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037385403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.449" endtime="20201030 15:51:24.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.468" endtime="20201030 15:51:24.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.089" endtime="20201030 15:51:24.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.084" endtime="20201030 15:51:24.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:24.484" level="INFO">${PHILIP_RES} = [{'diff': 0.00031844500000000053}, {'diff': 0.0003184030000000018}, {'diff': 0.000318430999999994}, {'diff': 0.00031843100000000096}, {'diff': 0.00031842999999999455}, {'diff': 0.0003184170000000014},...</msg>
<status status="PASS" starttime="20201030 15:51:24.477" endtime="20201030 15:51:24.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.493" level="INFO">${RESULT} = {'diff': [0.00031844500000000053, 0.0003184030000000018, 0.000318430999999994, 0.00031843100000000096, 0.00031842999999999455, 0.0003184170000000014, 0.0003183469999999966, 0.0003184300000000015, 0.00...</msg>
<status status="PASS" starttime="20201030 15:51:24.486" endtime="20201030 15:51:24.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.504" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:24.502" endtime="20201030 15:51:24.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.510" level="INFO">VALUE: [0.00031844500000000053, 0.0003184030000000018, 0.000318430999999994, 0.00031843100000000096, 0.00031842999999999455, 0.0003184170000000014, 0.0003183469999999966, 0.0003184300000000015, 0.00031833299999999704, 0.0003184030000000018, 0.0003184170000000014, 0.0003184170000000014, 0.0003184170000000014, 0.00031845800000000063, 0.0003184170000000014, 0.0003184160000000019, 0.0003184170000000014, 0.00031843100000000096, 0.0003184300000000015, 0.0003184170000000014, 0.0003184590000000001, 0.0003184170000000014, 0.0003184170000000014, 0.0003183889999999953, 0.00031843100000000096, 0.0003184449999999936, 0.0003184160000000019, 0.00031844400000000106, 0.0003184300000000015, 0.00031841699999999445, 0.0003184170000000014, 0.000318415999999995, 0.00031838900000000225, 0.0003184170000000014, 0.0003184030000000018, 0.0003184030000000018, 0.00031843100000000096, 0.00031840200000000235, 0.00031843100000000096, 0.0003184030000000018, 0.0003184019999999954, 0.0003184030000000018, 0.000318415999999995, 0.0003184170000000014, 0.000318430999999994, 0.00031840200000000235, 0.0003184029999999949, 0.0003184170000000014, 0.0003184019999999954, 0.00031848599999999977]</msg>
<status status="PASS" starttime="20201030 15:51:24.506" endtime="20201030 15:51:24.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.495" endtime="20201030 15:51:24.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.522" endtime="20201030 15:51:24.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.518" endtime="20201030 15:51:24.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.516" endtime="20201030 15:51:24.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.020" endtime="20201030 15:51:24.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.019" endtime="20201030 15:51:24.548"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.570" endtime="20201030 15:51:24.600"></status>
</kw>
<msg timestamp="20201030 15:51:24.601" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.567" endtime="20201030 15:51:24.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.607" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.603" endtime="20201030 15:51:24.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.610" endtime="20201030 15:51:24.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.559" endtime="20201030 15:51:24.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.554" endtime="20201030 15:51:24.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.634" endtime="20201030 15:51:24.989"></status>
</kw>
<msg timestamp="20201030 15:51:24.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039613264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.630" endtime="20201030 15:51:24.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039613264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039954306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.998" endtime="20201030 15:51:25.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.017" endtime="20201030 15:51:25.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.623" endtime="20201030 15:51:25.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.618" endtime="20201030 15:51:25.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:25.033" level="INFO">${PHILIP_RES} = [{'diff': 0.00034104199999999973}, {'diff': 0.00034105499999999983}, {'diff': 0.00034105600000000624}, {'diff': 0.00034104199999999973}, {'diff': 0.00034104100000000026}, {'diff': 0.000341041999999999...</msg>
<status status="PASS" starttime="20201030 15:51:25.026" endtime="20201030 15:51:25.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.043" level="INFO">${RESULT} = {'diff': [0.00034104199999999973, 0.00034105499999999983, 0.00034105600000000624, 0.00034104199999999973, 0.00034104100000000026, 0.00034104199999999973, 0.00034105499999999983, 0.0003410689999999994,...</msg>
<status status="PASS" starttime="20201030 15:51:25.035" endtime="20201030 15:51:25.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.053" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:25.051" endtime="20201030 15:51:25.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.059" level="INFO">VALUE: [0.00034104199999999973, 0.00034105499999999983, 0.00034105600000000624, 0.00034104199999999973, 0.00034104100000000026, 0.00034104199999999973, 0.00034105499999999983, 0.0003410689999999994, 0.0003410559999999993, 0.00034105600000000624, 0.00034105499999999983, 0.0003410559999999993, 0.0003410559999999993, 0.00034109699999999854, 0.00034104199999999973, 0.0003410559999999993, 0.0003410270000000007, 0.0003410689999999994, 0.00034104199999999973, 0.00034105499999999983, 0.00034104199999999973, 0.0003410559999999993, 0.0003410689999999994, 0.000341097999999998, 0.00034102800000000016, 0.00034105499999999983, 0.00034104100000000026, 0.00034104199999999973, 0.00036079199999999867, 0.00034105499999999983, 0.0003410559999999993, 0.0003410559999999993, 0.00034102800000000016, 0.0003410699999999989, 0.00034106900000000634, 0.00034104100000000026, 0.00034101399999999366, 0.00034104199999999973, 0.00034104100000000026, 0.0003410699999999989, 0.0003410559999999993, 0.00034104100000000026, 0.0003410559999999993, 0.00034105600000000624, 0.00034105499999999983, 0.00034104199999999973, 0.00034104199999999973, 0.0003410270000000007, 0.00034104199999999973, 0.00034102800000000016]</msg>
<status status="PASS" starttime="20201030 15:51:25.056" endtime="20201030 15:51:25.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.044" endtime="20201030 15:51:25.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.073" endtime="20201030 15:51:25.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.067" endtime="20201030 15:51:25.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.065" endtime="20201030 15:51:25.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.550" endtime="20201030 15:51:25.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.548" endtime="20201030 15:51:25.098"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.121" endtime="20201030 15:51:25.150"></status>
</kw>
<msg timestamp="20201030 15:51:25.151" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.117" endtime="20201030 15:51:25.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.157" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.153" endtime="20201030 15:51:25.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.160" endtime="20201030 15:51:25.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.110" endtime="20201030 15:51:25.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.104" endtime="20201030 15:51:25.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.184" endtime="20201030 15:51:25.536"></status>
</kw>
<msg timestamp="20201030 15:51:25.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037900069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0382645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:25.180" endtime="20201030 15:51:25.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037900069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0382645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:25.545" endtime="20201030 15:51:25.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.564" endtime="20201030 15:51:25.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.173" endtime="20201030 15:51:25.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.168" endtime="20201030 15:51:25.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:25.580" level="INFO">${PHILIP_RES} = [{'diff': 0.0003644309999999984}, {'diff': 0.00036444499999999797}, {'diff': 0.0003644590000000045}, {'diff': 0.00036445799999999806}, {'diff': 0.0003644439999999985}, {'diff': 0.000364458000000005}, ...</msg>
<status status="PASS" starttime="20201030 15:51:25.572" endtime="20201030 15:51:25.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.590" level="INFO">${RESULT} = {'diff': [0.0003644309999999984, 0.00036444499999999797, 0.0003644590000000045, 0.00036445799999999806, 0.0003644439999999985, 0.000364458000000005, 0.0003644299999999989, 0.0003644439999999985, 0.000...</msg>
<status status="PASS" starttime="20201030 15:51:25.582" endtime="20201030 15:51:25.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.601" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:25.599" endtime="20201030 15:51:25.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.606" level="INFO">VALUE: [0.0003644309999999984, 0.00036444499999999797, 0.0003644590000000045, 0.00036445799999999806, 0.0003644439999999985, 0.000364458000000005, 0.0003644299999999989, 0.0003644439999999985, 0.0003644309999999984, 0.0003644030000000062, 0.00036444499999999797, 0.00036445799999999806, 0.0003644439999999985, 0.0003644299999999989, 0.00036441599999999935, 0.0003644439999999985, 0.00036444400000000543, 0.0003644309999999984, 0.00036444499999999797, 0.00036444499999999797, 0.0003644439999999985, 0.0003644439999999985, 0.0003644439999999985, 0.00036444400000000543, 0.0003644439999999985, 0.00036444499999999797, 0.0003644169999999988, 0.0003644309999999984, 0.00036445799999999806, 0.0003644299999999989, 0.0003644160000000063, 0.0003644299999999989, 0.0003644439999999985, 0.0003644309999999984, 0.00036444499999999797, 0.00036444499999999797, 0.0003644439999999985, 0.00036444400000000543, 0.0003644299999999989, 0.0003644299999999989, 0.0003644299999999989, 0.0003644169999999988, 0.0003644309999999984, 0.00036444499999999797, 0.0003644450000000049, 0.0003644309999999984, 0.00036445799999999806, 0.00037500000000000033, 0.00036444499999999797, 0.0003644450000000049]</msg>
<status status="PASS" starttime="20201030 15:51:25.603" endtime="20201030 15:51:25.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.592" endtime="20201030 15:51:25.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.620" endtime="20201030 15:51:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.615" endtime="20201030 15:51:25.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.612" endtime="20201030 15:51:25.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.101" endtime="20201030 15:51:25.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.099" endtime="20201030 15:51:25.645"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.667" endtime="20201030 15:51:25.698"></status>
</kw>
<msg timestamp="20201030 15:51:25.699" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.664" endtime="20201030 15:51:25.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.706" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.701" endtime="20201030 15:51:25.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.708" endtime="20201030 15:51:25.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.656" endtime="20201030 15:51:25.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.651" endtime="20201030 15:51:25.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.732" endtime="20201030 15:51:26.081"></status>
</kw>
<msg timestamp="20201030 15:51:26.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038168431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038556986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.728" endtime="20201030 15:51:26.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038168431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038556986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.091" endtime="20201030 15:51:26.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.109" endtime="20201030 15:51:26.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.721" endtime="20201030 15:51:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.716" endtime="20201030 15:51:26.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:26.125" level="INFO">${PHILIP_RES} = [{'diff': 0.00038855499999999876}, {'diff': 0.00038861099999999704}, {'diff': 0.0003885829999999979}, {'diff': 0.0003886249999999966}, {'diff': 0.0003886249999999966}, {'diff': 0.00038859699999999747}...</msg>
<status status="PASS" starttime="20201030 15:51:26.118" endtime="20201030 15:51:26.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.136" level="INFO">${RESULT} = {'diff': [0.00038855499999999876, 0.00038861099999999704, 0.0003885829999999979, 0.0003886249999999966, 0.0003886249999999966, 0.00038859699999999747, 0.0003885699999999978, 0.0003885699999999978, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:26.127" endtime="20201030 15:51:26.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.147" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:26.145" endtime="20201030 15:51:26.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.152" level="INFO">VALUE: [0.00038855499999999876, 0.00038861099999999704, 0.0003885829999999979, 0.0003886249999999966, 0.0003886249999999966, 0.00038859699999999747, 0.0003885699999999978, 0.0003885699999999978, 0.0003885970000000044, 0.0003886660000000028, 0.00038854199999999867, 0.0003885840000000043, 0.00038862500000000355, 0.0003886119999999965, 0.00038859799999999695, 0.0003886119999999965, 0.00038855599999999824, 0.00038861099999999704, 0.00038859799999999695, 0.00038861099999999704, 0.0003886390000000031, 0.0003885970000000044, 0.0003885970000000044, 0.0003885970000000044, 0.0003885970000000044, 0.00038861099999999704, 0.00038859699999999747, 0.00038859699999999747, 0.0003885829999999979, 0.0003885829999999979, 0.00038866700000000226, 0.00038859699999999747, 0.000388611000000004, 0.00038858300000000484, 0.00038858300000000484, 0.000388611000000004, 0.0003885970000000044, 0.00038856899999999833, 0.0003885829999999979, 0.00038859699999999747, 0.0003886249999999966, 0.00038861099999999704, 0.00038859699999999747, 0.000388611000000004, 0.00038857000000000474, 0.00038861200000000345, 0.00038861200000000345, 0.0003885980000000039, 0.00038859799999999695, 0.00038861099999999704]</msg>
<status status="PASS" starttime="20201030 15:51:26.149" endtime="20201030 15:51:26.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.138" endtime="20201030 15:51:26.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.165" endtime="20201030 15:51:26.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.160" endtime="20201030 15:51:26.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.158" endtime="20201030 15:51:26.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.647" endtime="20201030 15:51:26.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.646" endtime="20201030 15:51:26.190"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.212" endtime="20201030 15:51:26.245"></status>
</kw>
<msg timestamp="20201030 15:51:26.246" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.208" endtime="20201030 15:51:26.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.252" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.248" endtime="20201030 15:51:26.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.254" endtime="20201030 15:51:26.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.201" endtime="20201030 15:51:26.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.196" endtime="20201030 15:51:26.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.278" endtime="20201030 15:51:26.624"></status>
</kw>
<msg timestamp="20201030 15:51:26.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037238181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037651694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.274" endtime="20201030 15:51:26.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037238181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037651694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.634" endtime="20201030 15:51:26.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.652" endtime="20201030 15:51:26.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.267" endtime="20201030 15:51:26.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.262" endtime="20201030 15:51:26.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:26.668" level="INFO">${PHILIP_RES} = [{'diff': 0.0004135129999999973}, {'diff': 0.0004135419999999959}, {'diff': 0.000413570000000002}, {'diff': 0.0004135140000000037}, {'diff': 0.0004135139999999968}, {'diff': 0.0004135139999999968}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:26.660" endtime="20201030 15:51:26.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.677" level="INFO">${RESULT} = {'diff': [0.0004135129999999973, 0.0004135419999999959, 0.000413570000000002, 0.0004135140000000037, 0.0004135139999999968, 0.0004135139999999968, 0.00041347199999999806, 0.0004134999999999972, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:51:26.670" endtime="20201030 15:51:26.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.687" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:26.685" endtime="20201030 15:51:26.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.692" level="INFO">VALUE: [0.0004135129999999973, 0.0004135419999999959, 0.000413570000000002, 0.0004135140000000037, 0.0004135139999999968, 0.0004135139999999968, 0.00041347199999999806, 0.0004134999999999972, 0.0004135140000000037, 0.0004135140000000037, 0.00041352799999999634, 0.00041352799999999634, 0.0004134999999999972, 0.0004135139999999968, 0.00041350000000000414, 0.0004135140000000037, 0.0004134999999999972, 0.00041352699999999687, 0.0004134999999999972, 0.00041348599999999763, 0.00042998699999999973, 0.0004135419999999959, 0.0004135280000000033, 0.0004135140000000037, 0.00041352799999999634, 0.0004135139999999968, 0.0004135139999999968, 0.0004135139999999968, 0.0004135140000000037, 0.00041345800000000543, 0.00041348599999999763, 0.0004135139999999968, 0.0004135139999999968, 0.0004135140000000037, 0.00041345800000000543, 0.0004135140000000037, 0.0004134999999999972, 0.0004135419999999959, 0.0004135139999999968, 0.0004135140000000037, 0.0004135280000000033, 0.0004135280000000033, 0.0004135139999999968, 0.0004135139999999968, 0.0004134999999999972, 0.0004135410000000034, 0.0004135140000000037, 0.0004135129999999973, 0.00041347199999999806, 0.00041352699999999687]</msg>
<status status="PASS" starttime="20201030 15:51:26.690" endtime="20201030 15:51:26.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.679" endtime="20201030 15:51:26.696"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.705" endtime="20201030 15:51:26.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.701" endtime="20201030 15:51:26.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.698" endtime="20201030 15:51:26.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.192" endtime="20201030 15:51:26.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.191" endtime="20201030 15:51:26.730"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.751" endtime="20201030 15:51:26.787"></status>
</kw>
<msg timestamp="20201030 15:51:26.788" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.748" endtime="20201030 15:51:26.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.794" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.790" endtime="20201030 15:51:26.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.796" endtime="20201030 15:51:26.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.741" endtime="20201030 15:51:26.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.736" endtime="20201030 15:51:26.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.819" endtime="20201030 15:51:27.153"></status>
</kw>
<msg timestamp="20201030 15:51:27.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038577597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.816" endtime="20201030 15:51:27.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038577597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.162" endtime="20201030 15:51:27.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.180" endtime="20201030 15:51:27.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.809" endtime="20201030 15:51:27.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.804" endtime="20201030 15:51:27.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:27.196" level="INFO">${PHILIP_RES} = [{'diff': 0.0004392079999999965}, {'diff': 0.00043912499999999854}, {'diff': 0.0004392079999999965}, {'diff': 0.0004392090000000029}, {'diff': 0.0004391949999999964}, {'diff': 0.000439222000000003}, {...</msg>
<status status="PASS" starttime="20201030 15:51:27.189" endtime="20201030 15:51:27.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.205" level="INFO">${RESULT} = {'diff': [0.0004392079999999965, 0.00043912499999999854, 0.0004392079999999965, 0.0004392090000000029, 0.0004391949999999964, 0.000439222000000003, 0.0004392079999999965, 0.0004391389999999981, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:51:27.198" endtime="20201030 15:51:27.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.215" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:27.213" endtime="20201030 15:51:27.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.221" level="INFO">VALUE: [0.0004392079999999965, 0.00043912499999999854, 0.0004392079999999965, 0.0004392090000000029, 0.0004391949999999964, 0.000439222000000003, 0.0004392079999999965, 0.0004391389999999981, 0.0004391809999999968, 0.00043919500000000333, 0.0004391939999999969, 0.0004392079999999965, 0.00043920800000000343, 0.00043919500000000333, 0.00043919500000000333, 0.00043922199999999606, 0.00043920800000000343, 0.0004391939999999969, 0.00043918100000000376, 0.00043929200000000085, 0.00043919500000000333, 0.0004391939999999969, 0.00043920800000000343, 0.0004392079999999965, 0.00043919500000000333, 0.0004391949999999964, 0.00043920800000000343, 0.00043923599999999563, 0.00043920800000000343, 0.00043922299999999553, 0.00043919500000000333, 0.00043912499999999854, 0.000439222000000003, 0.00043917999999999735, 0.0004392090000000029, 0.0004392090000000029, 0.0004391389999999981, 0.00043919400000000386, 0.0004392079999999965, 0.00043920800000000343, 0.0004391949999999964, 0.00043919500000000333, 0.0004392079999999965, 0.000439222000000003, 0.00043922199999999606, 0.00043918100000000376, 0.00043920899999999596, 0.000439110999999999, 0.00043925000000000214, 0.00043920800000000343]</msg>
<status status="PASS" starttime="20201030 15:51:27.218" endtime="20201030 15:51:27.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.207" endtime="20201030 15:51:27.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.234" endtime="20201030 15:51:27.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.229" endtime="20201030 15:51:27.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.226" endtime="20201030 15:51:27.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.732" endtime="20201030 15:51:27.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.730" endtime="20201030 15:51:27.259"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.281" endtime="20201030 15:51:27.316"></status>
</kw>
<msg timestamp="20201030 15:51:27.317" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.278" endtime="20201030 15:51:27.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.323" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.319" endtime="20201030 15:51:27.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.325" endtime="20201030 15:51:27.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.271" endtime="20201030 15:51:27.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.265" endtime="20201030 15:51:27.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.349" endtime="20201030 15:51:27.686"></status>
</kw>
<msg timestamp="20201030 15:51:27.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036733819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037199458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.345" endtime="20201030 15:51:27.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036733819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037199458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.695" endtime="20201030 15:51:27.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.713" endtime="20201030 15:51:27.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.338" endtime="20201030 15:51:27.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.333" endtime="20201030 15:51:27.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:27.730" level="INFO">${PHILIP_RES} = [{'diff': 0.00046563899999999686}, {'diff': 0.00046565300000000337}, {'diff': 0.0004656390000000038}, {'diff': 0.0004656390000000038}, {'diff': 0.00046563899999999686}, {'diff': 0.00046563899999999686...</msg>
<status status="PASS" starttime="20201030 15:51:27.722" endtime="20201030 15:51:27.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.740" level="INFO">${RESULT} = {'diff': [0.00046563899999999686, 0.00046565300000000337, 0.0004656390000000038, 0.0004656390000000038, 0.00046563899999999686, 0.00046563899999999686, 0.00046563899999999686, 0.00046563899999999686, ...</msg>
<status status="PASS" starttime="20201030 15:51:27.732" endtime="20201030 15:51:27.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.751" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:27.749" endtime="20201030 15:51:27.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.756" level="INFO">VALUE: [0.00046563899999999686, 0.00046565300000000337, 0.0004656390000000038, 0.0004656390000000038, 0.00046563899999999686, 0.00046563899999999686, 0.00046563899999999686, 0.00046563899999999686, 0.00046565300000000337, 0.0004656520000000039, 0.00046566700000000294, 0.00046565199999999696, 0.00046563899999999686, 0.00046565299999999643, 0.00046562500000000423, 0.00046565300000000337, 0.00046562500000000423, 0.00046559699999999815, 0.00046566599999999653, 0.00046565299999999643, 0.0004656390000000038, 0.0004656390000000038, 0.00046565300000000337, 0.0004656799999999961, 0.0004656249999999973, 0.0004656119999999972, 0.00046563899999999686, 0.0004656390000000038, 0.00046562500000000423, 0.0004656249999999973, 0.00046563899999999686, 0.000465666999999996, 0.00046565199999999696, 0.00046562500000000423, 0.0004656390000000038, 0.0004656390000000038, 0.000465666999999996, 0.00046569499999999514, 0.0004657080000000022, 0.0004656520000000039, 0.00046562500000000423, 0.0004656390000000038, 0.0004832500000000045, 0.00046563899999999686, 0.00046565199999999696, 0.00046565299999999643, 0.00046565300000000337, 0.00046565300000000337, 0.00046565300000000337, 0.00046563899999999686]</msg>
<status status="PASS" starttime="20201030 15:51:27.753" endtime="20201030 15:51:27.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.742" endtime="20201030 15:51:27.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.771" endtime="20201030 15:51:27.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.765" endtime="20201030 15:51:27.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.762" endtime="20201030 15:51:27.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.261" endtime="20201030 15:51:27.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.260" endtime="20201030 15:51:27.798"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.820" endtime="20201030 15:51:27.856"></status>
</kw>
<msg timestamp="20201030 15:51:27.857" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.816" endtime="20201030 15:51:27.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.864" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.860" endtime="20201030 15:51:27.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.866" endtime="20201030 15:51:27.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.809" endtime="20201030 15:51:27.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.803" endtime="20201030 15:51:27.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.890" endtime="20201030 15:51:28.229"></status>
</kw>
<msg timestamp="20201030 15:51:28.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03826375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038756611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:27.887" endtime="20201030 15:51:28.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03826375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038756611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:28.239" endtime="20201030 15:51:28.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.257" endtime="20201030 15:51:28.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.879" endtime="20201030 15:51:28.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.874" endtime="20201030 15:51:28.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:28.273" level="INFO">${PHILIP_RES} = [{'diff': 0.0004928610000000042}, {'diff': 0.0004928609999999972}, {'diff': 0.0004928609999999972}, {'diff': 0.0004928470000000046}, {'diff': 0.0004928470000000046}, {'diff': 0.0004928749999999968}, {...</msg>
<status status="PASS" starttime="20201030 15:51:28.266" endtime="20201030 15:51:28.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.284" level="INFO">${RESULT} = {'diff': [0.0004928610000000042, 0.0004928609999999972, 0.0004928609999999972, 0.0004928470000000046, 0.0004928470000000046, 0.0004928749999999968, 0.0004928609999999972, 0.0004928620000000036, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:51:28.276" endtime="20201030 15:51:28.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.295" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:28.293" endtime="20201030 15:51:28.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.301" level="INFO">VALUE: [0.0004928610000000042, 0.0004928609999999972, 0.0004928609999999972, 0.0004928470000000046, 0.0004928470000000046, 0.0004928749999999968, 0.0004928609999999972, 0.0004928620000000036, 0.0004928609999999972, 0.0004928749999999968, 0.0004928469999999976, 0.0004928610000000042, 0.0005099589999999973, 0.0004928750000000037, 0.0004928750000000037, 0.0004929030000000029, 0.0004928609999999972, 0.0004928189999999985, 0.0004928480000000041, 0.0004928879999999969, 0.0004928609999999972, 0.0004928750000000037, 0.0004928470000000046, 0.0004928749999999968, 0.0004928609999999972, 0.000492833000000005, 0.0004928610000000042, 0.0004928609999999972, 0.0004929449999999946, 0.0004928610000000042, 0.000492833000000005, 0.0004929169999999955, 0.0004928469999999976, 0.000492819999999998, 0.0004928610000000042, 0.0004928469999999976, 0.0004928609999999972, 0.0004928750000000037, 0.0004928609999999972, 0.0004928469999999976, 0.0004928189999999985, 0.0004928750000000037, 0.0004928609999999972, 0.0004928479999999971, 0.0004928749999999968, 0.0004928610000000042, 0.0004928609999999972, 0.0004928480000000041, 0.0004928059999999984, 0.0004928749999999898]</msg>
<status status="PASS" starttime="20201030 15:51:28.298" endtime="20201030 15:51:28.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.286" endtime="20201030 15:51:28.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.320" endtime="20201030 15:51:28.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.316" endtime="20201030 15:51:28.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.313" endtime="20201030 15:51:28.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.800" endtime="20201030 15:51:28.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.798" endtime="20201030 15:51:28.346"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.369" endtime="20201030 15:51:28.408"></status>
</kw>
<msg timestamp="20201030 15:51:28.409" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.366" endtime="20201030 15:51:28.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.416" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.412" endtime="20201030 15:51:28.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.418" endtime="20201030 15:51:28.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.358" endtime="20201030 15:51:28.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.352" endtime="20201030 15:51:28.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.449" endtime="20201030 15:51:28.796"></status>
</kw>
<msg timestamp="20201030 15:51:28.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040107194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.445" endtime="20201030 15:51:28.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039586417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040107194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.806" endtime="20201030 15:51:28.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.824" endtime="20201030 15:51:28.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.438" endtime="20201030 15:51:28.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.427" endtime="20201030 15:51:28.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:28.839" level="INFO">${PHILIP_RES} = [{'diff': 0.000520777}, {'diff': 0.0005208049999999992}, {'diff': 0.0005208330000000053}, {'diff': 0.0005208339999999978}, {'diff': 0.0005208049999999992}, {'diff': 0.0005208190000000057}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:51:28.832" endtime="20201030 15:51:28.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.849" level="INFO">${RESULT} = {'diff': [0.000520777, 0.0005208049999999992, 0.0005208330000000053, 0.0005208339999999978, 0.0005208049999999992, 0.0005208190000000057, 0.0005208329999999983, 0.0005208199999999982, 0.00052081899999...</msg>
<status status="PASS" starttime="20201030 15:51:28.841" endtime="20201030 15:51:28.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.859" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:28.857" endtime="20201030 15:51:28.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.864" level="INFO">VALUE: [0.000520777, 0.0005208049999999992, 0.0005208330000000053, 0.0005208339999999978, 0.0005208049999999992, 0.0005208190000000057, 0.0005208329999999983, 0.0005208199999999982, 0.0005208189999999988, 0.000520792000000006, 0.0005208609999999975, 0.0005208609999999975, 0.0005208469999999979, 0.0005208330000000053, 0.0005208339999999978, 0.0005208329999999983, 0.0005208189999999988, 0.0005208329999999983, 0.0005208339999999978, 0.0005208199999999982, 0.0005208330000000053, 0.0005208059999999987, 0.0005208479999999974, 0.0005208469999999979, 0.0005208610000000044, 0.0005313480000000009, 0.0005208329999999983, 0.0005208329999999983, 0.0005208469999999979, 0.0005208200000000052, 0.0005208889999999966, 0.0005207779999999995, 0.000520764, 0.0005208890000000035, 0.0005208189999999988, 0.0005208329999999983, 0.000520875000000004, 0.000520874999999997, 0.0005208469999999979, 0.0005208329999999983, 0.0005208060000000056, 0.0005207779999999995, 0.0005208330000000122, 0.0005208329999999983, 0.0005208339999999978, 0.0005208049999999992, 0.0005208330000000122, 0.0005208329999999983, 0.0005208059999999987, 0.0005208190000000057]</msg>
<status status="PASS" starttime="20201030 15:51:28.862" endtime="20201030 15:51:28.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.850" endtime="20201030 15:51:28.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.877" endtime="20201030 15:51:28.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.873" endtime="20201030 15:51:28.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.870" endtime="20201030 15:51:28.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.348" endtime="20201030 15:51:28.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.347" endtime="20201030 15:51:28.902"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.923" endtime="20201030 15:51:28.965"></status>
</kw>
<msg timestamp="20201030 15:51:28.966" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.920" endtime="20201030 15:51:28.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.972" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.968" endtime="20201030 15:51:28.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.974" endtime="20201030 15:51:28.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.913" endtime="20201030 15:51:28.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.908" endtime="20201030 15:51:28.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.998" endtime="20201030 15:51:29.342"></status>
</kw>
<msg timestamp="20201030 15:51:29.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038607069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039156639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.994" endtime="20201030 15:51:29.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038607069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039156639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.351" endtime="20201030 15:51:29.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.370" endtime="20201030 15:51:29.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.987" endtime="20201030 15:51:29.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.982" endtime="20201030 15:51:29.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:29.385" level="INFO">${PHILIP_RES} = [{'diff': 0.0005495699999999992}, {'diff': 0.0005495559999999997}, {'diff': 0.0005495689999999998}, {'diff': 0.0005495550000000002}, {'diff': 0.0005495969999999989}, {'diff': 0.0005495699999999992}, {...</msg>
<status status="PASS" starttime="20201030 15:51:29.378" endtime="20201030 15:51:29.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.394" level="INFO">${RESULT} = {'diff': [0.0005495699999999992, 0.0005495559999999997, 0.0005495689999999998, 0.0005495550000000002, 0.0005495969999999989, 0.0005495699999999992, 0.0005495839999999988, 0.0005495559999999997, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:51:29.387" endtime="20201030 15:51:29.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.405" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:29.402" endtime="20201030 15:51:29.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.410" level="INFO">VALUE: [0.0005495699999999992, 0.0005495559999999997, 0.0005495689999999998, 0.0005495550000000002, 0.0005495969999999989, 0.0005495699999999992, 0.0005495839999999988, 0.0005495559999999997, 0.0005495829999999993, 0.0005495969999999989, 0.0005495689999999998, 0.0005495969999999989, 0.0005495280000000005, 0.0005495689999999998, 0.0005495689999999998, 0.0005495420000000001, 0.0005495969999999989, 0.0005495699999999992, 0.0005495699999999992, 0.0005495559999999997, 0.0005495689999999998, 0.0005496109999999985, 0.0005495689999999998, 0.000549624999999998, 0.0005496109999999985, 0.0005496670000000037, 0.0005725830000000015, 0.0005495559999999997, 0.0005495829999999993, 0.0005496109999999985, 0.0005496109999999985, 0.0005495839999999988, 0.0005495700000000062, 0.0005494859999999949, 0.0005495829999999993, 0.0005495829999999993, 0.0005495830000000063, 0.0005495829999999993, 0.0005495559999999997, 0.0005495699999999992, 0.0005495829999999993, 0.0005495550000000071, 0.0005495689999999998, 0.0005495420000000001, 0.0005495699999999992, 0.0005495839999999919, 0.0005495830000000063, 0.0005495829999999924, 0.0005495689999999998, 0.0005495269999999941]</msg>
<status status="PASS" starttime="20201030 15:51:29.407" endtime="20201030 15:51:29.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.396" endtime="20201030 15:51:29.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.424" endtime="20201030 15:51:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.418" endtime="20201030 15:51:29.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.416" endtime="20201030 15:51:29.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.904" endtime="20201030 15:51:29.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.903" endtime="20201030 15:51:29.449"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.468" endtime="20201030 15:51:29.506"></status>
</kw>
<msg timestamp="20201030 15:51:29.506" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.466" endtime="20201030 15:51:29.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.509" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.507" endtime="20201030 15:51:29.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.510" endtime="20201030 15:51:29.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.460" endtime="20201030 15:51:29.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.455" endtime="20201030 15:51:29.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.521" endtime="20201030 15:51:29.849"></status>
</kw>
<msg timestamp="20201030 15:51:29.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032982014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033561083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.520" endtime="20201030 15:51:29.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032982014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033561083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.858" endtime="20201030 15:51:29.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.876" endtime="20201030 15:51:29.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.517" endtime="20201030 15:51:29.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.514" endtime="20201030 15:51:29.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:29.892" level="INFO">${PHILIP_RES} = [{'diff': 0.0005790690000000015}, {'diff': 0.000579069999999994}, {'diff': 0.0005790830000000011}, {'diff': 0.0005791669999999985}, {'diff': 0.0005790830000000011}, {'diff': 0.0005790560000000014}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:29.885" endtime="20201030 15:51:29.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.903" level="INFO">${RESULT} = {'diff': [0.0005790690000000015, 0.000579069999999994, 0.0005790830000000011, 0.0005791669999999985, 0.0005790830000000011, 0.0005790560000000014, 0.0005790550000000019, 0.0005790969999999937, 0.00057...</msg>
<status status="PASS" starttime="20201030 15:51:29.894" endtime="20201030 15:51:29.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.913" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:29.911" endtime="20201030 15:51:29.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.918" level="INFO">VALUE: [0.0005790690000000015, 0.000579069999999994, 0.0005790830000000011, 0.0005791669999999985, 0.0005790830000000011, 0.0005790560000000014, 0.0005790550000000019, 0.0005790969999999937, 0.0005790140000000027, 0.000579070000000001, 0.0005790840000000005, 0.0005790830000000011, 0.0005790560000000014, 0.0005790689999999946, 0.0005790840000000005, 0.0005790550000000019, 0.0005790980000000001, 0.0005790410000000024, 0.0005790840000000005, 0.0005790279999999953, 0.0005790560000000014, 0.0005790690000000015, 0.000579070000000001, 0.0005790830000000011, 0.0005790409999999954, 0.0005790829999999941, 0.000579054999999995, 0.0005790140000000027, 0.0005790690000000015, 0.0005789859999999966, 0.0005790690000000015, 0.0005790980000000001, 0.0005790140000000027, 0.000579070000000001, 0.0005790690000000015, 0.0005790560000000014, 0.0005791389999999993, 0.0005790830000000011, 0.0005790970000000006, 0.0005790970000000006, 0.000579070000000001, 0.0005790830000000011, 0.0005790980000000001, 0.0005790830000000011, 0.0005790840000000005, 0.0005790830000000011, 0.000579070000000001, 0.0005790550000000019, 0.0005790560000000083, 0.0005790140000000027]</msg>
<status status="PASS" starttime="20201030 15:51:29.915" endtime="20201030 15:51:29.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.904" endtime="20201030 15:51:29.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.931" endtime="20201030 15:51:29.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.926" endtime="20201030 15:51:29.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.924" endtime="20201030 15:51:29.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.451" endtime="20201030 15:51:29.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.450" endtime="20201030 15:51:29.956"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.977" endtime="20201030 15:51:30.019"></status>
</kw>
<msg timestamp="20201030 15:51:30.020" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.974" endtime="20201030 15:51:30.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.027" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.023" endtime="20201030 15:51:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.029" endtime="20201030 15:51:30.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.967" endtime="20201030 15:51:30.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.961" endtime="20201030 15:51:30.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.052" endtime="20201030 15:51:30.399"></status>
</kw>
<msg timestamp="20201030 15:51:30.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036846, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:30.049" endtime="20201030 15:51:30.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036846, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:30.408" endtime="20201030 15:51:30.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.426" endtime="20201030 15:51:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.042" endtime="20201030 15:51:30.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.037" endtime="20201030 15:51:30.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:30.442" level="INFO">${PHILIP_RES} = [{'diff': 0.0006093470000000031}, {'diff': 0.0006093470000000031}, {'diff': 0.000609305999999997}, {'diff': 0.0006093330000000036}, {'diff': 0.0006093329999999966}, {'diff': 0.0006093470000000031}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:30.434" endtime="20201030 15:51:30.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.453" level="INFO">${RESULT} = {'diff': [0.0006093470000000031, 0.0006093470000000031, 0.000609305999999997, 0.0006093330000000036, 0.0006093329999999966, 0.0006093470000000031, 0.0006093329999999966, 0.000609334000000003, 0.000609...</msg>
<status status="PASS" starttime="20201030 15:51:30.444" endtime="20201030 15:51:30.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.463" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:30.461" endtime="20201030 15:51:30.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.468" level="INFO">VALUE: [0.0006093470000000031, 0.0006093470000000031, 0.000609305999999997, 0.0006093330000000036, 0.0006093329999999966, 0.0006093470000000031, 0.0006093329999999966, 0.000609334000000003, 0.0006093469999999962, 0.0006093470000000031, 0.0006093469999999962, 0.0006093470000000031, 0.0006093329999999966, 0.0006093480000000026, 0.0006093329999999966, 0.0006093330000000036, 0.0006092920000000043, 0.000609416999999994, 0.0006355970000000016, 0.0006093619999999952, 0.0006093470000000031, 0.0006093469999999962, 0.0006093200000000035, 0.0006092909999999979, 0.000609401999999995, 0.0006093480000000026, 0.0006093469999999962, 0.0006093330000000036, 0.0006093469999999962, 0.0006093610000000027, 0.0006092919999999974, 0.0006093480000000026, 0.0006092639999999983, 0.0006093330000000036, 0.0006093339999999961, 0.000609305999999997, 0.0006093480000000026, 0.0006093610000000027, 0.0006093049999999975, 0.0006093610000000096, 0.0006093329999999897, 0.0006093890000000018, 0.000609334000000003, 0.0006092909999999979, 0.0006093189999999971, 0.000609334000000003, 0.0006093469999999962, 0.0006093330000000036, 0.000609334000000003, 0.0006093330000000036]</msg>
<status status="PASS" starttime="20201030 15:51:30.466" endtime="20201030 15:51:30.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.455" endtime="20201030 15:51:30.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.481" endtime="20201030 15:51:30.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.477" endtime="20201030 15:51:30.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.474" endtime="20201030 15:51:30.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.957" endtime="20201030 15:51:30.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.956" endtime="20201030 15:51:30.507"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.529" endtime="20201030 15:51:30.573"></status>
</kw>
<msg timestamp="20201030 15:51:30.575" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.526" endtime="20201030 15:51:30.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.581" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.577" endtime="20201030 15:51:30.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.583" endtime="20201030 15:51:30.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.519" endtime="20201030 15:51:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.513" endtime="20201030 15:51:30.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.606" endtime="20201030 15:51:30.955"></status>
</kw>
<msg timestamp="20201030 15:51:30.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038841931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039482292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.603" endtime="20201030 15:51:30.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038841931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039482292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.964" endtime="20201030 15:51:30.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.982" endtime="20201030 15:51:30.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.596" endtime="20201030 15:51:30.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.591" endtime="20201030 15:51:30.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:30.998" level="INFO">${PHILIP_RES} = [{'diff': 0.000640360999999999}, {'diff': 0.0006403750000000055}, {'diff': 0.0006403749999999986}, {'diff': 0.0006403469999999994}, {'diff': 0.0006403879999999987}, {'diff': 0.0006403329999999999}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:30.990" endtime="20201030 15:51:30.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.007" level="INFO">${RESULT} = {'diff': [0.000640360999999999, 0.0006403750000000055, 0.0006403749999999986, 0.0006403469999999994, 0.0006403879999999987, 0.0006403329999999999, 0.0006403889999999982, 0.000640361000000006, 0.000640...</msg>
<status status="PASS" starttime="20201030 15:51:31.000" endtime="20201030 15:51:31.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.018" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:31.015" endtime="20201030 15:51:31.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.023" level="INFO">VALUE: [0.000640360999999999, 0.0006403750000000055, 0.0006403749999999986, 0.0006403469999999994, 0.0006403879999999987, 0.0006403329999999999, 0.0006403889999999982, 0.000640361000000006, 0.0006403619999999985, 0.0006403889999999982, 0.0006403749999999986, 0.0006403749999999986, 0.0006403749999999986, 0.0006404170000000042, 0.000640360999999999, 0.0006403479999999989, 0.0006403749999999986, 0.0006403889999999982, 0.0006403749999999986, 0.0006403889999999982, 0.0006403750000000055, 0.0006403749999999986, 0.000640360999999999, 0.0006403749999999986, 0.0006403749999999986, 0.000653624999999998, 0.0006403749999999986, 0.0006403750000000055, 0.0006403749999999986, 0.0006404440000000039, 0.000640360999999999, 0.0006403749999999986, 0.0006404029999999977, 0.0006403750000000055, 0.0006403750000000055, 0.0006403890000000051, 0.0006403749999999986, 0.0006403749999999986, 0.0006403890000000051, 0.0006403890000000051, 0.0006403890000000051, 0.0006402920000000006, 0.000640361000000006, 0.0006403889999999912, 0.0006404309999999969, 0.0006403749999999986, 0.0006403749999999986, 0.0006403749999999986, 0.0006403890000000051, 0.000640361000000006]</msg>
<status status="PASS" starttime="20201030 15:51:31.020" endtime="20201030 15:51:31.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.009" endtime="20201030 15:51:31.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.035" endtime="20201030 15:51:31.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.031" endtime="20201030 15:51:31.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.028" endtime="20201030 15:51:31.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.509" endtime="20201030 15:51:31.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.508" endtime="20201030 15:51:31.060"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.082" endtime="20201030 15:51:31.129"></status>
</kw>
<msg timestamp="20201030 15:51:31.130" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.079" endtime="20201030 15:51:31.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.136" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.132" endtime="20201030 15:51:31.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.139" endtime="20201030 15:51:31.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.071" endtime="20201030 15:51:31.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.066" endtime="20201030 15:51:31.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.162" endtime="20201030 15:51:31.497"></status>
</kw>
<msg timestamp="20201030 15:51:31.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038894347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.158" endtime="20201030 15:51:31.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038894347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039566514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.507" endtime="20201030 15:51:31.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.525" endtime="20201030 15:51:31.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.151" endtime="20201030 15:51:31.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.147" endtime="20201030 15:51:31.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:31.542" level="INFO">${PHILIP_RES} = [{'diff': 0.0006721669999999944}, {'diff': 0.0006721120000000025}, {'diff': 0.0006721800000000014}, {'diff': 0.0006721810000000009}, {'diff': 0.0006721950000000004}, {'diff': 0.0006721660000000018}, {...</msg>
<status status="PASS" starttime="20201030 15:51:31.534" endtime="20201030 15:51:31.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.552" level="INFO">${RESULT} = {'diff': [0.0006721669999999944, 0.0006721120000000025, 0.0006721800000000014, 0.0006721810000000009, 0.0006721950000000004, 0.0006721660000000018, 0.0006721670000000013, 0.0006721670000000013, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:51:31.544" endtime="20201030 15:51:31.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.562" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:31.560" endtime="20201030 15:51:31.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.568" level="INFO">VALUE: [0.0006721669999999944, 0.0006721120000000025, 0.0006721800000000014, 0.0006721810000000009, 0.0006721950000000004, 0.0006721660000000018, 0.0006721670000000013, 0.0006721670000000013, 0.0006721799999999944, 0.0006721659999999949, 0.0006721809999999939, 0.0006721380000000027, 0.0006722220000000001, 0.0006721670000000013, 0.0006721950000000004, 0.0006721670000000013, 0.0006721390000000022, 0.0006721670000000013, 0.0006721529999999948, 0.0006721799999999944, 0.0006721669999999944, 0.0006721390000000022, 0.000672111000000003, 0.0006721530000000017, 0.000672209, 0.0006721530000000017, 0.0006721660000000018, 0.0006721810000000009, 0.0006721670000000013, 0.0006721800000000014, 0.0006721530000000017, 0.0006721669999999944, 0.0006721669999999944, 0.0006721530000000087, 0.0006721670000000013, 0.0006721809999999939, 0.0006721519999999953, 0.0006721669999999874, 0.0006721670000000013, 0.0006721799999999944, 0.0006721800000000083, 0.0006721670000000013, 0.0006721530000000087, 0.0006722220000000001, 0.0006721810000000078, 0.0006721670000000013, 0.0006721799999999944, 0.0006721799999999944, 0.0006721670000000013, 0.0006721390000000022]</msg>
<status status="PASS" starttime="20201030 15:51:31.565" endtime="20201030 15:51:31.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.554" endtime="20201030 15:51:31.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.586" endtime="20201030 15:51:31.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.576" endtime="20201030 15:51:31.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.573" endtime="20201030 15:51:31.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.062" endtime="20201030 15:51:31.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.061" endtime="20201030 15:51:31.611"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.632" endtime="20201030 15:51:31.680"></status>
</kw>
<msg timestamp="20201030 15:51:31.682" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.629" endtime="20201030 15:51:31.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.688" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.684" endtime="20201030 15:51:31.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.690" endtime="20201030 15:51:31.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.622" endtime="20201030 15:51:31.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.617" endtime="20201030 15:51:31.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.713" endtime="20201030 15:51:32.045"></status>
</kw>
<msg timestamp="20201030 15:51:32.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036991681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037696403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.710" endtime="20201030 15:51:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036991681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037696403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.054" endtime="20201030 15:51:32.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.072" endtime="20201030 15:51:32.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.703" endtime="20201030 15:51:32.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.698" endtime="20201030 15:51:32.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:32.088" level="INFO">${PHILIP_RES} = [{'diff': 0.0007047220000000048}, {'diff': 0.0007047080000000053}, {'diff': 0.000704749999999997}, {'diff': 0.0007047229999999974}, {'diff': 0.0007047080000000053}, {'diff': 0.0007047359999999975}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:32.080" endtime="20201030 15:51:32.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.098" level="INFO">${RESULT} = {'diff': [0.0007047220000000048, 0.0007047080000000053, 0.000704749999999997, 0.0007047229999999974, 0.0007047080000000053, 0.0007047359999999975, 0.0007047779999999962, 0.0007047220000000048, 0.00070...</msg>
<status status="PASS" starttime="20201030 15:51:32.090" endtime="20201030 15:51:32.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.109" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:32.106" endtime="20201030 15:51:32.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.114" level="INFO">VALUE: [0.0007047220000000048, 0.0007047080000000053, 0.000704749999999997, 0.0007047229999999974, 0.0007047080000000053, 0.0007047359999999975, 0.0007047779999999962, 0.0007047220000000048, 0.0007046520000000001, 0.0007047359999999975, 0.0007046800000000061, 0.000704639, 0.0007047229999999974, 0.000704749999999997, 0.0007047360000000044, 0.0007047359999999975, 0.0007047079999999983, 0.0007047230000000043, 0.0007047219999999979, 0.0007047229999999974, 0.000704750000000004, 0.0007047219999999979, 0.0007047359999999975, 0.0007047360000000044, 0.0007047640000000036, 0.0007047359999999975, 0.0007046669999999991, 0.0007046799999999992, 0.0007047359999999975, 0.0007047359999999975, 0.0007047080000000053, 0.0007047229999999974, 0.0007047219999999979, 0.000704736999999997, 0.0007047079999999983, 0.0007047359999999975, 0.0007047779999999892, 0.0007315269999999957, 0.0007047360000000114, 0.0007047770000000037, 0.000704721999999991, 0.0007047079999999983, 0.0007047359999999975, 0.0007047359999999975, 0.000704750000000004, 0.0007048060000000023, 0.0007046809999999987, 0.0007047220000000048, 0.0007047359999999975, 0.0007047230000000043]</msg>
<status status="PASS" starttime="20201030 15:51:32.111" endtime="20201030 15:51:32.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.100" endtime="20201030 15:51:32.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.126" endtime="20201030 15:51:32.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.122" endtime="20201030 15:51:32.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.119" endtime="20201030 15:51:32.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.613" endtime="20201030 15:51:32.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.611" endtime="20201030 15:51:32.151"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.172" endtime="20201030 15:51:32.221"></status>
</kw>
<msg timestamp="20201030 15:51:32.222" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.169" endtime="20201030 15:51:32.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.229" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.225" endtime="20201030 15:51:32.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.231" endtime="20201030 15:51:32.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.162" endtime="20201030 15:51:32.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.157" endtime="20201030 15:51:32.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.254" endtime="20201030 15:51:32.587"></status>
</kw>
<msg timestamp="20201030 15:51:32.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036719472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037457514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.251" endtime="20201030 15:51:32.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036719472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037457514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.597" endtime="20201030 15:51:32.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.615" endtime="20201030 15:51:32.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.244" endtime="20201030 15:51:32.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.239" endtime="20201030 15:51:32.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:32.630" level="INFO">${PHILIP_RES} = [{'diff': 0.0007380419999999943}, {'diff': 0.0007380280000000017}, {'diff': 0.0007380690000000009}, {'diff': 0.0007380700000000004}, {'diff': 0.0007380280000000017}, {'diff': 0.0007380550000000013}, {...</msg>
<status status="PASS" starttime="20201030 15:51:32.623" endtime="20201030 15:51:32.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.641" level="INFO">${RESULT} = {'diff': [0.0007380419999999943, 0.0007380280000000017, 0.0007380690000000009, 0.0007380700000000004, 0.0007380280000000017, 0.0007380550000000013, 0.0007380560000000008, 0.0007380550000000013, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:32.632" endtime="20201030 15:51:32.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.652" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:32.650" endtime="20201030 15:51:32.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.657" level="INFO">VALUE: [0.0007380419999999943, 0.0007380280000000017, 0.0007380690000000009, 0.0007380700000000004, 0.0007380280000000017, 0.0007380550000000013, 0.0007380560000000008, 0.0007380550000000013, 0.0007380410000000018, 0.0007380419999999943, 0.0007380560000000008, 0.0007380549999999944, 0.0007380560000000008, 0.0007380700000000004, 0.0007380410000000018, 0.0007380280000000017, 0.0007512920000000006, 0.0007380550000000013, 0.0007380830000000005, 0.0007380560000000008, 0.0007380410000000018, 0.0007381109999999996, 0.000738084, 0.0007380690000000009, 0.0007380549999999944, 0.0007380830000000005, 0.0007380139999999952, 0.0007380550000000013, 0.0007380420000000013, 0.0007381109999999996, 0.0007380410000000018, 0.0007380420000000013, 0.0007380000000000025, 0.0007380550000000013, 0.0007380969999999931, 0.0007380560000000008, 0.0007380830000000005, 0.0007380280000000017, 0.0007380560000000008, 0.0007380409999999948, 0.0007380419999999943, 0.0007380700000000073, 0.0007380409999999948, 0.0007380560000000008, 0.0007380560000000008, 0.000738068999999994, 0.0007380419999999943, 0.0007380279999999878, 0.0007380280000000017, 0.0007380279999999878]</msg>
<status status="PASS" starttime="20201030 15:51:32.654" endtime="20201030 15:51:32.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.643" endtime="20201030 15:51:32.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.669" endtime="20201030 15:51:32.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.665" endtime="20201030 15:51:32.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.663" endtime="20201030 15:51:32.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.153" endtime="20201030 15:51:32.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.152" endtime="20201030 15:51:32.694"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.716" endtime="20201030 15:51:32.767"></status>
</kw>
<msg timestamp="20201030 15:51:32.768" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.712" endtime="20201030 15:51:32.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.774" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.770" endtime="20201030 15:51:32.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.776" endtime="20201030 15:51:32.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.705" endtime="20201030 15:51:32.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.700" endtime="20201030 15:51:32.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.799" endtime="20201030 15:51:33.135"></status>
</kw>
<msg timestamp="20201030 15:51:33.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036821611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037593722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.796" endtime="20201030 15:51:33.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036821611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037593722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.145" endtime="20201030 15:51:33.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.163" endtime="20201030 15:51:33.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.789" endtime="20201030 15:51:33.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.784" endtime="20201030 15:51:33.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.179" level="INFO">${PHILIP_RES} = [{'diff': 0.0007721110000000059}, {'diff': 0.0007720829999999998}, {'diff': 0.0007721530000000046}, {'diff': 0.0007721669999999972}, {'diff': 0.0007721250000000054}, {'diff': 0.0007721529999999976}, {...</msg>
<status status="PASS" starttime="20201030 15:51:33.171" endtime="20201030 15:51:33.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.188" level="INFO">${RESULT} = {'diff': [0.0007721110000000059, 0.0007720829999999998, 0.0007721530000000046, 0.0007721669999999972, 0.0007721250000000054, 0.0007721529999999976, 0.0007721950000000033, 0.0007720829999999998, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:33.181" endtime="20201030 15:51:33.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.198" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.196" endtime="20201030 15:51:33.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.203" level="INFO">VALUE: [0.0007721110000000059, 0.0007720829999999998, 0.0007721530000000046, 0.0007721669999999972, 0.0007721250000000054, 0.0007721529999999976, 0.0007721950000000033, 0.0007720829999999998, 0.0007721249999999985, 0.000772222000000003, 0.0007721389999999981, 0.0007721389999999981, 0.0007721389999999981, 0.0007721250000000054, 0.0007721249999999985, 0.000772139000000005, 0.0007720699999999997, 0.0007721939999999969, 0.0007721529999999976, 0.0007721519999999982, 0.0007721379999999986, 0.0007721389999999981, 0.0007721380000000055, 0.0007721519999999982, 0.000772139000000005, 0.0007721109999999989, 0.000772139000000005, 0.0007721389999999981, 0.0007721109999999989, 0.0007721389999999981, 0.0007721529999999976, 0.0007720969999999994, 0.0007940560000000013, 0.0007721660000000047, 0.000772139000000005, 0.000772139000000005, 0.0007721519999999982, 0.0007720830000000067, 0.000772139000000005, 0.0007721529999999976, 0.0007721389999999911, 0.000772139000000005, 0.000772139000000005, 0.0007721249999999985, 0.0007720969999999994, 0.000772139000000005, 0.000772139000000005, 0.0007721389999999911, 0.0007721110000000059, 0.0007721389999999911]</msg>
<status status="PASS" starttime="20201030 15:51:33.200" endtime="20201030 15:51:33.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.189" endtime="20201030 15:51:33.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.216" endtime="20201030 15:51:33.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.211" endtime="20201030 15:51:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.209" endtime="20201030 15:51:33.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.696" endtime="20201030 15:51:33.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.695" endtime="20201030 15:51:33.240"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.262" endtime="20201030 15:51:33.317"></status>
</kw>
<msg timestamp="20201030 15:51:33.318" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.259" endtime="20201030 15:51:33.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.324" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.320" endtime="20201030 15:51:33.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.327" endtime="20201030 15:51:33.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.252" endtime="20201030 15:51:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.246" endtime="20201030 15:51:33.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.350" endtime="20201030 15:51:33.673"></status>
</kw>
<msg timestamp="20201030 15:51:33.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038628694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039435694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.346" endtime="20201030 15:51:33.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038628694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039435694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.677" endtime="20201030 15:51:33.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.685" endtime="20201030 15:51:33.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.339" endtime="20201030 15:51:33.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.335" endtime="20201030 15:51:33.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:33.692" level="INFO">${PHILIP_RES} = [{'diff': 0.0008070000000000022}, {'diff': 0.0008070000000000022}, {'diff': 0.0008069870000000021}, {'diff': 0.0008277910000000013}, {'diff': 0.000806972000000003}, {'diff': 0.0008069859999999957}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:33.689" endtime="20201030 15:51:33.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.696" level="INFO">${RESULT} = {'diff': [0.0008070000000000022, 0.0008070000000000022, 0.0008069870000000021, 0.0008277910000000013, 0.000806972000000003, 0.0008069859999999957, 0.0008069860000000026, 0.000806972000000003, 0.000807...</msg>
<status status="PASS" starttime="20201030 15:51:33.693" endtime="20201030 15:51:33.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.701" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:33.700" endtime="20201030 15:51:33.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.704" level="INFO">VALUE: [0.0008070000000000022, 0.0008070000000000022, 0.0008069870000000021, 0.0008277910000000013, 0.000806972000000003, 0.0008069859999999957, 0.0008069860000000026, 0.000806972000000003, 0.0008070000000000022, 0.0008070000000000022, 0.000806958999999996, 0.0008070000000000022, 0.0008069859999999957, 0.0008069860000000026, 0.0008069590000000029, 0.0008069860000000026, 0.0008069730000000025, 0.0008070560000000004, 0.0008069870000000021, 0.0008070270000000018, 0.0008070000000000022, 0.0008070000000000022, 0.0008069999999999952, 0.000806972000000003, 0.0008069999999999952, 0.000806972000000003, 0.0008069860000000026, 0.0008069450000000034, 0.0008070279999999874, 0.000806972000000003, 0.0008069719999999891, 0.0008070140000000087, 0.0008070000000000022, 0.0008069729999999886, 0.0008069860000000095, 0.0008070000000000022, 0.0008069859999999957, 0.0008069860000000095, 0.00080694399999999, 0.0008070130000000092, 0.0008069859999999957, 0.0008315980000000028, 0.0008069859999999957, 0.0008070280000000013, 0.000806972000000003, 0.0008069869999999951, 0.0008070000000000022, 0.0008069869999999951, 0.000806972000000003, 0.0008069859999999957]</msg>
<status status="PASS" starttime="20201030 15:51:33.703" endtime="20201030 15:51:33.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.697" endtime="20201030 15:51:33.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.717" endtime="20201030 15:51:33.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.714" endtime="20201030 15:51:33.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.712" endtime="20201030 15:51:33.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.242" endtime="20201030 15:51:33.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.241" endtime="20201030 15:51:33.742"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.764" endtime="20201030 15:51:33.819"></status>
</kw>
<msg timestamp="20201030 15:51:33.820" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.760" endtime="20201030 15:51:33.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.826" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.822" endtime="20201030 15:51:33.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.828" endtime="20201030 15:51:33.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.753" endtime="20201030 15:51:33.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.748" endtime="20201030 15:51:33.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.852" endtime="20201030 15:51:34.183"></status>
</kw>
<msg timestamp="20201030 15:51:34.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036864347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037706958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.848" endtime="20201030 15:51:34.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036864347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037706958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.192" endtime="20201030 15:51:34.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.210" endtime="20201030 15:51:34.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.841" endtime="20201030 15:51:34.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.837" endtime="20201030 15:51:34.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:34.226" level="INFO">${PHILIP_RES} = [{'diff': 0.0008426110000000001}, {'diff': 0.0008426249999999996}, {'diff': 0.0008425830000000009}, {'diff': 0.0008425970000000005}, {'diff': 0.0008426110000000001}, {'diff': 0.0008426110000000001}, {...</msg>
<status status="PASS" starttime="20201030 15:51:34.218" endtime="20201030 15:51:34.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.236" level="INFO">${RESULT} = {'diff': [0.0008426110000000001, 0.0008426249999999996, 0.0008425830000000009, 0.0008425970000000005, 0.0008426110000000001, 0.0008426110000000001, 0.0008426110000000001, 0.0008426119999999995, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:51:34.228" endtime="20201030 15:51:34.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.246" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:34.244" endtime="20201030 15:51:34.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.252" level="INFO">VALUE: [0.0008426110000000001, 0.0008426249999999996, 0.0008425830000000009, 0.0008425970000000005, 0.0008426110000000001, 0.0008426110000000001, 0.0008426110000000001, 0.0008426119999999995, 0.0008425840000000004, 0.0008425830000000009, 0.0008425830000000009, 0.0008425969999999935, 0.0008425970000000005, 0.0008425830000000009, 0.0008425970000000005, 0.0008426110000000001, 0.0008425419999999947, 0.0008425830000000009, 0.0008426110000000001, 0.0008425830000000009, 0.0008426110000000001, 0.0008426110000000001, 0.0008425970000000005, 0.0008426109999999931, 0.0008426110000000001, 0.000842598, 0.0008426389999999992, 0.0008425970000000005, 0.0008425970000000074, 0.000842611000000007, 0.0008683189999999924, 0.0008426109999999931, 0.0008426249999999996, 0.0008425970000000005, 0.0008425970000000005, 0.0008426109999999931, 0.0008426529999999988, 0.0008425970000000005, 0.0008426799999999984, 0.0008426249999999996, 0.0008426390000000061, 0.0008426249999999996, 0.0008425970000000005, 0.0008426249999999996, 0.000842611000000007, 0.0008426249999999996, 0.0008425830000000079, 0.000842598, 0.000842598, 0.000842598]</msg>
<status status="PASS" starttime="20201030 15:51:34.249" endtime="20201030 15:51:34.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.238" endtime="20201030 15:51:34.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.264" endtime="20201030 15:51:34.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.260" endtime="20201030 15:51:34.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.257" endtime="20201030 15:51:34.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.744" endtime="20201030 15:51:34.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.743" endtime="20201030 15:51:34.289"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.310" endtime="20201030 15:51:34.367"></status>
</kw>
<msg timestamp="20201030 15:51:34.368" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.307" endtime="20201030 15:51:34.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.374" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.370" endtime="20201030 15:51:34.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.377" endtime="20201030 15:51:34.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.300" endtime="20201030 15:51:34.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.295" endtime="20201030 15:51:34.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.400" endtime="20201030 15:51:34.731"></status>
</kw>
<msg timestamp="20201030 15:51:34.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036544903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037423875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.397" endtime="20201030 15:51:34.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036544903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037423875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.741" endtime="20201030 15:51:34.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.759" endtime="20201030 15:51:34.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.389" endtime="20201030 15:51:34.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.385" endtime="20201030 15:51:34.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:34.774" level="INFO">${PHILIP_RES} = [{'diff': 0.0008789720000000056}, {'diff': 0.0008789859999999983}, {'diff': 0.0008789860000000052}, {'diff': 0.0008789869999999977}, {'diff': 0.0008789719999999987}, {'diff': 0.0009057780000000029}, {...</msg>
<status status="PASS" starttime="20201030 15:51:34.767" endtime="20201030 15:51:34.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.785" level="INFO">${RESULT} = {'diff': [0.0008789720000000056, 0.0008789859999999983, 0.0008789860000000052, 0.0008789869999999977, 0.0008789719999999987, 0.0009057780000000029, 0.0008789859999999983, 0.0008789580000000061, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:51:34.776" endtime="20201030 15:51:34.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.796" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:34.793" endtime="20201030 15:51:34.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.801" level="INFO">VALUE: [0.0008789720000000056, 0.0008789859999999983, 0.0008789860000000052, 0.0008789869999999977, 0.0008789719999999987, 0.0009057780000000029, 0.0008789859999999983, 0.0008789580000000061, 0.0008789859999999983, 0.0008789580000000061, 0.0008790139999999974, 0.0008789720000000056, 0.0008789579999999991, 0.0008790000000000048, 0.0008789859999999983, 0.0008789730000000051, 0.0008789729999999982, 0.0008789860000000052, 0.0008789719999999987, 0.0008789720000000056, 0.00087893, 0.000878944999999999, 0.0008789859999999983, 0.0008790000000000048, 0.0008790139999999974, 0.0008790000000000048, 0.0008789729999999982, 0.0008789860000000052, 0.0008789999999999909, 0.0008789859999999983, 0.0008790000000000048, 0.0008789729999999912, 0.0008789730000000051, 0.0008789999999999909, 0.0008789719999999918, 0.0008789859999999983, 0.0008789870000000116, 0.0008789859999999983, 0.0008789719999999918, 0.0008789719999999918, 0.0009078889999999951, 0.0008789440000000065, 0.0008789869999999977, 0.0008789720000000056, 0.0008789719999999918, 0.0008789859999999983, 0.0008789719999999918, 0.0008789859999999983, 0.0008789729999999912, 0.0008789719999999918]</msg>
<status status="PASS" starttime="20201030 15:51:34.798" endtime="20201030 15:51:34.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.787" endtime="20201030 15:51:34.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.813" endtime="20201030 15:51:34.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.809" endtime="20201030 15:51:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.807" endtime="20201030 15:51:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.291" endtime="20201030 15:51:34.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.290" endtime="20201030 15:51:34.838"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.860" endtime="20201030 15:51:34.919"></status>
</kw>
<msg timestamp="20201030 15:51:34.920" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.856" endtime="20201030 15:51:34.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.926" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.922" endtime="20201030 15:51:34.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.928" endtime="20201030 15:51:34.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.849" endtime="20201030 15:51:34.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.844" endtime="20201030 15:51:34.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.952" endtime="20201030 15:51:35.319"></status>
</kw>
<msg timestamp="20201030 15:51:35.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037112597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038028736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.948" endtime="20201030 15:51:35.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037112597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038028736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.328" endtime="20201030 15:51:35.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.346" endtime="20201030 15:51:35.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.941" endtime="20201030 15:51:35.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.936" endtime="20201030 15:51:35.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.362" level="INFO">${PHILIP_RES} = [{'diff': 0.0009161390000000033}, {'diff': 0.0009161249999999968}, {'diff': 0.0009160700000000049}, {'diff': 0.0009161109999999972}, {'diff': 0.0009160419999999989}, {'diff': 0.0009161250000000037}, {...</msg>
<status status="PASS" starttime="20201030 15:51:35.354" endtime="20201030 15:51:35.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.371" level="INFO">${RESULT} = {'diff': [0.0009161390000000033, 0.0009161249999999968, 0.0009160700000000049, 0.0009161109999999972, 0.0009160419999999989, 0.0009161250000000037, 0.0009161249999999968, 0.0009161110000000042, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:35.364" endtime="20201030 15:51:35.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.381" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.379" endtime="20201030 15:51:35.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.386" level="INFO">VALUE: [0.0009161390000000033, 0.0009161249999999968, 0.0009160700000000049, 0.0009161109999999972, 0.0009160419999999989, 0.0009161250000000037, 0.0009161249999999968, 0.0009161110000000042, 0.0009161249999999968, 0.0009161109999999972, 0.0009161250000000037, 0.0009161249999999968, 0.0009160970000000046, 0.000927264000000004, 0.0009161249999999968, 0.0009161249999999968, 0.0009161250000000037, 0.0009161109999999972, 0.0009161250000000037, 0.0009161109999999972, 0.0009160829999999981, 0.000916181000000002, 0.0009161109999999972, 0.000916181000000002, 0.0009161390000000033, 0.0009161389999999964, 0.0009161249999999968, 0.0009161250000000037, 0.0009161669999999955, 0.0009161109999999972, 0.0009161390000000103, 0.0009161249999999899, 0.0009161530000000029, 0.0009160689999999916, 0.0009161249999999899, 0.0009160559999999984, 0.0009161669999999955, 0.0009160839999999976, 0.0009161390000000103, 0.0009161250000000037, 0.0009161250000000037, 0.0009161389999999964, 0.0009161249999999899, 0.0009161250000000037, 0.0009161389999999964, 0.0009160699999999911, 0.0009456379999999986, 0.0009161389999999964, 0.0009161249999999899, 0.0009161250000000037]</msg>
<status status="PASS" starttime="20201030 15:51:35.383" endtime="20201030 15:51:35.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.373" endtime="20201030 15:51:35.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.399" endtime="20201030 15:51:35.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.394" endtime="20201030 15:51:35.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.392" endtime="20201030 15:51:35.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.840" endtime="20201030 15:51:35.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.839" endtime="20201030 15:51:35.424"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.445" endtime="20201030 15:51:35.507"></status>
</kw>
<msg timestamp="20201030 15:51:35.508" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.442" endtime="20201030 15:51:35.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.515" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.511" endtime="20201030 15:51:35.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.517" endtime="20201030 15:51:35.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.435" endtime="20201030 15:51:35.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.430" endtime="20201030 15:51:35.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.540" endtime="20201030 15:51:35.873"></status>
</kw>
<msg timestamp="20201030 15:51:35.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038583833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039537847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.537" endtime="20201030 15:51:35.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038583833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039537847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.883" endtime="20201030 15:51:35.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.901" endtime="20201030 15:51:35.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.530" endtime="20201030 15:51:35.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.525" endtime="20201030 15:51:35.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:35.916" level="INFO">${PHILIP_RES} = [{'diff': 0.000954014000000003}, {'diff': 0.0009540420000000022}, {'diff': 0.0009540559999999948}, {'diff': 0.0009540420000000022}, {'diff': 0.0009540420000000022}, {'diff': 0.0009540280000000026}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:35.909" endtime="20201030 15:51:35.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.926" level="INFO">${RESULT} = {'diff': [0.000954014000000003, 0.0009540420000000022, 0.0009540559999999948, 0.0009540420000000022, 0.0009540420000000022, 0.0009540280000000026, 0.0009540420000000022, 0.0009540139999999961, 0.00095...</msg>
<status status="PASS" starttime="20201030 15:51:35.919" endtime="20201030 15:51:35.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.936" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:35.934" endtime="20201030 15:51:35.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.941" level="INFO">VALUE: [0.000954014000000003, 0.0009540420000000022, 0.0009540559999999948, 0.0009540420000000022, 0.0009540420000000022, 0.0009540280000000026, 0.0009540420000000022, 0.0009540139999999961, 0.0009540280000000026, 0.0009540270000000031, 0.0009540420000000022, 0.0009540829999999945, 0.0009540279999999957, 0.000954014000000003, 0.0009539730000000038, 0.0009743470000000004, 0.0009540139999999961, 0.0009540280000000026, 0.0009541250000000001, 0.0009540420000000022, 0.0009540559999999948, 0.0009540690000000018, 0.0009540280000000026, 0.0009540409999999958, 0.000954014000000003, 0.0009540410000000027, 0.0009540420000000022, 0.0009540409999999888, 0.0009540830000000083, 0.0009539580000000047, 0.0009540420000000022, 0.0009540279999999957, 0.0009539999999999965, 0.0009540700000000013, 0.0009540280000000095, 0.0009540559999999948, 0.0009540410000000027, 0.0009540279999999957, 0.0009540410000000027, 0.0009540280000000095, 0.0009540410000000027, 0.0009540700000000013, 0.0009540410000000027, 0.0009540560000000087, 0.0009540280000000095, 0.0009540280000000095, 0.0009540279999999957, 0.0009829719999999986, 0.0009540409999999888, 0.0009540279999999957]</msg>
<status status="PASS" starttime="20201030 15:51:35.938" endtime="20201030 15:51:35.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.927" endtime="20201030 15:51:35.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.955" endtime="20201030 15:51:35.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.949" endtime="20201030 15:51:35.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.947" endtime="20201030 15:51:35.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.426" endtime="20201030 15:51:35.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.424" endtime="20201030 15:51:35.980"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.002" endtime="20201030 15:51:36.064"></status>
</kw>
<msg timestamp="20201030 15:51:36.065" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.998" endtime="20201030 15:51:36.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.071" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.067" endtime="20201030 15:51:36.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.073" endtime="20201030 15:51:36.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.991" endtime="20201030 15:51:36.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.986" endtime="20201030 15:51:36.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.097" endtime="20201030 15:51:36.429"></status>
</kw>
<msg timestamp="20201030 15:51:36.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036942069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037934778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.093" endtime="20201030 15:51:36.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036942069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037934778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.438" endtime="20201030 15:51:36.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.456" endtime="20201030 15:51:36.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.086" endtime="20201030 15:51:36.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.081" endtime="20201030 15:51:36.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:36.472" level="INFO">${PHILIP_RES} = [{'diff': 0.0009927090000000013}, {'diff': 0.0009927080000000019}, {'diff': 0.0009926950000000018}, {'diff': 0.0009927080000000019}, {'diff': 0.0009926950000000018}, {'diff': 0.0009926939999999954}, {...</msg>
<status status="PASS" starttime="20201030 15:51:36.464" endtime="20201030 15:51:36.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.482" level="INFO">${RESULT} = {'diff': [0.0009927090000000013, 0.0009927080000000019, 0.0009926950000000018, 0.0009927080000000019, 0.0009926950000000018, 0.0009926939999999954, 0.0009927220000000014, 0.0009927090000000013, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:36.474" endtime="20201030 15:51:36.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.492" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:36.490" endtime="20201030 15:51:36.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.498" level="INFO">VALUE: [0.0009927090000000013, 0.0009927080000000019, 0.0009926950000000018, 0.0009927080000000019, 0.0009926950000000018, 0.0009926939999999954, 0.0009927220000000014, 0.0009927090000000013, 0.0009927220000000014, 0.0009926949999999948, 0.0009926109999999974, 0.000992707999999995, 0.0009927089999999944, 0.000992707999999995, 0.0009927089999999944, 0.0009927219999999945, 0.000992624999999997, 0.0010075559999999997, 0.0009926800000000027, 0.0009926950000000018, 0.0009927080000000019, 0.0009927090000000013, 0.0009926799999999958, 0.0009926940000000023, 0.0009927219999999945, 0.0009926940000000023, 0.0009926950000000018, 0.0009926940000000023, 0.0009927089999999944, 0.0009926809999999953, 0.0009927220000000014, 0.0009926670000000026, 0.0009927220000000014, 0.0009926810000000091, 0.0009926799999999958, 0.0009927089999999944, 0.0009927220000000014, 0.0009927220000000014, 0.000992707999999995, 0.000992707999999995, 0.0009927089999999944, 0.0009926940000000023, 0.0009927089999999944, 0.0009927220000000014, 0.0009926520000000105, 0.0009926940000000023, 0.0009926939999999884, 0.0009926950000000018, 0.001014082999999999, 0.0009926950000000018]</msg>
<status status="PASS" starttime="20201030 15:51:36.495" endtime="20201030 15:51:36.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.484" endtime="20201030 15:51:36.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.510" endtime="20201030 15:51:36.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.506" endtime="20201030 15:51:36.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.503" endtime="20201030 15:51:36.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.982" endtime="20201030 15:51:36.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.981" endtime="20201030 15:51:36.535"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.557" endtime="20201030 15:51:36.621"></status>
</kw>
<msg timestamp="20201030 15:51:36.622" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.553" endtime="20201030 15:51:36.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.628" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.624" endtime="20201030 15:51:36.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.631" endtime="20201030 15:51:36.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.546" endtime="20201030 15:51:36.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.541" endtime="20201030 15:51:36.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.654" endtime="20201030 15:51:36.995"></status>
</kw>
<msg timestamp="20201030 15:51:37.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036855556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037887639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.651" endtime="20201030 15:51:37.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036855556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037887639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.004" endtime="20201030 15:51:37.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.022" endtime="20201030 15:51:37.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.644" endtime="20201030 15:51:37.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.639" endtime="20201030 15:51:37.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.038" level="INFO">${PHILIP_RES} = [{'diff': 0.001032083000000003}, {'diff': 0.001032153000000001}, {'diff': 0.001032137999999995}, {'diff': 0.0010321110000000022}, {'diff': 0.0010321250000000018}, {'diff': 0.0010321389999999944}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:37.030" endtime="20201030 15:51:37.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.052" level="INFO">${RESULT} = {'diff': [0.001032083000000003, 0.001032153000000001, 0.001032137999999995, 0.0010321110000000022, 0.0010321250000000018, 0.0010321389999999944, 0.001032070000000003, 0.001032181, 0.001032152999999994...</msg>
<status status="PASS" starttime="20201030 15:51:37.040" endtime="20201030 15:51:37.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.063" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.061" endtime="20201030 15:51:37.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.068" level="INFO">VALUE: [0.001032083000000003, 0.001032153000000001, 0.001032137999999995, 0.0010321110000000022, 0.0010321250000000018, 0.0010321389999999944, 0.001032070000000003, 0.001032181, 0.001032152999999994, 0.0010321380000000019, 0.0010321390000000014, 0.0010321389999999944, 0.0010320969999999957, 0.0010321800000000006, 0.001032181, 0.0010320969999999957, 0.0010321380000000019, 0.0010321390000000014, 0.001058930999999999, 0.001032152999999994, 0.0010321390000000014, 0.0010321380000000019, 0.0010321249999999949, 0.001032153000000001, 0.0010320829999999892, 0.0010321390000000014, 0.001032152999999994, 0.0010321390000000014, 0.0010321250000000087, 0.0010321110000000022, 0.0010321390000000014, 0.0010321949999999996, 0.0010321390000000014, 0.0010321250000000087, 0.0010321530000000079, 0.0010321380000000019, 0.0010321390000000014, 0.0010321390000000014, 0.0010321250000000087, 0.0010321390000000014, 0.001032152999999994, 0.0010321249999999949, 0.0010321249999999949, 0.001032098000000009, 0.0010321249999999949, 0.0010321110000000022, 0.0010321519999999945, 0.0010320979999999952, 0.001060013999999998, 0.0010320829999999892]</msg>
<status status="PASS" starttime="20201030 15:51:37.065" endtime="20201030 15:51:37.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.054" endtime="20201030 15:51:37.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.080" endtime="20201030 15:51:37.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.076" endtime="20201030 15:51:37.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.074" endtime="20201030 15:51:37.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.537" endtime="20201030 15:51:37.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.536" endtime="20201030 15:51:37.105"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.127" endtime="20201030 15:51:37.193"></status>
</kw>
<msg timestamp="20201030 15:51:37.195" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.123" endtime="20201030 15:51:37.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.201" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.197" endtime="20201030 15:51:37.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.203" endtime="20201030 15:51:37.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.116" endtime="20201030 15:51:37.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.111" endtime="20201030 15:51:37.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.226" endtime="20201030 15:51:37.574"></status>
</kw>
<msg timestamp="20201030 15:51:37.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037114764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038187056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.223" endtime="20201030 15:51:37.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037114764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038187056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.583" endtime="20201030 15:51:37.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.601" endtime="20201030 15:51:37.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.216" endtime="20201030 15:51:37.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.211" endtime="20201030 15:51:37.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:37.617" level="INFO">${PHILIP_RES} = [{'diff': 0.0010722919999999955}, {'diff': 0.0010723480000000007}, {'diff': 0.0010723340000000012}, {'diff': 0.0010723470000000013}, {'diff': 0.0010723480000000007}, {'diff': 0.0010723480000000007}, {...</msg>
<status status="PASS" starttime="20201030 15:51:37.610" endtime="20201030 15:51:37.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.626" level="INFO">${RESULT} = {'diff': [0.0010722919999999955, 0.0010723480000000007, 0.0010723340000000012, 0.0010723470000000013, 0.0010723480000000007, 0.0010723480000000007, 0.0010861250000000003, 0.0010723330000000017, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:51:37.619" endtime="20201030 15:51:37.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.637" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:37.634" endtime="20201030 15:51:37.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.642" level="INFO">VALUE: [0.0010722919999999955, 0.0010723480000000007, 0.0010723340000000012, 0.0010723470000000013, 0.0010723480000000007, 0.0010723480000000007, 0.0010861250000000003, 0.0010723330000000017, 0.0010723189999999952, 0.0010723330000000017, 0.0010723470000000013, 0.0010723610000000008, 0.0010723470000000013, 0.0010723340000000012, 0.0010723340000000012, 0.0010723340000000012, 0.0010723470000000013, 0.0010723200000000016, 0.0010723340000000012, 0.0010723340000000012, 0.0010723340000000012, 0.001072306000000002, 0.0010723480000000007, 0.0010723339999999942, 0.0010723480000000007, 0.0010723340000000081, 0.0010723339999999942, 0.0010723470000000013, 0.0010723329999999948, 0.0010723480000000007, 0.0010723200000000016, 0.0010723200000000016, 0.0010723329999999948, 0.0010723190000000021, 0.0010723330000000086, 0.0010828890000000035, 0.001072305999999995, 0.0010723619999999934, 0.0010723480000000007, 0.0010723340000000081, 0.0010723339999999942, 0.0010723340000000081, 0.0010723340000000081, 0.0010723339999999942, 0.0010723199999999877, 0.0010723329999999948, 0.0010722640000000033, 0.0010723470000000013, 0.0010723470000000013, 0.0010723190000000021]</msg>
<status status="PASS" starttime="20201030 15:51:37.639" endtime="20201030 15:51:37.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.628" endtime="20201030 15:51:37.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.655" endtime="20201030 15:51:37.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.650" endtime="20201030 15:51:37.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.648" endtime="20201030 15:51:37.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.107" endtime="20201030 15:51:37.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.106" endtime="20201030 15:51:37.680"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.701" endtime="20201030 15:51:37.771"></status>
</kw>
<msg timestamp="20201030 15:51:37.772" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.698" endtime="20201030 15:51:37.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.778" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.774" endtime="20201030 15:51:37.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.781" endtime="20201030 15:51:37.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.691" endtime="20201030 15:51:37.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.686" endtime="20201030 15:51:37.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.804" endtime="20201030 15:51:38.149"></status>
</kw>
<msg timestamp="20201030 15:51:38.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038649528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.801" endtime="20201030 15:51:38.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038649528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039762875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.158" endtime="20201030 15:51:38.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.176" endtime="20201030 15:51:38.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.793" endtime="20201030 15:51:38.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.789" endtime="20201030 15:51:38.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:38.192" level="INFO">${PHILIP_RES} = [{'diff': 0.0011133470000000006}, {'diff': 0.001113291999999995}, {'diff': 0.0011132779999999953}, {'diff': 0.001113291999999995}, {'diff': 0.0011133059999999945}, {'diff': 0.0011133060000000014}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:38.185" endtime="20201030 15:51:38.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.201" level="INFO">${RESULT} = {'diff': [0.0011133470000000006, 0.001113291999999995, 0.0011132779999999953, 0.001113291999999995, 0.0011133059999999945, 0.0011133060000000014, 0.0011132910000000024, 0.0011133060000000014, 0.001113...</msg>
<status status="PASS" starttime="20201030 15:51:38.194" endtime="20201030 15:51:38.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.211" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:38.209" endtime="20201030 15:51:38.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.217" level="INFO">VALUE: [0.0011133470000000006, 0.001113291999999995, 0.0011132779999999953, 0.001113291999999995, 0.0011133059999999945, 0.0011133060000000014, 0.0011132910000000024, 0.0011133060000000014, 0.0011132910000000024, 0.0011132359999999966, 0.0011132920000000018, 0.001113305000000002, 0.0011133749999999998, 0.0011132360000000036, 0.001113305000000002, 0.0011133060000000014, 0.0011132780000000023, 0.0011455140000000003, 0.001113305000000002, 0.0011133060000000014, 0.001113333000000001, 0.0011132910000000024, 0.0011132080000000044, 0.0011133190000000015, 0.001113304999999995, 0.0011132359999999897, 0.0011133059999999945, 0.0011133470000000006, 0.001113320000000001, 0.0011132779999999953, 0.0011132780000000092, 0.0011132920000000018, 0.0011133190000000015, 0.0011133050000000089, 0.0011132920000000018, 0.0011132910000000024, 0.0011132920000000018, 0.0011132920000000018, 0.0011133050000000089, 0.0011133059999999945, 0.0011132779999999953, 0.0011133190000000015, 0.0011132920000000018, 0.0011133060000000083, 0.0011132640000000027, 0.001143959, 0.0011132499999999962, 0.0011132909999999885, 0.0011132920000000018, 0.001113291999999988]</msg>
<status status="PASS" starttime="20201030 15:51:38.214" endtime="20201030 15:51:38.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.203" endtime="20201030 15:51:38.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.231" endtime="20201030 15:51:38.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.225" endtime="20201030 15:51:38.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.222" endtime="20201030 15:51:38.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.682" endtime="20201030 15:51:38.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.681" endtime="20201030 15:51:38.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:11.455" endtime="20201030 15:51:38.256"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:07.403" endtime="20201030 15:51:38.258" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:50:35.709" endtime="20201030 15:51:38.280"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.457" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:38.473" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:39.177" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:38.453" endtime="20201030 15:51:39.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.184" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:51:39.181" endtime="20201030 15:51:42.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.450" endtime="20201030 15:51:42.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.191" endtime="20201030 15:51:42.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.189" endtime="20201030 15:51:42.521"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.551" endtime="20201030 15:51:42.572"></status>
</kw>
<msg timestamp="20201030 15:51:42.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.547" endtime="20201030 15:51:42.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.576" endtime="20201030 15:51:42.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.587" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:42.582" endtime="20201030 15:51:42.587"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.541" endtime="20201030 15:51:42.589"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.536" endtime="20201030 15:51:42.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.533" endtime="20201030 15:51:42.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:42.601" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:42.600" endtime="20201030 15:51:42.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.593" endtime="20201030 15:51:42.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.531" endtime="20201030 15:51:42.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.530" endtime="20201030 15:51:42.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.605" endtime="20201030 15:51:42.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.526" endtime="20201030 15:51:42.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.611" endtime="20201030 15:51:42.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.523" endtime="20201030 15:51:42.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.448" endtime="20201030 15:51:42.618"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.632" endtime="20201030 15:51:42.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.628" endtime="20201030 15:51:42.659"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.708" endtime="20201030 15:51:42.726"></status>
</kw>
<msg timestamp="20201030 15:51:42.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.704" endtime="20201030 15:51:42.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.733" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.729" endtime="20201030 15:51:42.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.740" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:42.736" endtime="20201030 15:51:42.741"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.697" endtime="20201030 15:51:42.743"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.687" endtime="20201030 15:51:42.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.680" endtime="20201030 15:51:42.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:42.753" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:42.751" endtime="20201030 15:51:42.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.747" endtime="20201030 15:51:42.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.677" endtime="20201030 15:51:42.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.674" endtime="20201030 15:51:42.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.756" endtime="20201030 15:51:42.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.667" endtime="20201030 15:51:42.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.661" endtime="20201030 15:51:42.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.625" endtime="20201030 15:51:42.763"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.790" endtime="20201030 15:51:42.807"></status>
</kw>
<msg timestamp="20201030 15:51:42.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.786" endtime="20201030 15:51:42.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.811" endtime="20201030 15:51:42.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.817" endtime="20201030 15:51:42.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.777" endtime="20201030 15:51:42.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.772" endtime="20201030 15:51:42.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.845" endtime="20201030 15:51:43.267"></status>
</kw>
<msg timestamp="20201030 15:51:43.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.150906181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.150909069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.841" endtime="20201030 15:51:43.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.150906181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.150909069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.277" endtime="20201030 15:51:43.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.296" endtime="20201030 15:51:43.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.833" endtime="20201030 15:51:43.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.828" endtime="20201030 15:51:43.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.313" level="INFO">${RESULT} = [{'diff': 2.888000000006441e-06}, {'diff': 2.9169999999911767e-06}, {'diff': 3.4309999999981855e-06}, {'diff': 3.4309999999981855e-06}, {'diff': 3.429999999998712e-06}, {'diff': 4.000000000004e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:43.304" endtime="20201030 15:51:43.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:43.322" level="INFO">${ACCURACY} = {'diff': [2.888000000006441e-06, 2.9169999999911767e-06, 3.4309999999981855e-06, 3.4309999999981855e-06, 3.429999999998712e-06, 4.000000000004e-06, 3.4309999999981855e-06, 3.445000000018572e-06, 2.930...</msg>
<status status="PASS" starttime="20201030 15:51:43.315" endtime="20201030 15:51:43.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.339" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:51:43.336" endtime="20201030 15:51:43.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.351" level="INFO">VALUE: [2.888000000006441e-06, 2.9169999999911767e-06, 3.4309999999981855e-06, 3.4309999999981855e-06, 3.429999999998712e-06, 4.000000000004e-06, 3.4309999999981855e-06, 3.445000000018572e-06, 2.9309999999838077e-06, 3.4309999999981855e-06, 3.443999999991343e-06, 3.4309999999981855e-06, 2.915999999991703e-06, 2.8329999999798794e-06, 3.4309999999981855e-06, 2.8890000000059146e-06, 3.4859999999969915e-06, 2.9029999999985456e-06, 3.4309999999981855e-06, 2.9029999999985456e-06, 3.402999999985168e-06, 2.9029999999985456e-06, 2.8890000000059146e-06, 3.957999999998352e-06, 2.9579999999973516e-06, 3.429999999998712e-06, 3.429999999998712e-06, 2.9029999999985456e-06, 2.8890000000059146e-06, 3.416000000006081e-06, 3.429999999998712e-06, 3.4030000000129235e-06, 2.9719999999899827e-06, 2.9170000000189322e-06, 3.429999999998712e-06, 2.9029999999985456e-06, 3.972000000018738e-06, 2.833000000007635e-06, 3.4309999999981855e-06, 2.8890000000059146e-06, 2.9160000000194586e-06, 3.429999999998712e-06, 3.416000000006081e-06, 2.9029999999985456e-06, 3.416999999977799e-06, 3.445000000018572e-06, 2.9029999999985456e-06, 2.9029999999985456e-06, 3.4440000000190985e-06, 3.443999999991343e-06]</msg>
<status status="PASS" starttime="20201030 15:51:43.347" endtime="20201030 15:51:43.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.324" endtime="20201030 15:51:43.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.370" endtime="20201030 15:51:43.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.364" endtime="20201030 15:51:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.361" endtime="20201030 15:51:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.767" endtime="20201030 15:51:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.766" endtime="20201030 15:51:43.395"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.418" endtime="20201030 15:51:43.435"></status>
</kw>
<msg timestamp="20201030 15:51:43.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.414" endtime="20201030 15:51:43.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.438" endtime="20201030 15:51:43.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.444" endtime="20201030 15:51:43.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.407" endtime="20201030 15:51:43.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.402" endtime="20201030 15:51:43.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.468" endtime="20201030 15:51:43.804"></status>
</kw>
<msg timestamp="20201030 15:51:43.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040900597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040905097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.465" endtime="20201030 15:51:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040900597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040905097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.814" endtime="20201030 15:51:43.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.832" endtime="20201030 15:51:43.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.458" endtime="20201030 15:51:43.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.453" endtime="20201030 15:51:43.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:43.849" level="INFO">${RESULT} = [{'diff': 4.5000000000045e-06}, {'diff': 4.027999999996201e-06}, {'diff': 3.916999999999116e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.4449999999987555e-06}, {'diff': 3.957999999998352e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:43.841" endtime="20201030 15:51:43.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:43.860" level="INFO">${ACCURACY} = {'diff': [4.5000000000045e-06, 4.027999999996201e-06, 3.916999999999116e-06, 4.485999999997992e-06, 4.4449999999987555e-06, 3.957999999998352e-06, 3.957999999998352e-06, 4.4860000000049305e-06, 3.9719...</msg>
<status status="PASS" starttime="20201030 15:51:43.852" endtime="20201030 15:51:43.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.871" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:51:43.869" endtime="20201030 15:51:43.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.877" level="INFO">VALUE: [4.5000000000045e-06, 4.027999999996201e-06, 3.916999999999116e-06, 4.485999999997992e-06, 4.4449999999987555e-06, 3.957999999998352e-06, 3.957999999998352e-06, 4.4860000000049305e-06, 3.971999999997922e-06, 3.957999999998352e-06, 4.5000000000045e-06, 3.971999999997922e-06, 4.471999999998422e-06, 3.971999999997922e-06, 3.957999999998352e-06, 3.971999999997922e-06, 3.9720000000048605e-06, 3.929999999999212e-06, 3.957999999998352e-06, 4.01400000000357e-06, 3.971999999997922e-06, 3.958999999997825e-06, 3.943999999998782e-06, 3.957999999998352e-06, 4.5000000000045e-06, 3.957999999998352e-06, 4.457999999998852e-06, 3.930000000006151e-06, 4.485999999997992e-06, 4.4999999999975615e-06, 3.943999999998782e-06, 3.957999999998352e-06, 4.4860000000049305e-06, 4.443999999999282e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.5000000000045e-06, 4.4999999999975615e-06, 4.430999999999186e-06, 3.971999999997922e-06, 4.4860000000049305e-06, 4.55600000000278e-06, 3.958000000005291e-06, 4.485999999997992e-06, 4.555000000003306e-06, 4.485999999997992e-06, 4.471999999998422e-06, 4.472999999997895e-06, 3.973000000004334e-06]</msg>
<status status="PASS" starttime="20201030 15:51:43.874" endtime="20201030 15:51:43.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.862" endtime="20201030 15:51:43.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:43.889" endtime="20201030 15:51:43.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.885" endtime="20201030 15:51:43.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.882" endtime="20201030 15:51:43.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.397" endtime="20201030 15:51:43.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.396" endtime="20201030 15:51:43.914"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.937" endtime="20201030 15:51:43.955"></status>
</kw>
<msg timestamp="20201030 15:51:43.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.933" endtime="20201030 15:51:43.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:43.958" endtime="20201030 15:51:43.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.966" endtime="20201030 15:51:43.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.926" endtime="20201030 15:51:43.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.920" endtime="20201030 15:51:43.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:43.990" endtime="20201030 15:51:44.329"></status>
</kw>
<msg timestamp="20201030 15:51:44.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040847208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040852264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:43.987" endtime="20201030 15:51:44.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040847208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040852264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.339" endtime="20201030 15:51:44.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.358" endtime="20201030 15:51:44.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.979" endtime="20201030 15:51:44.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.974" endtime="20201030 15:51:44.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.375" level="INFO">${RESULT} = [{'diff': 5.055999999996341e-06}, {'diff': 5.569999999996411e-06}, {'diff': 5.012999999998158e-06}, {'diff': 5.08400000000242e-06}, {'diff': 5.027999999997201e-06}, {'diff': 5.02800000000414e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:44.366" endtime="20201030 15:51:44.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:44.386" level="INFO">${ACCURACY} = {'diff': [5.055999999996341e-06, 5.569999999996411e-06, 5.012999999998158e-06, 5.08400000000242e-06, 5.027999999997201e-06, 5.02800000000414e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.54200...</msg>
<status status="PASS" starttime="20201030 15:51:44.377" endtime="20201030 15:51:44.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.397" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:51:44.394" endtime="20201030 15:51:44.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.402" level="INFO">VALUE: [5.055999999996341e-06, 5.569999999996411e-06, 5.012999999998158e-06, 5.08400000000242e-06, 5.027999999997201e-06, 5.02800000000414e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 5.54200000000421e-06, 5.01400000000457e-06, 5.01400000000457e-06, 5.541999999997271e-06, 5.027999999997201e-06, 4.9999999999980616e-06, 4.9589999999988255e-06, 4.472999999997895e-06, 5.026999999997728e-06, 5.526999999998228e-06, 5.527999999997701e-06, 5.52800000000464e-06, 4.943999999999782e-06, 5.012999999998158e-06, 5.499999999998562e-06, 5.097000000002516e-06, 5.52800000000464e-06, 5.013000000005097e-06, 5.5139999999981315e-06, 5.55600000000378e-06, 5.041999999996771e-06, 5.027999999997201e-06, 5.01400000000457e-06, 5.02800000000414e-06, 5.02800000000414e-06, 5.01400000000457e-06, 5.0139999999976315e-06, 5.540999999997798e-06, 5.0549999999968676e-06, 5.541999999997271e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 5.569999999996411e-06, 5.0139999999976315e-06, 5.0000000000050004e-06, 5.0139999999976315e-06, 5.0139999999976315e-06, 5.54200000000421e-06, 5.485999999998992e-06, 5.541999999997271e-06, 5.555999999996841e-06, 5.555999999996841e-06]</msg>
<status status="PASS" starttime="20201030 15:51:44.399" endtime="20201030 15:51:44.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.388" endtime="20201030 15:51:44.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.414" endtime="20201030 15:51:44.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.410" endtime="20201030 15:51:44.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.407" endtime="20201030 15:51:44.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.916" endtime="20201030 15:51:44.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.915" endtime="20201030 15:51:44.439"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.462" endtime="20201030 15:51:44.479"></status>
</kw>
<msg timestamp="20201030 15:51:44.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.458" endtime="20201030 15:51:44.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.483" endtime="20201030 15:51:44.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.489" endtime="20201030 15:51:44.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.451" endtime="20201030 15:51:44.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.445" endtime="20201030 15:51:44.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.512" endtime="20201030 15:51:44.851"></status>
</kw>
<msg timestamp="20201030 15:51:44.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041223917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.509" endtime="20201030 15:51:44.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041217319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041223917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.862" endtime="20201030 15:51:44.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.881" endtime="20201030 15:51:44.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.502" endtime="20201030 15:51:44.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.497" endtime="20201030 15:51:44.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.898" level="INFO">${RESULT} = [{'diff': 6.597999999996551e-06}, {'diff': 6.597000000004016e-06}, {'diff': 5.541999999997271e-06}, {'diff': 5.499999999998562e-06}, {'diff': 6.597000000004016e-06}, {'diff': 6.611000000003586e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:44.889" endtime="20201030 15:51:44.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:44.908" level="INFO">${ACCURACY} = {'diff': [6.597999999996551e-06, 6.597000000004016e-06, 5.541999999997271e-06, 5.499999999998562e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.069999999996911e-06, 6.583999999996981e-06, 6.5830...</msg>
<status status="PASS" starttime="20201030 15:51:44.900" endtime="20201030 15:51:44.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.918" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:51:44.916" endtime="20201030 15:51:44.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.924" level="INFO">VALUE: [6.597999999996551e-06, 6.597000000004016e-06, 5.541999999997271e-06, 5.499999999998562e-06, 6.597000000004016e-06, 6.611000000003586e-06, 6.069999999996911e-06, 6.583999999996981e-06, 6.583000000004446e-06, 6.611000000003586e-06, 6.611000000003586e-06, 6.5829999999975075e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.5829999999975075e-06, 6.5969999999970774e-06, 6.040999999998298e-06, 6.0690000000043764e-06, 6.5969999999970774e-06, 6.0829999999970075e-06, 6.0690000000043764e-06, 6.5829999999975075e-06, 6.5969999999970774e-06, 6.041999999997771e-06, 6.0690000000043764e-06, 6.054999999997868e-06, 6.555999999997841e-06, 6.124999999995717e-06, 6.5969999999970774e-06, 5.54200000000421e-06, 6.597000000004016e-06, 6.5969999999970774e-06, 6.611000000003586e-06, 6.05600000000428e-06, 6.096999999996577e-06, 6.0689999999974376e-06, 6.597000000004016e-06, 6.0689999999974376e-06, 6.666999999994927e-06, 6.597999999996551e-06, 6.0689999999974376e-06, 6.597000000004016e-06, 6.653000000002296e-06, 6.07000000000385e-06, 6.069999999996911e-06, 6.5969999999970774e-06, 6.0139999999986316e-06, 6.0829999999970075e-06, 6.097000000003516e-06, 6.0690000000043764e-06]</msg>
<status status="PASS" starttime="20201030 15:51:44.921" endtime="20201030 15:51:44.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.909" endtime="20201030 15:51:44.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.936" endtime="20201030 15:51:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.931" endtime="20201030 15:51:44.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.929" endtime="20201030 15:51:44.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.441" endtime="20201030 15:51:44.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.440" endtime="20201030 15:51:44.960"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.984" endtime="20201030 15:51:45.006"></status>
</kw>
<msg timestamp="20201030 15:51:45.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.980" endtime="20201030 15:51:45.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.009" endtime="20201030 15:51:45.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.016" endtime="20201030 15:51:45.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.973" endtime="20201030 15:51:45.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.967" endtime="20201030 15:51:45.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.039" endtime="20201030 15:51:45.373"></status>
</kw>
<msg timestamp="20201030 15:51:45.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04561875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045625875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:45.036" endtime="20201030 15:51:45.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04561875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045625875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:45.382" endtime="20201030 15:51:45.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.401" endtime="20201030 15:51:45.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.029" endtime="20201030 15:51:45.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.024" endtime="20201030 15:51:45.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.418" level="INFO">${RESULT} = [{'diff': 7.125000000003656e-06}, {'diff': 7.652999999996357e-06}, {'diff': 7.125000000003656e-06}, {'diff': 6.597000000004016e-06}, {'diff': 7.110999999997147e-06}, {'diff': 7.110999999997147e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:45.409" endtime="20201030 15:51:45.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:45.427" level="INFO">${ACCURACY} = {'diff': [7.125000000003656e-06, 7.652999999996357e-06, 7.125000000003656e-06, 6.597000000004016e-06, 7.110999999997147e-06, 7.110999999997147e-06, 6.610999999996647e-06, 7.139000000003226e-06, 7.1529...</msg>
<status status="PASS" starttime="20201030 15:51:45.420" endtime="20201030 15:51:45.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.438" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:51:45.436" endtime="20201030 15:51:45.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.443" level="INFO">VALUE: [7.125000000003656e-06, 7.652999999996357e-06, 7.125000000003656e-06, 6.597000000004016e-06, 7.110999999997147e-06, 7.110999999997147e-06, 6.610999999996647e-06, 7.139000000003226e-06, 7.152999999995857e-06, 7.124999999996717e-06, 7.708000000002102e-06, 7.639000000003726e-06, 7.568999999998938e-06, 7.0969999999975775e-06, 7.665999999996453e-06, 6.583999999996981e-06, 7.110999999997147e-06, 7.097000000004516e-06, 7.638999999996787e-06, 7.639000000003726e-06, 7.124999999996717e-06, 7.110999999997147e-06, 6.583000000004446e-06, 7.110999999997147e-06, 7.138999999996287e-06, 7.166999999995427e-06, 7.653000000003296e-06, 6.625000000003156e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.652999999996357e-06, 7.124999999996717e-06, 7.652999999996357e-06, 7.667000000002866e-06, 7.125000000003656e-06, 7.04200000000571e-06, 7.125000000003656e-06, 7.652999999996357e-06, 6.61200000000306e-06, 7.125000000003656e-06, 7.097000000004516e-06, 6.597000000004016e-06, 7.665999999996453e-06, 7.138999999996287e-06, 7.124999999996717e-06, 7.124999999996717e-06, 6.611000000003586e-06, 7.111000000004086e-06, 7.638999999996787e-06, 7.125000000003656e-06]</msg>
<status status="PASS" starttime="20201030 15:51:45.440" endtime="20201030 15:51:45.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.429" endtime="20201030 15:51:45.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.456" endtime="20201030 15:51:45.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.450" endtime="20201030 15:51:45.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.448" endtime="20201030 15:51:45.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.962" endtime="20201030 15:51:45.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.961" endtime="20201030 15:51:45.482"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.504" endtime="20201030 15:51:45.521"></status>
</kw>
<msg timestamp="20201030 15:51:45.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.501" endtime="20201030 15:51:45.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.525" endtime="20201030 15:51:45.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.531" endtime="20201030 15:51:45.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.494" endtime="20201030 15:51:45.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.488" endtime="20201030 15:51:45.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.554" endtime="20201030 15:51:45.893"></status>
</kw>
<msg timestamp="20201030 15:51:45.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041017347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041026056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.551" endtime="20201030 15:51:45.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041017347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041026056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.902" endtime="20201030 15:51:45.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.921" endtime="20201030 15:51:45.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.544" endtime="20201030 15:51:45.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.539" endtime="20201030 15:51:45.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.938" level="INFO">${RESULT} = [{'diff': 8.708999999995637e-06}, {'diff': 8.222000000002172e-06}, {'diff': 8.193999999996093e-06}, {'diff': 8.707999999996163e-06}, {'diff': 8.166999999996427e-06}, {'diff': 8.180000000003462e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:45.930" endtime="20201030 15:51:45.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:45.949" level="INFO">${ACCURACY} = {'diff': [8.708999999995637e-06, 8.222000000002172e-06, 8.193999999996093e-06, 8.707999999996163e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.166000000003892e-06, 7.652999999996357e-06, 8.7370...</msg>
<status status="PASS" starttime="20201030 15:51:45.940" endtime="20201030 15:51:45.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.960" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:51:45.958" endtime="20201030 15:51:45.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.966" level="INFO">VALUE: [8.708999999995637e-06, 8.222000000002172e-06, 8.193999999996093e-06, 8.707999999996163e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.166000000003892e-06, 7.652999999996357e-06, 8.737000000001716e-06, 8.721999999995733e-06, 8.708000000003102e-06, 7.652999999996357e-06, 8.180000000003462e-06, 8.695000000003006e-06, 8.180999999995997e-06, 8.166999999996427e-06, 8.693999999996593e-06, 8.708999999995637e-06, 8.166999999996427e-06, 8.222000000002172e-06, 8.194999999995567e-06, 8.195000000002506e-06, 8.124999999997717e-06, 7.736000000001242e-06, 8.722000000002672e-06, 8.193999999996093e-06, 8.179999999996523e-06, 8.180999999995997e-06, 8.180000000003462e-06, 7.652999999996357e-06, 8.180000000003462e-06, 8.167000000003366e-06, 8.181000000002936e-06, 8.721999999995733e-06, 8.721999999995733e-06, 8.708000000003102e-06, 8.180000000003462e-06, 8.193999999996093e-06, 8.152999999996857e-06, 8.207999999995663e-06, 8.181000000002936e-06, 8.181000000002936e-06, 8.208999999995137e-06, 7.652999999996357e-06, 8.167000000003366e-06, 8.139000000004226e-06, 7.652999999996357e-06, 8.194999999995567e-06, 8.708000000003102e-06, 8.694999999996067e-06]</msg>
<status status="PASS" starttime="20201030 15:51:45.962" endtime="20201030 15:51:45.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.951" endtime="20201030 15:51:45.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.978" endtime="20201030 15:51:45.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.973" endtime="20201030 15:51:46.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.971" endtime="20201030 15:51:46.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.484" endtime="20201030 15:51:46.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.483" endtime="20201030 15:51:46.003"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.026" endtime="20201030 15:51:46.046"></status>
</kw>
<msg timestamp="20201030 15:51:46.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.023" endtime="20201030 15:51:46.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.050" endtime="20201030 15:51:46.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.058" endtime="20201030 15:51:46.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.015" endtime="20201030 15:51:46.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.009" endtime="20201030 15:51:46.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.082" endtime="20201030 15:51:46.448"></status>
</kw>
<msg timestamp="20201030 15:51:46.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041899264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041907972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.078" endtime="20201030 15:51:46.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041899264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041907972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.458" endtime="20201030 15:51:46.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.484" endtime="20201030 15:51:46.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.071" endtime="20201030 15:51:46.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.067" endtime="20201030 15:51:46.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.509" level="INFO">${RESULT} = [{'diff': 8.708000000003102e-06}, {'diff': 9.763000000002908e-06}, {'diff': 9.235999999995803e-06}, {'diff': 9.222000000003172e-06}, {'diff': 9.236000000002742e-06}, {'diff': 8.708000000003102e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:51:46.500" endtime="20201030 15:51:46.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:46.520" level="INFO">${ACCURACY} = {'diff': [8.708000000003102e-06, 9.763000000002908e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.236000000002742e-06, 8.708000000003102e-06, 9.235999999995803e-06, 9.834000000000231e-06, 9.2499...</msg>
<status status="PASS" starttime="20201030 15:51:46.511" endtime="20201030 15:51:46.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.531" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:51:46.529" endtime="20201030 15:51:46.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.537" level="INFO">VALUE: [8.708000000003102e-06, 9.763000000002908e-06, 9.235999999995803e-06, 9.222000000003172e-06, 9.236000000002742e-06, 8.708000000003102e-06, 9.235999999995803e-06, 9.834000000000231e-06, 9.249999999995373e-06, 9.236000000002742e-06, 9.236000000002742e-06, 9.237000000002216e-06, 8.708999999995637e-06, 8.679999999997023e-06, 8.693999999996593e-06, 9.778000000001952e-06, 9.263999999994943e-06, 9.278000000001452e-06, 9.236000000002742e-06, 9.237000000002216e-06, 9.778000000001952e-06, 8.722000000002672e-06, 9.236000000002742e-06, 9.221999999996233e-06, 9.166999999997427e-06, 8.722000000002672e-06, 9.235999999995803e-06, 8.763999999994443e-06, 9.749999999995873e-06, 9.221999999996233e-06, 8.736000000002242e-06, 8.722000000002672e-06, 9.264000000001882e-06, 8.722000000002672e-06, 9.223000000002646e-06, 9.764000000002382e-06, 9.763999999995443e-06, 9.221999999996233e-06, 9.76299999999597e-06, 9.236000000002742e-06, 8.694000000003532e-06, 9.237000000002216e-06, 9.209000000003076e-06, 9.763000000002908e-06, 9.221999999996233e-06, 9.221999999996233e-06, 9.222000000003172e-06, 8.693999999996593e-06, 9.777000000002478e-06, 8.693999999996593e-06]</msg>
<status status="PASS" starttime="20201030 15:51:46.534" endtime="20201030 15:51:46.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.522" endtime="20201030 15:51:46.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.550" endtime="20201030 15:51:46.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.546" endtime="20201030 15:51:46.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.543" endtime="20201030 15:51:46.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.005" endtime="20201030 15:51:46.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.004" endtime="20201030 15:51:46.575"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.598" endtime="20201030 15:51:46.616"></status>
</kw>
<msg timestamp="20201030 15:51:46.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.595" endtime="20201030 15:51:46.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.619" endtime="20201030 15:51:46.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.626" endtime="20201030 15:51:46.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.587" endtime="20201030 15:51:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.582" endtime="20201030 15:51:46.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.649" endtime="20201030 15:51:46.989"></status>
</kw>
<msg timestamp="20201030 15:51:46.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041692625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.646" endtime="20201030 15:51:46.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041692625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041703458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.999" endtime="20201030 15:51:47.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.018" endtime="20201030 15:51:47.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.639" endtime="20201030 15:51:47.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.634" endtime="20201030 15:51:47.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.036" level="INFO">${RESULT} = [{'diff': 1.0833000000001758e-05}, {'diff': 1.029099999999561e-05}, {'diff': 1.0374999999999968e-05}, {'diff': 1.0306000000001592e-05}, {'diff': 1.0832999999994819e-05}, {'diff': 1.0222000000004172e-0...</msg>
<status status="PASS" starttime="20201030 15:51:47.027" endtime="20201030 15:51:47.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:47.045" level="INFO">${ACCURACY} = {'diff': [1.0833000000001758e-05, 1.029099999999561e-05, 1.0374999999999968e-05, 1.0306000000001592e-05, 1.0832999999994819e-05, 1.0222000000004172e-05, 1.029099999999561e-05, 9.750000000002812e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:51:47.038" endtime="20201030 15:51:47.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.057" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:51:47.054" endtime="20201030 15:51:47.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.062" level="INFO">VALUE: [1.0833000000001758e-05, 1.029099999999561e-05, 1.0374999999999968e-05, 1.0306000000001592e-05, 1.0832999999994819e-05, 1.0222000000004172e-05, 1.029099999999561e-05, 9.750000000002812e-06, 1.0292000000002022e-05, 1.0806000000002092e-05, 9.764000000002382e-06, 1.0278000000002452e-05, 9.777999999995013e-06, 1.0806000000002092e-05, 9.749999999995873e-06, 1.0888000000000564e-05, 1.0277999999995513e-05, 1.029099999999561e-05, 1.0278000000002452e-05, 1.0319000000001688e-05, 1.0291000000002548e-05, 9.763999999995443e-06, 1.0292000000002022e-05, 1.0305000000002118e-05, 1.0291999999995083e-05, 1.0292000000002022e-05, 9.750000000002812e-06, 1.0263999999995943e-05, 9.764000000002382e-06, 9.763999999995443e-06, 9.735999999996303e-06, 1.029099999999561e-05, 1.0305000000002118e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 1.0292000000002022e-05, 9.777000000002478e-06, 1.0818999999995249e-05, 1.0833000000001758e-05, 9.763999999995443e-06, 1.0334000000000731e-05, 1.0277000000002978e-05, 1.0333000000001258e-05, 9.76299999999597e-06, 9.764000000002382e-06, 9.792000000001522e-06, 1.0291999999995083e-05, 9.764000000002382e-06, 1.0236000000003742e-05, 1.029099999999561e-05]</msg>
<status status="PASS" starttime="20201030 15:51:47.059" endtime="20201030 15:51:47.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.047" endtime="20201030 15:51:47.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.076" endtime="20201030 15:51:47.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.071" endtime="20201030 15:51:47.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.069" endtime="20201030 15:51:47.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.577" endtime="20201030 15:51:47.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.576" endtime="20201030 15:51:47.102"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.125" endtime="20201030 15:51:47.143"></status>
</kw>
<msg timestamp="20201030 15:51:47.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.121" endtime="20201030 15:51:47.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.146" endtime="20201030 15:51:47.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.152" endtime="20201030 15:51:47.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.114" endtime="20201030 15:51:47.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.108" endtime="20201030 15:51:47.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.178" endtime="20201030 15:51:47.533"></status>
</kw>
<msg timestamp="20201030 15:51:47.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042139042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042150403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.175" endtime="20201030 15:51:47.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042139042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042150403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.543" endtime="20201030 15:51:47.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.563" endtime="20201030 15:51:47.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.167" endtime="20201030 15:51:47.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.162" endtime="20201030 15:51:47.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.581" level="INFO">${RESULT} = [{'diff': 1.1361000000001398e-05}, {'diff': 1.1361000000001398e-05}, {'diff': 1.1333000000002258e-05}, {'diff': 1.1416999999999677e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1361000000001398e-...</msg>
<status status="PASS" starttime="20201030 15:51:47.572" endtime="20201030 15:51:47.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:47.591" level="INFO">${ACCURACY} = {'diff': [1.1361000000001398e-05, 1.1361000000001398e-05, 1.1333000000002258e-05, 1.1416999999999677e-05, 1.1347000000001828e-05, 1.1361000000001398e-05, 1.1348000000001301e-05, 1.1347000000001828e-05...</msg>
<status status="PASS" starttime="20201030 15:51:47.583" endtime="20201030 15:51:47.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.603" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:51:47.600" endtime="20201030 15:51:47.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.609" level="INFO">VALUE: [1.1361000000001398e-05, 1.1361000000001398e-05, 1.1333000000002258e-05, 1.1416999999999677e-05, 1.1347000000001828e-05, 1.1361000000001398e-05, 1.1348000000001301e-05, 1.1347000000001828e-05, 1.0791999999995583e-05, 1.1346999999994889e-05, 1.1347000000001828e-05, 1.0777999999996013e-05, 1.0833000000001758e-05, 1.1347000000001828e-05, 1.0847000000001328e-05, 1.1347000000001828e-05, 1.0833000000001758e-05, 1.1346999999994889e-05, 1.077699999999654e-05, 1.0820000000001662e-05, 1.1333000000002258e-05, 1.1347000000001828e-05, 1.1318999999995749e-05, 1.1332999999995319e-05, 1.0832999999994819e-05, 1.1875000000001468e-05, 1.1374999999994029e-05, 1.1374999999994029e-05, 1.1346999999994889e-05, 1.0834000000001232e-05, 1.0820000000001662e-05, 1.1930999999999747e-05, 1.0819000000002188e-05, 1.1832999999995819e-05, 1.1333999999994793e-05, 1.1361000000001398e-05, 1.0778000000002952e-05, 1.1348000000001301e-05, 1.1346999999994889e-05, 1.0819000000002188e-05, 1.0820000000001662e-05, 1.0792000000002522e-05, 1.1360999999994459e-05, 1.1347000000001828e-05, 1.1874999999994529e-05, 1.0832999999994819e-05, 1.1361000000001398e-05, 1.1333999999994793e-05, 1.0819000000002188e-05, 1.1388000000001064e-05]</msg>
<status status="PASS" starttime="20201030 15:51:47.605" endtime="20201030 15:51:47.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.593" endtime="20201030 15:51:47.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.623" endtime="20201030 15:51:47.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.617" endtime="20201030 15:51:47.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.615" endtime="20201030 15:51:47.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.104" endtime="20201030 15:51:47.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.102" endtime="20201030 15:51:47.650"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.674" endtime="20201030 15:51:47.692"></status>
</kw>
<msg timestamp="20201030 15:51:47.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.670" endtime="20201030 15:51:47.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.696" endtime="20201030 15:51:47.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.702" endtime="20201030 15:51:47.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.663" endtime="20201030 15:51:47.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.656" endtime="20201030 15:51:47.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.727" endtime="20201030 15:51:48.087"></status>
</kw>
<msg timestamp="20201030 15:51:48.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044245944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.724" endtime="20201030 15:51:48.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044245944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.098" endtime="20201030 15:51:48.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.119" endtime="20201030 15:51:48.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.716" endtime="20201030 15:51:48.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.711" endtime="20201030 15:51:48.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.138" level="INFO">${RESULT} = [{'diff': 1.1875000000001468e-05}, {'diff': 1.2403000000001108e-05}, {'diff': 1.2417000000000677e-05}, {'diff': 1.1847000000002328e-05}, {'diff': 1.1958999999998887e-05}, {'diff': 1.2931000000000747e-...</msg>
<status status="PASS" starttime="20201030 15:51:48.128" endtime="20201030 15:51:48.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:48.149" level="INFO">${ACCURACY} = {'diff': [1.1875000000001468e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.1847000000002328e-05, 1.1958999999998887e-05, 1.2931000000000747e-05, 1.2403000000001108e-05, 1.1861000000001898e-05...</msg>
<status status="PASS" starttime="20201030 15:51:48.140" endtime="20201030 15:51:48.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.161" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:51:48.159" endtime="20201030 15:51:48.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.167" level="INFO">VALUE: [1.1875000000001468e-05, 1.2403000000001108e-05, 1.2417000000000677e-05, 1.1847000000002328e-05, 1.1958999999998887e-05, 1.2931000000000747e-05, 1.2403000000001108e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.2417000000000677e-05, 1.2403000000001108e-05, 1.2361000000002398e-05, 1.2403000000001108e-05, 1.2403000000001108e-05, 1.2916999999994239e-05, 1.1860999999994959e-05, 1.2416000000001204e-05, 1.1875000000001468e-05, 1.2430000000000774e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.2416000000001204e-05, 1.2945000000000317e-05, 1.2403000000001108e-05, 1.1874999999994529e-05, 1.1875000000001468e-05, 1.2417000000000677e-05, 1.2389000000001538e-05, 1.1875000000001468e-05, 1.1860999999994959e-05, 1.2403000000001108e-05, 1.1860999999994959e-05, 1.2389000000001538e-05, 1.1875000000001468e-05, 1.2402000000001634e-05, 1.1889000000001038e-05, 1.2402000000001634e-05, 1.1902999999993669e-05, 1.2403000000001108e-05, 1.2403000000001108e-05, 1.2403000000001108e-05, 1.2916000000001704e-05, 1.1930000000000274e-05, 1.2417000000000677e-05, 1.2347000000002828e-05, 1.2403000000001108e-05, 1.2402000000001634e-05, 1.1889000000001038e-05, 1.1875000000001468e-05, 1.2389000000001538e-05]</msg>
<status status="PASS" starttime="20201030 15:51:48.163" endtime="20201030 15:51:48.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.151" endtime="20201030 15:51:48.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.180" endtime="20201030 15:51:48.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.176" endtime="20201030 15:51:48.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.173" endtime="20201030 15:51:48.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.652" endtime="20201030 15:51:48.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.651" endtime="20201030 15:51:48.206"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.230" endtime="20201030 15:51:48.248"></status>
</kw>
<msg timestamp="20201030 15:51:48.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.226" endtime="20201030 15:51:48.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.252" endtime="20201030 15:51:48.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.258" endtime="20201030 15:51:48.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.219" endtime="20201030 15:51:48.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.213" endtime="20201030 15:51:48.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.283" endtime="20201030 15:51:48.663"></status>
</kw>
<msg timestamp="20201030 15:51:48.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043160806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04317425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:48.280" endtime="20201030 15:51:48.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043160806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04317425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:48.672" endtime="20201030 15:51:48.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.691" endtime="20201030 15:51:48.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.272" endtime="20201030 15:51:48.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.267" endtime="20201030 15:51:48.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.708" level="INFO">${RESULT} = [{'diff': 1.3443999999994405e-05}, {'diff': 1.3459000000000387e-05}, {'diff': 1.2930000000001274e-05}, {'diff': 1.2917000000001178e-05}, {'diff': 1.2917000000001178e-05}, {'diff': 1.2930000000001274e-...</msg>
<status status="PASS" starttime="20201030 15:51:48.699" endtime="20201030 15:51:48.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:48.719" level="INFO">${ACCURACY} = {'diff': [1.3443999999994405e-05, 1.3459000000000387e-05, 1.2930000000001274e-05, 1.2917000000001178e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2931000000000747e-05...</msg>
<status status="PASS" starttime="20201030 15:51:48.710" endtime="20201030 15:51:48.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.730" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:51:48.727" endtime="20201030 15:51:48.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.735" level="INFO">VALUE: [1.3443999999994405e-05, 1.3459000000000387e-05, 1.2930000000001274e-05, 1.2917000000001178e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.2931000000000747e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.2944000000000844e-05, 1.3459000000000387e-05, 1.2958000000000414e-05, 1.3472000000000484e-05, 1.2930000000001274e-05, 1.3458000000000914e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.2945000000000317e-05, 1.3375000000002968e-05, 1.2945000000000317e-05, 1.3472999999999957e-05, 1.2971999999999984e-05, 1.2930999999993809e-05, 1.2888999999995099e-05, 1.2903000000001608e-05, 1.2958000000000414e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.2945000000000317e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.2917000000001178e-05, 1.2985999999999553e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.3458000000000914e-05, 1.3443999999994405e-05, 1.2917000000001178e-05, 1.3444000000001344e-05, 1.2931000000000747e-05, 1.2930000000001274e-05, 1.2944000000000844e-05, 1.3443999999994405e-05, 1.2930999999993809e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.2929999999994335e-05]</msg>
<status status="PASS" starttime="20201030 15:51:48.732" endtime="20201030 15:51:48.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.721" endtime="20201030 15:51:48.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.786" endtime="20201030 15:51:48.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.762" endtime="20201030 15:51:48.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.749" endtime="20201030 15:51:48.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.208" endtime="20201030 15:51:48.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.207" endtime="20201030 15:51:48.814"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.845" endtime="20201030 15:51:48.865"></status>
</kw>
<msg timestamp="20201030 15:51:48.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.840" endtime="20201030 15:51:48.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.868" endtime="20201030 15:51:48.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.875" endtime="20201030 15:51:48.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.831" endtime="20201030 15:51:48.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.823" endtime="20201030 15:51:48.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.898" endtime="20201030 15:51:49.239"></status>
</kw>
<msg timestamp="20201030 15:51:49.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052977333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052991889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.895" endtime="20201030 15:51:49.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052977333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052991889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.249" endtime="20201030 15:51:49.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.268" endtime="20201030 15:51:49.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.888" endtime="20201030 15:51:49.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.883" endtime="20201030 15:51:49.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.285" level="INFO">${RESULT} = [{'diff': 1.4555999999998903e-05}, {'diff': 1.4541999999999333e-05}, {'diff': 1.4486000000001054e-05}, {'diff': 1.4028000000006202e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.3986000000000554e-...</msg>
<status status="PASS" starttime="20201030 15:51:49.276" endtime="20201030 15:51:49.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:49.294" level="INFO">${ACCURACY} = {'diff': [1.4555999999998903e-05, 1.4541999999999333e-05, 1.4486000000001054e-05, 1.4028000000006202e-05, 1.4555999999998903e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.4000000000000123e-05...</msg>
<status status="PASS" starttime="20201030 15:51:49.287" endtime="20201030 15:51:49.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.305" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:51:49.302" endtime="20201030 15:51:49.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.310" level="INFO">VALUE: [1.4555999999998903e-05, 1.4541999999999333e-05, 1.4486000000001054e-05, 1.4028000000006202e-05, 1.4555999999998903e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.4000000000000123e-05, 1.3986000000000554e-05, 1.3987000000000027e-05, 1.4013999999999693e-05, 1.4514000000000193e-05, 1.4514000000000193e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.4499999999993685e-05, 1.451300000000072e-05, 1.3986000000000554e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.3986000000000554e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3972000000000984e-05, 1.4514000000000193e-05, 1.401300000000022e-05, 1.3987000000000027e-05, 1.3986000000000554e-05, 1.3987000000000027e-05, 1.3972000000000984e-05, 1.4486000000001054e-05, 1.4514000000000193e-05, 1.455499999999943e-05, 1.4000000000000123e-05, 1.4486999999993588e-05, 1.4514000000000193e-05, 1.455499999999943e-05, 1.3972000000000984e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.4512999999993781e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.3986000000000554e-05, 1.4000000000000123e-05, 1.4514000000000193e-05, 1.3944000000001844e-05, 1.3986000000000554e-05, 1.4527999999999763e-05]</msg>
<status status="PASS" starttime="20201030 15:51:49.307" endtime="20201030 15:51:49.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.296" endtime="20201030 15:51:49.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.329" endtime="20201030 15:51:49.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.324" endtime="20201030 15:51:49.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.322" endtime="20201030 15:51:49.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.817" endtime="20201030 15:51:49.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.815" endtime="20201030 15:51:49.354"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.376" endtime="20201030 15:51:49.397"></status>
</kw>
<msg timestamp="20201030 15:51:49.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.373" endtime="20201030 15:51:49.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.400" endtime="20201030 15:51:49.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.406" endtime="20201030 15:51:49.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.366" endtime="20201030 15:51:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.360" endtime="20201030 15:51:49.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.429" endtime="20201030 15:51:49.775"></status>
</kw>
<msg timestamp="20201030 15:51:49.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.426" endtime="20201030 15:51:49.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.784" endtime="20201030 15:51:49.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.803" endtime="20201030 15:51:49.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.419" endtime="20201030 15:51:49.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.414" endtime="20201030 15:51:49.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.820" level="INFO">${RESULT} = [{'diff': 1.5528000000000763e-05}, {'diff': 1.5555999999999903e-05}, {'diff': 1.4568999999999e-05}, {'diff': 1.559699999999914e-05}, {'diff': 1.561099999999871e-05}, {'diff': 1.5055999999999403e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:49.811" endtime="20201030 15:51:49.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:49.829" level="INFO">${ACCURACY} = {'diff': [1.5528000000000763e-05, 1.5555999999999903e-05, 1.4568999999999e-05, 1.559699999999914e-05, 1.561099999999871e-05, 1.5055999999999403e-05, 1.5569e-05, 1.5583999999999043e-05, 1.5584000000005...</msg>
<status status="PASS" starttime="20201030 15:51:49.822" endtime="20201030 15:51:49.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.840" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:51:49.838" endtime="20201030 15:51:49.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.845" level="INFO">VALUE: [1.5528000000000763e-05, 1.5555999999999903e-05, 1.4568999999999e-05, 1.559699999999914e-05, 1.561099999999871e-05, 1.5055999999999403e-05, 1.5569e-05, 1.5583999999999043e-05, 1.5584000000005982e-05, 1.5569e-05, 1.502699999999385e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5569e-05, 1.5583999999999043e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.452700000000029e-05, 1.5569e-05, 1.504100000000036e-05, 1.5569e-05, 1.5583999999999043e-05, 1.5055999999999403e-05, 1.5499999999994685e-05, 1.504100000000036e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5555999999999903e-05, 1.5083999999998543e-05, 1.504100000000036e-05, 1.5041999999999833e-05, 1.5055999999999403e-05, 1.502699999999385e-05, 1.5569999999999473e-05, 1.5485999999995115e-05, 1.5055999999999403e-05, 1.5014000000000693e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.5569e-05, 1.558300000000651e-05, 1.504100000000036e-05, 1.5041999999999833e-05, 1.5569999999999473e-05, 1.50689999999995e-05, 1.4971999999995045e-05, 1.4555999999998903e-05]</msg>
<status status="PASS" starttime="20201030 15:51:49.842" endtime="20201030 15:51:49.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.831" endtime="20201030 15:51:49.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.859" endtime="20201030 15:51:49.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.853" endtime="20201030 15:51:49.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.851" endtime="20201030 15:51:49.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.356" endtime="20201030 15:51:49.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.355" endtime="20201030 15:51:49.890"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.922" endtime="20201030 15:51:49.942"></status>
</kw>
<msg timestamp="20201030 15:51:49.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.918" endtime="20201030 15:51:49.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.945" endtime="20201030 15:51:49.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.952" endtime="20201030 15:51:49.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.908" endtime="20201030 15:51:49.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.900" endtime="20201030 15:51:49.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.977" endtime="20201030 15:51:50.328"></status>
</kw>
<msg timestamp="20201030 15:51:50.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057843375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057859444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.973" endtime="20201030 15:51:50.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057843375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057859444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.338" endtime="20201030 15:51:50.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.356" endtime="20201030 15:51:50.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.966" endtime="20201030 15:51:50.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.961" endtime="20201030 15:51:50.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.374" level="INFO">${RESULT} = [{'diff': 1.60690000000005e-05}, {'diff': 1.602700000000179e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.6625000000006218e-05}, {'diff': 1.663899999999885e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:50.365" endtime="20201030 15:51:50.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:50.389" level="INFO">${ACCURACY} = {'diff': [1.60690000000005e-05, 1.602700000000179e-05, 1.661099999999971e-05, 1.611099999999921e-05, 1.6625000000006218e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.6097999999999113e-05, 1.606...</msg>
<status status="PASS" starttime="20201030 15:51:50.376" endtime="20201030 15:51:50.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.400" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:51:50.397" endtime="20201030 15:51:50.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.405" level="INFO">VALUE: [1.60690000000005e-05, 1.602700000000179e-05, 1.661099999999971e-05, 1.611099999999921e-05, 1.6625000000006218e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.6097999999999113e-05, 1.60690000000005e-05, 1.662499999999928e-05, 1.6637999999999376e-05, 1.661099999999971e-05, 1.609699999999964e-05, 1.662499999999928e-05, 1.5500000000001624e-05, 1.662499999999928e-05, 1.613899999999835e-05, 1.6666000000005454e-05, 1.609699999999964e-05, 1.662499999999928e-05, 1.609699999999964e-05, 1.663899999999885e-05, 1.608300000000007e-05, 1.665299999999842e-05, 1.6111000000006148e-05, 1.659700000000014e-05, 1.6056000000000403e-05, 1.611099999999921e-05, 1.6083999999999543e-05, 1.6625000000006218e-05, 1.611099999999921e-05, 1.662499999999928e-05, 1.611099999999921e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.612499999999878e-05, 1.605499999999399e-05, 1.609699999999964e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.5569999999999473e-05, 1.661099999999971e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.662499999999928e-05, 1.609699999999964e-05, 1.5569e-05, 1.662499999999928e-05, 1.6097999999999113e-05, 1.609699999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:51:50.402" endtime="20201030 15:51:50.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.391" endtime="20201030 15:51:50.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.417" endtime="20201030 15:51:50.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.413" endtime="20201030 15:51:50.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.411" endtime="20201030 15:51:50.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.894" endtime="20201030 15:51:50.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.891" endtime="20201030 15:51:50.442"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.465" endtime="20201030 15:51:50.484"></status>
</kw>
<msg timestamp="20201030 15:51:50.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.462" endtime="20201030 15:51:50.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.487" endtime="20201030 15:51:50.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.493" endtime="20201030 15:51:50.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.454" endtime="20201030 15:51:50.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.449" endtime="20201030 15:51:50.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.516" endtime="20201030 15:51:50.860"></status>
</kw>
<msg timestamp="20201030 15:51:50.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041000347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041017486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.513" endtime="20201030 15:51:50.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041000347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041017486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.870" endtime="20201030 15:51:50.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.889" endtime="20201030 15:51:50.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.506" endtime="20201030 15:51:50.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.501" endtime="20201030 15:51:50.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.906" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.7693999999998655e-05}, {'diff': 1.768099999999856e-05}, {'diff': 1.7665999999999515e-05}, {'diff': 1.7151999999999445e-05}, {'diff': 1.7665999999999515e-05...</msg>
<status status="PASS" starttime="20201030 15:51:50.897" endtime="20201030 15:51:50.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:50.917" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.7693999999998655e-05, 1.768099999999856e-05, 1.7665999999999515e-05, 1.7151999999999445e-05, 1.7665999999999515e-05, 1.765299999999942e-05, 1.7681000000005498e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:51:50.908" endtime="20201030 15:51:50.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.927" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:51:50.925" endtime="20201030 15:51:50.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.933" level="INFO">VALUE: [1.713899999999935e-05, 1.7693999999998655e-05, 1.768099999999856e-05, 1.7665999999999515e-05, 1.7151999999999445e-05, 1.7665999999999515e-05, 1.765299999999942e-05, 1.7681000000005498e-05, 1.715299999999892e-05, 1.715299999999892e-05, 1.766699999999899e-05, 1.7165999999999015e-05, 1.715299999999892e-05, 1.716699999999849e-05, 1.715299999999892e-05, 1.769499999999813e-05, 1.715299999999892e-05, 1.766699999999899e-05, 1.715299999999892e-05, 1.715299999999892e-05, 1.768099999999856e-05, 1.768099999999856e-05, 1.715299999999892e-05, 1.7681000000005498e-05, 1.7693999999998655e-05, 1.715299999999892e-05, 1.7679999999999085e-05, 1.7749999999996935e-05, 1.768099999999856e-05, 1.7151999999999445e-05, 1.716699999999849e-05, 1.769499999999813e-05, 1.713899999999935e-05, 1.7681000000005498e-05, 1.662499999999928e-05, 1.769499999999813e-05, 1.7681000000005498e-05, 1.7151999999999445e-05, 1.768099999999856e-05, 1.716699999999849e-05, 1.7695000000005068e-05, 1.7151999999999445e-05, 1.768099999999856e-05, 1.766699999999899e-05, 1.7679999999999085e-05, 1.716699999999849e-05, 1.7707999999998225e-05, 1.7151999999999445e-05, 1.7681000000005498e-05, 1.7111999999999683e-05]</msg>
<status status="PASS" starttime="20201030 15:51:50.930" endtime="20201030 15:51:50.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.918" endtime="20201030 15:51:50.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.945" endtime="20201030 15:51:50.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.941" endtime="20201030 15:51:50.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.938" endtime="20201030 15:51:50.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.444" endtime="20201030 15:51:50.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.443" endtime="20201030 15:51:50.970"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.993" endtime="20201030 15:51:51.011"></status>
</kw>
<msg timestamp="20201030 15:51:51.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.989" endtime="20201030 15:51:51.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.014" endtime="20201030 15:51:51.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.021" endtime="20201030 15:51:51.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.982" endtime="20201030 15:51:51.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.977" endtime="20201030 15:51:51.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.043" endtime="20201030 15:51:51.391"></status>
</kw>
<msg timestamp="20201030 15:51:51.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040829125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040846806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.040" endtime="20201030 15:51:51.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040829125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040846806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.401" endtime="20201030 15:51:51.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.419" endtime="20201030 15:51:51.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.033" endtime="20201030 15:51:51.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.028" endtime="20201030 15:51:51.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.437" level="INFO">${RESULT} = [{'diff': 1.768099999999856e-05}, {'diff': 1.8249999999997435e-05}, {'diff': 1.8721999999998795e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.8209000000005138e-05}, {'diff': 1.8221999999998295e-0...</msg>
<status status="PASS" starttime="20201030 15:51:51.428" endtime="20201030 15:51:51.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:51.446" level="INFO">${ACCURACY} = {'diff': [1.768099999999856e-05, 1.8249999999997435e-05, 1.8721999999998795e-05, 1.8221999999998295e-05, 1.8209000000005138e-05, 1.8221999999998295e-05, 1.8750000000004874e-05, 1.8207999999998725e-05,...</msg>
<status status="PASS" starttime="20201030 15:51:51.439" endtime="20201030 15:51:51.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.457" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:51:51.454" endtime="20201030 15:51:51.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.462" level="INFO">VALUE: [1.768099999999856e-05, 1.8249999999997435e-05, 1.8721999999998795e-05, 1.8221999999998295e-05, 1.8209000000005138e-05, 1.8221999999998295e-05, 1.8750000000004874e-05, 1.8207999999998725e-05, 1.8235999999997865e-05, 1.8749999999997935e-05, 1.8207999999998725e-05, 1.8721999999998795e-05, 1.8193999999999155e-05, 1.8735999999998365e-05, 1.766699999999899e-05, 1.8735999999998365e-05, 1.7679999999999085e-05, 1.768099999999856e-05, 1.8221999999998295e-05, 1.7693999999998655e-05, 1.7707999999998225e-05, 1.8167000000006428e-05, 1.8749999999997935e-05, 1.8194000000006094e-05, 1.822299999999777e-05, 1.8735999999998365e-05, 1.8749999999997935e-05, 1.768099999999856e-05, 1.7723000000004208e-05, 1.872299999999827e-05, 1.812500000000078e-05, 1.819499999999863e-05, 1.8221999999998295e-05, 1.8195000000005568e-05, 1.7721999999997795e-05, 1.8735999999998365e-05, 1.87769999999976e-05, 1.8222000000005234e-05, 1.8764000000004444e-05, 1.8193999999999155e-05, 1.768099999999856e-05, 1.8263999999997005e-05, 1.816699999999949e-05, 1.7679999999999085e-05, 1.768099999999856e-05, 1.7679999999999085e-05, 1.812499999999384e-05, 1.8749999999997935e-05, 1.766699999999899e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201030 15:51:51.459" endtime="20201030 15:51:51.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.448" endtime="20201030 15:51:51.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.478" endtime="20201030 15:51:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.471" endtime="20201030 15:51:51.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.468" endtime="20201030 15:51:51.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.972" endtime="20201030 15:51:51.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.971" endtime="20201030 15:51:51.506"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.534" endtime="20201030 15:51:51.555"></status>
</kw>
<msg timestamp="20201030 15:51:51.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.531" endtime="20201030 15:51:51.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.558" endtime="20201030 15:51:51.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.564" endtime="20201030 15:51:51.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.523" endtime="20201030 15:51:51.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.516" endtime="20201030 15:51:51.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.587" endtime="20201030 15:51:51.933"></status>
</kw>
<msg timestamp="20201030 15:51:51.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051037417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051057194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.584" endtime="20201030 15:51:51.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051037417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051057194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.943" endtime="20201030 15:51:51.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.962" endtime="20201030 15:51:51.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.577" endtime="20201030 15:51:51.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.572" endtime="20201030 15:51:51.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.979" level="INFO">${RESULT} = [{'diff': 1.97769999999986e-05}, {'diff': 1.9250000000005374e-05}, {'diff': 1.9278000000004514e-05}, {'diff': 1.8749999999997935e-05}, {'diff': 1.927700000000504e-05}, {'diff': 1.8750000000004874e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:51.970" endtime="20201030 15:51:51.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:51.988" level="INFO">${ACCURACY} = {'diff': [1.97769999999986e-05, 1.9250000000005374e-05, 1.9278000000004514e-05, 1.8749999999997935e-05, 1.927700000000504e-05, 1.8750000000004874e-05, 1.9263999999998005e-05, 1.9791999999997645e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:51:51.981" endtime="20201030 15:51:51.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.999" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:51:51.997" endtime="20201030 15:51:52.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.004" level="INFO">VALUE: [1.97769999999986e-05, 1.9250000000005374e-05, 1.9278000000004514e-05, 1.8749999999997935e-05, 1.927700000000504e-05, 1.8750000000004874e-05, 1.9263999999998005e-05, 1.9791999999997645e-05, 1.980499999999774e-05, 1.9194000000000155e-05, 1.979099999999817e-05, 1.926299999999853e-05, 1.8722000000005734e-05, 1.931900000000375e-05, 1.8735999999998365e-05, 1.981899999999731e-05, 1.8749999999997935e-05, 1.9194000000000155e-05, 1.9249999999998435e-05, 1.9778000000005014e-05, 1.9263999999998005e-05, 1.922299999999877e-05, 1.9263999999998005e-05, 1.927700000000504e-05, 1.8721999999998795e-05, 1.979100000000511e-05, 1.8777999999997075e-05, 1.8735999999998365e-05, 1.8750000000004874e-05, 1.8750000000004874e-05, 1.9264000000004944e-05, 1.9278000000004514e-05, 1.9277999999997575e-05, 1.9277999999997575e-05, 1.980499999999774e-05, 1.979100000000511e-05, 1.8749999999997935e-05, 1.8736000000005304e-05, 1.9249999999998435e-05, 1.9763999999998505e-05, 1.8722000000005734e-05, 1.9250000000005374e-05, 1.869499999999913e-05, 1.9264000000004944e-05, 1.9791999999997645e-05, 1.8735999999998365e-05, 1.9235999999998865e-05, 1.8735999999998365e-05, 1.9277999999997575e-05, 1.9249999999998435e-05]</msg>
<status status="PASS" starttime="20201030 15:51:52.001" endtime="20201030 15:51:52.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.990" endtime="20201030 15:51:52.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.018" endtime="20201030 15:51:52.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.013" endtime="20201030 15:51:52.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.010" endtime="20201030 15:51:52.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.510" endtime="20201030 15:51:52.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.508" endtime="20201030 15:51:52.043"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.066" endtime="20201030 15:51:52.084"></status>
</kw>
<msg timestamp="20201030 15:51:52.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.063" endtime="20201030 15:51:52.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.087" endtime="20201030 15:51:52.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.094" endtime="20201030 15:51:52.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.056" endtime="20201030 15:51:52.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.050" endtime="20201030 15:51:52.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.117" endtime="20201030 15:51:52.461"></status>
</kw>
<msg timestamp="20201030 15:51:52.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040916375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040936681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.113" endtime="20201030 15:51:52.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040916375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040936681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.471" endtime="20201030 15:51:52.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.489" endtime="20201030 15:51:52.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.106" endtime="20201030 15:51:52.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.102" endtime="20201030 15:51:52.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.506" level="INFO">${RESULT} = [{'diff': 2.0306000000004654e-05}, {'diff': 1.979099999999817e-05}, {'diff': 2.0834000000004294e-05}, {'diff': 2.038899999999566e-05}, {'diff': 2.031900000000475e-05}, {'diff': 2.083299999999788e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:52.498" endtime="20201030 15:51:52.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:52.517" level="INFO">${ACCURACY} = {'diff': [2.0306000000004654e-05, 1.979099999999817e-05, 2.0834000000004294e-05, 2.038899999999566e-05, 2.031900000000475e-05, 2.083299999999788e-05, 2.0833999999997355e-05, 2.031899999999781e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 15:51:52.508" endtime="20201030 15:51:52.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.528" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:51:52.526" endtime="20201030 15:51:52.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.533" level="INFO">VALUE: [2.0306000000004654e-05, 1.979099999999817e-05, 2.0834000000004294e-05, 2.038899999999566e-05, 2.031900000000475e-05, 2.083299999999788e-05, 2.0833999999997355e-05, 2.031899999999781e-05, 2.031899999999781e-05, 2.0291999999998145e-05, 1.979099999999817e-05, 2.086100000000396e-05, 2.084700000000439e-05, 2.030500000000518e-05, 1.9792000000004584e-05, 2.038899999999566e-05, 2.084699999999745e-05, 1.9791999999997645e-05, 2.038899999999566e-05, 2.0320000000004224e-05, 2.031899999999781e-05, 2.0833999999997355e-05, 2.031899999999781e-05, 1.9806000000004154e-05, 2.033299999999738e-05, 2.0320000000004224e-05, 2.0249999999999435e-05, 2.031899999999781e-05, 1.9777999999998075e-05, 2.0320000000004224e-05, 1.9847999999995924e-05, 2.030499999999824e-05, 1.9777999999998075e-05, 2.031899999999781e-05, 2.0263999999999005e-05, 1.984699999999645e-05, 2.031899999999781e-05, 2.0319999999997285e-05, 2.0319999999997285e-05, 2.030500000000518e-05, 2.0320000000004224e-05, 2.036100000000346e-05, 2.031899999999781e-05, 2.0305999999997715e-05, 2.036099999999652e-05, 2.0319999999997285e-05, 1.9735999999999365e-05, 2.0347999999996425e-05, 2.0320000000004224e-05, 2.031900000000475e-05]</msg>
<status status="PASS" starttime="20201030 15:51:52.530" endtime="20201030 15:51:52.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.519" endtime="20201030 15:51:52.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.546" endtime="20201030 15:51:52.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.541" endtime="20201030 15:51:52.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.539" endtime="20201030 15:51:52.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.046" endtime="20201030 15:51:52.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.044" endtime="20201030 15:51:52.571"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.593" endtime="20201030 15:51:52.613"></status>
</kw>
<msg timestamp="20201030 15:51:52.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.590" endtime="20201030 15:51:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.616" endtime="20201030 15:51:52.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.622" endtime="20201030 15:51:52.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.583" endtime="20201030 15:51:52.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.577" endtime="20201030 15:51:52.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.645" endtime="20201030 15:51:52.990"></status>
</kw>
<msg timestamp="20201030 15:51:52.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040805708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040829528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.642" endtime="20201030 15:51:52.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040805708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040829528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.000" endtime="20201030 15:51:53.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.019" endtime="20201030 15:51:53.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.635" endtime="20201030 15:51:53.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.630" endtime="20201030 15:51:53.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.036" level="INFO">${RESULT} = [{'diff': 2.3819999999993846e-05}, {'diff': 2.395900000000395e-05}, {'diff': 2.39169999999983e-05}, {'diff': 2.3778000000002075e-05}, {'diff': 2.3972000000004046e-05}, {'diff': 2.438899999999966e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:53.027" endtime="20201030 15:51:53.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:53.047" level="INFO">${ACCURACY} = {'diff': [2.3819999999993846e-05, 2.395900000000395e-05, 2.39169999999983e-05, 2.3778000000002075e-05, 2.3972000000004046e-05, 2.438899999999966e-05, 2.39169999999983e-05, 2.393100000000481e-05, 2.413...</msg>
<status status="PASS" starttime="20201030 15:51:53.038" endtime="20201030 15:51:53.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.058" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:51:53.056" endtime="20201030 15:51:53.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.063" level="INFO">VALUE: [2.3819999999993846e-05, 2.395900000000395e-05, 2.39169999999983e-05, 2.3778000000002075e-05, 2.3972000000004046e-05, 2.438899999999966e-05, 2.39169999999983e-05, 2.393100000000481e-05, 2.413899999999941e-05, 2.4598000000000675e-05, 2.445899999999751e-05, 2.419500000000463e-05, 2.462500000000034e-05, 2.422300000000377e-05, 2.4096999999993762e-05, 2.413899999999941e-05, 2.4221999999997357e-05, 2.412499999999984e-05, 2.4540999999995983e-05, 2.388899999999916e-05, 2.380500000000174e-05, 2.38890000000061e-05, 2.405500000000199e-05, 2.4679999999999147e-05, 2.3693999999997717e-05, 2.3749999999995997e-05, 2.440299999999923e-05, 2.390299999999873e-05, 2.380500000000174e-05, 2.405500000000199e-05, 2.4306000000001715e-05, 2.468099999999862e-05, 2.411100000000027e-05, 2.4334000000000855e-05, 2.415299999999898e-05, 2.3806000000001215e-05, 2.4570000000001535e-05, 2.4319999999994346e-05, 2.4555999999995026e-05, 2.436100000000052e-05, 2.4334000000000855e-05, 2.468099999999862e-05, 2.3791999999994706e-05, 2.37369999999959e-05, 2.3736000000003366e-05, 2.3749999999995997e-05, 2.4444000000005406e-05, 2.3915999999998827e-05, 2.440299999999923e-05, 2.419499999999769e-05]</msg>
<status status="PASS" starttime="20201030 15:51:53.060" endtime="20201030 15:51:53.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.049" endtime="20201030 15:51:53.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.076" endtime="20201030 15:51:53.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.071" endtime="20201030 15:51:53.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.069" endtime="20201030 15:51:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.573" endtime="20201030 15:51:53.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.572" endtime="20201030 15:51:53.101"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.123" endtime="20201030 15:51:53.141"></status>
</kw>
<msg timestamp="20201030 15:51:53.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.120" endtime="20201030 15:51:53.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.145" endtime="20201030 15:51:53.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.149" endtime="20201030 15:51:53.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.113" endtime="20201030 15:51:53.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.107" endtime="20201030 15:51:53.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.160" endtime="20201030 15:51:53.478"></status>
</kw>
<msg timestamp="20201030 15:51:53.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040849778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.158" endtime="20201030 15:51:53.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040849778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.488" endtime="20201030 15:51:53.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.507" endtime="20201030 15:51:53.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.155" endtime="20201030 15:51:53.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.153" endtime="20201030 15:51:53.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.524" level="INFO">${RESULT} = [{'diff': 2.4722000000004796e-05}, {'diff': 2.5388000000001187e-05}, {'diff': 2.5541999999996456e-05}, {'diff': 2.4848000000000925e-05}, {'diff': 2.5334000000001855e-05}, {'diff': 2.505500000000299e-0...</msg>
<status status="PASS" starttime="20201030 15:51:53.515" endtime="20201030 15:51:53.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:53.533" level="INFO">${ACCURACY} = {'diff': [2.4722000000004796e-05, 2.5388000000001187e-05, 2.5541999999996456e-05, 2.4848000000000925e-05, 2.5334000000001855e-05, 2.505500000000299e-05, 2.54169999999998e-05, 2.4999999999997247e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:51:53.526" endtime="20201030 15:51:53.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.544" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:51:53.542" endtime="20201030 15:51:53.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.550" level="INFO">VALUE: [2.4722000000004796e-05, 2.5388000000001187e-05, 2.5541999999996456e-05, 2.4848000000000925e-05, 2.5334000000001855e-05, 2.505500000000299e-05, 2.54169999999998e-05, 2.4999999999997247e-05, 2.54169999999998e-05, 2.5540999999996983e-05, 2.5526999999997413e-05, 2.540300000000023e-05, 2.4749999999996997e-05, 2.512500000000084e-05, 2.4792000000002645e-05, 2.515299999999998e-05, 2.5554999999996553e-05, 2.561100000000177e-05, 2.4999999999997247e-05, 2.5499999999997747e-05, 2.556900000000306e-05, 2.49169999999993e-05, 2.4805999999995276e-05, 2.536100000000152e-05, 2.566700000000005e-05, 2.5582999999995693e-05, 2.5235999999997927e-05, 2.469499999999819e-05, 2.519499999999869e-05, 2.5471999999998607e-05, 2.5388999999993722e-05, 2.5221999999998357e-05, 2.545899999999851e-05, 2.531900000000281e-05, 2.5250000000004436e-05, 2.522299999999783e-05, 2.5054999999996053e-05, 2.5333999999994916e-05, 2.556900000000306e-05, 2.5429999999999897e-05, 2.4902000000000257e-05, 2.505500000000299e-05, 2.5554999999996553e-05, 2.5402000000000757e-05, 2.538900000000066e-05, 2.561100000000177e-05, 2.506900000000256e-05, 2.5332999999995442e-05, 2.515299999999998e-05, 2.488900000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:51:53.547" endtime="20201030 15:51:53.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.535" endtime="20201030 15:51:53.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.562" endtime="20201030 15:51:53.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.558" endtime="20201030 15:51:53.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.556" endtime="20201030 15:51:53.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.103" endtime="20201030 15:51:53.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.102" endtime="20201030 15:51:53.588"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.610" endtime="20201030 15:51:53.630"></status>
</kw>
<msg timestamp="20201030 15:51:53.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.607" endtime="20201030 15:51:53.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.634" endtime="20201030 15:51:53.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.640" endtime="20201030 15:51:53.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.600" endtime="20201030 15:51:53.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.594" endtime="20201030 15:51:53.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.663" endtime="20201030 15:51:54.011"></status>
</kw>
<msg timestamp="20201030 15:51:54.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042819903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.660" endtime="20201030 15:51:54.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042819903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042846417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.021" endtime="20201030 15:51:54.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.040" endtime="20201030 15:51:54.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.653" endtime="20201030 15:51:54.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.648" endtime="20201030 15:51:54.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.057" level="INFO">${RESULT} = [{'diff': 2.6513999999998317e-05}, {'diff': 2.6360999999995582e-05}, {'diff': 2.5804999999996803e-05}, {'diff': 2.5999999999998247e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.6040999999997483e-05...</msg>
<status status="PASS" starttime="20201030 15:51:54.048" endtime="20201030 15:51:54.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:54.066" level="INFO">${ACCURACY} = {'diff': [2.6513999999998317e-05, 2.6360999999995582e-05, 2.5804999999996803e-05, 2.5999999999998247e-05, 2.59170000000003e-05, 2.6040999999997483e-05, 2.6333999999995916e-05, 2.6458000000000037e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:54.059" endtime="20201030 15:51:54.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.077" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:51:54.075" endtime="20201030 15:51:54.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.082" level="INFO">VALUE: [2.6513999999998317e-05, 2.6360999999995582e-05, 2.5804999999996803e-05, 2.5999999999998247e-05, 2.59170000000003e-05, 2.6040999999997483e-05, 2.6333999999995916e-05, 2.6458000000000037e-05, 2.584700000000245e-05, 2.5985999999998677e-05, 2.663900000000191e-05, 2.6221999999999357e-05, 2.6054999999997053e-05, 2.5818999999996373e-05, 2.5763999999997567e-05, 2.665300000000148e-05, 2.5694000000006656e-05, 2.5846999999995512e-05, 2.634700000000295e-05, 2.5791999999996706e-05, 2.612500000000184e-05, 2.6000000000005186e-05, 2.6388999999994722e-05, 2.612500000000184e-05, 2.6249999999998497e-05, 2.644499999999994e-05, 2.618100000000012e-05, 2.645899999999951e-05, 2.6527999999997887e-05, 2.6318999999996873e-05, 2.5750000000004936e-05, 2.640300000000123e-05, 2.6249999999998497e-05, 2.620899999999926e-05, 2.6207999999999787e-05, 2.569499999999919e-05, 2.663900000000191e-05, 2.6012999999998343e-05, 2.6138000000001937e-05, 2.637500000000209e-05, 2.5818999999996373e-05, 2.581900000000331e-05, 2.613900000000141e-05, 2.6680000000001147e-05, 2.6402999999994292e-05, 2.6194000000000217e-05, 2.6264000000005006e-05, 2.6568999999997123e-05, 2.6513999999998317e-05, 2.5943999999999967e-05]</msg>
<status status="PASS" starttime="20201030 15:51:54.079" endtime="20201030 15:51:54.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.068" endtime="20201030 15:51:54.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.096" endtime="20201030 15:51:54.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.090" endtime="20201030 15:51:54.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.088" endtime="20201030 15:51:54.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.590" endtime="20201030 15:51:54.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.588" endtime="20201030 15:51:54.121"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.144" endtime="20201030 15:51:54.163"></status>
</kw>
<msg timestamp="20201030 15:51:54.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.141" endtime="20201030 15:51:54.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.166" endtime="20201030 15:51:54.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.173" endtime="20201030 15:51:54.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.133" endtime="20201030 15:51:54.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.128" endtime="20201030 15:51:54.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.196" endtime="20201030 15:51:54.542"></status>
</kw>
<msg timestamp="20201030 15:51:54.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040834597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.192" endtime="20201030 15:51:54.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040834597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.552" endtime="20201030 15:51:54.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.570" endtime="20201030 15:51:54.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.185" endtime="20201030 15:51:54.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.181" endtime="20201030 15:51:54.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.587" level="INFO">${RESULT} = [{'diff': 2.7318999999997873e-05}, {'diff': 2.7402000000002757e-05}, {'diff': 2.706900000000456e-05}, {'diff': 2.766700000000205e-05}, {'diff': 2.758300000000463e-05}, {'diff': 2.6958000000000537e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:54.578" endtime="20201030 15:51:54.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:54.598" level="INFO">${ACCURACY} = {'diff': [2.7318999999997873e-05, 2.7402000000002757e-05, 2.706900000000456e-05, 2.766700000000205e-05, 2.758300000000463e-05, 2.6958000000000537e-05, 2.743100000000137e-05, 2.6708000000000287e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:51:54.589" endtime="20201030 15:51:54.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.609" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:51:54.606" endtime="20201030 15:51:54.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.614" level="INFO">VALUE: [2.7318999999997873e-05, 2.7402000000002757e-05, 2.706900000000456e-05, 2.766700000000205e-05, 2.758300000000463e-05, 2.6958000000000537e-05, 2.743100000000137e-05, 2.6708000000000287e-05, 2.7541999999998457e-05, 2.6694000000000717e-05, 2.6846999999996513e-05, 2.766700000000205e-05, 2.7458000000001037e-05, 2.7458000000001037e-05, 2.738900000000266e-05, 2.688900000000216e-05, 2.7472000000000607e-05, 2.7362000000002995e-05, 2.7222000000000357e-05, 2.670899999999976e-05, 2.698699999999915e-05, 2.695900000000001e-05, 2.6861999999995556e-05, 2.7527999999998887e-05, 2.74170000000018e-05, 2.7583999999997166e-05, 2.740199999999582e-05, 2.6944000000000967e-05, 2.6721999999999857e-05, 2.7402999999995292e-05, 2.7694000000001717e-05, 2.7568999999998123e-05, 2.733300000000438e-05, 2.7124999999995902e-05, 2.7235999999999927e-05, 2.6694000000000717e-05, 2.7138999999995472e-05, 2.7249999999999497e-05, 2.694500000000044e-05, 2.6694000000000717e-05, 2.738900000000266e-05, 2.7124999999995902e-05, 2.6805000000004742e-05, 2.6999999999999247e-05, 2.6708000000000287e-05, 2.734700000000395e-05, 2.7652999999995542e-05, 2.715300000000198e-05, 2.7138999999995472e-05, 2.694500000000044e-05]</msg>
<status status="PASS" starttime="20201030 15:51:54.611" endtime="20201030 15:51:54.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.600" endtime="20201030 15:51:54.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.632" endtime="20201030 15:51:54.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.628" endtime="20201030 15:51:54.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.626" endtime="20201030 15:51:54.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.123" endtime="20201030 15:51:54.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.122" endtime="20201030 15:51:54.658"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.680" endtime="20201030 15:51:54.699"></status>
</kw>
<msg timestamp="20201030 15:51:54.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.677" endtime="20201030 15:51:54.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.702" endtime="20201030 15:51:54.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.708" endtime="20201030 15:51:54.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.669" endtime="20201030 15:51:54.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.664" endtime="20201030 15:51:54.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.731" endtime="20201030 15:51:55.079"></status>
</kw>
<msg timestamp="20201030 15:51:55.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040742778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040771264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.728" endtime="20201030 15:51:55.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040742778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040771264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.089" endtime="20201030 15:51:55.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.107" endtime="20201030 15:51:55.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.721" endtime="20201030 15:51:55.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.716" endtime="20201030 15:51:55.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.124" level="INFO">${RESULT} = [{'diff': 2.8486000000001177e-05}, {'diff': 2.8056000000005465e-05}, {'diff': 2.8166000000003077e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.8221999999994418e-05}, {'diff': 2.768100000000162e-0...</msg>
<status status="PASS" starttime="20201030 15:51:55.115" endtime="20201030 15:51:55.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:55.135" level="INFO">${ACCURACY} = {'diff': [2.8486000000001177e-05, 2.8056000000005465e-05, 2.8166000000003077e-05, 2.7805999999998277e-05, 2.8221999999994418e-05, 2.768100000000162e-05, 2.865199999999707e-05, 2.8722000000001857e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:55.126" endtime="20201030 15:51:55.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.146" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:51:55.144" endtime="20201030 15:51:55.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.151" level="INFO">VALUE: [2.8486000000001177e-05, 2.8056000000005465e-05, 2.8166000000003077e-05, 2.7805999999998277e-05, 2.8221999999994418e-05, 2.768100000000162e-05, 2.865199999999707e-05, 2.8722000000001857e-05, 2.7638999999995972e-05, 2.8416000000003327e-05, 2.815199999999657e-05, 2.8556000000005966e-05, 2.8374999999997152e-05, 2.8291999999999207e-05, 2.8513999999993378e-05, 2.7818999999998373e-05, 2.8082999999998193e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.762500000000334e-05, 2.7736000000000427e-05, 2.7652999999995542e-05, 2.7832999999997943e-05, 2.8444000000002467e-05, 2.7957999999994598e-05, 2.8360999999997583e-05, 2.8486000000001177e-05, 2.8056000000005465e-05, 2.8402999999996292e-05, 2.7902999999995792e-05, 2.8458000000002037e-05, 2.8305999999998777e-05, 2.787500000000359e-05, 2.769500000000119e-05, 2.770900000000076e-05, 2.8054999999999053e-05, 2.8556000000005966e-05, 2.866599999999664e-05, 2.8360999999997583e-05, 2.822300000000083e-05, 2.8068999999998623e-05, 2.8013000000000343e-05, 2.8041999999998957e-05, 2.8360999999997583e-05, 2.8250000000000497e-05, 2.8388999999996722e-05, 2.7804999999998803e-05, 2.8360999999997583e-05, 2.7806000000005215e-05, 2.8332999999998443e-05]</msg>
<status status="PASS" starttime="20201030 15:51:55.148" endtime="20201030 15:51:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.137" endtime="20201030 15:51:55.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.164" endtime="20201030 15:51:55.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.159" endtime="20201030 15:51:55.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.157" endtime="20201030 15:51:55.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.660" endtime="20201030 15:51:55.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.658" endtime="20201030 15:51:55.189"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.211" endtime="20201030 15:51:55.230"></status>
</kw>
<msg timestamp="20201030 15:51:55.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.208" endtime="20201030 15:51:55.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.234" endtime="20201030 15:51:55.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.240" endtime="20201030 15:51:55.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.201" endtime="20201030 15:51:55.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.195" endtime="20201030 15:51:55.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.263" endtime="20201030 15:51:55.609"></status>
</kw>
<msg timestamp="20201030 15:51:55.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040842542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.260" endtime="20201030 15:51:55.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040842542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.619" endtime="20201030 15:51:55.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.638" endtime="20201030 15:51:55.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.253" endtime="20201030 15:51:55.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.248" endtime="20201030 15:51:55.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.655" level="INFO">${RESULT} = [{'diff': 2.969500000000319e-05}, {'diff': 2.9680000000004148e-05}, {'diff': 2.8736000000001427e-05}, {'diff': 2.916599999999714e-05}, {'diff': 2.8694000000002717e-05}, {'diff': 2.9082999999999193e-05...</msg>
<status status="PASS" starttime="20201030 15:51:55.646" endtime="20201030 15:51:55.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:55.666" level="INFO">${ACCURACY} = {'diff': [2.969500000000319e-05, 2.9680000000004148e-05, 2.8736000000001427e-05, 2.916599999999714e-05, 2.8694000000002717e-05, 2.9082999999999193e-05, 2.8860999999998083e-05, 2.8888999999997222e-05, ...</msg>
<status status="PASS" starttime="20201030 15:51:55.657" endtime="20201030 15:51:55.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.678" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:51:55.676" endtime="20201030 15:51:55.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.684" level="INFO">VALUE: [2.969500000000319e-05, 2.9680000000004148e-05, 2.8736000000001427e-05, 2.916599999999714e-05, 2.8694000000002717e-05, 2.9082999999999193e-05, 2.8860999999998083e-05, 2.8888999999997222e-05, 2.9485999999995238e-05, 2.9055999999999527e-05, 2.94170000000038e-05, 2.9305999999999777e-05, 2.944500000000294e-05, 2.9069999999999097e-05, 2.9069999999999097e-05, 2.9319999999999347e-05, 2.893100000000287e-05, 2.8944000000002967e-05, 2.947300000000208e-05, 2.9152999999997042e-05, 2.9402999999997292e-05, 2.9194999999995752e-05, 2.9138999999997472e-05, 2.9596999999999263e-05, 2.937500000000509e-05, 2.965199999999807e-05, 2.8610999999997833e-05, 2.8958000000002537e-05, 2.9500000000001747e-05, 2.8819000000006312e-05, 2.9569999999999597e-05, 2.869399999999578e-05, 2.8971999999995168e-05, 2.8736000000001427e-05, 2.9582999999999693e-05, 2.8846999999998513e-05, 2.888900000000416e-05, 2.9069999999999097e-05, 2.8818999999999373e-05, 2.916700000000355e-05, 2.965199999999807e-05, 2.9180000000003647e-05, 2.884700000000545e-05, 2.9430999999996432e-05, 2.9500000000001747e-05, 2.9374999999998153e-05, 2.968100000000362e-05, 2.9374999999998153e-05, 2.9680999999996682e-05, 2.869500000000219e-05]</msg>
<status status="PASS" starttime="20201030 15:51:55.681" endtime="20201030 15:51:55.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.668" endtime="20201030 15:51:55.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.699" endtime="20201030 15:51:55.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.695" endtime="20201030 15:51:55.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.692" endtime="20201030 15:51:55.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.191" endtime="20201030 15:51:55.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.190" endtime="20201030 15:51:55.726"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.752" endtime="20201030 15:51:55.773"></status>
</kw>
<msg timestamp="20201030 15:51:55.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.748" endtime="20201030 15:51:55.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.777" endtime="20201030 15:51:55.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.783" endtime="20201030 15:51:55.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.740" endtime="20201030 15:51:55.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.733" endtime="20201030 15:51:55.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.807" endtime="20201030 15:51:56.141"></status>
</kw>
<msg timestamp="20201030 15:51:56.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048171069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04820125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:55.803" endtime="20201030 15:51:56.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048171069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04820125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:56.150" endtime="20201030 15:51:56.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.169" endtime="20201030 15:51:56.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.796" endtime="20201030 15:51:56.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.791" endtime="20201030 15:51:56.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.186" level="INFO">${RESULT} = [{'diff': 3.018100000000412e-05}, {'diff': 3.0388999999998723e-05}, {'diff': 3.012500000000584e-05}, {'diff': 3.0458999999996572e-05}, {'diff': 2.9819999999999847e-05}, {'diff': 3.022199999999642e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:56.177" endtime="20201030 15:51:56.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:56.195" level="INFO">${ACCURACY} = {'diff': [3.018100000000412e-05, 3.0388999999998723e-05, 3.012500000000584e-05, 3.0458999999996572e-05, 2.9819999999999847e-05, 3.022199999999642e-05, 3.048599999999624e-05, 2.968100000000362e-05, 2.9...</msg>
<status status="PASS" starttime="20201030 15:51:56.188" endtime="20201030 15:51:56.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.206" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:51:56.204" endtime="20201030 15:51:56.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.211" level="INFO">VALUE: [3.018100000000412e-05, 3.0388999999998723e-05, 3.012500000000584e-05, 3.0458999999996572e-05, 2.9819999999999847e-05, 3.022199999999642e-05, 3.048599999999624e-05, 2.968100000000362e-05, 2.9778000000001137e-05, 2.9874999999998653e-05, 3.0138999999998473e-05, 2.9778000000001137e-05, 3.0083999999999667e-05, 3.0526999999995474e-05, 3.0374999999999153e-05, 3.0013000000002343e-05, 2.987500000000559e-05, 3.0250000000002497e-05, 2.9722000000002857e-05, 3.0180000000004648e-05, 2.9902999999997792e-05, 3.0333999999999917e-05, 3.0374999999999153e-05, 2.9846999999999513e-05, 3.0070000000000097e-05, 2.9986000000002677e-05, 3.0124999999998903e-05, 2.9819999999999847e-05, 2.9986000000002677e-05, 3.055600000000103e-05, 2.9819999999999847e-05, 3.013900000000541e-05, 3.055600000000103e-05, 2.9846999999999513e-05, 3.0347999999999486e-05, 3.068099999999768e-05, 2.9944000000003967e-05, 2.9806000000000277e-05, 2.9847999999998986e-05, 2.9874999999998653e-05, 2.9708000000003287e-05, 2.9736000000002427e-05, 2.9680999999996682e-05, 3.0180000000004648e-05, 2.9819000000000373e-05, 2.9832999999999943e-05, 3.0166999999997612e-05, 3.022199999999642e-05, 3.0124999999998903e-05, 3.0305999999993838e-05]</msg>
<status status="PASS" starttime="20201030 15:51:56.208" endtime="20201030 15:51:56.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.197" endtime="20201030 15:51:56.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.225" endtime="20201030 15:51:56.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.219" endtime="20201030 15:51:56.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.217" endtime="20201030 15:51:56.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.728" endtime="20201030 15:51:56.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.727" endtime="20201030 15:51:56.250"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.273" endtime="20201030 15:51:56.292"></status>
</kw>
<msg timestamp="20201030 15:51:56.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.269" endtime="20201030 15:51:56.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.295" endtime="20201030 15:51:56.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.302" endtime="20201030 15:51:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.262" endtime="20201030 15:51:56.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.257" endtime="20201030 15:51:56.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.325" endtime="20201030 15:51:56.659"></status>
</kw>
<msg timestamp="20201030 15:51:56.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040735097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.321" endtime="20201030 15:51:56.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040735097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.669" endtime="20201030 15:51:56.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.687" endtime="20201030 15:51:56.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.314" endtime="20201030 15:51:56.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.310" endtime="20201030 15:51:56.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.704" level="INFO">${RESULT} = [{'diff': 3.076399999999563e-05}, {'diff': 3.113899999999947e-05}, {'diff': 3.069399999999778e-05}, {'diff': 3.108300000000119e-05}, {'diff': 3.138899999999972e-05}, {'diff': 3.113899999999947e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:56.696" endtime="20201030 15:51:56.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:56.715" level="INFO">${ACCURACY} = {'diff': [3.076399999999563e-05, 3.113899999999947e-05, 3.069399999999778e-05, 3.108300000000119e-05, 3.138899999999972e-05, 3.113899999999947e-05, 3.10700000000011e-05, 3.101399999999588e-05, 3.10560...</msg>
<status status="PASS" starttime="20201030 15:51:56.706" endtime="20201030 15:51:56.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.726" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:51:56.723" endtime="20201030 15:51:56.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.731" level="INFO">VALUE: [3.076399999999563e-05, 3.113899999999947e-05, 3.069399999999778e-05, 3.108300000000119e-05, 3.138899999999972e-05, 3.113899999999947e-05, 3.10700000000011e-05, 3.101399999999588e-05, 3.105600000000153e-05, 3.1332999999994504e-05, 3.082000000000085e-05, 3.090299999999879e-05, 3.068100000000462e-05, 3.069499999999725e-05, 3.069500000000419e-05, 3.086100000000008e-05, 3.074999999999606e-05, 3.158400000000117e-05, 3.098699999999621e-05, 3.0750000000003e-05, 3.091699999999836e-05, 3.091699999999836e-05, 3.12370000000034e-05, 3.069500000000419e-05, 3.141599999999939e-05, 3.124999999999656e-05, 3.12500000000035e-05, 3.081900000000137e-05, 3.09579999999976e-05, 3.138899999999972e-05, 3.140299999999929e-05, 3.163899999999997e-05, 3.0790999999995294e-05, 3.0846999999993574e-05, 3.11249999999999e-05, 3.122200000000436e-05, 3.10700000000011e-05, 3.088899999999922e-05, 3.083400000000042e-05, 3.084700000000051e-05, 3.098599999999674e-05, 3.082000000000085e-05, 3.134700000000101e-05, 3.101400000000282e-05, 3.147199999999767e-05, 3.1598000000000737e-05, 3.087499999999965e-05, 3.080600000000128e-05, 3.097299999999664e-05, 3.166599999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:51:56.728" endtime="20201030 15:51:56.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.717" endtime="20201030 15:51:56.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.743" endtime="20201030 15:51:56.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.739" endtime="20201030 15:51:56.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.737" endtime="20201030 15:51:56.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.252" endtime="20201030 15:51:56.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.251" endtime="20201030 15:51:56.768"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.791" endtime="20201030 15:51:56.810"></status>
</kw>
<msg timestamp="20201030 15:51:56.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.787" endtime="20201030 15:51:56.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.814" endtime="20201030 15:51:56.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.820" endtime="20201030 15:51:56.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.780" endtime="20201030 15:51:56.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.775" endtime="20201030 15:51:56.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.843" endtime="20201030 15:51:57.186"></status>
</kw>
<msg timestamp="20201030 15:51:57.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040808569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040840875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.840" endtime="20201030 15:51:57.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040808569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040840875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.196" endtime="20201030 15:51:57.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.214" endtime="20201030 15:51:57.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.833" endtime="20201030 15:51:57.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.828" endtime="20201030 15:51:57.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.231" level="INFO">${RESULT} = [{'diff': 3.230599999999584e-05}, {'diff': 3.2554999999996614e-05}, {'diff': 3.1860999999994144e-05}, {'diff': 3.245899999999857e-05}, {'diff': 3.206900000000262e-05}, {'diff': 3.241699999999986e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:57.222" endtime="20201030 15:51:57.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:57.242" level="INFO">${ACCURACY} = {'diff': [3.230599999999584e-05, 3.2554999999996614e-05, 3.1860999999994144e-05, 3.245899999999857e-05, 3.206900000000262e-05, 3.241699999999986e-05, 3.180599999999534e-05, 3.231999999999541e-05, 3.19...</msg>
<status status="PASS" starttime="20201030 15:51:57.233" endtime="20201030 15:51:57.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.253" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:51:57.251" endtime="20201030 15:51:57.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.259" level="INFO">VALUE: [3.230599999999584e-05, 3.2554999999996614e-05, 3.1860999999994144e-05, 3.245899999999857e-05, 3.206900000000262e-05, 3.241699999999986e-05, 3.180599999999534e-05, 3.231999999999541e-05, 3.197199999999817e-05, 3.237500000000115e-05, 3.199999999999731e-05, 3.190299999999979e-05, 3.174999999999706e-05, 3.2374999999994214e-05, 3.2624999999994464e-05, 3.242999999999996e-05, 3.222299999999789e-05, 3.258399999999523e-05, 3.176400000000357e-05, 3.199999999999731e-05, 3.220799999999885e-05, 3.170799999999835e-05, 3.188900000000022e-05, 3.216699999999961e-05, 3.222199999999842e-05, 3.247199999999867e-05, 3.169399999999878e-05, 3.186100000000108e-05, 3.222200000000536e-05, 3.224999999999756e-05, 3.242999999999996e-05, 3.2082999999995254e-05, 3.220800000000579e-05, 3.224999999999756e-05, 3.216699999999961e-05, 3.180599999999534e-05, 3.206999999999516e-05, 3.251400000000432e-05, 3.20700000000021e-05, 3.215300000000004e-05, 3.238900000000072e-05, 3.188900000000022e-05, 3.224999999999756e-05, 3.182000000000185e-05, 3.17370000000039e-05, 3.2263000000004594e-05, 3.234700000000201e-05, 3.216699999999961e-05, 3.1790999999996294e-05, 3.215300000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:51:57.256" endtime="20201030 15:51:57.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.244" endtime="20201030 15:51:57.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.271" endtime="20201030 15:51:57.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.267" endtime="20201030 15:51:57.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.264" endtime="20201030 15:51:57.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.770" endtime="20201030 15:51:57.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.769" endtime="20201030 15:51:57.296"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.318" endtime="20201030 15:51:57.339"></status>
</kw>
<msg timestamp="20201030 15:51:57.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.315" endtime="20201030 15:51:57.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.342" endtime="20201030 15:51:57.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.348" endtime="20201030 15:51:57.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.308" endtime="20201030 15:51:57.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.302" endtime="20201030 15:51:57.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.372" endtime="20201030 15:51:57.711"></status>
</kw>
<msg timestamp="20201030 15:51:57.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040686806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040719792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.368" endtime="20201030 15:51:57.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040686806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040719792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.720" endtime="20201030 15:51:57.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.739" endtime="20201030 15:51:57.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.361" endtime="20201030 15:51:57.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.356" endtime="20201030 15:51:57.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.756" level="INFO">${RESULT} = [{'diff': 3.298599999999874e-05}, {'diff': 3.315300000000104e-05}, {'diff': 3.316700000000061e-05}, {'diff': 3.268099999999968e-05}, {'diff': 3.284799999999505e-05}, {'diff': 3.366700000000111e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:57.747" endtime="20201030 15:51:57.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:57.765" level="INFO">${ACCURACY} = {'diff': [3.298599999999874e-05, 3.315300000000104e-05, 3.316700000000061e-05, 3.268099999999968e-05, 3.284799999999505e-05, 3.366700000000111e-05, 3.3054999999997114e-05, 3.336100000000258e-05, 3.344...</msg>
<status status="PASS" starttime="20201030 15:51:57.758" endtime="20201030 15:51:57.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.776" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:51:57.774" endtime="20201030 15:51:57.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.781" level="INFO">VALUE: [3.298599999999874e-05, 3.315300000000104e-05, 3.316700000000061e-05, 3.268099999999968e-05, 3.284799999999505e-05, 3.366700000000111e-05, 3.3054999999997114e-05, 3.336100000000258e-05, 3.3445e-05, 3.340199999999488e-05, 3.291600000000089e-05, 3.28050000000038e-05, 3.286100000000208e-05, 3.316600000000114e-05, 3.347199999999967e-05, 3.3332999999996504e-05, 3.337500000000215e-05, 3.3318999999996934e-05, 3.279200000000371e-05, 3.3374999999995214e-05, 3.294400000000003e-05, 3.3596999999996324e-05, 3.322199999999942e-05, 3.338900000000172e-05, 3.31250000000019e-05, 3.299999999999831e-05, 3.308300000000319e-05, 3.2846999999995574e-05, 3.279199999999677e-05, 3.368100000000068e-05, 3.347299999999914e-05, 3.30700000000031e-05, 3.324999999999856e-05, 3.3054999999997114e-05, 3.3445e-05, 3.2846999999995574e-05, 3.299999999999831e-05, 3.2777000000004664e-05, 3.333300000000344e-05, 3.344400000000053e-05, 3.365300000000154e-05, 3.288900000000122e-05, 3.306999999999616e-05, 3.323599999999899e-05, 3.358300000000369e-05, 3.333300000000344e-05, 3.347199999999967e-05, 3.352799999999795e-05, 3.282000000000285e-05, 3.2750000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:51:57.778" endtime="20201030 15:51:57.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.767" endtime="20201030 15:51:57.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.794" endtime="20201030 15:51:57.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.790" endtime="20201030 15:51:57.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.787" endtime="20201030 15:51:57.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.298" endtime="20201030 15:51:57.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.297" endtime="20201030 15:51:57.819"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.841" endtime="20201030 15:51:57.862"></status>
</kw>
<msg timestamp="20201030 15:51:57.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.838" endtime="20201030 15:51:57.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.866" endtime="20201030 15:51:57.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.872" endtime="20201030 15:51:57.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.831" endtime="20201030 15:51:57.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.825" endtime="20201030 15:51:57.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.897" endtime="20201030 15:51:58.232"></status>
</kw>
<msg timestamp="20201030 15:51:58.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04236925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042403639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:57.894" endtime="20201030 15:51:58.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04236925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042403639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:58.241" endtime="20201030 15:51:58.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.260" endtime="20201030 15:51:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.885" endtime="20201030 15:51:58.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.880" endtime="20201030 15:51:58.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.277" level="INFO">${RESULT} = [{'diff': 3.438900000000272e-05}, {'diff': 3.382000000000385e-05}, {'diff': 3.4110999999996394e-05}, {'diff': 3.409700000000376e-05}, {'diff': 3.431999999999741e-05}, {'diff': 3.3776999999998725e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:58.269" endtime="20201030 15:51:58.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:58.287" level="INFO">${ACCURACY} = {'diff': [3.438900000000272e-05, 3.382000000000385e-05, 3.4110999999996394e-05, 3.409700000000376e-05, 3.431999999999741e-05, 3.3776999999998725e-05, 3.4138000000003e-05, 3.419500000000075e-05, 3.4249...</msg>
<status status="PASS" starttime="20201030 15:51:58.279" endtime="20201030 15:51:58.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.297" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:51:58.295" endtime="20201030 15:51:58.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.303" level="INFO">VALUE: [3.438900000000272e-05, 3.382000000000385e-05, 3.4110999999996394e-05, 3.409700000000376e-05, 3.431999999999741e-05, 3.3776999999998725e-05, 3.4138000000003e-05, 3.419500000000075e-05, 3.424999999999956e-05, 3.368100000000068e-05, 3.441600000000239e-05, 3.4124999999995964e-05, 3.4596999999997324e-05, 3.468000000000221e-05, 3.3804999999997865e-05, 3.39580000000006e-05, 3.419400000000128e-05, 3.4568999999998185e-05, 3.4610999999996894e-05, 3.372199999999992e-05, 3.42500000000065e-05, 3.366700000000111e-05, 3.434800000000349e-05, 3.444400000000153e-05, 3.466700000000211e-05, 3.402799999999845e-05, 3.369500000000025e-05, 3.433400000000392e-05, 3.4445000000001e-05, 3.395900000000007e-05, 3.387500000000265e-05, 3.399999999999931e-05, 3.413900000000247e-05, 3.4262999999999655e-05, 3.4596999999997324e-05, 3.447300000000014e-05, 3.393000000000146e-05, 3.3874999999995714e-05, 3.4569000000005123e-05, 3.372199999999992e-05, 3.419500000000075e-05, 3.406999999999716e-05, 3.422200000000042e-05, 3.368000000000121e-05, 3.468100000000168e-05, 3.380599999999734e-05, 3.379199999999777e-05, 3.4304999999998365e-05, 3.440300000000229e-05, 3.420800000000085e-05]</msg>
<status status="PASS" starttime="20201030 15:51:58.300" endtime="20201030 15:51:58.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.288" endtime="20201030 15:51:58.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.317" endtime="20201030 15:51:58.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.311" endtime="20201030 15:51:58.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.308" endtime="20201030 15:51:58.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.821" endtime="20201030 15:51:58.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.819" endtime="20201030 15:51:58.342"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.364" endtime="20201030 15:51:58.384"></status>
</kw>
<msg timestamp="20201030 15:51:58.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.361" endtime="20201030 15:51:58.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.387" endtime="20201030 15:51:58.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.393" endtime="20201030 15:51:58.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.354" endtime="20201030 15:51:58.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.348" endtime="20201030 15:51:58.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.418" endtime="20201030 15:51:58.758"></status>
</kw>
<msg timestamp="20201030 15:51:58.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040490778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.414" endtime="20201030 15:51:58.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040490778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040526292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.768" endtime="20201030 15:51:58.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.786" endtime="20201030 15:51:58.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.407" endtime="20201030 15:51:58.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.402" endtime="20201030 15:51:58.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.803" level="INFO">${RESULT} = [{'diff': 3.551400000000038e-05}, {'diff': 3.491700000000236e-05}, {'diff': 3.545900000000157e-05}, {'diff': 3.547200000000167e-05}, {'diff': 3.470800000000135e-05}, {'diff': 3.473600000000049e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:58.795" endtime="20201030 15:51:58.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:58.814" level="INFO">${ACCURACY} = {'diff': [3.551400000000038e-05, 3.491700000000236e-05, 3.545900000000157e-05, 3.547200000000167e-05, 3.470800000000135e-05, 3.473600000000049e-05, 3.543000000000296e-05, 3.5388999999996784e-05, 3.513...</msg>
<status status="PASS" starttime="20201030 15:51:58.806" endtime="20201030 15:51:58.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.825" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:51:58.823" endtime="20201030 15:51:58.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.830" level="INFO">VALUE: [3.551400000000038e-05, 3.491700000000236e-05, 3.545900000000157e-05, 3.547200000000167e-05, 3.470800000000135e-05, 3.473600000000049e-05, 3.543000000000296e-05, 3.5388999999996784e-05, 3.5138999999996534e-05, 3.56659999999967e-05, 3.470800000000135e-05, 3.5318999999998935e-05, 3.5568999999999185e-05, 3.5652999999996604e-05, 3.4874999999996714e-05, 3.545799999999516e-05, 3.5374999999997214e-05, 3.519400000000228e-05, 3.570900000000182e-05, 3.5583000000005693e-05, 3.5346999999998074e-05, 3.565300000000354e-05, 3.5290999999999795e-05, 3.481999999999791e-05, 3.475000000000006e-05, 3.5472999999994204e-05, 3.547300000000114e-05, 3.5138999999996534e-05, 3.5596999999998324e-05, 3.5026999999999975e-05, 3.4610999999996894e-05, 3.486100000000408e-05, 3.5568999999999185e-05, 3.5068999999998685e-05, 3.526400000000013e-05, 3.547200000000167e-05, 3.526400000000013e-05, 3.473600000000049e-05, 3.498600000000074e-05, 3.551400000000038e-05, 3.525000000000056e-05, 3.520800000000185e-05, 3.493100000000193e-05, 3.5416999999995924e-05, 3.522199999999448e-05, 3.548600000000124e-05, 3.5138999999996534e-05, 3.536199999999712e-05, 3.51659999999962e-05, 3.522300000000089e-05]</msg>
<status status="PASS" starttime="20201030 15:51:58.827" endtime="20201030 15:51:58.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.816" endtime="20201030 15:51:58.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.842" endtime="20201030 15:51:58.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.838" endtime="20201030 15:51:58.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.836" endtime="20201030 15:51:58.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.344" endtime="20201030 15:51:58.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.342" endtime="20201030 15:51:58.867"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.890" endtime="20201030 15:51:58.911"></status>
</kw>
<msg timestamp="20201030 15:51:58.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.886" endtime="20201030 15:51:58.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.914" endtime="20201030 15:51:58.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.920" endtime="20201030 15:51:58.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.879" endtime="20201030 15:51:58.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.874" endtime="20201030 15:51:58.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.943" endtime="20201030 15:51:59.276"></status>
</kw>
<msg timestamp="20201030 15:51:59.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040893625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.940" endtime="20201030 15:51:59.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040893625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.286" endtime="20201030 15:51:59.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.304" endtime="20201030 15:51:59.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.933" endtime="20201030 15:51:59.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.928" endtime="20201030 15:51:59.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.321" level="INFO">${RESULT} = [{'diff': 3.666700000000411e-05}, {'diff': 3.6374999999998214e-05}, {'diff': 3.644399999999659e-05}, {'diff': 3.573600000000149e-05}, {'diff': 3.6124999999997964e-05}, {'diff': 3.570800000000235e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:59.312" endtime="20201030 15:51:59.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:59.332" level="INFO">${ACCURACY} = {'diff': [3.666700000000411e-05, 3.6374999999998214e-05, 3.644399999999659e-05, 3.573600000000149e-05, 3.6124999999997964e-05, 3.570800000000235e-05, 3.6638999999998034e-05, 3.6124999999997964e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:51:59.323" endtime="20201030 15:51:59.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.343" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:51:59.341" endtime="20201030 15:51:59.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.348" level="INFO">VALUE: [3.666700000000411e-05, 3.6374999999998214e-05, 3.644399999999659e-05, 3.573600000000149e-05, 3.6124999999997964e-05, 3.570800000000235e-05, 3.6638999999998034e-05, 3.6124999999997964e-05, 3.580599999999934e-05, 3.6124999999997964e-05, 3.605599999999959e-05, 3.652800000000095e-05, 3.6652999999997604e-05, 3.616600000000414e-05, 3.633399999999898e-05, 3.633399999999898e-05, 3.6138999999997534e-05, 3.6068999999999685e-05, 3.668000000000421e-05, 3.641700000000386e-05, 3.600000000000131e-05, 3.601400000000088e-05, 3.59580000000026e-05, 3.6388999999997784e-05, 3.6318999999999935e-05, 3.580599999999934e-05, 3.6388999999997784e-05, 3.651400000000138e-05, 3.572200000000192e-05, 3.651400000000138e-05, 3.615300000000404e-05, 3.64580000000031e-05, 3.593100000000293e-05, 3.613900000000447e-05, 3.5930999999995994e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.5902999999996854e-05, 3.6222999999994954e-05, 3.580599999999934e-05, 3.6082999999999255e-05, 3.605600000000653e-05, 3.62780000000007e-05, 3.5791000000000295e-05, 3.6318999999999935e-05, 3.647200000000267e-05, 3.644400000000353e-05, 3.604200000000002e-05, 3.622200000000242e-05, 3.648600000000224e-05]</msg>
<status status="PASS" starttime="20201030 15:51:59.345" endtime="20201030 15:51:59.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.334" endtime="20201030 15:51:59.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.361" endtime="20201030 15:51:59.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.356" endtime="20201030 15:51:59.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.354" endtime="20201030 15:51:59.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.869" endtime="20201030 15:51:59.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.868" endtime="20201030 15:51:59.385"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.408" endtime="20201030 15:51:59.428"></status>
</kw>
<msg timestamp="20201030 15:51:59.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.404" endtime="20201030 15:51:59.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.431" endtime="20201030 15:51:59.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.438" endtime="20201030 15:51:59.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.397" endtime="20201030 15:51:59.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.392" endtime="20201030 15:51:59.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.462" endtime="20201030 15:51:59.798"></status>
</kw>
<msg timestamp="20201030 15:51:59.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04083175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040868597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:59.459" endtime="20201030 15:51:59.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04083175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040868597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:59.808" endtime="20201030 15:51:59.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.826" endtime="20201030 15:51:59.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.451" endtime="20201030 15:51:59.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.446" endtime="20201030 15:51:59.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.843" level="INFO">${RESULT} = [{'diff': 3.6846999999999575e-05}, {'diff': 3.76659999999987e-05}, {'diff': 3.716700000000461e-05}, {'diff': 3.693100000000393e-05}, {'diff': 3.724999999999562e-05}, {'diff': 3.6819000000000435e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:59.835" endtime="20201030 15:51:59.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:51:59.853" level="INFO">${ACCURACY} = {'diff': [3.6846999999999575e-05, 3.76659999999987e-05, 3.716700000000461e-05, 3.693100000000393e-05, 3.724999999999562e-05, 3.6819000000000435e-05, 3.770800000000435e-05, 3.7680999999997744e-05, 3.74...</msg>
<status status="PASS" starttime="20201030 15:51:59.845" endtime="20201030 15:51:59.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.863" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:51:59.861" endtime="20201030 15:51:59.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.869" level="INFO">VALUE: [3.6846999999999575e-05, 3.76659999999987e-05, 3.716700000000461e-05, 3.693100000000393e-05, 3.724999999999562e-05, 3.6819000000000435e-05, 3.770800000000435e-05, 3.7680999999997744e-05, 3.7402999999998354e-05, 3.732000000000041e-05, 3.766700000000511e-05, 3.7513000000002905e-05, 3.7388999999998784e-05, 3.722300000000289e-05, 3.737500000000615e-05, 3.7166999999997674e-05, 3.697199999999623e-05, 3.7222999999995954e-05, 3.694399999999709e-05, 3.6819000000000435e-05, 3.738799999999931e-05, 3.6805000000000865e-05, 3.7319000000000935e-05, 3.7319000000000935e-05, 3.743000000000496e-05, 3.6846999999999575e-05, 3.750000000000281e-05, 3.672200000000292e-05, 3.7138999999998534e-05, 3.7388999999998784e-05, 3.701399999999494e-05, 3.74859999999963e-05, 3.7416999999997924e-05, 3.747200000000367e-05, 3.757000000000066e-05, 3.701400000000188e-05, 3.6930999999996994e-05, 3.6916999999997424e-05, 3.7277000000002225e-05, 3.670900000000282e-05, 3.676399999999469e-05, 3.7333000000000505e-05, 3.7569000000001185e-05, 3.675000000000206e-05, 3.7069000000000685e-05, 3.702799999999451e-05, 3.667999999999727e-05, 3.752800000000195e-05, 3.725000000000256e-05, 3.670799999999641e-05]</msg>
<status status="PASS" starttime="20201030 15:51:59.866" endtime="20201030 15:51:59.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.854" endtime="20201030 15:51:59.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.887" endtime="20201030 15:51:59.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.883" endtime="20201030 15:51:59.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.880" endtime="20201030 15:51:59.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.387" endtime="20201030 15:51:59.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.386" endtime="20201030 15:51:59.912"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.935" endtime="20201030 15:51:59.956"></status>
</kw>
<msg timestamp="20201030 15:51:59.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.931" endtime="20201030 15:51:59.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.959" endtime="20201030 15:51:59.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.965" endtime="20201030 15:51:59.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.924" endtime="20201030 15:51:59.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.919" endtime="20201030 15:51:59.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.988" endtime="20201030 15:52:00.321"></status>
</kw>
<msg timestamp="20201030 15:52:00.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042284194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042322875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.985" endtime="20201030 15:52:00.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042284194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042322875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.331" endtime="20201030 15:52:00.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.350" endtime="20201030 15:52:00.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.978" endtime="20201030 15:52:00.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.973" endtime="20201030 15:52:00.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.367" level="INFO">${RESULT} = [{'diff': 3.868100000000568e-05}, {'diff': 3.86659999999997e-05}, {'diff': 3.791599999999895e-05}, {'diff': 3.8166999999998674e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.8583000000001755e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:00.358" endtime="20201030 15:52:00.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.376" level="INFO">${ACCURACY} = {'diff': [3.868100000000568e-05, 3.86659999999997e-05, 3.791599999999895e-05, 3.8166999999998674e-05, 3.8138999999999534e-05, 3.8583000000001755e-05, 3.782000000000091e-05, 3.7888999999999284e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:52:00.369" endtime="20201030 15:52:00.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.387" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.385" endtime="20201030 15:52:00.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.392" level="INFO">VALUE: [3.868100000000568e-05, 3.86659999999997e-05, 3.791599999999895e-05, 3.8166999999998674e-05, 3.8138999999999534e-05, 3.8583000000001755e-05, 3.782000000000091e-05, 3.7888999999999284e-05, 3.8388999999999784e-05, 3.7902999999998854e-05, 3.850000000000381e-05, 3.8388999999999784e-05, 3.8652999999999604e-05, 3.7930999999997994e-05, 3.825000000000356e-05, 3.847199999999773e-05, 3.773599999999655e-05, 3.807000000000116e-05, 3.8318999999994996e-05, 3.8666999999999174e-05, 3.8055000000002115e-05, 3.815199999999963e-05, 3.7680999999997744e-05, 3.8111000000000395e-05, 3.8319000000001935e-05, 3.8332999999994566e-05, 3.867999999999927e-05, 3.7804999999994926e-05, 3.798600000000374e-05, 3.795799999999766e-05, 3.819399999999834e-05, 3.769399999999784e-05, 3.827799999999576e-05, 3.794399999999809e-05, 3.780600000000134e-05, 3.795799999999766e-05, 3.773600000000349e-05, 3.8402999999999354e-05, 3.782000000000091e-05, 3.7902999999998854e-05, 3.780600000000134e-05, 3.776400000000263e-05, 3.8054999999995176e-05, 3.833400000000098e-05, 3.8666999999999174e-05, 3.8430999999998494e-05, 3.8138999999999534e-05, 3.813800000000006e-05, 3.813800000000006e-05, 3.824999999999662e-05]</msg>
<status status="PASS" starttime="20201030 15:52:00.389" endtime="20201030 15:52:00.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.378" endtime="20201030 15:52:00.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.410" endtime="20201030 15:52:00.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.400" endtime="20201030 15:52:00.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.398" endtime="20201030 15:52:00.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.914" endtime="20201030 15:52:00.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.913" endtime="20201030 15:52:00.435"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.457" endtime="20201030 15:52:00.477"></status>
</kw>
<msg timestamp="20201030 15:52:00.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.454" endtime="20201030 15:52:00.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.480" endtime="20201030 15:52:00.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.487" endtime="20201030 15:52:00.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.447" endtime="20201030 15:52:00.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.441" endtime="20201030 15:52:00.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.511" endtime="20201030 15:52:00.844"></status>
</kw>
<msg timestamp="20201030 15:52:00.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040534944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040574542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.508" endtime="20201030 15:52:00.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040534944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040574542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.854" endtime="20201030 15:52:00.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.873" endtime="20201030 15:52:00.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.500" endtime="20201030 15:52:00.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.496" endtime="20201030 15:52:00.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.890" level="INFO">${RESULT} = [{'diff': 3.959799999999486e-05}, {'diff': 3.8639000000000034e-05}, {'diff': 3.9068999999995746e-05}, {'diff': 3.870799999999841e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.944399999999959e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:00.881" endtime="20201030 15:52:00.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:00.902" level="INFO">${ACCURACY} = {'diff': [3.959799999999486e-05, 3.8639000000000034e-05, 3.9068999999995746e-05, 3.870799999999841e-05, 3.9597000000002325e-05, 3.944399999999959e-05, 3.951399999999744e-05, 3.9540999999997106e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:52:00.892" endtime="20201030 15:52:00.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.913" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:00.911" endtime="20201030 15:52:00.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.919" level="INFO">VALUE: [3.959799999999486e-05, 3.8639000000000034e-05, 3.9068999999995746e-05, 3.870799999999841e-05, 3.9597000000002325e-05, 3.944399999999959e-05, 3.951399999999744e-05, 3.9540999999997106e-05, 3.907000000000216e-05, 3.958400000000223e-05, 3.95980000000018e-05, 3.899999999999737e-05, 3.924999999999762e-05, 3.924999999999762e-05, 3.9486999999997774e-05, 3.9444999999999064e-05, 3.874999999999712e-05, 3.900000000000431e-05, 3.9097000000001825e-05, 3.891599999999995e-05, 3.8790999999996356e-05, 3.949999999999787e-05, 3.9403000000000354e-05, 3.969399999999984e-05, 3.872200000000492e-05, 3.9319000000002935e-05, 3.9125000000000965e-05, 3.908399999999479e-05, 3.947199999999873e-05, 3.8916999999999424e-05, 3.923599999999805e-05, 3.881999999999497e-05, 3.9403000000000354e-05, 3.9125000000000965e-05, 3.8930999999998994e-05, 3.95980000000018e-05, 3.933400000000198e-05, 3.9444999999999064e-05, 3.883400000000148e-05, 3.915200000000063e-05, 3.9667000000000174e-05, 3.88059999999954e-05, 3.9526999999997536e-05, 3.913800000000106e-05, 3.947199999999873e-05, 3.8819000000002435e-05, 3.8875000000000715e-05, 3.94859999999983e-05, 3.9125000000000965e-05, 3.9540999999997106e-05]</msg>
<status status="PASS" starttime="20201030 15:52:00.916" endtime="20201030 15:52:00.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.904" endtime="20201030 15:52:00.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.931" endtime="20201030 15:52:00.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.927" endtime="20201030 15:52:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.924" endtime="20201030 15:52:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.437" endtime="20201030 15:52:00.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.436" endtime="20201030 15:52:00.956"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.979" endtime="20201030 15:52:00.998"></status>
</kw>
<msg timestamp="20201030 15:52:01.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.975" endtime="20201030 15:52:01.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.002" endtime="20201030 15:52:01.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.008" endtime="20201030 15:52:01.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.968" endtime="20201030 15:52:01.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.962" endtime="20201030 15:52:01.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.031" endtime="20201030 15:52:01.379"></status>
</kw>
<msg timestamp="20201030 15:52:01.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040927014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.028" endtime="20201030 15:52:01.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040887069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040927014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.388" endtime="20201030 15:52:01.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.407" endtime="20201030 15:52:01.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.021" endtime="20201030 15:52:01.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.016" endtime="20201030 15:52:01.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.424" level="INFO">${RESULT} = [{'diff': 3.9944999999999564e-05}, {'diff': 4.051400000000538e-05}, {'diff': 4.019400000000034e-05}, {'diff': 4.0139000000001535e-05}, {'diff': 3.9930999999999994e-05}, {'diff': 3.98059999999964e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:01.416" endtime="20201030 15:52:01.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.436" level="INFO">${ACCURACY} = {'diff': [3.9944999999999564e-05, 4.051400000000538e-05, 4.019400000000034e-05, 4.0139000000001535e-05, 3.9930999999999994e-05, 3.98059999999964e-05, 4.065199999999519e-05, 3.9860999999995206e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 15:52:01.427" endtime="20201030 15:52:01.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.446" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.444" endtime="20201030 15:52:01.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.452" level="INFO">VALUE: [3.9944999999999564e-05, 4.051400000000538e-05, 4.019400000000034e-05, 4.0139000000001535e-05, 3.9930999999999994e-05, 3.98059999999964e-05, 4.065199999999519e-05, 3.9860999999995206e-05, 3.999999999999837e-05, 3.99859999999988e-05, 3.963800000000156e-05, 4.019400000000034e-05, 4.044400000000059e-05, 4.0389000000001785e-05, 4.026399999999819e-05, 4.051399999999844e-05, 4.026399999999819e-05, 4.04859999999993e-05, 3.969399999999984e-05, 4.0431000000000494e-05, 3.969399999999984e-05, 3.973599999999855e-05, 4.047199999999973e-05, 4.0375000000002215e-05, 3.9833000000003005e-05, 4.0208999999999384e-05, 4.0486999999998774e-05, 4.0222999999998954e-05, 4.0153000000001104e-05, 4.0055000000004115e-05, 4.033399999999604e-05, 4.0569000000004185e-05, 3.973600000000549e-05, 4.00980000000023e-05, 4.0319000000003935e-05, 3.9903000000000854e-05, 3.9875000000001715e-05, 4.072199999999998e-05, 3.98059999999964e-05, 4.0167000000000674e-05, 4.0139000000001535e-05, 4.0347000000003075e-05, 4.055600000000409e-05, 4.0069000000003685e-05, 4.033400000000298e-05, 4.0139000000001535e-05, 4.0124999999995026e-05, 4.0291000000004795e-05, 4.004200000000402e-05, 3.9819000000003435e-05]</msg>
<status status="PASS" starttime="20201030 15:52:01.449" endtime="20201030 15:52:01.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.437" endtime="20201030 15:52:01.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.464" endtime="20201030 15:52:01.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.460" endtime="20201030 15:52:01.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.458" endtime="20201030 15:52:01.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.958" endtime="20201030 15:52:01.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.957" endtime="20201030 15:52:01.490"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.513" endtime="20201030 15:52:01.533"></status>
</kw>
<msg timestamp="20201030 15:52:01.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.509" endtime="20201030 15:52:01.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.536" endtime="20201030 15:52:01.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.542" endtime="20201030 15:52:01.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.502" endtime="20201030 15:52:01.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.496" endtime="20201030 15:52:01.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.566" endtime="20201030 15:52:01.932"></status>
</kw>
<msg timestamp="20201030 15:52:01.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041864278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.563" endtime="20201030 15:52:01.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041823194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041864278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.942" endtime="20201030 15:52:01.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.961" endtime="20201030 15:52:01.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.555" endtime="20201030 15:52:01.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.551" endtime="20201030 15:52:01.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.978" level="INFO">${RESULT} = [{'diff': 4.108399999999679e-05}, {'diff': 4.0861000000003145e-05}, {'diff': 4.1473000000000204e-05}, {'diff': 4.102799999999851e-05}, {'diff': 4.149999999999987e-05}, {'diff': 4.1666999999995236e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:01.969" endtime="20201030 15:52:01.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:01.987" level="INFO">${ACCURACY} = {'diff': [4.108399999999679e-05, 4.0861000000003145e-05, 4.1473000000000204e-05, 4.102799999999851e-05, 4.149999999999987e-05, 4.1666999999995236e-05, 4.1445000000001064e-05, 4.0846999999996636e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:01.980" endtime="20201030 15:52:01.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.998" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:01.996" endtime="20201030 15:52:01.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.003" level="INFO">VALUE: [4.108399999999679e-05, 4.0861000000003145e-05, 4.1473000000000204e-05, 4.102799999999851e-05, 4.149999999999987e-05, 4.1666999999995236e-05, 4.1445000000001064e-05, 4.0846999999996636e-05, 4.1139000000002535e-05, 4.147200000000073e-05, 4.1068999999997746e-05, 4.1153000000002105e-05, 4.14860000000003e-05, 4.126399999999919e-05, 4.1194999999993875e-05, 4.1389000000002785e-05, 4.1667000000002175e-05, 4.0931000000000994e-05, 4.1583000000004755e-05, 4.0903000000001855e-05, 4.0916999999994486e-05, 4.082000000000391e-05, 4.133399999999704e-05, 4.1445000000001064e-05, 4.0861000000003145e-05, 4.0818999999997496e-05, 4.156999999999772e-05, 4.1389000000002785e-05, 4.1473000000000204e-05, 4.070800000000041e-05, 4.118000000000177e-05, 4.1069000000004685e-05, 4.141599999999551e-05, 4.095800000000066e-05, 4.1417000000001924e-05, 4.1346999999997136e-05, 4.1153000000002105e-05, 4.1568999999998246e-05, 4.1666999999995236e-05, 4.080600000000434e-05, 4.149999999999987e-05, 4.126400000000613e-05, 4.0681000000000744e-05, 4.151399999999944e-05, 4.1403000000002355e-05, 4.0917000000001424e-05, 4.15980000000038e-05, 4.0818999999997496e-05, 4.133400000000398e-05, 4.132000000000441e-05]</msg>
<status status="PASS" starttime="20201030 15:52:02.000" endtime="20201030 15:52:02.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.989" endtime="20201030 15:52:02.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.016" endtime="20201030 15:52:02.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.011" endtime="20201030 15:52:02.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.009" endtime="20201030 15:52:02.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.492" endtime="20201030 15:52:02.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.491" endtime="20201030 15:52:02.041"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.063" endtime="20201030 15:52:02.085"></status>
</kw>
<msg timestamp="20201030 15:52:02.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.060" endtime="20201030 15:52:02.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.088" endtime="20201030 15:52:02.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.094" endtime="20201030 15:52:02.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.053" endtime="20201030 15:52:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.047" endtime="20201030 15:52:02.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.117" endtime="20201030 15:52:02.462"></status>
</kw>
<msg timestamp="20201030 15:52:02.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042490736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042532833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.114" endtime="20201030 15:52:02.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042490736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042532833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.471" endtime="20201030 15:52:02.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.490" endtime="20201030 15:52:02.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.107" endtime="20201030 15:52:02.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.102" endtime="20201030 15:52:02.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.507" level="INFO">${RESULT} = [{'diff': 4.2096999999997886e-05}, {'diff': 4.2653000000003605e-05}, {'diff': 4.242999999999608e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.243000000000302e-05}, {'diff': 4.226400000000019e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:02.498" endtime="20201030 15:52:02.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:02.517" level="INFO">${ACCURACY} = {'diff': [4.2096999999997886e-05, 4.2653000000003605e-05, 4.242999999999608e-05, 4.2054999999999176e-05, 4.243000000000302e-05, 4.226400000000019e-05, 4.2403000000003355e-05, 4.1902999999995916e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:02.509" endtime="20201030 15:52:02.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.527" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:02.525" endtime="20201030 15:52:02.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.533" level="INFO">VALUE: [4.2096999999997886e-05, 4.2653000000003605e-05, 4.242999999999608e-05, 4.2054999999999176e-05, 4.243000000000302e-05, 4.226400000000019e-05, 4.2403000000003355e-05, 4.1902999999995916e-05, 4.176399999999969e-05, 4.225000000000062e-05, 4.2388999999996846e-05, 4.2318999999998996e-05, 4.223600000000105e-05, 4.1917000000002425e-05, 4.2166999999995736e-05, 4.225000000000062e-05, 4.205600000000559e-05, 4.213799999999712e-05, 4.233399999999804e-05, 4.215199999999669e-05, 4.190200000000338e-05, 4.2375000000004215e-05, 4.201399999999994e-05, 4.247199999999479e-05, 4.166599999999576e-05, 4.251400000000044e-05, 4.226400000000019e-05, 4.2431000000002494e-05, 4.2318999999998996e-05, 4.2346999999998136e-05, 4.247200000000173e-05, 4.2667000000003175e-05, 4.2666999999996236e-05, 4.18059999999984e-05, 4.1846999999997636e-05, 4.2027000000000037e-05, 4.263800000000456e-05, 4.200000000000037e-05, 4.2068999999998746e-05, 4.1805000000005865e-05, 4.200000000000037e-05, 4.1917000000002425e-05, 4.24860000000013e-05, 4.194399999999515e-05, 4.197200000000123e-05, 4.1818999999998496e-05, 4.1846999999997636e-05, 4.245799999999522e-05, 4.273599999999461e-05, 4.175000000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:52:02.530" endtime="20201030 15:52:02.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.518" endtime="20201030 15:52:02.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.548" endtime="20201030 15:52:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.542" endtime="20201030 15:52:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.539" endtime="20201030 15:52:02.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.043" endtime="20201030 15:52:02.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.042" endtime="20201030 15:52:02.573"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.596" endtime="20201030 15:52:02.616"></status>
</kw>
<msg timestamp="20201030 15:52:02.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.592" endtime="20201030 15:52:02.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.619" endtime="20201030 15:52:02.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.626" endtime="20201030 15:52:02.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.585" endtime="20201030 15:52:02.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.580" endtime="20201030 15:52:02.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.649" endtime="20201030 15:52:02.996"></status>
</kw>
<msg timestamp="20201030 15:52:03.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041360958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041404069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.645" endtime="20201030 15:52:03.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041360958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041404069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.005" endtime="20201030 15:52:03.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.024" endtime="20201030 15:52:03.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.638" endtime="20201030 15:52:03.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.633" endtime="20201030 15:52:03.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.041" level="INFO">${RESULT} = [{'diff': 4.3110999999998456e-05}, {'diff': 4.302800000000051e-05}, {'diff': 4.342999999999708e-05}, {'diff': 4.273600000000155e-05}, {'diff': 4.267999999999633e-05}, {'diff': 4.323600000000205e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:03.032" endtime="20201030 15:52:03.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.052" level="INFO">${ACCURACY} = {'diff': [4.3110999999998456e-05, 4.302800000000051e-05, 4.342999999999708e-05, 4.273600000000155e-05, 4.267999999999633e-05, 4.323600000000205e-05, 4.3402999999997416e-05, 4.295800000000266e-05, 4.27...</msg>
<status status="PASS" starttime="20201030 15:52:03.043" endtime="20201030 15:52:03.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.062" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.060" endtime="20201030 15:52:03.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.068" level="INFO">VALUE: [4.3110999999998456e-05, 4.302800000000051e-05, 4.342999999999708e-05, 4.273600000000155e-05, 4.267999999999633e-05, 4.323600000000205e-05, 4.3402999999997416e-05, 4.295800000000266e-05, 4.279199999999983e-05, 4.275000000000112e-05, 4.281999999999897e-05, 4.3388999999997846e-05, 4.326399999999425e-05, 4.3180999999996306e-05, 4.3125000000004965e-05, 4.325000000000162e-05, 4.28059999999994e-05, 4.3332999999999566e-05, 4.355600000000015e-05, 4.275000000000112e-05, 4.3417000000003925e-05, 4.344399999999665e-05, 4.3388999999997846e-05, 4.326400000000119e-05, 4.3138999999997596e-05, 4.3582999999999816e-05, 4.302800000000051e-05, 4.3125000000004965e-05, 4.3138999999997596e-05, 4.325000000000162e-05, 4.279199999999983e-05, 4.3209000000002384e-05, 4.324999999999468e-05, 4.34860000000023e-05, 4.305599999999965e-05, 4.334799999999861e-05, 4.350000000000187e-05, 4.366599999999776e-05, 4.322200000000248e-05, 4.3444999999996126e-05, 4.2860999999998206e-05, 4.345800000000316e-05, 4.297200000000223e-05, 4.326400000000119e-05, 4.300000000000137e-05, 4.3541000000001107e-05, 4.277800000000026e-05, 4.301400000000094e-05, 4.2860999999998206e-05, 4.28059999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.065" endtime="20201030 15:52:03.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.053" endtime="20201030 15:52:03.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.080" endtime="20201030 15:52:03.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.076" endtime="20201030 15:52:03.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.073" endtime="20201030 15:52:03.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.575" endtime="20201030 15:52:03.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.574" endtime="20201030 15:52:03.105"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.128" endtime="20201030 15:52:03.147"></status>
</kw>
<msg timestamp="20201030 15:52:03.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.124" endtime="20201030 15:52:03.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.150" endtime="20201030 15:52:03.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.157" endtime="20201030 15:52:03.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.117" endtime="20201030 15:52:03.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.112" endtime="20201030 15:52:03.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.180" endtime="20201030 15:52:03.514"></status>
</kw>
<msg timestamp="20201030 15:52:03.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040869347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.176" endtime="20201030 15:52:03.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040869347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.523" endtime="20201030 15:52:03.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.542" endtime="20201030 15:52:03.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.169" endtime="20201030 15:52:03.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.165" endtime="20201030 15:52:03.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.559" level="INFO">${RESULT} = [{'diff': 4.3959000000003134e-05}, {'diff': 4.45139999999955e-05}, {'diff': 4.369400000000384e-05}, {'diff': 4.4666999999998236e-05}, {'diff': 4.420800000000391e-05}, {'diff': 4.4195000000003815e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:03.551" endtime="20201030 15:52:03.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:03.571" level="INFO">${ACCURACY} = {'diff': [4.3959000000003134e-05, 4.45139999999955e-05, 4.369400000000384e-05, 4.4666999999998236e-05, 4.420800000000391e-05, 4.4195000000003815e-05, 4.377700000000179e-05, 4.4319000000000996e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 15:52:03.562" endtime="20201030 15:52:03.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.583" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:03.580" endtime="20201030 15:52:03.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.588" level="INFO">VALUE: [4.3959000000003134e-05, 4.45139999999955e-05, 4.369400000000384e-05, 4.4666999999998236e-05, 4.420800000000391e-05, 4.4195000000003815e-05, 4.377700000000179e-05, 4.4319000000000996e-05, 4.4652999999998666e-05, 4.447200000000373e-05, 4.408399999999979e-05, 4.4695000000004315e-05, 4.445800000000416e-05, 4.407000000000022e-05, 4.4360999999999706e-05, 4.4666999999998236e-05, 4.404200000000108e-05, 4.4430999999997556e-05, 4.451400000000244e-05, 4.3695000000003315e-05, 4.397199999999629e-05, 4.4319000000000996e-05, 4.455599999999421e-05, 4.431899999999406e-05, 4.401400000000194e-05, 4.424999999999568e-05, 4.4194999999996876e-05, 4.377799999999432e-05, 4.416599999999826e-05, 4.3805000000000927e-05, 4.402800000000151e-05, 4.4194999999996876e-05, 4.381999999999997e-05, 4.4638999999999096e-05, 4.445800000000416e-05, 4.4125000000005965e-05, 4.3888999999998346e-05, 4.4111000000006395e-05, 4.379100000000136e-05, 4.434800000000655e-05, 4.4458999999996696e-05, 4.376299999999528e-05, 4.4223000000002954e-05, 4.376399999999475e-05, 4.4305000000001427e-05, 4.3874999999998776e-05, 4.442999999999808e-05, 4.4597000000000386e-05, 4.445800000000416e-05, 4.395800000000366e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.585" endtime="20201030 15:52:03.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.573" endtime="20201030 15:52:03.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.602" endtime="20201030 15:52:03.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.597" endtime="20201030 15:52:03.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.594" endtime="20201030 15:52:03.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.107" endtime="20201030 15:52:03.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.106" endtime="20201030 15:52:03.627"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.649" endtime="20201030 15:52:03.669"></status>
</kw>
<msg timestamp="20201030 15:52:03.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.646" endtime="20201030 15:52:03.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.672" endtime="20201030 15:52:03.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.678" endtime="20201030 15:52:03.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.639" endtime="20201030 15:52:03.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.633" endtime="20201030 15:52:03.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.701" endtime="20201030 15:52:04.038"></status>
</kw>
<msg timestamp="20201030 15:52:04.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040834542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.698" endtime="20201030 15:52:04.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040789153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040834542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.048" endtime="20201030 15:52:04.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.066" endtime="20201030 15:52:04.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.691" endtime="20201030 15:52:04.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.686" endtime="20201030 15:52:04.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.083" level="INFO">${RESULT} = [{'diff': 4.5388999999999846e-05}, {'diff': 4.472200000000398e-05}, {'diff': 4.483400000000054e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.529099999999592e-05}, {'diff': 4.5333000000001566e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:04.075" endtime="20201030 15:52:04.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.093" level="INFO">${ACCURACY} = {'diff': [4.5388999999999846e-05, 4.472200000000398e-05, 4.483400000000054e-05, 4.5125000000000026e-05, 4.529099999999592e-05, 4.5333000000001566e-05, 4.545799999999822e-05, 4.5666999999999236e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:04.086" endtime="20201030 15:52:04.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.103" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.101" endtime="20201030 15:52:04.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.109" level="INFO">VALUE: [4.5388999999999846e-05, 4.472200000000398e-05, 4.483400000000054e-05, 4.5125000000000026e-05, 4.529099999999592e-05, 4.5333000000001566e-05, 4.545799999999822e-05, 4.5666999999999236e-05, 4.570799999999847e-05, 4.5402999999999416e-05, 4.4874999999999776e-05, 4.5194999999997876e-05, 4.4916999999998486e-05, 4.477699999999585e-05, 4.5069000000001747e-05, 4.5083000000001316e-05, 4.532000000000147e-05, 4.5361000000000706e-05, 4.500000000000337e-05, 4.48060000000014e-05, 4.552800000000301e-05, 4.5375000000000276e-05, 4.5361000000000706e-05, 4.5666999999999236e-05, 4.515199999999969e-05, 4.477700000000279e-05, 4.483299999999413e-05, 4.527800000000276e-05, 4.547199999999779e-05, 4.483299999999413e-05, 4.500000000000337e-05, 4.4819000000001497e-05, 4.5402999999999416e-05, 4.5430999999998556e-05, 4.495799999999772e-05, 4.5153000000006105e-05, 4.48060000000014e-05, 4.5180999999998306e-05, 4.5138999999999596e-05, 4.4681000000004745e-05, 4.477699999999585e-05, 4.529100000000286e-05, 4.557000000000172e-05, 4.5583000000001817e-05, 4.466599999999876e-05, 4.5625000000000526e-05, 4.522199999999754e-05, 4.548599999999736e-05, 4.5388999999999846e-05, 4.501400000000294e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.106" endtime="20201030 15:52:04.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.094" endtime="20201030 15:52:04.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.121" endtime="20201030 15:52:04.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.117" endtime="20201030 15:52:04.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.114" endtime="20201030 15:52:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.629" endtime="20201030 15:52:04.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.627" endtime="20201030 15:52:04.146"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.169" endtime="20201030 15:52:04.190"></status>
</kw>
<msg timestamp="20201030 15:52:04.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.165" endtime="20201030 15:52:04.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.193" endtime="20201030 15:52:04.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.199" endtime="20201030 15:52:04.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.158" endtime="20201030 15:52:04.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.152" endtime="20201030 15:52:04.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.222" endtime="20201030 15:52:04.556"></status>
</kw>
<msg timestamp="20201030 15:52:04.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042250319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.219" endtime="20201030 15:52:04.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042250319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.565" endtime="20201030 15:52:04.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.584" endtime="20201030 15:52:04.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.212" endtime="20201030 15:52:04.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.207" endtime="20201030 15:52:04.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.601" level="INFO">${RESULT} = [{'diff': 4.641600000000051e-05}, {'diff': 4.581899999999556e-05}, {'diff': 4.644399999999965e-05}, {'diff': 4.624999999999768e-05}, {'diff': 4.658299999999588e-05}, {'diff': 4.6361000000001706e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:04.592" endtime="20201030 15:52:04.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:04.611" level="INFO">${ACCURACY} = {'diff': [4.641600000000051e-05, 4.581899999999556e-05, 4.644399999999965e-05, 4.624999999999768e-05, 4.658299999999588e-05, 4.6361000000001706e-05, 4.58060000000024e-05, 4.601400000000394e-05, 4.6125...</msg>
<status status="PASS" starttime="20201030 15:52:04.603" endtime="20201030 15:52:04.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.622" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:04.620" endtime="20201030 15:52:04.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.628" level="INFO">VALUE: [4.641600000000051e-05, 4.581899999999556e-05, 4.644399999999965e-05, 4.624999999999768e-05, 4.658299999999588e-05, 4.6361000000001706e-05, 4.58060000000024e-05, 4.601400000000394e-05, 4.6125000000001026e-05, 4.5916999999999486e-05, 4.579200000000283e-05, 4.6194999999998876e-05, 4.580599999999546e-05, 4.6667000000000236e-05, 4.616600000000026e-05, 4.66669999999933e-05, 4.659799999999492e-05, 4.6319000000003e-05, 4.6680999999999806e-05, 4.6403000000000416e-05, 4.6347000000002136e-05, 4.622199999999854e-05, 4.606899999999581e-05, 4.597199999999829e-05, 4.648599999999836e-05, 4.624999999999768e-05, 4.6139000000000596e-05, 4.624999999999768e-05, 4.609699999999495e-05, 4.5889000000000346e-05, 4.605600000000265e-05, 4.645800000000616e-05, 4.5945000000005565e-05, 4.6180999999999306e-05, 4.6139000000000596e-05, 4.579199999999589e-05, 4.575000000000412e-05, 4.5833000000002067e-05, 4.584800000000111e-05, 4.5958999999998196e-05, 4.6083000000002317e-05, 4.644399999999965e-05, 4.606900000000275e-05, 4.6347000000002136e-05, 4.58060000000024e-05, 4.6403000000000416e-05, 4.645799999999922e-05, 4.6347000000002136e-05, 4.599999999999743e-05, 4.5875000000000776e-05]</msg>
<status status="PASS" starttime="20201030 15:52:04.625" endtime="20201030 15:52:04.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.613" endtime="20201030 15:52:04.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.643" endtime="20201030 15:52:04.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.637" endtime="20201030 15:52:04.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.634" endtime="20201030 15:52:04.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.148" endtime="20201030 15:52:04.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.147" endtime="20201030 15:52:04.667"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.690" endtime="20201030 15:52:04.710"></status>
</kw>
<msg timestamp="20201030 15:52:04.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.687" endtime="20201030 15:52:04.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.713" endtime="20201030 15:52:04.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.719" endtime="20201030 15:52:04.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.680" endtime="20201030 15:52:04.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.674" endtime="20201030 15:52:04.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.742" endtime="20201030 15:52:05.060"></status>
</kw>
<msg timestamp="20201030 15:52:05.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040719403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040766917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.739" endtime="20201030 15:52:05.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040719403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040766917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.064" endtime="20201030 15:52:05.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.073" endtime="20201030 15:52:05.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.732" endtime="20201030 15:52:05.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.727" endtime="20201030 15:52:05.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.081" level="INFO">${RESULT} = [{'diff': 4.75139999999985e-05}, {'diff': 4.6931000000000056e-05}, {'diff': 4.679199999999689e-05}, {'diff': 4.752799999999807e-05}, {'diff': 4.725000000000562e-05}, {'diff': 4.693000000000058e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:05.077" endtime="20201030 15:52:05.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.086" level="INFO">${ACCURACY} = {'diff': [4.75139999999985e-05, 4.6931000000000056e-05, 4.679199999999689e-05, 4.752799999999807e-05, 4.725000000000562e-05, 4.693000000000058e-05, 4.680500000000393e-05, 4.7139000000001596e-05, 4.691...</msg>
<status status="PASS" starttime="20201030 15:52:05.082" endtime="20201030 15:52:05.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.091" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.090" endtime="20201030 15:52:05.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.093" level="INFO">VALUE: [4.75139999999985e-05, 4.6931000000000056e-05, 4.679199999999689e-05, 4.752799999999807e-05, 4.725000000000562e-05, 4.693000000000058e-05, 4.680500000000393e-05, 4.7139000000001596e-05, 4.691600000000101e-05, 4.7389000000001846e-05, 4.722199999999954e-05, 4.707000000000322e-05, 4.7361000000002706e-05, 4.756899999999731e-05, 4.7417000000000986e-05, 4.7139000000001596e-05, 4.727799999999782e-05, 4.747199999999979e-05, 4.7597000000003387e-05, 4.757000000000372e-05, 4.6847000000002637e-05, 4.6903000000000916e-05, 4.6917000000000486e-05, 4.716600000000126e-05, 4.7139000000001596e-05, 4.7125000000002026e-05, 4.683300000000307e-05, 4.7347000000003137e-05, 4.766600000000176e-05, 4.683299999999613e-05, 4.749999999999893e-05, 4.747199999999979e-05, 4.679199999999689e-05, 4.673599999999861e-05, 4.679199999999689e-05, 4.695799999999972e-05, 4.732000000000347e-05, 4.7153000000001166e-05, 4.7431000000000556e-05, 4.772200000000004e-05, 4.6903000000000916e-05, 4.7139000000001596e-05, 4.6694999999999376e-05, 4.750000000000587e-05, 4.726299999999878e-05, 4.68190000000035e-05, 4.677700000000479e-05, 4.725000000000562e-05, 4.7403000000001416e-05, 4.76940000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:52:05.092" endtime="20201030 15:52:05.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.087" endtime="20201030 15:52:05.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.106" endtime="20201030 15:52:05.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.103" endtime="20201030 15:52:05.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.102" endtime="20201030 15:52:05.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.670" endtime="20201030 15:52:05.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.668" endtime="20201030 15:52:05.127"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.137" endtime="20201030 15:52:05.154"></status>
</kw>
<msg timestamp="20201030 15:52:05.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.136" endtime="20201030 15:52:05.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.155" endtime="20201030 15:52:05.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.158" endtime="20201030 15:52:05.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.132" endtime="20201030 15:52:05.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.130" endtime="20201030 15:52:05.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.169" endtime="20201030 15:52:05.455"></status>
</kw>
<msg timestamp="20201030 15:52:05.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024004153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.168" endtime="20201030 15:52:05.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024004153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024051889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.459" endtime="20201030 15:52:05.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.467" endtime="20201030 15:52:05.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.164" endtime="20201030 15:52:05.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.162" endtime="20201030 15:52:05.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.475" level="INFO">${RESULT} = [{'diff': 4.773599999999961e-05}, {'diff': 4.8139000000002596e-05}, {'diff': 4.805599999999771e-05}, {'diff': 4.822200000000054e-05}, {'diff': 4.7708999999999946e-05}, {'diff': 4.7736999999999086e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:05.471" endtime="20201030 15:52:05.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:05.483" level="INFO">${ACCURACY} = {'diff': [4.773599999999961e-05, 4.8139000000002596e-05, 4.805599999999771e-05, 4.822200000000054e-05, 4.7708999999999946e-05, 4.7736999999999086e-05, 4.772200000000004e-05, 4.7959000000000196e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:05.476" endtime="20201030 15:52:05.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.488" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:05.487" endtime="20201030 15:52:05.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.490" level="INFO">VALUE: [4.773599999999961e-05, 4.8139000000002596e-05, 4.805599999999771e-05, 4.822200000000054e-05, 4.7708999999999946e-05, 4.7736999999999086e-05, 4.772200000000004e-05, 4.7959000000000196e-05, 4.797200000000029e-05, 4.773599999999961e-05, 4.836099999999677e-05, 4.834700000000067e-05, 4.866599999999929e-05, 4.770800000000047e-05, 4.831899999999806e-05, 4.816699999999827e-05, 4.82079999999975e-05, 4.861099999999702e-05, 4.83330000000011e-05, 4.845800000000122e-05, 4.7917000000001486e-05, 4.806999999999728e-05, 4.811099999999999e-05, 4.793099999999759e-05, 4.813899999999913e-05, 4.859800000000039e-05, 4.794400000000115e-05, 4.809700000000042e-05, 4.790200000000244e-05, 4.805500000000171e-05, 4.844399999999818e-05, 4.8389000000002846e-05, 4.849999999999993e-05, 4.858299999999788e-05, 4.8153000000002166e-05, 4.813899999999913e-05, 4.787499999999931e-05, 4.76940000000009e-05, 4.795800000000072e-05, 4.836100000000024e-05, 4.829200000000186e-05, 4.8459000000000696e-05, 4.766699999999777e-05, 4.805599999999771e-05, 4.834700000000067e-05, 4.8459000000000696e-05, 4.8403000000002416e-05, 4.775000000000265e-05, 4.86529999999992e-05, 4.831900000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:52:05.489" endtime="20201030 15:52:05.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.484" endtime="20201030 15:52:05.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.496" endtime="20201030 15:52:05.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.494" endtime="20201030 15:52:05.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.493" endtime="20201030 15:52:05.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.128" endtime="20201030 15:52:05.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.127" endtime="20201030 15:52:05.517"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.528" endtime="20201030 15:52:05.546"></status>
</kw>
<msg timestamp="20201030 15:52:05.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.526" endtime="20201030 15:52:05.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.547" endtime="20201030 15:52:05.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.550" endtime="20201030 15:52:05.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.523" endtime="20201030 15:52:05.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.520" endtime="20201030 15:52:05.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.562" endtime="20201030 15:52:05.972"></status>
</kw>
<msg timestamp="20201030 15:52:05.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024378625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.560" endtime="20201030 15:52:05.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024329917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024378625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.982" endtime="20201030 15:52:05.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.001" endtime="20201030 15:52:06.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.556" endtime="20201030 15:52:06.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.554" endtime="20201030 15:52:06.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.019" level="INFO">${RESULT} = [{'diff': 4.870800000000147e-05}, {'diff': 4.906999999999828e-05}, {'diff': 4.941699999999952e-05}, {'diff': 4.883400000000107e-05}, {'diff': 4.96530000000002e-05}, {'diff': 4.958399999999835e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:06.010" endtime="20201030 15:52:06.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.028" level="INFO">${ACCURACY} = {'diff': [4.870800000000147e-05, 4.906999999999828e-05, 4.941699999999952e-05, 4.883400000000107e-05, 4.96530000000002e-05, 4.958399999999835e-05, 4.944499999999866e-05, 4.920800000000197e-05, 4.90550...</msg>
<status status="PASS" starttime="20201030 15:52:06.021" endtime="20201030 15:52:06.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.040" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.037" endtime="20201030 15:52:06.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.046" level="INFO">VALUE: [4.870800000000147e-05, 4.906999999999828e-05, 4.941699999999952e-05, 4.883400000000107e-05, 4.96530000000002e-05, 4.958399999999835e-05, 4.944499999999866e-05, 4.920800000000197e-05, 4.905500000000271e-05, 4.91529999999997e-05, 4.915200000000022e-05, 4.926400000000025e-05, 4.8707999999998e-05, 4.941600000000004e-05, 4.937500000000081e-05, 4.93330000000021e-05, 4.8903000000002916e-05, 4.944399999999918e-05, 4.912500000000056e-05, 4.880599999999846e-05, 4.918099999999884e-05, 4.918099999999884e-05, 4.945799999999875e-05, 4.881899999999856e-05, 4.930600000000243e-05, 4.912500000000056e-05, 4.966699999999977e-05, 4.940299999999995e-05, 4.890199999999997e-05, 4.892999999999911e-05, 4.916599999999979e-05, 4.880499999999899e-05, 4.88469999999977e-05, 4.922200000000154e-05, 4.938900000000038e-05, 4.9014e-05, 4.938900000000038e-05, 4.938900000000038e-05, 4.881999999999803e-05, 4.924999999999721e-05, 4.947200000000179e-05, 4.913900000000013e-05, 4.8695000000001376e-05, 4.967999999999986e-05, 4.9223000000001016e-05, 4.88200000000015e-05, 4.940200000000047e-05, 4.891599999999954e-05, 4.904099999999967e-05, 4.93330000000021e-05]</msg>
<status status="PASS" starttime="20201030 15:52:06.043" endtime="20201030 15:52:06.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.030" endtime="20201030 15:52:06.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.058" endtime="20201030 15:52:06.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.054" endtime="20201030 15:52:06.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.052" endtime="20201030 15:52:06.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.518" endtime="20201030 15:52:06.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.518" endtime="20201030 15:52:06.084"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.112" endtime="20201030 15:52:06.135"></status>
</kw>
<msg timestamp="20201030 15:52:06.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.108" endtime="20201030 15:52:06.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.139" endtime="20201030 15:52:06.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.145" endtime="20201030 15:52:06.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.099" endtime="20201030 15:52:06.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.091" endtime="20201030 15:52:06.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.169" endtime="20201030 15:52:06.524"></status>
</kw>
<msg timestamp="20201030 15:52:06.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049530667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049580403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.166" endtime="20201030 15:52:06.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049530667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049580403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.534" endtime="20201030 15:52:06.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.553" endtime="20201030 15:52:06.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.158" endtime="20201030 15:52:06.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.154" endtime="20201030 15:52:06.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.571" level="INFO">${RESULT} = [{'diff': 4.973600000000161e-05}, {'diff': 4.968099999999587e-05}, {'diff': 4.984799999999817e-05}, {'diff': 4.999999999999449e-05}, {'diff': 4.997200000000229e-05}, {'diff': 5.0137999999998184e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.562" endtime="20201030 15:52:06.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.580" level="INFO">${ACCURACY} = {'diff': [4.973600000000161e-05, 4.968099999999587e-05, 4.984799999999817e-05, 4.999999999999449e-05, 4.997200000000229e-05, 5.0137999999998184e-05, 5.045800000000322e-05, 5.047200000000279e-05, 5.011...</msg>
<status status="PASS" starttime="20201030 15:52:06.573" endtime="20201030 15:52:06.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.591" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.589" endtime="20201030 15:52:06.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.597" level="INFO">VALUE: [4.973600000000161e-05, 4.968099999999587e-05, 4.984799999999817e-05, 4.999999999999449e-05, 4.997200000000229e-05, 5.0137999999998184e-05, 5.045800000000322e-05, 5.047200000000279e-05, 5.011099999999852e-05, 4.993000000000358e-05, 4.9693999999995964e-05, 4.975000000000118e-05, 4.981899999999956e-05, 5.0459000000002696e-05, 4.979199999999989e-05, 5.040299999999748e-05, 4.9917000000003486e-05, 4.9709000000001946e-05, 5.027700000000135e-05, 5.0151999999997754e-05, 5.052800000000107e-05, 5.03469999999992e-05, 5.023600000000211e-05, 5.0485999999995423e-05, 5.054100000000117e-05, 5.033299999999963e-05, 5.031900000000006e-05, 5.0014000000001e-05, 5.038899999999791e-05, 5.047200000000279e-05, 4.983299999999913e-05, 5.015299999999723e-05, 5.048600000000236e-05, 5.00270000000011e-05, 4.9653000000003666e-05, 5.005599999999971e-05, 4.987499999999784e-05, 5.0471999999995854e-05, 5.0153000000004166e-05, 5.005500000000024e-05, 5.056999999999978e-05, 5.038899999999791e-05, 5.061100000000596e-05, 5.0457999999996284e-05, 5.031900000000006e-05, 4.981899999999956e-05, 5.0014000000001e-05, 5.023600000000211e-05, 5.011099999999852e-05, 5.004200000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:52:06.594" endtime="20201030 15:52:06.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.582" endtime="20201030 15:52:06.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.611" endtime="20201030 15:52:06.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.605" endtime="20201030 15:52:06.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.603" endtime="20201030 15:52:06.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.086" endtime="20201030 15:52:06.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.085" endtime="20201030 15:52:06.637"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.660" endtime="20201030 15:52:06.681"></status>
</kw>
<msg timestamp="20201030 15:52:06.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.656" endtime="20201030 15:52:06.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.684" endtime="20201030 15:52:06.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.691" endtime="20201030 15:52:06.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.649" endtime="20201030 15:52:06.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.643" endtime="20201030 15:52:06.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.716" endtime="20201030 15:52:07.055"></status>
</kw>
<msg timestamp="20201030 15:52:07.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041927222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041978319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.712" endtime="20201030 15:52:07.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041927222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041978319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.065" endtime="20201030 15:52:07.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.083" endtime="20201030 15:52:07.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.705" endtime="20201030 15:52:07.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.700" endtime="20201030 15:52:07.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.100" level="INFO">${RESULT} = [{'diff': 5.109699999999995e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.133300000000063e-05}, {'diff': 5.1679999999998394e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.083300000000013e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:07.092" endtime="20201030 15:52:07.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.111" level="INFO">${ACCURACY} = {'diff': [5.109699999999995e-05, 5.1651999999999254e-05, 5.133300000000063e-05, 5.1679999999998394e-05, 5.161100000000002e-05, 5.083300000000013e-05, 5.0929999999997644e-05, 5.0915999999998074e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:07.103" endtime="20201030 15:52:07.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.122" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.120" endtime="20201030 15:52:07.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.127" level="INFO">VALUE: [5.109699999999995e-05, 5.1651999999999254e-05, 5.133300000000063e-05, 5.1679999999998394e-05, 5.161100000000002e-05, 5.083300000000013e-05, 5.0929999999997644e-05, 5.0915999999998074e-05, 5.126399999999531e-05, 5.123600000000311e-05, 5.115299999999823e-05, 5.137499999999934e-05, 5.115299999999823e-05, 5.165299999999873e-05, 5.1153000000005167e-05, 5.126400000000225e-05, 5.069499999999644e-05, 5.0973000000002766e-05, 5.086199999999874e-05, 5.080499999999405e-05, 5.13470000000002e-05, 5.133300000000063e-05, 5.1679999999998394e-05, 5.063899999999816e-05, 5.0985999999995923e-05, 5.108300000000038e-05, 5.141699999999805e-05, 5.1153000000005167e-05, 5.0945000000003626e-05, 5.161100000000002e-05, 5.137500000000628e-05, 5.133300000000063e-05, 5.115299999999823e-05, 5.1445000000004126e-05, 5.1471999999996854e-05, 5.113899999999866e-05, 5.144499999999719e-05, 5.0903000000004917e-05, 5.0903000000004917e-05, 5.080500000000099e-05, 5.0957999999996784e-05, 5.131900000000106e-05, 5.125000000000268e-05, 5.158300000000088e-05, 5.1415999999998574e-05, 5.095800000000372e-05, 5.106900000000081e-05, 5.0735999999995673e-05, 5.152800000000207e-05, 5.126400000000225e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.124" endtime="20201030 15:52:07.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.113" endtime="20201030 15:52:07.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.140" endtime="20201030 15:52:07.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.135" endtime="20201030 15:52:07.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.133" endtime="20201030 15:52:07.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.639" endtime="20201030 15:52:07.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.638" endtime="20201030 15:52:07.164"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.187" endtime="20201030 15:52:07.207"></status>
</kw>
<msg timestamp="20201030 15:52:07.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.183" endtime="20201030 15:52:07.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.210" endtime="20201030 15:52:07.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.217" endtime="20201030 15:52:07.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.176" endtime="20201030 15:52:07.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.171" endtime="20201030 15:52:07.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.240" endtime="20201030 15:52:07.574"></status>
</kw>
<msg timestamp="20201030 15:52:07.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040553639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.237" endtime="20201030 15:52:07.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040553639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.584" endtime="20201030 15:52:07.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.602" endtime="20201030 15:52:07.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.230" endtime="20201030 15:52:07.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.225" endtime="20201030 15:52:07.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.619" level="INFO">${RESULT} = [{'diff': 5.2429999999999144e-05}, {'diff': 5.230500000000249e-05}, {'diff': 5.181900000000156e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.209700000000095e-05}, {'diff': 5.200000000000343e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.611" endtime="20201030 15:52:07.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.631" level="INFO">${ACCURACY} = {'diff': [5.2429999999999144e-05, 5.230500000000249e-05, 5.181900000000156e-05, 5.18470000000007e-05, 5.209700000000095e-05, 5.200000000000343e-05, 5.225000000000368e-05, 5.205599999999477e-05, 5.2666...</msg>
<status status="PASS" starttime="20201030 15:52:07.621" endtime="20201030 15:52:07.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.642" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.640" endtime="20201030 15:52:07.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.647" level="INFO">VALUE: [5.2429999999999144e-05, 5.230500000000249e-05, 5.181900000000156e-05, 5.18470000000007e-05, 5.209700000000095e-05, 5.200000000000343e-05, 5.225000000000368e-05, 5.205599999999477e-05, 5.26669999999993e-05, 5.23470000000012e-05, 5.190299999999898e-05, 5.244400000000565e-05, 5.238899999999991e-05, 5.23470000000012e-05, 5.187499999999984e-05, 5.226400000000325e-05, 5.261100000000102e-05, 5.186100000000027e-05, 5.172200000000404e-05, 5.2665999999999824e-05, 5.181900000000156e-05, 5.255500000000274e-05, 5.233300000000163e-05, 5.215299999999923e-05, 5.234699999999426e-05, 5.188899999999941e-05, 5.1943999999998214e-05, 5.202800000000257e-05, 5.188899999999941e-05, 5.191699999999855e-05, 5.255599999999527e-05, 5.18340000000006e-05, 5.213899999999966e-05, 5.234699999999426e-05, 5.248600000000436e-05, 5.241699999999905e-05, 5.1721999999997104e-05, 5.206999999999434e-05, 5.179200000000189e-05, 5.1915999999999074e-05, 5.179100000000242e-05, 5.218000000000583e-05, 5.227800000000282e-05, 5.1693999999997964e-05, 5.247299999999733e-05, 5.213899999999966e-05, 5.218099999999837e-05, 5.1707999999997534e-05, 5.173600000000361e-05, 5.2193999999998464e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.644" endtime="20201030 15:52:07.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.633" endtime="20201030 15:52:07.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.660" endtime="20201030 15:52:07.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.656" endtime="20201030 15:52:07.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.653" endtime="20201030 15:52:07.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.166" endtime="20201030 15:52:07.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.165" endtime="20201030 15:52:07.684"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.707" endtime="20201030 15:52:07.727"></status>
</kw>
<msg timestamp="20201030 15:52:07.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.704" endtime="20201030 15:52:07.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.731" endtime="20201030 15:52:07.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.738" endtime="20201030 15:52:07.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.697" endtime="20201030 15:52:07.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.691" endtime="20201030 15:52:07.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.762" endtime="20201030 15:52:08.117"></status>
</kw>
<msg timestamp="20201030 15:52:08.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040514083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040566819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.759" endtime="20201030 15:52:08.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040514083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040566819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.127" endtime="20201030 15:52:08.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.146" endtime="20201030 15:52:08.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.751" endtime="20201030 15:52:08.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.746" endtime="20201030 15:52:08.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.163" level="INFO">${RESULT} = [{'diff': 5.2735999999997674e-05}, {'diff': 5.311100000000152e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.318099999999937e-05}, {'diff': 5.280500000000299e-05}, {'diff': 5.306899999999587e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:08.154" endtime="20201030 15:52:08.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.173" level="INFO">${ACCURACY} = {'diff': [5.2735999999997674e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.318099999999937e-05, 5.280500000000299e-05, 5.306899999999587e-05, 5.365300000000073e-05, 5.282000000000203e-05, 5.368...</msg>
<status status="PASS" starttime="20201030 15:52:08.165" endtime="20201030 15:52:08.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.184" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.182" endtime="20201030 15:52:08.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.189" level="INFO">VALUE: [5.2735999999997674e-05, 5.311100000000152e-05, 5.312500000000109e-05, 5.318099999999937e-05, 5.280500000000299e-05, 5.306899999999587e-05, 5.365300000000073e-05, 5.282000000000203e-05, 5.368099999999987e-05, 5.306999999999534e-05, 5.368099999999987e-05, 5.291699999999955e-05, 5.3235999999998174e-05, 5.309700000000195e-05, 5.280499999999605e-05, 5.322299999999808e-05, 5.337500000000134e-05, 5.3680000000000394e-05, 5.2916000000000074e-05, 5.340300000000048e-05, 5.2999999999997494e-05, 5.2707999999998534e-05, 5.352800000000407e-05, 5.283299999999519e-05, 5.313900000000066e-05, 5.338900000000091e-05, 5.3179999999999894e-05, 5.336100000000177e-05, 5.355600000000321e-05, 5.33340000000021e-05, 5.280599999999552e-05, 5.3681000000006807e-05, 5.305500000000324e-05, 5.33340000000021e-05, 5.365300000000073e-05, 5.326299999999784e-05, 5.354100000000417e-05, 5.3013999999997063e-05, 5.358300000000288e-05, 5.287500000000084e-05, 5.326400000000425e-05, 5.361100000000202e-05, 5.3471999999998854e-05, 5.304200000000314e-05, 5.365300000000073e-05, 5.288900000000041e-05, 5.269499999999844e-05, 5.31669999999998e-05, 5.363900000000116e-05, 5.369499999999944e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.186" endtime="20201030 15:52:08.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.175" endtime="20201030 15:52:08.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.202" endtime="20201030 15:52:08.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.198" endtime="20201030 15:52:08.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.195" endtime="20201030 15:52:08.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.687" endtime="20201030 15:52:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.686" endtime="20201030 15:52:08.227"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.251" endtime="20201030 15:52:08.273"></status>
</kw>
<msg timestamp="20201030 15:52:08.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.247" endtime="20201030 15:52:08.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.277" endtime="20201030 15:52:08.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.283" endtime="20201030 15:52:08.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.240" endtime="20201030 15:52:08.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.234" endtime="20201030 15:52:08.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.307" endtime="20201030 15:52:08.658"></status>
</kw>
<msg timestamp="20201030 15:52:08.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043405903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043460569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.303" endtime="20201030 15:52:08.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043405903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043460569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.668" endtime="20201030 15:52:08.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.687" endtime="20201030 15:52:08.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.296" endtime="20201030 15:52:08.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.291" endtime="20201030 15:52:08.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.704" level="INFO">${RESULT} = [{'diff': 5.4665999999994885e-05}, {'diff': 5.432000000000353e-05}, {'diff': 5.4485999999999424e-05}, {'diff': 5.440300000000148e-05}, {'diff': 5.4137999999995245e-05}, {'diff': 5.4249999999998744e-05...</msg>
<status status="PASS" starttime="20201030 15:52:08.695" endtime="20201030 15:52:08.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.714" level="INFO">${ACCURACY} = {'diff': [5.4665999999994885e-05, 5.432000000000353e-05, 5.4485999999999424e-05, 5.440300000000148e-05, 5.4137999999995245e-05, 5.4249999999998744e-05, 5.363900000000116e-05, 5.4402000000002004e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:08.706" endtime="20201030 15:52:08.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.725" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.723" endtime="20201030 15:52:08.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.731" level="INFO">VALUE: [5.4665999999994885e-05, 5.432000000000353e-05, 5.4485999999999424e-05, 5.440300000000148e-05, 5.4137999999995245e-05, 5.4249999999998744e-05, 5.363900000000116e-05, 5.4402000000002004e-05, 5.438900000000191e-05, 5.38340000000026e-05, 5.4221999999999604e-05, 5.409699999999601e-05, 5.406999999999634e-05, 5.433300000000363e-05, 5.4235999999999174e-05, 5.457000000000378e-05, 5.438900000000191e-05, 5.395899999999926e-05, 5.411100000000252e-05, 5.387500000000184e-05, 5.379099999999748e-05, 5.4679999999994455e-05, 5.398600000000586e-05, 5.3930000000000644e-05, 5.440300000000148e-05, 5.404200000000414e-05, 5.3930000000000644e-05, 5.3944000000000214e-05, 5.412500000000209e-05, 5.459700000000345e-05, 5.380600000000346e-05, 5.434699999999626e-05, 5.3999999999998494e-05, 5.4263999999998314e-05, 5.391700000000055e-05, 5.426400000000525e-05, 5.380600000000346e-05, 5.395899999999926e-05, 5.41670000000008e-05, 5.405500000000424e-05, 5.45549999999978e-05, 5.438900000000191e-05, 5.4444000000000714e-05, 5.362500000000159e-05, 5.4499999999998994e-05, 5.438900000000191e-05, 5.456899999999737e-05, 5.440299999999454e-05, 5.459699999999651e-05, 5.380599999999652e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.727" endtime="20201030 15:52:08.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.716" endtime="20201030 15:52:08.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.745" endtime="20201030 15:52:08.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.739" endtime="20201030 15:52:08.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.736" endtime="20201030 15:52:08.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.230" endtime="20201030 15:52:08.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.228" endtime="20201030 15:52:08.771"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.795" endtime="20201030 15:52:08.816"></status>
</kw>
<msg timestamp="20201030 15:52:08.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.791" endtime="20201030 15:52:08.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.819" endtime="20201030 15:52:08.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.826" endtime="20201030 15:52:08.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.784" endtime="20201030 15:52:08.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.778" endtime="20201030 15:52:08.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.849" endtime="20201030 15:52:09.192"></status>
</kw>
<msg timestamp="20201030 15:52:09.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043166208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.846" endtime="20201030 15:52:09.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043166208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043221875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.197" endtime="20201030 15:52:09.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.205" endtime="20201030 15:52:09.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.839" endtime="20201030 15:52:09.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.834" endtime="20201030 15:52:09.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.214" level="INFO">${RESULT} = [{'diff': 5.56670000000023e-05}, {'diff': 5.5444000000001714e-05}, {'diff': 5.486099999999633e-05}, {'diff': 5.487500000000284e-05}, {'diff': 5.559699999999751e-05}, {'diff': 5.480599999999752e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:09.209" endtime="20201030 15:52:09.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.219" level="INFO">${ACCURACY} = {'diff': [5.56670000000023e-05, 5.5444000000001714e-05, 5.486099999999633e-05, 5.487500000000284e-05, 5.559699999999751e-05, 5.480599999999752e-05, 5.537500000000334e-05, 5.481999999999709e-05, 5.5473...</msg>
<status status="PASS" starttime="20201030 15:52:09.215" endtime="20201030 15:52:09.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.224" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.223" endtime="20201030 15:52:09.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.227" level="INFO">VALUE: [5.56670000000023e-05, 5.5444000000001714e-05, 5.486099999999633e-05, 5.487500000000284e-05, 5.559699999999751e-05, 5.480599999999752e-05, 5.537500000000334e-05, 5.481999999999709e-05, 5.547300000000033e-05, 5.506999999999734e-05, 5.534699999999726e-05, 5.520900000000051e-05, 5.515300000000223e-05, 5.480599999999752e-05, 5.502699999999916e-05, 5.554100000000617e-05, 5.5249999999999744e-05, 5.4680000000001394e-05, 5.4958000000000784e-05, 5.487500000000284e-05, 5.493100000000112e-05, 5.493100000000112e-05, 5.540300000000248e-05, 5.5457999999994345e-05, 5.552800000000607e-05, 5.533399999999716e-05, 5.5541999999998704e-05, 5.5665999999995885e-05, 5.56670000000023e-05, 5.559800000000392e-05, 5.479100000000542e-05, 5.5680000000002394e-05, 5.5027999999998634e-05, 5.5222000000000604e-05, 5.481900000000456e-05, 5.552800000000607e-05, 5.507000000000428e-05, 5.5444000000001714e-05, 5.540299999999554e-05, 5.504200000000514e-05, 5.5472000000000854e-05, 5.5513999999999564e-05, 5.487500000000284e-05, 5.5513999999999564e-05, 5.515300000000223e-05, 5.533300000000463e-05, 5.519500000000094e-05, 5.486200000000274e-05, 5.527699999999941e-05, 5.559700000000445e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.225" endtime="20201030 15:52:09.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.220" endtime="20201030 15:52:09.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.233" endtime="20201030 15:52:09.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.231" endtime="20201030 15:52:09.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.230" endtime="20201030 15:52:09.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.773" endtime="20201030 15:52:09.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.772" endtime="20201030 15:52:09.254"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.265" endtime="20201030 15:52:09.283"></status>
</kw>
<msg timestamp="20201030 15:52:09.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.264" endtime="20201030 15:52:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.285" endtime="20201030 15:52:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.288" endtime="20201030 15:52:09.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.260" endtime="20201030 15:52:09.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.257" endtime="20201030 15:52:09.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.299" endtime="20201030 15:52:09.643"></status>
</kw>
<msg timestamp="20201030 15:52:09.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.297" endtime="20201030 15:52:09.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024881569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.653" endtime="20201030 15:52:09.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.672" endtime="20201030 15:52:09.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.294" endtime="20201030 15:52:09.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.292" endtime="20201030 15:52:09.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.689" level="INFO">${RESULT} = [{'diff': 5.633299999999869e-05}, {'diff': 5.620900000000151e-05}, {'diff': 5.566699999999883e-05}, {'diff': 5.631899999999912e-05}, {'diff': 5.580499999999905e-05}, {'diff': 5.633400000000163e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:09.681" endtime="20201030 15:52:09.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.701" level="INFO">${ACCURACY} = {'diff': [5.633299999999869e-05, 5.620900000000151e-05, 5.566699999999883e-05, 5.631899999999912e-05, 5.580499999999905e-05, 5.633400000000163e-05, 5.634699999999826e-05, 5.6652000000000785e-05, 5.613...</msg>
<status status="PASS" starttime="20201030 15:52:09.692" endtime="20201030 15:52:09.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.712" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.710" endtime="20201030 15:52:09.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.717" level="INFO">VALUE: [5.633299999999869e-05, 5.620900000000151e-05, 5.566699999999883e-05, 5.631899999999912e-05, 5.580499999999905e-05, 5.633400000000163e-05, 5.634699999999826e-05, 5.6652000000000785e-05, 5.613900000000019e-05, 5.606900000000234e-05, 5.5986000000000924e-05, 5.593099999999865e-05, 5.6207999999998565e-05, 5.58480000000007e-05, 5.606999999999834e-05, 5.633399999999816e-05, 5.670899999999854e-05, 5.6055999999998773e-05, 5.641699999999958e-05, 5.595899999999779e-05, 5.586200000000027e-05, 5.587500000000037e-05, 5.6152000000000285e-05, 5.5915999999999605e-05, 5.5930000000002644e-05, 5.613900000000019e-05, 5.5943999999998745e-05, 5.6055999999998773e-05, 5.587500000000037e-05, 5.5694000000001964e-05, 5.665300000000026e-05, 5.66809999999994e-05, 5.608300000000191e-05, 5.581999999999809e-05, 5.612500000000062e-05, 5.640300000000001e-05, 5.591699999999908e-05, 5.5722000000001104e-05, 5.572300000000058e-05, 5.638899999999697e-05, 5.655500000000327e-05, 5.666699999999983e-05, 5.5985999999997454e-05, 5.618100000000237e-05, 5.606999999999834e-05, 5.6207999999998565e-05, 5.637500000000087e-05, 5.61809999999989e-05, 5.5805999999998523e-05, 5.6514000000000564e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.714" endtime="20201030 15:52:09.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.703" endtime="20201030 15:52:09.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.730" endtime="20201030 15:52:09.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.726" endtime="20201030 15:52:09.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.723" endtime="20201030 15:52:09.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.255" endtime="20201030 15:52:09.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.255" endtime="20201030 15:52:09.756"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.779" endtime="20201030 15:52:09.800"></status>
</kw>
<msg timestamp="20201030 15:52:09.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.775" endtime="20201030 15:52:09.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.804" endtime="20201030 15:52:09.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.811" endtime="20201030 15:52:09.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.768" endtime="20201030 15:52:09.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.762" endtime="20201030 15:52:09.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.835" endtime="20201030 15:52:10.183"></status>
</kw>
<msg timestamp="20201030 15:52:10.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.831" endtime="20201030 15:52:10.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.193" endtime="20201030 15:52:10.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.212" endtime="20201030 15:52:10.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.824" endtime="20201030 15:52:10.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.819" endtime="20201030 15:52:10.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.234" level="INFO">${RESULT} = [{'diff': 5.7179999999996955e-05}, {'diff': 5.7055999999999774e-05}, {'diff': 5.756900000000037e-05}, {'diff': 5.741700000000405e-05}, {'diff': 5.715299999999729e-05}, {'diff': 5.6805999999999524e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:10.221" endtime="20201030 15:52:10.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.245" level="INFO">${ACCURACY} = {'diff': [5.7179999999996955e-05, 5.7055999999999774e-05, 5.756900000000037e-05, 5.741700000000405e-05, 5.715299999999729e-05, 5.6805999999999524e-05, 5.6736000000001674e-05, 5.6736000000001674e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:10.236" endtime="20201030 15:52:10.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.258" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.255" endtime="20201030 15:52:10.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.264" level="INFO">VALUE: [5.7179999999996955e-05, 5.7055999999999774e-05, 5.756900000000037e-05, 5.741700000000405e-05, 5.715299999999729e-05, 5.6805999999999524e-05, 5.6736000000001674e-05, 5.6736000000001674e-05, 5.765300000000473e-05, 5.683299999999919e-05, 5.7194999999996e-05, 5.7179999999996955e-05, 5.7250000000001744e-05, 5.683299999999919e-05, 5.7430000000004144e-05, 5.758299999999994e-05, 5.688900000000441e-05, 5.741699999999711e-05, 5.7083999999998913e-05, 5.683399999999866e-05, 5.684699999999876e-05, 5.7486000000002424e-05, 5.68749999999979e-05, 5.7292000000000454e-05, 5.7333999999999163e-05, 5.681899999999962e-05, 5.7028000000000634e-05, 5.7387999999998496e-05, 5.734799999999873e-05, 5.7443999999996775e-05, 5.7207999999996095e-05, 5.73749999999984e-05, 5.756900000000037e-05, 5.731900000000012e-05, 5.7208000000003034e-05, 5.758299999999994e-05, 5.7207999999996095e-05, 5.7042000000000204e-05, 5.6819999999999093e-05, 5.766699999999736e-05, 5.7055999999999774e-05, 5.690299999999704e-05, 5.738899999999797e-05, 5.734799999999873e-05, 5.6915999999997136e-05, 5.691700000000355e-05, 5.7583999999999413e-05, 5.7292000000000454e-05, 5.706899999999987e-05, 5.684699999999876e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.260" endtime="20201030 15:52:10.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.247" endtime="20201030 15:52:10.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.284" endtime="20201030 15:52:10.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.279" endtime="20201030 15:52:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.277" endtime="20201030 15:52:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.758" endtime="20201030 15:52:10.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.757" endtime="20201030 15:52:10.308"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.331" endtime="20201030 15:52:10.357"></status>
</kw>
<msg timestamp="20201030 15:52:10.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.328" endtime="20201030 15:52:10.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.361" endtime="20201030 15:52:10.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.367" endtime="20201030 15:52:10.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.321" endtime="20201030 15:52:10.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.315" endtime="20201030 15:52:10.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.390" endtime="20201030 15:52:10.724"></status>
</kw>
<msg timestamp="20201030 15:52:10.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046577597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.387" endtime="20201030 15:52:10.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046577597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.734" endtime="20201030 15:52:10.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.753" endtime="20201030 15:52:10.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.380" endtime="20201030 15:52:10.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.375" endtime="20201030 15:52:10.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.770" level="INFO">${RESULT} = [{'diff': 5.779100000000148e-05}, {'diff': 5.788899999999847e-05}, {'diff': 5.808300000000044e-05}, {'diff': 5.834700000000026e-05}, {'diff': 5.7916000000005075e-05}, {'diff': 5.7764000000001814e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:10.761" endtime="20201030 15:52:10.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.779" level="INFO">${ACCURACY} = {'diff': [5.779100000000148e-05, 5.788899999999847e-05, 5.808300000000044e-05, 5.834700000000026e-05, 5.7916000000005075e-05, 5.7764000000001814e-05, 5.8528000000002134e-05, 5.8249999999995805e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:10.772" endtime="20201030 15:52:10.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.790" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.788" endtime="20201030 15:52:10.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.795" level="INFO">VALUE: [5.779100000000148e-05, 5.788899999999847e-05, 5.808300000000044e-05, 5.834700000000026e-05, 5.7916000000005075e-05, 5.7764000000001814e-05, 5.8528000000002134e-05, 5.8249999999995805e-05, 5.783300000000019e-05, 5.865299999999879e-05, 5.843100000000462e-05, 5.7971999999996415e-05, 5.838899999999897e-05, 5.779100000000148e-05, 5.788899999999847e-05, 5.784699999999976e-05, 5.8070000000000344e-05, 5.8528000000002134e-05, 5.76949999999965e-05, 5.8514000000002564e-05, 5.838899999999897e-05, 5.788899999999847e-05, 5.83749999999994e-05, 5.8013999999995125e-05, 5.7915999999998136e-05, 5.791700000000455e-05, 5.7749999999995305e-05, 5.840299999999854e-05, 5.82629999999959e-05, 5.8056000000000774e-05, 5.815300000000523e-05, 5.781899999999368e-05, 5.868100000000487e-05, 5.813899999999872e-05, 5.8250000000002744e-05, 5.838899999999897e-05, 5.8735999999996735e-05, 5.8457999999997345e-05, 5.811199999999905e-05, 5.858300000000094e-05, 5.788899999999847e-05, 5.8457999999997345e-05, 5.7735999999995735e-05, 5.859700000000051e-05, 5.865299999999879e-05, 5.791699999999761e-05, 5.8236000000003174e-05, 5.8292000000001454e-05, 5.8584000000000414e-05, 5.7902000000005505e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.792" endtime="20201030 15:52:10.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.781" endtime="20201030 15:52:10.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.809" endtime="20201030 15:52:10.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.803" endtime="20201030 15:52:10.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.801" endtime="20201030 15:52:10.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.310" endtime="20201030 15:52:10.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.309" endtime="20201030 15:52:10.835"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.858" endtime="20201030 15:52:10.879"></status>
</kw>
<msg timestamp="20201030 15:52:10.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.855" endtime="20201030 15:52:10.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.882" endtime="20201030 15:52:10.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.889" endtime="20201030 15:52:10.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.847" endtime="20201030 15:52:10.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.841" endtime="20201030 15:52:10.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.912" endtime="20201030 15:52:11.257"></status>
</kw>
<msg timestamp="20201030 15:52:11.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0424745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042534014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:10.908" endtime="20201030 15:52:11.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0424745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042534014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:11.267" endtime="20201030 15:52:11.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.285" endtime="20201030 15:52:11.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.901" endtime="20201030 15:52:11.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.897" endtime="20201030 15:52:11.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.302" level="INFO">${RESULT} = [{'diff': 5.9514000000003564e-05}, {'diff': 5.940300000000648e-05}, {'diff': 5.88749999999999e-05}, {'diff': 5.944499999999825e-05}, {'diff': 5.948699999999696e-05}, {'diff': 5.913899999999972e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:11.294" endtime="20201030 15:52:11.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.313" level="INFO">${ACCURACY} = {'diff': [5.9514000000003564e-05, 5.940300000000648e-05, 5.88749999999999e-05, 5.944499999999825e-05, 5.948699999999696e-05, 5.913899999999972e-05, 5.9249999999996805e-05, 5.8915999999999136e-05, 5.87...</msg>
<status status="PASS" starttime="20201030 15:52:11.304" endtime="20201030 15:52:11.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.324" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.321" endtime="20201030 15:52:11.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.329" level="INFO">VALUE: [5.9514000000003564e-05, 5.940300000000648e-05, 5.88749999999999e-05, 5.944499999999825e-05, 5.948699999999696e-05, 5.913899999999972e-05, 5.9249999999996805e-05, 5.8915999999999136e-05, 5.8708000000004534e-05, 5.9165999999999386e-05, 5.886100000000033e-05, 5.8721999999997165e-05, 5.862499999999965e-05, 5.8957999999997845e-05, 5.8736000000003674e-05, 5.8820000000001094e-05, 5.9069999999994405e-05, 5.9070000000001344e-05, 5.9513999999996625e-05, 5.888899999999947e-05, 5.916699999999886e-05, 5.88749999999999e-05, 5.9249999999996805e-05, 5.9665999999999886e-05, 5.947299999999739e-05, 5.891700000000555e-05, 5.9056000000001774e-05, 5.9665999999999886e-05, 5.956900000000237e-05, 5.913899999999972e-05, 5.9471999999997915e-05, 5.909700000000101e-05, 5.968099999999893e-05, 5.9264000000003314e-05, 5.913899999999972e-05, 5.9250000000003744e-05, 5.912500000000015e-05, 5.9013999999996125e-05, 5.92629999999969e-05, 5.8929999999998706e-05, 5.8915999999999136e-05, 5.958300000000194e-05, 5.893099999999818e-05, 5.9291999999995515e-05, 5.8929999999998706e-05, 5.913899999999972e-05, 5.8693999999998026e-05, 5.9084000000000914e-05, 5.9499999999997055e-05, 5.9584000000001414e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.326" endtime="20201030 15:52:11.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.315" endtime="20201030 15:52:11.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.341" endtime="20201030 15:52:11.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.337" endtime="20201030 15:52:11.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.335" endtime="20201030 15:52:11.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.837" endtime="20201030 15:52:11.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.836" endtime="20201030 15:52:11.366"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.389" endtime="20201030 15:52:11.410"></status>
</kw>
<msg timestamp="20201030 15:52:11.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.386" endtime="20201030 15:52:11.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.413" endtime="20201030 15:52:11.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.419" endtime="20201030 15:52:11.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.378" endtime="20201030 15:52:11.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.373" endtime="20201030 15:52:11.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.442" endtime="20201030 15:52:11.787"></status>
</kw>
<msg timestamp="20201030 15:52:11.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040788028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.439" endtime="20201030 15:52:11.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040728278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040788028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.796" endtime="20201030 15:52:11.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.815" endtime="20201030 15:52:11.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.432" endtime="20201030 15:52:11.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.427" endtime="20201030 15:52:11.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.832" level="INFO">${RESULT} = [{'diff': 5.9749999999997305e-05}, {'diff': 5.9806000000002524e-05}, {'diff': 6.0014000000004064e-05}, {'diff': 6.0098000000001484e-05}, {'diff': 5.9736000000004674e-05}, {'diff': 6.013900000000072e-0...</msg>
<status status="PASS" starttime="20201030 15:52:11.823" endtime="20201030 15:52:11.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.843" level="INFO">${ACCURACY} = {'diff': [5.9749999999997305e-05, 5.9806000000002524e-05, 6.0014000000004064e-05, 6.0098000000001484e-05, 5.9736000000004674e-05, 6.013900000000072e-05, 6.0250000000004744e-05, 6.004099999999679e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.834" endtime="20201030 15:52:11.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.854" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.852" endtime="20201030 15:52:11.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.860" level="INFO">VALUE: [5.9749999999997305e-05, 5.9806000000002524e-05, 6.0014000000004064e-05, 6.0098000000001484e-05, 5.9736000000004674e-05, 6.013900000000072e-05, 6.0250000000004744e-05, 6.004099999999679e-05, 6.013900000000072e-05, 6.0221999999998665e-05, 6.062500000000165e-05, 5.98750000000009e-05, 5.96949999999985e-05, 5.9735999999997735e-05, 5.9820000000002094e-05, 5.984700000000176e-05, 6.0402000000001066e-05, 5.994500000000569e-05, 6.0471999999998916e-05, 6.0263999999997375e-05, 6.047299999999839e-05, 6.02629999999979e-05, 6.00829999999955e-05, 5.980499999999611e-05, 5.9902000000000566e-05, 6.059700000000251e-05, 6.056899999999643e-05, 6.066700000000036e-05, 6.066700000000036e-05, 5.991699999999961e-05, 6.012500000000115e-05, 6.0582999999996e-05, 6.0471999999998916e-05, 6.066700000000036e-05, 6.065300000000079e-05, 5.9820000000002094e-05, 6.056900000000337e-05, 6.0499999999998055e-05, 6.038900000000097e-05, 6.012500000000115e-05, 6.056900000000337e-05, 6.065300000000079e-05, 6.0443999999999776e-05, 5.984700000000176e-05, 6.036100000000183e-05, 5.991699999999961e-05, 5.9693999999999026e-05, 5.9777999999996445e-05, 6.040300000000054e-05, 6.0152000000000816e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.857" endtime="20201030 15:52:11.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.845" endtime="20201030 15:52:11.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.873" endtime="20201030 15:52:11.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.868" endtime="20201030 15:52:11.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.866" endtime="20201030 15:52:11.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.369" endtime="20201030 15:52:11.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.367" endtime="20201030 15:52:11.898"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.921" endtime="20201030 15:52:11.941"></status>
</kw>
<msg timestamp="20201030 15:52:11.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.918" endtime="20201030 15:52:11.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.944" endtime="20201030 15:52:11.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.951" endtime="20201030 15:52:11.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.910" endtime="20201030 15:52:11.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.905" endtime="20201030 15:52:11.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.974" endtime="20201030 15:52:12.322"></status>
</kw>
<msg timestamp="20201030 15:52:12.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040931361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040993014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.970" endtime="20201030 15:52:12.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040931361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040993014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.331" endtime="20201030 15:52:12.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.350" endtime="20201030 15:52:12.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.963" endtime="20201030 15:52:12.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.959" endtime="20201030 15:52:12.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.367" level="INFO">${RESULT} = [{'diff': 6.165300000000179e-05}, {'diff': 6.0805999999996585e-05}, {'diff': 6.081900000000362e-05}, {'diff': 6.0707999999999596e-05}, {'diff': 6.131999999999665e-05}, {'diff': 6.115300000000129e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:12.358" endtime="20201030 15:52:12.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.376" level="INFO">${ACCURACY} = {'diff': [6.165300000000179e-05, 6.0805999999996585e-05, 6.081900000000362e-05, 6.0707999999999596e-05, 6.131999999999665e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.122299999999914e-05, 6.12...</msg>
<status status="PASS" starttime="20201030 15:52:12.369" endtime="20201030 15:52:12.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.387" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.385" endtime="20201030 15:52:12.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.392" level="INFO">VALUE: [6.165300000000179e-05, 6.0805999999996585e-05, 6.081900000000362e-05, 6.0707999999999596e-05, 6.131999999999665e-05, 6.115300000000129e-05, 6.115200000000182e-05, 6.122299999999914e-05, 6.122299999999914e-05, 6.115200000000182e-05, 6.0721999999999166e-05, 6.131899999999718e-05, 6.119400000000053e-05, 6.0680000000000456e-05, 6.166699999999442e-05, 6.155499999999786e-05, 6.0971999999999416e-05, 6.133399999999622e-05, 6.0763999999997875e-05, 6.155599999999734e-05, 6.116700000000086e-05, 6.147199999999992e-05, 6.105600000000377e-05, 6.144500000000025e-05, 6.166600000000189e-05, 6.168000000000146e-05, 6.125000000000574e-05, 6.154100000000523e-05, 6.168000000000146e-05, 6.105499999999736e-05, 6.112499999999521e-05, 6.0777999999997445e-05, 6.155599999999734e-05, 6.141700000000111e-05, 6.090300000000104e-05, 6.107000000000334e-05, 6.123600000000617e-05, 6.091700000000061e-05, 6.0736000000005674e-05, 6.118100000000043e-05, 6.070899999999907e-05, 6.095899999999932e-05, 6.0735999999998735e-05, 6.144400000000078e-05, 6.0957999999999846e-05, 6.145800000000035e-05, 6.130599999999709e-05, 6.156900000000437e-05, 6.163899999999528e-05, 6.123599999999924e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.389" endtime="20201030 15:52:12.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.378" endtime="20201030 15:52:12.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.405" endtime="20201030 15:52:12.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.400" endtime="20201030 15:52:12.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.398" endtime="20201030 15:52:12.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.900" endtime="20201030 15:52:12.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.899" endtime="20201030 15:52:12.430"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.452" endtime="20201030 15:52:12.475"></status>
</kw>
<msg timestamp="20201030 15:52:12.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.449" endtime="20201030 15:52:12.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.478" endtime="20201030 15:52:12.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.485" endtime="20201030 15:52:12.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.442" endtime="20201030 15:52:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.436" endtime="20201030 15:52:12.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.508" endtime="20201030 15:52:12.852"></status>
</kw>
<msg timestamp="20201030 15:52:12.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042449333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042511167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.504" endtime="20201030 15:52:12.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042449333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042511167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.862" endtime="20201030 15:52:12.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.881" endtime="20201030 15:52:12.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.497" endtime="20201030 15:52:12.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.493" endtime="20201030 15:52:12.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.899" level="INFO">${RESULT} = [{'diff': 6.183400000000366e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.184699999999682e-05}, {'diff': 6.206899999999793e-05}, {'diff': 6.219400000000153e-05}, {'diff': 6.181899999999768e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:12.890" endtime="20201030 15:52:12.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.909" level="INFO">${ACCURACY} = {'diff': [6.183400000000366e-05, 6.188900000000247e-05, 6.184699999999682e-05, 6.206899999999793e-05, 6.219400000000153e-05, 6.181899999999768e-05, 6.216600000000239e-05, 6.177800000000538e-05, 6.1847...</msg>
<status status="PASS" starttime="20201030 15:52:12.901" endtime="20201030 15:52:12.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.920" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.918" endtime="20201030 15:52:12.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.925" level="INFO">VALUE: [6.183400000000366e-05, 6.188900000000247e-05, 6.184699999999682e-05, 6.206899999999793e-05, 6.219400000000153e-05, 6.181899999999768e-05, 6.216600000000239e-05, 6.177800000000538e-05, 6.184700000000376e-05, 6.222200000000067e-05, 6.22499999999998e-05, 6.245800000000135e-05, 6.262500000000365e-05, 6.190300000000204e-05, 6.170900000000007e-05, 6.183399999999672e-05, 6.265299999999585e-05, 6.252800000000613e-05, 6.240300000000254e-05, 6.190200000000257e-05, 6.19159999999952e-05, 6.17499999999993e-05, 6.251399999999963e-05, 6.172200000000017e-05, 6.217999999999502e-05, 6.190300000000204e-05, 6.219400000000153e-05, 6.169399999999409e-05, 6.187499999999596e-05, 6.233299999999775e-05, 6.191700000000161e-05, 6.213900000000272e-05, 6.168099999999399e-05, 6.252699999999972e-05, 6.261099999999714e-05, 6.231899999999818e-05, 6.215300000000229e-05, 6.180499999999811e-05, 6.269400000000203e-05, 6.22499999999998e-05, 6.227799999999895e-05, 6.180499999999811e-05, 6.198599999999999e-05, 6.240300000000254e-05, 6.22499999999998e-05, 6.206899999999793e-05, 6.244500000000125e-05, 6.266600000000289e-05, 6.213799999999631e-05, 6.273600000000074e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.922" endtime="20201030 15:52:12.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.911" endtime="20201030 15:52:12.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.940" endtime="20201030 15:52:12.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.933" endtime="20201030 15:52:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.931" endtime="20201030 15:52:12.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.432" endtime="20201030 15:52:12.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.431" endtime="20201030 15:52:12.966"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.988" endtime="20201030 15:52:13.009"></status>
</kw>
<msg timestamp="20201030 15:52:13.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.985" endtime="20201030 15:52:13.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.013" endtime="20201030 15:52:13.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.019" endtime="20201030 15:52:13.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.978" endtime="20201030 15:52:13.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.972" endtime="20201030 15:52:13.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.042" endtime="20201030 15:52:13.378"></status>
</kw>
<msg timestamp="20201030 15:52:13.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041366236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041428944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.039" endtime="20201030 15:52:13.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041366236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041428944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.387" endtime="20201030 15:52:13.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.406" endtime="20201030 15:52:13.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.031" endtime="20201030 15:52:13.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.027" endtime="20201030 15:52:13.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.423" level="INFO">${RESULT} = [{'diff': 6.27080000000016e-05}, {'diff': 6.348600000000149e-05}, {'diff': 6.329199999999952e-05}, {'diff': 6.281899999999868e-05}, {'diff': 6.344400000000278e-05}, {'diff': 6.359699999999857e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:13.414" endtime="20201030 15:52:13.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.433" level="INFO">${ACCURACY} = {'diff': [6.27080000000016e-05, 6.348600000000149e-05, 6.329199999999952e-05, 6.281899999999868e-05, 6.344400000000278e-05, 6.359699999999857e-05, 6.301400000000013e-05, 6.269400000000203e-05, 6.30829...</msg>
<status status="PASS" starttime="20201030 15:52:13.425" endtime="20201030 15:52:13.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.444" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.442" endtime="20201030 15:52:13.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.450" level="INFO">VALUE: [6.27080000000016e-05, 6.348600000000149e-05, 6.329199999999952e-05, 6.281899999999868e-05, 6.344400000000278e-05, 6.359699999999857e-05, 6.301400000000013e-05, 6.269400000000203e-05, 6.30829999999985e-05, 6.341699999999617e-05, 6.313899999999678e-05, 6.268100000000193e-05, 6.336099999999789e-05, 6.281999999999816e-05, 6.30699999999984e-05, 6.295900000000132e-05, 6.333300000000569e-05, 6.368000000000346e-05, 6.306899999999893e-05, 6.318099999999549e-05, 6.29029999999961e-05, 6.322199999999473e-05, 6.3582999999999e-05, 6.288899999999653e-05, 6.300000000000056e-05, 6.283399999999773e-05, 6.331999999999866e-05, 6.283300000000519e-05, 6.277799999999945e-05, 6.333399999999823e-05, 6.316700000000286e-05, 6.35699999999989e-05, 6.281900000000562e-05, 6.309700000000501e-05, 6.322200000000167e-05, 6.27080000000016e-05, 6.366699999999642e-05, 6.318099999999549e-05, 6.344399999999584e-05, 6.35280000000002e-05, 6.26950000000015e-05, 6.341699999999617e-05, 6.355599999999934e-05, 6.354199999999977e-05, 6.326400000000038e-05, 6.338799999999756e-05, 6.356899999999943e-05, 6.366600000000389e-05, 6.29159999999962e-05, 6.313900000000372e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.446" endtime="20201030 15:52:13.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.435" endtime="20201030 15:52:13.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.462" endtime="20201030 15:52:13.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.458" endtime="20201030 15:52:13.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.455" endtime="20201030 15:52:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.968" endtime="20201030 15:52:13.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.967" endtime="20201030 15:52:13.487"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.509" endtime="20201030 15:52:13.531"></status>
</kw>
<msg timestamp="20201030 15:52:13.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.506" endtime="20201030 15:52:13.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.534" endtime="20201030 15:52:13.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.540" endtime="20201030 15:52:13.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.499" endtime="20201030 15:52:13.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.493" endtime="20201030 15:52:13.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.563" endtime="20201030 15:52:13.854"></status>
</kw>
<msg timestamp="20201030 15:52:13.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040703444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040767278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.560" endtime="20201030 15:52:13.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040703444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040767278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.858" endtime="20201030 15:52:13.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.867" endtime="20201030 15:52:13.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.553" endtime="20201030 15:52:13.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.548" endtime="20201030 15:52:13.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.875" level="INFO">${RESULT} = [{'diff': 6.383399999999873e-05}, {'diff': 6.462499999999871e-05}, {'diff': 6.408399999999898e-05}, {'diff': 6.42909999999941e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.415299999999735e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:13.871" endtime="20201030 15:52:13.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.880" level="INFO">${ACCURACY} = {'diff': [6.383399999999873e-05, 6.462499999999871e-05, 6.408399999999898e-05, 6.42909999999941e-05, 6.380500000000011e-05, 6.415299999999735e-05, 6.37500000000013e-05, 6.431900000000018e-05, 6.423600...</msg>
<status status="PASS" starttime="20201030 15:52:13.876" endtime="20201030 15:52:13.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.885" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.884" endtime="20201030 15:52:13.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.888" level="INFO">VALUE: [6.383399999999873e-05, 6.462499999999871e-05, 6.408399999999898e-05, 6.42909999999941e-05, 6.380500000000011e-05, 6.415299999999735e-05, 6.37500000000013e-05, 6.431900000000018e-05, 6.423600000000224e-05, 6.413899999999778e-05, 6.447200000000292e-05, 6.462499999999871e-05, 6.379200000000002e-05, 6.39029999999971e-05, 6.447199999999598e-05, 6.40699999999994e-05, 6.409699999999907e-05, 6.43479999999988e-05, 6.43479999999988e-05, 6.422200000000267e-05, 6.369399999999609e-05, 6.440199999999813e-05, 6.369399999999609e-05, 6.39029999999971e-05, 6.390300000000404e-05, 6.380500000000011e-05, 6.448600000000249e-05, 6.391699999999667e-05, 6.441699999999717e-05, 6.466700000000436e-05, 6.416699999999692e-05, 6.380599999999959e-05, 6.397300000000189e-05, 6.397299999999495e-05, 6.431900000000018e-05, 6.422199999999573e-05, 6.363799999999781e-05, 6.392999999999677e-05, 6.441600000000464e-05, 6.438899999999803e-05, 6.408399999999898e-05, 6.411099999999864e-05, 6.445800000000335e-05, 6.395800000000285e-05, 6.418100000000343e-05, 6.369499999999556e-05, 6.44029999999976e-05, 6.406899999999993e-05, 6.39159999999972e-05, 6.441699999999717e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.886" endtime="20201030 15:52:13.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.881" endtime="20201030 15:52:13.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.894" endtime="20201030 15:52:13.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.892" endtime="20201030 15:52:13.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.890" endtime="20201030 15:52:13.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.489" endtime="20201030 15:52:13.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.488" endtime="20201030 15:52:13.915"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.927" endtime="20201030 15:52:13.945"></status>
</kw>
<msg timestamp="20201030 15:52:13.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.925" endtime="20201030 15:52:13.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.947" endtime="20201030 15:52:13.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.950" endtime="20201030 15:52:13.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.921" endtime="20201030 15:52:13.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.918" endtime="20201030 15:52:13.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.961" endtime="20201030 15:52:14.290"></status>
</kw>
<msg timestamp="20201030 15:52:14.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.959" endtime="20201030 15:52:14.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025764208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025829167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.300" endtime="20201030 15:52:14.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.319" endtime="20201030 15:52:14.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.956" endtime="20201030 15:52:14.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.953" endtime="20201030 15:52:14.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.336" level="INFO">${RESULT} = [{'diff': 6.495899999999985e-05}, {'diff': 6.533300000000075e-05}, {'diff': 6.523599999999977e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.556900000000143e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:14.327" endtime="20201030 15:52:14.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.345" level="INFO">${ACCURACY} = {'diff': [6.495899999999985e-05, 6.533300000000075e-05, 6.523599999999977e-05, 6.512499999999921e-05, 6.49440000000008e-05, 6.556900000000143e-05, 6.570800000000113e-05, 6.52639999999989e-05, 6.479200...</msg>
<status status="PASS" starttime="20201030 15:52:14.338" endtime="20201030 15:52:14.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.356" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.354" endtime="20201030 15:52:14.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.361" level="INFO">VALUE: [6.495899999999985e-05, 6.533300000000075e-05, 6.523599999999977e-05, 6.512499999999921e-05, 6.49440000000008e-05, 6.556900000000143e-05, 6.570800000000113e-05, 6.52639999999989e-05, 6.479200000000102e-05, 6.495800000000038e-05, 6.532000000000066e-05, 6.47639999999984e-05, 6.533299999999728e-05, 6.504100000000179e-05, 6.493100000000071e-05, 6.524999999999934e-05, 6.526299999999943e-05, 6.547299999999992e-05, 6.480500000000111e-05, 6.552699999999925e-05, 6.50419999999978e-05, 6.515300000000182e-05, 6.519400000000106e-05, 6.513899999999878e-05, 6.561100000000014e-05, 6.516699999999792e-05, 6.488899999999853e-05, 6.53479999999998e-05, 6.5276999999999e-05, 6.540199999999913e-05, 6.4889000000002e-05, 6.545800000000088e-05, 6.549999999999959e-05, 6.483300000000025e-05, 6.568100000000146e-05, 6.495899999999985e-05, 6.493000000000124e-05, 6.512499999999921e-05, 6.470800000000013e-05, 6.470800000000013e-05, 6.545800000000088e-05, 6.544500000000078e-05, 6.513900000000225e-05, 6.501399999999866e-05, 6.50280000000017e-05, 6.484699999999982e-05, 6.54029999999986e-05, 6.524999999999934e-05, 6.547200000000045e-05, 6.519400000000106e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.358" endtime="20201030 15:52:14.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.347" endtime="20201030 15:52:14.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.374" endtime="20201030 15:52:14.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.369" endtime="20201030 15:52:14.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.367" endtime="20201030 15:52:14.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.916" endtime="20201030 15:52:14.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.915" endtime="20201030 15:52:14.399"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.421" endtime="20201030 15:52:14.443"></status>
</kw>
<msg timestamp="20201030 15:52:14.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.418" endtime="20201030 15:52:14.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.447" endtime="20201030 15:52:14.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.453" endtime="20201030 15:52:14.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.411" endtime="20201030 15:52:14.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.405" endtime="20201030 15:52:14.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.476" endtime="20201030 15:52:14.809"></status>
</kw>
<msg timestamp="20201030 15:52:14.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042135792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.473" endtime="20201030 15:52:14.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042069722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042135792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.819" endtime="20201030 15:52:14.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.837" endtime="20201030 15:52:14.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.465" endtime="20201030 15:52:14.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.461" endtime="20201030 15:52:14.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.854" level="INFO">${RESULT} = [{'diff': 6.60700000000014e-05}, {'diff': 6.595899999999738e-05}, {'diff': 6.570799999999766e-05}, {'diff': 6.623699999999677e-05}, {'diff': 6.638900000000003e-05}, {'diff': 6.623600000000424e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:14.846" endtime="20201030 15:52:14.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.863" level="INFO">${ACCURACY} = {'diff': [6.60700000000014e-05, 6.595899999999738e-05, 6.570799999999766e-05, 6.623699999999677e-05, 6.638900000000003e-05, 6.623600000000424e-05, 6.581900000000168e-05, 6.597200000000442e-05, 6.57360...</msg>
<status status="PASS" starttime="20201030 15:52:14.856" endtime="20201030 15:52:14.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.874" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.872" endtime="20201030 15:52:14.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.880" level="INFO">VALUE: [6.60700000000014e-05, 6.595899999999738e-05, 6.570799999999766e-05, 6.623699999999677e-05, 6.638900000000003e-05, 6.623600000000424e-05, 6.581900000000168e-05, 6.597200000000442e-05, 6.573600000000374e-05, 6.626399999999644e-05, 6.626400000000338e-05, 6.591699999999867e-05, 6.569499999999756e-05, 6.65979999999941e-05, 6.580600000000159e-05, 6.583299999999431e-05, 6.616699999999892e-05, 6.592999999999877e-05, 6.647299999999745e-05, 6.659699999999463e-05, 6.604199999999533e-05, 6.580500000000211e-05, 6.576400000000288e-05, 6.645799999999841e-05, 6.626400000000338e-05, 6.569499999999756e-05, 6.64029999999996e-05, 6.615299999999935e-05, 6.667999999999952e-05, 6.656999999999497e-05, 6.631899999999524e-05, 6.64029999999996e-05, 6.622300000000414e-05, 6.663900000000028e-05, 6.601400000000313e-05, 6.576400000000288e-05, 6.617999999999902e-05, 6.645799999999841e-05, 6.569399999999809e-05, 6.64029999999996e-05, 6.595899999999738e-05, 6.605600000000184e-05, 6.634700000000132e-05, 6.601400000000313e-05, 6.593099999999824e-05, 6.658400000000148e-05, 6.65700000000019e-05, 6.573699999999627e-05, 6.592999999999877e-05, 6.648599999999755e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.877" endtime="20201030 15:52:14.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.865" endtime="20201030 15:52:14.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.894" endtime="20201030 15:52:14.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.888" endtime="20201030 15:52:14.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.885" endtime="20201030 15:52:14.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.401" endtime="20201030 15:52:14.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.399" endtime="20201030 15:52:14.918"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.942" endtime="20201030 15:52:14.963"></status>
</kw>
<msg timestamp="20201030 15:52:14.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.938" endtime="20201030 15:52:14.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.967" endtime="20201030 15:52:14.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.973" endtime="20201030 15:52:14.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.931" endtime="20201030 15:52:14.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.925" endtime="20201030 15:52:14.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.996" endtime="20201030 15:52:15.330"></status>
</kw>
<msg timestamp="20201030 15:52:15.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041702653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041769847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.993" endtime="20201030 15:52:15.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041702653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041769847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.340" endtime="20201030 15:52:15.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.358" endtime="20201030 15:52:15.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.986" endtime="20201030 15:52:15.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.981" endtime="20201030 15:52:15.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.375" level="INFO">${RESULT} = [{'diff': 6.719399999999959e-05}, {'diff': 6.681899999999574e-05}, {'diff': 6.774999999999837e-05}, {'diff': 6.688900000000053e-05}, {'diff': 6.713899999999384e-05}, {'diff': 6.670799999999866e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:15.366" endtime="20201030 15:52:15.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.390" level="INFO">${ACCURACY} = {'diff': [6.719399999999959e-05, 6.681899999999574e-05, 6.774999999999837e-05, 6.688900000000053e-05, 6.713899999999384e-05, 6.670799999999866e-05, 6.704199999999633e-05, 6.694499999999881e-05, 6.7651...</msg>
<status status="PASS" starttime="20201030 15:52:15.377" endtime="20201030 15:52:15.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.401" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.399" endtime="20201030 15:52:15.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.406" level="INFO">VALUE: [6.719399999999959e-05, 6.681899999999574e-05, 6.774999999999837e-05, 6.688900000000053e-05, 6.713899999999384e-05, 6.670799999999866e-05, 6.704199999999633e-05, 6.694499999999881e-05, 6.765199999999444e-05, 6.734799999999486e-05, 6.770799999999966e-05, 6.681899999999574e-05, 6.684700000000182e-05, 6.744499999999931e-05, 6.719399999999959e-05, 6.692999999999977e-05, 6.691699999999967e-05, 6.747199999999898e-05, 6.70700000000024e-05, 6.713900000000078e-05, 6.680600000000259e-05, 6.734699999999538e-05, 6.688900000000053e-05, 6.75280000000042e-05, 6.683300000000225e-05, 6.713900000000078e-05, 6.722199999999873e-05, 6.70830000000025e-05, 6.688900000000053e-05, 6.69160000000002e-05, 6.681900000000268e-05, 6.709699999999513e-05, 6.67359999999978e-05, 6.723600000000524e-05, 6.74030000000006e-05, 6.754199999999683e-05, 6.705600000000284e-05, 6.740299999999366e-05, 6.698599999999805e-05, 6.751400000000463e-05, 6.723699999999777e-05, 6.680500000000311e-05, 6.773699999999827e-05, 6.734700000000232e-05, 6.768000000000052e-05, 6.726399999999744e-05, 6.712500000000121e-05, 6.715300000000035e-05, 6.7583000000003e-05, 6.745800000000635e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.403" endtime="20201030 15:52:15.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.392" endtime="20201030 15:52:15.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.425" endtime="20201030 15:52:15.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.420" endtime="20201030 15:52:15.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.418" endtime="20201030 15:52:15.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.920" endtime="20201030 15:52:15.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.919" endtime="20201030 15:52:15.450"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.472" endtime="20201030 15:52:15.493"></status>
</kw>
<msg timestamp="20201030 15:52:15.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.469" endtime="20201030 15:52:15.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.497" endtime="20201030 15:52:15.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.503" endtime="20201030 15:52:15.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.462" endtime="20201030 15:52:15.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.456" endtime="20201030 15:52:15.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.526" endtime="20201030 15:52:15.867"></status>
</kw>
<msg timestamp="20201030 15:52:15.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040869611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040937722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.523" endtime="20201030 15:52:15.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040869611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040937722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.877" endtime="20201030 15:52:15.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.896" endtime="20201030 15:52:15.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.516" endtime="20201030 15:52:15.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.511" endtime="20201030 15:52:15.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.913" level="INFO">${RESULT} = [{'diff': 6.811100000000264e-05}, {'diff': 6.827800000000495e-05}, {'diff': 6.822199999999973e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.838900000000203e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:15.904" endtime="20201030 15:52:15.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.924" level="INFO">${ACCURACY} = {'diff': [6.811100000000264e-05, 6.827800000000495e-05, 6.822199999999973e-05, 6.794400000000034e-05, 6.824999999999887e-05, 6.838900000000203e-05, 6.82359999999993e-05, 6.858299999999706e-05, 6.82359...</msg>
<status status="PASS" starttime="20201030 15:52:15.915" endtime="20201030 15:52:15.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.934" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.932" endtime="20201030 15:52:15.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.940" level="INFO">VALUE: [6.811100000000264e-05, 6.827800000000495e-05, 6.822199999999973e-05, 6.794400000000034e-05, 6.824999999999887e-05, 6.838900000000203e-05, 6.82359999999993e-05, 6.858299999999706e-05, 6.82359999999993e-05, 6.780599999999665e-05, 6.786100000000239e-05, 6.801399999999819e-05, 6.816600000000145e-05, 6.848700000000596e-05, 6.843100000000074e-05, 6.86109999999962e-05, 6.85280000000052e-05, 6.768000000000052e-05, 6.791700000000067e-05, 6.801399999999819e-05, 6.830599999999715e-05, 6.813900000000178e-05, 6.868100000000099e-05, 6.847199999999998e-05, 6.848599999999955e-05, 6.788900000000153e-05, 6.806899999999699e-05, 6.788899999999459e-05, 6.809700000000307e-05, 6.818100000000049e-05, 6.781900000000368e-05, 6.779199999999708e-05, 6.815300000000135e-05, 6.815300000000135e-05, 6.86109999999962e-05, 6.786100000000239e-05, 6.834699999999638e-05, 6.856999999999697e-05, 6.77500000000053e-05, 6.840200000000213e-05, 6.856999999999697e-05, 6.822199999999973e-05, 6.779199999999708e-05, 6.834700000000332e-05, 6.847199999999998e-05, 6.840200000000213e-05, 6.824999999999887e-05, 6.769400000000009e-05, 6.793000000000077e-05, 6.77359999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.937" endtime="20201030 15:52:15.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.926" endtime="20201030 15:52:15.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.953" endtime="20201030 15:52:15.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.948" endtime="20201030 15:52:15.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.945" endtime="20201030 15:52:15.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.452" endtime="20201030 15:52:15.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.451" endtime="20201030 15:52:15.979"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.003" endtime="20201030 15:52:16.024"></status>
</kw>
<msg timestamp="20201030 15:52:16.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.999" endtime="20201030 15:52:16.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.028" endtime="20201030 15:52:16.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.034" endtime="20201030 15:52:16.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.992" endtime="20201030 15:52:16.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.986" endtime="20201030 15:52:16.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.057" endtime="20201030 15:52:16.394"></status>
</kw>
<msg timestamp="20201030 15:52:16.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042339958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042408944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.054" endtime="20201030 15:52:16.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042339958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042408944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.403" endtime="20201030 15:52:16.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.422" endtime="20201030 15:52:16.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.047" endtime="20201030 15:52:16.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.042" endtime="20201030 15:52:16.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.439" level="INFO">${RESULT} = [{'diff': 6.898600000000005e-05}, {'diff': 6.950000000000012e-05}, {'diff': 6.904099999999885e-05}, {'diff': 6.891599999999526e-05}, {'diff': 6.868000000000152e-05}, {'diff': 6.917999999999508e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:16.431" endtime="20201030 15:52:16.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.449" level="INFO">${ACCURACY} = {'diff': [6.898600000000005e-05, 6.950000000000012e-05, 6.904099999999885e-05, 6.891599999999526e-05, 6.868000000000152e-05, 6.917999999999508e-05, 6.947200000000098e-05, 6.92360000000003e-05, 6.94309...</msg>
<status status="PASS" starttime="20201030 15:52:16.441" endtime="20201030 15:52:16.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.459" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.457" endtime="20201030 15:52:16.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.465" level="INFO">VALUE: [6.898600000000005e-05, 6.950000000000012e-05, 6.904099999999885e-05, 6.891599999999526e-05, 6.868000000000152e-05, 6.917999999999508e-05, 6.947200000000098e-05, 6.92360000000003e-05, 6.94309999999948e-05, 6.913899999999584e-05, 6.947200000000098e-05, 6.893100000000124e-05, 6.938900000000303e-05, 6.89030000000021e-05, 6.948700000000002e-05, 6.938899999999609e-05, 6.901299999999971e-05, 6.94160000000027e-05, 6.881899999999774e-05, 6.944400000000184e-05, 6.869400000000109e-05, 6.966700000000242e-05, 6.966700000000242e-05, 6.880600000000459e-05, 6.933400000000423e-05, 6.945900000000088e-05, 6.908399999999704e-05, 6.897299999999995e-05, 6.965200000000338e-05, 6.968000000000252e-05, 6.869400000000109e-05, 6.966700000000242e-05, 6.888899999999559e-05, 6.944500000000131e-05, 6.965299999999591e-05, 6.966699999999548e-05, 6.937499999999652e-05, 6.908399999999704e-05, 6.919400000000159e-05, 6.89030000000021e-05, 6.868100000000099e-05, 6.92360000000003e-05, 6.926399999999944e-05, 6.956999999999797e-05, 6.899999999999962e-05, 6.893000000000177e-05, 6.958299999999806e-05, 6.923599999999336e-05, 6.90559999999979e-05, 6.913900000000278e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.462" endtime="20201030 15:52:16.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.450" endtime="20201030 15:52:16.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.477" endtime="20201030 15:52:16.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.473" endtime="20201030 15:52:16.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.470" endtime="20201030 15:52:16.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.981" endtime="20201030 15:52:16.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.980" endtime="20201030 15:52:16.502"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.524" endtime="20201030 15:52:16.547"></status>
</kw>
<msg timestamp="20201030 15:52:16.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.521" endtime="20201030 15:52:16.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.550" endtime="20201030 15:52:16.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.557" endtime="20201030 15:52:16.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.514" endtime="20201030 15:52:16.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.508" endtime="20201030 15:52:16.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.580" endtime="20201030 15:52:16.913"></status>
</kw>
<msg timestamp="20201030 15:52:16.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042101083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042171597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.576" endtime="20201030 15:52:16.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042101083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042171597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.923" endtime="20201030 15:52:16.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.942" endtime="20201030 15:52:16.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.569" endtime="20201030 15:52:16.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.564" endtime="20201030 15:52:16.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.959" level="INFO">${RESULT} = [{'diff': 7.051400000000069e-05}, {'diff': 7.00700000000054e-05}, {'diff': 7.015299999999641e-05}, {'diff': 7.000000000000062e-05}, {'diff': 6.969500000000156e-05}, {'diff': 7.051400000000069e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:16.950" endtime="20201030 15:52:16.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.968" level="INFO">${ACCURACY} = {'diff': [7.051400000000069e-05, 7.00700000000054e-05, 7.015299999999641e-05, 7.000000000000062e-05, 6.969500000000156e-05, 7.051400000000069e-05, 6.968100000000199e-05, 7.034699999999838e-05, 7.06939...</msg>
<status status="PASS" starttime="20201030 15:52:16.961" endtime="20201030 15:52:16.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.979" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.976" endtime="20201030 15:52:16.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.984" level="INFO">VALUE: [7.051400000000069e-05, 7.00700000000054e-05, 7.015299999999641e-05, 7.000000000000062e-05, 6.969500000000156e-05, 7.051400000000069e-05, 6.968100000000199e-05, 7.034699999999838e-05, 7.069399999999615e-05, 7.005499999999942e-05, 7.016700000000292e-05, 7.069400000000309e-05, 7.058299999999906e-05, 7.012500000000421e-05, 7.033299999999881e-05, 7.02360000000013e-05, 7.041700000000317e-05, 6.980599999999865e-05, 7.005499999999942e-05, 6.998600000000105e-05, 6.995900000000138e-05, 7.063799999999787e-05, 6.987500000000396e-05, 7.058399999999854e-05, 7.045800000000241e-05, 7.031899999999924e-05, 7.015300000000335e-05, 7.034699999999838e-05, 7.033299999999881e-05, 7.068000000000352e-05, 7.027800000000001e-05, 6.97360000000008e-05, 7.000000000000062e-05, 6.988900000000353e-05, 6.981899999999874e-05, 7.054199999999983e-05, 6.97360000000008e-05, 6.969500000000156e-05, 7.006899999999899e-05, 7.022200000000173e-05, 6.981900000000568e-05, 7.018000000000302e-05, 7.026400000000044e-05, 7.027800000000001e-05, 6.970799999999472e-05, 6.980499999999917e-05, 6.966699999999548e-05, 6.995900000000138e-05, 7.065300000000385e-05, 6.983299999999831e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.981" endtime="20201030 15:52:16.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.970" endtime="20201030 15:52:16.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.998" endtime="20201030 15:52:17.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.992" endtime="20201030 15:52:17.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.990" endtime="20201030 15:52:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.504" endtime="20201030 15:52:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.503" endtime="20201030 15:52:17.024"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.047" endtime="20201030 15:52:17.068"></status>
</kw>
<msg timestamp="20201030 15:52:17.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.043" endtime="20201030 15:52:17.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.072" endtime="20201030 15:52:17.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.078" endtime="20201030 15:52:17.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.036" endtime="20201030 15:52:17.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.030" endtime="20201030 15:52:17.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.101" endtime="20201030 15:52:17.405"></status>
</kw>
<msg timestamp="20201030 15:52:17.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042091875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.098" endtime="20201030 15:52:17.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042091875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.409" endtime="20201030 15:52:17.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.417" endtime="20201030 15:52:17.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.091" endtime="20201030 15:52:17.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.086" endtime="20201030 15:52:17.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.425" level="INFO">${RESULT} = [{'diff': 7.095800000000291e-05}, {'diff': 7.137499999999852e-05}, {'diff': 7.115299999999741e-05}, {'diff': 7.112499999999827e-05}, {'diff': 7.14160000000047e-05}, {'diff': 7.101399999999425e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:17.421" endtime="20201030 15:52:17.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.430" level="INFO">${ACCURACY} = {'diff': [7.095800000000291e-05, 7.137499999999852e-05, 7.115299999999741e-05, 7.112499999999827e-05, 7.14160000000047e-05, 7.101399999999425e-05, 7.091699999999673e-05, 7.148599999999561e-05, 7.09159...</msg>
<status status="PASS" starttime="20201030 15:52:17.426" endtime="20201030 15:52:17.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.436" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.434" endtime="20201030 15:52:17.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.438" level="INFO">VALUE: [7.095800000000291e-05, 7.137499999999852e-05, 7.115299999999741e-05, 7.112499999999827e-05, 7.14160000000047e-05, 7.101399999999425e-05, 7.091699999999673e-05, 7.148599999999561e-05, 7.091599999999726e-05, 7.105500000000042e-05, 7.133299999999981e-05, 7.129200000000058e-05, 7.142999999999733e-05, 7.118099999999655e-05, 7.124999999999493e-05, 7.115300000000435e-05, 7.083399999999879e-05, 7.106999999999947e-05, 7.083399999999879e-05, 7.147199999999604e-05, 7.075000000000137e-05, 7.148600000000255e-05, 7.158300000000006e-05, 7.102800000000076e-05, 7.115300000000435e-05, 7.158300000000006e-05, 7.079200000000008e-05, 7.099999999999468e-05, 7.159699999999963e-05, 7.100000000000162e-05, 7.07230000000017e-05, 7.140299999999766e-05, 7.081999999999922e-05, 7.166599999999801e-05, 7.080500000000017e-05, 7.080500000000017e-05, 7.15690000000005e-05, 7.120800000000316e-05, 7.080500000000017e-05, 7.075000000000137e-05, 7.069399999999615e-05, 7.141699999999723e-05, 7.069399999999615e-05, 7.143100000000374e-05, 7.140199999999819e-05, 7.172200000000323e-05, 7.138899999999809e-05, 7.113899999999784e-05, 7.113899999999784e-05, 7.169400000000409e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.437" endtime="20201030 15:52:17.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.431" endtime="20201030 15:52:17.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.444" endtime="20201030 15:52:17.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.442" endtime="20201030 15:52:17.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.441" endtime="20201030 15:52:17.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.026" endtime="20201030 15:52:17.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.025" endtime="20201030 15:52:17.465"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.476" endtime="20201030 15:52:17.493"></status>
</kw>
<msg timestamp="20201030 15:52:17.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.474" endtime="20201030 15:52:17.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.495" endtime="20201030 15:52:17.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.498" endtime="20201030 15:52:17.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.471" endtime="20201030 15:52:17.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.468" endtime="20201030 15:52:17.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.509" endtime="20201030 15:52:17.795"></status>
</kw>
<msg timestamp="20201030 15:52:17.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024046319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024118722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.507" endtime="20201030 15:52:17.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024046319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024118722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.799" endtime="20201030 15:52:17.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.808" endtime="20201030 15:52:17.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.504" endtime="20201030 15:52:17.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.502" endtime="20201030 15:52:17.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.816" level="INFO">${RESULT} = [{'diff': 7.240299999999866e-05}, {'diff': 7.22499999999994e-05}, {'diff': 7.256899999999802e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.258300000000106e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:17.811" endtime="20201030 15:52:17.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.821" level="INFO">${ACCURACY} = {'diff': [7.240299999999866e-05, 7.22499999999994e-05, 7.256899999999802e-05, 7.234700000000038e-05, 7.268099999999805e-05, 7.258300000000106e-05, 7.222200000000026e-05, 7.259799999999664e-05, 7.24580...</msg>
<status status="PASS" starttime="20201030 15:52:17.817" endtime="20201030 15:52:17.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.826" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.825" endtime="20201030 15:52:17.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.829" level="INFO">VALUE: [7.240299999999866e-05, 7.22499999999994e-05, 7.256899999999802e-05, 7.234700000000038e-05, 7.268099999999805e-05, 7.258300000000106e-05, 7.222200000000026e-05, 7.259799999999664e-05, 7.245800000000094e-05, 7.237499999999952e-05, 7.173599999999933e-05, 7.195800000000044e-05, 7.186099999999945e-05, 7.181900000000074e-05, 7.190299999999816e-05, 7.226399999999897e-05, 7.182000000000022e-05, 7.251399999999922e-05, 7.175000000000237e-05, 7.175000000000237e-05, 7.225000000000287e-05, 7.241600000000223e-05, 7.248600000000008e-05, 7.265199999999944e-05, 7.212500000000274e-05, 7.247200000000051e-05, 7.180500000000117e-05, 7.188900000000206e-05, 7.18049999999977e-05, 7.24170000000017e-05, 7.181899999999727e-05, 7.266700000000195e-05, 7.188900000000206e-05, 7.193100000000077e-05, 7.168100000000052e-05, 7.231899999999777e-05, 7.216599999999851e-05, 7.237499999999952e-05, 7.197200000000001e-05, 7.252800000000226e-05, 7.180500000000117e-05, 7.216600000000198e-05, 7.219500000000059e-05, 7.25690000000015e-05, 7.268100000000152e-05, 7.183399999999979e-05, 7.272199999999729e-05, 7.236099999999995e-05, 7.190300000000163e-05, 7.258400000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.827" endtime="20201030 15:52:17.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.822" endtime="20201030 15:52:17.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.834" endtime="20201030 15:52:17.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.832" endtime="20201030 15:52:17.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.831" endtime="20201030 15:52:17.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.466" endtime="20201030 15:52:17.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.466" endtime="20201030 15:52:17.856"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.866" endtime="20201030 15:52:17.884"></status>
</kw>
<msg timestamp="20201030 15:52:17.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.864" endtime="20201030 15:52:17.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.886" endtime="20201030 15:52:17.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.889" endtime="20201030 15:52:17.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.861" endtime="20201030 15:52:17.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.859" endtime="20201030 15:52:17.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.899" endtime="20201030 15:52:18.228"></status>
</kw>
<msg timestamp="20201030 15:52:18.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024327694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.898" endtime="20201030 15:52:18.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024327694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024401111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.238" endtime="20201030 15:52:18.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.257" endtime="20201030 15:52:18.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.895" endtime="20201030 15:52:18.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.892" endtime="20201030 15:52:18.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.274" level="INFO">${RESULT} = [{'diff': 7.341699999999923e-05}, {'diff': 7.265299999999891e-05}, {'diff': 7.333400000000129e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.292999999999883e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:18.265" endtime="20201030 15:52:18.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.283" level="INFO">${ACCURACY} = {'diff': [7.341699999999923e-05, 7.265299999999891e-05, 7.333400000000129e-05, 7.32500000000004e-05, 7.268099999999805e-05, 7.292999999999883e-05, 7.370799999999872e-05, 7.279199999999861e-05, 7.36110...</msg>
<status status="PASS" starttime="20201030 15:52:18.276" endtime="20201030 15:52:18.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.294" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.292" endtime="20201030 15:52:18.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.299" level="INFO">VALUE: [7.341699999999923e-05, 7.265299999999891e-05, 7.333400000000129e-05, 7.32500000000004e-05, 7.268099999999805e-05, 7.292999999999883e-05, 7.370799999999872e-05, 7.279199999999861e-05, 7.36110000000012e-05, 7.287500000000002e-05, 7.305499999999895e-05, 7.373600000000133e-05, 7.291599999999926e-05, 7.338900000000009e-05, 7.300000000000015e-05, 7.270800000000119e-05, 7.340299999999966e-05, 7.280599999999818e-05, 7.332000000000172e-05, 7.279200000000208e-05, 7.334800000000086e-05, 7.294499999999787e-05, 7.304100000000285e-05, 7.356899999999902e-05, 7.340200000000019e-05, 7.344400000000237e-05, 7.329199999999911e-05, 7.35829999999986e-05, 7.338900000000009e-05, 7.368100000000252e-05, 7.354099999999988e-05, 7.282000000000122e-05, 7.366699999999948e-05, 7.319499999999812e-05, 7.340200000000019e-05, 7.315199999999994e-05, 7.313899999999984e-05, 7.288800000000012e-05, 7.350000000000065e-05, 7.273600000000033e-05, 7.317999999999908e-05, 7.270800000000119e-05, 7.332000000000172e-05, 7.293100000000177e-05, 7.32500000000004e-05, 7.280599999999818e-05, 7.28049999999987e-05, 7.340200000000019e-05, 7.28049999999987e-05, 7.354199999999936e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.296" endtime="20201030 15:52:18.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.285" endtime="20201030 15:52:18.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.312" endtime="20201030 15:52:18.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.307" endtime="20201030 15:52:18.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.305" endtime="20201030 15:52:18.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.857" endtime="20201030 15:52:18.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.856" endtime="20201030 15:52:18.336"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.359" endtime="20201030 15:52:18.382"></status>
</kw>
<msg timestamp="20201030 15:52:18.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.356" endtime="20201030 15:52:18.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.385" endtime="20201030 15:52:18.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.392" endtime="20201030 15:52:18.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.349" endtime="20201030 15:52:18.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.343" endtime="20201030 15:52:18.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.415" endtime="20201030 15:52:18.748"></status>
</kw>
<msg timestamp="20201030 15:52:18.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042309375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042383556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.411" endtime="20201030 15:52:18.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042309375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042383556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.757" endtime="20201030 15:52:18.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.776" endtime="20201030 15:52:18.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.404" endtime="20201030 15:52:18.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.400" endtime="20201030 15:52:18.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.793" level="INFO">${RESULT} = [{'diff': 7.418099999999955e-05}, {'diff': 7.406899999999605e-05}, {'diff': 7.432000000000272e-05}, {'diff': 7.456899999999655e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.422199999999879e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:18.784" endtime="20201030 15:52:18.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.802" level="INFO">${ACCURACY} = {'diff': [7.418099999999955e-05, 7.406899999999605e-05, 7.432000000000272e-05, 7.456899999999655e-05, 7.465300000000091e-05, 7.422199999999879e-05, 7.429199999999664e-05, 7.425000000000487e-05, 7.4056...</msg>
<status status="PASS" starttime="20201030 15:52:18.795" endtime="20201030 15:52:18.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.813" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.811" endtime="20201030 15:52:18.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.818" level="INFO">VALUE: [7.418099999999955e-05, 7.406899999999605e-05, 7.432000000000272e-05, 7.456899999999655e-05, 7.465300000000091e-05, 7.422199999999879e-05, 7.429199999999664e-05, 7.425000000000487e-05, 7.40560000000029e-05, 7.401400000000419e-05, 7.413900000000084e-05, 7.44439999999999e-05, 7.472199999999929e-05, 7.370899999999819e-05, 7.394499999999887e-05, 7.44439999999999e-05, 7.380600000000265e-05, 7.438800000000162e-05, 7.401400000000419e-05, 7.44439999999999e-05, 7.440300000000066e-05, 7.46110000000022e-05, 7.445799999999947e-05, 7.465200000000144e-05, 7.381999999999528e-05, 7.380599999999571e-05, 7.383299999999537e-05, 7.42360000000053e-05, 7.45839999999956e-05, 7.38189999999958e-05, 7.383300000000231e-05, 7.433300000000281e-05, 7.44439999999999e-05, 7.468100000000005e-05, 7.42360000000053e-05, 7.380600000000265e-05, 7.466700000000048e-05, 7.445899999999894e-05, 7.405599999999596e-05, 7.419499999999912e-05, 7.448600000000555e-05, 7.405500000000342e-05, 7.432000000000272e-05, 7.390200000000069e-05, 7.412500000000127e-05, 7.374999999999743e-05, 7.384700000000188e-05, 7.41389999999939e-05, 7.431900000000324e-05, 7.423599999999836e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.815" endtime="20201030 15:52:18.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.804" endtime="20201030 15:52:18.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.832" endtime="20201030 15:52:18.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.826" endtime="20201030 15:52:18.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.824" endtime="20201030 15:52:18.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.339" endtime="20201030 15:52:18.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.337" endtime="20201030 15:52:18.857"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.879" endtime="20201030 15:52:18.901"></status>
</kw>
<msg timestamp="20201030 15:52:18.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.876" endtime="20201030 15:52:18.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.904" endtime="20201030 15:52:18.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.910" endtime="20201030 15:52:18.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.869" endtime="20201030 15:52:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.863" endtime="20201030 15:52:18.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.933" endtime="20201030 15:52:19.268"></status>
</kw>
<msg timestamp="20201030 15:52:19.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040650694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.930" endtime="20201030 15:52:19.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040650694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040725931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.277" endtime="20201030 15:52:19.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.296" endtime="20201030 15:52:19.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.923" endtime="20201030 15:52:19.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.918" endtime="20201030 15:52:19.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.313" level="INFO">${RESULT} = [{'diff': 7.523699999999883e-05}, {'diff': 7.545800000000047e-05}, {'diff': 7.490300000000116e-05}, {'diff': 7.523599999999936e-05}, {'diff': 7.518000000000108e-05}, {'diff': 7.558400000000354e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:19.304" endtime="20201030 15:52:19.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.324" level="INFO">${ACCURACY} = {'diff': [7.523699999999883e-05, 7.545800000000047e-05, 7.490300000000116e-05, 7.523599999999936e-05, 7.518000000000108e-05, 7.558400000000354e-05, 7.490200000000169e-05, 7.54169999999943e-05, 7.53189...</msg>
<status status="PASS" starttime="20201030 15:52:19.315" endtime="20201030 15:52:19.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.334" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.332" endtime="20201030 15:52:19.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.340" level="INFO">VALUE: [7.523699999999883e-05, 7.545800000000047e-05, 7.490300000000116e-05, 7.523599999999936e-05, 7.518000000000108e-05, 7.558400000000354e-05, 7.490200000000169e-05, 7.54169999999943e-05, 7.53189999999973e-05, 7.480599999999671e-05, 7.515299999999447e-05, 7.54440000000009e-05, 7.473599999999886e-05, 7.498599999999911e-05, 7.49310000000003e-05, 7.469499999999962e-05, 7.498599999999911e-05, 7.49310000000003e-05, 7.551399999999875e-05, 7.48189999999968e-05, 7.552700000000578e-05, 7.469400000000015e-05, 7.534699999999644e-05, 7.522199999999979e-05, 7.515300000000141e-05, 7.497299999999901e-05, 7.506999999999653e-05, 7.548699999999908e-05, 7.568000000000158e-05, 7.501399999999825e-05, 7.484700000000288e-05, 7.554099999999841e-05, 7.5069000000004e-05, 7.501399999999825e-05, 7.512500000000227e-05, 7.538899999999515e-05, 7.486100000000245e-05, 7.52639999999985e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.505499999999748e-05, 7.50839999999961e-05, 7.50839999999961e-05, 7.558300000000406e-05, 7.515200000000194e-05, 7.499999999999868e-05, 7.468000000000058e-05, 7.475000000000537e-05, 7.515299999999447e-05, 7.554199999999789e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.337" endtime="20201030 15:52:19.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.325" endtime="20201030 15:52:19.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.352" endtime="20201030 15:52:19.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.348" endtime="20201030 15:52:19.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.345" endtime="20201030 15:52:19.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.859" endtime="20201030 15:52:19.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.858" endtime="20201030 15:52:19.377"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.400" endtime="20201030 15:52:19.421"></status>
</kw>
<msg timestamp="20201030 15:52:19.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.396" endtime="20201030 15:52:19.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.424" endtime="20201030 15:52:19.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.431" endtime="20201030 15:52:19.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.389" endtime="20201030 15:52:19.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.383" endtime="20201030 15:52:19.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.454" endtime="20201030 15:52:19.786"></status>
</kw>
<msg timestamp="20201030 15:52:19.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.450" endtime="20201030 15:52:19.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.795" endtime="20201030 15:52:19.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.814" endtime="20201030 15:52:19.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.443" endtime="20201030 15:52:19.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.439" endtime="20201030 15:52:19.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.831" level="INFO">${RESULT} = [{'diff': 7.650000000000018e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.581999999999728e-05}, {'diff': 7.641700000000223e-05}, {'diff': 7.623600000000036e-05}, {'diff': 7.663900000000334e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:19.822" endtime="20201030 15:52:19.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.842" level="INFO">${ACCURACY} = {'diff': [7.650000000000018e-05, 7.647200000000104e-05, 7.581999999999728e-05, 7.641700000000223e-05, 7.623600000000036e-05, 7.663900000000334e-05, 7.590299999999522e-05, 7.624999999999993e-05, 7.6416...</msg>
<status status="PASS" starttime="20201030 15:52:19.833" endtime="20201030 15:52:19.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.853" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.851" endtime="20201030 15:52:19.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.858" level="INFO">VALUE: [7.650000000000018e-05, 7.647200000000104e-05, 7.581999999999728e-05, 7.641700000000223e-05, 7.623600000000036e-05, 7.663900000000334e-05, 7.590299999999522e-05, 7.624999999999993e-05, 7.64169999999953e-05, 7.636099999999701e-05, 7.620900000000069e-05, 7.583299999999737e-05, 7.582000000000422e-05, 7.588899999999565e-05, 7.569400000000115e-05, 7.606999999999753e-05, 7.658299999999812e-05, 7.6458999999994e-05, 7.582000000000422e-05, 7.574999999999943e-05, 7.58189999999978e-05, 7.573599999999986e-05, 7.624999999999993e-05, 7.591600000000226e-05, 7.63890000000031e-05, 7.636099999999701e-05, 7.594500000000087e-05, 7.658299999999812e-05, 7.619400000000165e-05, 7.615299999999547e-05, 7.580599999999771e-05, 7.583300000000431e-05, 7.633399999999735e-05, 7.651300000000028e-05, 7.595800000000097e-05, 7.595800000000097e-05, 7.613900000000284e-05, 7.59719999999936e-05, 7.615299999999547e-05, 7.590300000000216e-05, 7.650000000000018e-05, 7.65969999999977e-05, 7.579199999999814e-05, 7.582000000000422e-05, 7.601399999999925e-05, 7.624999999999993e-05, 7.601400000000619e-05, 7.636099999999701e-05, 7.643000000000233e-05, 7.587500000000302e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.855" endtime="20201030 15:52:19.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.844" endtime="20201030 15:52:19.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.871" endtime="20201030 15:52:19.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.866" endtime="20201030 15:52:19.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.864" endtime="20201030 15:52:19.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.379" endtime="20201030 15:52:19.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.378" endtime="20201030 15:52:19.896"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.919" endtime="20201030 15:52:19.940"></status>
</kw>
<msg timestamp="20201030 15:52:19.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.915" endtime="20201030 15:52:19.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.943" endtime="20201030 15:52:19.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.949" endtime="20201030 15:52:19.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.908" endtime="20201030 15:52:19.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.902" endtime="20201030 15:52:19.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.972" endtime="20201030 15:52:20.312"></status>
</kw>
<msg timestamp="20201030 15:52:20.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041299056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.969" endtime="20201030 15:52:20.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041299056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.321" endtime="20201030 15:52:20.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.340" endtime="20201030 15:52:20.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.962" endtime="20201030 15:52:20.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.957" endtime="20201030 15:52:20.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.357" level="INFO">${RESULT} = [{'diff': 7.736099999999801e-05}, {'diff': 7.71389999999969e-05}, {'diff': 7.680599999999871e-05}, {'diff': 7.74440000000029e-05}, {'diff': 7.687499999999708e-05}, {'diff': 7.756999999999903e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:20.348" endtime="20201030 15:52:20.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.366" level="INFO">${ACCURACY} = {'diff': [7.736099999999801e-05, 7.71389999999969e-05, 7.680599999999871e-05, 7.74440000000029e-05, 7.687499999999708e-05, 7.756999999999903e-05, 7.751400000000075e-05, 7.669499999999468e-05, 7.700000...</msg>
<status status="PASS" starttime="20201030 15:52:20.359" endtime="20201030 15:52:20.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.377" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.375" endtime="20201030 15:52:20.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.382" level="INFO">VALUE: [7.736099999999801e-05, 7.71389999999969e-05, 7.680599999999871e-05, 7.74440000000029e-05, 7.687499999999708e-05, 7.756999999999903e-05, 7.751400000000075e-05, 7.669499999999468e-05, 7.700000000000068e-05, 7.701400000000025e-05, 7.745800000000247e-05, 7.738899999999715e-05, 7.68189999999988e-05, 7.68890000000036e-05, 7.712499999999733e-05, 7.684700000000488e-05, 7.713900000000384e-05, 7.741700000000323e-05, 7.726300000000103e-05, 7.680599999999871e-05, 7.754199999999989e-05, 7.748699999999414e-05, 7.747300000000151e-05, 7.719399999999571e-05, 7.749999999999424e-05, 7.72640000000005e-05, 7.71389999999969e-05, 7.684699999999794e-05, 7.765300000000391e-05, 7.679200000000608e-05, 7.770900000000219e-05, 7.670900000000119e-05, 7.684699999999794e-05, 7.76110000000052e-05, 7.748700000000108e-05, 7.758400000000554e-05, 7.708300000000556e-05, 7.690199999999675e-05, 7.75690000000065e-05, 7.722199999999485e-05, 7.706999999999853e-05, 7.680599999999871e-05, 7.719400000000265e-05, 7.756999999999903e-05, 7.733399999999835e-05, 7.722200000000179e-05, 7.715300000000341e-05, 7.72640000000005e-05, 7.747300000000151e-05, 7.72640000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.379" endtime="20201030 15:52:20.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.368" endtime="20201030 15:52:20.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.394" endtime="20201030 15:52:20.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.390" endtime="20201030 15:52:20.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.388" endtime="20201030 15:52:20.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.898" endtime="20201030 15:52:20.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.897" endtime="20201030 15:52:20.419"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.442" endtime="20201030 15:52:20.465"></status>
</kw>
<msg timestamp="20201030 15:52:20.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.439" endtime="20201030 15:52:20.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.468" endtime="20201030 15:52:20.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.474" endtime="20201030 15:52:20.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.431" endtime="20201030 15:52:20.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.426" endtime="20201030 15:52:20.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.498" endtime="20201030 15:52:20.832"></status>
</kw>
<msg timestamp="20201030 15:52:20.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042263472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042341792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.494" endtime="20201030 15:52:20.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042263472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042341792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.841" endtime="20201030 15:52:20.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.859" endtime="20201030 15:52:20.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.487" endtime="20201030 15:52:20.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.483" endtime="20201030 15:52:20.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.877" level="INFO">${RESULT} = [{'diff': 7.831999999999978e-05}, {'diff': 7.85839999999996e-05}, {'diff': 7.866699999999754e-05}, {'diff': 7.8458999999996e-05}, {'diff': 7.83190000000003e-05}, {'diff': 7.836099999999901e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:52:20.868" endtime="20201030 15:52:20.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.886" level="INFO">${ACCURACY} = {'diff': [7.831999999999978e-05, 7.85839999999996e-05, 7.866699999999754e-05, 7.8458999999996e-05, 7.83190000000003e-05, 7.836099999999901e-05, 7.788799999999818e-05, 7.8151999999998e-05, 7.7680000000...</msg>
<status status="PASS" starttime="20201030 15:52:20.879" endtime="20201030 15:52:20.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.897" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.894" endtime="20201030 15:52:20.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.902" level="INFO">VALUE: [7.831999999999978e-05, 7.85839999999996e-05, 7.866699999999754e-05, 7.8458999999996e-05, 7.83190000000003e-05, 7.836099999999901e-05, 7.788799999999818e-05, 7.8151999999998e-05, 7.768000000000358e-05, 7.845799999999653e-05, 7.849999999999524e-05, 7.79169999999968e-05, 7.78189999999998e-05, 7.84169999999973e-05, 7.779200000000014e-05, 7.851400000000175e-05, 7.82640000000015e-05, 7.834699999999944e-05, 7.854200000000089e-05, 7.845799999999653e-05, 7.847200000000304e-05, 7.791599999999732e-05, 7.83890000000051e-05, 7.783399999999885e-05, 7.78890000000046e-05, 7.787500000000502e-05, 7.866699999999754e-05, 7.801400000000125e-05, 7.805599999999996e-05, 7.855600000000046e-05, 7.808299999999962e-05, 7.820799999999628e-05, 7.806900000000006e-05, 7.780500000000024e-05, 7.866599999999807e-05, 7.84169999999973e-05, 7.823600000000236e-05, 7.83890000000051e-05, 7.790300000000416e-05, 7.82640000000015e-05, 7.816699999999704e-05, 7.79310000000033e-05, 7.805500000000049e-05, 7.78189999999998e-05, 7.78189999999998e-05, 7.866599999999807e-05, 7.815300000000441e-05, 7.788899999999765e-05, 7.85969999999997e-05, 7.78890000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.899" endtime="20201030 15:52:20.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.888" endtime="20201030 15:52:20.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.922" endtime="20201030 15:52:20.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.916" endtime="20201030 15:52:20.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.914" endtime="20201030 15:52:20.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.421" endtime="20201030 15:52:20.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.420" endtime="20201030 15:52:20.947"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.969" endtime="20201030 15:52:20.991"></status>
</kw>
<msg timestamp="20201030 15:52:20.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.966" endtime="20201030 15:52:20.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.994" endtime="20201030 15:52:20.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.000" endtime="20201030 15:52:21.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.959" endtime="20201030 15:52:21.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.953" endtime="20201030 15:52:21.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.023" endtime="20201030 15:52:21.332"></status>
</kw>
<msg timestamp="20201030 15:52:21.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040512694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040591431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.020" endtime="20201030 15:52:21.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040512694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040591431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.336" endtime="20201030 15:52:21.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.344" endtime="20201030 15:52:21.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.013" endtime="20201030 15:52:21.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.008" endtime="20201030 15:52:21.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.352" level="INFO">${RESULT} = [{'diff': 7.87369999999954e-05}, {'diff': 7.892999999999789e-05}, {'diff': 7.870799999999678e-05}, {'diff': 7.966699999999854e-05}, {'diff': 7.922199999999685e-05}, {'diff': 7.961100000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:21.348" endtime="20201030 15:52:21.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.357" level="INFO">${ACCURACY} = {'diff': [7.87369999999954e-05, 7.892999999999789e-05, 7.870799999999678e-05, 7.966699999999854e-05, 7.922199999999685e-05, 7.961100000000026e-05, 7.905600000000096e-05, 7.956900000000156e-05, 7.95560...</msg>
<status status="PASS" starttime="20201030 15:52:21.353" endtime="20201030 15:52:21.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.363" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.362" endtime="20201030 15:52:21.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.365" level="INFO">VALUE: [7.87369999999954e-05, 7.892999999999789e-05, 7.870799999999678e-05, 7.966699999999854e-05, 7.922199999999685e-05, 7.961100000000026e-05, 7.905600000000096e-05, 7.956900000000156e-05, 7.955600000000146e-05, 7.875000000000243e-05, 7.870899999999625e-05, 7.932000000000078e-05, 7.879100000000167e-05, 7.901400000000225e-05, 7.926300000000303e-05, 7.880500000000124e-05, 7.915300000000541e-05, 7.919399999999771e-05, 7.925000000000293e-05, 7.949999999999624e-05, 7.880600000000071e-05, 7.906900000000106e-05, 7.943000000000533e-05, 7.948599999999667e-05, 7.95840000000006e-05, 7.888899999999865e-05, 7.89169999999978e-05, 7.912499999999933e-05, 7.890199999999875e-05, 7.872199999999635e-05, 7.906900000000106e-05, 7.938899999999915e-05, 7.8764000000002e-05, 7.929200000000164e-05, 7.899999999999574e-05, 7.890300000000516e-05, 7.908300000000063e-05, 7.890300000000516e-05, 7.944500000000437e-05, 7.959800000000017e-05, 7.950000000000318e-05, 7.951299999999634e-05, 7.92640000000025e-05, 7.92640000000025e-05, 7.915299999999847e-05, 7.870799999999678e-05, 7.950000000000318e-05, 7.916699999999804e-05, 7.924999999999599e-05, 7.92640000000025e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.364" endtime="20201030 15:52:21.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.358" endtime="20201030 15:52:21.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.371" endtime="20201030 15:52:21.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.369" endtime="20201030 15:52:21.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.368" endtime="20201030 15:52:21.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.949" endtime="20201030 15:52:21.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.948" endtime="20201030 15:52:21.392"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.403" endtime="20201030 15:52:21.421"></status>
</kw>
<msg timestamp="20201030 15:52:21.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.401" endtime="20201030 15:52:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.423" endtime="20201030 15:52:21.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.426" endtime="20201030 15:52:21.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.398" endtime="20201030 15:52:21.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.395" endtime="20201030 15:52:21.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.437" endtime="20201030 15:52:21.747"></status>
</kw>
<msg timestamp="20201030 15:52:21.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02449425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:21.435" endtime="20201030 15:52:21.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02449425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024574583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:21.756" endtime="20201030 15:52:21.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.775" endtime="20201030 15:52:21.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.432" endtime="20201030 15:52:21.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.430" endtime="20201030 15:52:21.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.792" level="INFO">${RESULT} = [{'diff': 8.033300000000188e-05}, {'diff': 7.990199999999975e-05}, {'diff': 8.020799999999828e-05}, {'diff': 8.006900000000206e-05}, {'diff': 7.990299999999922e-05}, {'diff': 8.025000000000046e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:21.783" endtime="20201030 15:52:21.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.803" level="INFO">${ACCURACY} = {'diff': [8.033300000000188e-05, 7.990199999999975e-05, 8.020799999999828e-05, 8.006900000000206e-05, 7.990299999999922e-05, 8.025000000000046e-05, 7.983300000000138e-05, 8.047300000000104e-05, 8.0250...</msg>
<status status="PASS" starttime="20201030 15:52:21.794" endtime="20201030 15:52:21.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.814" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.811" endtime="20201030 15:52:21.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.819" level="INFO">VALUE: [8.033300000000188e-05, 7.990199999999975e-05, 8.020799999999828e-05, 8.006900000000206e-05, 7.990299999999922e-05, 8.025000000000046e-05, 7.983300000000138e-05, 8.047300000000104e-05, 8.025000000000046e-05, 7.973699999999986e-05, 8.052799999999985e-05, 8.041599999999982e-05, 8.072199999999835e-05, 8.047300000000104e-05, 8.013800000000043e-05, 8.02779999999996e-05, 7.980499999999877e-05, 8.019399999999871e-05, 7.99030000000027e-05, 8.058299999999866e-05, 8.000000000000021e-05, 7.96389999999994e-05, 7.973600000000039e-05, 8.005599999999849e-05, 8.068100000000258e-05, 8.048700000000061e-05, 7.99169999999988e-05, 7.970800000000125e-05, 8.066699999999954e-05, 8.042999999999939e-05, 7.973600000000039e-05, 8.026400000000003e-05, 8.006999999999806e-05, 7.988899999999965e-05, 8.008300000000163e-05, 7.980599999999824e-05, 8.03329999999984e-05, 8.0152e-05, 8.056899999999909e-05, 7.973600000000039e-05, 8.025000000000046e-05, 7.970800000000125e-05, 8.019400000000218e-05, 8.038900000000015e-05, 8.044400000000243e-05, 7.968100000000158e-05, 8.004100000000292e-05, 8.055600000000246e-05, 8.029199999999917e-05, 7.98190000000018e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.816" endtime="20201030 15:52:21.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.805" endtime="20201030 15:52:21.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.831" endtime="20201030 15:52:21.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.827" endtime="20201030 15:52:21.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.824" endtime="20201030 15:52:21.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.393" endtime="20201030 15:52:21.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.392" endtime="20201030 15:52:21.856"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.878" endtime="20201030 15:52:21.900"></status>
</kw>
<msg timestamp="20201030 15:52:21.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.875" endtime="20201030 15:52:21.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.903" endtime="20201030 15:52:21.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.910" endtime="20201030 15:52:21.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.868" endtime="20201030 15:52:21.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.862" endtime="20201030 15:52:21.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.933" endtime="20201030 15:52:22.271"></status>
</kw>
<msg timestamp="20201030 15:52:22.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040590847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.929" endtime="20201030 15:52:22.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040509319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040590847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.280" endtime="20201030 15:52:22.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.299" endtime="20201030 15:52:22.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.922" endtime="20201030 15:52:22.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.918" endtime="20201030 15:52:22.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.316" level="INFO">${RESULT} = [{'diff': 8.152799999999738e-05}, {'diff': 8.105500000000349e-05}, {'diff': 8.080500000000324e-05}, {'diff': 8.169400000000021e-05}, {'diff': 8.069399999999921e-05}, {'diff': 8.080500000000324e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:22.307" endtime="20201030 15:52:22.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.325" level="INFO">${ACCURACY} = {'diff': [8.152799999999738e-05, 8.105500000000349e-05, 8.080500000000324e-05, 8.169400000000021e-05, 8.069399999999921e-05, 8.080500000000324e-05, 8.14719999999991e-05, 8.10970000000022e-05, 8.163900...</msg>
<status status="PASS" starttime="20201030 15:52:22.318" endtime="20201030 15:52:22.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.336" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.334" endtime="20201030 15:52:22.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.341" level="INFO">VALUE: [8.152799999999738e-05, 8.105500000000349e-05, 8.080500000000324e-05, 8.169400000000021e-05, 8.069399999999921e-05, 8.080500000000324e-05, 8.14719999999991e-05, 8.10970000000022e-05, 8.16390000000014e-05, 8.124999999999799e-05, 8.111100000000177e-05, 8.138900000000115e-05, 8.077699999999716e-05, 8.1152000000001e-05, 8.169400000000021e-05, 8.105499999999655e-05, 8.155499999999705e-05, 8.0764000000004e-05, 8.094399999999946e-05, 8.09169999999998e-05, 8.140300000000072e-05, 8.122299999999832e-05, 8.137499999999465e-05, 8.095900000000544e-05, 8.126399999999756e-05, 8.106899999999612e-05, 8.115300000000047e-05, 8.133300000000288e-05, 8.101399999999731e-05, 8.138899999999422e-05, 8.088899999999372e-05, 8.081899999999587e-05, 8.155599999999652e-05, 8.105599999999602e-05, 8.099999999999774e-05, 8.069499999999868e-05, 8.147299999999857e-05, 8.138800000000168e-05, 8.104200000000339e-05, 8.15970000000027e-05, 8.16520000000015e-05, 8.137500000000158e-05, 8.101399999999731e-05, 8.140299999999379e-05, 8.144399999999996e-05, 8.140300000000072e-05, 8.106999999999559e-05, 8.080600000000271e-05, 8.133400000000235e-05, 8.118099999999961e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.338" endtime="20201030 15:52:22.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.327" endtime="20201030 15:52:22.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.354" endtime="20201030 15:52:22.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.349" endtime="20201030 15:52:22.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.347" endtime="20201030 15:52:22.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.858" endtime="20201030 15:52:22.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.857" endtime="20201030 15:52:22.379"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.401" endtime="20201030 15:52:22.424"></status>
</kw>
<msg timestamp="20201030 15:52:22.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.398" endtime="20201030 15:52:22.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.427" endtime="20201030 15:52:22.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.434" endtime="20201030 15:52:22.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.391" endtime="20201030 15:52:22.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.385" endtime="20201030 15:52:22.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.457" endtime="20201030 15:52:22.793"></status>
</kw>
<msg timestamp="20201030 15:52:22.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042100556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.453" endtime="20201030 15:52:22.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042018042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042100556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.802" endtime="20201030 15:52:22.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.821" endtime="20201030 15:52:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.446" endtime="20201030 15:52:22.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.442" endtime="20201030 15:52:22.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.838" level="INFO">${RESULT} = [{'diff': 8.251399999999881e-05}, {'diff': 8.24720000000001e-05}, {'diff': 8.206900000000406e-05}, {'diff': 8.201399999999831e-05}, {'diff': 8.190300000000122e-05}, {'diff': 8.19170000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:22.829" endtime="20201030 15:52:22.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.847" level="INFO">${ACCURACY} = {'diff': [8.251399999999881e-05, 8.24720000000001e-05, 8.206900000000406e-05, 8.201399999999831e-05, 8.190300000000122e-05, 8.19170000000008e-05, 8.227799999999813e-05, 8.261099999999633e-05, 8.2459e-...</msg>
<status status="PASS" starttime="20201030 15:52:22.840" endtime="20201030 15:52:22.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.858" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.856" endtime="20201030 15:52:22.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.863" level="INFO">VALUE: [8.251399999999881e-05, 8.24720000000001e-05, 8.206900000000406e-05, 8.201399999999831e-05, 8.190300000000122e-05, 8.19170000000008e-05, 8.227799999999813e-05, 8.261099999999633e-05, 8.2459e-05, 8.218100000000061e-05, 8.215300000000147e-05, 8.25840000000036e-05, 8.244399999999402e-05, 8.218000000000114e-05, 8.206899999999712e-05, 8.26799999999947e-05, 8.193000000000089e-05, 8.173599999999892e-05, 8.233400000000335e-05, 8.245799999999359e-05, 8.194499999999993e-05, 8.241699999999436e-05, 8.172199999999935e-05, 8.173599999999892e-05, 8.19719999999996e-05, 8.170799999999978e-05, 8.195800000000003e-05, 8.220800000000028e-05, 8.248599999999967e-05, 8.26390000000024e-05, 8.252800000000532e-05, 8.172199999999935e-05, 8.24720000000001e-05, 8.184800000000242e-05, 8.205599999999702e-05, 8.231899999999737e-05, 8.181899999999687e-05, 8.256899999999762e-05, 8.252699999999891e-05, 8.216600000000157e-05, 8.191600000000132e-05, 8.215300000000147e-05, 8.194499999999993e-05, 8.249999999999924e-05, 8.183400000000285e-05, 8.187499999999515e-05, 8.252699999999891e-05, 8.243100000000086e-05, 8.227699999999866e-05, 8.237499999999565e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.860" endtime="20201030 15:52:22.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.849" endtime="20201030 15:52:22.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.877" endtime="20201030 15:52:22.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.871" endtime="20201030 15:52:22.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.869" endtime="20201030 15:52:22.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.381" endtime="20201030 15:52:22.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.379" endtime="20201030 15:52:22.902"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.924" endtime="20201030 15:52:22.947"></status>
</kw>
<msg timestamp="20201030 15:52:22.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.921" endtime="20201030 15:52:22.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.950" endtime="20201030 15:52:22.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.956" endtime="20201030 15:52:22.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.914" endtime="20201030 15:52:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.908" endtime="20201030 15:52:22.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.980" endtime="20201030 15:52:23.314"></status>
</kw>
<msg timestamp="20201030 15:52:23.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040650194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.976" endtime="20201030 15:52:23.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040650194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040732944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.323" endtime="20201030 15:52:23.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.342" endtime="20201030 15:52:23.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.969" endtime="20201030 15:52:23.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.965" endtime="20201030 15:52:23.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.359" level="INFO">${RESULT} = [{'diff': 8.274999999999949e-05}, {'diff': 8.315199999999606e-05}, {'diff': 8.348600000000067e-05}, {'diff': 8.338900000000316e-05}, {'diff': 8.29720000000006e-05}, {'diff': 8.280599999999777e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:23.350" endtime="20201030 15:52:23.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.369" level="INFO">${ACCURACY} = {'diff': [8.274999999999949e-05, 8.315199999999606e-05, 8.348600000000067e-05, 8.338900000000316e-05, 8.29720000000006e-05, 8.280599999999777e-05, 8.341699999999536e-05, 8.280599999999777e-05, 8.29720...</msg>
<status status="PASS" starttime="20201030 15:52:23.361" endtime="20201030 15:52:23.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.380" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.378" endtime="20201030 15:52:23.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.386" level="INFO">VALUE: [8.274999999999949e-05, 8.315199999999606e-05, 8.348600000000067e-05, 8.338900000000316e-05, 8.29720000000006e-05, 8.280599999999777e-05, 8.341699999999536e-05, 8.280599999999777e-05, 8.29720000000006e-05, 8.341699999999536e-05, 8.280600000000471e-05, 8.351399999999981e-05, 8.291600000000232e-05, 8.306899999999812e-05, 8.33190000000053e-05, 8.27919999999982e-05, 8.282000000000428e-05, 8.284799999999648e-05, 8.357000000000503e-05, 8.318099999999468e-05, 8.294500000000093e-05, 8.286100000000352e-05, 8.340300000000272e-05, 8.337500000000359e-05, 8.290200000000275e-05, 8.31390000000029e-05, 8.279099999999873e-05, 8.352800000000632e-05, 8.316700000000204e-05, 8.270799999999384e-05, 8.272200000000035e-05, 8.293099999999443e-05, 8.347199999999416e-05, 8.270900000000025e-05, 8.318100000000161e-05, 8.34720000000011e-05, 8.293000000000189e-05, 8.281899999999787e-05, 8.350000000000024e-05, 8.279099999999873e-05, 8.368100000000211e-05, 8.323600000000042e-05, 8.324999999999999e-05, 8.281999999999734e-05, 8.28190000000048e-05, 8.324999999999999e-05, 8.313899999999597e-05, 8.327699999999966e-05, 8.28190000000048e-05, 8.333299999999794e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.382" endtime="20201030 15:52:23.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.371" endtime="20201030 15:52:23.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.398" endtime="20201030 15:52:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.394" endtime="20201030 15:52:23.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.391" endtime="20201030 15:52:23.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.904" endtime="20201030 15:52:23.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.903" endtime="20201030 15:52:23.423"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.445" endtime="20201030 15:52:23.467"></status>
</kw>
<msg timestamp="20201030 15:52:23.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.442" endtime="20201030 15:52:23.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.470" endtime="20201030 15:52:23.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.477" endtime="20201030 15:52:23.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.435" endtime="20201030 15:52:23.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.429" endtime="20201030 15:52:23.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.500" endtime="20201030 15:52:23.836"></status>
</kw>
<msg timestamp="20201030 15:52:23.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.497" endtime="20201030 15:52:23.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040496153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040580528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.845" endtime="20201030 15:52:23.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.864" endtime="20201030 15:52:23.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.489" endtime="20201030 15:52:23.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.485" endtime="20201030 15:52:23.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.881" level="INFO">${RESULT} = [{'diff': 8.437499999999765e-05}, {'diff': 8.381999999999834e-05}, {'diff': 8.442999999999645e-05}, {'diff': 8.381999999999834e-05}, {'diff': 8.437499999999765e-05}, {'diff': 8.400000000000074e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:23.872" endtime="20201030 15:52:23.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.892" level="INFO">${ACCURACY} = {'diff': [8.437499999999765e-05, 8.381999999999834e-05, 8.442999999999645e-05, 8.381999999999834e-05, 8.437499999999765e-05, 8.400000000000074e-05, 8.377799999999963e-05, 8.37919999999992e-05, 8.42780...</msg>
<status status="PASS" starttime="20201030 15:52:23.883" endtime="20201030 15:52:23.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.903" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.900" endtime="20201030 15:52:23.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.908" level="INFO">VALUE: [8.437499999999765e-05, 8.381999999999834e-05, 8.442999999999645e-05, 8.381999999999834e-05, 8.437499999999765e-05, 8.400000000000074e-05, 8.377799999999963e-05, 8.37919999999992e-05, 8.427800000000013e-05, 8.448599999999473e-05, 8.438900000000416e-05, 8.415299999999654e-05, 8.382000000000528e-05, 8.427800000000013e-05, 8.46119999999978e-05, 8.44720000000021e-05, 8.433299999999894e-05, 8.420799999999534e-05, 8.416599999999663e-05, 8.408300000000563e-05, 8.468000000000364e-05, 8.418100000000261e-05, 8.370800000000178e-05, 8.451400000000081e-05, 8.448600000000167e-05, 8.391699999999586e-05, 8.380599999999877e-05, 8.454100000000048e-05, 8.456999999999909e-05, 8.415300000000348e-05, 8.468000000000364e-05, 8.406899999999912e-05, 8.466700000000354e-05, 8.425000000000099e-05, 8.415300000000348e-05, 8.370900000000125e-05, 8.433399999999841e-05, 8.390299999999629e-05, 8.391699999999586e-05, 8.39170000000028e-05, 8.438900000000416e-05, 8.469400000000321e-05, 8.459699999999876e-05, 8.422200000000185e-05, 8.391599999999638e-05, 8.455599999999952e-05, 8.459699999999876e-05, 8.415299999999654e-05, 8.431999999999884e-05, 8.381999999999834e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.905" endtime="20201030 15:52:23.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.894" endtime="20201030 15:52:23.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.920" endtime="20201030 15:52:23.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.916" endtime="20201030 15:52:23.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.914" endtime="20201030 15:52:23.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.425" endtime="20201030 15:52:23.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.424" endtime="20201030 15:52:23.945"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.968" endtime="20201030 15:52:23.990"></status>
</kw>
<msg timestamp="20201030 15:52:23.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.964" endtime="20201030 15:52:23.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.993" endtime="20201030 15:52:23.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.999" endtime="20201030 15:52:24.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.957" endtime="20201030 15:52:24.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.952" endtime="20201030 15:52:24.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.022" endtime="20201030 15:52:24.358"></status>
</kw>
<msg timestamp="20201030 15:52:24.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040608625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040693486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.019" endtime="20201030 15:52:24.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040608625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040693486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.367" endtime="20201030 15:52:24.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.386" endtime="20201030 15:52:24.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.012" endtime="20201030 15:52:24.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.007" endtime="20201030 15:52:24.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.403" level="INFO">${RESULT} = [{'diff': 8.486099999999858e-05}, {'diff': 8.488900000000466e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.536100000000602e-05}, {'diff': 8.490299999999729e-05}, {'diff': 8.505600000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:24.394" endtime="20201030 15:52:24.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.412" level="INFO">${ACCURACY} = {'diff': [8.486099999999858e-05, 8.488900000000466e-05, 8.559699999999976e-05, 8.536100000000602e-05, 8.490299999999729e-05, 8.505600000000002e-05, 8.500000000000174e-05, 8.559699999999976e-05, 8.5583...</msg>
<status status="PASS" starttime="20201030 15:52:24.405" endtime="20201030 15:52:24.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.423" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.421" endtime="20201030 15:52:24.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.428" level="INFO">VALUE: [8.486099999999858e-05, 8.488900000000466e-05, 8.559699999999976e-05, 8.536100000000602e-05, 8.490299999999729e-05, 8.505600000000002e-05, 8.500000000000174e-05, 8.559699999999976e-05, 8.558300000000019e-05, 8.51249999999984e-05, 8.540199999999831e-05, 8.540299999999779e-05, 8.491699999999686e-05, 8.491699999999686e-05, 8.491699999999686e-05, 8.559699999999976e-05, 8.490299999999729e-05, 8.481999999999934e-05, 8.552800000000138e-05, 8.48050000000003e-05, 8.540199999999831e-05, 8.537499999999865e-05, 8.520800000000328e-05, 8.54720000000031e-05, 8.558300000000019e-05, 8.515300000000448e-05, 8.500000000000174e-05, 8.511099999999883e-05, 8.5459000000003e-05, 8.552800000000138e-05, 8.523599999999548e-05, 8.547300000000257e-05, 8.548600000000267e-05, 8.531999999999984e-05, 8.513899999999797e-05, 8.544399999999702e-05, 8.481899999999987e-05, 8.468100000000311e-05, 8.506999999999959e-05, 8.5459000000003e-05, 8.520900000000275e-05, 8.494500000000293e-05, 8.480599999999977e-05, 8.508399999999916e-05, 8.515299999999754e-05, 8.558300000000019e-05, 8.54720000000031e-05, 8.561099999999933e-05, 8.501400000000131e-05, 8.472299999999489e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.425" endtime="20201030 15:52:24.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.414" endtime="20201030 15:52:24.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.441" endtime="20201030 15:52:24.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.437" endtime="20201030 15:52:24.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.434" endtime="20201030 15:52:24.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.947" endtime="20201030 15:52:24.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.946" endtime="20201030 15:52:24.466"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.488" endtime="20201030 15:52:24.512"></status>
</kw>
<msg timestamp="20201030 15:52:24.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.485" endtime="20201030 15:52:24.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.515" endtime="20201030 15:52:24.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.522" endtime="20201030 15:52:24.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.478" endtime="20201030 15:52:24.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.472" endtime="20201030 15:52:24.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.544" endtime="20201030 15:52:24.879"></status>
</kw>
<msg timestamp="20201030 15:52:24.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04232475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042411431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:24.541" endtime="20201030 15:52:24.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04232475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042411431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:24.888" endtime="20201030 15:52:24.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.907" endtime="20201030 15:52:24.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.534" endtime="20201030 15:52:24.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.530" endtime="20201030 15:52:24.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.924" level="INFO">${RESULT} = [{'diff': 8.668099999999818e-05}, {'diff': 8.6459000000004e-05}, {'diff': 8.665199999999956e-05}, {'diff': 8.58050000000013e-05}, {'diff': 8.657000000000109e-05}, {'diff': 8.641599999999888e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:24.915" endtime="20201030 15:52:24.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.933" level="INFO">${ACCURACY} = {'diff': [8.668099999999818e-05, 8.6459000000004e-05, 8.665199999999956e-05, 8.58050000000013e-05, 8.657000000000109e-05, 8.641599999999888e-05, 8.569399999999727e-05, 8.633300000000094e-05, 8.6179999...</msg>
<status status="PASS" starttime="20201030 15:52:24.926" endtime="20201030 15:52:24.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.944" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.942" endtime="20201030 15:52:24.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.949" level="INFO">VALUE: [8.668099999999818e-05, 8.6459000000004e-05, 8.665199999999956e-05, 8.58050000000013e-05, 8.657000000000109e-05, 8.641599999999888e-05, 8.569399999999727e-05, 8.633300000000094e-05, 8.61799999999982e-05, 8.615299999999854e-05, 8.569500000000368e-05, 8.5847e-05, 8.601400000000231e-05, 8.591699999999786e-05, 8.626400000000256e-05, 8.57920000000012e-05, 8.638899999999922e-05, 8.590199999999881e-05, 8.663899999999947e-05, 8.631900000000137e-05, 8.655499999999511e-05, 8.654200000000195e-05, 8.648599999999673e-05, 8.659700000000076e-05, 8.632000000000084e-05, 8.602800000000188e-05, 8.625000000000299e-05, 8.601400000000231e-05, 8.588900000000566e-05, 8.643100000000487e-05, 8.656900000000162e-05, 8.633300000000094e-05, 8.642999999999845e-05, 8.618000000000514e-05, 8.640300000000573e-05, 8.66669999999986e-05, 8.638900000000616e-05, 8.590300000000523e-05, 8.656999999999415e-05, 8.657000000000109e-05, 8.641600000000582e-05, 8.624999999999605e-05, 8.572200000000335e-05, 8.657000000000109e-05, 8.64999999999963e-05, 8.590299999999829e-05, 8.638899999999922e-05, 8.583399999999991e-05, 8.590299999999829e-05, 8.663899999999947e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.946" endtime="20201030 15:52:24.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.935" endtime="20201030 15:52:24.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.968" endtime="20201030 15:52:24.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.958" endtime="20201030 15:52:24.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.955" endtime="20201030 15:52:24.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.468" endtime="20201030 15:52:24.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.467" endtime="20201030 15:52:24.994"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.017" endtime="20201030 15:52:25.038"></status>
</kw>
<msg timestamp="20201030 15:52:25.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.013" endtime="20201030 15:52:25.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.042" endtime="20201030 15:52:25.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.048" endtime="20201030 15:52:25.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.006" endtime="20201030 15:52:25.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.000" endtime="20201030 15:52:25.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.071" endtime="20201030 15:52:25.404"></status>
</kw>
<msg timestamp="20201030 15:52:25.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04225225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042339583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:25.068" endtime="20201030 15:52:25.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04225225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042339583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:25.414" endtime="20201030 15:52:25.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.433" endtime="20201030 15:52:25.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.060" endtime="20201030 15:52:25.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.056" endtime="20201030 15:52:25.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.450" level="INFO">${RESULT} = [{'diff': 8.733300000000194e-05}, {'diff': 8.743099999999893e-05}, {'diff': 8.766600000000013e-05}, {'diff': 8.755499999999611e-05}, {'diff': 8.706899999999518e-05}, {'diff': 8.686099999999364e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:25.441" endtime="20201030 15:52:25.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.460" level="INFO">${ACCURACY} = {'diff': [8.733300000000194e-05, 8.743099999999893e-05, 8.766600000000013e-05, 8.755499999999611e-05, 8.706899999999518e-05, 8.686099999999364e-05, 8.769399999999927e-05, 8.706999999999465e-05, 8.7333...</msg>
<status status="PASS" starttime="20201030 15:52:25.452" endtime="20201030 15:52:25.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.471" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.469" endtime="20201030 15:52:25.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.476" level="INFO">VALUE: [8.733300000000194e-05, 8.743099999999893e-05, 8.766600000000013e-05, 8.755499999999611e-05, 8.706899999999518e-05, 8.686099999999364e-05, 8.769399999999927e-05, 8.706999999999465e-05, 8.733300000000194e-05, 8.700000000000374e-05, 8.715299999999954e-05, 8.683300000000144e-05, 8.741699999999936e-05, 8.692999999999895e-05, 8.726399999999662e-05, 8.726399999999662e-05, 8.71669999999991e-05, 8.723600000000442e-05, 8.740299999999979e-05, 8.761100000000133e-05, 8.724999999999705e-05, 8.74999999999973e-05, 8.690299999999929e-05, 8.738800000000074e-05, 8.68050000000023e-05, 8.73470000000015e-05, 8.681900000000187e-05, 8.723600000000442e-05, 8.715299999999954e-05, 8.673600000000392e-05, 8.719399999999877e-05, 8.676399999999612e-05, 8.719500000000519e-05, 8.693099999999843e-05, 8.726400000000356e-05, 8.686099999999364e-05, 8.758399999999472e-05, 8.687500000000015e-05, 8.688899999999972e-05, 8.675000000000349e-05, 8.695799999999809e-05, 8.733400000000141e-05, 8.69999999999968e-05, 8.691699999999886e-05, 8.724999999999705e-05, 8.683400000000091e-05, 8.741699999999936e-05, 8.713899999999997e-05, 8.669499999999775e-05, 8.672199999999741e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.473" endtime="20201030 15:52:25.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.462" endtime="20201030 15:52:25.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.489" endtime="20201030 15:52:25.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.484" endtime="20201030 15:52:25.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.482" endtime="20201030 15:52:25.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.996" endtime="20201030 15:52:25.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.994" endtime="20201030 15:52:25.514"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.536" endtime="20201030 15:52:25.557"></status>
</kw>
<msg timestamp="20201030 15:52:25.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.533" endtime="20201030 15:52:25.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.561" endtime="20201030 15:52:25.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.567" endtime="20201030 15:52:25.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.526" endtime="20201030 15:52:25.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.520" endtime="20201030 15:52:25.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.590" endtime="20201030 15:52:25.909"></status>
</kw>
<msg timestamp="20201030 15:52:25.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040451528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.587" endtime="20201030 15:52:25.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040451528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.913" endtime="20201030 15:52:25.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.922" endtime="20201030 15:52:25.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.580" endtime="20201030 15:52:25.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.575" endtime="20201030 15:52:25.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.930" level="INFO">${RESULT} = [{'diff': 8.852799999999744e-05}, {'diff': 8.79999999999978e-05}, {'diff': 8.815300000000054e-05}, {'diff': 8.788900000000072e-05}, {'diff': 8.840300000000079e-05}, {'diff': 8.790300000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:25.926" endtime="20201030 15:52:25.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.939" level="INFO">${ACCURACY} = {'diff': [8.852799999999744e-05, 8.79999999999978e-05, 8.815300000000054e-05, 8.788900000000072e-05, 8.840300000000079e-05, 8.790300000000029e-05, 8.840300000000079e-05, 8.865300000000104e-05, 8.77079...</msg>
<status status="PASS" starttime="20201030 15:52:25.931" endtime="20201030 15:52:25.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.950" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.948" endtime="20201030 15:52:25.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.956" level="INFO">VALUE: [8.852799999999744e-05, 8.79999999999978e-05, 8.815300000000054e-05, 8.788900000000072e-05, 8.840300000000079e-05, 8.790300000000029e-05, 8.840300000000079e-05, 8.865300000000104e-05, 8.770799999999884e-05, 8.850000000000524e-05, 8.851300000000534e-05, 8.809799999999479e-05, 8.784700000000201e-05, 8.870799999999984e-05, 8.813900000000097e-05, 8.827799999999719e-05, 8.848599999999873e-05, 8.794399999999952e-05, 8.805599999999608e-05, 8.847199999999916e-05, 8.836099999999514e-05, 8.813900000000097e-05, 8.822300000000532e-05, 8.77920000000032e-05, 8.786200000000105e-05, 8.869400000000027e-05, 8.861100000000233e-05, 8.818099999999968e-05, 8.855500000000405e-05, 8.819399999999977e-05, 8.81670000000001e-05, 8.779199999999626e-05, 8.773599999999798e-05, 8.838900000000122e-05, 8.79999999999978e-05, 8.769499999999875e-05, 8.790200000000081e-05, 8.833300000000294e-05, 8.856899999999668e-05, 8.833300000000294e-05, 8.844400000000002e-05, 8.834800000000198e-05, 8.868100000000018e-05, 8.78199999999954e-05, 8.808399999999522e-05, 8.832000000000284e-05, 8.801400000000431e-05, 8.81800000000002e-05, 8.806899999999618e-05, 8.815300000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.952" endtime="20201030 15:52:25.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.941" endtime="20201030 15:52:25.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.975" endtime="20201030 15:52:25.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.970" endtime="20201030 15:52:25.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.968" endtime="20201030 15:52:26.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.516" endtime="20201030 15:52:26.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.514" endtime="20201030 15:52:26.001"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.024" endtime="20201030 15:52:26.047"></status>
</kw>
<msg timestamp="20201030 15:52:26.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.021" endtime="20201030 15:52:26.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.051" endtime="20201030 15:52:26.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.057" endtime="20201030 15:52:26.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.013" endtime="20201030 15:52:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.008" endtime="20201030 15:52:26.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.080" endtime="20201030 15:52:26.416"></status>
</kw>
<msg timestamp="20201030 15:52:26.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041797972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.077" endtime="20201030 15:52:26.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041797972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.425" endtime="20201030 15:52:26.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.444" endtime="20201030 15:52:26.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.069" endtime="20201030 15:52:26.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.065" endtime="20201030 15:52:26.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.461" level="INFO">${RESULT} = [{'diff': 8.906999999999665e-05}, {'diff': 8.940200000000231e-05}, {'diff': 8.91250000000024e-05}, {'diff': 8.934700000000351e-05}, {'diff': 8.890300000000129e-05}, {'diff': 8.91250000000024e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:26.452" endtime="20201030 15:52:26.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.470" level="INFO">${ACCURACY} = {'diff': [8.906999999999665e-05, 8.940200000000231e-05, 8.91250000000024e-05, 8.934700000000351e-05, 8.890300000000129e-05, 8.91250000000024e-05, 8.945800000000059e-05, 8.905599999999708e-05, 8.941700...</msg>
<status status="PASS" starttime="20201030 15:52:26.463" endtime="20201030 15:52:26.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.481" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.479" endtime="20201030 15:52:26.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.487" level="INFO">VALUE: [8.906999999999665e-05, 8.940200000000231e-05, 8.91250000000024e-05, 8.934700000000351e-05, 8.890300000000129e-05, 8.91250000000024e-05, 8.945800000000059e-05, 8.905599999999708e-05, 8.941700000000136e-05, 8.940299999999485e-05, 8.94450000000005e-05, 8.9332999999997e-05, 8.886200000000205e-05, 8.893000000000095e-05, 8.941599999999494e-05, 8.959699999999682e-05, 8.923599999999948e-05, 8.906999999999665e-05, 8.958299999999725e-05, 8.884699999999607e-05, 8.880600000000377e-05, 8.913900000000197e-05, 8.913899999999503e-05, 8.945900000000007e-05, 8.941700000000136e-05, 8.952800000000538e-05, 8.92920000000047e-05, 8.926399999999862e-05, 8.924999999999905e-05, 8.929199999999776e-05, 8.872199999999941e-05, 8.909699999999632e-05, 8.932000000000384e-05, 8.934800000000298e-05, 8.945900000000007e-05, 8.875000000000549e-05, 8.89999999999988e-05, 8.879099999999779e-05, 8.941600000000188e-05, 8.919500000000025e-05, 8.938900000000222e-05, 8.888900000000172e-05, 8.958300000000419e-05, 8.956999999999715e-05, 8.954199999999801e-05, 8.905499999999761e-05, 8.94450000000005e-05, 8.966600000000213e-05, 8.945800000000059e-05, 8.941600000000188e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.483" endtime="20201030 15:52:26.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.472" endtime="20201030 15:52:26.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.499" endtime="20201030 15:52:26.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.495" endtime="20201030 15:52:26.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.492" endtime="20201030 15:52:26.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.003" endtime="20201030 15:52:26.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.002" endtime="20201030 15:52:26.524"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.547" endtime="20201030 15:52:26.571"></status>
</kw>
<msg timestamp="20201030 15:52:26.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.543" endtime="20201030 15:52:26.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.574" endtime="20201030 15:52:26.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.580" endtime="20201030 15:52:26.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.536" endtime="20201030 15:52:26.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.530" endtime="20201030 15:52:26.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.603" endtime="20201030 15:52:26.937"></status>
</kw>
<msg timestamp="20201030 15:52:26.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042432958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042522722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.600" endtime="20201030 15:52:26.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042432958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042522722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.947" endtime="20201030 15:52:26.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.965" endtime="20201030 15:52:26.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.593" endtime="20201030 15:52:26.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.588" endtime="20201030 15:52:26.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.982" level="INFO">${RESULT} = [{'diff': 8.976399999999912e-05}, {'diff': 8.980499999999836e-05}, {'diff': 9.006899999999818e-05}, {'diff': 9.0332999999998e-05}, {'diff': 8.987500000000315e-05}, {'diff': 8.993100000000143e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:26.974" endtime="20201030 15:52:26.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.992" level="INFO">${ACCURACY} = {'diff': [8.976399999999912e-05, 8.980499999999836e-05, 9.006899999999818e-05, 9.0332999999998e-05, 8.987500000000315e-05, 8.993100000000143e-05, 8.993100000000143e-05, 9.006999999999765e-05, 9.045900...</msg>
<status status="PASS" starttime="20201030 15:52:26.984" endtime="20201030 15:52:26.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.003" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.000" endtime="20201030 15:52:27.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.008" level="INFO">VALUE: [8.976399999999912e-05, 8.980499999999836e-05, 9.006899999999818e-05, 9.0332999999998e-05, 8.987500000000315e-05, 8.993100000000143e-05, 8.993100000000143e-05, 9.006999999999765e-05, 9.045900000000107e-05, 9.016699999999517e-05, 9.038899999999628e-05, 8.980499999999836e-05, 8.990200000000281e-05, 9.041600000000288e-05, 8.995800000000109e-05, 9.040300000000279e-05, 9.043099999999499e-05, 8.974999999999955e-05, 8.983400000000391e-05, 9.048600000000073e-05, 9.006899999999818e-05, 8.99869999999997e-05, 9.038899999999628e-05, 9.056899999999868e-05, 8.973599999999998e-05, 8.977800000000563e-05, 9.033399999999747e-05, 9.015300000000254e-05, 9.06670000000026e-05, 9.027799999999919e-05, 9.055599999999858e-05, 8.979099999999879e-05, 9.015200000000306e-05, 9.044400000000202e-05, 9.019400000000177e-05, 8.969400000000127e-05, 9.031899999999843e-05, 9.005600000000502e-05, 9.048600000000073e-05, 9.048600000000073e-05, 9.005600000000502e-05, 9.048600000000073e-05, 9.040299999999585e-05, 8.974999999999955e-05, 8.986100000000358e-05, 9.06800000000027e-05, 8.991600000000238e-05, 8.96800000000017e-05, 8.987499999999621e-05, 9.048600000000073e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.005" endtime="20201030 15:52:27.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.993" endtime="20201030 15:52:27.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.022" endtime="20201030 15:52:27.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.016" endtime="20201030 15:52:27.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.014" endtime="20201030 15:52:27.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.526" endtime="20201030 15:52:27.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.525" endtime="20201030 15:52:27.047"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.069" endtime="20201030 15:52:27.091"></status>
</kw>
<msg timestamp="20201030 15:52:27.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.066" endtime="20201030 15:52:27.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.095" endtime="20201030 15:52:27.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.101" endtime="20201030 15:52:27.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.059" endtime="20201030 15:52:27.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.053" endtime="20201030 15:52:27.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.124" endtime="20201030 15:52:27.458"></status>
</kw>
<msg timestamp="20201030 15:52:27.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040388028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040479694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.121" endtime="20201030 15:52:27.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040388028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040479694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.467" endtime="20201030 15:52:27.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.486" endtime="20201030 15:52:27.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.114" endtime="20201030 15:52:27.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.109" endtime="20201030 15:52:27.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.503" level="INFO">${RESULT} = [{'diff': 9.16659999999972e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.140300000000379e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.136099999999814e-05}, {'diff': 9.097200000000166e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:27.494" endtime="20201030 15:52:27.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.514" level="INFO">${ACCURACY} = {'diff': [9.16659999999972e-05, 9.161099999999839e-05, 9.140300000000379e-05, 9.161099999999839e-05, 9.136099999999814e-05, 9.097200000000166e-05, 9.094399999999558e-05, 9.093100000000243e-05, 9.07500...</msg>
<status status="PASS" starttime="20201030 15:52:27.505" endtime="20201030 15:52:27.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.524" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.522" endtime="20201030 15:52:27.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.530" level="INFO">VALUE: [9.16659999999972e-05, 9.161099999999839e-05, 9.140300000000379e-05, 9.161099999999839e-05, 9.136099999999814e-05, 9.097200000000166e-05, 9.094399999999558e-05, 9.093100000000243e-05, 9.075000000000055e-05, 9.152800000000044e-05, 9.147200000000216e-05, 9.106899999999918e-05, 9.147200000000216e-05, 9.129100000000029e-05, 9.080499999999936e-05, 9.155500000000011e-05, 9.119400000000277e-05, 9.147199999999522e-05, 9.091700000000286e-05, 9.115300000000354e-05, 9.14859999999948e-05, 9.070900000000132e-05, 9.131899999999943e-05, 9.091599999999644e-05, 9.138900000000422e-05, 9.102700000000047e-05, 9.0945000000002e-05, 9.147200000000216e-05, 9.113900000000397e-05, 9.126400000000062e-05, 9.107000000000559e-05, 9.145900000000207e-05, 9.130599999999933e-05, 9.145900000000207e-05, 9.083399999999797e-05, 9.116600000000363e-05, 9.144399999999608e-05, 9.117999999999626e-05, 9.090199999999687e-05, 9.07079999999949e-05, 9.126399999999368e-05, 9.145800000000259e-05, 9.095799999999515e-05, 9.118100000000268e-05, 9.087500000000415e-05, 9.159799999999829e-05, 9.090199999999687e-05, 9.091700000000286e-05, 9.147200000000216e-05, 9.08329999999985e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.527" endtime="20201030 15:52:27.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.515" endtime="20201030 15:52:27.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.542" endtime="20201030 15:52:27.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.538" endtime="20201030 15:52:27.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.536" endtime="20201030 15:52:27.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.049" endtime="20201030 15:52:27.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.048" endtime="20201030 15:52:27.567"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.590" endtime="20201030 15:52:27.612"></status>
</kw>
<msg timestamp="20201030 15:52:27.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.586" endtime="20201030 15:52:27.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.615" endtime="20201030 15:52:27.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.621" endtime="20201030 15:52:27.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.579" endtime="20201030 15:52:27.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.573" endtime="20201030 15:52:27.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.645" endtime="20201030 15:52:27.977"></status>
</kw>
<msg timestamp="20201030 15:52:27.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040573361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040666042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.642" endtime="20201030 15:52:27.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040573361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040666042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.987" endtime="20201030 15:52:28.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.007" endtime="20201030 15:52:28.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.634" endtime="20201030 15:52:28.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.629" endtime="20201030 15:52:28.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.024" level="INFO">${RESULT} = [{'diff': 9.268099999999724e-05}, {'diff': 9.223599999999554e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.257000000000015e-05}, {'diff': 9.218100000000368e-05}, {'diff': 9.251400000000187e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.016" endtime="20201030 15:52:28.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.036" level="INFO">${ACCURACY} = {'diff': [9.268099999999724e-05, 9.223599999999554e-05, 9.259699999999982e-05, 9.257000000000015e-05, 9.218100000000368e-05, 9.251400000000187e-05, 9.169400000000327e-05, 9.180500000000036e-05, 9.1888...</msg>
<status status="PASS" starttime="20201030 15:52:28.027" endtime="20201030 15:52:28.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.047" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.044" endtime="20201030 15:52:28.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.052" level="INFO">VALUE: [9.268099999999724e-05, 9.223599999999554e-05, 9.259699999999982e-05, 9.257000000000015e-05, 9.218100000000368e-05, 9.251400000000187e-05, 9.169400000000327e-05, 9.180500000000036e-05, 9.188899999999778e-05, 9.226400000000162e-05, 9.259699999999982e-05, 9.223600000000248e-05, 9.216699999999717e-05, 9.231900000000043e-05, 9.169500000000275e-05, 9.241699999999742e-05, 9.213899999999803e-05, 9.222200000000291e-05, 9.205500000000061e-05, 9.201400000000137e-05, 9.226400000000162e-05, 9.261099999999939e-05, 9.234699999999957e-05, 9.245800000000359e-05, 9.23199999999999e-05, 9.195899999999563e-05, 9.182000000000634e-05, 9.25000000000023e-05, 9.259699999999982e-05, 9.220800000000334e-05, 9.172200000000241e-05, 9.186100000000558e-05, 9.223600000000248e-05, 9.172200000000241e-05, 9.173600000000198e-05, 9.191699999999692e-05, 9.21529999999976e-05, 9.259799999999929e-05, 9.257000000000015e-05, 9.188899999999778e-05, 9.180599999999983e-05, 9.204200000000051e-05, 9.263899999999853e-05, 9.205600000000008e-05, 9.180599999999983e-05, 9.222200000000291e-05, 9.261099999999939e-05, 9.220899999999588e-05, 9.225000000000205e-05, 9.238899999999828e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.049" endtime="20201030 15:52:28.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.038" endtime="20201030 15:52:28.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.064" endtime="20201030 15:52:28.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.060" endtime="20201030 15:52:28.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.058" endtime="20201030 15:52:28.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.569" endtime="20201030 15:52:28.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.568" endtime="20201030 15:52:28.089"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.112" endtime="20201030 15:52:28.134"></status>
</kw>
<msg timestamp="20201030 15:52:28.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.108" endtime="20201030 15:52:28.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.137" endtime="20201030 15:52:28.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.144" endtime="20201030 15:52:28.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.101" endtime="20201030 15:52:28.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.096" endtime="20201030 15:52:28.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.167" endtime="20201030 15:52:28.501"></status>
</kw>
<msg timestamp="20201030 15:52:28.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0405475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040640264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:28.163" endtime="20201030 15:52:28.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0405475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040640264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:28.510" endtime="20201030 15:52:28.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.529" endtime="20201030 15:52:28.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.156" endtime="20201030 15:52:28.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.152" endtime="20201030 15:52:28.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.546" level="INFO">${RESULT} = [{'diff': 9.276400000000212e-05}, {'diff': 9.327800000000219e-05}, {'diff': 9.269399999999733e-05}, {'diff': 9.319499999999731e-05}, {'diff': 9.283399999999997e-05}, {'diff': 9.309699999999338e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.537" endtime="20201030 15:52:28.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.555" level="INFO">${ACCURACY} = {'diff': [9.276400000000212e-05, 9.327800000000219e-05, 9.269399999999733e-05, 9.319499999999731e-05, 9.283399999999997e-05, 9.309699999999338e-05, 9.311099999999989e-05, 9.273700000000246e-05, 9.3431...</msg>
<status status="PASS" starttime="20201030 15:52:28.548" endtime="20201030 15:52:28.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.566" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.564" endtime="20201030 15:52:28.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.571" level="INFO">VALUE: [9.276400000000212e-05, 9.327800000000219e-05, 9.269399999999733e-05, 9.319499999999731e-05, 9.283399999999997e-05, 9.309699999999338e-05, 9.311099999999989e-05, 9.273700000000246e-05, 9.343100000000493e-05, 9.325000000000305e-05, 9.307000000000065e-05, 9.345799999999765e-05, 9.297199999999672e-05, 9.295800000000409e-05, 9.34859999999968e-05, 9.269499999999681e-05, 9.274999999999561e-05, 9.331900000000143e-05, 9.358400000000072e-05, 9.330500000000186e-05, 9.290200000000581e-05, 9.325000000000305e-05, 9.286099999999964e-05, 9.284700000000007e-05, 9.344399999999808e-05, 9.274999999999561e-05, 9.263899999999853e-05, 9.295899999999663e-05, 9.294399999999758e-05, 9.305600000000108e-05, 9.273600000000298e-05, 9.277699999999528e-05, 9.352800000000244e-05, 9.341599999999894e-05, 9.316699999999817e-05, 9.331899999999449e-05, 9.351399999999593e-05, 9.297200000000366e-05, 9.343099999999799e-05, 9.338899999999928e-05, 9.287499999999921e-05, 9.358300000000125e-05, 9.337499999999971e-05, 9.355499999999517e-05, 9.352800000000244e-05, 9.293099999999749e-05, 9.358300000000125e-05, 9.305600000000108e-05, 9.270899999999638e-05, 9.323600000000348e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.568" endtime="20201030 15:52:28.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.557" endtime="20201030 15:52:28.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.584" endtime="20201030 15:52:28.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.579" endtime="20201030 15:52:28.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.577" endtime="20201030 15:52:28.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.091" endtime="20201030 15:52:28.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.090" endtime="20201030 15:52:28.609"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.631" endtime="20201030 15:52:28.655"></status>
</kw>
<msg timestamp="20201030 15:52:28.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.628" endtime="20201030 15:52:28.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.658" endtime="20201030 15:52:28.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.664" endtime="20201030 15:52:28.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.621" endtime="20201030 15:52:28.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.615" endtime="20201030 15:52:28.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.688" endtime="20201030 15:52:29.022"></status>
</kw>
<msg timestamp="20201030 15:52:29.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042454139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042548028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.684" endtime="20201030 15:52:29.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042454139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042548028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.031" endtime="20201030 15:52:29.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.050" endtime="20201030 15:52:29.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.677" endtime="20201030 15:52:29.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.673" endtime="20201030 15:52:29.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.067" level="INFO">${RESULT} = [{'diff': 9.388899999999978e-05}, {'diff': 9.422199999999797e-05}, {'diff': 9.38330000000015e-05}, {'diff': 9.441699999999942e-05}, {'diff': 9.445799999999865e-05}, {'diff': 9.422199999999797e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:29.059" endtime="20201030 15:52:29.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.077" level="INFO">${ACCURACY} = {'diff': [9.388899999999978e-05, 9.422199999999797e-05, 9.38330000000015e-05, 9.441699999999942e-05, 9.445799999999865e-05, 9.422199999999797e-05, 9.391699999999892e-05, 9.441599999999994e-05, 9.45830...</msg>
<status status="PASS" starttime="20201030 15:52:29.069" endtime="20201030 15:52:29.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.088" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.085" endtime="20201030 15:52:29.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.093" level="INFO">VALUE: [9.388899999999978e-05, 9.422199999999797e-05, 9.38330000000015e-05, 9.441699999999942e-05, 9.445799999999865e-05, 9.422199999999797e-05, 9.391699999999892e-05, 9.441599999999994e-05, 9.458300000000225e-05, 9.402800000000294e-05, 9.45279999999965e-05, 9.395799999999815e-05, 9.447200000000516e-05, 9.423599999999754e-05, 9.459699999999488e-05, 9.440200000000037e-05, 9.466700000000661e-05, 9.415200000000012e-05, 9.413900000000003e-05, 9.38330000000015e-05, 9.391599999999944e-05, 9.430500000000286e-05, 9.42079999999984e-05, 9.40000000000038e-05, 9.38200000000014e-05, 9.390299999999935e-05, 9.370899999999738e-05, 9.39729999999972e-05, 9.440299999999985e-05, 9.408299999999481e-05, 9.413900000000003e-05, 9.401400000000337e-05, 9.441699999999942e-05, 9.455500000000311e-05, 9.451399999999693e-05, 9.363899999999953e-05, 9.386100000000064e-05, 9.427799999999625e-05, 9.418099999999874e-05, 9.380600000000183e-05, 9.465200000000062e-05, 9.423600000000448e-05, 9.440299999999985e-05, 9.434700000000157e-05, 9.456899999999574e-05, 9.451399999999693e-05, 9.459700000000182e-05, 9.445799999999865e-05, 9.425000000000405e-05, 9.366699999999867e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.090" endtime="20201030 15:52:29.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.079" endtime="20201030 15:52:29.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.107" endtime="20201030 15:52:29.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.101" endtime="20201030 15:52:29.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.099" endtime="20201030 15:52:29.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.611" endtime="20201030 15:52:29.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.609" endtime="20201030 15:52:29.132"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.154" endtime="20201030 15:52:29.175"></status>
</kw>
<msg timestamp="20201030 15:52:29.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.151" endtime="20201030 15:52:29.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.177" endtime="20201030 15:52:29.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.180" endtime="20201030 15:52:29.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.144" endtime="20201030 15:52:29.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.138" endtime="20201030 15:52:29.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.191" endtime="20201030 15:52:29.512"></status>
</kw>
<msg timestamp="20201030 15:52:29.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040951125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.189" endtime="20201030 15:52:29.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040856375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040951125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.522" endtime="20201030 15:52:29.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.540" endtime="20201030 15:52:29.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.186" endtime="20201030 15:52:29.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.184" endtime="20201030 15:52:29.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.557" level="INFO">${RESULT} = [{'diff': 9.474999999999761e-05}, {'diff': 9.54859999999988e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.477799999999675e-05}, {'diff': 9.518099999999974e-05}, {'diff': 9.526299999999821e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:29.549" endtime="20201030 15:52:29.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.568" level="INFO">${ACCURACY} = {'diff': [9.474999999999761e-05, 9.54859999999988e-05, 9.491699999999992e-05, 9.477799999999675e-05, 9.518099999999974e-05, 9.526299999999821e-05, 9.524999999999811e-05, 9.480500000000336e-05, 9.48060...</msg>
<status status="PASS" starttime="20201030 15:52:29.559" endtime="20201030 15:52:29.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.579" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.577" endtime="20201030 15:52:29.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.588" level="INFO">VALUE: [9.474999999999761e-05, 9.54859999999988e-05, 9.491699999999992e-05, 9.477799999999675e-05, 9.518099999999974e-05, 9.526299999999821e-05, 9.524999999999811e-05, 9.480500000000336e-05, 9.480600000000283e-05, 9.463900000000053e-05, 9.558400000000272e-05, 9.563900000000153e-05, 9.545799999999965e-05, 9.473600000000498e-05, 9.506900000000318e-05, 9.545899999999913e-05, 9.565199999999469e-05, 9.48609999999947e-05, 9.561100000000239e-05, 9.48609999999947e-05, 9.561100000000239e-05, 9.536100000000214e-05, 9.534700000000257e-05, 9.559800000000229e-05, 9.516700000000017e-05, 9.505600000000308e-05, 9.558399999999578e-05, 9.509700000000232e-05, 9.486100000000164e-05, 9.533299999999606e-05, 9.533299999999606e-05, 9.512500000000146e-05, 9.481999999999546e-05, 9.545799999999965e-05, 9.486100000000164e-05, 9.499999999999786e-05, 9.51530000000006e-05, 9.524999999999811e-05, 9.545799999999965e-05, 9.541699999999348e-05, 9.567999999999383e-05, 9.538900000000128e-05, 9.534700000000257e-05, 9.484699999999513e-05, 9.493099999999949e-05, 9.468099999999924e-05, 9.519499999999931e-05, 9.513900000000103e-05, 9.479199999999632e-05, 9.495899999999863e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.584" endtime="20201030 15:52:29.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.570" endtime="20201030 15:52:29.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.603" endtime="20201030 15:52:29.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.599" endtime="20201030 15:52:29.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.596" endtime="20201030 15:52:29.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.134" endtime="20201030 15:52:29.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.133" endtime="20201030 15:52:29.628"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.650" endtime="20201030 15:52:29.672"></status>
</kw>
<msg timestamp="20201030 15:52:29.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.647" endtime="20201030 15:52:29.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.676" endtime="20201030 15:52:29.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.682" endtime="20201030 15:52:29.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.640" endtime="20201030 15:52:29.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.634" endtime="20201030 15:52:29.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.705" endtime="20201030 15:52:30.038"></status>
</kw>
<msg timestamp="20201030 15:52:30.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041080972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.702" endtime="20201030 15:52:30.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041080972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041177625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.048" endtime="20201030 15:52:30.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.066" endtime="20201030 15:52:30.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.695" endtime="20201030 15:52:30.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.690" endtime="20201030 15:52:30.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.083" level="INFO">${RESULT} = [{'diff': 9.66530000000021e-05}, {'diff': 9.588900000000178e-05}, {'diff': 9.659699999999688e-05}, {'diff': 9.612500000000246e-05}, {'diff': 9.58200000000034e-05}, {'diff': 9.617999999999433e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:30.075" endtime="20201030 15:52:30.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.099" level="INFO">${ACCURACY} = {'diff': [9.66530000000021e-05, 9.588900000000178e-05, 9.659699999999688e-05, 9.612500000000246e-05, 9.58200000000034e-05, 9.617999999999433e-05, 9.668100000000124e-05, 9.654200000000501e-05, 9.656899...</msg>
<status status="PASS" starttime="20201030 15:52:30.086" endtime="20201030 15:52:30.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.110" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.107" endtime="20201030 15:52:30.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.115" level="INFO">VALUE: [9.66530000000021e-05, 9.588900000000178e-05, 9.659699999999688e-05, 9.612500000000246e-05, 9.58200000000034e-05, 9.617999999999433e-05, 9.668100000000124e-05, 9.654200000000501e-05, 9.656899999999774e-05, 9.58609999999957e-05, 9.587500000000221e-05, 9.654199999999807e-05, 9.65279999999985e-05, 9.627799999999825e-05, 9.638900000000228e-05, 9.613900000000203e-05, 9.626399999999868e-05, 9.633400000000347e-05, 9.615200000000212e-05, 9.645800000000065e-05, 9.605499999999767e-05, 9.593000000000101e-05, 9.640300000000185e-05, 9.588900000000178e-05, 9.615299999999466e-05, 9.61530000000016e-05, 9.619400000000083e-05, 9.61530000000016e-05, 9.570899999999938e-05, 9.665199999999569e-05, 9.655499999999817e-05, 9.631899999999749e-05, 9.626400000000562e-05, 9.57079999999999e-05, 9.654199999999807e-05, 9.636100000000314e-05, 9.657000000000415e-05, 9.641700000000142e-05, 9.63479999999961e-05, 9.580500000000436e-05, 9.623599999999954e-05, 9.659699999999688e-05, 9.599999999999886e-05, 9.61530000000016e-05, 9.647200000000022e-05, 9.618100000000074e-05, 9.57079999999999e-05, 9.65279999999985e-05, 9.593100000000049e-05, 9.570900000000632e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.112" endtime="20201030 15:52:30.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.100" endtime="20201030 15:52:30.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.127" endtime="20201030 15:52:30.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.123" endtime="20201030 15:52:30.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.120" endtime="20201030 15:52:30.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.630" endtime="20201030 15:52:30.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.629" endtime="20201030 15:52:30.152"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.174" endtime="20201030 15:52:30.197"></status>
</kw>
<msg timestamp="20201030 15:52:30.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.171" endtime="20201030 15:52:30.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.200" endtime="20201030 15:52:30.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.207" endtime="20201030 15:52:30.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.164" endtime="20201030 15:52:30.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.158" endtime="20201030 15:52:30.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.229" endtime="20201030 15:52:30.584"></status>
</kw>
<msg timestamp="20201030 15:52:30.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040579806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.226" endtime="20201030 15:52:30.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040579806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.594" endtime="20201030 15:52:30.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.614" endtime="20201030 15:52:30.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.219" endtime="20201030 15:52:30.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.214" endtime="20201030 15:52:30.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.632" level="INFO">${RESULT} = [{'diff': 9.698699999999977e-05}, {'diff': 9.761100000000439e-05}, {'diff': 9.761099999999745e-05}, {'diff': 9.708299999999781e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.68880000000033e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:30.623" endtime="20201030 15:52:30.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.642" level="INFO">${ACCURACY} = {'diff': [9.698699999999977e-05, 9.761100000000439e-05, 9.761099999999745e-05, 9.708299999999781e-05, 9.674999999999961e-05, 9.68880000000033e-05, 9.740299999999591e-05, 9.679199999999832e-05, 9.67499...</msg>
<status status="PASS" starttime="20201030 15:52:30.635" endtime="20201030 15:52:30.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.654" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.651" endtime="20201030 15:52:30.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.660" level="INFO">VALUE: [9.698699999999977e-05, 9.761100000000439e-05, 9.761099999999745e-05, 9.708299999999781e-05, 9.674999999999961e-05, 9.68880000000033e-05, 9.740299999999591e-05, 9.679199999999832e-05, 9.674999999999961e-05, 9.677799999999875e-05, 9.708299999999781e-05, 9.766699999999573e-05, 9.722199999999404e-05, 9.722199999999404e-05, 9.747200000000122e-05, 9.758299999999831e-05, 9.734800000000404e-05, 9.7027999999999e-05, 9.683399999999703e-05, 9.743100000000199e-05, 9.722200000000097e-05, 9.722200000000097e-05, 9.716599999999576e-05, 9.67080000000009e-05, 9.719400000000183e-05, 9.694400000000158e-05, 9.705599999999814e-05, 9.679199999999832e-05, 9.68200000000044e-05, 9.68059999999979e-05, 9.758399999999778e-05, 9.7333000000005e-05, 9.680499999999842e-05, 9.699999999999986e-05, 9.738900000000328e-05, 9.745799999999472e-05, 9.718000000000226e-05, 9.72080000000014e-05, 9.693099999999455e-05, 9.672299999999995e-05, 9.709699999999738e-05, 9.695900000000063e-05, 9.676299999999971e-05, 9.748599999999386e-05, 9.71660000000027e-05, 9.758299999999831e-05, 9.68059999999979e-05, 9.747200000000122e-05, 9.687499999999627e-05, 9.743099999999505e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.656" endtime="20201030 15:52:30.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.644" endtime="20201030 15:52:30.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.673" endtime="20201030 15:52:30.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.668" endtime="20201030 15:52:30.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.666" endtime="20201030 15:52:30.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.154" endtime="20201030 15:52:30.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.153" endtime="20201030 15:52:30.698"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.722" endtime="20201030 15:52:30.747"></status>
</kw>
<msg timestamp="20201030 15:52:30.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.719" endtime="20201030 15:52:30.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.750" endtime="20201030 15:52:30.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.757" endtime="20201030 15:52:30.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.711" endtime="20201030 15:52:30.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.705" endtime="20201030 15:52:30.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.782" endtime="20201030 15:52:31.145"></status>
</kw>
<msg timestamp="20201030 15:52:31.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044767917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:30.778" endtime="20201030 15:52:31.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044767917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:31.156" endtime="20201030 15:52:31.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.176" endtime="20201030 15:52:31.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.770" endtime="20201030 15:52:31.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.766" endtime="20201030 15:52:31.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.194" level="INFO">${RESULT} = [{'diff': 9.808300000000575e-05}, {'diff': 9.776400000000018e-05}, {'diff': 9.770900000000138e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.780499999999942e-05}, {'diff': 9.808300000000575e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:31.184" endtime="20201030 15:52:31.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.204" level="INFO">${ACCURACY} = {'diff': [9.808300000000575e-05, 9.776400000000018e-05, 9.770900000000138e-05, 9.834699999999863e-05, 9.780499999999942e-05, 9.808300000000575e-05, 9.851400000000093e-05, 9.805499999999967e-05, 9.8568...</msg>
<status status="PASS" starttime="20201030 15:52:31.196" endtime="20201030 15:52:31.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.215" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.213" endtime="20201030 15:52:31.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.221" level="INFO">VALUE: [9.808300000000575e-05, 9.776400000000018e-05, 9.770900000000138e-05, 9.834699999999863e-05, 9.780499999999942e-05, 9.808300000000575e-05, 9.851400000000093e-05, 9.805499999999967e-05, 9.856899999999974e-05, 9.862499999999802e-05, 9.787500000000421e-05, 9.804199999999957e-05, 9.801400000000043e-05, 9.770900000000138e-05, 9.819500000000231e-05, 9.826400000000068e-05, 9.858300000000625e-05, 9.82080000000024e-05, 9.847200000000222e-05, 9.806899999999924e-05, 9.845800000000265e-05, 9.773600000000104e-05, 9.815299999999666e-05, 9.78200000000054e-05, 9.850000000000136e-05, 9.813899999999709e-05, 9.806899999999924e-05, 9.81530000000036e-05, 9.815299999999666e-05, 9.791700000000292e-05, 9.806999999999871e-05, 9.863899999999759e-05, 9.836100000000514e-05, 9.847200000000222e-05, 9.798599999999436e-05, 9.773600000000104e-05, 9.81530000000036e-05, 9.858299999999931e-05, 9.86660000000042e-05, 9.781900000000593e-05, 9.775000000000061e-05, 9.841700000000342e-05, 9.847200000000222e-05, 9.833399999999853e-05, 9.858399999999878e-05, 9.793100000000249e-05, 9.808399999999828e-05, 9.867999999999683e-05, 9.826400000000068e-05, 9.806899999999924e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.218" endtime="20201030 15:52:31.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.206" endtime="20201030 15:52:31.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.236" endtime="20201030 15:52:31.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.230" endtime="20201030 15:52:31.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.227" endtime="20201030 15:52:31.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.701" endtime="20201030 15:52:31.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.699" endtime="20201030 15:52:31.262"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.287" endtime="20201030 15:52:31.311"></status>
</kw>
<msg timestamp="20201030 15:52:31.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.283" endtime="20201030 15:52:31.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.314" endtime="20201030 15:52:31.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.321" endtime="20201030 15:52:31.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.274" endtime="20201030 15:52:31.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.268" endtime="20201030 15:52:31.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.346" endtime="20201030 15:52:31.707"></status>
</kw>
<msg timestamp="20201030 15:52:31.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044936097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045034972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.342" endtime="20201030 15:52:31.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044936097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045034972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.717" endtime="20201030 15:52:31.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.737" endtime="20201030 15:52:31.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.334" endtime="20201030 15:52:31.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.329" endtime="20201030 15:52:31.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.755" level="INFO">${RESULT} = [{'diff': 9.887499999999827e-05}, {'diff': 9.9028000000001e-05}, {'diff': 9.891700000000392e-05}, {'diff': 9.962499999999902e-05}, {'diff': 9.93609999999992e-05}, {'diff': 9.922199999999604e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:31.746" endtime="20201030 15:52:31.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.766" level="INFO">${ACCURACY} = {'diff': [9.887499999999827e-05, 9.9028000000001e-05, 9.891700000000392e-05, 9.962499999999902e-05, 9.93609999999992e-05, 9.922199999999604e-05, 9.870900000000238e-05, 9.905600000000014e-05, 9.8902999...</msg>
<status status="PASS" starttime="20201030 15:52:31.757" endtime="20201030 15:52:31.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.778" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.776" endtime="20201030 15:52:31.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.784" level="INFO">VALUE: [9.887499999999827e-05, 9.9028000000001e-05, 9.891700000000392e-05, 9.962499999999902e-05, 9.93609999999992e-05, 9.922199999999604e-05, 9.870900000000238e-05, 9.905600000000014e-05, 9.890299999999741e-05, 9.91939999999969e-05, 9.86939999999964e-05, 9.875000000000161e-05, 9.911099999999895e-05, 9.908399999999928e-05, 9.945800000000365e-05, 9.941700000000442e-05, 9.904200000000057e-05, 9.966699999999773e-05, 9.872200000000247e-05, 9.897200000000272e-05, 9.867999999999683e-05, 9.904200000000057e-05, 9.956900000000074e-05, 9.958399999999978e-05, 9.913899999999809e-05, 9.881999999999946e-05, 9.887499999999827e-05, 9.933399999999953e-05, 9.923700000000202e-05, 9.870899999999544e-05, 9.943000000000451e-05, 9.894399999999665e-05, 9.895799999999622e-05, 9.884699999999913e-05, 9.925000000000211e-05, 9.88059999999999e-05, 9.93479999999991e-05, 9.901400000000143e-05, 9.916699999999723e-05, 9.926300000000221e-05, 9.940299999999791e-05, 9.898599999999536e-05, 9.95410000000016e-05, 9.951400000000193e-05, 9.886100000000564e-05, 9.916699999999723e-05, 9.937499999999877e-05, 9.957000000000021e-05, 9.911099999999895e-05, 9.873600000000204e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.781" endtime="20201030 15:52:31.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.768" endtime="20201030 15:52:31.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.797" endtime="20201030 15:52:31.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.793" endtime="20201030 15:52:31.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.790" endtime="20201030 15:52:31.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.264" endtime="20201030 15:52:31.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.263" endtime="20201030 15:52:31.823"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.847" endtime="20201030 15:52:31.870"></status>
</kw>
<msg timestamp="20201030 15:52:31.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.843" endtime="20201030 15:52:31.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.874" endtime="20201030 15:52:31.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.882" endtime="20201030 15:52:31.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.836" endtime="20201030 15:52:31.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.830" endtime="20201030 15:52:31.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.905" endtime="20201030 15:52:32.246"></status>
</kw>
<msg timestamp="20201030 15:52:32.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043243236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043343333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.902" endtime="20201030 15:52:32.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043243236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043343333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.255" endtime="20201030 15:52:32.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.274" endtime="20201030 15:52:32.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.895" endtime="20201030 15:52:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.890" endtime="20201030 15:52:32.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.291" level="INFO">${RESULT} = [{'diff': 0.00010009700000000038}, {'diff': 9.976400000000218e-05}, {'diff': 0.00010026400000000268}, {'diff': 9.980500000000142e-05}, {'diff': 0.00010038899999999934}, {'diff': 9.981900000000099e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:32.283" endtime="20201030 15:52:32.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.302" level="INFO">${ACCURACY} = {'diff': [0.00010009700000000038, 9.976400000000218e-05, 0.00010026400000000268, 9.980500000000142e-05, 0.00010038899999999934, 9.981900000000099e-05, 0.00010044499999999762, 0.00010044400000000508, 9...</msg>
<status status="PASS" starttime="20201030 15:52:32.293" endtime="20201030 15:52:32.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.314" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.311" endtime="20201030 15:52:32.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.319" level="INFO">VALUE: [0.00010009700000000038, 9.976400000000218e-05, 0.00010026400000000268, 9.980500000000142e-05, 0.00010038899999999934, 9.981900000000099e-05, 0.00010044499999999762, 0.00010044400000000508, 9.981900000000099e-05, 9.991600000000544e-05, 9.969499999999687e-05, 9.970799999999697e-05, 9.967999999999783e-05, 9.98609999999997e-05, 0.00010001400000000243, 0.00010024999999999618, 0.00010015299999999866, 0.00010058299999999437, 0.00010013899999999909, 0.00010027800000000225, 0.00010058300000000131, 0.00010066699999999873, 0.00010058300000000131, 0.00010019400000000483, 9.981900000000099e-05, 9.98609999999997e-05, 9.988899999999884e-05, 0.00010023600000000354, 0.00010015299999999866, 0.00010040199999999944, 0.0001006939999999984, 0.00010040300000000585, 0.00010026400000000268, 9.981900000000099e-05, 0.00010038899999999934, 0.00010055600000000164, 9.982000000000046e-05, 0.00010045799999999772, 9.997200000000372e-05, 0.0001005410000000026, 0.00010030499999999498, 0.00010013899999999909, 0.00010047199999999729, 9.97080000000039e-05, 9.97080000000039e-05, 9.975000000000261e-05, 0.00010032000000000096, 0.00010015200000000613, 0.00010055600000000164, 0.0001003060000000014]</msg>
<status status="PASS" starttime="20201030 15:52:32.316" endtime="20201030 15:52:32.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.304" endtime="20201030 15:52:32.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.332" endtime="20201030 15:52:32.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.327" endtime="20201030 15:52:32.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.325" endtime="20201030 15:52:32.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.825" endtime="20201030 15:52:32.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.824" endtime="20201030 15:52:32.357"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.380" endtime="20201030 15:52:32.403"></status>
</kw>
<msg timestamp="20201030 15:52:32.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.377" endtime="20201030 15:52:32.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.407" endtime="20201030 15:52:32.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.413" endtime="20201030 15:52:32.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.369" endtime="20201030 15:52:32.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.363" endtime="20201030 15:52:32.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.437" endtime="20201030 15:52:32.754"></status>
</kw>
<msg timestamp="20201030 15:52:32.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041545875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.434" endtime="20201030 15:52:32.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041545875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041647194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.763" endtime="20201030 15:52:32.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.782" endtime="20201030 15:52:32.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.426" endtime="20201030 15:52:32.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.421" endtime="20201030 15:52:32.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.799" level="INFO">${RESULT} = [{'diff': 0.00010131899999999555}, {'diff': 0.00010083300000000156}, {'diff': 0.00010156900000000274}, {'diff': 0.000101416}, {'diff': 0.00010137500000000077}, {'diff': 0.00010122199999999804}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:52:32.791" endtime="20201030 15:52:32.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.809" level="INFO">${ACCURACY} = {'diff': [0.00010131899999999555, 0.00010083300000000156, 0.00010156900000000274, 0.000101416, 0.00010137500000000077, 0.00010122199999999804, 0.0001015280000000035, 0.0001016809999999993, 0.000101499...</msg>
<status status="PASS" starttime="20201030 15:52:32.802" endtime="20201030 15:52:32.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.820" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.817" endtime="20201030 15:52:32.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.825" level="INFO">VALUE: [0.00010131899999999555, 0.00010083300000000156, 0.00010156900000000274, 0.000101416, 0.00010137500000000077, 0.00010122199999999804, 0.0001015280000000035, 0.0001016809999999993, 0.00010149999999999743, 0.00010107000000000171, 0.00010101400000000343, 0.00010070799999999797, 0.00010105600000000214, 0.00010117999999999933, 0.00010138900000000034, 0.00010158300000000231, 0.0001011939999999989, 0.00010093099999999855, 0.00010159700000000188, 0.00010124999999999718, 0.00010126400000000368, 0.00010161100000000145, 0.00010122199999999804, 0.00010127700000000378, 0.00010127799999999632, 0.00010159699999999494, 0.00010123600000000454, 0.00010141699999999948, 0.00010090300000000635, 0.00010113900000000009, 0.00010105600000000214, 0.00010122300000000445, 0.00010149999999999743, 0.00010116599999999976, 0.00010087500000000027, 0.00010142999999999958, 0.00010116699999999923, 0.00010083300000000156, 0.00010097199999999779, 0.000101513999999997, 0.0001012359999999976, 0.00010120799999999847, 0.00010127700000000378, 0.0001015689999999958, 0.00010134700000000163, 0.00010138900000000034, 0.00010104099999999616, 0.0001008610000000007, 0.0001015559999999957, 0.00010108399999999435]</msg>
<status status="PASS" starttime="20201030 15:52:32.822" endtime="20201030 15:52:32.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.810" endtime="20201030 15:52:32.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.838" endtime="20201030 15:52:32.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.833" endtime="20201030 15:52:32.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.831" endtime="20201030 15:52:32.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.359" endtime="20201030 15:52:32.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.358" endtime="20201030 15:52:32.863"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.886" endtime="20201030 15:52:32.912"></status>
</kw>
<msg timestamp="20201030 15:52:32.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.883" endtime="20201030 15:52:32.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.915" endtime="20201030 15:52:32.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.921" endtime="20201030 15:52:32.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.875" endtime="20201030 15:52:32.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.870" endtime="20201030 15:52:32.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.945" endtime="20201030 15:52:33.286"></status>
</kw>
<msg timestamp="20201030 15:52:33.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043671792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043774, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:32.942" endtime="20201030 15:52:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043671792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043774, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:33.295" endtime="20201030 15:52:33.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.314" endtime="20201030 15:52:33.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.934" endtime="20201030 15:52:33.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.930" endtime="20201030 15:52:33.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.331" level="INFO">${RESULT} = [{'diff': 0.00010220799999999947}, {'diff': 0.00010248599999999886}, {'diff': 0.00010179200000000332}, {'diff': 0.0001025280000000045}, {'diff': 0.00010191699999999998}, {'diff': 0.0001025980000000023...</msg>
<status status="PASS" starttime="20201030 15:52:33.322" endtime="20201030 15:52:33.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.341" level="INFO">${ACCURACY} = {'diff': [0.00010220799999999947, 0.00010248599999999886, 0.00010179200000000332, 0.0001025280000000045, 0.00010191699999999998, 0.00010259800000000235, 0.0001018610000000017, 0.0001021809999999998, 0...</msg>
<status status="PASS" starttime="20201030 15:52:33.333" endtime="20201030 15:52:33.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.352" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.349" endtime="20201030 15:52:33.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.357" level="INFO">VALUE: [0.00010220799999999947, 0.00010248599999999886, 0.00010179200000000332, 0.0001025280000000045, 0.00010191699999999998, 0.00010259800000000235, 0.0001018610000000017, 0.0001021809999999998, 0.00010240300000000091, 0.0001026940000000004, 0.00010237499999999483, 0.00010206999999999578, 0.00010240300000000091, 0.00010224999999999818, 0.00010259699999999594, 0.00010272200000000647, 0.00010248599999999886, 0.00010226299999999827, 0.0001017080000000059, 0.0001017359999999981, 0.00010263900000000159, 0.00010245799999999972, 0.00010187500000000127, 0.0001018060000000029, 0.0001026810000000003, 0.00010206999999999578, 0.0001022359999999986, 0.00010247299999999876, 0.00010240300000000091, 0.00010226399999999775, 0.00010193000000000008, 0.00010213900000000109, 0.00010188900000000084, 0.00010212500000000152, 0.0001020139999999975, 0.00010213900000000109, 0.00010170899999999844, 0.00010222199999999904, 0.0001020559999999962, 0.00010194399999999965, 0.00010240299999999397, 0.00010204200000000357, 0.00010220900000000588, 0.00010241700000000048, 0.0001020139999999975, 0.00010226400000000468, 0.00010206900000000324, 0.00010255600000000364, 0.0001021809999999998, 0.00010259699999999594]</msg>
<status status="PASS" starttime="20201030 15:52:33.354" endtime="20201030 15:52:33.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.342" endtime="20201030 15:52:33.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.371" endtime="20201030 15:52:33.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.365" endtime="20201030 15:52:33.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.363" endtime="20201030 15:52:33.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.865" endtime="20201030 15:52:33.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.864" endtime="20201030 15:52:33.396"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.419" endtime="20201030 15:52:33.442"></status>
</kw>
<msg timestamp="20201030 15:52:33.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.416" endtime="20201030 15:52:33.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.446" endtime="20201030 15:52:33.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.452" endtime="20201030 15:52:33.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.409" endtime="20201030 15:52:33.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.403" endtime="20201030 15:52:33.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.476" endtime="20201030 15:52:33.816"></status>
</kw>
<msg timestamp="20201030 15:52:33.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041405361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041508889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.472" endtime="20201030 15:52:33.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041405361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041508889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.825" endtime="20201030 15:52:33.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.844" endtime="20201030 15:52:33.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.465" endtime="20201030 15:52:33.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.460" endtime="20201030 15:52:33.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.861" level="INFO">${RESULT} = [{'diff': 0.00010352799999999857}, {'diff': 0.0001027359999999991}, {'diff': 0.00010315300000000166}, {'diff': 0.00010352799999999857}, {'diff': 0.00010349999999999943}, {'diff': 0.0001032080000000004...</msg>
<status status="PASS" starttime="20201030 15:52:33.852" endtime="20201030 15:52:33.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.872" level="INFO">${ACCURACY} = {'diff': [0.00010352799999999857, 0.0001027359999999991, 0.00010315300000000166, 0.00010352799999999857, 0.00010349999999999943, 0.00010320800000000047, 0.00010348599999999986, 0.00010324999999999918,...</msg>
<status status="PASS" starttime="20201030 15:52:33.863" endtime="20201030 15:52:33.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.883" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.881" endtime="20201030 15:52:33.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.889" level="INFO">VALUE: [0.00010352799999999857, 0.0001027359999999991, 0.00010315300000000166, 0.00010352799999999857, 0.00010349999999999943, 0.00010320800000000047, 0.00010348599999999986, 0.00010324999999999918, 0.00010279099999999791, 0.00010308300000000381, 0.00010286099999999576, 0.00010291700000000098, 0.00010293100000000055, 0.00010338900000000234, 0.0001029160000000015, 0.00010349999999999943, 0.00010315300000000166, 0.00010349999999999943, 0.0001030559999999972, 0.00010334699999999669, 0.00010322200000000004, 0.000103513999999999, 0.00010265300000000116, 0.0001027359999999991, 0.00010349999999999943, 0.0001029160000000015, 0.00010326399999999875, 0.00010334699999999669, 0.00010365299999999522, 0.00010345800000000072, 0.00010281900000000399, 0.00010274999999999868, 0.00010365300000000216, 0.00010302799999999807, 0.00010293100000000055, 0.00010272199999999954, 0.00010284699999999619, 0.00010322200000000004, 0.00010313900000000209, 0.00010292999999999414, 0.00010332000000000396, 0.00010358299999999737, 0.00010365300000000216, 0.00010325000000000611, 0.00010340200000000244, 0.00010280499999999748, 0.00010290200000000194, 0.00010304200000000457, 0.00010367999999999489, 0.00010340300000000191]</msg>
<status status="PASS" starttime="20201030 15:52:33.886" endtime="20201030 15:52:33.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.874" endtime="20201030 15:52:33.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.901" endtime="20201030 15:52:33.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.897" endtime="20201030 15:52:33.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.894" endtime="20201030 15:52:33.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.399" endtime="20201030 15:52:33.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.397" endtime="20201030 15:52:33.926"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.950" endtime="20201030 15:52:33.972"></status>
</kw>
<msg timestamp="20201030 15:52:33.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.946" endtime="20201030 15:52:33.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.976" endtime="20201030 15:52:33.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.982" endtime="20201030 15:52:33.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.939" endtime="20201030 15:52:33.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.933" endtime="20201030 15:52:33.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.006" endtime="20201030 15:52:34.341"></status>
</kw>
<msg timestamp="20201030 15:52:34.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041572653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041676931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.003" endtime="20201030 15:52:34.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041572653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041676931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.351" endtime="20201030 15:52:34.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.368" endtime="20201030 15:52:34.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.995" endtime="20201030 15:52:34.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.990" endtime="20201030 15:52:34.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.385" level="INFO">${RESULT} = [{'diff': 0.00010427799999999932}, {'diff': 0.00010440300000000291}, {'diff': 0.00010397200000000079}, {'diff': 0.00010393000000000208}, {'diff': 0.00010381899999999805}, {'diff': 0.000103861000000003...</msg>
<status status="PASS" starttime="20201030 15:52:34.377" endtime="20201030 15:52:34.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.396" level="INFO">${ACCURACY} = {'diff': [0.00010427799999999932, 0.00010440300000000291, 0.00010397200000000079, 0.00010393000000000208, 0.00010381899999999805, 0.0001038610000000037, 0.00010426399999999975, 0.000104514, 0.00010427...</msg>
<status status="PASS" starttime="20201030 15:52:34.387" endtime="20201030 15:52:34.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.407" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.405" endtime="20201030 15:52:34.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.412" level="INFO">VALUE: [0.00010427799999999932, 0.00010440300000000291, 0.00010397200000000079, 0.00010393000000000208, 0.00010381899999999805, 0.0001038610000000037, 0.00010426399999999975, 0.000104514, 0.00010427699999999984, 0.00010415300000000266, 0.00010413899999999615, 0.00010445900000000119, 0.00010381999999999753, 0.0001042219999999941, 0.00010461099999999751, 0.0001042360000000006, 0.00010407000000000471, 0.00010465299999999622, 0.00010426399999999975, 0.00010369500000000087, 0.0001045689999999988, 0.00010394400000000165, 0.00010427799999999932, 0.00010380499999999848, 0.00010461099999999751, 0.00010402799999999907, 0.00010447200000000129, 0.00010448600000000086, 0.0001038060000000049, 0.00010454099999999966, 0.00010413899999999615, 0.00010461100000000445, 0.00010415300000000266, 0.00010391699999999504, 0.00010393099999999461, 0.00010397300000000026, 0.00010415300000000266, 0.00010373699999999958, 0.0001038610000000037, 0.00010444500000000162, 0.00010425000000000018, 0.00010401300000000002, 0.00010394400000000165, 0.00010394400000000165, 0.00010372200000000054, 0.00010443099999999511, 0.00010418099999999486, 0.00010381999999999753, 0.0001037360000000001, 0.00010456999999999828]</msg>
<status status="PASS" starttime="20201030 15:52:34.409" endtime="20201030 15:52:34.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.398" endtime="20201030 15:52:34.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.424" endtime="20201030 15:52:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.420" endtime="20201030 15:52:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.418" endtime="20201030 15:52:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.928" endtime="20201030 15:52:34.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.927" endtime="20201030 15:52:34.449"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.472" endtime="20201030 15:52:34.495"></status>
</kw>
<msg timestamp="20201030 15:52:34.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.468" endtime="20201030 15:52:34.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.498" endtime="20201030 15:52:34.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.504" endtime="20201030 15:52:34.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.461" endtime="20201030 15:52:34.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.456" endtime="20201030 15:52:34.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.527" endtime="20201030 15:52:34.866"></status>
</kw>
<msg timestamp="20201030 15:52:34.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040912611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.524" endtime="20201030 15:52:34.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040807403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040912611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.875" endtime="20201030 15:52:34.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.893" endtime="20201030 15:52:34.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.517" endtime="20201030 15:52:34.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.512" endtime="20201030 15:52:34.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.910" level="INFO">${RESULT} = [{'diff': 0.00010520800000000247}, {'diff': 0.00010494400000000265}, {'diff': 0.00010515300000000366}, {'diff': 0.00010513899999999715}, {'diff': 0.00010558299999999937}, {'diff': 0.000105165999999996...</msg>
<status status="PASS" starttime="20201030 15:52:34.902" endtime="20201030 15:52:34.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.919" level="INFO">${ACCURACY} = {'diff': [0.00010520800000000247, 0.00010494400000000265, 0.00010515300000000366, 0.00010513899999999715, 0.00010558299999999937, 0.00010516599999999682, 0.00010525000000000118, 0.00010493100000000255...</msg>
<status status="PASS" starttime="20201030 15:52:34.912" endtime="20201030 15:52:34.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.930" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.928" endtime="20201030 15:52:34.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.935" level="INFO">VALUE: [0.00010520800000000247, 0.00010494400000000265, 0.00010515300000000366, 0.00010513899999999715, 0.00010558299999999937, 0.00010516599999999682, 0.00010525000000000118, 0.00010493100000000255, 0.00010493000000000308, 0.00010550000000000143, 0.00010525000000000118, 0.00010481899999999905, 0.00010486099999999776, 0.00010554200000000014, 0.00010565299999999722, 0.00010523599999999467, 0.00010538799999999793, 0.00010559699999999894, 0.00010566600000000426, 0.00010481899999999905, 0.00010515199999999725, 0.00010566700000000373, 0.00010561099999999851, 0.0001051810000000028, 0.00010540300000000391, 0.00010565300000000416, 0.00010504100000000016, 0.00010490200000000394, 0.00010516699999999629, 0.00010561099999999851, 0.00010481899999999905, 0.00010544400000000315, 0.00010508299999999887, 0.00010552800000000057, 0.00010526399999999381, 0.00010545900000000219, 0.00010508400000000528, 0.0001053889999999974, 0.00010533299999999912, 0.00010545800000000272, 0.0001050689999999993, 0.00010541700000000348, 0.00010544399999999621, 0.0001056810000000033, 0.00010470900000000144, 0.0001047360000000011, 0.00010470900000000144, 0.0001051810000000028, 0.00010548600000000186, 0.00010494400000000265]</msg>
<status status="PASS" starttime="20201030 15:52:34.932" endtime="20201030 15:52:34.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.921" endtime="20201030 15:52:34.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.948" endtime="20201030 15:52:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.943" endtime="20201030 15:52:34.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.941" endtime="20201030 15:52:34.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.451" endtime="20201030 15:52:34.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.450" endtime="20201030 15:52:34.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.764" endtime="20201030 15:52:34.973"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:42.619" endtime="20201030 15:52:34.974" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.991" endtime="20201030 15:52:35.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.987" endtime="20201030 15:52:35.014"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.053" endtime="20201030 15:52:35.071"></status>
</kw>
<msg timestamp="20201030 15:52:35.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.050" endtime="20201030 15:52:35.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.075" endtime="20201030 15:52:35.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.085" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:35.081" endtime="20201030 15:52:35.086"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.043" endtime="20201030 15:52:35.088"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.036" endtime="20201030 15:52:35.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.033" endtime="20201030 15:52:35.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:35.098" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:35.097" endtime="20201030 15:52:35.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.092" endtime="20201030 15:52:35.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.026" endtime="20201030 15:52:35.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.024" endtime="20201030 15:52:35.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.101" endtime="20201030 15:52:35.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.020" endtime="20201030 15:52:35.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.016" endtime="20201030 15:52:35.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.985" endtime="20201030 15:52:35.108"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.133" endtime="20201030 15:52:35.150"></status>
</kw>
<msg timestamp="20201030 15:52:35.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.129" endtime="20201030 15:52:35.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.154" endtime="20201030 15:52:35.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.161" endtime="20201030 15:52:35.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.122" endtime="20201030 15:52:35.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.117" endtime="20201030 15:52:35.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.184" endtime="20201030 15:52:35.532"></status>
</kw>
<msg timestamp="20201030 15:52:35.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135064319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135070264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.180" endtime="20201030 15:52:35.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135064319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135070264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.542" endtime="20201030 15:52:35.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.560" endtime="20201030 15:52:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.173" endtime="20201030 15:52:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.169" endtime="20201030 15:52:35.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.578" level="INFO">${RESULT} = [{'diff': 5.9450000000071945e-06}, {'diff': 5.985999999985614e-06}, {'diff': 5.472000000006361e-06}, {'diff': 6.0000000000060005e-06}, {'diff': 5.9720000000207385e-06}, {'diff': 5.444999999992817e-06}...</msg>
<status status="PASS" starttime="20201030 15:52:35.569" endtime="20201030 15:52:35.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.587" level="INFO">${ACCURACY} = {'diff': [5.9450000000071945e-06, 5.985999999985614e-06, 5.472000000006361e-06, 6.0000000000060005e-06, 5.9720000000207385e-06, 5.444999999992817e-06, 5.485999999998992e-06, 6.0000000000060005e-06, 5....</msg>
<status status="PASS" starttime="20201030 15:52:35.580" endtime="20201030 15:52:35.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.599" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.596" endtime="20201030 15:52:35.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.604" level="INFO">VALUE: [5.9450000000071945e-06, 5.985999999985614e-06, 5.472000000006361e-06, 6.0000000000060005e-06, 5.9720000000207385e-06, 5.444999999992817e-06, 5.485999999998992e-06, 6.0000000000060005e-06, 5.471999999978605e-06, 5.444000000021099e-06, 5.500000000019378e-06, 6.0000000000060005e-06, 5.457999999985974e-06, 5.472000000006361e-06, 6.0000000000060005e-06, 5.471999999978605e-06, 5.472000000006361e-06, 5.45800000001373e-06, 5.473000000005834e-06, 6.0000000000060005e-06, 6.0000000000060005e-06, 5.486999999998465e-06, 5.9860000000133695e-06, 5.388999999994537e-06, 6.0000000000060005e-06, 6.0000000000060005e-06, 5.485999999998992e-06, 5.541999999997271e-06, 5.473000000005834e-06, 6.0000000000060005e-06, 5.473000000005834e-06, 6.0000000000060005e-06, 6.0000000000060005e-06, 5.985999999985614e-06, 6.0000000000060005e-06, 6.52800000000564e-06, 5.541999999997271e-06, 5.472000000006361e-06, 5.431000000000186e-06, 6.0000000000060005e-06, 5.472000000006361e-06, 6.0139999999986316e-06, 6.0000000000060005e-06, 6.0139999999986316e-06, 5.457999999985974e-06, 5.457999999985974e-06, 6.0139999999986316e-06, 6.0000000000060005e-06, 6.0550000000048065e-06, 5.471999999978605e-06]</msg>
<status status="PASS" starttime="20201030 15:52:35.601" endtime="20201030 15:52:35.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.589" endtime="20201030 15:52:35.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.617" endtime="20201030 15:52:35.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.612" endtime="20201030 15:52:35.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.609" endtime="20201030 15:52:35.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.112" endtime="20201030 15:52:35.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.111" endtime="20201030 15:52:35.642"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.664" endtime="20201030 15:52:35.685"></status>
</kw>
<msg timestamp="20201030 15:52:35.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.661" endtime="20201030 15:52:35.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.688" endtime="20201030 15:52:35.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.694" endtime="20201030 15:52:35.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.654" endtime="20201030 15:52:35.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.648" endtime="20201030 15:52:35.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.718" endtime="20201030 15:52:36.022"></status>
</kw>
<msg timestamp="20201030 15:52:36.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042922917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042929444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.714" endtime="20201030 15:52:36.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042922917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042929444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.026" endtime="20201030 15:52:36.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.034" endtime="20201030 15:52:36.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.707" endtime="20201030 15:52:36.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.702" endtime="20201030 15:52:36.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.042" level="INFO">${RESULT} = [{'diff': 6.526999999999228e-06}, {'diff': 7.040999999999298e-06}, {'diff': 6.568999999997938e-06}, {'diff': 7.055000000005807e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 7.068999999998438e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:36.038" endtime="20201030 15:52:36.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.047" level="INFO">${ACCURACY} = {'diff': [6.526999999999228e-06, 7.040999999999298e-06, 6.568999999997938e-06, 7.055000000005807e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.054...</msg>
<status status="PASS" starttime="20201030 15:52:36.043" endtime="20201030 15:52:36.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.052" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.051" endtime="20201030 15:52:36.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.054" level="INFO">VALUE: [6.526999999999228e-06, 7.040999999999298e-06, 6.568999999997938e-06, 7.055000000005807e-06, 7.0419999999987715e-06, 7.068999999998438e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.05600000000528e-06, 6.512999999999658e-06, 7.055999999998341e-06, 7.040999999999298e-06, 7.068999999998438e-06, 7.069999999997911e-06, 6.5279999999987015e-06, 6.4729999999998955e-06, 6.52800000000564e-06, 7.0969999999975775e-06, 6.5279999999987015e-06, 7.055999999998341e-06, 6.541000000005737e-06, 7.110999999997147e-06, 6.5279999999987015e-06, 6.527000000006167e-06, 6.5279999999987015e-06, 7.000000000000062e-06, 6.52800000000564e-06, 7.054999999998868e-06, 6.597000000004016e-06, 7.055999999998341e-06, 7.0419999999987715e-06, 6.5279999999987015e-06, 7.055999999998341e-06, 7.054999999998868e-06, 6.52800000000564e-06, 7.040999999999298e-06, 7.055999999998341e-06, 6.485999999999992e-06, 7.013999999999632e-06, 7.054999999998868e-06, 6.499999999999562e-06, 6.986000000000492e-06, 6.5140000000060705e-06, 7.040999999999298e-06, 6.555999999997841e-06, 6.555000000005307e-06, 7.055999999998341e-06, 6.5279999999987015e-06, 7.0419999999987715e-06]</msg>
<status status="PASS" starttime="20201030 15:52:36.053" endtime="20201030 15:52:36.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.048" endtime="20201030 15:52:36.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.061" endtime="20201030 15:52:36.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.058" endtime="20201030 15:52:36.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.057" endtime="20201030 15:52:36.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.644" endtime="20201030 15:52:36.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.643" endtime="20201030 15:52:36.082"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.093" endtime="20201030 15:52:36.107"></status>
</kw>
<msg timestamp="20201030 15:52:36.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.091" endtime="20201030 15:52:36.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.109" endtime="20201030 15:52:36.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.112" endtime="20201030 15:52:36.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.088" endtime="20201030 15:52:36.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.085" endtime="20201030 15:52:36.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.123" endtime="20201030 15:52:36.407"></status>
</kw>
<msg timestamp="20201030 15:52:36.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024560861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024568972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.121" endtime="20201030 15:52:36.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024560861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024568972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.412" endtime="20201030 15:52:36.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.420" endtime="20201030 15:52:36.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.118" endtime="20201030 15:52:36.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.116" endtime="20201030 15:52:36.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.428" level="INFO">${RESULT} = [{'diff': 8.111000000001617e-06}, {'diff': 8.111000000001617e-06}, {'diff': 8.069999999998911e-06}, {'diff': 8.097999999998051e-06}, {'diff': 7.583999999997981e-06}, {'diff': 7.568999999998938e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.424" endtime="20201030 15:52:36.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.433" level="INFO">${ACCURACY} = {'diff': [8.111000000001617e-06, 8.111000000001617e-06, 8.069999999998911e-06, 8.097999999998051e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.540999999999798e-06, 8.110999999998147e-06, 8.0969...</msg>
<status status="PASS" starttime="20201030 15:52:36.429" endtime="20201030 15:52:36.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.438" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.437" endtime="20201030 15:52:36.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.441" level="INFO">VALUE: [8.111000000001617e-06, 8.111000000001617e-06, 8.069999999998911e-06, 8.097999999998051e-06, 7.583999999997981e-06, 7.568999999998938e-06, 7.540999999999798e-06, 8.110999999998147e-06, 8.096999999998578e-06, 7.597000000001547e-06, 7.568999999998938e-06, 7.097000000001047e-06, 7.527999999999702e-06, 7.527999999999702e-06, 7.582999999998508e-06, 7.569000000002407e-06, 7.598000000001021e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 8.11200000000109e-06, 7.583000000001977e-06, 7.570000000001881e-06, 8.041000000000298e-06, 7.582999999998508e-06, 8.111000000001617e-06, 7.556000000002311e-06, 7.568999999998938e-06, 7.597000000001547e-06, 8.097000000002047e-06, 7.5969999999980775e-06, 8.054999999999868e-06, 7.582999999998508e-06, 7.583000000001977e-06, 7.584000000001451e-06, 7.583999999997981e-06, 7.597999999997551e-06, 7.583000000001977e-06, 8.110999999998147e-06, 8.111000000001617e-06, 7.5969999999980775e-06, 7.055999999998341e-06, 8.124999999997717e-06, 7.597000000001547e-06, 8.110999999998147e-06, 7.582999999998508e-06, 7.514000000000132e-06, 8.110999999998147e-06, 8.139000000000757e-06, 7.582999999998508e-06, 7.584000000001451e-06]</msg>
<status status="PASS" starttime="20201030 15:52:36.439" endtime="20201030 15:52:36.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.434" endtime="20201030 15:52:36.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.446" endtime="20201030 15:52:36.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.444" endtime="20201030 15:52:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.443" endtime="20201030 15:52:36.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.083" endtime="20201030 15:52:36.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.082" endtime="20201030 15:52:36.474"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.485" endtime="20201030 15:52:36.500"></status>
</kw>
<msg timestamp="20201030 15:52:36.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.483" endtime="20201030 15:52:36.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.501" endtime="20201030 15:52:36.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.504" endtime="20201030 15:52:36.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.480" endtime="20201030 15:52:36.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.477" endtime="20201030 15:52:36.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.515" endtime="20201030 15:52:36.841"></status>
</kw>
<msg timestamp="20201030 15:52:36.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030975764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030984417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.513" endtime="20201030 15:52:36.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030975764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030984417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.850" endtime="20201030 15:52:36.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.869" endtime="20201030 15:52:36.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.510" endtime="20201030 15:52:36.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.508" endtime="20201030 15:52:36.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.886" level="INFO">${RESULT} = [{'diff': 8.653000000000827e-06}, {'diff': 9.165999999997954e-06}, {'diff': 8.596999999999078e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.625000000001687e-06}, {'diff': 9.166000000001423e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:36.877" endtime="20201030 15:52:36.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.897" level="INFO">${ACCURACY} = {'diff': [8.653000000000827e-06, 9.165999999997954e-06, 8.596999999999078e-06, 8.639000000001257e-06, 8.625000000001687e-06, 9.166000000001423e-06, 8.652999999997357e-06, 8.138999999997287e-06, 8.6249...</msg>
<status status="PASS" starttime="20201030 15:52:36.888" endtime="20201030 15:52:36.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.908" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.906" endtime="20201030 15:52:36.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.913" level="INFO">VALUE: [8.653000000000827e-06, 9.165999999997954e-06, 8.596999999999078e-06, 8.639000000001257e-06, 8.625000000001687e-06, 9.166000000001423e-06, 8.652999999997357e-06, 8.138999999997287e-06, 8.624999999998217e-06, 9.166999999997427e-06, 8.582999999999508e-06, 8.638000000001783e-06, 9.181000000000467e-06, 8.624999999998217e-06, 8.638999999997787e-06, 9.208000000000133e-06, 8.111000000001617e-06, 8.110999999998147e-06, 9.166999999997427e-06, 8.638000000001783e-06, 9.166999999997427e-06, 8.624999999998217e-06, 8.625000000005156e-06, 9.167000000004366e-06, 8.638999999997787e-06, 9.181000000003936e-06, 8.624999999998217e-06, 8.638999999997787e-06, 8.637999999998314e-06, 8.625000000005156e-06, 9.167000000004366e-06, 8.638999999997787e-06, 9.151999999998384e-06, 8.624999999998217e-06, 8.638999999997787e-06, 9.166999999997427e-06, 8.665999999997454e-06, 8.624999999998217e-06, 9.180000000004462e-06, 8.638999999997787e-06, 8.693999999996593e-06, 8.639000000004726e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.638999999997787e-06, 8.624999999998217e-06, 8.638999999997787e-06, 9.152999999997857e-06, 8.653000000004296e-06, 8.638000000005253e-06]</msg>
<status status="PASS" starttime="20201030 15:52:36.910" endtime="20201030 15:52:36.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.899" endtime="20201030 15:52:36.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.926" endtime="20201030 15:52:36.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.921" endtime="20201030 15:52:36.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.919" endtime="20201030 15:52:36.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.475" endtime="20201030 15:52:36.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.474" endtime="20201030 15:52:36.950"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.973" endtime="20201030 15:52:36.991"></status>
</kw>
<msg timestamp="20201030 15:52:36.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.970" endtime="20201030 15:52:36.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.994" endtime="20201030 15:52:36.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.001" endtime="20201030 15:52:37.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.962" endtime="20201030 15:52:37.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.957" endtime="20201030 15:52:37.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.024" endtime="20201030 15:52:37.360"></status>
</kw>
<msg timestamp="20201030 15:52:37.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040750361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040759542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.020" endtime="20201030 15:52:37.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040750361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040759542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.369" endtime="20201030 15:52:37.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.388" endtime="20201030 15:52:37.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.013" endtime="20201030 15:52:37.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.009" endtime="20201030 15:52:37.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.405" level="INFO">${RESULT} = [{'diff': 9.181000000003936e-06}, {'diff': 9.180000000004462e-06}, {'diff': 9.707999999997163e-06}, {'diff': 1.0223000000003646e-05}, {'diff': 1.0207999999997663e-05}, {'diff': 1.0221999999997233e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:37.396" endtime="20201030 15:52:37.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.414" level="INFO">${ACCURACY} = {'diff': [9.181000000003936e-06, 9.180000000004462e-06, 9.707999999997163e-06, 1.0223000000003646e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0222000000004172e-05, 9.708999999996637e-06, 9....</msg>
<status status="PASS" starttime="20201030 15:52:37.407" endtime="20201030 15:52:37.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.425" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.423" endtime="20201030 15:52:37.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.431" level="INFO">VALUE: [9.181000000003936e-06, 9.180000000004462e-06, 9.707999999997163e-06, 1.0223000000003646e-05, 1.0207999999997663e-05, 1.0221999999997233e-05, 1.0222000000004172e-05, 9.708999999996637e-06, 9.707999999997163e-06, 1.0235999999996803e-05, 9.680999999997497e-06, 9.707999999997163e-06, 1.0222999999996707e-05, 1.0236000000003742e-05, 9.680999999997497e-06, 1.0222000000004172e-05, 9.708999999996637e-06, 1.0208999999997137e-05, 9.652999999998357e-06, 9.695000000004006e-06, 9.679999999998024e-06, 9.167000000004366e-06, 9.695000000004006e-06, 9.708999999996637e-06, 1.0221999999997233e-05, 9.694999999997067e-06, 1.0250000000003312e-05, 9.708999999996637e-06, 9.749999999995873e-06, 9.679999999998024e-06, 9.166999999997427e-06, 1.0221999999997233e-05, 9.695000000004006e-06, 9.652999999998357e-06, 9.694999999997067e-06, 9.708000000004102e-06, 9.679999999998024e-06, 9.166999999997427e-06, 9.166000000004892e-06, 1.0223000000003646e-05, 9.665999999998454e-06, 9.181000000003936e-06, 9.193999999997093e-06, 9.679999999998024e-06, 1.0222999999996707e-05, 1.0221999999997233e-05, 9.694999999997067e-06, 9.694000000004532e-06, 9.667000000004866e-06, 1.0208000000004602e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.428" endtime="20201030 15:52:37.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.416" endtime="20201030 15:52:37.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.443" endtime="20201030 15:52:37.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.439" endtime="20201030 15:52:37.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.436" endtime="20201030 15:52:37.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.952" endtime="20201030 15:52:37.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.951" endtime="20201030 15:52:37.468"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.490" endtime="20201030 15:52:37.508"></status>
</kw>
<msg timestamp="20201030 15:52:37.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.487" endtime="20201030 15:52:37.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.512" endtime="20201030 15:52:37.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.518" endtime="20201030 15:52:37.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.480" endtime="20201030 15:52:37.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.474" endtime="20201030 15:52:37.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.543" endtime="20201030 15:52:37.877"></status>
</kw>
<msg timestamp="20201030 15:52:37.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040768111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040778861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.539" endtime="20201030 15:52:37.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040768111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040778861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.886" endtime="20201030 15:52:37.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.905" endtime="20201030 15:52:37.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.532" endtime="20201030 15:52:37.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.527" endtime="20201030 15:52:37.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.922" level="INFO">${RESULT} = [{'diff': 1.0749999999996873e-05}, {'diff': 1.0707999999998163e-05}, {'diff': 1.0208999999997137e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.0222000000004172e-...</msg>
<status status="PASS" starttime="20201030 15:52:37.913" endtime="20201030 15:52:37.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.932" level="INFO">${ACCURACY} = {'diff': [1.0749999999996873e-05, 1.0707999999998163e-05, 1.0208999999997137e-05, 1.1249999999997373e-05, 1.1263999999996943e-05, 1.0222000000004172e-05, 1.0707999999998163e-05, 1.1235999999997803e-05...</msg>
<status status="PASS" starttime="20201030 15:52:37.924" endtime="20201030 15:52:37.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.942" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.940" endtime="20201030 15:52:37.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.948" level="INFO">VALUE: [1.0749999999996873e-05, 1.0707999999998163e-05, 1.0208999999997137e-05, 1.1249999999997373e-05, 1.1263999999996943e-05, 1.0222000000004172e-05, 1.0707999999998163e-05, 1.1235999999997803e-05, 1.0736999999996777e-05, 1.0722000000004672e-05, 1.0806000000002092e-05, 1.0750000000003812e-05, 1.0750000000003812e-05, 1.0736000000004242e-05, 1.0750000000003812e-05, 1.0263999999995943e-05, 1.0707999999998163e-05, 1.0750000000003812e-05, 1.1278000000003452e-05, 1.0777000000003478e-05, 1.0680999999998497e-05, 1.1263999999996943e-05, 1.0749999999996873e-05, 1.0235999999996803e-05, 1.0235999999996803e-05, 1.0236000000003742e-05, 1.0763000000003908e-05, 1.1347999999994363e-05, 1.1278000000003452e-05, 1.0736000000004242e-05, 1.1278000000003452e-05, 1.0764000000003382e-05, 1.0249999999996373e-05, 1.0735999999997303e-05, 1.129099999999661e-05, 1.0235999999996803e-05, 1.0749999999996873e-05, 1.0735999999997303e-05, 1.0749999999996873e-05, 1.1278000000003452e-05, 1.1263999999996943e-05, 1.1236000000004742e-05, 1.1278000000003452e-05, 1.0778000000002952e-05, 1.0221999999997233e-05, 1.0749999999996873e-05, 1.0749999999996873e-05, 1.0222000000004172e-05, 1.0737000000003716e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.945" endtime="20201030 15:52:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.933" endtime="20201030 15:52:37.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.962" endtime="20201030 15:52:37.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.956" endtime="20201030 15:52:37.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.953" endtime="20201030 15:52:37.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.470" endtime="20201030 15:52:37.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.469" endtime="20201030 15:52:37.986"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.009" endtime="20201030 15:52:38.026"></status>
</kw>
<msg timestamp="20201030 15:52:38.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.006" endtime="20201030 15:52:38.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.030" endtime="20201030 15:52:38.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.036" endtime="20201030 15:52:38.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.999" endtime="20201030 15:52:38.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.993" endtime="20201030 15:52:38.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.059" endtime="20201030 15:52:38.392"></status>
</kw>
<msg timestamp="20201030 15:52:38.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040871222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:38.056" endtime="20201030 15:52:38.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040871222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:38.401" endtime="20201030 15:52:38.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.420" endtime="20201030 15:52:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.049" endtime="20201030 15:52:38.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.044" endtime="20201030 15:52:38.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.437" level="INFO">${RESULT} = [{'diff': 1.1278000000003452e-05}, {'diff': 1.1292000000003022e-05}, {'diff': 1.1819000000003188e-05}, {'diff': 1.1319999999995223e-05}, {'diff': 1.180499999999668e-05}, {'diff': 1.1292000000003022e-0...</msg>
<status status="PASS" starttime="20201030 15:52:38.428" endtime="20201030 15:52:38.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.447" level="INFO">${ACCURACY} = {'diff': [1.1278000000003452e-05, 1.1292000000003022e-05, 1.1819000000003188e-05, 1.1319999999995223e-05, 1.180499999999668e-05, 1.1292000000003022e-05, 1.1805999999996153e-05, 1.1806000000003092e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:38.439" endtime="20201030 15:52:38.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.458" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.456" endtime="20201030 15:52:38.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.463" level="INFO">VALUE: [1.1278000000003452e-05, 1.1292000000003022e-05, 1.1819000000003188e-05, 1.1319999999995223e-05, 1.180499999999668e-05, 1.1292000000003022e-05, 1.1805999999996153e-05, 1.1806000000003092e-05, 1.1277999999996513e-05, 1.1806000000003092e-05, 1.1763999999997443e-05, 1.1749999999997873e-05, 1.1263999999996943e-05, 1.180499999999668e-05, 1.180499999999668e-05, 1.1278000000003452e-05, 1.2333000000003258e-05, 1.1791999999996583e-05, 1.1278000000003452e-05, 1.1805000000003618e-05, 1.2347000000002828e-05, 1.179099999999711e-05, 1.2332999999996319e-05, 1.1805999999996153e-05, 1.1805999999996153e-05, 1.129099999999661e-05, 1.1791000000004048e-05, 1.1249999999997373e-05, 1.1820000000002662e-05, 1.1291999999996083e-05, 1.180499999999668e-05, 1.1806000000003092e-05, 1.1778000000003952e-05, 1.1834000000002232e-05, 1.231899999999675e-05, 1.230499999999718e-05, 1.1249999999997373e-05, 1.1263999999996943e-05, 1.1764000000004382e-05, 1.1277999999996513e-05, 1.177699999999754e-05, 1.1749999999997873e-05, 1.2333999999995793e-05, 1.2333999999995793e-05, 1.2306000000003592e-05, 1.1889000000001038e-05, 1.181899999999625e-05, 1.1805000000003618e-05, 1.2334000000002732e-05, 1.179099999999711e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.460" endtime="20201030 15:52:38.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.449" endtime="20201030 15:52:38.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.476" endtime="20201030 15:52:38.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.471" endtime="20201030 15:52:38.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.469" endtime="20201030 15:52:38.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.988" endtime="20201030 15:52:38.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.987" endtime="20201030 15:52:38.500"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.523" endtime="20201030 15:52:38.541"></status>
</kw>
<msg timestamp="20201030 15:52:38.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.520" endtime="20201030 15:52:38.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.544" endtime="20201030 15:52:38.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.550" endtime="20201030 15:52:38.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.513" endtime="20201030 15:52:38.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.507" endtime="20201030 15:52:38.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.573" endtime="20201030 15:52:38.906"></status>
</kw>
<msg timestamp="20201030 15:52:38.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040737625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.570" endtime="20201030 15:52:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040724694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040737625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.916" endtime="20201030 15:52:38.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.934" endtime="20201030 15:52:38.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.563" endtime="20201030 15:52:38.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.558" endtime="20201030 15:52:38.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.951" level="INFO">${RESULT} = [{'diff': 1.2931000000000747e-05}, {'diff': 1.3389000000002538e-05}, {'diff': 1.2861000000002898e-05}, {'diff': 1.2861000000002898e-05}, {'diff': 1.2861000000002898e-05}, {'diff': 1.2332999999996319e-...</msg>
<status status="PASS" starttime="20201030 15:52:38.943" endtime="20201030 15:52:38.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.962" level="INFO">${ACCURACY} = {'diff': [1.2931000000000747e-05, 1.3389000000002538e-05, 1.2861000000002898e-05, 1.2861000000002898e-05, 1.2861000000002898e-05, 1.2332999999996319e-05, 1.2319000000003688e-05, 1.3403000000002108e-05...</msg>
<status status="PASS" starttime="20201030 15:52:38.953" endtime="20201030 15:52:38.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.973" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.971" endtime="20201030 15:52:38.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.979" level="INFO">VALUE: [1.2931000000000747e-05, 1.3389000000002538e-05, 1.2861000000002898e-05, 1.2861000000002898e-05, 1.2861000000002898e-05, 1.2332999999996319e-05, 1.2319000000003688e-05, 1.3403000000002108e-05, 1.3401999999995695e-05, 1.2889000000002038e-05, 1.2874999999995529e-05, 1.2860999999995959e-05, 1.2875000000002468e-05, 1.2874999999995529e-05, 1.2861000000002898e-05, 1.3389000000002538e-05, 1.3389000000002538e-05, 1.2320000000003162e-05, 1.2348000000002302e-05, 1.3389000000002538e-05, 1.2861000000002898e-05, 1.2332999999996319e-05, 1.280499999999768e-05, 1.2916000000001704e-05, 1.2861000000002898e-05, 1.2347000000002828e-05, 1.2333000000003258e-05, 1.2846999999996389e-05, 1.3388000000003064e-05, 1.2860999999995959e-05, 1.2333000000003258e-05, 1.2860999999995959e-05, 1.2903000000001608e-05, 1.2902999999994669e-05, 1.2846999999996389e-05, 1.2888999999995099e-05, 1.2277999999997513e-05, 1.2847000000003328e-05, 1.2333000000003258e-05, 1.3389000000002538e-05, 1.2846999999996389e-05, 1.2848000000002802e-05, 1.2861000000002898e-05, 1.2334000000002732e-05, 1.2847999999995863e-05, 1.231899999999675e-05, 1.2334000000002732e-05, 1.2847000000003328e-05, 1.2861000000002898e-05, 1.2860999999995959e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.976" endtime="20201030 15:52:38.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.964" endtime="20201030 15:52:38.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.991" endtime="20201030 15:52:39.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.987" endtime="20201030 15:52:39.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.984" endtime="20201030 15:52:39.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.503" endtime="20201030 15:52:39.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.501" endtime="20201030 15:52:39.016"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.038" endtime="20201030 15:52:39.056"></status>
</kw>
<msg timestamp="20201030 15:52:39.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.035" endtime="20201030 15:52:39.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.059" endtime="20201030 15:52:39.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.066" endtime="20201030 15:52:39.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.028" endtime="20201030 15:52:39.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.022" endtime="20201030 15:52:39.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.089" endtime="20201030 15:52:39.423"></status>
</kw>
<msg timestamp="20201030 15:52:39.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040683931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040697861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.085" endtime="20201030 15:52:39.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040683931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040697861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.432" endtime="20201030 15:52:39.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.451" endtime="20201030 15:52:39.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.078" endtime="20201030 15:52:39.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.073" endtime="20201030 15:52:39.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.468" level="INFO">${RESULT} = [{'diff': 1.3930000000002274e-05}, {'diff': 1.3916999999995239e-05}, {'diff': 1.4458000000001914e-05}, {'diff': 1.3388999999995599e-05}, {'diff': 1.3903000000002608e-05}, {'diff': 1.3930000000002274e-...</msg>
<status status="PASS" starttime="20201030 15:52:39.460" endtime="20201030 15:52:39.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.478" level="INFO">${ACCURACY} = {'diff': [1.3930000000002274e-05, 1.3916999999995239e-05, 1.4458000000001914e-05, 1.3388999999995599e-05, 1.3903000000002608e-05, 1.3930000000002274e-05, 1.3931000000001748e-05, 1.4486000000001054e-05...</msg>
<status status="PASS" starttime="20201030 15:52:39.470" endtime="20201030 15:52:39.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.488" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.486" endtime="20201030 15:52:39.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.494" level="INFO">VALUE: [1.3930000000002274e-05, 1.3916999999995239e-05, 1.4458000000001914e-05, 1.3388999999995599e-05, 1.3903000000002608e-05, 1.3930000000002274e-05, 1.3931000000001748e-05, 1.4486000000001054e-05, 1.3915999999995765e-05, 1.3847000000004328e-05, 1.3931000000001748e-05, 1.3875000000003468e-05, 1.3902999999995669e-05, 1.4458000000001914e-05, 1.3930999999994809e-05, 1.3403000000002108e-05, 1.3958000000001414e-05, 1.3903000000002608e-05, 1.4430000000002774e-05, 1.3916999999995239e-05, 1.4458000000001914e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3360999999996459e-05, 1.3929999999995335e-05, 1.3389000000002538e-05, 1.3375000000002968e-05, 1.3916000000002704e-05, 1.3972000000000984e-05, 1.3389000000002538e-05, 1.3917000000002178e-05, 1.3929999999995335e-05, 1.3902999999995669e-05, 1.3958000000001414e-05, 1.3888999999996099e-05, 1.3917000000002178e-05, 1.3958000000001414e-05, 1.3916999999995239e-05, 1.3388999999995599e-05, 1.3347999999996363e-05, 1.3374999999996029e-05, 1.3389000000002538e-05, 1.3916999999995239e-05, 1.3945000000001317e-05, 1.3902999999995669e-05, 1.3375000000002968e-05, 1.3931000000001748e-05, 1.3375000000002968e-05, 1.3972000000000984e-05, 1.3902000000003134e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.491" endtime="20201030 15:52:39.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.479" endtime="20201030 15:52:39.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.506" endtime="20201030 15:52:39.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.502" endtime="20201030 15:52:39.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.500" endtime="20201030 15:52:39.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.018" endtime="20201030 15:52:39.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.017" endtime="20201030 15:52:39.531"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.554" endtime="20201030 15:52:39.578"></status>
</kw>
<msg timestamp="20201030 15:52:39.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.550" endtime="20201030 15:52:39.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.581" endtime="20201030 15:52:39.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.588" endtime="20201030 15:52:39.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.543" endtime="20201030 15:52:39.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.538" endtime="20201030 15:52:39.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.611" endtime="20201030 15:52:39.918"></status>
</kw>
<msg timestamp="20201030 15:52:39.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046545889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046560333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.608" endtime="20201030 15:52:39.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046545889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046560333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.922" endtime="20201030 15:52:39.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.930" endtime="20201030 15:52:39.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.600" endtime="20201030 15:52:39.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.596" endtime="20201030 15:52:39.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.938" level="INFO">${RESULT} = [{'diff': 1.4444000000002344e-05}, {'diff': 1.4486000000001054e-05}, {'diff': 1.4959000000001887e-05}, {'diff': 1.4986000000001554e-05}, {'diff': 1.4958000000002414e-05}, {'diff': 1.5500000000001624e-...</msg>
<status status="PASS" starttime="20201030 15:52:39.934" endtime="20201030 15:52:39.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.943" level="INFO">${ACCURACY} = {'diff': [1.4444000000002344e-05, 1.4486000000001054e-05, 1.4959000000001887e-05, 1.4986000000001554e-05, 1.4958000000002414e-05, 1.5500000000001624e-05, 1.4971999999995045e-05, 1.4987000000001027e-05...</msg>
<status status="PASS" starttime="20201030 15:52:39.939" endtime="20201030 15:52:39.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.948" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.947" endtime="20201030 15:52:39.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.951" level="INFO">VALUE: [1.4444000000002344e-05, 1.4486000000001054e-05, 1.4959000000001887e-05, 1.4986000000001554e-05, 1.4958000000002414e-05, 1.5500000000001624e-05, 1.4971999999995045e-05, 1.4987000000001027e-05, 1.4986000000001554e-05, 1.5000000000001124e-05, 1.5000000000001124e-05, 1.4971999999995045e-05, 1.4458000000001914e-05, 1.5514000000001194e-05, 1.4445000000001817e-05, 1.4973000000001457e-05, 1.4985999999994615e-05, 1.4459000000001387e-05, 1.4402999999996169e-05, 1.4445000000001817e-05, 1.4444000000002344e-05, 1.5485999999995115e-05, 1.5500000000001624e-05, 1.4444000000002344e-05, 1.4444000000002344e-05, 1.5041999999999833e-05, 1.5528000000000763e-05, 1.4445000000001817e-05, 1.4445000000001817e-05, 1.4971999999995045e-05, 1.4443999999995405e-05, 1.4443999999995405e-05, 1.4972000000001984e-05, 1.4388999999996599e-05, 1.4514000000000193e-05, 1.5041999999999833e-05, 1.4887999999997625e-05, 1.4972000000001984e-05, 1.4458000000001914e-05, 1.5041999999999833e-05, 1.4444999999994879e-05, 1.4986000000001554e-05, 1.4888999999997099e-05, 1.4972000000001984e-05, 1.4972000000001984e-05, 1.4986000000001554e-05, 1.4444000000002344e-05, 1.4458000000001914e-05, 1.4472000000001484e-05, 1.4931000000002748e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.949" endtime="20201030 15:52:39.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.943" endtime="20201030 15:52:39.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.957" endtime="20201030 15:52:39.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.954" endtime="20201030 15:52:39.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.953" endtime="20201030 15:52:39.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.533" endtime="20201030 15:52:39.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.532" endtime="20201030 15:52:39.978"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.989" endtime="20201030 15:52:40.003"></status>
</kw>
<msg timestamp="20201030 15:52:40.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.987" endtime="20201030 15:52:40.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.005" endtime="20201030 15:52:40.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.008" endtime="20201030 15:52:40.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.984" endtime="20201030 15:52:40.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.981" endtime="20201030 15:52:40.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.019" endtime="20201030 15:52:40.356"></status>
</kw>
<msg timestamp="20201030 15:52:40.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024216792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.017" endtime="20201030 15:52:40.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024216792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024232306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.365" endtime="20201030 15:52:40.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.384" endtime="20201030 15:52:40.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.014" endtime="20201030 15:52:40.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.012" endtime="20201030 15:52:40.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.413" level="INFO">${RESULT} = [{'diff': 1.5513999999997724e-05}, {'diff': 1.5485999999998584e-05}, {'diff': 1.5485999999998584e-05}, {'diff': 1.551300000000172e-05}, {'diff': 1.6027999999997794e-05}, {'diff': 1.5499999999998154e-0...</msg>
<status status="PASS" starttime="20201030 15:52:40.400" endtime="20201030 15:52:40.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.429" level="INFO">${ACCURACY} = {'diff': [1.5513999999997724e-05, 1.5485999999998584e-05, 1.5485999999998584e-05, 1.551300000000172e-05, 1.6027999999997794e-05, 1.5499999999998154e-05, 1.5569e-05, 1.5514000000001194e-05, 1.604200000...</msg>
<status status="PASS" starttime="20201030 15:52:40.416" endtime="20201030 15:52:40.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.442" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.440" endtime="20201030 15:52:40.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.448" level="INFO">VALUE: [1.5513999999997724e-05, 1.5485999999998584e-05, 1.5485999999998584e-05, 1.551300000000172e-05, 1.6027999999997794e-05, 1.5499999999998154e-05, 1.5569e-05, 1.5514000000001194e-05, 1.6042000000000833e-05, 1.5471999999999014e-05, 1.602699999999832e-05, 1.5514000000001194e-05, 1.5514000000001194e-05, 1.5499999999998154e-05, 1.5499999999998154e-05, 1.6027999999997794e-05, 1.5430000000000305e-05, 1.5485999999998584e-05, 1.60690000000005e-05, 1.6027999999997794e-05, 1.604099999999789e-05, 1.5486000000002054e-05, 1.5485999999998584e-05, 1.5555999999999903e-05, 1.602699999999832e-05, 1.6028000000001263e-05, 1.5499999999998154e-05, 1.6013999999998224e-05, 1.5972999999998988e-05, 1.604099999999789e-05, 1.5569e-05, 1.611099999999921e-05, 1.6041999999997364e-05, 1.5514000000001194e-05, 1.5971999999999514e-05, 1.5500000000001624e-05, 1.6013999999998224e-05, 1.5486000000002054e-05, 1.5430999999999778e-05, 1.551300000000172e-05, 1.5471999999999014e-05, 1.5500000000001624e-05, 1.6027999999997794e-05, 1.5472000000002484e-05, 1.6028000000001263e-05, 1.6014000000001694e-05, 1.5500000000001624e-05, 1.6028000000001263e-05, 1.5485999999998584e-05, 1.5500000000001624e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.445" endtime="20201030 15:52:40.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.431" endtime="20201030 15:52:40.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.462" endtime="20201030 15:52:40.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.457" endtime="20201030 15:52:40.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.454" endtime="20201030 15:52:40.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.979" endtime="20201030 15:52:40.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.979" endtime="20201030 15:52:40.488"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.513" endtime="20201030 15:52:40.532"></status>
</kw>
<msg timestamp="20201030 15:52:40.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.509" endtime="20201030 15:52:40.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.536" endtime="20201030 15:52:40.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.543" endtime="20201030 15:52:40.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.501" endtime="20201030 15:52:40.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.495" endtime="20201030 15:52:40.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.568" endtime="20201030 15:52:40.985"></status>
</kw>
<msg timestamp="20201030 15:52:40.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044929681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044946764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.564" endtime="20201030 15:52:40.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044929681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044946764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.998" endtime="20201030 15:52:41.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.024" endtime="20201030 15:52:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.556" endtime="20201030 15:52:41.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.551" endtime="20201030 15:52:41.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.059" level="INFO">${RESULT} = [{'diff': 1.708300000000107e-05}, {'diff': 1.6584000000000043e-05}, {'diff': 1.6542000000001333e-05}, {'diff': 1.7084000000000543e-05}, {'diff': 1.7042000000001833e-05}, {'diff': 1.655499999999449e-05...</msg>
<status status="PASS" starttime="20201030 15:52:41.049" endtime="20201030 15:52:41.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.070" level="INFO">${ACCURACY} = {'diff': [1.708300000000107e-05, 1.6584000000000043e-05, 1.6542000000001333e-05, 1.7084000000000543e-05, 1.7042000000001833e-05, 1.655499999999449e-05, 1.663899999999885e-05, 1.708300000000107e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:41.061" endtime="20201030 15:52:41.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.081" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.079" endtime="20201030 15:52:41.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.087" level="INFO">VALUE: [1.708300000000107e-05, 1.6584000000000043e-05, 1.6542000000001333e-05, 1.7084000000000543e-05, 1.7042000000001833e-05, 1.655499999999449e-05, 1.663899999999885e-05, 1.708300000000107e-05, 1.6556000000000903e-05, 1.7056000000001403e-05, 1.6542000000001333e-05, 1.708300000000107e-05, 1.7098000000000113e-05, 1.6556000000000903e-05, 1.709700000000064e-05, 1.6569000000001e-05, 1.6500000000002624e-05, 1.7084000000000543e-05, 1.6570000000000473e-05, 1.709700000000064e-05, 1.654100000000186e-05, 1.709700000000064e-05, 1.709700000000064e-05, 1.6584000000000043e-05, 1.7098000000000113e-05, 1.655500000000143e-05, 1.708300000000107e-05, 1.6556000000000903e-05, 1.6639000000005788e-05, 1.70690000000015e-05, 1.709700000000064e-05, 1.662499999999928e-05, 1.708300000000107e-05, 1.70969999999937e-05, 1.6570000000000473e-05, 1.709700000000064e-05, 1.704100000000236e-05, 1.7070000000000973e-05, 1.6556000000000903e-05, 1.6597999999999613e-05, 1.7111999999999683e-05, 1.7084000000000543e-05, 1.705499999999499e-05, 1.715299999999892e-05, 1.712499999999978e-05, 1.6556000000000903e-05, 1.706899999999456e-05, 1.6556000000000903e-05, 1.7056000000001403e-05, 1.6569000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.084" endtime="20201030 15:52:41.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.072" endtime="20201030 15:52:41.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.100" endtime="20201030 15:52:41.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.095" endtime="20201030 15:52:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.093" endtime="20201030 15:52:41.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.491" endtime="20201030 15:52:41.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.489" endtime="20201030 15:52:41.125"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.148" endtime="20201030 15:52:41.166"></status>
</kw>
<msg timestamp="20201030 15:52:41.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.144" endtime="20201030 15:52:41.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.169" endtime="20201030 15:52:41.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.177" endtime="20201030 15:52:41.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.137" endtime="20201030 15:52:41.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.131" endtime="20201030 15:52:41.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.210" endtime="20201030 15:52:41.551"></status>
</kw>
<msg timestamp="20201030 15:52:41.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041630056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.205" endtime="20201030 15:52:41.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041611917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041630056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.561" endtime="20201030 15:52:41.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.580" endtime="20201030 15:52:41.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.195" endtime="20201030 15:52:41.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.188" endtime="20201030 15:52:41.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.597" level="INFO">${RESULT} = [{'diff': 1.813900000000035e-05}, {'diff': 1.761099999999377e-05}, {'diff': 1.763899999999985e-05}, {'diff': 1.762500000000028e-05}, {'diff': 1.815299999999992e-05}, {'diff': 1.7598000000000613e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:41.588" endtime="20201030 15:52:41.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.606" level="INFO">${ACCURACY} = {'diff': [1.813900000000035e-05, 1.761099999999377e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.815299999999992e-05, 1.7598000000000613e-05, 1.813900000000035e-05, 1.8138000000000876e-05, 1.81...</msg>
<status status="PASS" starttime="20201030 15:52:41.599" endtime="20201030 15:52:41.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.617" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.615" endtime="20201030 15:52:41.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.623" level="INFO">VALUE: [1.813900000000035e-05, 1.761099999999377e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.815299999999992e-05, 1.7598000000000613e-05, 1.813900000000035e-05, 1.8138000000000876e-05, 1.811100000000121e-05, 1.762500000000028e-05, 1.813900000000035e-05, 1.761100000000071e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.762500000000028e-05, 1.813900000000035e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.759700000000114e-05, 1.765299999999942e-05, 1.708300000000107e-05, 1.815299999999992e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.8167000000006428e-05, 1.812500000000078e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.815299999999992e-05, 1.763899999999985e-05, 1.816699999999949e-05, 1.761100000000071e-05, 1.813900000000035e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.813900000000035e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.809700000000164e-05, 1.761100000000071e-05, 1.7570000000001473e-05, 1.813900000000035e-05, 1.763899999999985e-05, 1.761099999999377e-05, 1.762500000000028e-05, 1.762500000000028e-05, 1.816699999999949e-05, 1.761100000000071e-05, 1.8137999999993937e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.620" endtime="20201030 15:52:41.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.608" endtime="20201030 15:52:41.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.643" endtime="20201030 15:52:41.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.638" endtime="20201030 15:52:41.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.635" endtime="20201030 15:52:41.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.127" endtime="20201030 15:52:41.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.126" endtime="20201030 15:52:41.672"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.708" endtime="20201030 15:52:41.729"></status>
</kw>
<msg timestamp="20201030 15:52:41.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.702" endtime="20201030 15:52:41.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.733" endtime="20201030 15:52:41.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.740" endtime="20201030 15:52:41.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.691" endtime="20201030 15:52:41.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.683" endtime="20201030 15:52:41.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.765" endtime="20201030 15:52:42.133"></status>
</kw>
<msg timestamp="20201030 15:52:42.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060249486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060268097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.761" endtime="20201030 15:52:42.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060249486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060268097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.143" endtime="20201030 15:52:42.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.163" endtime="20201030 15:52:42.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.753" endtime="20201030 15:52:42.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.748" endtime="20201030 15:52:42.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.181" level="INFO">${RESULT} = [{'diff': 1.861100000000171e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.9207999999999725e-05}, {'diff': 1.866699999999999e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:42.172" endtime="20201030 15:52:42.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.191" level="INFO">${ACCURACY} = {'diff': [1.861100000000171e-05, 1.866699999999999e-05, 1.919499999999963e-05, 1.866699999999999e-05, 1.9207999999999725e-05, 1.866699999999999e-05, 1.8666000000000516e-05, 1.8749999999997935e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 15:52:42.183" endtime="20201030 15:52:42.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.203" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.200" endtime="20201030 15:52:42.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.208" level="INFO">VALUE: [1.861100000000171e-05, 1.866699999999999e-05, 1.919499999999963e-05, 1.866699999999999e-05, 1.9207999999999725e-05, 1.866699999999999e-05, 1.8666000000000516e-05, 1.8749999999997935e-05, 1.868099999999956e-05, 1.912500000000178e-05, 1.813900000000035e-05, 1.8693999999999655e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.868099999999956e-05, 1.9194000000000155e-05, 1.865300000000042e-05, 1.861100000000171e-05, 1.865300000000042e-05, 1.8750000000004874e-05, 1.918100000000006e-05, 1.865300000000042e-05, 1.9235999999998865e-05, 1.8680000000000085e-05, 1.9207999999999725e-05, 1.866699999999999e-05, 1.87089999999987e-05, 1.919499999999963e-05, 1.8680000000000085e-05, 1.812500000000078e-05, 1.865300000000042e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.919499999999963e-05, 1.813900000000035e-05, 1.92089999999992e-05, 1.87089999999987e-05, 1.9249999999998435e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.806899999999556e-05, 1.92089999999992e-05, 1.8680000000000085e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.9207999999999725e-05, 1.919499999999963e-05, 1.9249999999998435e-05, 1.815299999999992e-05, 1.9180000000000585e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.205" endtime="20201030 15:52:42.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.193" endtime="20201030 15:52:42.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.223" endtime="20201030 15:52:42.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.217" endtime="20201030 15:52:42.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.214" endtime="20201030 15:52:42.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.675" endtime="20201030 15:52:42.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.673" endtime="20201030 15:52:42.252"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.282" endtime="20201030 15:52:42.303"></status>
</kw>
<msg timestamp="20201030 15:52:42.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.277" endtime="20201030 15:52:42.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.307" endtime="20201030 15:52:42.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.314" endtime="20201030 15:52:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.268" endtime="20201030 15:52:42.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.260" endtime="20201030 15:52:42.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.339" endtime="20201030 15:52:42.697"></status>
</kw>
<msg timestamp="20201030 15:52:42.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053441, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053460736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:42.335" endtime="20201030 15:52:42.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053441, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053460736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:42.706" endtime="20201030 15:52:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.725" endtime="20201030 15:52:42.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.328" endtime="20201030 15:52:42.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.322" endtime="20201030 15:52:42.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.742" level="INFO">${RESULT} = [{'diff': 1.9735999999999365e-05}, {'diff': 2.0249999999999435e-05}, {'diff': 1.912500000000178e-05}, {'diff': 1.9749999999998935e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 1.9708000000000225e-0...</msg>
<status status="PASS" starttime="20201030 15:52:42.733" endtime="20201030 15:52:42.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.753" level="INFO">${ACCURACY} = {'diff': [1.9735999999999365e-05, 2.0249999999999435e-05, 1.912500000000178e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.919499999999963e-05, 1.9721999999999795e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:42.744" endtime="20201030 15:52:42.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.764" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.761" endtime="20201030 15:52:42.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.769" level="INFO">VALUE: [1.9735999999999365e-05, 2.0249999999999435e-05, 1.912500000000178e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.919499999999963e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 2.0305999999997715e-05, 1.9638000000002376e-05, 1.9708000000000225e-05, 2.0249999999999435e-05, 2.0250000000006374e-05, 2.0277999999998575e-05, 1.919499999999963e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 2.0264000000005944e-05, 1.9249999999998435e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 2.0235999999999865e-05, 1.9749999999998935e-05, 2.0235999999999865e-05, 1.9777999999998075e-05, 1.9207999999999725e-05, 1.922299999999877e-05, 1.9207999999999725e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.9694000000000655e-05, 1.9138000000001876e-05, 1.92089999999992e-05, 2.0249999999999435e-05, 1.9207999999999725e-05, 2.0278000000005514e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9194000000000155e-05, 1.9791999999997645e-05, 2.0263999999999005e-05, 2.0249999999999435e-05, 1.9778000000005014e-05, 1.9749999999998935e-05, 2.0235999999999865e-05, 1.9723000000006208e-05]</msg>
<status status="PASS" starttime="20201030 15:52:42.766" endtime="20201030 15:52:42.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.755" endtime="20201030 15:52:42.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.782" endtime="20201030 15:52:42.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.777" endtime="20201030 15:52:42.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.775" endtime="20201030 15:52:42.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.254" endtime="20201030 15:52:42.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.253" endtime="20201030 15:52:42.807"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.829" endtime="20201030 15:52:42.849"></status>
</kw>
<msg timestamp="20201030 15:52:42.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.826" endtime="20201030 15:52:42.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.852" endtime="20201030 15:52:42.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.859" endtime="20201030 15:52:42.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.819" endtime="20201030 15:52:42.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.813" endtime="20201030 15:52:42.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.883" endtime="20201030 15:52:43.236"></status>
</kw>
<msg timestamp="20201030 15:52:43.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041253306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.880" endtime="20201030 15:52:43.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041253306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.246" endtime="20201030 15:52:43.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.264" endtime="20201030 15:52:43.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.873" endtime="20201030 15:52:43.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.868" endtime="20201030 15:52:43.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.281" level="INFO">${RESULT} = [{'diff': 2.129100000000661e-05}, {'diff': 2.0777999999999075e-05}, {'diff': 2.079099999999917e-05}, {'diff': 2.1305999999998715e-05}, {'diff': 2.0291999999998145e-05}, {'diff': 2.0763999999999505e-05...</msg>
<status status="PASS" starttime="20201030 15:52:43.273" endtime="20201030 15:52:43.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.292" level="INFO">${ACCURACY} = {'diff': [2.129100000000661e-05, 2.0777999999999075e-05, 2.079099999999917e-05, 2.1305999999998715e-05, 2.0291999999998145e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.0791999999998645e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:43.283" endtime="20201030 15:52:43.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.303" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.301" endtime="20201030 15:52:43.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.309" level="INFO">VALUE: [2.129100000000661e-05, 2.0777999999999075e-05, 2.079099999999917e-05, 2.1305999999998715e-05, 2.0291999999998145e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.0791999999998645e-05, 2.0249999999999435e-05, 2.0194000000001155e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.131899999999881e-05, 2.0833999999997355e-05, 2.0777999999999075e-05, 2.0263999999999005e-05, 2.0263999999999005e-05, 2.0263999999999005e-05, 2.0777999999999075e-05, 2.133299999999838e-05, 2.0263999999999005e-05, 2.0749999999999935e-05, 2.0264000000005944e-05, 2.0777999999999075e-05, 2.1305999999998715e-05, 2.0736000000000365e-05, 2.0777999999999075e-05, 2.0722000000000795e-05, 2.130499999999924e-05, 2.1306000000005654e-05, 2.0763999999999505e-05, 2.0778000000006014e-05, 2.080499999999874e-05, 2.02769999999991e-05, 2.0763999999999505e-05, 2.0806000000005154e-05, 2.130499999999924e-05, 2.0235999999999865e-05, 2.0791999999998645e-05, 2.07769999999996e-05, 2.1305999999998715e-05, 2.0792000000005584e-05, 2.026299999999953e-05, 2.0778000000006014e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0249999999999435e-05, 2.0791999999998645e-05, 2.0763999999999505e-05, 2.0791999999998645e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.306" endtime="20201030 15:52:43.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.294" endtime="20201030 15:52:43.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.321" endtime="20201030 15:52:43.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.317" endtime="20201030 15:52:43.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.314" endtime="20201030 15:52:43.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.809" endtime="20201030 15:52:43.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.808" endtime="20201030 15:52:43.346"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.368" endtime="20201030 15:52:43.387"></status>
</kw>
<msg timestamp="20201030 15:52:43.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.365" endtime="20201030 15:52:43.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.390" endtime="20201030 15:52:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.397" endtime="20201030 15:52:43.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.358" endtime="20201030 15:52:43.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.352" endtime="20201030 15:52:43.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.420" endtime="20201030 15:52:43.763"></status>
</kw>
<msg timestamp="20201030 15:52:43.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040891694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.416" endtime="20201030 15:52:43.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040891694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.776" endtime="20201030 15:52:43.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.796" endtime="20201030 15:52:43.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.409" endtime="20201030 15:52:43.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.405" endtime="20201030 15:52:43.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.813" level="INFO">${RESULT} = [{'diff': 2.1833999999998355e-05}, {'diff': 2.130499999999924e-05}, {'diff': 2.131899999999881e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.184699999999845e-05}, {'diff': 2.2415999999997327e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:43.804" endtime="20201030 15:52:43.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.823" level="INFO">${ACCURACY} = {'diff': [2.1833999999998355e-05, 2.130499999999924e-05, 2.131899999999881e-05, 2.236099999999852e-05, 2.184699999999845e-05, 2.2415999999997327e-05, 2.179100000000017e-05, 2.1305999999998715e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:43.815" endtime="20201030 15:52:43.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.834" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.831" endtime="20201030 15:52:43.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.839" level="INFO">VALUE: [2.1833999999998355e-05, 2.130499999999924e-05, 2.131899999999881e-05, 2.236099999999852e-05, 2.184699999999845e-05, 2.2415999999997327e-05, 2.179100000000017e-05, 2.1305999999998715e-05, 2.181899999999931e-05, 2.1833999999998355e-05, 2.1847999999997925e-05, 2.183299999999888e-05, 2.183299999999888e-05, 2.187499999999759e-05, 2.181900000000625e-05, 2.1834000000005294e-05, 2.184699999999845e-05, 2.187499999999759e-05, 2.183299999999888e-05, 2.1778000000000075e-05, 2.236099999999852e-05, 2.1819999999998785e-05, 2.237500000000503e-05, 2.231899999999981e-05, 2.1848000000004864e-05, 2.2348000000005364e-05, 2.190300000000367e-05, 2.1847999999997925e-05, 2.236099999999852e-05, 2.2361999999997995e-05, 2.181899999999931e-05, 2.1833999999998355e-05, 2.184700000000539e-05, 2.183299999999888e-05, 2.131899999999881e-05, 2.236099999999852e-05, 2.186100000000496e-05, 2.1805999999999215e-05, 2.181899999999931e-05, 2.131899999999881e-05, 2.1833999999998355e-05, 2.237499999999809e-05, 2.183299999999888e-05, 2.184700000000539e-05, 2.237499999999809e-05, 2.183299999999888e-05, 2.237500000000503e-05, 2.183299999999888e-05, 2.183299999999888e-05, 2.1319999999998285e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.836" endtime="20201030 15:52:43.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.824" endtime="20201030 15:52:43.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.852" endtime="20201030 15:52:43.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.847" endtime="20201030 15:52:43.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.845" endtime="20201030 15:52:43.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.348" endtime="20201030 15:52:43.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.347" endtime="20201030 15:52:43.878"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.902" endtime="20201030 15:52:43.923"></status>
</kw>
<msg timestamp="20201030 15:52:43.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.899" endtime="20201030 15:52:43.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.927" endtime="20201030 15:52:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.933" endtime="20201030 15:52:43.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.891" endtime="20201030 15:52:43.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.885" endtime="20201030 15:52:43.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.957" endtime="20201030 15:52:44.308"></status>
</kw>
<msg timestamp="20201030 15:52:44.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046214875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.954" endtime="20201030 15:52:44.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046214875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.317" endtime="20201030 15:52:44.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.336" endtime="20201030 15:52:44.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.946" endtime="20201030 15:52:44.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.941" endtime="20201030 15:52:44.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.354" level="INFO">${RESULT} = [{'diff': 2.28890000000051e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.290299999999773e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.281900000000031e-05}, {'diff': 2.234699999999895e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:44.345" endtime="20201030 15:52:44.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.363" level="INFO">${ACCURACY} = {'diff': [2.28890000000051e-05, 2.234699999999895e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.281900000000031e-05, 2.234699999999895e-05, 2.2902000000005196e-05, 2.288899999999816e-05, 2.2887...</msg>
<status status="PASS" starttime="20201030 15:52:44.356" endtime="20201030 15:52:44.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.374" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.372" endtime="20201030 15:52:44.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.379" level="INFO">VALUE: [2.28890000000051e-05, 2.234699999999895e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.281900000000031e-05, 2.234699999999895e-05, 2.2902000000005196e-05, 2.288899999999816e-05, 2.2887999999998687e-05, 2.287499999999859e-05, 2.34169999999978e-05, 2.236099999999852e-05, 2.293099999999687e-05, 2.287499999999859e-05, 2.281900000000031e-05, 2.293099999999687e-05, 2.284699999999945e-05, 2.237499999999809e-05, 2.236099999999852e-05, 2.3430000000004836e-05, 2.237500000000503e-05, 2.28890000000051e-05, 2.29169999999973e-05, 2.2887999999998687e-05, 2.236099999999852e-05, 2.287499999999859e-05, 2.2806000000000215e-05, 2.2819999999999785e-05, 2.28890000000051e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.2333999999998855e-05, 2.236099999999852e-05, 2.230500000000024e-05, 2.288899999999816e-05, 2.2887999999998687e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.231899999999981e-05, 2.3415999999998327e-05, 2.237499999999809e-05, 2.286099999999902e-05, 2.293100000000381e-05, 2.236100000000546e-05, 2.288899999999816e-05, 2.237499999999809e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.34169999999978e-05, 2.237499999999809e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.376" endtime="20201030 15:52:44.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.365" endtime="20201030 15:52:44.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.394" endtime="20201030 15:52:44.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.388" endtime="20201030 15:52:44.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.385" endtime="20201030 15:52:44.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.880" endtime="20201030 15:52:44.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.879" endtime="20201030 15:52:44.419"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.442" endtime="20201030 15:52:44.462"></status>
</kw>
<msg timestamp="20201030 15:52:44.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.439" endtime="20201030 15:52:44.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.465" endtime="20201030 15:52:44.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.472" endtime="20201030 15:52:44.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.431" endtime="20201030 15:52:44.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.426" endtime="20201030 15:52:44.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.495" endtime="20201030 15:52:44.852"></status>
</kw>
<msg timestamp="20201030 15:52:44.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041930139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.492" endtime="20201030 15:52:44.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041930139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041965556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.862" endtime="20201030 15:52:44.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.880" endtime="20201030 15:52:44.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.484" endtime="20201030 15:52:44.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.480" endtime="20201030 15:52:44.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.898" level="INFO">${RESULT} = [{'diff': 3.541700000000286e-05}, {'diff': 3.513799999999706e-05}, {'diff': 3.5124999999996964e-05}, {'diff': 3.47779999999992e-05}, {'diff': 3.529199999999927e-05}, {'diff': 3.5360999999997644e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:44.889" endtime="20201030 15:52:44.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.918" level="INFO">${ACCURACY} = {'diff': [3.541700000000286e-05, 3.513799999999706e-05, 3.5124999999996964e-05, 3.47779999999992e-05, 3.529199999999927e-05, 3.5360999999997644e-05, 3.467999999999527e-05, 3.4790999999999295e-05, 3.45...</msg>
<status status="PASS" starttime="20201030 15:52:44.900" endtime="20201030 15:52:44.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.929" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.927" endtime="20201030 15:52:44.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.935" level="INFO">VALUE: [3.541700000000286e-05, 3.513799999999706e-05, 3.5124999999996964e-05, 3.47779999999992e-05, 3.529199999999927e-05, 3.5360999999997644e-05, 3.467999999999527e-05, 3.4790999999999295e-05, 3.4540999999999045e-05, 3.547200000000167e-05, 3.4582999999997754e-05, 3.5332999999998504e-05, 3.452799999999895e-05, 3.51250000000039e-05, 3.525000000000056e-05, 3.511100000000433e-05, 3.54580000000021e-05, 3.523599999999405e-05, 3.50700000000051e-05, 3.4860999999997144e-05, 3.4916999999995424e-05, 3.5069000000005623e-05, 3.5208999999994384e-05, 3.491700000000236e-05, 3.545900000000157e-05, 3.493100000000193e-05, 3.547300000000114e-05, 3.468100000000168e-05, 3.491700000000236e-05, 3.523700000000046e-05, 3.488799999999681e-05, 3.513900000000347e-05, 3.51250000000039e-05, 3.4832999999998004e-05, 3.5346999999998074e-05, 3.4790999999999295e-05, 3.4569000000005123e-05, 3.523600000000099e-05, 3.525000000000056e-05, 3.5082999999998254e-05, 3.525000000000056e-05, 3.548600000000124e-05, 3.545799999999516e-05, 3.502799999999945e-05, 3.519400000000228e-05, 3.468100000000168e-05, 3.479199999999877e-05, 3.469500000000125e-05, 3.54580000000021e-05, 3.473600000000049e-05]</msg>
<status status="PASS" starttime="20201030 15:52:44.932" endtime="20201030 15:52:44.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.920" endtime="20201030 15:52:44.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.947" endtime="20201030 15:52:44.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.943" endtime="20201030 15:52:44.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.941" endtime="20201030 15:52:44.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.421" endtime="20201030 15:52:44.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.420" endtime="20201030 15:52:44.972"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.995" endtime="20201030 15:52:45.014"></status>
</kw>
<msg timestamp="20201030 15:52:45.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.992" endtime="20201030 15:52:45.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.017" endtime="20201030 15:52:45.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.023" endtime="20201030 15:52:45.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.984" endtime="20201030 15:52:45.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.979" endtime="20201030 15:52:45.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.047" endtime="20201030 15:52:45.378"></status>
</kw>
<msg timestamp="20201030 15:52:45.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041001903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041037403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.043" endtime="20201030 15:52:45.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041001903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041037403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.388" endtime="20201030 15:52:45.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.406" endtime="20201030 15:52:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.036" endtime="20201030 15:52:45.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.031" endtime="20201030 15:52:45.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.423" level="INFO">${RESULT} = [{'diff': 3.550000000000081e-05}, {'diff': 3.6194999999995814e-05}, {'diff': 3.645900000000257e-05}, {'diff': 3.623700000000146e-05}, {'diff': 3.630599999999984e-05}, {'diff': 3.5804999999999865e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:45.415" endtime="20201030 15:52:45.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.434" level="INFO">${ACCURACY} = {'diff': [3.550000000000081e-05, 3.6194999999995814e-05, 3.645900000000257e-05, 3.623700000000146e-05, 3.630599999999984e-05, 3.5804999999999865e-05, 3.5790999999993356e-05, 3.645900000000257e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 15:52:45.425" endtime="20201030 15:52:45.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.445" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.443" endtime="20201030 15:52:45.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.451" level="INFO">VALUE: [3.550000000000081e-05, 3.6194999999995814e-05, 3.645900000000257e-05, 3.623700000000146e-05, 3.630599999999984e-05, 3.5804999999999865e-05, 3.5790999999993356e-05, 3.645900000000257e-05, 3.622200000000242e-05, 3.572200000000192e-05, 3.567999999999627e-05, 3.5569000000006123e-05, 3.64580000000031e-05, 3.567999999999627e-05, 3.5583000000005693e-05, 3.5568999999999185e-05, 3.563900000000397e-05, 3.647200000000267e-05, 3.569400000000278e-05, 3.6096999999998824e-05, 3.651400000000138e-05, 3.573600000000149e-05, 3.605600000000653e-05, 3.5582999999998755e-05, 3.6346999999999074e-05, 3.556999999999866e-05, 3.648600000000224e-05, 3.6360999999998644e-05, 3.6360999999998644e-05, 3.6082999999999255e-05, 3.626400000000113e-05, 3.625000000000156e-05, 3.570800000000235e-05, 3.6458999999995634e-05, 3.629200000000027e-05, 3.6041000000000545e-05, 3.61250000000049e-05, 3.64580000000031e-05, 3.636100000000558e-05, 3.568000000000321e-05, 3.5568999999999185e-05, 3.6138999999997534e-05, 3.567999999999627e-05, 3.5568999999999185e-05, 3.6318999999999935e-05, 3.5666999999996174e-05, 3.5832999999999005e-05, 3.613900000000447e-05, 3.622200000000242e-05, 3.6138999999997534e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.448" endtime="20201030 15:52:45.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.436" endtime="20201030 15:52:45.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.463" endtime="20201030 15:52:45.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.459" endtime="20201030 15:52:45.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.456" endtime="20201030 15:52:45.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.974" endtime="20201030 15:52:45.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.973" endtime="20201030 15:52:45.488"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.510" endtime="20201030 15:52:45.530"></status>
</kw>
<msg timestamp="20201030 15:52:45.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.507" endtime="20201030 15:52:45.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.533" endtime="20201030 15:52:45.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.539" endtime="20201030 15:52:45.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.500" endtime="20201030 15:52:45.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.494" endtime="20201030 15:52:45.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.563" endtime="20201030 15:52:45.917"></status>
</kw>
<msg timestamp="20201030 15:52:45.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04067375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040710778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:45.560" endtime="20201030 15:52:45.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04067375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040710778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:45.926" endtime="20201030 15:52:45.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.945" endtime="20201030 15:52:45.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.552" endtime="20201030 15:52:45.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.548" endtime="20201030 15:52:45.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.963" level="INFO">${RESULT} = [{'diff': 3.702800000000145e-05}, {'diff': 3.747200000000367e-05}, {'diff': 3.74859999999963e-05}, {'diff': 3.723600000000299e-05}, {'diff': 3.725000000000256e-05}, {'diff': 3.725000000000256e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:45.954" endtime="20201030 15:52:45.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.972" level="INFO">${ACCURACY} = {'diff': [3.702800000000145e-05, 3.747200000000367e-05, 3.74859999999963e-05, 3.723600000000299e-05, 3.725000000000256e-05, 3.725000000000256e-05, 3.704200000000102e-05, 3.747200000000367e-05, 3.73060...</msg>
<status status="PASS" starttime="20201030 15:52:45.965" endtime="20201030 15:52:45.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.983" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.981" endtime="20201030 15:52:45.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.989" level="INFO">VALUE: [3.702800000000145e-05, 3.747200000000367e-05, 3.74859999999963e-05, 3.723600000000299e-05, 3.725000000000256e-05, 3.725000000000256e-05, 3.704200000000102e-05, 3.747200000000367e-05, 3.730600000000084e-05, 3.654200000000052e-05, 3.7138999999998534e-05, 3.67780000000012e-05, 3.72780000000017e-05, 3.717999999999777e-05, 3.722200000000342e-05, 3.6833000000000005e-05, 3.658399999999923e-05, 3.67780000000012e-05, 3.7138999999998534e-05, 3.668000000000421e-05, 3.7374999999999214e-05, 3.707000000000016e-05, 3.6555000000000615e-05, 3.690199999999838e-05, 3.6583000000006693e-05, 3.668000000000421e-05, 3.66659999999977e-05, 3.705600000000059e-05, 3.675000000000206e-05, 3.745799999999716e-05, 3.742999999999802e-05, 3.6902999999997854e-05, 3.6902999999997854e-05, 3.7360999999999644e-05, 3.7347000000000075e-05, 3.666700000000411e-05, 3.713900000000547e-05, 3.7124999999998964e-05, 3.655600000000009e-05, 3.680600000000034e-05, 3.695900000000307e-05, 3.679200000000077e-05, 3.6902999999997854e-05, 3.658400000000617e-05, 3.7124999999998964e-05, 3.713900000000547e-05, 3.672199999999598e-05, 3.679200000000077e-05, 3.738900000000572e-05, 3.66659999999977e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.986" endtime="20201030 15:52:45.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.974" endtime="20201030 15:52:45.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.001" endtime="20201030 15:52:46.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.997" endtime="20201030 15:52:46.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.994" endtime="20201030 15:52:46.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.490" endtime="20201030 15:52:46.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.489" endtime="20201030 15:52:46.026"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.049" endtime="20201030 15:52:46.071"></status>
</kw>
<msg timestamp="20201030 15:52:46.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.046" endtime="20201030 15:52:46.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.075" endtime="20201030 15:52:46.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.081" endtime="20201030 15:52:46.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.038" endtime="20201030 15:52:46.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.032" endtime="20201030 15:52:46.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.105" endtime="20201030 15:52:46.439"></status>
</kw>
<msg timestamp="20201030 15:52:46.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043934639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043972361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.101" endtime="20201030 15:52:46.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043934639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043972361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.449" endtime="20201030 15:52:46.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.468" endtime="20201030 15:52:46.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.094" endtime="20201030 15:52:46.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.089" endtime="20201030 15:52:46.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.486" level="INFO">${RESULT} = [{'diff': 3.772200000000392e-05}, {'diff': 3.8541000000003045e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.7680999999997744e-05}, {'diff': 3.7916999999998424e-05}, {'diff': 3.8347000000001075e-0...</msg>
<status status="PASS" starttime="20201030 15:52:46.477" endtime="20201030 15:52:46.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.495" level="INFO">${ACCURACY} = {'diff': [3.772200000000392e-05, 3.8541000000003045e-05, 3.8347000000001075e-05, 3.7680999999997744e-05, 3.7916999999998424e-05, 3.8347000000001075e-05, 3.8138999999999534e-05, 3.8361000000000645e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:46.488" endtime="20201030 15:52:46.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.506" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.503" endtime="20201030 15:52:46.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.511" level="INFO">VALUE: [3.772200000000392e-05, 3.8541000000003045e-05, 3.8347000000001075e-05, 3.7680999999997744e-05, 3.7916999999998424e-05, 3.8347000000001075e-05, 3.8138999999999534e-05, 3.8361000000000645e-05, 3.845900000000457e-05, 3.801400000000288e-05, 3.7694999999997314e-05, 3.845900000000457e-05, 3.825000000000356e-05, 3.802799999999551e-05, 3.7583000000000755e-05, 3.7791000000002295e-05, 3.847200000000467e-05, 3.7791000000002295e-05, 3.8124999999999964e-05, 3.76659999999987e-05, 3.769399999999784e-05, 3.7583000000000755e-05, 3.769399999999784e-05, 3.767999999999827e-05, 3.7554999999994676e-05, 3.8111000000000395e-05, 3.799999999999637e-05, 3.7902999999998854e-05, 3.7569000000001185e-05, 3.768100000000468e-05, 3.7916999999998424e-05, 3.818100000000518e-05, 3.7902999999998854e-05, 3.79450000000045e-05, 3.774999999999612e-05, 3.791700000000536e-05, 3.81659999999992e-05, 3.757000000000066e-05, 3.836200000000012e-05, 3.847199999999773e-05, 3.801400000000288e-05, 3.8124999999999964e-05, 3.845799999999816e-05, 3.800000000000331e-05, 3.823600000000399e-05, 3.775000000000306e-05, 3.8347000000001075e-05, 3.845799999999816e-05, 3.769399999999784e-05, 3.7874999999999714e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.508" endtime="20201030 15:52:46.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.497" endtime="20201030 15:52:46.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.525" endtime="20201030 15:52:46.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.519" endtime="20201030 15:52:46.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.517" endtime="20201030 15:52:46.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.028" endtime="20201030 15:52:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.027" endtime="20201030 15:52:46.550"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.573" endtime="20201030 15:52:46.593"></status>
</kw>
<msg timestamp="20201030 15:52:46.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.570" endtime="20201030 15:52:46.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.596" endtime="20201030 15:52:46.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.602" endtime="20201030 15:52:46.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.562" endtime="20201030 15:52:46.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.557" endtime="20201030 15:52:46.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.625" endtime="20201030 15:52:46.959"></status>
</kw>
<msg timestamp="20201030 15:52:46.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04183225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041871556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:46.622" endtime="20201030 15:52:46.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04183225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041871556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:46.969" endtime="20201030 15:52:46.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.988" endtime="20201030 15:52:46.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.615" endtime="20201030 15:52:46.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.610" endtime="20201030 15:52:46.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.006" level="INFO">${RESULT} = [{'diff': 3.93059999999959e-05}, {'diff': 3.8694999999998314e-05}, {'diff': 3.901399999999694e-05}, {'diff': 3.890300000000679e-05}, {'diff': 3.873600000000449e-05}, {'diff': 3.9346999999995136e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:46.997" endtime="20201030 15:52:47.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.017" level="INFO">${ACCURACY} = {'diff': [3.93059999999959e-05, 3.8694999999998314e-05, 3.901399999999694e-05, 3.890300000000679e-05, 3.873600000000449e-05, 3.9346999999995136e-05, 3.8583000000001755e-05, 3.9041000000003545e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:52:47.008" endtime="20201030 15:52:47.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.028" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.025" endtime="20201030 15:52:47.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.033" level="INFO">VALUE: [3.93059999999959e-05, 3.8694999999998314e-05, 3.901399999999694e-05, 3.890300000000679e-05, 3.873600000000449e-05, 3.9346999999995136e-05, 3.8583000000001755e-05, 3.9041000000003545e-05, 3.865200000000013e-05, 3.947199999999873e-05, 3.91660000000002e-05, 3.9333000000002505e-05, 3.893100000000593e-05, 3.879200000000277e-05, 3.922199999999848e-05, 3.880600000000234e-05, 3.8708999999997884e-05, 3.9111000000001395e-05, 3.8916999999999424e-05, 3.856999999999472e-05, 3.8680999999998744e-05, 3.9166999999999674e-05, 3.9444999999999064e-05, 3.922199999999848e-05, 3.8666999999999174e-05, 3.879200000000277e-05, 3.8694999999998314e-05, 3.879199999999583e-05, 3.879200000000277e-05, 3.947199999999873e-05, 3.944399999999959e-05, 3.8776999999996786e-05, 3.9139000000000534e-05, 3.9069000000002685e-05, 3.8805000000002865e-05, 3.945799999999916e-05, 3.9375000000001215e-05, 3.881999999999497e-05, 3.876399999999669e-05, 3.869399999999884e-05, 3.9375000000001215e-05, 3.920799999999891e-05, 3.8916999999999424e-05, 3.9125000000000965e-05, 3.8902999999999854e-05, 3.9347000000002075e-05, 3.9153000000000104e-05, 3.945900000000557e-05, 3.933399999999504e-05, 3.9458999999998634e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.030" endtime="20201030 15:52:47.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.019" endtime="20201030 15:52:47.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.052" endtime="20201030 15:52:47.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.047" endtime="20201030 15:52:47.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.045" endtime="20201030 15:52:47.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.552" endtime="20201030 15:52:47.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.551" endtime="20201030 15:52:47.077"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.099" endtime="20201030 15:52:47.118"></status>
</kw>
<msg timestamp="20201030 15:52:47.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.096" endtime="20201030 15:52:47.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.122" endtime="20201030 15:52:47.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.128" endtime="20201030 15:52:47.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.089" endtime="20201030 15:52:47.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.083" endtime="20201030 15:52:47.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.172" endtime="20201030 15:52:47.554"></status>
</kw>
<msg timestamp="20201030 15:52:47.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.157" endtime="20201030 15:52:47.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.563" endtime="20201030 15:52:47.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.582" endtime="20201030 15:52:47.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.147" endtime="20201030 15:52:47.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.137" endtime="20201030 15:52:47.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.600" level="INFO">${RESULT} = [{'diff': 4.018000000000077e-05}, {'diff': 3.9667000000000174e-05}, {'diff': 4.045800000000016e-05}, {'diff': 3.961200000000137e-05}, {'diff': 3.9582999999995816e-05}, {'diff': 3.9708999999998884e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:47.591" endtime="20201030 15:52:47.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.611" level="INFO">${ACCURACY} = {'diff': [4.018000000000077e-05, 3.9667000000000174e-05, 4.045800000000016e-05, 3.961200000000137e-05, 3.9582999999995816e-05, 3.9708999999998884e-05, 3.9680999999999744e-05, 3.9917000000000424e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:47.602" endtime="20201030 15:52:47.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.622" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.620" endtime="20201030 15:52:47.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.628" level="INFO">VALUE: [4.018000000000077e-05, 3.9667000000000174e-05, 4.045800000000016e-05, 3.961200000000137e-05, 3.9582999999995816e-05, 3.9708999999998884e-05, 3.9680999999999744e-05, 3.9917000000000424e-05, 3.9680999999999744e-05, 4.004200000000402e-05, 3.9694999999999314e-05, 3.983400000000248e-05, 4.049999999999887e-05, 4.024999999999862e-05, 4.0222999999998954e-05, 3.9597000000002325e-05, 4.022199999999948e-05, 3.9569000000003185e-05, 4.0417000000000924e-05, 3.968000000000027e-05, 3.990200000000138e-05, 4.045800000000016e-05, 3.9889000000001285e-05, 4.044400000000059e-05, 3.9569000000003185e-05, 3.9903000000000854e-05, 4.04859999999993e-05, 4.0111000000002395e-05, 3.979199999999683e-05, 3.9902999999993916e-05, 3.9903000000000854e-05, 3.9903000000000854e-05, 3.958400000000223e-05, 3.9903000000000854e-05, 3.9694999999999314e-05, 3.958400000000223e-05, 4.001399999999794e-05, 3.9625000000001465e-05, 3.955599999999615e-05, 3.968000000000027e-05, 4.0361000000002645e-05, 4.045800000000016e-05, 4.0124999999995026e-05, 4.023599999999905e-05, 3.995799999999966e-05, 4.047199999999973e-05, 3.9874999999994776e-05, 4.0347000000003075e-05, 3.9569000000003185e-05, 4.004199999999708e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.625" endtime="20201030 15:52:47.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.613" endtime="20201030 15:52:47.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.641" endtime="20201030 15:52:47.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.636" endtime="20201030 15:52:47.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.634" endtime="20201030 15:52:47.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.079" endtime="20201030 15:52:47.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.077" endtime="20201030 15:52:47.666"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.689" endtime="20201030 15:52:47.708"></status>
</kw>
<msg timestamp="20201030 15:52:47.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.685" endtime="20201030 15:52:47.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.712" endtime="20201030 15:52:47.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.718" endtime="20201030 15:52:47.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.678" endtime="20201030 15:52:47.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.672" endtime="20201030 15:52:47.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.742" endtime="20201030 15:52:48.091"></status>
</kw>
<msg timestamp="20201030 15:52:48.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041578431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041619153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.738" endtime="20201030 15:52:48.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041578431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041619153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.100" endtime="20201030 15:52:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.119" endtime="20201030 15:52:48.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.731" endtime="20201030 15:52:48.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.726" endtime="20201030 15:52:48.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.137" level="INFO">${RESULT} = [{'diff': 4.072199999999998e-05}, {'diff': 4.058400000000323e-05}, {'diff': 4.124999999999962e-05}, {'diff': 4.11660000000022e-05}, {'diff': 4.1138999999995596e-05}, {'diff': 4.0625000000002465e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:48.128" endtime="20201030 15:52:48.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.146" level="INFO">${ACCURACY} = {'diff': [4.072199999999998e-05, 4.058400000000323e-05, 4.124999999999962e-05, 4.11660000000022e-05, 4.1138999999995596e-05, 4.0625000000002465e-05, 4.091600000000195e-05, 4.1236999999999524e-05, 4.08...</msg>
<status status="PASS" starttime="20201030 15:52:48.139" endtime="20201030 15:52:48.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.157" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.155" endtime="20201030 15:52:48.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.163" level="INFO">VALUE: [4.072199999999998e-05, 4.058400000000323e-05, 4.124999999999962e-05, 4.11660000000022e-05, 4.1138999999995596e-05, 4.0625000000002465e-05, 4.091600000000195e-05, 4.1236999999999524e-05, 4.088800000000281e-05, 4.1346999999997136e-05, 4.124999999999962e-05, 4.145799999999422e-05, 4.102799999999851e-05, 4.0804999999997926e-05, 4.1125000000002965e-05, 4.1055000000005115e-05, 4.0639000000002035e-05, 4.083400000000348e-05, 4.144399999999465e-05, 4.0931000000000994e-05, 4.101399999999894e-05, 4.0639000000002035e-05, 4.0889000000002285e-05, 4.101399999999894e-05, 4.094399999999415e-05, 4.1375000000003215e-05, 4.0903000000001855e-05, 4.0931000000000994e-05, 4.101399999999894e-05, 4.1138999999995596e-05, 4.102799999999851e-05, 4.1332999999997566e-05, 4.101399999999894e-05, 4.145800000000116e-05, 4.1346999999997136e-05, 4.091600000000195e-05, 4.101399999999894e-05, 4.0776999999998786e-05, 4.145800000000116e-05, 4.123600000000005e-05, 4.0568999999997246e-05, 4.145800000000116e-05, 4.123600000000005e-05, 4.0931000000000994e-05, 4.0569000000004185e-05, 4.0902999999994916e-05, 4.0625000000002465e-05, 4.1333000000004505e-05, 4.1110999999996456e-05, 4.1361000000003645e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.160" endtime="20201030 15:52:48.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.148" endtime="20201030 15:52:48.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.176" endtime="20201030 15:52:48.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.171" endtime="20201030 15:52:48.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.169" endtime="20201030 15:52:48.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.668" endtime="20201030 15:52:48.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.667" endtime="20201030 15:52:48.201"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.224" endtime="20201030 15:52:48.244"></status>
</kw>
<msg timestamp="20201030 15:52:48.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.220" endtime="20201030 15:52:48.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.248" endtime="20201030 15:52:48.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.254" endtime="20201030 15:52:48.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.213" endtime="20201030 15:52:48.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.207" endtime="20201030 15:52:48.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.278" endtime="20201030 15:52:48.617"></status>
</kw>
<msg timestamp="20201030 15:52:48.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043082181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.274" endtime="20201030 15:52:48.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043082181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.627" endtime="20201030 15:52:48.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.646" endtime="20201030 15:52:48.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.267" endtime="20201030 15:52:48.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.262" endtime="20201030 15:52:48.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.663" level="INFO">${RESULT} = [{'diff': 4.188800000000381e-05}, {'diff': 4.204200000000602e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.215200000000363e-05}, {'diff': 4.2360999999997706e-05}, {'diff': 4.2459000000001634e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:48.654" endtime="20201030 15:52:48.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.673" level="INFO">${ACCURACY} = {'diff': [4.188800000000381e-05, 4.204200000000602e-05, 4.201399999999994e-05, 4.215200000000363e-05, 4.2360999999997706e-05, 4.2459000000001634e-05, 4.2374999999997276e-05, 4.219400000000234e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 15:52:48.666" endtime="20201030 15:52:48.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.684" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.682" endtime="20201030 15:52:48.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.689" level="INFO">VALUE: [4.188800000000381e-05, 4.204200000000602e-05, 4.201399999999994e-05, 4.215200000000363e-05, 4.2360999999997706e-05, 4.2459000000001634e-05, 4.2374999999997276e-05, 4.219400000000234e-05, 4.222199999999454e-05, 4.1582999999997816e-05, 4.1568999999998246e-05, 4.1582999999997816e-05, 4.2153000000003105e-05, 4.1903000000002855e-05, 4.1583000000004755e-05, 4.2416999999995986e-05, 4.2153000000003105e-05, 4.19860000000008e-05, 4.223600000000105e-05, 4.1610999999996956e-05, 4.1694999999994375e-05, 4.1902999999995916e-05, 4.158399999999729e-05, 4.24860000000013e-05, 4.156999999999772e-05, 4.202799999999951e-05, 4.234799999999761e-05, 4.2124999999997026e-05, 4.215199999999669e-05, 4.2055000000006115e-05, 4.1790999999999356e-05, 4.247199999999479e-05, 4.2304999999999426e-05, 4.21660000000032e-05, 4.2040999999999606e-05, 4.1804999999998926e-05, 4.1596999999997386e-05, 4.1903000000002855e-05, 4.19860000000008e-05, 4.202799999999951e-05, 4.1888999999996346e-05, 4.2124999999997026e-05, 4.1583000000004755e-05, 4.151399999999944e-05, 4.179199999999883e-05, 4.1667000000002175e-05, 4.1666999999995236e-05, 4.225000000000062e-05, 4.155599999999815e-05, 4.2152999999996166e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.686" endtime="20201030 15:52:48.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.675" endtime="20201030 15:52:48.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.704" endtime="20201030 15:52:48.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.698" endtime="20201030 15:52:48.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.695" endtime="20201030 15:52:48.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.203" endtime="20201030 15:52:48.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.202" endtime="20201030 15:52:48.729"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.766" endtime="20201030 15:52:48.793"></status>
</kw>
<msg timestamp="20201030 15:52:48.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.755" endtime="20201030 15:52:48.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.796" endtime="20201030 15:52:48.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.803" endtime="20201030 15:52:48.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.741" endtime="20201030 15:52:48.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.735" endtime="20201030 15:52:48.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.826" endtime="20201030 15:52:49.160"></status>
</kw>
<msg timestamp="20201030 15:52:49.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062081403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062124361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.822" endtime="20201030 15:52:49.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062081403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062124361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.170" endtime="20201030 15:52:49.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.188" endtime="20201030 15:52:49.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.815" endtime="20201030 15:52:49.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.811" endtime="20201030 15:52:49.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.205" level="INFO">${RESULT} = [{'diff': 4.295800000000266e-05}, {'diff': 4.28059999999994e-05}, {'diff': 4.2875000000004715e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.3152999999997166e-05}, {'diff': 4.3444999999996126e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:49.196" endtime="20201030 15:52:49.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.216" level="INFO">${ACCURACY} = {'diff': [4.295800000000266e-05, 4.28059999999994e-05, 4.2875000000004715e-05, 4.279199999999983e-05, 4.3152999999997166e-05, 4.3444999999996126e-05, 4.3459000000002634e-05, 4.3458999999995696e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:49.207" endtime="20201030 15:52:49.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.227" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.224" endtime="20201030 15:52:49.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.232" level="INFO">VALUE: [4.295800000000266e-05, 4.28059999999994e-05, 4.2875000000004715e-05, 4.279199999999983e-05, 4.3152999999997166e-05, 4.3444999999996126e-05, 4.3459000000002634e-05, 4.3458999999995696e-05, 4.312499999999109e-05, 4.281999999999897e-05, 4.255599999999915e-05, 4.3472999999988327e-05, 4.3237000000001524e-05, 4.3458999999995696e-05, 4.3346999999999136e-05, 4.2554999999999676e-05, 4.267999999998939e-05, 4.345799999999622e-05, 4.268000000000327e-05, 4.3138999999997596e-05, 4.306899999999281e-05, 4.307000000000616e-05, 4.279199999999983e-05, 4.301400000000788e-05, 4.280600000000634e-05, 4.2611000000011834e-05, 4.2666999999996236e-05, 4.280600000000634e-05, 4.3153000000004105e-05, 4.341699999999005e-05, 4.2833000000006005e-05, 4.272200000000892e-05, 4.301400000000788e-05, 4.302700000000104e-05, 4.291699999998955e-05, 4.26939999999959e-05, 4.330600000000684e-05, 4.291600000000395e-05, 4.2527000000000537e-05, 4.3013000000008406e-05, 4.2818999999999496e-05, 4.3346999999999136e-05, 4.324999999999468e-05, 4.3318999999999996e-05, 4.2903000000010794e-05, 4.279199999999983e-05, 4.26939999999959e-05, 4.3361000000005645e-05, 4.2709000000001884e-05, 4.297200000000223e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.229" endtime="20201030 15:52:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.218" endtime="20201030 15:52:49.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.244" endtime="20201030 15:52:49.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.240" endtime="20201030 15:52:49.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.238" endtime="20201030 15:52:49.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.731" endtime="20201030 15:52:49.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.730" endtime="20201030 15:52:49.269"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.292" endtime="20201030 15:52:49.311"></status>
</kw>
<msg timestamp="20201030 15:52:49.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.289" endtime="20201030 15:52:49.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.315" endtime="20201030 15:52:49.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.321" endtime="20201030 15:52:49.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.281" endtime="20201030 15:52:49.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.276" endtime="20201030 15:52:49.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.344" endtime="20201030 15:52:49.678"></status>
</kw>
<msg timestamp="20201030 15:52:49.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041221986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041265736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.341" endtime="20201030 15:52:49.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041221986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041265736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.687" endtime="20201030 15:52:49.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.706" endtime="20201030 15:52:49.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.333" endtime="20201030 15:52:49.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.329" endtime="20201030 15:52:49.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.723" level="INFO">${RESULT} = [{'diff': 4.374999999999518e-05}, {'diff': 4.352800000000101e-05}, {'diff': 4.445800000000416e-05}, {'diff': 4.3596999999999386e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.4347000000000136e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:49.714" endtime="20201030 15:52:49.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.734" level="INFO">${ACCURACY} = {'diff': [4.374999999999518e-05, 4.352800000000101e-05, 4.445800000000416e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.4347000000000136e-05, 4.356999999999972e-05, 4.3902999999997916e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 15:52:49.725" endtime="20201030 15:52:49.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.745" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.743" endtime="20201030 15:52:49.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.750" level="INFO">VALUE: [4.374999999999518e-05, 4.352800000000101e-05, 4.445800000000416e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.4347000000000136e-05, 4.356999999999972e-05, 4.3902999999997916e-05, 4.38060000000004e-05, 4.4459000000003635e-05, 4.3917000000004425e-05, 4.402800000000151e-05, 4.4125000000005965e-05, 4.370800000000341e-05, 4.369400000000384e-05, 4.3986999999995335e-05, 4.3569000000000246e-05, 4.4110999999999456e-05, 4.402799999999457e-05, 4.422200000000348e-05, 4.4347000000000136e-05, 4.447200000000373e-05, 4.4124999999999026e-05, 4.370800000000341e-05, 4.4055000000001177e-05, 4.3903000000004855e-05, 4.3708999999995946e-05, 4.3680999999996806e-05, 4.402800000000151e-05, 4.4152999999998166e-05, 4.356999999999972e-05, 4.452800000000201e-05, 4.3681000000003745e-05, 4.423600000000305e-05, 4.383399999999954e-05, 4.3916999999997486e-05, 4.451400000000244e-05, 4.415199999999869e-05, 4.43060000000009e-05, 4.379100000000136e-05, 4.420800000000391e-05, 4.3652999999997666e-05, 4.4347000000000136e-05, 4.417999999999783e-05, 4.401400000000194e-05, 4.377800000000126e-05, 4.447200000000373e-05, 4.3680999999996806e-05, 4.3902999999997916e-05, 4.3902999999997916e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.747" endtime="20201030 15:52:49.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.736" endtime="20201030 15:52:49.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.763" endtime="20201030 15:52:49.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.758" endtime="20201030 15:52:49.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.756" endtime="20201030 15:52:49.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.271" endtime="20201030 15:52:49.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.270" endtime="20201030 15:52:49.787"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.810" endtime="20201030 15:52:49.830"></status>
</kw>
<msg timestamp="20201030 15:52:49.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.807" endtime="20201030 15:52:49.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.833" endtime="20201030 15:52:49.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.839" endtime="20201030 15:52:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.799" endtime="20201030 15:52:49.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.794" endtime="20201030 15:52:49.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.862" endtime="20201030 15:52:50.202"></status>
</kw>
<msg timestamp="20201030 15:52:50.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041015333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.859" endtime="20201030 15:52:50.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040970597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041015333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.212" endtime="20201030 15:52:50.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.230" endtime="20201030 15:52:50.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.852" endtime="20201030 15:52:50.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.847" endtime="20201030 15:52:50.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.247" level="INFO">${RESULT} = [{'diff': 4.473600000000355e-05}, {'diff': 4.5347000000001136e-05}, {'diff': 4.5138999999999596e-05}, {'diff': 4.523600000000405e-05}, {'diff': 4.5361000000000706e-05}, {'diff': 4.458299999999388e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:50.239" endtime="20201030 15:52:50.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.257" level="INFO">${ACCURACY} = {'diff': [4.473600000000355e-05, 4.5347000000001136e-05, 4.5138999999999596e-05, 4.523600000000405e-05, 4.5361000000000706e-05, 4.458299999999388e-05, 4.469400000000484e-05, 4.502799999999557e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 15:52:50.249" endtime="20201030 15:52:50.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.267" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.265" endtime="20201030 15:52:50.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.273" level="INFO">VALUE: [4.473600000000355e-05, 4.5347000000001136e-05, 4.5138999999999596e-05, 4.523600000000405e-05, 4.5361000000000706e-05, 4.458299999999388e-05, 4.469400000000484e-05, 4.502799999999557e-05, 4.479199999999489e-05, 4.501400000000294e-05, 4.476399999999575e-05, 4.4903000000005855e-05, 4.523600000000405e-05, 4.455600000000115e-05, 4.53339999999941e-05, 4.536200000000018e-05, 4.48469999999937e-05, 4.504100000000261e-05, 4.491599999999901e-05, 4.5402999999999416e-05, 4.456899999999431e-05, 4.466599999999876e-05, 4.46939999999979e-05, 4.505599999999471e-05, 4.491599999999901e-05, 4.5125000000000026e-05, 4.525000000000362e-05, 4.502799999999557e-05, 4.4569000000001247e-05, 4.504200000000208e-05, 4.523600000000405e-05, 4.523600000000405e-05, 4.48060000000014e-05, 4.4902999999998916e-05, 4.5152999999999166e-05, 4.5375000000000276e-05, 4.5444999999998126e-05, 4.5013999999996e-05, 4.4916999999998486e-05, 4.523600000000405e-05, 4.5236999999996585e-05, 4.454200000000158e-05, 4.46939999999979e-05, 4.4555000000001677e-05, 4.523600000000405e-05, 4.523599999999711e-05, 4.466599999999876e-05, 4.491599999999901e-05, 4.53469999999942e-05, 4.4583000000000816e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.270" endtime="20201030 15:52:50.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.258" endtime="20201030 15:52:50.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.285" endtime="20201030 15:52:50.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.281" endtime="20201030 15:52:50.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.279" endtime="20201030 15:52:50.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.789" endtime="20201030 15:52:50.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.788" endtime="20201030 15:52:50.310"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.332" endtime="20201030 15:52:50.353"></status>
</kw>
<msg timestamp="20201030 15:52:50.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.329" endtime="20201030 15:52:50.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.357" endtime="20201030 15:52:50.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.363" endtime="20201030 15:52:50.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.322" endtime="20201030 15:52:50.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.316" endtime="20201030 15:52:50.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.386" endtime="20201030 15:52:50.721"></status>
</kw>
<msg timestamp="20201030 15:52:50.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042457556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042503528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.383" endtime="20201030 15:52:50.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042457556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042503528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.731" endtime="20201030 15:52:50.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.750" endtime="20201030 15:52:50.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.376" endtime="20201030 15:52:50.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.371" endtime="20201030 15:52:50.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.767" level="INFO">${RESULT} = [{'diff': 4.597199999999829e-05}, {'diff': 4.557000000000172e-05}, {'diff': 4.557000000000172e-05}, {'diff': 4.6473000000005205e-05}, {'diff': 4.6361000000001706e-05}, {'diff': 4.5666999999999236e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:50.758" endtime="20201030 15:52:50.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.776" level="INFO">${ACCURACY} = {'diff': [4.597199999999829e-05, 4.557000000000172e-05, 4.557000000000172e-05, 4.6473000000005205e-05, 4.6361000000001706e-05, 4.5666999999999236e-05, 4.579199999999589e-05, 4.6458999999998696e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:50.769" endtime="20201030 15:52:50.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.787" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.784" endtime="20201030 15:52:50.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.792" level="INFO">VALUE: [4.597199999999829e-05, 4.557000000000172e-05, 4.557000000000172e-05, 4.6473000000005205e-05, 4.6361000000001706e-05, 4.5666999999999236e-05, 4.579199999999589e-05, 4.6458999999998696e-05, 4.572199999999804e-05, 4.581899999999556e-05, 4.555500000000268e-05, 4.558299999999488e-05, 4.624999999999768e-05, 4.600000000000437e-05, 4.648599999999836e-05, 4.573600000000455e-05, 4.579199999999589e-05, 4.5916999999999486e-05, 4.577800000000326e-05, 4.633299999999563e-05, 4.5680999999998806e-05, 4.6153000000000166e-05, 4.597199999999829e-05, 4.582000000000197e-05, 4.629099999999692e-05, 4.5902999999999916e-05, 4.6013999999997e-05, 4.5916999999999486e-05, 4.5680999999998806e-05, 4.6237000000004524e-05, 4.60269999999971e-05, 4.566599999999976e-05, 4.5569000000002247e-05, 4.590200000000044e-05, 4.648599999999836e-05, 4.601400000000394e-05, 4.625000000000462e-05, 4.6125000000001026e-05, 4.645799999999922e-05, 4.620799999999897e-05, 4.5597000000001386e-05, 4.56939999999989e-05, 4.577799999999632e-05, 4.624999999999768e-05, 4.6347000000002136e-05, 4.6013999999997e-05, 4.5930999999999056e-05, 4.579200000000283e-05, 4.5916999999999486e-05, 4.634800000000161e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.789" endtime="20201030 15:52:50.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.778" endtime="20201030 15:52:50.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.806" endtime="20201030 15:52:50.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.800" endtime="20201030 15:52:50.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.798" endtime="20201030 15:52:50.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.312" endtime="20201030 15:52:50.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.311" endtime="20201030 15:52:50.831"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.853" endtime="20201030 15:52:50.874"></status>
</kw>
<msg timestamp="20201030 15:52:50.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.850" endtime="20201030 15:52:50.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.877" endtime="20201030 15:52:50.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.883" endtime="20201030 15:52:50.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.843" endtime="20201030 15:52:50.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.837" endtime="20201030 15:52:50.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.906" endtime="20201030 15:52:51.239"></status>
</kw>
<msg timestamp="20201030 15:52:51.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041187597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.903" endtime="20201030 15:52:51.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041187597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.248" endtime="20201030 15:52:51.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.267" endtime="20201030 15:52:51.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.896" endtime="20201030 15:52:51.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.891" endtime="20201030 15:52:51.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.284" level="INFO">${RESULT} = [{'diff': 4.747199999999979e-05}, {'diff': 4.6889000000001346e-05}, {'diff': 4.6917000000000486e-05}, {'diff': 4.7013999999998e-05}, {'diff': 4.6680999999999806e-05}, {'diff': 4.681899999999656e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:51.275" endtime="20201030 15:52:51.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.294" level="INFO">${ACCURACY} = {'diff': [4.747199999999979e-05, 4.6889000000001346e-05, 4.6917000000000486e-05, 4.7013999999998e-05, 4.6680999999999806e-05, 4.681899999999656e-05, 4.70269999999981e-05, 4.70269999999981e-05, 4.74440...</msg>
<status status="PASS" starttime="20201030 15:52:51.286" endtime="20201030 15:52:51.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.305" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.303" endtime="20201030 15:52:51.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.310" level="INFO">VALUE: [4.747199999999979e-05, 4.6889000000001346e-05, 4.6917000000000486e-05, 4.7013999999998e-05, 4.6680999999999806e-05, 4.681899999999656e-05, 4.70269999999981e-05, 4.70269999999981e-05, 4.744400000000065e-05, 4.668000000000033e-05, 4.747199999999979e-05, 4.668000000000033e-05, 4.737499999999534e-05, 4.7013999999998e-05, 4.709800000000236e-05, 4.68190000000035e-05, 4.7417000000000986e-05, 4.6680999999999806e-05, 4.655600000000315e-05, 4.6903000000000916e-05, 4.712499999999509e-05, 4.745800000000022e-05, 4.7125000000002026e-05, 4.6917000000000486e-05, 4.6625000000001526e-05, 4.712499999999509e-05, 4.716600000000126e-05, 4.676399999999775e-05, 4.656999999999578e-05, 4.6597000000002387e-05, 4.6597000000002387e-05, 4.701299999999853e-05, 4.690200000000144e-05, 4.679099999999742e-05, 4.723599999999911e-05, 4.723599999999911e-05, 4.6945000000006565e-05, 4.7013999999998e-05, 4.655499999999674e-05, 4.656900000000325e-05, 4.6680999999999806e-05, 4.747199999999979e-05, 4.7417000000000986e-05, 4.6903000000000916e-05, 4.68060000000034e-05, 4.73469999999962e-05, 4.7472999999999266e-05, 4.655600000000315e-05, 4.7458999999999696e-05, 4.679200000000383e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.307" endtime="20201030 15:52:51.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.296" endtime="20201030 15:52:51.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.323" endtime="20201030 15:52:51.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.319" endtime="20201030 15:52:51.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.316" endtime="20201030 15:52:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.833" endtime="20201030 15:52:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.832" endtime="20201030 15:52:51.348"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.370" endtime="20201030 15:52:51.390"></status>
</kw>
<msg timestamp="20201030 15:52:51.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.367" endtime="20201030 15:52:51.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.394" endtime="20201030 15:52:51.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.400" endtime="20201030 15:52:51.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.360" endtime="20201030 15:52:51.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.354" endtime="20201030 15:52:51.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.423" endtime="20201030 15:52:51.757"></status>
</kw>
<msg timestamp="20201030 15:52:51.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041197181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.420" endtime="20201030 15:52:51.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041148764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041197181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.766" endtime="20201030 15:52:51.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.785" endtime="20201030 15:52:51.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.413" endtime="20201030 15:52:51.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.408" endtime="20201030 15:52:51.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.802" level="INFO">${RESULT} = [{'diff': 4.8417000000001986e-05}, {'diff': 4.824999999999968e-05}, {'diff': 4.848600000000036e-05}, {'diff': 4.834700000000414e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.8013999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:51.793" endtime="20201030 15:52:51.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.813" level="INFO">${ACCURACY} = {'diff': [4.8417000000001986e-05, 4.824999999999968e-05, 4.848600000000036e-05, 4.834700000000414e-05, 4.820800000000097e-05, 4.8013999999999e-05, 4.827799999999882e-05, 4.781999999999703e-05, 4.84580...</msg>
<status status="PASS" starttime="20201030 15:52:51.804" endtime="20201030 15:52:51.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.824" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.821" endtime="20201030 15:52:51.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.829" level="INFO">VALUE: [4.8417000000001986e-05, 4.824999999999968e-05, 4.848600000000036e-05, 4.834700000000414e-05, 4.820800000000097e-05, 4.8013999999999e-05, 4.827799999999882e-05, 4.781999999999703e-05, 4.845800000000122e-05, 4.758299999999688e-05, 4.845800000000122e-05, 4.781999999999703e-05, 4.802799999999857e-05, 4.779199999999789e-05, 4.7681000000000806e-05, 4.8153000000002166e-05, 4.779200000000483e-05, 4.8445000000001126e-05, 4.772200000000004e-05, 4.8473000000000266e-05, 4.7653000000001666e-05, 4.7695000000000376e-05, 4.768000000000133e-05, 4.813800000000312e-05, 4.755500000000468e-05, 4.799999999999943e-05, 4.845800000000122e-05, 4.759699999999645e-05, 4.848600000000036e-05, 4.758300000000382e-05, 4.812499999999609e-05, 4.801400000000594e-05, 4.755500000000468e-05, 4.8139000000002596e-05, 4.808300000000432e-05, 4.820800000000097e-05, 4.806899999999781e-05, 4.7917000000001486e-05, 4.755600000000415e-05, 4.8125000000003026e-05, 4.826399999999925e-05, 4.816600000000226e-05, 4.758400000000329e-05, 4.8125000000003026e-05, 4.8125000000003026e-05, 4.827799999999882e-05, 4.829099999999892e-05, 4.80269999999991e-05, 4.756900000000425e-05, 4.813899999999566e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.826" endtime="20201030 15:52:51.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.815" endtime="20201030 15:52:51.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.842" endtime="20201030 15:52:51.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.837" endtime="20201030 15:52:51.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.835" endtime="20201030 15:52:51.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.350" endtime="20201030 15:52:51.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.349" endtime="20201030 15:52:51.866"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.889" endtime="20201030 15:52:51.909"></status>
</kw>
<msg timestamp="20201030 15:52:51.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.886" endtime="20201030 15:52:51.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.912" endtime="20201030 15:52:51.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.918" endtime="20201030 15:52:51.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.878" endtime="20201030 15:52:51.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.873" endtime="20201030 15:52:51.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.941" endtime="20201030 15:52:52.278"></status>
</kw>
<msg timestamp="20201030 15:52:52.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040819986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040868736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.938" endtime="20201030 15:52:52.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040819986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040868736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.287" endtime="20201030 15:52:52.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.305" endtime="20201030 15:52:52.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.931" endtime="20201030 15:52:52.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.926" endtime="20201030 15:52:52.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.322" level="INFO">${RESULT} = [{'diff': 4.875000000000018e-05}, {'diff': 4.944400000000265e-05}, {'diff': 4.923599999999417e-05}, {'diff': 4.880599999999846e-05}, {'diff': 4.877799999999932e-05}, {'diff': 4.902799999999957e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:52.314" endtime="20201030 15:52:52.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.332" level="INFO">${ACCURACY} = {'diff': [4.875000000000018e-05, 4.944400000000265e-05, 4.923599999999417e-05, 4.880599999999846e-05, 4.877799999999932e-05, 4.902799999999957e-05, 4.886100000000421e-05, 4.877799999999932e-05, 4.9249...</msg>
<status status="PASS" starttime="20201030 15:52:52.324" endtime="20201030 15:52:52.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.342" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.340" endtime="20201030 15:52:52.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.348" level="INFO">VALUE: [4.875000000000018e-05, 4.944400000000265e-05, 4.923599999999417e-05, 4.880599999999846e-05, 4.877799999999932e-05, 4.902799999999957e-05, 4.886100000000421e-05, 4.877799999999932e-05, 4.924999999999374e-05, 4.9125000000004027e-05, 4.948600000000136e-05, 4.9014e-05, 4.9014e-05, 4.912499999999709e-05, 4.8693999999994964e-05, 4.883400000000454e-05, 4.9014e-05, 4.95140000000005e-05, 4.901300000000053e-05, 4.93469999999982e-05, 4.947200000000179e-05, 4.858300000000482e-05, 4.884799999999717e-05, 4.945800000000222e-05, 4.859699999999745e-05, 4.947200000000179e-05, 4.9139000000003596e-05, 4.879199999999889e-05, 4.8903000000002916e-05, 4.8903000000002916e-05, 4.945800000000222e-05, 4.936199999999724e-05, 4.888899999999641e-05, 4.8973000000000766e-05, 4.879199999999889e-05, 4.879199999999889e-05, 4.8943999999995214e-05, 4.9223000000001016e-05, 4.870800000000147e-05, 4.893000000000258e-05, 4.9471999999994853e-05, 4.856899999999831e-05, 4.883299999999813e-05, 4.856900000000525e-05, 4.912499999999709e-05, 4.868000000000233e-05, 4.911099999999752e-05, 4.9014e-05, 4.9014e-05, 4.951300000000103e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.345" endtime="20201030 15:52:52.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.333" endtime="20201030 15:52:52.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.360" endtime="20201030 15:52:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.356" endtime="20201030 15:52:52.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.353" endtime="20201030 15:52:52.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.868" endtime="20201030 15:52:52.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.867" endtime="20201030 15:52:52.385"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.407" endtime="20201030 15:52:52.429"></status>
</kw>
<msg timestamp="20201030 15:52:52.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.404" endtime="20201030 15:52:52.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.432" endtime="20201030 15:52:52.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.439" endtime="20201030 15:52:52.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.397" endtime="20201030 15:52:52.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.391" endtime="20201030 15:52:52.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.462" endtime="20201030 15:52:52.796"></status>
</kw>
<msg timestamp="20201030 15:52:52.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042278958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042329139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.458" endtime="20201030 15:52:52.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042278958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042329139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.805" endtime="20201030 15:52:52.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.824" endtime="20201030 15:52:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.451" endtime="20201030 15:52:52.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.447" endtime="20201030 15:52:52.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.841" level="INFO">${RESULT} = [{'diff': 5.0181000000003306e-05}, {'diff': 4.990299999999698e-05}, {'diff': 4.957000000000572e-05}, {'diff': 5.044499999999619e-05}, {'diff': 5.025000000000168e-05}, {'diff': 4.952800000000007e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:52.832" endtime="20201030 15:52:52.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.850" level="INFO">${ACCURACY} = {'diff': [5.0181000000003306e-05, 4.990299999999698e-05, 4.957000000000572e-05, 5.044499999999619e-05, 5.025000000000168e-05, 4.952800000000007e-05, 5.0181000000003306e-05, 5.0014000000001e-05, 5.0360...</msg>
<status status="PASS" starttime="20201030 15:52:52.843" endtime="20201030 15:52:52.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.861" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.859" endtime="20201030 15:52:52.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.866" level="INFO">VALUE: [5.0181000000003306e-05, 4.990299999999698e-05, 4.957000000000572e-05, 5.044499999999619e-05, 5.025000000000168e-05, 4.952800000000007e-05, 5.0181000000003306e-05, 5.0014000000001e-05, 5.036099999999877e-05, 4.970800000000247e-05, 5.033299999999963e-05, 5.03469999999992e-05, 4.966600000000376e-05, 4.958299999999888e-05, 5.0235999999995173e-05, 5.025000000000168e-05, 4.958399999999835e-05, 4.990299999999698e-05, 4.991699999999655e-05, 5.033299999999963e-05, 4.955599999999921e-05, 4.990299999999698e-05, 5.045800000000322e-05, 4.958399999999835e-05, 4.9695000000002376e-05, 5.047299999999533e-05, 5.0014000000001e-05, 4.959699999999845e-05, 5.0195000000002876e-05, 4.958300000000582e-05, 5.036099999999877e-05, 5.047200000000279e-05, 4.986099999999827e-05, 4.980499999999999e-05, 5.036099999999877e-05, 5.03469999999992e-05, 4.968000000000333e-05, 5.044400000000365e-05, 5.000000000000143e-05, 4.956899999999931e-05, 5.040299999999748e-05, 4.993099999999612e-05, 4.969499999999544e-05, 4.991699999999655e-05, 4.9625000000004527e-05, 4.990299999999698e-05, 5.036199999999824e-05, 4.980599999999946e-05, 4.9681000000002806e-05, 5.036099999999877e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.863" endtime="20201030 15:52:52.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.852" endtime="20201030 15:52:52.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.880" endtime="20201030 15:52:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.874" endtime="20201030 15:52:52.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.872" endtime="20201030 15:52:52.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.387" endtime="20201030 15:52:52.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.386" endtime="20201030 15:52:52.905"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.928" endtime="20201030 15:52:52.948"></status>
</kw>
<msg timestamp="20201030 15:52:52.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.924" endtime="20201030 15:52:52.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.952" endtime="20201030 15:52:52.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.960" endtime="20201030 15:52:52.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.917" endtime="20201030 15:52:52.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.911" endtime="20201030 15:52:52.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.987" endtime="20201030 15:52:53.321"></status>
</kw>
<msg timestamp="20201030 15:52:53.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040925153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040975903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.984" endtime="20201030 15:52:53.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040925153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040975903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.330" endtime="20201030 15:52:53.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.349" endtime="20201030 15:52:53.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.975" endtime="20201030 15:52:53.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.970" endtime="20201030 15:52:53.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.366" level="INFO">${RESULT} = [{'diff': 5.075000000000218e-05}, {'diff': 5.145800000000422e-05}, {'diff': 5.102799999999463e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.115299999999823e-05}, {'diff': 5.118099999999737e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:53.357" endtime="20201030 15:52:53.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.376" level="INFO">${ACCURACY} = {'diff': [5.075000000000218e-05, 5.145800000000422e-05, 5.102799999999463e-05, 5.112499999999909e-05, 5.115299999999823e-05, 5.118099999999737e-05, 5.080600000000046e-05, 5.147200000000379e-05, 5.1027...</msg>
<status status="PASS" starttime="20201030 15:52:53.368" endtime="20201030 15:52:53.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.387" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.385" endtime="20201030 15:52:53.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.392" level="INFO">VALUE: [5.075000000000218e-05, 5.145800000000422e-05, 5.102799999999463e-05, 5.112499999999909e-05, 5.115299999999823e-05, 5.118099999999737e-05, 5.080600000000046e-05, 5.147200000000379e-05, 5.10270000000021e-05, 5.13470000000002e-05, 5.123600000000311e-05, 5.112500000000603e-05, 5.1443999999997714e-05, 5.056900000000031e-05, 5.056900000000031e-05, 5.061099999999902e-05, 5.105600000000071e-05, 5.087500000000578e-05, 5.056900000000031e-05, 5.058299999999988e-05, 5.150000000000293e-05, 5.132000000000053e-05, 5.115299999999823e-05, 5.0695000000003376e-05, 5.136099999999977e-05, 5.090299999999798e-05, 5.083300000000013e-05, 5.055600000000021e-05, 5.136099999999977e-05, 5.136099999999977e-05, 5.1221999999996604e-05, 5.113899999999866e-05, 5.0651999999998254e-05, 5.1193999999997464e-05, 5.093099999999712e-05, 5.056900000000031e-05, 5.122200000000354e-05, 5.079199999999395e-05, 5.148600000000336e-05, 5.079200000000089e-05, 5.0903000000004917e-05, 5.086099999999927e-05, 5.125000000000268e-05, 5.05419999999937e-05, 5.122299999999608e-05, 5.055600000000021e-05, 5.150000000000293e-05, 5.058399999999935e-05, 5.1193999999997464e-05, 5.143099999999762e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.389" endtime="20201030 15:52:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.378" endtime="20201030 15:52:53.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.405" endtime="20201030 15:52:53.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.400" endtime="20201030 15:52:53.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.398" endtime="20201030 15:52:53.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.907" endtime="20201030 15:52:53.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.906" endtime="20201030 15:52:53.430"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.452" endtime="20201030 15:52:53.472"></status>
</kw>
<msg timestamp="20201030 15:52:53.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.449" endtime="20201030 15:52:53.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.476" endtime="20201030 15:52:53.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.482" endtime="20201030 15:52:53.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.442" endtime="20201030 15:52:53.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.436" endtime="20201030 15:52:53.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.505" endtime="20201030 15:52:53.838"></status>
</kw>
<msg timestamp="20201030 15:52:53.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040672139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040724347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.501" endtime="20201030 15:52:53.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040672139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040724347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.848" endtime="20201030 15:52:53.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.866" endtime="20201030 15:52:53.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.494" endtime="20201030 15:52:53.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.490" endtime="20201030 15:52:53.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.883" level="INFO">${RESULT} = [{'diff': 5.2207999999998034e-05}, {'diff': 5.2235999999997174e-05}, {'diff': 5.202799999999563e-05}, {'diff': 5.2181000000005306e-05}, {'diff': 5.2485999999997424e-05}, {'diff': 5.223600000000411e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.875" endtime="20201030 15:52:53.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.894" level="INFO">${ACCURACY} = {'diff': [5.2207999999998034e-05, 5.2235999999997174e-05, 5.202799999999563e-05, 5.2181000000005306e-05, 5.2485999999997424e-05, 5.223600000000411e-05, 5.1693999999997964e-05, 5.190299999999898e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:53.885" endtime="20201030 15:52:53.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.905" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.903" endtime="20201030 15:52:53.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.911" level="INFO">VALUE: [5.2207999999998034e-05, 5.2235999999997174e-05, 5.202799999999563e-05, 5.2181000000005306e-05, 5.2485999999997424e-05, 5.223600000000411e-05, 5.1693999999997964e-05, 5.190299999999898e-05, 5.158300000000088e-05, 5.212500000000009e-05, 5.211099999999358e-05, 5.159799999999992e-05, 5.211100000000052e-05, 5.225000000000368e-05, 5.159700000000045e-05, 5.173600000000361e-05, 5.2235999999997174e-05, 5.234800000000067e-05, 5.179099999999548e-05, 5.1665999999998824e-05, 5.201399999999606e-05, 5.188899999999941e-05, 5.2415999999999574e-05, 5.156900000000131e-05, 5.1959000000004196e-05, 5.190299999999898e-05, 5.169499999999744e-05, 5.168099999999787e-05, 5.207000000000128e-05, 5.179200000000189e-05, 5.180600000000146e-05, 5.23470000000012e-05, 5.1999999999996493e-05, 5.2014000000003e-05, 5.155600000000121e-05, 5.213899999999966e-05, 5.2485999999997424e-05, 5.1915999999999074e-05, 5.2457999999998284e-05, 5.2485999999997424e-05, 5.2235999999997174e-05, 5.23470000000012e-05, 5.202800000000257e-05, 5.190299999999898e-05, 5.16390000000061e-05, 5.156900000000131e-05, 5.2457999999998284e-05, 5.2014000000003e-05, 5.163899999999916e-05, 5.169499999999744e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.908" endtime="20201030 15:52:53.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.896" endtime="20201030 15:52:53.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.923" endtime="20201030 15:52:53.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.919" endtime="20201030 15:52:53.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.916" endtime="20201030 15:52:53.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.432" endtime="20201030 15:52:53.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.430" endtime="20201030 15:52:53.948"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.970" endtime="20201030 15:52:53.991"></status>
</kw>
<msg timestamp="20201030 15:52:53.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.967" endtime="20201030 15:52:53.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.994" endtime="20201030 15:52:53.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.000" endtime="20201030 15:52:54.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.960" endtime="20201030 15:52:54.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.954" endtime="20201030 15:52:54.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.024" endtime="20201030 15:52:54.358"></status>
</kw>
<msg timestamp="20201030 15:52:54.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041167014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.020" endtime="20201030 15:52:54.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041167014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.368" endtime="20201030 15:52:54.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.387" endtime="20201030 15:52:54.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.013" endtime="20201030 15:52:54.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.009" endtime="20201030 15:52:54.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.404" level="INFO">${RESULT} = [{'diff': 5.288900000000041e-05}, {'diff': 5.2693999999998964e-05}, {'diff': 5.279199999999595e-05}, {'diff': 5.3013999999997063e-05}, {'diff': 5.294499999999869e-05}, {'diff': 5.322200000000554e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:54.395" endtime="20201030 15:52:54.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.413" level="INFO">${ACCURACY} = {'diff': [5.288900000000041e-05, 5.2693999999998964e-05, 5.279199999999595e-05, 5.3013999999997063e-05, 5.294499999999869e-05, 5.322200000000554e-05, 5.255600000000221e-05, 5.337500000000134e-05, 5.31...</msg>
<status status="PASS" starttime="20201030 15:52:54.406" endtime="20201030 15:52:54.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.424" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.421" endtime="20201030 15:52:54.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.429" level="INFO">VALUE: [5.288900000000041e-05, 5.2693999999998964e-05, 5.279199999999595e-05, 5.3013999999997063e-05, 5.294499999999869e-05, 5.322200000000554e-05, 5.255600000000221e-05, 5.337500000000134e-05, 5.312500000000109e-05, 5.277800000000332e-05, 5.334800000000167e-05, 5.281900000000256e-05, 5.332000000000253e-05, 5.258300000000188e-05, 5.3221999999998604e-05, 5.3471999999998854e-05, 5.333299999999569e-05, 5.280500000000299e-05, 5.259700000000145e-05, 5.255500000000274e-05, 5.312499999999415e-05, 5.312500000000109e-05, 5.2651999999993315e-05, 5.291700000000649e-05, 5.313900000000066e-05, 5.336099999999483e-05, 5.293099999999912e-05, 5.312500000000109e-05, 5.286100000000127e-05, 5.312500000000109e-05, 5.336200000000124e-05, 5.333399999999516e-05, 5.279199999999595e-05, 5.2693999999998964e-05, 5.329200000000339e-05, 5.336100000000177e-05, 5.2902000000000504e-05, 5.336100000000177e-05, 5.279099999999648e-05, 5.313900000000066e-05, 5.2679999999999394e-05, 5.347200000000579e-05, 5.2681000000005807e-05, 5.279199999999595e-05, 5.315300000000023e-05, 5.338899999999397e-05, 5.291699999999955e-05, 5.33340000000021e-05, 5.282000000000203e-05, 5.257000000000178e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.426" endtime="20201030 15:52:54.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.415" endtime="20201030 15:52:54.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.441" endtime="20201030 15:52:54.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.437" endtime="20201030 15:52:54.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.435" endtime="20201030 15:52:54.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.950" endtime="20201030 15:52:54.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.949" endtime="20201030 15:52:54.466"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.489" endtime="20201030 15:52:54.511"></status>
</kw>
<msg timestamp="20201030 15:52:54.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.485" endtime="20201030 15:52:54.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.514" endtime="20201030 15:52:54.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.520" endtime="20201030 15:52:54.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.478" endtime="20201030 15:52:54.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.472" endtime="20201030 15:52:54.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.543" endtime="20201030 15:52:54.878"></status>
</kw>
<msg timestamp="20201030 15:52:54.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042342097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042395944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.540" endtime="20201030 15:52:54.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042342097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042395944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.887" endtime="20201030 15:52:54.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.906" endtime="20201030 15:52:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.533" endtime="20201030 15:52:54.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.528" endtime="20201030 15:52:54.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.923" level="INFO">${RESULT} = [{'diff': 5.384699999999576e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.379099999999748e-05}, {'diff': 5.356900000000331e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.381900000000356e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:54.914" endtime="20201030 15:52:54.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.932" level="INFO">${ACCURACY} = {'diff': [5.384699999999576e-05, 5.4458000000000284e-05, 5.379099999999748e-05, 5.356900000000331e-05, 5.4458000000000284e-05, 5.381900000000356e-05, 5.380500000000399e-05, 5.413899999999472e-05, 5.42...</msg>
<status status="PASS" starttime="20201030 15:52:54.925" endtime="20201030 15:52:54.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.943" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.941" endtime="20201030 15:52:54.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.948" level="INFO">VALUE: [5.384699999999576e-05, 5.4458000000000284e-05, 5.379099999999748e-05, 5.356900000000331e-05, 5.4458000000000284e-05, 5.381900000000356e-05, 5.380500000000399e-05, 5.413899999999472e-05, 5.4235999999999174e-05, 5.38749999999949e-05, 5.43470000000032e-05, 5.369499999999944e-05, 5.4458000000000284e-05, 5.433299999999669e-05, 5.4014000000005e-05, 5.3749999999998244e-05, 5.361100000000202e-05, 5.4235999999999174e-05, 5.405599999999677e-05, 5.4444000000000714e-05, 5.3930000000000644e-05, 5.381900000000356e-05, 5.3680000000000394e-05, 5.380499999999705e-05, 5.4263999999998314e-05, 5.438899999999497e-05, 5.4471999999999854e-05, 5.380599999999652e-05, 5.454100000000517e-05, 5.390300000000098e-05, 5.390300000000098e-05, 5.357000000000278e-05, 5.415300000000123e-05, 5.4471999999999854e-05, 5.379199999999695e-05, 5.365300000000073e-05, 5.365300000000073e-05, 5.404100000000467e-05, 5.411200000000199e-05, 5.3957999999999784e-05, 5.4499999999998994e-05, 5.362500000000159e-05, 5.4235999999999174e-05, 5.3680000000000394e-05, 5.390300000000098e-05, 5.365300000000073e-05, 5.359700000000245e-05, 5.4430000000001144e-05, 5.4249999999998744e-05, 5.411099999999558e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.945" endtime="20201030 15:52:54.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.934" endtime="20201030 15:52:54.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.966" endtime="20201030 15:52:54.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.956" endtime="20201030 15:52:54.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.954" endtime="20201030 15:52:54.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.468" endtime="20201030 15:52:54.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.467" endtime="20201030 15:52:54.991"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.014" endtime="20201030 15:52:55.034"></status>
</kw>
<msg timestamp="20201030 15:52:55.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.010" endtime="20201030 15:52:55.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.037" endtime="20201030 15:52:55.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.043" endtime="20201030 15:52:55.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.003" endtime="20201030 15:52:55.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.997" endtime="20201030 15:52:55.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.067" endtime="20201030 15:52:55.401"></status>
</kw>
<msg timestamp="20201030 15:52:55.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040878361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.063" endtime="20201030 15:52:55.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040878361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.410" endtime="20201030 15:52:55.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.429" endtime="20201030 15:52:55.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.056" endtime="20201030 15:52:55.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.051" endtime="20201030 15:52:55.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.446" level="INFO">${RESULT} = [{'diff': 5.483300000000413e-05}, {'diff': 5.5415999999995635e-05}, {'diff': 5.4680000000001394e-05}, {'diff': 5.458299999999694e-05}, {'diff': 5.515300000000223e-05}, {'diff': 5.53470000000042e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:55.437" endtime="20201030 15:52:55.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.456" level="INFO">${ACCURACY} = {'diff': [5.483300000000413e-05, 5.5415999999995635e-05, 5.4680000000001394e-05, 5.458299999999694e-05, 5.515300000000223e-05, 5.53470000000042e-05, 5.468100000000087e-05, 5.512500000000309e-05, 5.544...</msg>
<status status="PASS" starttime="20201030 15:52:55.448" endtime="20201030 15:52:55.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.467" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.465" endtime="20201030 15:52:55.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.472" level="INFO">VALUE: [5.483300000000413e-05, 5.5415999999995635e-05, 5.4680000000001394e-05, 5.458299999999694e-05, 5.515300000000223e-05, 5.53470000000042e-05, 5.468100000000087e-05, 5.512500000000309e-05, 5.544500000000119e-05, 5.502800000000557e-05, 5.48470000000037e-05, 5.4791999999997953e-05, 5.511100000000352e-05, 5.504100000000567e-05, 5.4791999999997953e-05, 5.458300000000388e-05, 5.50270000000061e-05, 5.479099999999848e-05, 5.53749999999964e-05, 5.4916000000002074e-05, 5.5472000000000854e-05, 5.493099999999418e-05, 5.479200000000489e-05, 5.5485999999993485e-05, 5.477800000000532e-05, 5.5236000000000174e-05, 5.457000000000378e-05, 5.4777999999998384e-05, 5.513899999999572e-05, 5.512499999999615e-05, 5.459699999999651e-05, 5.490300000000198e-05, 5.547300000000033e-05, 5.490300000000198e-05, 5.456899999999737e-05, 5.479099999999848e-05, 5.4652000000002254e-05, 5.495900000000026e-05, 5.5263999999999314e-05, 5.5472000000000854e-05, 5.5472000000000854e-05, 5.512499999999615e-05, 5.5249999999999744e-05, 5.512500000000309e-05, 5.487500000000284e-05, 5.479200000000489e-05, 5.493100000000112e-05, 5.459800000000292e-05, 5.544500000000119e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.469" endtime="20201030 15:52:55.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.458" endtime="20201030 15:52:55.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.485" endtime="20201030 15:52:55.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.481" endtime="20201030 15:52:55.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.478" endtime="20201030 15:52:55.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.993" endtime="20201030 15:52:55.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.992" endtime="20201030 15:52:55.510"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.532" endtime="20201030 15:52:55.553"></status>
</kw>
<msg timestamp="20201030 15:52:55.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.529" endtime="20201030 15:52:55.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.557" endtime="20201030 15:52:55.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.563" endtime="20201030 15:52:55.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.522" endtime="20201030 15:52:55.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.516" endtime="20201030 15:52:55.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.586" endtime="20201030 15:52:55.920"></status>
</kw>
<msg timestamp="20201030 15:52:55.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041236042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.582" endtime="20201030 15:52:55.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041236042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.930" endtime="20201030 15:52:55.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.949" endtime="20201030 15:52:55.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.575" endtime="20201030 15:52:55.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.571" endtime="20201030 15:52:55.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.966" level="INFO">${RESULT} = [{'diff': 5.638900000000391e-05}, {'diff': 5.612500000000409e-05}, {'diff': 5.558399999999741e-05}, {'diff': 5.5999999999993555e-05}, {'diff': 5.608299999999844e-05}, {'diff': 5.5902000000003504e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:55.957" endtime="20201030 15:52:55.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.977" level="INFO">${ACCURACY} = {'diff': [5.638900000000391e-05, 5.612500000000409e-05, 5.558399999999741e-05, 5.5999999999993555e-05, 5.608299999999844e-05, 5.5902000000003504e-05, 5.615299999999629e-05, 5.6443999999995775e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 15:52:55.968" endtime="20201030 15:52:55.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.988" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.985" endtime="20201030 15:52:55.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.993" level="INFO">VALUE: [5.638900000000391e-05, 5.612500000000409e-05, 5.558399999999741e-05, 5.5999999999993555e-05, 5.608299999999844e-05, 5.5902000000003504e-05, 5.615299999999629e-05, 5.6443999999995775e-05, 5.6457999999995345e-05, 5.634699999999826e-05, 5.584699999999776e-05, 5.5805999999998523e-05, 5.633299999999869e-05, 5.595900000000126e-05, 5.615299999999629e-05, 5.558299999999794e-05, 5.556999999999784e-05, 5.6055999999998773e-05, 5.557000000000478e-05, 5.5555999999998273e-05, 5.562499999999665e-05, 5.6250000000000744e-05, 5.604099999999973e-05, 5.5902000000003504e-05, 5.632000000000553e-05, 5.580499999999905e-05, 5.6472000000001854e-05, 5.611100000000452e-05, 5.591700000000255e-05, 5.611099999999758e-05, 5.640299999999654e-05, 5.590300000000298e-05, 5.6014000000000064e-05, 5.6472000000001854e-05, 5.579200000000589e-05, 5.63470000000052e-05, 5.5513999999999564e-05, 5.591699999999561e-05, 5.5929999999995705e-05, 5.590300000000298e-05, 5.626300000000084e-05, 5.612500000000409e-05, 5.6472000000001854e-05, 5.613899999999672e-05, 5.558299999999794e-05, 5.613900000000366e-05, 5.584699999999776e-05, 5.6166000000003324e-05, 5.6472000000001854e-05, 5.5694000000001964e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.990" endtime="20201030 15:52:55.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.979" endtime="20201030 15:52:55.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.006" endtime="20201030 15:52:56.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.001" endtime="20201030 15:52:56.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.999" endtime="20201030 15:52:56.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.512" endtime="20201030 15:52:56.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.511" endtime="20201030 15:52:56.030"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.053" endtime="20201030 15:52:56.074"></status>
</kw>
<msg timestamp="20201030 15:52:56.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.050" endtime="20201030 15:52:56.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.077" endtime="20201030 15:52:56.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.083" endtime="20201030 15:52:56.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.042" endtime="20201030 15:52:56.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.037" endtime="20201030 15:52:56.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.106" endtime="20201030 15:52:56.444"></status>
</kw>
<msg timestamp="20201030 15:52:56.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041328847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.103" endtime="20201030 15:52:56.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041328847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.453" endtime="20201030 15:52:56.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.472" endtime="20201030 15:52:56.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.096" endtime="20201030 15:52:56.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.091" endtime="20201030 15:52:56.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.489" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.7292000000000454e-05}, {'diff': 5.713899999999772e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.6694000000002964e-05}, {'diff': 5.6736000000001674e-05...</msg>
<status status="PASS" starttime="20201030 15:52:56.480" endtime="20201030 15:52:56.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.499" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.7292000000000454e-05, 5.713899999999772e-05, 5.7222000000002604e-05, 5.6694000000002964e-05, 5.6736000000001674e-05, 5.6708000000002534e-05, 5.690299999999704e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:56.491" endtime="20201030 15:52:56.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.509" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.507" endtime="20201030 15:52:56.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.515" level="INFO">VALUE: [5.733299999999969e-05, 5.7292000000000454e-05, 5.713899999999772e-05, 5.7222000000002604e-05, 5.6694000000002964e-05, 5.6736000000001674e-05, 5.6708000000002534e-05, 5.690299999999704e-05, 5.715299999999729e-05, 5.688899999999747e-05, 5.6791999999999954e-05, 5.6971999999995415e-05, 5.737500000000534e-05, 5.6736000000001674e-05, 5.7028000000000634e-05, 5.6569999999998843e-05, 5.712499999999815e-05, 5.701300000000159e-05, 5.658299999999894e-05, 5.6707999999995595e-05, 5.6693999999996025e-05, 5.715299999999729e-05, 5.708300000000638e-05, 5.7250000000001744e-05, 5.663899999999722e-05, 5.7471999999995915e-05, 5.6778000000000384e-05, 5.7472000000002854e-05, 5.688899999999747e-05, 5.736099999999883e-05, 5.659699999999851e-05, 5.7263999999994375e-05, 5.6805999999999524e-05, 5.691699999999661e-05, 5.7193999999996525e-05, 5.687500000000484e-05, 5.6778000000000384e-05, 5.6694000000002964e-05, 5.712499999999815e-05, 5.6750000000001244e-05, 5.6680000000003394e-05, 5.659699999999851e-05, 5.7457999999996345e-05, 5.734699999999926e-05, 5.65549999999998e-05, 5.7264000000001314e-05, 5.6541999999999704e-05, 5.658299999999894e-05, 5.6778000000000384e-05, 5.6735999999994735e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.512" endtime="20201030 15:52:56.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.500" endtime="20201030 15:52:56.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.527" endtime="20201030 15:52:56.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.523" endtime="20201030 15:52:56.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.520" endtime="20201030 15:52:56.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.032" endtime="20201030 15:52:56.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.031" endtime="20201030 15:52:56.552"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.574" endtime="20201030 15:52:56.596"></status>
</kw>
<msg timestamp="20201030 15:52:56.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.571" endtime="20201030 15:52:56.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.600" endtime="20201030 15:52:56.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.606" endtime="20201030 15:52:56.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.564" endtime="20201030 15:52:56.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.558" endtime="20201030 15:52:56.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.629" endtime="20201030 15:52:56.963"></status>
</kw>
<msg timestamp="20201030 15:52:56.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042509361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042566986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.626" endtime="20201030 15:52:56.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042509361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042566986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.972" endtime="20201030 15:52:56.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.991" endtime="20201030 15:52:56.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.619" endtime="20201030 15:52:56.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.614" endtime="20201030 15:52:56.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.008" level="INFO">${RESULT} = [{'diff': 5.762499999999865e-05}, {'diff': 5.76949999999965e-05}, {'diff': 5.8000000000002494e-05}, {'diff': 5.8249999999995805e-05}, {'diff': 5.766699999999736e-05}, {'diff': 5.7806000000000524e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:56.999" endtime="20201030 15:52:57.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.017" level="INFO">${ACCURACY} = {'diff': [5.762499999999865e-05, 5.76949999999965e-05, 5.8000000000002494e-05, 5.8249999999995805e-05, 5.766699999999736e-05, 5.7806000000000524e-05, 5.8347999999999733e-05, 5.7792000000000954e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:57.010" endtime="20201030 15:52:57.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.028" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.026" endtime="20201030 15:52:57.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.034" level="INFO">VALUE: [5.762499999999865e-05, 5.76949999999965e-05, 5.8000000000002494e-05, 5.8249999999995805e-05, 5.766699999999736e-05, 5.7806000000000524e-05, 5.8347999999999733e-05, 5.7792000000000954e-05, 5.8014000000002064e-05, 5.8250000000002744e-05, 5.8137999999999246e-05, 5.8263999999995375e-05, 5.8458000000004284e-05, 5.7972000000003354e-05, 5.836099999999983e-05, 5.7722000000003104e-05, 5.7820000000000094e-05, 5.8028000000001634e-05, 5.766699999999736e-05, 5.83749999999994e-05, 5.8000000000002494e-05, 5.833300000000069e-05, 5.8028000000001634e-05, 5.8264000000002314e-05, 5.7791999999994015e-05, 5.845899999999682e-05, 5.7556000000000274e-05, 5.8027999999994695e-05, 5.845900000000376e-05, 5.8458000000004284e-05, 5.834700000000026e-05, 5.801299999999565e-05, 5.8444000000004714e-05, 5.8221999999996665e-05, 5.758299999999994e-05, 5.8028000000001634e-05, 5.787500000000584e-05, 5.790300000000498e-05, 5.791699999999761e-05, 5.834700000000026e-05, 5.80550000000013e-05, 5.812500000000609e-05, 5.818099999999743e-05, 5.845900000000376e-05, 5.841700000000505e-05, 5.8028000000001634e-05, 5.802700000000216e-05, 5.812499999999915e-05, 5.758299999999994e-05, 5.758299999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.030" endtime="20201030 15:52:57.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.019" endtime="20201030 15:52:57.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.048" endtime="20201030 15:52:57.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.042" endtime="20201030 15:52:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.039" endtime="20201030 15:52:57.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.554" endtime="20201030 15:52:57.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.553" endtime="20201030 15:52:57.073"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.095" endtime="20201030 15:52:57.116"></status>
</kw>
<msg timestamp="20201030 15:52:57.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.092" endtime="20201030 15:52:57.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.119" endtime="20201030 15:52:57.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.125" endtime="20201030 15:52:57.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.085" endtime="20201030 15:52:57.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.079" endtime="20201030 15:52:57.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.149" endtime="20201030 15:52:57.479"></status>
</kw>
<msg timestamp="20201030 15:52:57.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040985208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041044306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.145" endtime="20201030 15:52:57.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040985208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041044306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.489" endtime="20201030 15:52:57.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.507" endtime="20201030 15:52:57.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.138" endtime="20201030 15:52:57.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.133" endtime="20201030 15:52:57.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.524" level="INFO">${RESULT} = [{'diff': 5.9098000000000483e-05}, {'diff': 5.945900000000476e-05}, {'diff': 5.9249999999996805e-05}, {'diff': 5.9263999999996375e-05}, {'diff': 5.9250000000003744e-05}, {'diff': 5.9457999999998346e-0...</msg>
<status status="PASS" starttime="20201030 15:52:57.515" endtime="20201030 15:52:57.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.535" level="INFO">${ACCURACY} = {'diff': [5.9098000000000483e-05, 5.945900000000476e-05, 5.9249999999996805e-05, 5.9263999999996375e-05, 5.9250000000003744e-05, 5.9457999999998346e-05, 5.880500000000205e-05, 5.912500000000015e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:57.526" endtime="20201030 15:52:57.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.546" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.544" endtime="20201030 15:52:57.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.551" level="INFO">VALUE: [5.9098000000000483e-05, 5.945900000000476e-05, 5.9249999999996805e-05, 5.9263999999996375e-05, 5.9250000000003744e-05, 5.9457999999998346e-05, 5.880500000000205e-05, 5.912500000000015e-05, 5.938899999999997e-05, 5.8679999999998456e-05, 5.880500000000205e-05, 5.934700000000126e-05, 5.88749999999999e-05, 5.938899999999997e-05, 5.8806000000001524e-05, 5.947299999999739e-05, 5.8584000000000414e-05, 5.895899999999732e-05, 5.947299999999739e-05, 5.9028000000002634e-05, 5.9264000000003314e-05, 5.923700000000365e-05, 5.8582999999994e-05, 5.9277999999995945e-05, 5.880500000000205e-05, 5.934700000000126e-05, 5.9457999999998346e-05, 5.858300000000094e-05, 5.9472000000004854e-05, 5.8679999999998456e-05, 5.858300000000094e-05, 5.863899999999922e-05, 5.934700000000126e-05, 5.9027999999995695e-05, 5.8570000000000844e-05, 5.9334000000001164e-05, 5.9250000000003744e-05, 5.890300000000598e-05, 5.868099999999793e-05, 5.9292000000002454e-05, 5.877699999999597e-05, 5.915299999999929e-05, 5.9457999999998346e-05, 5.934700000000126e-05, 5.866699999999836e-05, 5.9249999999996805e-05, 5.88749999999999e-05, 5.856900000000137e-05, 5.890299999999904e-05, 5.943099999999868e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.548" endtime="20201030 15:52:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.537" endtime="20201030 15:52:57.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.567" endtime="20201030 15:52:57.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.563" endtime="20201030 15:52:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.561" endtime="20201030 15:52:57.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.075" endtime="20201030 15:52:57.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.073" endtime="20201030 15:52:57.592"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.615" endtime="20201030 15:52:57.635"></status>
</kw>
<msg timestamp="20201030 15:52:57.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.611" endtime="20201030 15:52:57.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.639" endtime="20201030 15:52:57.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.645" endtime="20201030 15:52:57.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.604" endtime="20201030 15:52:57.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.599" endtime="20201030 15:52:57.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.668" endtime="20201030 15:52:57.999"></status>
</kw>
<msg timestamp="20201030 15:52:58.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040775431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040835847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.665" endtime="20201030 15:52:58.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040775431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040835847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.008" endtime="20201030 15:52:58.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.027" endtime="20201030 15:52:58.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.658" endtime="20201030 15:52:58.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.653" endtime="20201030 15:52:58.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.044" level="INFO">${RESULT} = [{'diff': 6.0416000000000636e-05}, {'diff': 6.037499999999446e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.0098000000001484e-05}, {'diff': 6.036099999999489e-05}, {'diff': 6.0471999999998916e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:58.035" endtime="20201030 15:52:58.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.055" level="INFO">${ACCURACY} = {'diff': [6.0416000000000636e-05, 6.037499999999446e-05, 6.016699999999986e-05, 6.0098000000001484e-05, 6.036099999999489e-05, 6.0471999999998916e-05, 6.034699999999532e-05, 5.961099999999414e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 15:52:58.046" endtime="20201030 15:52:58.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.066" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.064" endtime="20201030 15:52:58.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.071" level="INFO">VALUE: [6.0416000000000636e-05, 6.037499999999446e-05, 6.016699999999986e-05, 6.0098000000001484e-05, 6.036099999999489e-05, 6.0471999999998916e-05, 6.034699999999532e-05, 5.961099999999414e-05, 6.0028000000003634e-05, 5.962500000000065e-05, 5.9805999999995585e-05, 6.0264000000004314e-05, 5.988900000000047e-05, 6.0277999999996945e-05, 5.9777999999996445e-05, 6.0013999999997125e-05, 5.9777999999996445e-05, 6.0236000000005174e-05, 6.034699999999532e-05, 6.0014000000004064e-05, 6.0028000000003634e-05, 6.006899999999593e-05, 5.981900000000262e-05, 6.0457999999999346e-05, 6.0485999999998485e-05, 6.036100000000183e-05, 5.993099999999918e-05, 5.9570000000001844e-05, 5.9584000000001414e-05, 5.990300000000004e-05, 5.9570000000001844e-05, 5.972300000000458e-05, 6.02629999999979e-05, 5.988900000000047e-05, 6.001299999999765e-05, 6.033300000000269e-05, 5.9693999999999026e-05, 6.0027999999996695e-05, 5.981900000000262e-05, 6.009700000000201e-05, 5.991699999999961e-05, 6.034700000000226e-05, 5.968099999999893e-05, 5.956899999999543e-05, 6.0430000000000206e-05, 6.0457999999999346e-05, 6.0014000000004064e-05, 5.991699999999961e-05, 6.0347999999994795e-05, 6.0014000000004064e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.068" endtime="20201030 15:52:58.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.057" endtime="20201030 15:52:58.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.084" endtime="20201030 15:52:58.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.079" endtime="20201030 15:52:58.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.077" endtime="20201030 15:52:58.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.594" endtime="20201030 15:52:58.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.593" endtime="20201030 15:52:58.110"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.132" endtime="20201030 15:52:58.153"></status>
</kw>
<msg timestamp="20201030 15:52:58.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.129" endtime="20201030 15:52:58.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.156" endtime="20201030 15:52:58.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.162" endtime="20201030 15:52:58.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.122" endtime="20201030 15:52:58.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.116" endtime="20201030 15:52:58.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.186" endtime="20201030 15:52:58.522"></status>
</kw>
<msg timestamp="20201030 15:52:58.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041989403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042050444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.182" endtime="20201030 15:52:58.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041989403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042050444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.532" endtime="20201030 15:52:58.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.550" endtime="20201030 15:52:58.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.175" endtime="20201030 15:52:58.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.170" endtime="20201030 15:52:58.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.567" level="INFO">${RESULT} = [{'diff': 6.104099999999779e-05}, {'diff': 6.088900000000147e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.0598000000001984e-05}, {'diff': 6.068099999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:58.559" endtime="20201030 15:52:58.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.577" level="INFO">${ACCURACY} = {'diff': [6.104099999999779e-05, 6.088900000000147e-05, 6.12499999999988e-05, 6.090300000000104e-05, 6.0598000000001984e-05, 6.068099999999993e-05, 6.070899999999907e-05, 6.1027999999997695e-05, 6.091...</msg>
<status status="PASS" starttime="20201030 15:52:58.569" endtime="20201030 15:52:58.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.587" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.585" endtime="20201030 15:52:58.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.593" level="INFO">VALUE: [6.104099999999779e-05, 6.088900000000147e-05, 6.12499999999988e-05, 6.090300000000104e-05, 6.0598000000001984e-05, 6.068099999999993e-05, 6.070899999999907e-05, 6.1027999999997695e-05, 6.091700000000061e-05, 6.113800000000225e-05, 6.123599999999924e-05, 6.112500000000215e-05, 6.056899999999643e-05, 6.0957999999999846e-05, 6.091700000000061e-05, 6.14029999999946e-05, 6.136099999999589e-05, 6.0735999999998735e-05, 6.0791999999997015e-05, 6.123599999999924e-05, 6.12499999999988e-05, 6.12499999999988e-05, 6.111100000000258e-05, 6.1013999999998125e-05, 6.113900000000172e-05, 6.13620000000023e-05, 6.1014000000005064e-05, 6.102700000000516e-05, 6.14029999999946e-05, 6.0694000000000026e-05, 6.077700000000491e-05, 6.055499999999686e-05, 6.105600000000377e-05, 6.0694000000000026e-05, 6.112500000000215e-05, 6.123599999999924e-05, 6.130499999999761e-05, 6.123599999999924e-05, 6.113800000000225e-05, 6.090300000000104e-05, 6.1013999999998125e-05, 6.068099999999993e-05, 6.105499999999736e-05, 6.136100000000283e-05, 6.108300000000344e-05, 6.115300000000129e-05, 6.12499999999988e-05, 6.144400000000078e-05, 6.113900000000172e-05, 6.1013999999998125e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.590" endtime="20201030 15:52:58.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.578" endtime="20201030 15:52:58.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.605" endtime="20201030 15:52:58.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.601" endtime="20201030 15:52:58.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.598" endtime="20201030 15:52:58.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.112" endtime="20201030 15:52:58.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.111" endtime="20201030 15:52:58.630"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.653" endtime="20201030 15:52:58.675"></status>
</kw>
<msg timestamp="20201030 15:52:58.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.649" endtime="20201030 15:52:58.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.679" endtime="20201030 15:52:58.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.685" endtime="20201030 15:52:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.642" endtime="20201030 15:52:58.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.637" endtime="20201030 15:52:58.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.708" endtime="20201030 15:52:59.054"></status>
</kw>
<msg timestamp="20201030 15:52:59.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042975653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.705" endtime="20201030 15:52:59.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042913903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042975653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.064" endtime="20201030 15:52:59.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.085" endtime="20201030 15:52:59.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.698" endtime="20201030 15:52:59.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.693" endtime="20201030 15:52:59.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.103" level="INFO">${RESULT} = [{'diff': 6.17499999999993e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.223600000000024e-05}, {'diff': 6.230499999999861e-05}, {'diff': 6.248599999999355e-05}, {'diff': 6.1582999999997e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:59.094" endtime="20201030 15:52:59.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.113" level="INFO">${ACCURACY} = {'diff': [6.17499999999993e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.230499999999861e-05, 6.248599999999355e-05, 6.1582999999997e-05, 6.181899999999768e-05, 6.215299999999535e-05, 6.2138999...</msg>
<status status="PASS" starttime="20201030 15:52:59.105" endtime="20201030 15:52:59.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.124" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.122" endtime="20201030 15:52:59.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.130" level="INFO">VALUE: [6.17499999999993e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.230499999999861e-05, 6.248599999999355e-05, 6.1582999999997e-05, 6.181899999999768e-05, 6.215299999999535e-05, 6.213899999999578e-05, 6.193100000000118e-05, 6.168000000000146e-05, 6.165300000000179e-05, 6.22499999999998e-05, 6.215300000000229e-05, 6.191700000000161e-05, 6.20279999999987e-05, 6.241700000000211e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.236100000000383e-05, 6.213900000000272e-05, 6.180599999999759e-05, 6.230599999999809e-05, 6.223600000000024e-05, 6.212499999999621e-05, 6.212500000000315e-05, 6.201400000000606e-05, 6.233299999999775e-05, 6.234700000000426e-05, 6.201399999999913e-05, 6.19300000000017e-05, 6.155600000000427e-05, 6.168100000000093e-05, 6.223600000000024e-05, 6.20279999999987e-05, 6.213899999999578e-05, 6.251399999999963e-05, 6.188900000000247e-05, 6.202800000000563e-05, 6.188900000000247e-05, 6.247200000000092e-05, 6.195800000000085e-05, 6.191600000000214e-05, 6.1582999999997e-05, 6.236099999999689e-05, 6.168000000000146e-05, 6.181900000000462e-05, 6.245799999999441e-05, 6.247200000000092e-05, 6.16950000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.127" endtime="20201030 15:52:59.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.115" endtime="20201030 15:52:59.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.145" endtime="20201030 15:52:59.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.139" endtime="20201030 15:52:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.136" endtime="20201030 15:52:59.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.632" endtime="20201030 15:52:59.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.631" endtime="20201030 15:52:59.171"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.195" endtime="20201030 15:52:59.217"></status>
</kw>
<msg timestamp="20201030 15:52:59.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.192" endtime="20201030 15:52:59.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.220" endtime="20201030 15:52:59.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.227" endtime="20201030 15:52:59.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.184" endtime="20201030 15:52:59.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.178" endtime="20201030 15:52:59.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.252" endtime="20201030 15:52:59.611"></status>
</kw>
<msg timestamp="20201030 15:52:59.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043669056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043731583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.248" endtime="20201030 15:52:59.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043669056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043731583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.620" endtime="20201030 15:52:59.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.639" endtime="20201030 15:52:59.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.240" endtime="20201030 15:52:59.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.236" endtime="20201030 15:52:59.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.657" level="INFO">${RESULT} = [{'diff': 6.252699999999972e-05}, {'diff': 6.265200000000332e-05}, {'diff': 6.256899999999843e-05}, {'diff': 6.334700000000526e-05}, {'diff': 6.347199999999498e-05}, {'diff': 6.32500000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:59.648" endtime="20201030 15:52:59.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.668" level="INFO">${ACCURACY} = {'diff': [6.252699999999972e-05, 6.265200000000332e-05, 6.256899999999843e-05, 6.334700000000526e-05, 6.347199999999498e-05, 6.32500000000008e-05, 6.336099999999789e-05, 6.279199999999902e-05, 6.28059...</msg>
<status status="PASS" starttime="20201030 15:52:59.659" endtime="20201030 15:52:59.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.679" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.676" endtime="20201030 15:52:59.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.684" level="INFO">VALUE: [6.252699999999972e-05, 6.265200000000332e-05, 6.256899999999843e-05, 6.334700000000526e-05, 6.347199999999498e-05, 6.32500000000008e-05, 6.336099999999789e-05, 6.279199999999902e-05, 6.280599999999859e-05, 6.333399999999823e-05, 6.318100000000243e-05, 6.254199999999877e-05, 6.269499999999456e-05, 6.312500000000415e-05, 6.32500000000008e-05, 6.279099999999954e-05, 6.2582999999998e-05, 6.290200000000357e-05, 6.337499999999746e-05, 6.300000000000056e-05, 6.258300000000494e-05, 6.348599999999455e-05, 6.288899999999653e-05, 6.294500000000175e-05, 6.311100000000458e-05, 6.259700000000451e-05, 6.341700000000311e-05, 6.280600000000552e-05, 6.258400000000441e-05, 6.340300000000354e-05, 6.25699999999979e-05, 6.258400000000441e-05, 6.263900000000322e-05, 6.326400000000038e-05, 6.280500000000605e-05, 6.2582999999998e-05, 6.304199999999927e-05, 6.312499999999721e-05, 6.256899999999843e-05, 6.290300000000304e-05, 6.2582999999998e-05, 6.2582999999998e-05, 6.347200000000192e-05, 6.291700000000261e-05, 6.266700000000236e-05, 6.309799999999754e-05, 6.259799999999704e-05, 6.299999999999362e-05, 6.256900000000537e-05, 6.276399999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.681" endtime="20201030 15:52:59.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.669" endtime="20201030 15:52:59.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.697" endtime="20201030 15:52:59.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.692" endtime="20201030 15:52:59.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.690" endtime="20201030 15:52:59.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.173" endtime="20201030 15:52:59.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.172" endtime="20201030 15:52:59.722"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.745" endtime="20201030 15:52:59.766"></status>
</kw>
<msg timestamp="20201030 15:52:59.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.742" endtime="20201030 15:52:59.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.769" endtime="20201030 15:52:59.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.776" endtime="20201030 15:52:59.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.734" endtime="20201030 15:52:59.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.729" endtime="20201030 15:52:59.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.799" endtime="20201030 15:53:00.152"></status>
</kw>
<msg timestamp="20201030 15:53:00.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042186208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.796" endtime="20201030 15:53:00.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042186208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.161" endtime="20201030 15:53:00.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.180" endtime="20201030 15:53:00.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.789" endtime="20201030 15:53:00.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.784" endtime="20201030 15:53:00.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.197" level="INFO">${RESULT} = [{'diff': 6.362500000000465e-05}, {'diff': 6.379100000000054e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.368000000000346e-05}, {'diff': 6.434699999999932e-05}, {'diff': 6.368000000000346e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:00.188" endtime="20201030 15:53:00.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.213" level="INFO">${ACCURACY} = {'diff': [6.362500000000465e-05, 6.379100000000054e-05, 6.380500000000011e-05, 6.368000000000346e-05, 6.434699999999932e-05, 6.368000000000346e-05, 6.362499999999771e-05, 6.356900000000637e-05, 6.3957...</msg>
<status status="PASS" starttime="20201030 15:53:00.199" endtime="20201030 15:53:00.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.224" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.221" endtime="20201030 15:53:00.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.229" level="INFO">VALUE: [6.362500000000465e-05, 6.379100000000054e-05, 6.380500000000011e-05, 6.368000000000346e-05, 6.434699999999932e-05, 6.368000000000346e-05, 6.362499999999771e-05, 6.356900000000637e-05, 6.395799999999591e-05, 6.413900000000472e-05, 6.379200000000002e-05, 6.370899999999513e-05, 6.43479999999988e-05, 6.427800000000095e-05, 6.368100000000293e-05, 6.402699999999428e-05, 6.434699999999932e-05, 6.3582999999999e-05, 6.40280000000007e-05, 6.413899999999778e-05, 6.450000000000206e-05, 6.356899999999943e-05, 6.42500000000018e-05, 6.400000000000156e-05, 6.381999999999916e-05, 6.377800000000045e-05, 6.40280000000007e-05, 6.380599999999959e-05, 6.430600000000009e-05, 6.368099999999599e-05, 6.391700000000361e-05, 6.39159999999972e-05, 6.358300000000594e-05, 6.436099999999889e-05, 6.426400000000138e-05, 6.3582999999999e-05, 6.366600000000389e-05, 6.405599999999984e-05, 6.356899999999943e-05, 6.404200000000027e-05, 6.413899999999778e-05, 6.381999999999916e-05, 6.401400000000113e-05, 6.368100000000293e-05, 6.409799999999855e-05, 6.35699999999989e-05, 6.448600000000249e-05, 6.380500000000011e-05, 6.380500000000011e-05, 6.412499999999821e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.226" endtime="20201030 15:53:00.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.215" endtime="20201030 15:53:00.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.242" endtime="20201030 15:53:00.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.237" endtime="20201030 15:53:00.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.235" endtime="20201030 15:53:00.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.724" endtime="20201030 15:53:00.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.723" endtime="20201030 15:53:00.267"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.290" endtime="20201030 15:53:00.311"></status>
</kw>
<msg timestamp="20201030 15:53:00.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.287" endtime="20201030 15:53:00.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.314" endtime="20201030 15:53:00.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.321" endtime="20201030 15:53:00.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.279" endtime="20201030 15:53:00.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.273" endtime="20201030 15:53:00.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.344" endtime="20201030 15:53:00.698"></status>
</kw>
<msg timestamp="20201030 15:53:00.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.341" endtime="20201030 15:53:00.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.708" endtime="20201030 15:53:00.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.726" endtime="20201030 15:53:00.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.334" endtime="20201030 15:53:00.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.329" endtime="20201030 15:53:00.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.743" level="INFO">${RESULT} = [{'diff': 6.543100000000468e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.504199999999433e-05}, {'diff': 6.501399999999519e-05}, {'diff': 6.459800000000598e-05}, {'diff': 6.466700000000436e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:00.735" endtime="20201030 15:53:00.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.753" level="INFO">${ACCURACY} = {'diff': [6.543100000000468e-05, 6.480600000000059e-05, 6.504199999999433e-05, 6.501399999999519e-05, 6.459800000000598e-05, 6.466700000000436e-05, 6.491699999999767e-05, 6.501400000000213e-05, 6.5528...</msg>
<status status="PASS" starttime="20201030 15:53:00.746" endtime="20201030 15:53:00.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.764" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.762" endtime="20201030 15:53:00.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.769" level="INFO">VALUE: [6.543100000000468e-05, 6.480600000000059e-05, 6.504199999999433e-05, 6.501399999999519e-05, 6.459800000000598e-05, 6.466700000000436e-05, 6.491699999999767e-05, 6.501400000000213e-05, 6.55280000000022e-05, 6.469399999999709e-05, 6.47909999999946e-05, 6.523600000000324e-05, 6.4583e-05, 6.502799999999476e-05, 6.491699999999767e-05, 6.52500000000028e-05, 6.523600000000324e-05, 6.524999999999587e-05, 6.463800000000575e-05, 6.52080000000041e-05, 6.458399999999948e-05, 6.547300000000339e-05, 6.469499999999656e-05, 6.50280000000017e-05, 6.479200000000102e-05, 6.544500000000425e-05, 6.524999999999587e-05, 6.551399999999569e-05, 6.544399999999784e-05, 6.52500000000028e-05, 6.4583e-05, 6.491699999999767e-05, 6.516699999999792e-05, 6.548599999999655e-05, 6.456900000000043e-05, 6.480600000000059e-05, 6.534700000000032e-05, 6.472200000000317e-05, 6.484699999999982e-05, 6.46950000000035e-05, 6.481900000000068e-05, 6.545899999999688e-05, 6.545799999999741e-05, 6.477700000000197e-05, 6.513899999999878e-05, 6.479100000000154e-05, 6.509799999999955e-05, 6.512499999999921e-05, 6.504200000000127e-05, 6.534699999999338e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.766" endtime="20201030 15:53:00.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.755" endtime="20201030 15:53:00.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.782" endtime="20201030 15:53:00.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.778" endtime="20201030 15:53:00.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.775" endtime="20201030 15:53:00.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.269" endtime="20201030 15:53:00.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.268" endtime="20201030 15:53:00.807"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.830" endtime="20201030 15:53:00.853"></status>
</kw>
<msg timestamp="20201030 15:53:00.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.827" endtime="20201030 15:53:00.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.856" endtime="20201030 15:53:00.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.862" endtime="20201030 15:53:00.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.820" endtime="20201030 15:53:00.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.814" endtime="20201030 15:53:00.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.886" endtime="20201030 15:53:01.233"></status>
</kw>
<msg timestamp="20201030 15:53:01.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043214167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043280139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.883" endtime="20201030 15:53:01.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043214167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043280139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.243" endtime="20201030 15:53:01.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.262" endtime="20201030 15:53:01.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.875" endtime="20201030 15:53:01.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.871" endtime="20201030 15:53:01.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.279" level="INFO">${RESULT} = [{'diff': 6.597200000000442e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.577800000000245e-05}, {'diff': 6.60280000000027e-05}, {'diff': 6.597300000000389e-05}, {'diff': 6.554200000000177e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:01.270" endtime="20201030 15:53:01.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.289" level="INFO">${ACCURACY} = {'diff': [6.597200000000442e-05, 6.615299999999935e-05, 6.577800000000245e-05, 6.60280000000027e-05, 6.597300000000389e-05, 6.554200000000177e-05, 6.558400000000048e-05, 6.588899999999953e-05, 6.60270...</msg>
<status status="PASS" starttime="20201030 15:53:01.281" endtime="20201030 15:53:01.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.299" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.297" endtime="20201030 15:53:01.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.306" level="INFO">VALUE: [6.597200000000442e-05, 6.615299999999935e-05, 6.577800000000245e-05, 6.60280000000027e-05, 6.597300000000389e-05, 6.554200000000177e-05, 6.558400000000048e-05, 6.588899999999953e-05, 6.602700000000322e-05, 6.645799999999841e-05, 6.634700000000132e-05, 6.634699999999438e-05, 6.601400000000313e-05, 6.60280000000027e-05, 6.62359999999973e-05, 6.604200000000227e-05, 6.556900000000143e-05, 6.568099999999799e-05, 6.583300000000125e-05, 6.633400000000123e-05, 6.579199999999508e-05, 6.582000000000116e-05, 6.640300000000654e-05, 6.583300000000125e-05, 6.647200000000492e-05, 6.59159999999992e-05, 6.636100000000089e-05, 6.597200000000442e-05, 6.620799999999816e-05, 6.624999999999687e-05, 6.573600000000374e-05, 6.5583000000001e-05, 6.579200000000202e-05, 6.591700000000561e-05, 6.558400000000048e-05, 6.594499999999781e-05, 6.558400000000048e-05, 6.648700000000396e-05, 6.59029999999991e-05, 6.612500000000021e-05, 6.5583000000001e-05, 6.645800000000535e-05, 6.647199999999798e-05, 6.565199999999938e-05, 6.587499999999996e-05, 6.601399999999619e-05, 6.593099999999824e-05, 6.624999999999687e-05, 6.613899999999978e-05, 6.5583000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.302" endtime="20201030 15:53:01.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.290" endtime="20201030 15:53:01.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.323" endtime="20201030 15:53:01.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.316" endtime="20201030 15:53:01.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.313" endtime="20201030 15:53:01.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.810" endtime="20201030 15:53:01.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.808" endtime="20201030 15:53:01.350"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.379" endtime="20201030 15:53:01.401"></status>
</kw>
<msg timestamp="20201030 15:53:01.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.374" endtime="20201030 15:53:01.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.405" endtime="20201030 15:53:01.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.413" endtime="20201030 15:53:01.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.364" endtime="20201030 15:53:01.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.357" endtime="20201030 15:53:01.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.441" endtime="20201030 15:53:01.780"></status>
</kw>
<msg timestamp="20201030 15:53:01.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050704806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050772181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.437" endtime="20201030 15:53:01.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050704806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050772181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.789" endtime="20201030 15:53:01.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.808" endtime="20201030 15:53:01.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.429" endtime="20201030 15:53:01.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.423" endtime="20201030 15:53:01.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.826" level="INFO">${RESULT} = [{'diff': 6.737500000000146e-05}, {'diff': 6.745900000000582e-05}, {'diff': 6.736100000000189e-05}, {'diff': 6.71109999999947e-05}, {'diff': 6.680500000000311e-05}, {'diff': 6.677700000000397e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:01.817" endtime="20201030 15:53:01.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.836" level="INFO">${ACCURACY} = {'diff': [6.737500000000146e-05, 6.745900000000582e-05, 6.736100000000189e-05, 6.71109999999947e-05, 6.680500000000311e-05, 6.677700000000397e-05, 6.706999999999547e-05, 6.667999999999952e-05, 6.74579...</msg>
<status status="PASS" starttime="20201030 15:53:01.828" endtime="20201030 15:53:01.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.847" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.845" endtime="20201030 15:53:01.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.853" level="INFO">VALUE: [6.737500000000146e-05, 6.745900000000582e-05, 6.736100000000189e-05, 6.71109999999947e-05, 6.680500000000311e-05, 6.677700000000397e-05, 6.706999999999547e-05, 6.667999999999952e-05, 6.745799999999941e-05, 6.69030000000001e-05, 6.733300000000275e-05, 6.723600000000524e-05, 6.658400000000148e-05, 6.679200000000302e-05, 6.659800000000105e-05, 6.679200000000302e-05, 6.745899999999888e-05, 6.679100000000354e-05, 6.736100000000189e-05, 6.745799999999941e-05, 6.690200000000063e-05, 6.69160000000002e-05, 6.667999999999952e-05, 6.726400000000438e-05, 6.668099999999899e-05, 6.679200000000302e-05, 6.686100000000139e-05, 6.736100000000189e-05, 6.736100000000189e-05, 6.734799999999486e-05, 6.651400000000363e-05, 6.65700000000019e-05, 6.6583000000002e-05, 6.698700000000446e-05, 6.74030000000006e-05, 6.743000000000027e-05, 6.655500000000286e-05, 6.688900000000053e-05, 6.734699999999538e-05, 6.672199999999823e-05, 6.656899999999549e-05, 6.723600000000524e-05, 6.669499999999856e-05, 6.701399999999719e-05, 6.708399999999504e-05, 6.734700000000232e-05, 6.712500000000121e-05, 6.70280000000037e-05, 6.673600000000474e-05, 6.658299999999506e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.850" endtime="20201030 15:53:01.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.838" endtime="20201030 15:53:01.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.865" endtime="20201030 15:53:01.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.861" endtime="20201030 15:53:01.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.859" endtime="20201030 15:53:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.352" endtime="20201030 15:53:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.351" endtime="20201030 15:53:01.891"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.913" endtime="20201030 15:53:01.935"></status>
</kw>
<msg timestamp="20201030 15:53:01.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.910" endtime="20201030 15:53:01.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.938" endtime="20201030 15:53:01.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.944" endtime="20201030 15:53:01.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.903" endtime="20201030 15:53:01.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.897" endtime="20201030 15:53:01.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.968" endtime="20201030 15:53:02.262"></status>
</kw>
<msg timestamp="20201030 15:53:02.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041892903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041961194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.965" endtime="20201030 15:53:02.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041892903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041961194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.267" endtime="20201030 15:53:02.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.275" endtime="20201030 15:53:02.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.958" endtime="20201030 15:53:02.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.953" endtime="20201030 15:53:02.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.283" level="INFO">${RESULT} = [{'diff': 6.82909999999981e-05}, {'diff': 6.82359999999993e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.802799999999776e-05}, {'diff': 6.7583000000003e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:53:02.279" endtime="20201030 15:53:02.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.288" level="INFO">${ACCURACY} = {'diff': [6.82909999999981e-05, 6.82359999999993e-05, 6.847199999999998e-05, 6.845800000000041e-05, 6.802799999999776e-05, 6.7583000000003e-05, 6.780499999999717e-05, 6.782000000000316e-05, 6.84580000...</msg>
<status status="PASS" starttime="20201030 15:53:02.284" endtime="20201030 15:53:02.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.294" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.293" endtime="20201030 15:53:02.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.296" level="INFO">VALUE: [6.82909999999981e-05, 6.82359999999993e-05, 6.847199999999998e-05, 6.845800000000041e-05, 6.802799999999776e-05, 6.7583000000003e-05, 6.780499999999717e-05, 6.782000000000316e-05, 6.845800000000041e-05, 6.761100000000214e-05, 6.82359999999993e-05, 6.802799999999776e-05, 6.777799999999751e-05, 6.836100000000289e-05, 6.813899999999484e-05, 6.837500000000246e-05, 6.758299999999606e-05, 6.766600000000095e-05, 6.758299999999606e-05, 6.820800000000016e-05, 6.788900000000153e-05, 6.770799999999966e-05, 6.811100000000264e-05, 6.834699999999638e-05, 6.801399999999819e-05, 6.802799999999776e-05, 6.791700000000067e-05, 6.79030000000011e-05, 6.762500000000171e-05, 6.833399999999629e-05, 6.827699999999853e-05, 6.786100000000239e-05, 6.826399999999844e-05, 6.801400000000513e-05, 6.790200000000163e-05, 6.77909999999976e-05, 6.819400000000059e-05, 6.7583000000003e-05, 6.808400000000298e-05, 6.837500000000246e-05, 6.797199999999948e-05, 6.82229999999992e-05, 6.780600000000359e-05, 6.75700000000029e-05, 6.815300000000135e-05, 6.769400000000009e-05, 6.770799999999966e-05, 6.77909999999976e-05, 6.759699999999563e-05, 6.82909999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.295" endtime="20201030 15:53:02.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.289" endtime="20201030 15:53:02.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.302" endtime="20201030 15:53:02.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.300" endtime="20201030 15:53:02.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.299" endtime="20201030 15:53:02.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.893" endtime="20201030 15:53:02.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.891" endtime="20201030 15:53:02.323"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.334" endtime="20201030 15:53:02.352"></status>
</kw>
<msg timestamp="20201030 15:53:02.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.332" endtime="20201030 15:53:02.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.353" endtime="20201030 15:53:02.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.356" endtime="20201030 15:53:02.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.329" endtime="20201030 15:53:02.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.326" endtime="20201030 15:53:02.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.367" endtime="20201030 15:53:02.673"></status>
</kw>
<msg timestamp="20201030 15:53:02.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024535986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024604667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.366" endtime="20201030 15:53:02.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024535986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024604667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.682" endtime="20201030 15:53:02.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.701" endtime="20201030 15:53:02.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.362" endtime="20201030 15:53:02.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.360" endtime="20201030 15:53:02.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.719" level="INFO">${RESULT} = [{'diff': 6.868100000000099e-05}, {'diff': 6.936100000000042e-05}, {'diff': 6.879199999999808e-05}, {'diff': 6.924999999999987e-05}, {'diff': 6.912499999999974e-05}, {'diff': 6.880499999999817e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.710" endtime="20201030 15:53:02.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.728" level="INFO">${ACCURACY} = {'diff': [6.868100000000099e-05, 6.936100000000042e-05, 6.879199999999808e-05, 6.924999999999987e-05, 6.912499999999974e-05, 6.880499999999817e-05, 6.934700000000085e-05, 6.913899999999931e-05, 6.9194...</msg>
<status status="PASS" starttime="20201030 15:53:02.721" endtime="20201030 15:53:02.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.739" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.737" endtime="20201030 15:53:02.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.744" level="INFO">VALUE: [6.868100000000099e-05, 6.936100000000042e-05, 6.879199999999808e-05, 6.924999999999987e-05, 6.912499999999974e-05, 6.880499999999817e-05, 6.934700000000085e-05, 6.913899999999931e-05, 6.919499999999759e-05, 6.924999999999987e-05, 6.92360000000003e-05, 6.947200000000098e-05, 6.948600000000055e-05, 6.879199999999808e-05, 6.89030000000021e-05, 6.893099999999777e-05, 6.923599999999683e-05, 6.936100000000042e-05, 6.890299999999863e-05, 6.901399999999919e-05, 6.888899999999906e-05, 6.945800000000141e-05, 6.858299999999706e-05, 6.883300000000078e-05, 6.916699999999845e-05, 6.858300000000053e-05, 6.920800000000116e-05, 6.933300000000128e-05, 6.856900000000096e-05, 6.938899999999956e-05, 6.934700000000085e-05, 6.912499999999974e-05, 6.913899999999931e-05, 6.93619999999999e-05, 6.924999999999987e-05, 6.948600000000055e-05, 6.901299999999971e-05, 6.897200000000048e-05, 6.879100000000207e-05, 6.902800000000223e-05, 6.912499999999974e-05, 6.888900000000253e-05, 6.869399999999762e-05, 6.902800000000223e-05, 6.924999999999987e-05, 6.861199999999915e-05, 6.902800000000223e-05, 6.934700000000085e-05, 6.904199999999833e-05, 6.930499999999867e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.741" endtime="20201030 15:53:02.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.730" endtime="20201030 15:53:02.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.764" endtime="20201030 15:53:02.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.760" endtime="20201030 15:53:02.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.757" endtime="20201030 15:53:02.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.324" endtime="20201030 15:53:02.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.324" endtime="20201030 15:53:02.789"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.821" endtime="20201030 15:53:02.845"></status>
</kw>
<msg timestamp="20201030 15:53:02.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.818" endtime="20201030 15:53:02.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.849" endtime="20201030 15:53:02.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.856" endtime="20201030 15:53:02.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.809" endtime="20201030 15:53:02.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.802" endtime="20201030 15:53:02.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.879" endtime="20201030 15:53:03.212"></status>
</kw>
<msg timestamp="20201030 15:53:03.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0531305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053200792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:02.876" endtime="20201030 15:53:03.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0531305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053200792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:03.222" endtime="20201030 15:53:03.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.240" endtime="20201030 15:53:03.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.869" endtime="20201030 15:53:03.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.864" endtime="20201030 15:53:03.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.257" level="INFO">${RESULT} = [{'diff': 7.029199999999958e-05}, {'diff': 6.958399999999754e-05}, {'diff': 7.004099999999985e-05}, {'diff': 6.991599999999626e-05}, {'diff': 7.001400000000019e-05}, {'diff': 7.013900000000378e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.248" endtime="20201030 15:53:03.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.266" level="INFO">${ACCURACY} = {'diff': [7.029199999999958e-05, 6.958399999999754e-05, 7.004099999999985e-05, 6.991599999999626e-05, 7.001400000000019e-05, 7.013900000000378e-05, 7.012499999999727e-05, 7.013900000000378e-05, 7.0125...</msg>
<status status="PASS" starttime="20201030 15:53:03.259" endtime="20201030 15:53:03.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.277" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.275" endtime="20201030 15:53:03.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.282" level="INFO">VALUE: [7.029199999999958e-05, 6.958399999999754e-05, 7.004099999999985e-05, 6.991599999999626e-05, 7.001400000000019e-05, 7.013900000000378e-05, 7.012499999999727e-05, 7.013900000000378e-05, 7.012500000000421e-05, 7.012499999999727e-05, 6.969500000000156e-05, 7.022199999999479e-05, 6.959699999999763e-05, 7.001400000000019e-05, 6.969500000000156e-05, 6.958400000000448e-05, 7.045900000000188e-05, 6.993000000000277e-05, 6.977799999999951e-05, 6.980499999999917e-05, 7.025000000000087e-05, 6.956899999999849e-05, 7.026400000000044e-05, 7.033299999999881e-05, 7.001400000000019e-05, 7.047199999999504e-05, 7.000000000000062e-05, 7.013899999999684e-05, 7.008299999999856e-05, 6.966699999999548e-05, 6.955600000000534e-05, 6.990299999999616e-05, 7.023700000000077e-05, 6.956999999999797e-05, 6.984700000000482e-05, 7.047200000000198e-05, 6.990200000000363e-05, 6.981899999999874e-05, 7.001400000000019e-05, 7.013899999999684e-05, 6.988899999999659e-05, 6.956899999999849e-05, 7.013899999999684e-05, 7.045800000000241e-05, 7.004200000000627e-05, 6.956999999999797e-05, 7.037500000000446e-05, 7.001300000000071e-05, 6.961100000000414e-05, 7.027800000000001e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.279" endtime="20201030 15:53:03.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.268" endtime="20201030 15:53:03.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.297" endtime="20201030 15:53:03.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.291" endtime="20201030 15:53:03.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.288" endtime="20201030 15:53:03.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.792" endtime="20201030 15:53:03.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.790" endtime="20201030 15:53:03.321"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.344" endtime="20201030 15:53:03.365"></status>
</kw>
<msg timestamp="20201030 15:53:03.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.340" endtime="20201030 15:53:03.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.368" endtime="20201030 15:53:03.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.374" endtime="20201030 15:53:03.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.333" endtime="20201030 15:53:03.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.328" endtime="20201030 15:53:03.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.398" endtime="20201030 15:53:03.733"></status>
</kw>
<msg timestamp="20201030 15:53:03.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040713764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040784514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.394" endtime="20201030 15:53:03.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040713764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040784514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.742" endtime="20201030 15:53:03.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.761" endtime="20201030 15:53:03.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.387" endtime="20201030 15:53:03.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.382" endtime="20201030 15:53:03.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.778" level="INFO">${RESULT} = [{'diff': 7.075000000000137e-05}, {'diff': 7.104200000000033e-05}, {'diff': 7.09030000000041e-05}, {'diff': 7.09309999999963e-05}, {'diff': 7.147200000000298e-05}, {'diff': 7.056999999999897e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:03.769" endtime="20201030 15:53:03.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.789" level="INFO">${ACCURACY} = {'diff': [7.075000000000137e-05, 7.104200000000033e-05, 7.09030000000041e-05, 7.09309999999963e-05, 7.147200000000298e-05, 7.056999999999897e-05, 7.134799999999886e-05, 7.120900000000263e-05, 7.136200...</msg>
<status status="PASS" starttime="20201030 15:53:03.780" endtime="20201030 15:53:03.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.799" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.797" endtime="20201030 15:53:03.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.805" level="INFO">VALUE: [7.075000000000137e-05, 7.104200000000033e-05, 7.09030000000041e-05, 7.09309999999963e-05, 7.147200000000298e-05, 7.056999999999897e-05, 7.134799999999886e-05, 7.120900000000263e-05, 7.136200000000537e-05, 7.123700000000177e-05, 7.123599999999536e-05, 7.080500000000017e-05, 7.147200000000298e-05, 7.136099999999895e-05, 7.150000000000212e-05, 7.061199999999768e-05, 7.070800000000266e-05, 7.144400000000384e-05, 7.120800000000316e-05, 7.145899999999594e-05, 7.068099999999605e-05, 7.081999999999922e-05, 7.077799999999357e-05, 7.091699999999673e-05, 7.067999999999658e-05, 7.063900000000428e-05, 7.147199999999604e-05, 7.07910000000006e-05, 7.080500000000017e-05, 7.130600000000015e-05, 7.09030000000041e-05, 7.102800000000076e-05, 7.079200000000008e-05, 7.144400000000384e-05, 7.056999999999897e-05, 7.058399999999854e-05, 7.080599999999965e-05, 7.068100000000299e-05, 7.102800000000076e-05, 7.058299999999906e-05, 7.05689999999995e-05, 7.137500000000546e-05, 7.148599999999561e-05, 7.069400000000309e-05, 7.136099999999895e-05, 7.133299999999981e-05, 7.136099999999895e-05, 7.079200000000008e-05, 7.051399999999375e-05, 7.138800000000556e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.802" endtime="20201030 15:53:03.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.790" endtime="20201030 15:53:03.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.817" endtime="20201030 15:53:03.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.813" endtime="20201030 15:53:03.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.810" endtime="20201030 15:53:03.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.323" endtime="20201030 15:53:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.322" endtime="20201030 15:53:03.842"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.864" endtime="20201030 15:53:03.885"></status>
</kw>
<msg timestamp="20201030 15:53:03.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.861" endtime="20201030 15:53:03.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.889" endtime="20201030 15:53:03.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.895" endtime="20201030 15:53:03.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.854" endtime="20201030 15:53:03.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.848" endtime="20201030 15:53:03.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.918" endtime="20201030 15:53:04.251"></status>
</kw>
<msg timestamp="20201030 15:53:04.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040776236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040847764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.915" endtime="20201030 15:53:04.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040776236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040847764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.261" endtime="20201030 15:53:04.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.279" endtime="20201030 15:53:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.908" endtime="20201030 15:53:04.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.903" endtime="20201030 15:53:04.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.296" level="INFO">${RESULT} = [{'diff': 7.152800000000126e-05}, {'diff': 7.158300000000006e-05}, {'diff': 7.22360000000033e-05}, {'diff': 7.236099999999995e-05}, {'diff': 7.22360000000033e-05}, {'diff': 7.15560000000004e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:04.287" endtime="20201030 15:53:04.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.307" level="INFO">${ACCURACY} = {'diff': [7.152800000000126e-05, 7.158300000000006e-05, 7.22360000000033e-05, 7.236099999999995e-05, 7.22360000000033e-05, 7.15560000000004e-05, 7.158399999999954e-05, 7.211199999999918e-05, 7.1915999...</msg>
<status status="PASS" starttime="20201030 15:53:04.298" endtime="20201030 15:53:04.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.318" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.316" endtime="20201030 15:53:04.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.323" level="INFO">VALUE: [7.152800000000126e-05, 7.158300000000006e-05, 7.22360000000033e-05, 7.236099999999995e-05, 7.22360000000033e-05, 7.15560000000004e-05, 7.158399999999954e-05, 7.211199999999918e-05, 7.191599999999826e-05, 7.212500000000621e-05, 7.212499999999927e-05, 7.15690000000005e-05, 7.169399999999715e-05, 7.190299999999816e-05, 7.222200000000373e-05, 7.158300000000006e-05, 7.202800000000176e-05, 7.201399999999525e-05, 7.238799999999962e-05, 7.193100000000424e-05, 7.232000000000072e-05, 7.201399999999525e-05, 7.213900000000578e-05, 7.191599999999826e-05, 7.180500000000117e-05, 7.236099999999995e-05, 7.208300000000056e-05, 7.236099999999995e-05, 7.170900000000313e-05, 7.202800000000176e-05, 7.22360000000033e-05, 7.247199999999704e-05, 7.200000000000262e-05, 7.180600000000065e-05, 7.213900000000578e-05, 7.169499999999662e-05, 7.247299999999651e-05, 7.168100000000399e-05, 7.213799999999937e-05, 7.15690000000005e-05, 7.247199999999704e-05, 7.159699999999963e-05, 7.22360000000033e-05, 7.234700000000038e-05, 7.180600000000065e-05, 7.212499999999927e-05, 7.236099999999995e-05, 7.169500000000356e-05, 7.188900000000553e-05, 7.247300000000345e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.320" endtime="20201030 15:53:04.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.309" endtime="20201030 15:53:04.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.336" endtime="20201030 15:53:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.331" endtime="20201030 15:53:04.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.329" endtime="20201030 15:53:04.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.844" endtime="20201030 15:53:04.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.843" endtime="20201030 15:53:04.360"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.383" endtime="20201030 15:53:04.405"></status>
</kw>
<msg timestamp="20201030 15:53:04.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.380" endtime="20201030 15:53:04.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.409" endtime="20201030 15:53:04.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.415" endtime="20201030 15:53:04.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.372" endtime="20201030 15:53:04.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.367" endtime="20201030 15:53:04.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.438" endtime="20201030 15:53:04.775"></status>
</kw>
<msg timestamp="20201030 15:53:04.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040666403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.435" endtime="20201030 15:53:04.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040666403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040739042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.784" endtime="20201030 15:53:04.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.803" endtime="20201030 15:53:04.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.428" endtime="20201030 15:53:04.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.423" endtime="20201030 15:53:04.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.820" level="INFO">${RESULT} = [{'diff': 7.263900000000628e-05}, {'diff': 7.257000000000097e-05}, {'diff': 7.334800000000086e-05}, {'diff': 7.267999999999858e-05}, {'diff': 7.333299999999487e-05}, {'diff': 7.308300000000156e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:04.811" endtime="20201030 15:53:04.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.829" level="INFO">${ACCURACY} = {'diff': [7.263900000000628e-05, 7.257000000000097e-05, 7.334800000000086e-05, 7.267999999999858e-05, 7.333299999999487e-05, 7.308300000000156e-05, 7.280499999999523e-05, 7.263899999999934e-05, 7.3181...</msg>
<status status="PASS" starttime="20201030 15:53:04.822" endtime="20201030 15:53:04.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.840" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.838" endtime="20201030 15:53:04.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.845" level="INFO">VALUE: [7.263900000000628e-05, 7.257000000000097e-05, 7.334800000000086e-05, 7.267999999999858e-05, 7.333299999999487e-05, 7.308300000000156e-05, 7.280499999999523e-05, 7.263899999999934e-05, 7.318100000000549e-05, 7.283400000000079e-05, 7.312500000000027e-05, 7.336100000000095e-05, 7.323599999999736e-05, 7.301399999999625e-05, 7.347299999999751e-05, 7.334800000000086e-05, 7.269500000000456e-05, 7.345899999999794e-05, 7.337500000000052e-05, 7.312500000000027e-05, 7.31110000000007e-05, 7.347200000000498e-05, 7.290299999999916e-05, 7.275000000000337e-05, 7.336100000000095e-05, 7.312500000000027e-05, 7.302799999999582e-05, 7.275000000000337e-05, 7.288899999999959e-05, 7.32639999999965e-05, 7.311200000000018e-05, 7.277799999999557e-05, 7.348600000000455e-05, 7.27910000000026e-05, 7.347199999999804e-05, 7.312500000000027e-05, 7.288899999999959e-05, 7.259700000000063e-05, 7.279200000000208e-05, 7.312500000000027e-05, 7.325000000000387e-05, 7.334700000000138e-05, 7.347200000000498e-05, 7.25560000000014e-05, 7.258400000000054e-05, 7.324999999999693e-05, 7.257000000000097e-05, 7.325000000000387e-05, 7.345799999999847e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.842" endtime="20201030 15:53:04.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.831" endtime="20201030 15:53:04.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.858" endtime="20201030 15:53:04.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.853" endtime="20201030 15:53:04.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.851" endtime="20201030 15:53:04.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.363" endtime="20201030 15:53:04.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.361" endtime="20201030 15:53:04.883"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.905" endtime="20201030 15:53:04.933"></status>
</kw>
<msg timestamp="20201030 15:53:04.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.902" endtime="20201030 15:53:04.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.936" endtime="20201030 15:53:04.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.942" endtime="20201030 15:53:04.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.895" endtime="20201030 15:53:04.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.889" endtime="20201030 15:53:04.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.965" endtime="20201030 15:53:05.297"></status>
</kw>
<msg timestamp="20201030 15:53:05.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047326333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047400097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.962" endtime="20201030 15:53:05.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047326333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047400097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.306" endtime="20201030 15:53:05.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.325" endtime="20201030 15:53:05.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.955" endtime="20201030 15:53:05.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.950" endtime="20201030 15:53:05.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.342" level="INFO">${RESULT} = [{'diff': 7.376400000000394e-05}, {'diff': 7.41389999999939e-05}, {'diff': 7.369499999999862e-05}, {'diff': 7.391600000000026e-05}, {'diff': 7.42360000000053e-05}, {'diff': 7.358299999999512e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:05.333" endtime="20201030 15:53:05.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.351" level="INFO">${ACCURACY} = {'diff': [7.376400000000394e-05, 7.41389999999939e-05, 7.369499999999862e-05, 7.391600000000026e-05, 7.42360000000053e-05, 7.358299999999512e-05, 7.388900000000059e-05, 7.401399999999725e-05, 7.415300...</msg>
<status status="PASS" starttime="20201030 15:53:05.344" endtime="20201030 15:53:05.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.362" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.359" endtime="20201030 15:53:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.367" level="INFO">VALUE: [7.376400000000394e-05, 7.41389999999939e-05, 7.369499999999862e-05, 7.391600000000026e-05, 7.42360000000053e-05, 7.358299999999512e-05, 7.388900000000059e-05, 7.401399999999725e-05, 7.415300000000041e-05, 7.377800000000351e-05, 7.35969999999947e-05, 7.369499999999862e-05, 7.368100000000599e-05, 7.402799999999682e-05, 7.390300000000016e-05, 7.390300000000016e-05, 7.426299999999803e-05, 7.444499999999937e-05, 7.35969999999947e-05, 7.362500000000077e-05, 7.35690000000025e-05, 7.42639999999975e-05, 7.391699999999973e-05, 7.401400000000419e-05, 7.448599999999861e-05, 7.445799999999947e-05, 7.369499999999862e-05, 7.379200000000308e-05, 7.436099999999501e-05, 7.352799999999632e-05, 7.415200000000094e-05, 7.424999999999793e-05, 7.379199999999614e-05, 7.355499999999598e-05, 7.379099999999666e-05, 7.388900000000059e-05, 7.426400000000444e-05, 7.369399999999915e-05, 7.365299999999991e-05, 7.358299999999512e-05, 7.434700000000238e-05, 7.369499999999862e-05, 7.438800000000162e-05, 7.355599999999546e-05, 7.380600000000265e-05, 7.386200000000093e-05, 7.447199999999904e-05, 7.369399999999915e-05, 7.379099999999666e-05, 7.367999999999958e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.364" endtime="20201030 15:53:05.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.353" endtime="20201030 15:53:05.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.381" endtime="20201030 15:53:05.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.375" endtime="20201030 15:53:05.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.373" endtime="20201030 15:53:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.885" endtime="20201030 15:53:05.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.884" endtime="20201030 15:53:05.406"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.428" endtime="20201030 15:53:05.449"></status>
</kw>
<msg timestamp="20201030 15:53:05.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.425" endtime="20201030 15:53:05.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.452" endtime="20201030 15:53:05.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.458" endtime="20201030 15:53:05.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.418" endtime="20201030 15:53:05.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.412" endtime="20201030 15:53:05.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.482" endtime="20201030 15:53:05.815"></status>
</kw>
<msg timestamp="20201030 15:53:05.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04072975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040804708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:05.478" endtime="20201030 15:53:05.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04072975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040804708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:05.824" endtime="20201030 15:53:05.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.842" endtime="20201030 15:53:05.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.471" endtime="20201030 15:53:05.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.467" endtime="20201030 15:53:05.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.860" level="INFO">${RESULT} = [{'diff': 7.495799999999997e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.523599999999936e-05}, {'diff': 7.459700000000263e-05}, {'diff': 7.497299999999901e-05}, {'diff': 7.466700000000048e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.851" endtime="20201030 15:53:05.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.870" level="INFO">${ACCURACY} = {'diff': [7.495799999999997e-05, 7.465300000000091e-05, 7.523599999999936e-05, 7.459700000000263e-05, 7.497299999999901e-05, 7.466700000000048e-05, 7.537500000000252e-05, 7.497199999999954e-05, 7.5139...</msg>
<status status="PASS" starttime="20201030 15:53:05.862" endtime="20201030 15:53:05.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.881" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.879" endtime="20201030 15:53:05.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.886" level="INFO">VALUE: [7.495799999999997e-05, 7.465300000000091e-05, 7.523599999999936e-05, 7.459700000000263e-05, 7.497299999999901e-05, 7.466700000000048e-05, 7.537500000000252e-05, 7.497199999999954e-05, 7.513900000000184e-05, 7.502800000000476e-05, 7.49310000000003e-05, 7.480599999999671e-05, 7.490200000000169e-05, 7.545800000000047e-05, 7.509700000000313e-05, 7.484700000000288e-05, 7.455500000000392e-05, 7.501399999999825e-05, 7.54440000000009e-05, 7.545800000000047e-05, 7.502799999999782e-05, 7.512500000000227e-05, 7.547299999999951e-05, 7.513900000000184e-05, 7.545899999999994e-05, 7.524999999999893e-05, 7.512499999999533e-05, 7.547200000000004e-05, 7.540200000000219e-05, 7.465200000000144e-05, 7.474999999999843e-05, 7.547200000000004e-05, 7.481900000000374e-05, 7.547200000000004e-05, 7.45969999999957e-05, 7.488900000000159e-05, 7.479200000000408e-05, 7.479200000000408e-05, 7.504199999999739e-05, 7.51389999999949e-05, 7.480499999999723e-05, 7.499999999999868e-05, 7.469400000000015e-05, 7.512500000000227e-05, 7.469400000000015e-05, 7.45690000000035e-05, 7.523599999999936e-05, 7.476400000000494e-05, 7.501400000000519e-05, 7.534700000000338e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.883" endtime="20201030 15:53:05.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.872" endtime="20201030 15:53:05.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.899" endtime="20201030 15:53:05.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.894" endtime="20201030 15:53:05.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.892" endtime="20201030 15:53:05.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.408" endtime="20201030 15:53:05.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.407" endtime="20201030 15:53:05.923"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.946" endtime="20201030 15:53:05.967"></status>
</kw>
<msg timestamp="20201030 15:53:05.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.943" endtime="20201030 15:53:05.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.971" endtime="20201030 15:53:05.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.977" endtime="20201030 15:53:05.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.935" endtime="20201030 15:53:05.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.930" endtime="20201030 15:53:05.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.000" endtime="20201030 15:53:06.319"></status>
</kw>
<msg timestamp="20201030 15:53:06.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040885375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.997" endtime="20201030 15:53:06.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040885375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040960889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.330" endtime="20201030 15:53:06.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.350" endtime="20201030 15:53:06.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.990" endtime="20201030 15:53:06.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.985" endtime="20201030 15:53:06.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.368" level="INFO">${RESULT} = [{'diff': 7.551399999999875e-05}, {'diff': 7.556999999999703e-05}, {'diff': 7.570900000000019e-05}, {'diff': 7.612499999999633e-05}, {'diff': 7.602799999999882e-05}, {'diff': 7.555599999999746e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:06.359" endtime="20201030 15:53:06.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.379" level="INFO">${ACCURACY} = {'diff': [7.551399999999875e-05, 7.556999999999703e-05, 7.570900000000019e-05, 7.612499999999633e-05, 7.602799999999882e-05, 7.555599999999746e-05, 7.634699999999744e-05, 7.608300000000456e-05, 7.6249...</msg>
<status status="PASS" starttime="20201030 15:53:06.370" endtime="20201030 15:53:06.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.390" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.387" endtime="20201030 15:53:06.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.395" level="INFO">VALUE: [7.551399999999875e-05, 7.556999999999703e-05, 7.570900000000019e-05, 7.612499999999633e-05, 7.602799999999882e-05, 7.555599999999746e-05, 7.634699999999744e-05, 7.608300000000456e-05, 7.624999999999993e-05, 7.613900000000284e-05, 7.637500000000352e-05, 7.622200000000079e-05, 7.613900000000284e-05, 7.602799999999882e-05, 7.611099999999676e-05, 7.605599999999796e-05, 7.579199999999814e-05, 7.588899999999565e-05, 7.59169999999948e-05, 7.58890000000026e-05, 7.648600000000061e-05, 7.648600000000061e-05, 7.568000000000158e-05, 7.558299999999712e-05, 7.601399999999925e-05, 7.599999999999968e-05, 7.627800000000601e-05, 7.599999999999968e-05, 7.579200000000508e-05, 7.591700000000173e-05, 7.552800000000526e-05, 7.569500000000062e-05, 7.580599999999771e-05, 7.612500000000327e-05, 7.633399999999735e-05, 7.63189999999983e-05, 7.601399999999925e-05, 7.579099999999866e-05, 7.636100000000395e-05, 7.555499999999798e-05, 7.55969999999967e-05, 7.645800000000147e-05, 7.568100000000105e-05, 7.576400000000594e-05, 7.591700000000173e-05, 7.582000000000422e-05, 7.59169999999948e-05, 7.623699999999983e-05, 7.64719999999941e-05, 7.601299999999978e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.392" endtime="20201030 15:53:06.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.380" endtime="20201030 15:53:06.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.407" endtime="20201030 15:53:06.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.403" endtime="20201030 15:53:06.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.400" endtime="20201030 15:53:06.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.926" endtime="20201030 15:53:06.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.924" endtime="20201030 15:53:06.432"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.455" endtime="20201030 15:53:06.477"></status>
</kw>
<msg timestamp="20201030 15:53:06.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.452" endtime="20201030 15:53:06.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.480" endtime="20201030 15:53:06.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.486" endtime="20201030 15:53:06.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.444" endtime="20201030 15:53:06.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.439" endtime="20201030 15:53:06.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.509" endtime="20201030 15:53:06.852"></status>
</kw>
<msg timestamp="20201030 15:53:06.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041413014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04148975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:06.506" endtime="20201030 15:53:06.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041413014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04148975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:06.861" endtime="20201030 15:53:06.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.880" endtime="20201030 15:53:06.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.499" endtime="20201030 15:53:06.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.494" endtime="20201030 15:53:06.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.898" level="INFO">${RESULT} = [{'diff': 7.673600000000086e-05}, {'diff': 7.704199999999939e-05}, {'diff': 7.670800000000172e-05}, {'diff': 7.672300000000076e-05}, {'diff': 7.747299999999457e-05}, {'diff': 7.656999999999803e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:06.889" endtime="20201030 15:53:06.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.907" level="INFO">${ACCURACY} = {'diff': [7.673600000000086e-05, 7.704199999999939e-05, 7.670800000000172e-05, 7.672300000000076e-05, 7.747299999999457e-05, 7.656999999999803e-05, 7.68189999999988e-05, 7.713799999999743e-05, 7.72500...</msg>
<status status="PASS" starttime="20201030 15:53:06.900" endtime="20201030 15:53:06.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.918" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.916" endtime="20201030 15:53:06.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.924" level="INFO">VALUE: [7.673600000000086e-05, 7.704199999999939e-05, 7.670800000000172e-05, 7.672300000000076e-05, 7.747299999999457e-05, 7.656999999999803e-05, 7.68189999999988e-05, 7.713799999999743e-05, 7.725000000000093e-05, 7.723600000000136e-05, 7.71389999999969e-05, 7.687500000000402e-05, 7.695900000000144e-05, 7.715300000000341e-05, 7.677799999999957e-05, 7.682000000000522e-05, 7.71389999999969e-05, 7.712499999999733e-05, 7.702799999999982e-05, 7.706899999999905e-05, 7.658299999999812e-05, 7.722200000000179e-05, 7.734700000000538e-05, 7.71389999999969e-05, 7.695799999999503e-05, 7.712499999999733e-05, 7.691700000000273e-05, 7.702799999999982e-05, 7.729199999999964e-05, 7.669499999999468e-05, 7.745800000000247e-05, 7.712499999999733e-05, 7.71389999999969e-05, 7.701400000000025e-05, 7.669500000000162e-05, 7.745799999999553e-05, 7.734699999999844e-05, 7.680499999999923e-05, 7.711099999999776e-05, 7.744399999999596e-05, 7.715299999999647e-05, 7.658299999999812e-05, 7.6764e-05, 7.656999999999803e-05, 7.677799999999957e-05, 7.655599999999846e-05, 7.669500000000162e-05, 7.677799999999957e-05, 7.688899999999665e-05, 7.666600000000301e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.921" endtime="20201030 15:53:06.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.909" endtime="20201030 15:53:06.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.936" endtime="20201030 15:53:06.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.932" endtime="20201030 15:53:06.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.929" endtime="20201030 15:53:06.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.434" endtime="20201030 15:53:06.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.433" endtime="20201030 15:53:06.961"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.984" endtime="20201030 15:53:07.008"></status>
</kw>
<msg timestamp="20201030 15:53:07.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.981" endtime="20201030 15:53:07.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.011" endtime="20201030 15:53:07.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.018" endtime="20201030 15:53:07.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.974" endtime="20201030 15:53:07.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.968" endtime="20201030 15:53:07.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.041" endtime="20201030 15:53:07.380"></status>
</kw>
<msg timestamp="20201030 15:53:07.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043059361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.038" endtime="20201030 15:53:07.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043059361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.390" endtime="20201030 15:53:07.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.409" endtime="20201030 15:53:07.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.031" endtime="20201030 15:53:07.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.026" endtime="20201030 15:53:07.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.426" level="INFO">${RESULT} = [{'diff': 7.774999999999449e-05}, {'diff': 7.823600000000236e-05}, {'diff': 7.823599999999542e-05}, {'diff': 7.836099999999901e-05}, {'diff': 7.786099999999851e-05}, {'diff': 7.8458999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.417" endtime="20201030 15:53:07.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.436" level="INFO">${ACCURACY} = {'diff': [7.774999999999449e-05, 7.823600000000236e-05, 7.823599999999542e-05, 7.836099999999901e-05, 7.786099999999851e-05, 7.8458999999996e-05, 7.847300000000251e-05, 7.812499999999833e-05, 7.812500...</msg>
<status status="PASS" starttime="20201030 15:53:07.428" endtime="20201030 15:53:07.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.447" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.444" endtime="20201030 15:53:07.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.452" level="INFO">VALUE: [7.774999999999449e-05, 7.823600000000236e-05, 7.823599999999542e-05, 7.836099999999901e-05, 7.786099999999851e-05, 7.8458999999996e-05, 7.847300000000251e-05, 7.812499999999833e-05, 7.812500000000527e-05, 7.794399999999646e-05, 7.823600000000236e-05, 7.755499999999999e-05, 7.758299999999912e-05, 7.770799999999578e-05, 7.811099999999876e-05, 7.84719999999961e-05, 7.844399999999696e-05, 7.781999999999928e-05, 7.802800000000082e-05, 7.779200000000014e-05, 7.847299999999557e-05, 7.806900000000006e-05, 7.780500000000024e-05, 7.767999999999664e-05, 7.790200000000469e-05, 7.75690000000065e-05, 7.780500000000024e-05, 7.845800000000347e-05, 7.766699999999654e-05, 7.79589999999955e-05, 7.804200000000039e-05, 7.81389999999979e-05, 7.777800000000057e-05, 7.84310000000038e-05, 7.781999999999928e-05, 7.770799999999578e-05, 7.758299999999912e-05, 7.761099999999826e-05, 7.823599999999542e-05, 7.833299999999987e-05, 7.769400000000315e-05, 7.799999999999474e-05, 7.845799999999653e-05, 7.79169999999968e-05, 7.787499999999808e-05, 7.75969999999987e-05, 7.836099999999901e-05, 7.790299999999722e-05, 7.802800000000082e-05, 7.780600000000665e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.449" endtime="20201030 15:53:07.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.437" endtime="20201030 15:53:07.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.472" endtime="20201030 15:53:07.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.464" endtime="20201030 15:53:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.460" endtime="20201030 15:53:07.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.963" endtime="20201030 15:53:07.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.962" endtime="20201030 15:53:07.501"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.534" endtime="20201030 15:53:07.557"></status>
</kw>
<msg timestamp="20201030 15:53:07.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.531" endtime="20201030 15:53:07.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.560" endtime="20201030 15:53:07.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.567" endtime="20201030 15:53:07.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.522" endtime="20201030 15:53:07.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.512" endtime="20201030 15:53:07.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.592" endtime="20201030 15:53:07.956"></status>
</kw>
<msg timestamp="20201030 15:53:07.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05374975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053828792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:07.588" endtime="20201030 15:53:07.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.05374975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053828792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:07.965" endtime="20201030 15:53:07.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.983" endtime="20201030 15:53:07.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.580" endtime="20201030 15:53:07.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.576" endtime="20201030 15:53:07.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.000" level="INFO">${RESULT} = [{'diff': 7.904200000000139e-05}, {'diff': 7.944399999999796e-05}, {'diff': 7.9458999999997e-05}, {'diff': 7.873599999999592e-05}, {'diff': 7.880500000000124e-05}, {'diff': 7.856900000000056e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.992" endtime="20201030 15:53:08.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.011" level="INFO">${ACCURACY} = {'diff': [7.904200000000139e-05, 7.944399999999796e-05, 7.9458999999997e-05, 7.873599999999592e-05, 7.880500000000124e-05, 7.856900000000056e-05, 7.86389999999984e-05, 7.88190000000008e-05, 7.85830000...</msg>
<status status="PASS" starttime="20201030 15:53:08.003" endtime="20201030 15:53:08.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.022" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.020" endtime="20201030 15:53:08.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.028" level="INFO">VALUE: [7.904200000000139e-05, 7.944399999999796e-05, 7.9458999999997e-05, 7.873599999999592e-05, 7.880500000000124e-05, 7.856900000000056e-05, 7.86389999999984e-05, 7.88190000000008e-05, 7.858300000000012e-05, 7.869400000000415e-05, 7.880600000000071e-05, 7.944500000000437e-05, 7.937499999999958e-05, 7.90840000000001e-05, 7.944500000000437e-05, 7.870799999999678e-05, 7.949999999999624e-05, 7.879100000000167e-05, 7.879099999999473e-05, 7.938899999999915e-05, 7.856900000000056e-05, 7.891700000000473e-05, 7.901399999999531e-05, 7.880600000000071e-05, 7.869499999999668e-05, 7.902800000000182e-05, 7.855600000000046e-05, 7.947299999999657e-05, 7.857000000000003e-05, 7.945900000000394e-05, 7.870799999999678e-05, 7.920799999999728e-05, 7.856900000000056e-05, 7.891700000000473e-05, 7.856900000000056e-05, 7.901399999999531e-05, 7.90970000000002e-05, 7.91110000000067e-05, 7.891700000000473e-05, 7.924999999999599e-05, 7.923599999999642e-05, 7.880600000000071e-05, 7.930600000000121e-05, 7.88190000000008e-05, 7.945799999999753e-05, 7.937499999999958e-05, 7.949999999999624e-05, 7.870799999999678e-05, 7.890299999999822e-05, 7.888899999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.024" endtime="20201030 15:53:08.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.013" endtime="20201030 15:53:08.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.041" endtime="20201030 15:53:08.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.037" endtime="20201030 15:53:08.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.034" endtime="20201030 15:53:08.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.505" endtime="20201030 15:53:08.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.503" endtime="20201030 15:53:08.066"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.089" endtime="20201030 15:53:08.110"></status>
</kw>
<msg timestamp="20201030 15:53:08.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.085" endtime="20201030 15:53:08.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.113" endtime="20201030 15:53:08.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.119" endtime="20201030 15:53:08.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.078" endtime="20201030 15:53:08.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.072" endtime="20201030 15:53:08.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.143" endtime="20201030 15:53:08.476"></status>
</kw>
<msg timestamp="20201030 15:53:08.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040888139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040967861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.139" endtime="20201030 15:53:08.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040888139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040967861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.485" endtime="20201030 15:53:08.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.504" endtime="20201030 15:53:08.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.132" endtime="20201030 15:53:08.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.128" endtime="20201030 15:53:08.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.521" level="INFO">${RESULT} = [{'diff': 7.972200000000429e-05}, {'diff': 7.994500000000487e-05}, {'diff': 8.044399999999896e-05}, {'diff': 8.034700000000145e-05}, {'diff': 8.023599999999742e-05}, {'diff': 8.004200000000239e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:08.512" endtime="20201030 15:53:08.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.532" level="INFO">${ACCURACY} = {'diff': [7.972200000000429e-05, 7.994500000000487e-05, 8.044399999999896e-05, 8.034700000000145e-05, 8.023599999999742e-05, 8.004200000000239e-05, 8.011100000000076e-05, 8.036200000000049e-05, 8.0332...</msg>
<status status="PASS" starttime="20201030 15:53:08.523" endtime="20201030 15:53:08.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.542" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.540" endtime="20201030 15:53:08.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.548" level="INFO">VALUE: [7.972200000000429e-05, 7.994500000000487e-05, 8.044399999999896e-05, 8.034700000000145e-05, 8.023599999999742e-05, 8.004200000000239e-05, 8.011100000000076e-05, 8.036200000000049e-05, 8.033299999999494e-05, 7.991599999999932e-05, 8.034700000000145e-05, 7.956899999999462e-05, 7.99169999999988e-05, 7.991700000000573e-05, 7.956900000000156e-05, 7.990299999999922e-05, 8.023600000000436e-05, 8.04719999999981e-05, 7.977800000000257e-05, 7.980600000000171e-05, 8.032000000000178e-05, 8.0458999999998e-05, 8.037500000000058e-05, 7.991599999999932e-05, 7.973599999999692e-05, 8.023600000000436e-05, 7.986100000000051e-05, 8.036100000000101e-05, 7.969400000000515e-05, 8.025000000000393e-05, 8.012500000000033e-05, 7.970900000000419e-05, 7.983300000000138e-05, 8.000000000000368e-05, 7.993000000000583e-05, 7.973600000000386e-05, 7.967999999999864e-05, 7.970799999999778e-05, 7.98049999999953e-05, 8.042999999999939e-05, 8.015299999999947e-05, 8.04169999999993e-05, 8.011100000000076e-05, 7.95970000000007e-05, 7.955600000000146e-05, 7.965299999999897e-05, 8.023599999999742e-05, 8.01389999999999e-05, 7.988899999999965e-05, 7.969399999999821e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.545" endtime="20201030 15:53:08.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.533" endtime="20201030 15:53:08.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.560" endtime="20201030 15:53:08.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.556" endtime="20201030 15:53:08.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.554" endtime="20201030 15:53:08.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.068" endtime="20201030 15:53:08.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.067" endtime="20201030 15:53:08.585"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.608" endtime="20201030 15:53:08.629"></status>
</kw>
<msg timestamp="20201030 15:53:08.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.604" endtime="20201030 15:53:08.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.632" endtime="20201030 15:53:08.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.639" endtime="20201030 15:53:08.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.597" endtime="20201030 15:53:08.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.591" endtime="20201030 15:53:08.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.662" endtime="20201030 15:53:09.010"></status>
</kw>
<msg timestamp="20201030 15:53:09.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040810903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.659" endtime="20201030 15:53:09.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040730417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040810903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.020" endtime="20201030 15:53:09.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.040" endtime="20201030 15:53:09.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.651" endtime="20201030 15:53:09.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.647" endtime="20201030 15:53:09.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.059" level="INFO">${RESULT} = [{'diff': 8.048600000000461e-05}, {'diff': 8.148599999999867e-05}, {'diff': 8.149999999999824e-05}, {'diff': 8.134700000000245e-05}, {'diff': 8.061100000000126e-05}, {'diff': 8.080500000000324e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:09.049" endtime="20201030 15:53:09.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.069" level="INFO">${ACCURACY} = {'diff': [8.048600000000461e-05, 8.148599999999867e-05, 8.149999999999824e-05, 8.134700000000245e-05, 8.061100000000126e-05, 8.080500000000324e-05, 8.112500000000133e-05, 8.075000000000443e-05, 8.0693...</msg>
<status status="PASS" starttime="20201030 15:53:09.061" endtime="20201030 15:53:09.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.081" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.078" endtime="20201030 15:53:09.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.086" level="INFO">VALUE: [8.048600000000461e-05, 8.148599999999867e-05, 8.149999999999824e-05, 8.134700000000245e-05, 8.061100000000126e-05, 8.080500000000324e-05, 8.112500000000133e-05, 8.075000000000443e-05, 8.069399999999921e-05, 8.090300000000022e-05, 8.068099999999911e-05, 8.106999999999559e-05, 8.055599999999552e-05, 8.123599999999842e-05, 8.080599999999577e-05, 8.126299999999809e-05, 8.049999999999724e-05, 8.149999999999824e-05, 8.11249999999944e-05, 8.056899999999562e-05, 8.08049999999963e-05, 8.123599999999842e-05, 8.136100000000202e-05, 8.104199999999645e-05, 8.058299999999519e-05, 8.095800000000597e-05, 8.127699999999766e-05, 8.1458999999999e-05, 8.05840000000016e-05, 8.09719999999986e-05, 8.061100000000126e-05, 8.148599999999867e-05, 8.11390000000009e-05, 8.067999999999964e-05, 8.111100000000177e-05, 8.133300000000288e-05, 8.125000000000493e-05, 8.136100000000202e-05, 8.102800000000382e-05, 8.102800000000382e-05, 8.11390000000009e-05, 8.112500000000133e-05, 8.11390000000009e-05, 8.116600000000057e-05, 8.08049999999963e-05, 8.115299999999354e-05, 8.125000000000493e-05, 8.083400000000185e-05, 8.11390000000009e-05, 8.130599999999627e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.083" endtime="20201030 15:53:09.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.071" endtime="20201030 15:53:09.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.100" endtime="20201030 15:53:09.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.095" endtime="20201030 15:53:09.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.093" endtime="20201030 15:53:09.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.587" endtime="20201030 15:53:09.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.586" endtime="20201030 15:53:09.126"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.150" endtime="20201030 15:53:09.173"></status>
</kw>
<msg timestamp="20201030 15:53:09.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.146" endtime="20201030 15:53:09.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.177" endtime="20201030 15:53:09.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.184" endtime="20201030 15:53:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.139" endtime="20201030 15:53:09.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.132" endtime="20201030 15:53:09.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.209" endtime="20201030 15:53:09.571"></status>
</kw>
<msg timestamp="20201030 15:53:09.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045387958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045470167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.205" endtime="20201030 15:53:09.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045387958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045470167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.581" endtime="20201030 15:53:09.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.601" endtime="20201030 15:53:09.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.198" endtime="20201030 15:53:09.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.193" endtime="20201030 15:53:09.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.619" level="INFO">${RESULT} = [{'diff': 8.220899999999975e-05}, {'diff': 8.193100000000036e-05}, {'diff': 8.212500000000234e-05}, {'diff': 8.205499999999755e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.161099999999533e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:09.610" endtime="20201030 15:53:09.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.630" level="INFO">${ACCURACY} = {'diff': [8.220899999999975e-05, 8.193100000000036e-05, 8.212500000000234e-05, 8.205499999999755e-05, 8.224999999999899e-05, 8.161099999999533e-05, 8.215300000000147e-05, 8.168000000000064e-05, 8.2055...</msg>
<status status="PASS" starttime="20201030 15:53:09.621" endtime="20201030 15:53:09.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.641" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.639" endtime="20201030 15:53:09.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.647" level="INFO">VALUE: [8.220899999999975e-05, 8.193100000000036e-05, 8.212500000000234e-05, 8.205499999999755e-05, 8.224999999999899e-05, 8.161099999999533e-05, 8.215300000000147e-05, 8.168000000000064e-05, 8.205599999999702e-05, 8.234700000000345e-05, 8.158299999999619e-05, 8.177799999999763e-05, 8.176399999999806e-05, 8.158399999999566e-05, 8.201399999999831e-05, 8.166700000000054e-05, 8.234800000000292e-05, 8.2459e-05, 8.244400000000096e-05, 8.21390000000019e-05, 8.245800000000053e-05, 8.158299999999619e-05, 8.233300000000388e-05, 8.156900000000356e-05, 8.215300000000147e-05, 8.182000000000328e-05, 8.236100000000302e-05, 8.15840000000026e-05, 8.182000000000328e-05, 8.179200000000414e-05, 8.199999999999874e-05, 8.248599999999967e-05, 8.18049999999973e-05, 8.158299999999619e-05, 8.190299999999429e-05, 8.224999999999899e-05, 8.223599999999942e-05, 8.215300000000147e-05, 8.224999999999899e-05, 8.218100000000061e-05, 8.213899999999497e-05, 8.169499999999968e-05, 8.223599999999942e-05, 8.222199999999985e-05, 8.190200000000175e-05, 8.224999999999899e-05, 8.23469999999965e-05, 8.158299999999619e-05, 8.212500000000234e-05, 8.212500000000234e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.644" endtime="20201030 15:53:09.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.632" endtime="20201030 15:53:09.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.662" endtime="20201030 15:53:09.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.656" endtime="20201030 15:53:09.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.653" endtime="20201030 15:53:09.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.128" endtime="20201030 15:53:09.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.127" endtime="20201030 15:53:09.688"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.714" endtime="20201030 15:53:09.736"></status>
</kw>
<msg timestamp="20201030 15:53:09.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.710" endtime="20201030 15:53:09.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.740" endtime="20201030 15:53:09.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.747" endtime="20201030 15:53:09.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.702" endtime="20201030 15:53:09.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.696" endtime="20201030 15:53:09.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.771" endtime="20201030 15:53:10.146"></status>
</kw>
<msg timestamp="20201030 15:53:10.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045845708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045928264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.768" endtime="20201030 15:53:10.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045845708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045928264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.156" endtime="20201030 15:53:10.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.176" endtime="20201030 15:53:10.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.760" endtime="20201030 15:53:10.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.755" endtime="20201030 15:53:10.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.195" level="INFO">${RESULT} = [{'diff': 8.255600000000446e-05}, {'diff': 8.294500000000093e-05}, {'diff': 8.274999999999949e-05}, {'diff': 8.265299999999504e-05}, {'diff': 8.326399999999956e-05}, {'diff': 8.348700000000014e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.186" endtime="20201030 15:53:10.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.211" level="INFO">${ACCURACY} = {'diff': [8.255600000000446e-05, 8.294500000000093e-05, 8.274999999999949e-05, 8.265299999999504e-05, 8.326399999999956e-05, 8.348700000000014e-05, 8.304199999999845e-05, 8.302799999999888e-05, 8.3333...</msg>
<status status="PASS" starttime="20201030 15:53:10.197" endtime="20201030 15:53:10.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.223" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.220" endtime="20201030 15:53:10.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.229" level="INFO">VALUE: [8.255600000000446e-05, 8.294500000000093e-05, 8.274999999999949e-05, 8.265299999999504e-05, 8.326399999999956e-05, 8.348700000000014e-05, 8.304199999999845e-05, 8.302799999999888e-05, 8.333399999999741e-05, 8.288800000000318e-05, 8.323599999999348e-05, 8.284700000000395e-05, 8.263899999999547e-05, 8.324999999999999e-05, 8.34720000000011e-05, 8.256899999999762e-05, 8.31249999999964e-05, 8.319400000000171e-05, 8.299999999999974e-05, 8.324999999999999e-05, 8.291699999999486e-05, 8.337499999999665e-05, 8.256899999999762e-05, 8.268000000000164e-05, 8.347199999999416e-05, 8.302800000000582e-05, 8.326399999999956e-05, 8.280599999999777e-05, 8.290300000000222e-05, 8.269500000000068e-05, 8.280599999999777e-05, 8.287500000000309e-05, 8.336200000000349e-05, 8.302799999999888e-05, 8.301399999999931e-05, 8.266600000000207e-05, 8.26799999999947e-05, 8.313899999999597e-05, 8.299999999999974e-05, 8.293099999999443e-05, 8.301400000000625e-05, 8.345799999999459e-05, 8.348600000000067e-05, 8.326399999999956e-05, 8.294400000000146e-05, 8.345899999999407e-05, 8.286099999999658e-05, 8.269399999999427e-05, 8.345800000000153e-05, 8.34720000000011e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.225" endtime="20201030 15:53:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.213" endtime="20201030 15:53:10.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.242" endtime="20201030 15:53:10.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.237" endtime="20201030 15:53:10.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.235" endtime="20201030 15:53:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.691" endtime="20201030 15:53:10.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.689" endtime="20201030 15:53:10.268"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.292" endtime="20201030 15:53:10.315"></status>
</kw>
<msg timestamp="20201030 15:53:10.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.289" endtime="20201030 15:53:10.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.319" endtime="20201030 15:53:10.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.326" endtime="20201030 15:53:10.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.281" endtime="20201030 15:53:10.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.275" endtime="20201030 15:53:10.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.350" endtime="20201030 15:53:10.714"></status>
</kw>
<msg timestamp="20201030 15:53:10.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044359222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044443542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.347" endtime="20201030 15:53:10.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044359222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044443542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.725" endtime="20201030 15:53:10.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.745" endtime="20201030 15:53:10.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.339" endtime="20201030 15:53:10.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.334" endtime="20201030 15:53:10.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.764" level="INFO">${RESULT} = [{'diff': 8.432000000000578e-05}, {'diff': 8.434799999999798e-05}, {'diff': 8.380599999999877e-05}, {'diff': 8.373599999999398e-05}, {'diff': 8.379099999999973e-05}, {'diff': 8.394400000000246e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.755" endtime="20201030 15:53:10.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.852" level="INFO">${ACCURACY} = {'diff': [8.432000000000578e-05, 8.434799999999798e-05, 8.380599999999877e-05, 8.373599999999398e-05, 8.379099999999973e-05, 8.394400000000246e-05, 8.369399999999527e-05, 8.437499999999765e-05, 8.3777...</msg>
<status status="PASS" starttime="20201030 15:53:10.766" endtime="20201030 15:53:10.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.864" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.862" endtime="20201030 15:53:10.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.870" level="INFO">VALUE: [8.432000000000578e-05, 8.434799999999798e-05, 8.380599999999877e-05, 8.373599999999398e-05, 8.379099999999973e-05, 8.394400000000246e-05, 8.369399999999527e-05, 8.437499999999765e-05, 8.377799999999963e-05, 8.351399999999981e-05, 8.445800000000253e-05, 8.381999999999834e-05, 8.369500000000168e-05, 8.380599999999877e-05, 8.447300000000157e-05, 8.400000000000074e-05, 8.402700000000041e-05, 8.356900000000556e-05, 8.445799999999559e-05, 8.445800000000253e-05, 8.35970000000047e-05, 8.359699999999776e-05, 8.361099999999733e-05, 8.358299999999819e-05, 8.415300000000348e-05, 8.376400000000006e-05, 8.412500000000434e-05, 8.388900000000366e-05, 8.401400000000031e-05, 8.404099999999998e-05, 8.438899999999722e-05, 8.39720000000016e-05, 8.366600000000307e-05, 8.420799999999534e-05, 8.38049999999993e-05, 8.356899999999862e-05, 8.437499999999765e-05, 8.381999999999834e-05, 8.400000000000074e-05, 8.380599999999877e-05, 8.409800000000467e-05, 8.413899999999697e-05, 8.355599999999852e-05, 8.412500000000434e-05, 8.391599999999638e-05, 8.423599999999448e-05, 8.384700000000495e-05, 8.381899999999887e-05, 8.37919999999992e-05, 8.369500000000168e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.867" endtime="20201030 15:53:10.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.854" endtime="20201030 15:53:10.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.883" endtime="20201030 15:53:10.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.879" endtime="20201030 15:53:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.876" endtime="20201030 15:53:10.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.270" endtime="20201030 15:53:10.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.269" endtime="20201030 15:53:10.909"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.934" endtime="20201030 15:53:10.957"></status>
</kw>
<msg timestamp="20201030 15:53:10.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.929" endtime="20201030 15:53:10.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.960" endtime="20201030 15:53:10.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.967" endtime="20201030 15:53:10.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.922" endtime="20201030 15:53:10.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.916" endtime="20201030 15:53:10.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.992" endtime="20201030 15:53:11.313"></status>
</kw>
<msg timestamp="20201030 15:53:11.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044793833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044878583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.988" endtime="20201030 15:53:11.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044793833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044878583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.318" endtime="20201030 15:53:11.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.326" endtime="20201030 15:53:11.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.981" endtime="20201030 15:53:11.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.976" endtime="20201030 15:53:11.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.335" level="INFO">${RESULT} = [{'diff': 8.475000000000149e-05}, {'diff': 8.519400000000371e-05}, {'diff': 8.490299999999729e-05}, {'diff': 8.46799999999967e-05}, {'diff': 8.455599999999952e-05}, {'diff': 8.481999999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:11.330" endtime="20201030 15:53:11.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.339" level="INFO">${ACCURACY} = {'diff': [8.475000000000149e-05, 8.519400000000371e-05, 8.490299999999729e-05, 8.46799999999967e-05, 8.455599999999952e-05, 8.481999999999934e-05, 8.47920000000002e-05, 8.468099999999618e-05, 8.536099...</msg>
<status status="PASS" starttime="20201030 15:53:11.336" endtime="20201030 15:53:11.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.344" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.343" endtime="20201030 15:53:11.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.348" level="INFO">VALUE: [8.475000000000149e-05, 8.519400000000371e-05, 8.490299999999729e-05, 8.46799999999967e-05, 8.455599999999952e-05, 8.481999999999934e-05, 8.47920000000002e-05, 8.468099999999618e-05, 8.536099999999908e-05, 8.511099999999883e-05, 8.47920000000002e-05, 8.51249999999984e-05, 8.51249999999984e-05, 8.459699999999876e-05, 8.502799999999394e-05, 8.547199999999616e-05, 8.455500000000005e-05, 8.54720000000031e-05, 8.527800000000113e-05, 8.468100000000311e-05, 8.53469999999995e-05, 8.527700000000166e-05, 8.481899999999987e-05, 8.468099999999618e-05, 8.48050000000003e-05, 8.501400000000131e-05, 8.501400000000131e-05, 8.479100000000073e-05, 8.516700000000405e-05, 8.468099999999618e-05, 8.47920000000002e-05, 8.513899999999797e-05, 8.500000000000174e-05, 8.534799999999898e-05, 8.547300000000257e-05, 8.458399999999866e-05, 8.492999999999695e-05, 8.544399999999702e-05, 8.502700000000141e-05, 8.504200000000045e-05, 8.46249999999979e-05, 8.513899999999797e-05, 8.468099999999618e-05, 8.51249999999984e-05, 8.511100000000577e-05, 8.523599999999548e-05, 8.534799999999898e-05, 8.5459000000003e-05, 8.526299999999515e-05, 8.500000000000174e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.346" endtime="20201030 15:53:11.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.340" endtime="20201030 15:53:11.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.354" endtime="20201030 15:53:11.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.352" endtime="20201030 15:53:11.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.351" endtime="20201030 15:53:11.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.911" endtime="20201030 15:53:11.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.910" endtime="20201030 15:53:11.375"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.386" endtime="20201030 15:53:11.405"></status>
</kw>
<msg timestamp="20201030 15:53:11.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.384" endtime="20201030 15:53:11.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.407" endtime="20201030 15:53:11.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.410" endtime="20201030 15:53:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.381" endtime="20201030 15:53:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.378" endtime="20201030 15:53:11.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.422" endtime="20201030 15:53:11.708"></status>
</kw>
<msg timestamp="20201030 15:53:11.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025601167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025686667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.420" endtime="20201030 15:53:11.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025601167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025686667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.712" endtime="20201030 15:53:11.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.721" endtime="20201030 15:53:11.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.417" endtime="20201030 15:53:11.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.414" endtime="20201030 15:53:11.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.729" level="INFO">${RESULT} = [{'diff': 8.549999999999877e-05}, {'diff': 8.558399999999966e-05}, {'diff': 8.623599999999995e-05}, {'diff': 8.608300000000069e-05}, {'diff': 8.590200000000228e-05}, {'diff': 8.558299999999672e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:11.725" endtime="20201030 15:53:11.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.734" level="INFO">${ACCURACY} = {'diff': [8.549999999999877e-05, 8.558399999999966e-05, 8.623599999999995e-05, 8.608300000000069e-05, 8.590200000000228e-05, 8.558299999999672e-05, 8.622200000000038e-05, 8.623599999999995e-05, 8.6152...</msg>
<status status="PASS" starttime="20201030 15:53:11.730" endtime="20201030 15:53:11.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.740" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.738" endtime="20201030 15:53:11.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.742" level="INFO">VALUE: [8.549999999999877e-05, 8.558399999999966e-05, 8.623599999999995e-05, 8.608300000000069e-05, 8.590200000000228e-05, 8.558299999999672e-05, 8.622200000000038e-05, 8.623599999999995e-05, 8.615299999999854e-05, 8.604199999999798e-05, 8.59310000000009e-05, 8.566700000000108e-05, 8.604200000000145e-05, 8.56249999999989e-05, 8.612500000000287e-05, 8.602699999999894e-05, 8.592999999999795e-05, 8.63470000000005e-05, 8.644399999999802e-05, 8.556899999999715e-05, 8.582000000000034e-05, 8.597200000000013e-05, 8.64860000000002e-05, 8.559799999999923e-05, 8.645900000000054e-05, 8.557000000000009e-05, 8.569500000000022e-05, 8.569400000000074e-05, 8.647200000000063e-05, 8.587499999999915e-05, 8.602799999999841e-05, 8.644399999999802e-05, 8.647200000000063e-05, 8.651399999999934e-05, 8.612500000000287e-05, 8.577799999999816e-05, 8.555599999999705e-05, 8.591700000000133e-05, 8.627699999999919e-05, 8.634799999999998e-05, 8.58050000000013e-05, 8.569400000000074e-05, 8.56799999999977e-05, 8.566599999999813e-05, 8.598699999999918e-05, 8.569400000000074e-05, 8.613899999999897e-05, 8.613899999999897e-05, 8.637499999999965e-05, 8.63470000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.741" endtime="20201030 15:53:11.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.735" endtime="20201030 15:53:11.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.749" endtime="20201030 15:53:11.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.747" endtime="20201030 15:53:11.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.745" endtime="20201030 15:53:11.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.376" endtime="20201030 15:53:11.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.376" endtime="20201030 15:53:11.770"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.793" endtime="20201030 15:53:11.814"></status>
</kw>
<msg timestamp="20201030 15:53:11.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.789" endtime="20201030 15:53:11.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.818" endtime="20201030 15:53:11.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.825" endtime="20201030 15:53:11.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.781" endtime="20201030 15:53:11.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.775" endtime="20201030 15:53:11.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.850" endtime="20201030 15:53:12.209"></status>
</kw>
<msg timestamp="20201030 15:53:12.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038209, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0382955, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 15:53:11.846" endtime="20201030 15:53:12.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038209, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0382955, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201030 15:53:12.219" endtime="20201030 15:53:12.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.239" endtime="20201030 15:53:12.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.839" endtime="20201030 15:53:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.833" endtime="20201030 15:53:12.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.257" level="INFO">${RESULT} = [{'diff': 8.650000000000324e-05}, {'diff': 8.688899999999972e-05}, {'diff': 8.67920000000022e-05}, {'diff': 8.736099999999414e-05}, {'diff': 8.702800000000288e-05}, {'diff': 8.661100000000033e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:12.248" endtime="20201030 15:53:12.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.269" level="INFO">${ACCURACY} = {'diff': [8.650000000000324e-05, 8.688899999999972e-05, 8.67920000000022e-05, 8.736099999999414e-05, 8.702800000000288e-05, 8.661100000000033e-05, 8.680600000000177e-05, 8.740299999999979e-05, 8.69019...</msg>
<status status="PASS" starttime="20201030 15:53:12.259" endtime="20201030 15:53:12.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.280" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.278" endtime="20201030 15:53:12.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.286" level="INFO">VALUE: [8.650000000000324e-05, 8.688899999999972e-05, 8.67920000000022e-05, 8.736099999999414e-05, 8.702800000000288e-05, 8.661100000000033e-05, 8.680600000000177e-05, 8.740299999999979e-05, 8.690199999999981e-05, 8.695799999999809e-05, 8.656900000000162e-05, 8.690299999999929e-05, 8.690299999999929e-05, 8.669500000000468e-05, 8.680600000000177e-05, 8.745799999999859e-05, 8.723599999999748e-05, 8.751400000000381e-05, 8.737500000000065e-05, 8.708300000000169e-05, 8.666599999999913e-05, 8.755600000000252e-05, 8.709699999999432e-05, 8.748599999999773e-05, 8.669399999999827e-05, 8.659700000000076e-05, 8.705600000000202e-05, 8.669500000000468e-05, 8.713899999999997e-05, 8.683300000000144e-05, 8.736200000000055e-05, 8.732000000000184e-05, 8.66799999999987e-05, 8.723600000000442e-05, 8.713899999999997e-05, 8.747199999999816e-05, 8.669399999999827e-05, 8.701399999999637e-05, 8.670800000000478e-05, 8.71250000000004e-05, 8.658400000000066e-05, 8.668099999999818e-05, 8.747299999999764e-05, 8.668099999999818e-05, 8.708299999999475e-05, 8.690199999999981e-05, 8.66390000000064e-05, 8.736099999999414e-05, 8.680499999999536e-05, 8.669399999999827e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.283" endtime="20201030 15:53:12.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.271" endtime="20201030 15:53:12.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.299" endtime="20201030 15:53:12.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.295" endtime="20201030 15:53:12.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.292" endtime="20201030 15:53:12.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.771" endtime="20201030 15:53:12.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.770" endtime="20201030 15:53:12.325"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.349" endtime="20201030 15:53:12.372"></status>
</kw>
<msg timestamp="20201030 15:53:12.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.346" endtime="20201030 15:53:12.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.376" endtime="20201030 15:53:12.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.383" endtime="20201030 15:53:12.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.338" endtime="20201030 15:53:12.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.332" endtime="20201030 15:53:12.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.409" endtime="20201030 15:53:12.771"></status>
</kw>
<msg timestamp="20201030 15:53:12.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04388675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043974583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:12.404" endtime="20201030 15:53:12.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04388675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043974583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:12.781" endtime="20201030 15:53:12.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.802" endtime="20201030 15:53:12.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.396" endtime="20201030 15:53:12.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.391" endtime="20201030 15:53:12.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.820" level="INFO">${RESULT} = [{'diff': 8.78329999999955e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.798599999999823e-05}, {'diff': 8.834699999999557e-05}, {'diff': 8.795899999999857e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:12.811" endtime="20201030 15:53:12.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.830" level="INFO">${ACCURACY} = {'diff': [8.78329999999955e-05, 8.759700000000176e-05, 8.759700000000176e-05, 8.798599999999823e-05, 8.834699999999557e-05, 8.795899999999857e-05, 8.826399999999762e-05, 8.802800000000388e-05, 8.84440...</msg>
<status status="PASS" starttime="20201030 15:53:12.822" endtime="20201030 15:53:12.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.842" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.839" endtime="20201030 15:53:12.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.848" level="INFO">VALUE: [8.78329999999955e-05, 8.759700000000176e-05, 8.759700000000176e-05, 8.798599999999823e-05, 8.834699999999557e-05, 8.795899999999857e-05, 8.826399999999762e-05, 8.802800000000388e-05, 8.844400000000002e-05, 8.826300000000509e-05, 8.791600000000038e-05, 8.756900000000262e-05, 8.756900000000262e-05, 8.826399999999762e-05, 8.758299999999525e-05, 8.834699999999557e-05, 8.847199999999916e-05, 8.813900000000097e-05, 8.791699999999986e-05, 8.834699999999557e-05, 8.834800000000198e-05, 8.791699999999986e-05, 8.834700000000251e-05, 8.834699999999557e-05, 8.801399999999737e-05, 8.813900000000097e-05, 8.847199999999916e-05, 8.769400000000621e-05, 8.824999999999805e-05, 8.802799999999694e-05, 8.768099999999918e-05, 8.78199999999954e-05, 8.788900000000072e-05, 8.82370000000049e-05, 8.81120000000013e-05, 8.848599999999873e-05, 8.784699999999507e-05, 8.758299999999525e-05, 8.76799999999997e-05, 8.777799999999669e-05, 8.815300000000054e-05, 8.780600000000277e-05, 8.790300000000029e-05, 8.800000000000474e-05, 8.836200000000155e-05, 8.824999999999805e-05, 8.801399999999737e-05, 8.813800000000149e-05, 8.845799999999959e-05, 8.815200000000106e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.844" endtime="20201030 15:53:12.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.832" endtime="20201030 15:53:12.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.861" endtime="20201030 15:53:12.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.856" endtime="20201030 15:53:12.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.854" endtime="20201030 15:53:12.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.327" endtime="20201030 15:53:12.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.326" endtime="20201030 15:53:12.887"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.912" endtime="20201030 15:53:12.936"></status>
</kw>
<msg timestamp="20201030 15:53:12.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.907" endtime="20201030 15:53:12.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.939" endtime="20201030 15:53:12.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.946" endtime="20201030 15:53:12.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.900" endtime="20201030 15:53:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.894" endtime="20201030 15:53:12.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.972" endtime="20201030 15:53:13.345"></status>
</kw>
<msg timestamp="20201030 15:53:13.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045682056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045770681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.968" endtime="20201030 15:53:13.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045682056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045770681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.355" endtime="20201030 15:53:13.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.375" endtime="20201030 15:53:13.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.960" endtime="20201030 15:53:13.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.955" endtime="20201030 15:53:13.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.393" level="INFO">${RESULT} = [{'diff': 8.86250000000019e-05}, {'diff': 8.897199999999966e-05}, {'diff': 8.91250000000024e-05}, {'diff': 8.904199999999751e-05}, {'diff': 8.915300000000154e-05}, {'diff': 8.869400000000027e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:13.384" endtime="20201030 15:53:13.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.403" level="INFO">${ACCURACY} = {'diff': [8.86250000000019e-05, 8.897199999999966e-05, 8.91250000000024e-05, 8.904199999999751e-05, 8.915300000000154e-05, 8.869400000000027e-05, 8.901399999999837e-05, 8.934699999999657e-05, 8.869499...</msg>
<status status="PASS" starttime="20201030 15:53:13.396" endtime="20201030 15:53:13.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.415" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.413" endtime="20201030 15:53:13.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.421" level="INFO">VALUE: [8.86250000000019e-05, 8.897199999999966e-05, 8.91250000000024e-05, 8.904199999999751e-05, 8.915300000000154e-05, 8.869400000000027e-05, 8.901399999999837e-05, 8.934699999999657e-05, 8.869499999999975e-05, 8.879199999999726e-05, 8.858400000000266e-05, 8.923599999999948e-05, 8.894400000000052e-05, 8.869400000000027e-05, 8.870799999999984e-05, 8.877700000000516e-05, 8.891700000000086e-05, 8.923599999999948e-05, 8.858300000000319e-05, 8.888900000000172e-05, 8.870899999999932e-05, 8.870899999999932e-05, 8.869499999999975e-05, 8.87920000000042e-05, 8.938900000000222e-05, 8.877799999999769e-05, 8.913899999999503e-05, 8.890200000000181e-05, 8.923599999999948e-05, 8.902800000000488e-05, 8.880599999999683e-05, 8.937500000000265e-05, 8.936099999999614e-05, 8.948599999999973e-05, 8.922199999999991e-05, 8.870899999999932e-05, 8.909699999999632e-05, 8.890300000000129e-05, 8.876299999999865e-05, 8.881900000000387e-05, 8.936099999999614e-05, 8.9332999999997e-05, 8.945800000000059e-05, 8.895800000000009e-05, 8.922199999999991e-05, 8.94450000000005e-05, 8.924999999999905e-05, 8.923599999999948e-05, 8.881900000000387e-05, 8.891600000000138e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.418" endtime="20201030 15:53:13.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.405" endtime="20201030 15:53:13.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.436" endtime="20201030 15:53:13.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.430" endtime="20201030 15:53:13.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.427" endtime="20201030 15:53:13.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.889" endtime="20201030 15:53:13.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.888" endtime="20201030 15:53:13.462"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.486" endtime="20201030 15:53:13.508"></status>
</kw>
<msg timestamp="20201030 15:53:13.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.482" endtime="20201030 15:53:13.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.512" endtime="20201030 15:53:13.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.519" endtime="20201030 15:53:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.475" endtime="20201030 15:53:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.469" endtime="20201030 15:53:13.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.544" endtime="20201030 15:53:13.905"></status>
</kw>
<msg timestamp="20201030 15:53:13.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043642014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.540" endtime="20201030 15:53:13.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043551597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043642014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.915" endtime="20201030 15:53:13.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.935" endtime="20201030 15:53:13.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.532" endtime="20201030 15:53:13.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.527" endtime="20201030 15:53:13.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.953" level="INFO">${RESULT} = [{'diff': 9.041700000000236e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.045900000000107e-05}, {'diff': 9.012499999999646e-05}, {'diff': 8.956999999999715e-05}, {'diff': 9.019400000000177e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:13.944" endtime="20201030 15:53:13.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.965" level="INFO">${ACCURACY} = {'diff': [9.041700000000236e-05, 9.001399999999937e-05, 9.045900000000107e-05, 9.012499999999646e-05, 8.956999999999715e-05, 9.019400000000177e-05, 8.961099999999639e-05, 9.048600000000073e-05, 9.0263...</msg>
<status status="PASS" starttime="20201030 15:53:13.956" endtime="20201030 15:53:13.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.976" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.974" endtime="20201030 15:53:13.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.982" level="INFO">VALUE: [9.041700000000236e-05, 9.001399999999937e-05, 9.045900000000107e-05, 9.012499999999646e-05, 8.956999999999715e-05, 9.019400000000177e-05, 8.961099999999639e-05, 9.048600000000073e-05, 9.026399999999962e-05, 8.991700000000186e-05, 9.004199999999851e-05, 9.013899999999603e-05, 8.96250000000029e-05, 8.990300000000229e-05, 9.047200000000116e-05, 8.969500000000075e-05, 8.959700000000376e-05, 8.984699999999707e-05, 9.037499999999671e-05, 9.011100000000383e-05, 8.955499999999811e-05, 8.99999999999998e-05, 8.968100000000118e-05, 9.036099999999714e-05, 8.979199999999826e-05, 9.025000000000005e-05, 8.959799999999629e-05, 9.041699999999542e-05, 8.956999999999715e-05, 8.968099999999424e-05, 8.958300000000419e-05, 8.976400000000606e-05, 9.001399999999937e-05, 8.96250000000029e-05, 8.993100000000143e-05, 8.970800000000084e-05, 8.993100000000143e-05, 9.047200000000116e-05, 9.037499999999671e-05, 9.025000000000005e-05, 8.990300000000229e-05, 8.959699999999682e-05, 8.980499999999836e-05, 9.004099999999904e-05, 9.013900000000297e-05, 9.020900000000082e-05, 9.047200000000116e-05, 8.959699999999682e-05, 8.968099999999424e-05, 9.013899999999603e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.979" endtime="20201030 15:53:13.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.967" endtime="20201030 15:53:13.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.996" endtime="20201030 15:53:14.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.991" endtime="20201030 15:53:14.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.988" endtime="20201030 15:53:14.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.464" endtime="20201030 15:53:14.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.462" endtime="20201030 15:53:14.021"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.046" endtime="20201030 15:53:14.069"></status>
</kw>
<msg timestamp="20201030 15:53:14.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.042" endtime="20201030 15:53:14.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.072" endtime="20201030 15:53:14.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.079" endtime="20201030 15:53:14.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.035" endtime="20201030 15:53:14.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.028" endtime="20201030 15:53:14.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.104" endtime="20201030 15:53:14.464"></status>
</kw>
<msg timestamp="20201030 15:53:14.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044269264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.100" endtime="20201030 15:53:14.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044269264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044360333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.474" endtime="20201030 15:53:14.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.494" endtime="20201030 15:53:14.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.093" endtime="20201030 15:53:14.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.088" endtime="20201030 15:53:14.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.512" level="INFO">${RESULT} = [{'diff': 9.106899999999918e-05}, {'diff': 9.055499999999911e-05}, {'diff': 9.123600000000148e-05}, {'diff': 9.145800000000259e-05}, {'diff': 9.11529999999966e-05}, {'diff': 9.125000000000105e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:14.503" endtime="20201030 15:53:14.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.524" level="INFO">${ACCURACY} = {'diff': [9.106899999999918e-05, 9.055499999999911e-05, 9.123600000000148e-05, 9.145800000000259e-05, 9.11529999999966e-05, 9.125000000000105e-05, 9.136100000000508e-05, 9.111099999999789e-05, 9.06530...</msg>
<status status="PASS" starttime="20201030 15:53:14.514" endtime="20201030 15:53:14.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.536" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.533" endtime="20201030 15:53:14.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.542" level="INFO">VALUE: [9.106899999999918e-05, 9.055499999999911e-05, 9.123600000000148e-05, 9.145800000000259e-05, 9.11529999999966e-05, 9.125000000000105e-05, 9.136100000000508e-05, 9.111099999999789e-05, 9.065300000000304e-05, 9.058399999999772e-05, 9.126400000000062e-05, 9.056900000000562e-05, 9.088900000000372e-05, 9.134699999999857e-05, 9.090299999999635e-05, 9.087499999999721e-05, 9.056899999999868e-05, 9.125000000000105e-05, 9.056999999999815e-05, 9.11659999999967e-05, 9.102799999999994e-05, 9.136199999999761e-05, 9.079099999999979e-05, 9.136100000000508e-05, 9.06800000000027e-05, 9.136100000000508e-05, 9.111100000000483e-05, 9.125000000000105e-05, 9.127700000000072e-05, 9.070900000000132e-05, 9.084699999999807e-05, 9.079199999999926e-05, 9.069500000000175e-05, 9.14859999999948e-05, 9.061100000000433e-05, 9.104100000000004e-05, 9.126400000000062e-05, 9.129100000000029e-05, 9.056900000000562e-05, 9.147199999999522e-05, 9.079199999999926e-05, 9.088900000000372e-05, 9.137499999999771e-05, 9.058399999999772e-05, 9.054099999999954e-05, 9.101400000000037e-05, 9.137499999999771e-05, 9.070800000000184e-05, 9.088900000000372e-05, 9.125000000000105e-05]</msg>
<status status="PASS" starttime="20201030 15:53:14.538" endtime="20201030 15:53:14.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.526" endtime="20201030 15:53:14.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.555" endtime="20201030 15:53:14.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.550" endtime="20201030 15:53:14.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.548" endtime="20201030 15:53:14.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.024" endtime="20201030 15:53:14.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.022" endtime="20201030 15:53:14.580"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.605" endtime="20201030 15:53:14.627"></status>
</kw>
<msg timestamp="20201030 15:53:14.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.601" endtime="20201030 15:53:14.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.631" endtime="20201030 15:53:14.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.638" endtime="20201030 15:53:14.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.594" endtime="20201030 15:53:14.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.587" endtime="20201030 15:53:14.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.662" endtime="20201030 15:53:15.026"></status>
</kw>
<msg timestamp="20201030 15:53:15.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043490278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043581833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.659" endtime="20201030 15:53:15.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043490278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043581833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.036" endtime="20201030 15:53:15.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.056" endtime="20201030 15:53:15.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.651" endtime="20201030 15:53:15.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.646" endtime="20201030 15:53:15.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.074" level="INFO">${RESULT} = [{'diff': 9.155500000000011e-05}, {'diff': 9.184699999999907e-05}, {'diff': 9.16670000000036e-05}, {'diff': 9.245800000000359e-05}, {'diff': 9.21800000000042e-05}, {'diff': 9.201400000000137e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:15.064" endtime="20201030 15:53:15.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.084" level="INFO">${ACCURACY} = {'diff': [9.155500000000011e-05, 9.184699999999907e-05, 9.16670000000036e-05, 9.245800000000359e-05, 9.21800000000042e-05, 9.201400000000137e-05, 9.169399999999633e-05, 9.169399999999633e-05, 9.212499...</msg>
<status status="PASS" starttime="20201030 15:53:15.076" endtime="20201030 15:53:15.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.096" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.093" endtime="20201030 15:53:15.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.101" level="INFO">VALUE: [9.155500000000011e-05, 9.184699999999907e-05, 9.16670000000036e-05, 9.245800000000359e-05, 9.21800000000042e-05, 9.201400000000137e-05, 9.169399999999633e-05, 9.169399999999633e-05, 9.212499999999846e-05, 9.2333e-05, 9.205600000000008e-05, 9.190299999999735e-05, 9.155599999999958e-05, 9.158399999999872e-05, 9.248600000000273e-05, 9.16659999999972e-05, 9.213899999999803e-05, 9.216699999999717e-05, 9.180500000000036e-05, 9.167999999999676e-05, 9.224999999999511e-05, 9.18199999999994e-05, 9.245900000000307e-05, 9.234799999999904e-05, 9.201400000000137e-05, 9.192999999999701e-05, 9.175000000000155e-05, 9.225000000000205e-05, 9.20000000000018e-05, 9.225000000000205e-05, 9.179200000000026e-05, 9.18199999999994e-05, 9.245800000000359e-05, 9.155599999999958e-05, 9.247199999999622e-05, 9.180599999999983e-05, 9.177800000000069e-05, 9.168100000000318e-05, 9.247199999999622e-05, 9.155500000000011e-05, 9.202800000000094e-05, 9.156899999999968e-05, 9.170800000000284e-05, 9.158299999999925e-05, 9.191699999999692e-05, 9.213899999999803e-05, 9.236099999999914e-05, 9.16529999999971e-05, 9.187499999999821e-05, 9.176400000000112e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.098" endtime="20201030 15:53:15.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.086" endtime="20201030 15:53:15.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.115" endtime="20201030 15:53:15.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.110" endtime="20201030 15:53:15.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.107" endtime="20201030 15:53:15.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.583" endtime="20201030 15:53:15.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.581" endtime="20201030 15:53:15.140"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.166" endtime="20201030 15:53:15.189"></status>
</kw>
<msg timestamp="20201030 15:53:15.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.161" endtime="20201030 15:53:15.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.192" endtime="20201030 15:53:15.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.199" endtime="20201030 15:53:15.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.153" endtime="20201030 15:53:15.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.147" endtime="20201030 15:53:15.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.224" endtime="20201030 15:53:15.584"></status>
</kw>
<msg timestamp="20201030 15:53:15.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045235236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.220" endtime="20201030 15:53:15.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045235236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.594" endtime="20201030 15:53:15.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.614" endtime="20201030 15:53:15.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.213" endtime="20201030 15:53:15.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.208" endtime="20201030 15:53:15.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.632" level="INFO">${RESULT} = [{'diff': 9.338899999999928e-05}, {'diff': 9.279200000000126e-05}, {'diff': 9.274999999999561e-05}, {'diff': 9.330600000000133e-05}, {'diff': 9.33879999999998e-05}, {'diff': 9.3333000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:15.622" endtime="20201030 15:53:15.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.642" level="INFO">${ACCURACY} = {'diff': [9.338899999999928e-05, 9.279200000000126e-05, 9.274999999999561e-05, 9.330600000000133e-05, 9.33879999999998e-05, 9.3333000000001e-05, 9.288899999999878e-05, 9.280500000000136e-05, 9.3361000...</msg>
<status status="PASS" starttime="20201030 15:53:15.634" endtime="20201030 15:53:15.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.654" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.651" endtime="20201030 15:53:15.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.659" level="INFO">VALUE: [9.338899999999928e-05, 9.279200000000126e-05, 9.274999999999561e-05, 9.330600000000133e-05, 9.33879999999998e-05, 9.3333000000001e-05, 9.288899999999878e-05, 9.280500000000136e-05, 9.336100000000014e-05, 9.298600000000323e-05, 9.279100000000179e-05, 9.302800000000194e-05, 9.334700000000057e-05, 9.266700000000461e-05, 9.334700000000057e-05, 9.279200000000126e-05, 9.293099999999749e-05, 9.344400000000502e-05, 9.269399999999733e-05, 9.290199999999887e-05, 9.338899999999928e-05, 9.304199999999457e-05, 9.334700000000057e-05, 9.301399999999543e-05, 9.302800000000194e-05, 9.323599999999654e-05, 9.291699999999792e-05, 9.283399999999997e-05, 9.302800000000194e-05, 9.259699999999982e-05, 9.345899999999713e-05, 9.26659999999982e-05, 9.280500000000136e-05, 9.347200000000416e-05, 9.256899999999374e-05, 9.323600000000348e-05, 9.275000000000255e-05, 9.34859999999968e-05, 9.329200000000176e-05, 9.30130000000029e-05, 9.336199999999961e-05, 9.277800000000169e-05, 9.337499999999971e-05, 9.336100000000014e-05, 9.279099999999485e-05, 9.33609999999932e-05, 9.334700000000057e-05, 9.270899999999638e-05, 9.312499999999946e-05, 9.340299999999885e-05]</msg>
<status status="PASS" starttime="20201030 15:53:15.656" endtime="20201030 15:53:15.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.644" endtime="20201030 15:53:15.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.678" endtime="20201030 15:53:15.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.668" endtime="20201030 15:53:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.665" endtime="20201030 15:53:15.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.143" endtime="20201030 15:53:15.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.141" endtime="20201030 15:53:15.704"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.728" endtime="20201030 15:53:15.750"></status>
</kw>
<msg timestamp="20201030 15:53:15.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.724" endtime="20201030 15:53:15.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.754" endtime="20201030 15:53:15.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.760" endtime="20201030 15:53:15.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.717" endtime="20201030 15:53:15.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.710" endtime="20201030 15:53:15.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.785" endtime="20201030 15:53:16.145"></status>
</kw>
<msg timestamp="20201030 15:53:16.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043576653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043670403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.782" endtime="20201030 15:53:16.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043576653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043670403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.155" endtime="20201030 15:53:16.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.177" endtime="20201030 15:53:16.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.774" endtime="20201030 15:53:16.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.769" endtime="20201030 15:53:16.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.195" level="INFO">${RESULT} = [{'diff': 9.375000000000355e-05}, {'diff': 9.408399999999428e-05}, {'diff': 9.358400000000072e-05}, {'diff': 9.43200000000019e-05}, {'diff': 9.413800000000055e-05}, {'diff': 9.399999999999686e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:16.186" endtime="20201030 15:53:16.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.207" level="INFO">${ACCURACY} = {'diff': [9.375000000000355e-05, 9.408399999999428e-05, 9.358400000000072e-05, 9.43200000000019e-05, 9.413800000000055e-05, 9.399999999999686e-05, 9.413900000000003e-05, 9.41529999999996e-05, 9.447199...</msg>
<status status="PASS" starttime="20201030 15:53:16.198" endtime="20201030 15:53:16.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.218" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.216" endtime="20201030 15:53:16.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.224" level="INFO">VALUE: [9.375000000000355e-05, 9.408399999999428e-05, 9.358400000000072e-05, 9.43200000000019e-05, 9.413800000000055e-05, 9.399999999999686e-05, 9.413900000000003e-05, 9.41529999999996e-05, 9.447199999999822e-05, 9.399999999999686e-05, 9.368100000000518e-05, 9.38200000000014e-05, 9.38200000000014e-05, 9.357000000000115e-05, 9.392999999999901e-05, 9.423699999999702e-05, 9.402700000000347e-05, 9.448600000000473e-05, 9.413900000000003e-05, 9.399999999999686e-05, 9.444399999999908e-05, 9.370800000000484e-05, 9.412499999999352e-05, 9.4333000000002e-05, 9.412500000000046e-05, 9.391700000000586e-05, 9.402700000000347e-05, 9.369400000000527e-05, 9.401400000000337e-05, 9.408300000000175e-05, 9.434700000000157e-05, 9.426400000000362e-05, 9.373600000000398e-05, 9.423600000000448e-05, 9.38200000000014e-05, 9.369499999999781e-05, 9.41529999999996e-05, 9.412500000000046e-05, 9.366699999999867e-05, 9.43609999999942e-05, 9.381899999999499e-05, 9.367999999999876e-05, 9.358300000000125e-05, 9.394400000000552e-05, 9.402800000000294e-05, 9.404199999999557e-05, 9.379200000000226e-05, 9.38059999999949e-05, 9.358400000000072e-05, 9.419400000000577e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.221" endtime="20201030 15:53:16.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.209" endtime="20201030 15:53:16.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.238" endtime="20201030 15:53:16.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.233" endtime="20201030 15:53:16.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.230" endtime="20201030 15:53:16.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.706" endtime="20201030 15:53:16.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.705" endtime="20201030 15:53:16.263"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.288" endtime="20201030 15:53:16.310"></status>
</kw>
<msg timestamp="20201030 15:53:16.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.284" endtime="20201030 15:53:16.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.314" endtime="20201030 15:53:16.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.321" endtime="20201030 15:53:16.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.276" endtime="20201030 15:53:16.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.270" endtime="20201030 15:53:16.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.335" endtime="20201030 15:53:16.621"></status>
</kw>
<msg timestamp="20201030 15:53:16.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043667042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043761722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.333" endtime="20201030 15:53:16.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043667042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043761722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.626" endtime="20201030 15:53:16.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.634" endtime="20201030 15:53:16.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.329" endtime="20201030 15:53:16.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.327" endtime="20201030 15:53:16.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.643" level="INFO">${RESULT} = [{'diff': 9.467999999999976e-05}, {'diff': 9.481900000000293e-05}, {'diff': 9.491600000000044e-05}, {'diff': 9.512500000000146e-05}, {'diff': 9.537500000000171e-05}, {'diff': 9.494499999999906e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:16.639" endtime="20201030 15:53:16.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.648" level="INFO">${ACCURACY} = {'diff': [9.467999999999976e-05, 9.481900000000293e-05, 9.491600000000044e-05, 9.512500000000146e-05, 9.537500000000171e-05, 9.494499999999906e-05, 9.493100000000643e-05, 9.490300000000035e-05, 9.5014...</msg>
<status status="PASS" starttime="20201030 15:53:16.644" endtime="20201030 15:53:16.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.654" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.653" endtime="20201030 15:53:16.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.657" level="INFO">VALUE: [9.467999999999976e-05, 9.481900000000293e-05, 9.491600000000044e-05, 9.512500000000146e-05, 9.537500000000171e-05, 9.494499999999906e-05, 9.493100000000643e-05, 9.490300000000035e-05, 9.501400000000437e-05, 9.513900000000103e-05, 9.524999999999811e-05, 9.515200000000112e-05, 9.522299999999845e-05, 9.522199999999897e-05, 9.467999999999976e-05, 9.54859999999988e-05, 9.475000000000455e-05, 9.476299999999771e-05, 9.468099999999924e-05, 9.512500000000146e-05, 9.468099999999924e-05, 9.547300000000564e-05, 9.479199999999632e-05, 9.48059999999959e-05, 9.51660000000007e-05, 9.488900000000078e-05, 9.526399999999768e-05, 9.467999999999976e-05, 9.533299999999606e-05, 9.513900000000103e-05, 9.534699999999563e-05, 9.533299999999606e-05, 9.5027999999997e-05, 9.486100000000164e-05, 9.537500000000171e-05, 9.524999999999811e-05, 9.488799999999437e-05, 9.459699999999488e-05, 9.491699999999992e-05, 9.511100000000189e-05, 9.522199999999897e-05, 9.547199999999922e-05, 9.490300000000035e-05, 9.494499999999906e-05, 9.458400000000172e-05, 9.523599999999854e-05, 9.458400000000172e-05, 9.488799999999437e-05, 9.497199999999872e-05, 9.501400000000437e-05]</msg>
<status status="PASS" starttime="20201030 15:53:16.655" endtime="20201030 15:53:16.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.649" endtime="20201030 15:53:16.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.663" endtime="20201030 15:53:16.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.661" endtime="20201030 15:53:16.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.659" endtime="20201030 15:53:16.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.266" endtime="20201030 15:53:16.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.264" endtime="20201030 15:53:16.684"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.695" endtime="20201030 15:53:16.714"></status>
</kw>
<msg timestamp="20201030 15:53:16.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.693" endtime="20201030 15:53:16.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.716" endtime="20201030 15:53:16.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.719" endtime="20201030 15:53:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.690" endtime="20201030 15:53:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.687" endtime="20201030 15:53:16.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.730" endtime="20201030 15:53:17.042"></status>
</kw>
<msg timestamp="20201030 15:53:17.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0249405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025036569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:16.729" endtime="20201030 15:53:17.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0249405, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025036569, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:17.052" endtime="20201030 15:53:17.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.072" endtime="20201030 15:53:17.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.725" endtime="20201030 15:53:17.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.723" endtime="20201030 15:53:17.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.090" level="INFO">${RESULT} = [{'diff': 9.606900000000071e-05}, {'diff': 9.57079999999999e-05}, {'diff': 9.573599999999904e-05}, {'diff': 9.558299999999978e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.590300000000135e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:17.081" endtime="20201030 15:53:17.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.100" level="INFO">${ACCURACY} = {'diff': [9.606900000000071e-05, 9.57079999999999e-05, 9.573599999999904e-05, 9.558299999999978e-05, 9.624999999999911e-05, 9.590300000000135e-05, 9.559700000000282e-05, 9.636099999999967e-05, 9.61110...</msg>
<status status="PASS" starttime="20201030 15:53:17.093" endtime="20201030 15:53:17.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.112" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.110" endtime="20201030 15:53:17.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.118" level="INFO">VALUE: [9.606900000000071e-05, 9.57079999999999e-05, 9.573599999999904e-05, 9.558299999999978e-05, 9.624999999999911e-05, 9.590300000000135e-05, 9.559700000000282e-05, 9.636099999999967e-05, 9.611100000000289e-05, 9.630500000000139e-05, 9.618100000000074e-05, 9.6027000000002e-05, 9.590200000000187e-05, 9.591600000000144e-05, 9.599999999999886e-05, 9.594500000000006e-05, 9.618100000000074e-05, 9.568100000000024e-05, 9.613899999999856e-05, 9.637499999999924e-05, 9.637499999999924e-05, 9.583300000000003e-05, 9.599999999999886e-05, 9.636099999999967e-05, 9.591600000000144e-05, 9.595800000000015e-05, 9.636099999999967e-05, 9.619400000000083e-05, 9.612499999999899e-05, 9.587499999999874e-05, 9.645900000000013e-05, 9.570899999999938e-05, 9.636199999999914e-05, 9.612500000000246e-05, 9.618000000000126e-05, 9.602800000000147e-05, 9.580500000000089e-05, 9.612499999999899e-05, 9.577799999999775e-05, 9.580600000000036e-05, 9.581999999999993e-05, 9.580600000000036e-05, 9.6334e-05, 9.556999999999968e-05, 9.57079999999999e-05, 9.608300000000028e-05, 9.626399999999868e-05, 9.625000000000258e-05, 9.579100000000132e-05, 9.558299999999978e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.114" endtime="20201030 15:53:17.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.102" endtime="20201030 15:53:17.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.131" endtime="20201030 15:53:17.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.126" endtime="20201030 15:53:17.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.124" endtime="20201030 15:53:17.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.685" endtime="20201030 15:53:17.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.684" endtime="20201030 15:53:17.157"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.181" endtime="20201030 15:53:17.206"></status>
</kw>
<msg timestamp="20201030 15:53:17.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.177" endtime="20201030 15:53:17.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.209" endtime="20201030 15:53:17.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.216" endtime="20201030 15:53:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.170" endtime="20201030 15:53:17.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.164" endtime="20201030 15:53:17.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.241" endtime="20201030 15:53:17.609"></status>
</kw>
<msg timestamp="20201030 15:53:17.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045375917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.237" endtime="20201030 15:53:17.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045375917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.619" endtime="20201030 15:53:17.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.639" endtime="20201030 15:53:17.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.230" endtime="20201030 15:53:17.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.224" endtime="20201030 15:53:17.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.658" level="INFO">${RESULT} = [{'diff': 9.723600000000054e-05}, {'diff': 9.668100000000124e-05}, {'diff': 9.693099999999455e-05}, {'diff': 9.74730000000007e-05}, {'diff': 9.727699999999978e-05}, {'diff': 9.75279999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:17.648" endtime="20201030 15:53:17.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.668" level="INFO">${ACCURACY} = {'diff': [9.723600000000054e-05, 9.668100000000124e-05, 9.693099999999455e-05, 9.74730000000007e-05, 9.727699999999978e-05, 9.75279999999995e-05, 9.691600000000244e-05, 9.679099999999885e-05, 9.737499...</msg>
<status status="PASS" starttime="20201030 15:53:17.660" endtime="20201030 15:53:17.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.680" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.677" endtime="20201030 15:53:17.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.685" level="INFO">VALUE: [9.723600000000054e-05, 9.668100000000124e-05, 9.693099999999455e-05, 9.74730000000007e-05, 9.727699999999978e-05, 9.75279999999995e-05, 9.691600000000244e-05, 9.679099999999885e-05, 9.737499999999677e-05, 9.681899999999799e-05, 9.726399999999968e-05, 9.658300000000425e-05, 9.659699999999688e-05, 9.711099999999695e-05, 9.706999999999771e-05, 9.701399999999943e-05, 9.657000000000415e-05, 9.679099999999885e-05, 9.691600000000244e-05, 9.73609999999972e-05, 9.7027999999999e-05, 9.687499999999627e-05, 9.734700000000457e-05, 9.665200000000262e-05, 9.737499999999677e-05, 9.691700000000192e-05, 9.694400000000158e-05, 9.674999999999961e-05, 9.655600000000458e-05, 9.73609999999972e-05, 9.656899999999774e-05, 9.748599999999386e-05, 9.711100000000389e-05, 9.75409999999996e-05, 9.71530000000026e-05, 9.725000000000011e-05, 9.69860000000003e-05, 9.699999999999986e-05, 9.734800000000404e-05, 9.656999999999721e-05, 9.692999999999508e-05, 9.699999999999986e-05, 9.704200000000551e-05, 9.690300000000235e-05, 9.686100000000364e-05, 9.74860000000008e-05, 9.7027999999999e-05, 9.670900000000038e-05, 9.655599999999764e-05, 9.747299999999376e-05]</msg>
<status status="PASS" starttime="20201030 15:53:17.682" endtime="20201030 15:53:17.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.670" endtime="20201030 15:53:17.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.700" endtime="20201030 15:53:17.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.694" endtime="20201030 15:53:17.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.691" endtime="20201030 15:53:17.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.159" endtime="20201030 15:53:17.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.158" endtime="20201030 15:53:17.726"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.750" endtime="20201030 15:53:17.773"></status>
</kw>
<msg timestamp="20201030 15:53:17.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.747" endtime="20201030 15:53:17.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.777" endtime="20201030 15:53:17.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.784" endtime="20201030 15:53:17.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.739" endtime="20201030 15:53:17.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.733" endtime="20201030 15:53:17.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.809" endtime="20201030 15:53:18.181"></status>
</kw>
<msg timestamp="20201030 15:53:18.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043977431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.805" endtime="20201030 15:53:18.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043977431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.191" endtime="20201030 15:53:18.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.211" endtime="20201030 15:53:18.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.798" endtime="20201030 15:53:18.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.793" endtime="20201030 15:53:18.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.229" level="INFO">${RESULT} = [{'diff': 9.75279999999995e-05}, {'diff': 9.825000000000111e-05}, {'diff': 9.849999999999443e-05}, {'diff': 9.788900000000378e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.838899999999734e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:18.220" endtime="20201030 15:53:18.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.240" level="INFO">${ACCURACY} = {'diff': [9.75279999999995e-05, 9.825000000000111e-05, 9.849999999999443e-05, 9.788900000000378e-05, 9.834699999999863e-05, 9.838899999999734e-05, 9.77080000000019e-05, 9.783399999999803e-05, 9.759799...</msg>
<status status="PASS" starttime="20201030 15:53:18.231" endtime="20201030 15:53:18.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.252" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.249" endtime="20201030 15:53:18.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.258" level="INFO">VALUE: [9.75279999999995e-05, 9.825000000000111e-05, 9.849999999999443e-05, 9.788900000000378e-05, 9.834699999999863e-05, 9.838899999999734e-05, 9.77080000000019e-05, 9.783399999999803e-05, 9.759799999999735e-05, 9.825000000000111e-05, 9.84730000000017e-05, 9.8028e-05, 9.76660000000032e-05, 9.812500000000446e-05, 9.818100000000274e-05, 9.779099999999985e-05, 9.847200000000222e-05, 9.758299999999831e-05, 9.76530000000031e-05, 9.769500000000181e-05, 9.80410000000001e-05, 9.825000000000111e-05, 9.759700000000482e-05, 9.781899999999899e-05, 9.831899999999949e-05, 9.823600000000154e-05, 9.83609999999982e-05, 9.801400000000043e-05, 9.793100000000249e-05, 9.804199999999957e-05, 9.801400000000043e-05, 9.845899999999519e-05, 9.837499999999777e-05, 9.78059999999989e-05, 9.85280000000005e-05, 9.845799999999572e-05, 9.759699999999788e-05, 9.797199999999479e-05, 9.815299999999666e-05, 9.78059999999989e-05, 9.808299999999881e-05, 9.756999999999821e-05, 9.833400000000547e-05, 9.834800000000504e-05, 9.794400000000258e-05, 9.79860000000013e-05, 9.769400000000233e-05, 9.790200000000387e-05, 9.847200000000222e-05, 9.848599999999486e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.254" endtime="20201030 15:53:18.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.242" endtime="20201030 15:53:18.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.271" endtime="20201030 15:53:18.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.267" endtime="20201030 15:53:18.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.264" endtime="20201030 15:53:18.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.728" endtime="20201030 15:53:18.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.727" endtime="20201030 15:53:18.297"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.321" endtime="20201030 15:53:18.344"></status>
</kw>
<msg timestamp="20201030 15:53:18.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.318" endtime="20201030 15:53:18.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.348" endtime="20201030 15:53:18.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.354" endtime="20201030 15:53:18.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.310" endtime="20201030 15:53:18.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.304" endtime="20201030 15:53:18.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.379" endtime="20201030 15:53:18.749"></status>
</kw>
<msg timestamp="20201030 15:53:18.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043813097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.376" endtime="20201030 15:53:18.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043813097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.759" endtime="20201030 15:53:18.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.779" endtime="20201030 15:53:18.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.368" endtime="20201030 15:53:18.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.363" endtime="20201030 15:53:18.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.797" level="INFO">${RESULT} = [{'diff': 9.941600000000494e-05}, {'diff': 9.890300000000435e-05}, {'diff': 9.937499999999877e-05}, {'diff': 9.86809999999963e-05}, {'diff': 9.947200000000322e-05}, {'diff': 9.913899999999809e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:18.788" endtime="20201030 15:53:18.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.809" level="INFO">${ACCURACY} = {'diff': [9.941600000000494e-05, 9.890300000000435e-05, 9.937499999999877e-05, 9.86809999999963e-05, 9.947200000000322e-05, 9.913899999999809e-05, 9.912499999999852e-05, 9.9028000000001e-05, 9.8916000...</msg>
<status status="PASS" starttime="20201030 15:53:18.800" endtime="20201030 15:53:18.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.821" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.819" endtime="20201030 15:53:18.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.827" level="INFO">VALUE: [9.941600000000494e-05, 9.890300000000435e-05, 9.937499999999877e-05, 9.86809999999963e-05, 9.947200000000322e-05, 9.913899999999809e-05, 9.912499999999852e-05, 9.9028000000001e-05, 9.891600000000444e-05, 9.925000000000211e-05, 9.913899999999809e-05, 9.94860000000028e-05, 9.901400000000143e-05, 9.913899999999809e-05, 9.858299999999931e-05, 9.937499999999877e-05, 9.869499999999587e-05, 9.891699999999698e-05, 9.890300000000435e-05, 9.933399999999953e-05, 9.913799999999862e-05, 9.881899999999999e-05, 9.913899999999809e-05, 9.873600000000204e-05, 9.900000000000186e-05, 9.879200000000032e-05, 9.859699999999888e-05, 9.926400000000168e-05, 9.868100000000324e-05, 9.943099999999705e-05, 9.94730000000027e-05, 9.901400000000143e-05, 9.858299999999931e-05, 9.887500000000521e-05, 9.89860000000023e-05, 9.890299999999741e-05, 9.869400000000333e-05, 9.912499999999852e-05, 9.870900000000238e-05, 9.870900000000238e-05, 9.911099999999895e-05, 9.925000000000211e-05, 9.919400000000383e-05, 9.913899999999809e-05, 9.94860000000028e-05, 9.894399999999665e-05, 9.894500000000306e-05, 9.859699999999888e-05, 9.891700000000392e-05, 9.925000000000211e-05]</msg>
<status status="PASS" starttime="20201030 15:53:18.823" endtime="20201030 15:53:18.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.811" endtime="20201030 15:53:18.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.844" endtime="20201030 15:53:18.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.840" endtime="20201030 15:53:18.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.837" endtime="20201030 15:53:18.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.299" endtime="20201030 15:53:18.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.298" endtime="20201030 15:53:18.870"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.895" endtime="20201030 15:53:18.918"></status>
</kw>
<msg timestamp="20201030 15:53:18.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.891" endtime="20201030 15:53:18.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.921" endtime="20201030 15:53:18.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.928" endtime="20201030 15:53:18.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.883" endtime="20201030 15:53:18.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.877" endtime="20201030 15:53:18.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.953" endtime="20201030 15:53:19.328"></status>
</kw>
<msg timestamp="20201030 15:53:19.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043701431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043801194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.950" endtime="20201030 15:53:19.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043701431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043801194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.338" endtime="20201030 15:53:19.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.358" endtime="20201030 15:53:19.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.941" endtime="20201030 15:53:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.937" endtime="20201030 15:53:19.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.376" level="INFO">${RESULT} = [{'diff': 9.976300000000271e-05}, {'diff': 0.00010023700000000302}, {'diff': 0.00010023600000000354}, {'diff': 9.970799999999697e-05}, {'diff': 0.00010034700000000063}, {'diff': 9.979200000000132e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:19.367" endtime="20201030 15:53:19.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.386" level="INFO">${ACCURACY} = {'diff': [9.976300000000271e-05, 0.00010023700000000302, 0.00010023600000000354, 9.970799999999697e-05, 0.00010034700000000063, 9.979200000000132e-05, 9.993100000000449e-05, 9.96809999999973e-05, 0.00...</msg>
<status status="PASS" starttime="20201030 15:53:19.379" endtime="20201030 15:53:19.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.398" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.395" endtime="20201030 15:53:19.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.403" level="INFO">VALUE: [9.976300000000271e-05, 0.00010023700000000302, 0.00010023600000000354, 9.970799999999697e-05, 0.00010034700000000063, 9.979200000000132e-05, 9.993100000000449e-05, 9.96809999999973e-05, 0.00010031900000000149, 9.984700000000013e-05, 0.0001003480000000001, 9.981900000000099e-05, 9.958300000000031e-05, 0.00010034699999999369, 9.99159999999985e-05, 0.00010047200000000422, 9.977799999999482e-05, 0.0001000139999999955, 0.00010033400000000053, 9.98060000000009e-05, 0.00010001400000000243, 9.982000000000046e-05, 0.000100028000000002, 0.00010024999999999618, 0.00010047199999999729, 0.00010045800000000465, 9.958300000000031e-05, 9.950000000000236e-05, 9.958300000000031e-05, 9.969500000000381e-05, 9.970900000000338e-05, 0.00010034700000000063, 9.958399999999978e-05, 0.00010038899999999934, 0.00010025000000000311, 9.987499999999927e-05, 0.0001004860000000038, 9.956900000000074e-05, 9.96939999999974e-05, 0.000100028000000002, 9.955600000000064e-05, 9.970900000000338e-05, 9.966700000000467e-05, 0.00010002799999999507, 9.990299999999841e-05, 9.959699999999988e-05, 0.00010037499999999977, 0.0001004860000000038, 0.00010009799999999985, 0.00010022199999999704]</msg>
<status status="PASS" starttime="20201030 15:53:19.400" endtime="20201030 15:53:19.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.388" endtime="20201030 15:53:19.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.417" endtime="20201030 15:53:19.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.412" endtime="20201030 15:53:19.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.410" endtime="20201030 15:53:19.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.873" endtime="20201030 15:53:19.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.871" endtime="20201030 15:53:19.443"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.467" endtime="20201030 15:53:19.492"></status>
</kw>
<msg timestamp="20201030 15:53:19.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.464" endtime="20201030 15:53:19.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.495" endtime="20201030 15:53:19.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.502" endtime="20201030 15:53:19.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.456" endtime="20201030 15:53:19.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.450" endtime="20201030 15:53:19.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.527" endtime="20201030 15:53:19.900"></status>
</kw>
<msg timestamp="20201030 15:53:19.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045544083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045644847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.523" endtime="20201030 15:53:19.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045544083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045644847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.910" endtime="20201030 15:53:19.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.929" endtime="20201030 15:53:19.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.516" endtime="20201030 15:53:19.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.511" endtime="20201030 15:53:19.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.947" level="INFO">${RESULT} = [{'diff': 0.00010076400000000318}, {'diff': 0.00010076399999999625}, {'diff': 0.00010126399999999675}, {'diff': 0.00010136099999999426}, {'diff': 0.00010088899999999984}, {'diff': 0.000100666999999998...</msg>
<status status="PASS" starttime="20201030 15:53:19.938" endtime="20201030 15:53:19.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.957" level="INFO">${ACCURACY} = {'diff': [0.00010076400000000318, 0.00010076399999999625, 0.00010126399999999675, 0.00010136099999999426, 0.00010088899999999984, 0.00010066699999999873, 0.00010094500000000506, 0.00010090299999999941...</msg>
<status status="PASS" starttime="20201030 15:53:19.949" endtime="20201030 15:53:19.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.969" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.966" endtime="20201030 15:53:19.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.974" level="INFO">VALUE: [0.00010076400000000318, 0.00010076399999999625, 0.00010126399999999675, 0.00010136099999999426, 0.00010088899999999984, 0.00010066699999999873, 0.00010094500000000506, 0.00010090299999999941, 0.00010113900000000009, 0.00010143099999999905, 0.00010079100000000285, 0.00010093000000000601, 0.00010134700000000163, 0.00010058300000000131, 0.00010102799999999607, 0.00010145800000000565, 0.000101028000000003, 0.00010111099999999401, 0.00010070900000000438, 0.00010112500000000052, 0.00010084700000000113, 0.00010090199999999994, 0.00010080500000000242, 0.00010091699999999898, 0.00010125000000000411, 0.00010104200000000257, 0.00010147200000000522, 0.00010070900000000438, 0.00010140299999999991, 0.00010122299999999751, 0.00010109800000000085, 0.00010062500000000002, 0.00010136099999999426, 0.00010079100000000285, 0.00010136099999999426, 0.00010134699999999469, 0.00010091699999999898, 0.0001005559999999947, 0.00010069499999999787, 0.0001013610000000012, 0.00010147299999999776, 0.00010091699999999898, 0.00010137500000000077, 0.0001013610000000012, 0.00010081900000000199, 0.0001008060000000019, 0.00010123600000000454, 0.00010148599999999786, 0.00010072299999999701, 0.00010137500000000077]</msg>
<status status="PASS" starttime="20201030 15:53:19.971" endtime="20201030 15:53:19.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.959" endtime="20201030 15:53:19.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.990" endtime="20201030 15:53:20.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.983" endtime="20201030 15:53:20.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.981" endtime="20201030 15:53:20.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.445" endtime="20201030 15:53:20.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.444" endtime="20201030 15:53:20.016"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.041" endtime="20201030 15:53:20.064"></status>
</kw>
<msg timestamp="20201030 15:53:20.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.037" endtime="20201030 15:53:20.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.068" endtime="20201030 15:53:20.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.074" endtime="20201030 15:53:20.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.029" endtime="20201030 15:53:20.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.023" endtime="20201030 15:53:20.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.099" endtime="20201030 15:53:20.394"></status>
</kw>
<msg timestamp="20201030 15:53:20.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044274889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044376847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.096" endtime="20201030 15:53:20.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044274889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044376847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.398" endtime="20201030 15:53:20.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.406" endtime="20201030 15:53:20.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.088" endtime="20201030 15:53:20.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.083" endtime="20201030 15:53:20.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.415" level="INFO">${RESULT} = [{'diff': 0.00010195799999999922}, {'diff': 0.00010191699999999998}, {'diff': 0.00010183400000000203}, {'diff': 0.00010202799999999707}, {'diff': 0.00010245799999999972}, {'diff': 0.000101570000000002...</msg>
<status status="PASS" starttime="20201030 15:53:20.410" endtime="20201030 15:53:20.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.420" level="INFO">${ACCURACY} = {'diff': [0.00010195799999999922, 0.00010191699999999998, 0.00010183400000000203, 0.00010202799999999707, 0.00010245799999999972, 0.00010157000000000221, 0.0001022359999999986, 0.00010191699999999998,...</msg>
<status status="PASS" starttime="20201030 15:53:20.416" endtime="20201030 15:53:20.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.426" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.424" endtime="20201030 15:53:20.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.428" level="INFO">VALUE: [0.00010195799999999922, 0.00010191699999999998, 0.00010183400000000203, 0.00010202799999999707, 0.00010245799999999972, 0.00010157000000000221, 0.0001022359999999986, 0.00010191699999999998, 0.0001016939999999994, 0.000102028000000004, 0.00010202799999999707, 0.00010200000000000486, 0.00010224999999999818, 0.00010204199999999664, 0.00010165200000000069, 0.00010224999999999818, 0.00010170899999999844, 0.00010200000000000486, 0.00010180499999999648, 0.0001019160000000005, 0.0001020139999999975, 0.00010156900000000274, 0.00010180499999999648, 0.0001016939999999994, 0.00010177799999999682, 0.00010213900000000109, 0.000102028000000004, 0.00010202799999999707, 0.00010224999999999818, 0.0001022359999999986, 0.00010230500000000392, 0.00010213900000000109, 0.00010167999999999983, 0.00010191699999999998, 0.00010226399999999775, 0.00010201400000000443, 0.00010201400000000443, 0.00010151400000000393, 0.0001016809999999993, 0.00010234799999999517, 0.00010215200000000119, 0.0001020139999999975, 0.00010212500000000152, 0.00010222199999999904, 0.00010231900000000349, 0.00010224999999999818, 0.00010193100000000649, 0.00010158399999999485, 0.00010202799999999707, 0.00010222299999999851]</msg>
<status status="PASS" starttime="20201030 15:53:20.427" endtime="20201030 15:53:20.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.421" endtime="20201030 15:53:20.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.434" endtime="20201030 15:53:20.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.432" endtime="20201030 15:53:20.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.431" endtime="20201030 15:53:20.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.019" endtime="20201030 15:53:20.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.017" endtime="20201030 15:53:20.455"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.467" endtime="20201030 15:53:20.487"></status>
</kw>
<msg timestamp="20201030 15:53:20.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.465" endtime="20201030 15:53:20.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.489" endtime="20201030 15:53:20.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.492" endtime="20201030 15:53:20.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.461" endtime="20201030 15:53:20.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.459" endtime="20201030 15:53:20.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.503" endtime="20201030 15:53:20.789"></status>
</kw>
<msg timestamp="20201030 15:53:20.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025319194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0254225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:20.502" endtime="20201030 15:53:20.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025319194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0254225, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:20.794" endtime="20201030 15:53:20.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.802" endtime="20201030 15:53:20.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.498" endtime="20201030 15:53:20.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.496" endtime="20201030 15:53:20.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.810" level="INFO">${RESULT} = [{'diff': 0.00010330600000000092}, {'diff': 0.00010347200000000029}, {'diff': 0.00010348599999999986}, {'diff': 0.00010279200000000085}, {'diff': 0.00010291700000000098}, {'diff': 0.000103459000000000...</msg>
<status status="PASS" starttime="20201030 15:53:20.806" endtime="20201030 15:53:20.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.818" level="INFO">${ACCURACY} = {'diff': [0.00010330600000000092, 0.00010347200000000029, 0.00010348599999999986, 0.00010279200000000085, 0.00010291700000000098, 0.00010345900000000019, 0.00010347299999999976, 0.00010299999999999893...</msg>
<status status="PASS" starttime="20201030 15:53:20.812" endtime="20201030 15:53:20.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.823" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.822" endtime="20201030 15:53:20.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.826" level="INFO">VALUE: [0.00010330600000000092, 0.00010347200000000029, 0.00010348599999999986, 0.00010279200000000085, 0.00010291700000000098, 0.00010345900000000019, 0.00010347299999999976, 0.00010299999999999893, 0.0001026940000000004, 0.00010256900000000027, 0.00010281900000000052, 0.00010279200000000085, 0.00010269499999999987, 0.00010280600000000042, 0.00010344500000000062, 0.0001026810000000003, 0.0001033749999999993, 0.00010304099999999816, 0.00010312499999999905, 0.00010258299999999984, 0.00010345800000000072, 0.00010324999999999918, 0.00010291700000000098, 0.00010290300000000141, 0.00010309699999999991, 0.00010347200000000029, 0.00010294400000000065, 0.0001033200000000005, 0.00010330499999999798, 0.00010334700000000016, 0.0001032359999999996, 0.00010258299999999984, 0.00010265300000000116, 0.00010259699999999941, 0.00010320800000000047, 0.00010261099999999898, 0.00010324999999999918, 0.00010309799999999938, 0.00010329099999999841, 0.00010280499999999748, 0.00010334700000000016, 0.0001029160000000015, 0.00010280500000000095, 0.00010279200000000085, 0.00010270799999999997, 0.00010251400000000147, 0.00010316700000000123, 0.00010297199999999979, 0.00010280600000000042, 0.00010279199999999739]</msg>
<status status="PASS" starttime="20201030 15:53:20.825" endtime="20201030 15:53:20.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.819" endtime="20201030 15:53:20.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.832" endtime="20201030 15:53:20.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.830" endtime="20201030 15:53:20.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.829" endtime="20201030 15:53:20.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.457" endtime="20201030 15:53:20.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.456" endtime="20201030 15:53:20.853"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.864" endtime="20201030 15:53:20.884"></status>
</kw>
<msg timestamp="20201030 15:53:20.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.863" endtime="20201030 15:53:20.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.886" endtime="20201030 15:53:20.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.889" endtime="20201030 15:53:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.859" endtime="20201030 15:53:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.857" endtime="20201030 15:53:20.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.900" endtime="20201030 15:53:21.217"></status>
</kw>
<msg timestamp="20201030 15:53:21.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024933306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.898" endtime="20201030 15:53:21.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024933306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.227" endtime="20201030 15:53:21.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.246" endtime="20201030 15:53:21.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.895" endtime="20201030 15:53:21.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.893" endtime="20201030 15:53:21.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.264" level="INFO">${RESULT} = [{'diff': 0.00010397200000000079}, {'diff': 0.00010381999999999753}, {'diff': 0.00010354199999999814}, {'diff': 0.00010358400000000031}, {'diff': 0.00010354100000000213}, {'diff': 0.000103624999999999...</msg>
<status status="PASS" starttime="20201030 15:53:21.255" endtime="20201030 15:53:21.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.274" level="INFO">${ACCURACY} = {'diff': [0.00010397200000000079, 0.00010381999999999753, 0.00010354199999999814, 0.00010358400000000031, 0.00010354100000000213, 0.00010362499999999955, 0.00010363899999999912, 0.0001040139999999995,...</msg>
<status status="PASS" starttime="20201030 15:53:21.266" endtime="20201030 15:53:21.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.285" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.283" endtime="20201030 15:53:21.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.291" level="INFO">VALUE: [0.00010397200000000079, 0.00010381999999999753, 0.00010354199999999814, 0.00010358400000000031, 0.00010354100000000213, 0.00010362499999999955, 0.00010363899999999912, 0.0001040139999999995, 0.00010369399999999793, 0.00010380600000000142, 0.00010404199999999864, 0.00010436100000000073, 0.000103820000000001, 0.0001035559999999977, 0.00010354199999999814, 0.00010402699999999959, 0.00010438899999999987, 0.0001036940000000014, 0.00010436100000000073, 0.00010358300000000084, 0.0001035689999999978, 0.00010444500000000162, 0.00010358400000000031, 0.00010415299999999919, 0.00010368099999999783, 0.00010425000000000018, 0.00010436100000000073, 0.00010445799999999825, 0.00010436100000000073, 0.00010448600000000086, 0.0001040420000000021, 0.00010381999999999753, 0.0001036810000000013, 0.00010413899999999962, 0.00010358400000000031, 0.00010445900000000119, 0.00010379099999999891, 0.00010447200000000129, 0.0001040139999999995, 0.00010441700000000248, 0.00010358300000000084, 0.00010447200000000129, 0.00010412499999999658, 0.0001040139999999995, 0.00010447300000000076, 0.00010415199999999972, 0.00010399999999999993, 0.00010368000000000183, 0.00010413899999999962, 0.00010434700000000116]</msg>
<status status="PASS" starttime="20201030 15:53:21.288" endtime="20201030 15:53:21.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.276" endtime="20201030 15:53:21.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.304" endtime="20201030 15:53:21.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.300" endtime="20201030 15:53:21.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.297" endtime="20201030 15:53:21.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.854" endtime="20201030 15:53:21.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.854" endtime="20201030 15:53:21.330"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.354" endtime="20201030 15:53:21.380"></status>
</kw>
<msg timestamp="20201030 15:53:21.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.350" endtime="20201030 15:53:21.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.383" endtime="20201030 15:53:21.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.390" endtime="20201030 15:53:21.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.343" endtime="20201030 15:53:21.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.337" endtime="20201030 15:53:21.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.415" endtime="20201030 15:53:21.774"></status>
</kw>
<msg timestamp="20201030 15:53:21.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045199125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045304222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.411" endtime="20201030 15:53:21.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045199125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045304222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.784" endtime="20201030 15:53:21.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.803" endtime="20201030 15:53:21.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.404" endtime="20201030 15:53:21.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.399" endtime="20201030 15:53:21.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.821" level="INFO">${RESULT} = [{'diff': 0.00010509699999999844}, {'diff': 0.00010467999999999589}, {'diff': 0.0001053610000000052}, {'diff': 0.00010513899999999715}, {'diff': 0.00010534699999999869}, {'diff': 0.0001053610000000052...</msg>
<status status="PASS" starttime="20201030 15:53:21.812" endtime="20201030 15:53:21.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.831" level="INFO">${ACCURACY} = {'diff': [0.00010509699999999844, 0.00010467999999999589, 0.0001053610000000052, 0.00010513899999999715, 0.00010534699999999869, 0.0001053610000000052, 0.00010469499999999493, 0.00010511099999999801, ...</msg>
<status status="PASS" starttime="20201030 15:53:21.823" endtime="20201030 15:53:21.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.842" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.840" endtime="20201030 15:53:21.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.848" level="INFO">VALUE: [0.00010509699999999844, 0.00010467999999999589, 0.0001053610000000052, 0.00010513899999999715, 0.00010534699999999869, 0.0001053610000000052, 0.00010469499999999493, 0.00010511099999999801, 0.0001053339999999986, 0.00010469399999999546, 0.00010512499999999758, 0.0001053610000000052, 0.00010534700000000563, 0.00010454199999999914, 0.00010513899999999715, 0.00010502800000000007, 0.00010488900000000384, 0.00010522200000000204, 0.00010513900000000409, 0.00010547300000000176, 0.00010525000000000118, 0.00010515300000000366, 0.00010515300000000366, 0.00010533299999999912, 0.00010513900000000409, 0.0001046940000000024, 0.00010497200000000179, 0.00010526399999999381, 0.00010459799999999742, 0.00010480599999999896, 0.00010469399999999546, 0.00010477700000000034, 0.00010552799999999363, 0.00010530599999999946, 0.00010480499999999948, 0.00010458299999999837, 0.00010458299999999837, 0.00010515300000000366, 0.0001053339999999986, 0.00010513900000000409, 0.00010545800000000272, 0.00010459699999999794, 0.00010458300000000531, 0.00010458299999999837, 0.00010481900000000599, 0.00010548599999999492, 0.00010547200000000229, 0.00010491700000000298, 0.00010543100000000305, 0.00010548700000000133]</msg>
<status status="PASS" starttime="20201030 15:53:21.845" endtime="20201030 15:53:21.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.833" endtime="20201030 15:53:21.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.863" endtime="20201030 15:53:21.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.857" endtime="20201030 15:53:21.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.854" endtime="20201030 15:53:21.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.332" endtime="20201030 15:53:21.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.331" endtime="20201030 15:53:21.889"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.913" endtime="20201030 15:53:21.936"></status>
</kw>
<msg timestamp="20201030 15:53:21.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.909" endtime="20201030 15:53:21.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.940" endtime="20201030 15:53:21.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.947" endtime="20201030 15:53:21.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.901" endtime="20201030 15:53:21.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.895" endtime="20201030 15:53:21.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.971" endtime="20201030 15:53:22.337"></status>
</kw>
<msg timestamp="20201030 15:53:22.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043460181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043566056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.968" endtime="20201030 15:53:22.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043460181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043566056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.347" endtime="20201030 15:53:22.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.366" endtime="20201030 15:53:22.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.960" endtime="20201030 15:53:22.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.955" endtime="20201030 15:53:22.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.384" level="INFO">${RESULT} = [{'diff': 0.00010587499999999833}, {'diff': 0.00010613899999999815}, {'diff': 0.00010598599999999542}, {'diff': 0.00010580500000000048}, {'diff': 0.00010569399999999646}, {'diff': 0.000106346999999999...</msg>
<status status="PASS" starttime="20201030 15:53:22.375" endtime="20201030 15:53:22.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.395" level="INFO">${ACCURACY} = {'diff': [0.00010587499999999833, 0.00010613899999999815, 0.00010598599999999542, 0.00010580500000000048, 0.00010569399999999646, 0.00010634699999999969, 0.00010647199999999635, 0.00010648600000000286...</msg>
<status status="PASS" starttime="20201030 15:53:22.386" endtime="20201030 15:53:22.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.407" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.404" endtime="20201030 15:53:22.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.412" level="INFO">VALUE: [0.00010587499999999833, 0.00010613899999999815, 0.00010598599999999542, 0.00010580500000000048, 0.00010569399999999646, 0.00010634699999999969, 0.00010647199999999635, 0.00010648600000000286, 0.00010602800000000107, 0.00010590299999999747, 0.00010591700000000398, 0.00010612500000000552, 0.00010559699999999894, 0.00010592999999999714, 0.0001062219999999961, 0.00010568000000000383, 0.00010566700000000373, 0.00010591699999999704, 0.00010645799999999678, 0.00010558400000000578, 0.00010604200000000064, 0.00010565299999999722, 0.00010605500000000073, 0.00010580499999999354, 0.00010613899999999815, 0.0001055689999999998, 0.0001058610000000057, 0.0001058889999999979, 0.00010624999999999524, 0.00010625000000000218, 0.0001057089999999955, 0.0001062360000000026, 0.00010568099999999636, 0.00010584699999999919, 0.00010567999999999689, 0.00010613899999999815, 0.00010613899999999815, 0.0001062360000000026, 0.00010558299999999937, 0.00010558299999999937, 0.00010558399999999885, 0.00010593099999999661, 0.00010556999999999928, 0.00010613900000000509, 0.00010645799999999678, 0.00010569399999999646, 0.00010636099999999926, 0.00010577800000000082, 0.00010636099999999926, 0.00010602800000000107]</msg>
<status status="PASS" starttime="20201030 15:53:22.409" endtime="20201030 15:53:22.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.397" endtime="20201030 15:53:22.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.426" endtime="20201030 15:53:22.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.421" endtime="20201030 15:53:22.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.419" endtime="20201030 15:53:22.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.891" endtime="20201030 15:53:22.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.890" endtime="20201030 15:53:22.452"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.476" endtime="20201030 15:53:22.500"></status>
</kw>
<msg timestamp="20201030 15:53:22.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.473" endtime="20201030 15:53:22.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.503" endtime="20201030 15:53:22.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.510" endtime="20201030 15:53:22.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.465" endtime="20201030 15:53:22.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.459" endtime="20201030 15:53:22.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.535" endtime="20201030 15:53:22.904"></status>
</kw>
<msg timestamp="20201030 15:53:22.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043790347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043897042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.531" endtime="20201030 15:53:22.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043790347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043897042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.914" endtime="20201030 15:53:22.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.933" endtime="20201030 15:53:22.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.524" endtime="20201030 15:53:22.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.519" endtime="20201030 15:53:22.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.951" level="INFO">${RESULT} = [{'diff': 0.00010669499999999693}, {'diff': 0.00010680600000000096}, {'diff': 0.00010745900000000419}, {'diff': 0.00010748599999999692}, {'diff': 0.00010683300000000062}, {'diff': 0.000106930999999997...</msg>
<status status="PASS" starttime="20201030 15:53:22.942" endtime="20201030 15:53:22.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.963" level="INFO">${ACCURACY} = {'diff': [0.00010669499999999693, 0.00010680600000000096, 0.00010745900000000419, 0.00010748599999999692, 0.00010683300000000062, 0.00010693099999999761, 0.00010669399999999746, 0.00010693099999999761...</msg>
<status status="PASS" starttime="20201030 15:53:22.954" endtime="20201030 15:53:22.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.975" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.973" endtime="20201030 15:53:22.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.981" level="INFO">VALUE: [0.00010669499999999693, 0.00010680600000000096, 0.00010745900000000419, 0.00010748599999999692, 0.00010683300000000062, 0.00010693099999999761, 0.00010669399999999746, 0.00010693099999999761, 0.00010729099999999547, 0.00010693100000000455, 0.00010676399999999531, 0.00010707000000000078, 0.00010704100000000216, 0.00010679100000000191, 0.0001070140000000025, 0.00010733300000000112, 0.00010663900000000559, 0.00010715299999999872, 0.00010736100000000026, 0.00010669499999999693, 0.00010702800000000207, 0.00010679200000000139, 0.00010745899999999725, 0.00010704100000000216, 0.00010736100000000026, 0.00010737499999999983, 0.00010737499999999983, 0.0001066940000000044, 0.00010680600000000096, 0.0001072360000000036, 0.00010690299999999847, 0.00010658399999999985, 0.00010716599999999882, 0.0001065690000000008, 0.0001066940000000044, 0.00010661099999999951, 0.00010666700000000473, 0.00010745799999999778, 0.00010744399999999821, 0.00010659699999999994, 0.00010734700000000069, 0.00010690299999999847, 0.00010736199999999974, 0.00010676400000000225, 0.00010691599999999857, 0.0001072360000000036, 0.00010701399999999556, 0.00010659699999999994, 0.00010713899999999915, 0.00010695900000000369]</msg>
<status status="PASS" starttime="20201030 15:53:22.978" endtime="20201030 15:53:22.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.965" endtime="20201030 15:53:22.984"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.994" endtime="20201030 15:53:23.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.990" endtime="20201030 15:53:23.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.987" endtime="20201030 15:53:23.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.454" endtime="20201030 15:53:23.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.453" endtime="20201030 15:53:23.020"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.045" endtime="20201030 15:53:23.068"></status>
</kw>
<msg timestamp="20201030 15:53:23.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.041" endtime="20201030 15:53:23.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.072" endtime="20201030 15:53:23.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.079" endtime="20201030 15:53:23.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.033" endtime="20201030 15:53:23.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.027" endtime="20201030 15:53:23.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.105" endtime="20201030 15:53:23.476"></status>
</kw>
<msg timestamp="20201030 15:53:23.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043814153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043922167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.102" endtime="20201030 15:53:23.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043814153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043922167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.486" endtime="20201030 15:53:23.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.505" endtime="20201030 15:53:23.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.094" endtime="20201030 15:53:23.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.088" endtime="20201030 15:53:23.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.523" level="INFO">${RESULT} = [{'diff': 0.00010801399999999656}, {'diff': 0.00010852799999999663}, {'diff': 0.00010804100000000316}, {'diff': 0.00010798600000000436}, {'diff': 0.00010824999999999724}, {'diff': 0.000108250000000004...</msg>
<status status="PASS" starttime="20201030 15:53:23.514" endtime="20201030 15:53:23.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.533" level="INFO">${ACCURACY} = {'diff': [0.00010801399999999656, 0.00010852799999999663, 0.00010804100000000316, 0.00010798600000000436, 0.00010824999999999724, 0.00010825000000000418, 0.00010845799999999878, 0.00010825000000000418...</msg>
<status status="PASS" starttime="20201030 15:53:23.526" endtime="20201030 15:53:23.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.544" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.542" endtime="20201030 15:53:23.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.550" level="INFO">VALUE: [0.00010801399999999656, 0.00010852799999999663, 0.00010804100000000316, 0.00010798600000000436, 0.00010824999999999724, 0.00010825000000000418, 0.00010845799999999878, 0.00010825000000000418, 0.0001082360000000046, 0.0001080140000000035, 0.00010782000000000153, 0.00010757000000000128, 0.00010804100000000316, 0.00010837499999999389, 0.00010767999999999889, 0.0001080140000000035, 0.00010802800000000307, 0.00010815300000000666, 0.00010779200000000239, 0.00010782000000000153, 0.00010824999999999724, 0.00010780600000000196, 0.00010837500000000083, 0.00010755500000000223, 0.00010812500000000058, 0.00010791599999999957, 0.00010847199999999835, 0.00010813900000000015, 0.00010826400000000375, 0.00010779199999999545, 0.00010825000000000418, 0.00010769499999999793, 0.00010801299999999708, 0.00010801300000000402, 0.00010775000000000368, 0.00010823599999999767, 0.00010831900000000255, 0.00010812500000000058, 0.00010834700000000169, 0.00010769499999999793, 0.00010836100000000126, 0.00010768099999999836, 0.00010836200000000074, 0.00010780499999999554, 0.000107902, 0.00010827800000000332, 0.00010768000000000583, 0.00010758300000000137, 0.00010790299999999947, 0.0001078889999999999]</msg>
<status status="PASS" starttime="20201030 15:53:23.547" endtime="20201030 15:53:23.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.535" endtime="20201030 15:53:23.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.563" endtime="20201030 15:53:23.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.559" endtime="20201030 15:53:23.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.556" endtime="20201030 15:53:23.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.023" endtime="20201030 15:53:23.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.021" endtime="20201030 15:53:23.589"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.613" endtime="20201030 15:53:23.639"></status>
</kw>
<msg timestamp="20201030 15:53:23.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.610" endtime="20201030 15:53:23.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.642" endtime="20201030 15:53:23.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.649" endtime="20201030 15:53:23.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.602" endtime="20201030 15:53:23.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.596" endtime="20201030 15:53:23.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.674" endtime="20201030 15:53:24.045"></status>
</kw>
<msg timestamp="20201030 15:53:24.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045259431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045368847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.670" endtime="20201030 15:53:24.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045259431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045368847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.055" endtime="20201030 15:53:24.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.074" endtime="20201030 15:53:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.662" endtime="20201030 15:53:24.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.657" endtime="20201030 15:53:24.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.093" level="INFO">${RESULT} = [{'diff': 0.00010941599999999413}, {'diff': 0.00010924999999999824}, {'diff': 0.00010881999999999559}, {'diff': 0.00010936099999999532}, {'diff': 0.00010926399999999781}, {'diff': 0.000109138999999994...</msg>
<status status="PASS" starttime="20201030 15:53:24.083" endtime="20201030 15:53:24.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.103" level="INFO">${ACCURACY} = {'diff': [0.00010941599999999413, 0.00010924999999999824, 0.00010881999999999559, 0.00010936099999999532, 0.00010926399999999781, 0.00010913899999999421, 0.0001093340000000026, 0.00010937500000000183,...</msg>
<status status="PASS" starttime="20201030 15:53:24.095" endtime="20201030 15:53:24.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.115" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.113" endtime="20201030 15:53:24.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.121" level="INFO">VALUE: [0.00010941599999999413, 0.00010924999999999824, 0.00010881999999999559, 0.00010936099999999532, 0.00010926399999999781, 0.00010913899999999421, 0.0001093340000000026, 0.00010937500000000183, 0.00010945799999999978, 0.0001088890000000009, 0.00010867999999999989, 0.00010890300000000047, 0.00010944400000000021, 0.00010949999999999849, 0.00010909700000000244, 0.00010879199999999645, 0.00010868099999999936, 0.00010945899999999925, 0.00010923599999999867, 0.00010945799999999978, 0.00010880499999999654, 0.00010945799999999978, 0.00010947199999999935, 0.00010883399999999516, 0.00010869499999999893, 0.00010944499999999968, 0.00010857000000000228, 0.00010924999999999824, 0.00010887500000000133, 0.00010915300000000072, 0.00010948599999999892, 0.00010925000000000518, 0.00010947199999999935, 0.00010941600000000107, 0.00010891700000000004, 0.00010937500000000183, 0.00010934799999999523, 0.00010937499999999489, 0.00010937500000000183, 0.00010867999999999989, 0.00010856899999999586, 0.00010952800000000457, 0.00010936200000000174, 0.00010948599999999892, 0.00010916700000000029, 0.00010912500000000158, 0.00010934800000000217, 0.00010879100000000391, 0.00010915199999999431, 0.00010936100000000226]</msg>
<status status="PASS" starttime="20201030 15:53:24.118" endtime="20201030 15:53:24.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.105" endtime="20201030 15:53:24.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.137" endtime="20201030 15:53:24.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.130" endtime="20201030 15:53:24.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.128" endtime="20201030 15:53:24.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.592" endtime="20201030 15:53:24.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.590" endtime="20201030 15:53:24.162"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.187" endtime="20201030 15:53:24.210"></status>
</kw>
<msg timestamp="20201030 15:53:24.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.183" endtime="20201030 15:53:24.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.213" endtime="20201030 15:53:24.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.220" endtime="20201030 15:53:24.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.176" endtime="20201030 15:53:24.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.169" endtime="20201030 15:53:24.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.245" endtime="20201030 15:53:24.549"></status>
</kw>
<msg timestamp="20201030 15:53:24.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043740708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043850569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.241" endtime="20201030 15:53:24.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043740708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043850569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.559" endtime="20201030 15:53:24.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.578" endtime="20201030 15:53:24.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.234" endtime="20201030 15:53:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.229" endtime="20201030 15:53:24.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.596" level="INFO">${RESULT} = [{'diff': 0.00010986099999999582}, {'diff': 0.00010981899999999711}, {'diff': 0.00011008299999999693}, {'diff': 0.00011020800000000053}, {'diff': 0.00011019400000000096}, {'diff': 0.000109917000000001...</msg>
<status status="PASS" starttime="20201030 15:53:24.587" endtime="20201030 15:53:24.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.607" level="INFO">${ACCURACY} = {'diff': [0.00010986099999999582, 0.00010981899999999711, 0.00011008299999999693, 0.00011020800000000053, 0.00011019400000000096, 0.00010991700000000104, 0.00011001399999999856, 0.00011015299999999478...</msg>
<status status="PASS" starttime="20201030 15:53:24.598" endtime="20201030 15:53:24.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.618" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.616" endtime="20201030 15:53:24.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.624" level="INFO">VALUE: [0.00010986099999999582, 0.00010981899999999711, 0.00011008299999999693, 0.00011020800000000053, 0.00011019400000000096, 0.00010991700000000104, 0.00011001399999999856, 0.00011015299999999478, 0.00010969499999999993, 0.00011024999999999924, 0.00011045900000000025, 0.00011025000000000618, 0.00010968000000000089, 0.00010958299999999643, 0.00011034699999999675, 0.00011026399999999881, 0.00010969400000000046, 0.00011024999999999924, 0.00010987500000000233, 0.00010958400000000285, 0.00010951299999999858, 0.00010965199999999481, 0.0001099299999999942, 0.00011024999999999924, 0.00010970800000000003, 0.00010980600000000396, 0.00010966700000000079, 0.00011034699999999675, 0.00010958400000000285, 0.00011036100000000326, 0.00010980499999999754, 0.00010958300000000337, 0.00011024999999999924, 0.00010979099999999797, 0.000109596999999996, 0.00011047200000000035, 0.00010969400000000046, 0.00011001399999999856, 0.00010987499999999539, 0.00011013899999999521, 0.000110514000000006, 0.00010991599999999463, 0.00011002699999999865, 0.00011034699999999675, 0.00011044400000000121, 0.00011016700000000129, 0.00011026399999999881, 0.00010957000000000328, 0.00011007000000000378, 0.00011030499999999804]</msg>
<status status="PASS" starttime="20201030 15:53:24.621" endtime="20201030 15:53:24.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.609" endtime="20201030 15:53:24.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.638" endtime="20201030 15:53:24.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.633" endtime="20201030 15:53:24.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.630" endtime="20201030 15:53:24.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.165" endtime="20201030 15:53:24.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.163" endtime="20201030 15:53:24.663"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.688" endtime="20201030 15:53:24.711"></status>
</kw>
<msg timestamp="20201030 15:53:24.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.684" endtime="20201030 15:53:24.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.715" endtime="20201030 15:53:24.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.722" endtime="20201030 15:53:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.677" endtime="20201030 15:53:24.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.670" endtime="20201030 15:53:24.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.747" endtime="20201030 15:53:25.115"></status>
</kw>
<msg timestamp="20201030 15:53:25.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043795667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043906972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.743" endtime="20201030 15:53:25.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043795667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043906972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.125" endtime="20201030 15:53:25.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.145" endtime="20201030 15:53:25.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.735" endtime="20201030 15:53:25.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.730" endtime="20201030 15:53:25.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.164" level="INFO">${RESULT} = [{'diff': 0.00011130499999999904}, {'diff': 0.0001110419999999987}, {'diff': 0.00011137500000000383}, {'diff': 0.00011086200000000324}, {'diff': 0.00011118000000000239}, {'diff': 0.0001112779999999993...</msg>
<status status="PASS" starttime="20201030 15:53:25.155" endtime="20201030 15:53:25.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.176" level="INFO">${ACCURACY} = {'diff': [0.00011130499999999904, 0.0001110419999999987, 0.00011137500000000383, 0.00011086200000000324, 0.00011118000000000239, 0.00011127799999999938, 0.00011111100000000401, 0.00011081900000000505,...</msg>
<status status="PASS" starttime="20201030 15:53:25.166" endtime="20201030 15:53:25.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.187" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.185" endtime="20201030 15:53:25.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.194" level="INFO">VALUE: [0.00011130499999999904, 0.0001110419999999987, 0.00011137500000000383, 0.00011086200000000324, 0.00011118000000000239, 0.00011127799999999938, 0.00011111100000000401, 0.00011081900000000505, 0.00011079099999999897, 0.00011081899999999811, 0.00011144399999999527, 0.00011138899999999646, 0.0001109169999999951, 0.00011079200000000539, 0.00011115300000000272, 0.00011059800000000342, 0.00011126399999999981, 0.00011143000000000264, 0.0001107769999999994, 0.00011091600000000257, 0.00011134699999999775, 0.00011144400000000221, 0.00011058300000000437, 0.00011090300000000247, 0.00011087499999999639, 0.00011056999999999734, 0.00011125000000000024, 0.00011081900000000505, 0.00011131899999999861, 0.00011076399999999931, 0.00011133300000000512, 0.00011101399999999956, 0.00011093100000000161, 0.00011143000000000264, 0.00011079199999999845, 0.00011091700000000204, 0.00011058300000000437, 0.00011104099999999922, 0.00011099999999999999, 0.00011076400000000625, 0.00011136099999999732, 0.00011102799999999913, 0.00011115299999999578, 0.00011091700000000204, 0.00011150000000000049, 0.00011056999999999734, 0.00011147300000000082, 0.00011148600000000092, 0.00011083300000000462, 0.00011136099999999732]</msg>
<status status="PASS" starttime="20201030 15:53:25.190" endtime="20201030 15:53:25.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.178" endtime="20201030 15:53:25.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.209" endtime="20201030 15:53:25.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.205" endtime="20201030 15:53:25.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.202" endtime="20201030 15:53:25.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.666" endtime="20201030 15:53:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.664" endtime="20201030 15:53:25.235"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.259" endtime="20201030 15:53:25.283"></status>
</kw>
<msg timestamp="20201030 15:53:25.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.256" endtime="20201030 15:53:25.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.287" endtime="20201030 15:53:25.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.294" endtime="20201030 15:53:25.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.248" endtime="20201030 15:53:25.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.242" endtime="20201030 15:53:25.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.319" endtime="20201030 15:53:25.679"></status>
</kw>
<msg timestamp="20201030 15:53:25.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043435014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.315" endtime="20201030 15:53:25.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043435014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.688" endtime="20201030 15:53:25.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.708" endtime="20201030 15:53:25.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.307" endtime="20201030 15:53:25.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.302" endtime="20201030 15:53:25.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.726" level="INFO">${RESULT} = [{'diff': 0.00011175000000000074}, {'diff': 0.00011212499999999764}, {'diff': 0.00011230599999999952}, {'diff': 0.0001123749999999979}, {'diff': 0.00011201399999999362}, {'diff': 0.0001121659999999968...</msg>
<status status="PASS" starttime="20201030 15:53:25.717" endtime="20201030 15:53:25.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.736" level="INFO">${ACCURACY} = {'diff': [0.00011175000000000074, 0.00011212499999999764, 0.00011230599999999952, 0.0001123749999999979, 0.00011201399999999362, 0.00011216599999999688, 0.00011191599999999663, 0.0001124299999999967, ...</msg>
<status status="PASS" starttime="20201030 15:53:25.728" endtime="20201030 15:53:25.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.747" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.745" endtime="20201030 15:53:25.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.753" level="INFO">VALUE: [0.00011175000000000074, 0.00011212499999999764, 0.00011230599999999952, 0.0001123749999999979, 0.00011201399999999362, 0.00011216599999999688, 0.00011191599999999663, 0.0001124299999999967, 0.00011240300000000397, 0.00011237500000000483, 0.00011247200000000235, 0.00011202800000000013, 0.00011202800000000013, 0.00011158400000000485, 0.00011244500000000268, 0.00011179099999999997, 0.00011211099999999807, 0.00011158300000000537, 0.00011245800000000278, 0.00011213900000000415, 0.00011251400000000106, 0.00011180599999999902, 0.00011198600000000142, 0.0001122499999999943, 0.00011190199999999706, 0.00011206899999999936, 0.00011243100000000311, 0.00011212500000000458, 0.00011191700000000304, 0.00011223599999999473, 0.00011215299999999678, 0.00011159800000000442, 0.00011191700000000304, 0.00011201300000000108, 0.00011152700000000015, 0.00011158299999999843, 0.00011248600000000192, 0.0001119169999999961, 0.00011193100000000261, 0.00011169500000000193, 0.00011157000000000528, 0.00011245900000000225, 0.00011215299999999678, 0.00011226300000000133, 0.00011215299999999678, 0.00011247200000000235, 0.00011234699999999875, 0.00011218100000000286, 0.00011193100000000261, 0.00011194500000000218]</msg>
<status status="PASS" starttime="20201030 15:53:25.750" endtime="20201030 15:53:25.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.737" endtime="20201030 15:53:25.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.766" endtime="20201030 15:53:25.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.761" endtime="20201030 15:53:25.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.759" endtime="20201030 15:53:25.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.237" endtime="20201030 15:53:25.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.236" endtime="20201030 15:53:25.792"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.816" endtime="20201030 15:53:25.846"></status>
</kw>
<msg timestamp="20201030 15:53:25.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.813" endtime="20201030 15:53:25.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.849" endtime="20201030 15:53:25.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.856" endtime="20201030 15:53:25.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.805" endtime="20201030 15:53:25.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.799" endtime="20201030 15:53:25.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.881" endtime="20201030 15:53:26.235"></status>
</kw>
<msg timestamp="20201030 15:53:26.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049306236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049418847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.878" endtime="20201030 15:53:26.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049306236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049418847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.245" endtime="20201030 15:53:26.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.264" endtime="20201030 15:53:26.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.870" endtime="20201030 15:53:26.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.865" endtime="20201030 15:53:26.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.281" level="INFO">${RESULT} = [{'diff': 0.00011261099999999857}, {'diff': 0.00011315299999999778}, {'diff': 0.00011347199999999641}, {'diff': 0.00011280600000000002}, {'diff': 0.00011302800000000113}, {'diff': 0.000113487000000002...</msg>
<status status="PASS" starttime="20201030 15:53:26.272" endtime="20201030 15:53:26.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.291" level="INFO">${ACCURACY} = {'diff': [0.00011261099999999857, 0.00011315299999999778, 0.00011347199999999641, 0.00011280600000000002, 0.00011302800000000113, 0.00011348700000000239, 0.00011345799999999684, 0.000112596999999999, ...</msg>
<status status="PASS" starttime="20201030 15:53:26.283" endtime="20201030 15:53:26.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.302" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.300" endtime="20201030 15:53:26.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.307" level="INFO">VALUE: [0.00011261099999999857, 0.00011315299999999778, 0.00011347199999999641, 0.00011280600000000002, 0.00011302800000000113, 0.00011348700000000239, 0.00011345799999999684, 0.000112596999999999, 0.00011288899999999796, 0.00011270800000000303, 0.00011333300000000018, 0.00011323599999999573, 0.00011345799999999684, 0.00011290299999999753, 0.0001130420000000007, 0.0001132770000000019, 0.00011312499999999864, 0.00011302699999999472, 0.00011270799999999609, 0.00011295800000000328, 0.00011261099999999857, 0.00011269399999999652, 0.00011347199999999641, 0.0001130969999999995, 0.00011347299999999588, 0.00011333399999999966, 0.00011279200000000045, 0.00011267999999999695, 0.00011302699999999472, 0.00011291600000000457, 0.00011280500000000054, 0.00011270800000000303, 0.00011280600000000002, 0.0001130969999999995, 0.00011279200000000045, 0.00011258299999999943, 0.00011291599999999763, 0.00011331900000000061, 0.00011258299999999943, 0.00011344399999999727, 0.00011279200000000045, 0.00011312499999999864, 0.00011329200000000095, 0.00011334699999999975, 0.00011290300000000447, 0.00011263900000000465, 0.00011276400000000131, 0.00011258299999999943, 0.00011301400000000156, 0.00011280600000000002]</msg>
<status status="PASS" starttime="20201030 15:53:26.304" endtime="20201030 15:53:26.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.293" endtime="20201030 15:53:26.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.322" endtime="20201030 15:53:26.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.316" endtime="20201030 15:53:26.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.313" endtime="20201030 15:53:26.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.794" endtime="20201030 15:53:26.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.793" endtime="20201030 15:53:26.347"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.369" endtime="20201030 15:53:26.393"></status>
</kw>
<msg timestamp="20201030 15:53:26.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.366" endtime="20201030 15:53:26.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.396" endtime="20201030 15:53:26.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.403" endtime="20201030 15:53:26.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.359" endtime="20201030 15:53:26.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.353" endtime="20201030 15:53:26.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.428" endtime="20201030 15:53:26.765"></status>
</kw>
<msg timestamp="20201030 15:53:26.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.424" endtime="20201030 15:53:26.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041387153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041501208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.775" endtime="20201030 15:53:26.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.793" endtime="20201030 15:53:26.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.417" endtime="20201030 15:53:26.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.412" endtime="20201030 15:53:26.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.811" level="INFO">${RESULT} = [{'diff': 0.00011405499999999485}, {'diff': 0.00011358300000000043}, {'diff': 0.00011420799999999759}, {'diff': 0.00011375000000000274}, {'diff': 0.00011402800000000213}, {'diff': 0.000113652999999998...</msg>
<status status="PASS" starttime="20201030 15:53:26.802" endtime="20201030 15:53:26.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.821" level="INFO">${ACCURACY} = {'diff': [0.00011405499999999485, 0.00011358300000000043, 0.00011420799999999759, 0.00011375000000000274, 0.00011402800000000213, 0.00011365299999999828, 0.00011400000000000299, 0.00011368099999999742...</msg>
<status status="PASS" starttime="20201030 15:53:26.813" endtime="20201030 15:53:26.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.832" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.830" endtime="20201030 15:53:26.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.838" level="INFO">VALUE: [0.00011405499999999485, 0.00011358300000000043, 0.00011420799999999759, 0.00011375000000000274, 0.00011402800000000213, 0.00011365299999999828, 0.00011400000000000299, 0.00011368099999999742, 0.00011429200000000195, 0.00011412499999999964, 0.00011393000000000514, 0.00011401400000000256, 0.00011358300000000043, 0.00011356900000000086, 0.00011419400000000496, 0.0001143749999999999, 0.00011380600000000102, 0.00011358399999999991, 0.00011436100000000032, 0.00011369400000000446, 0.00011380500000000154, 0.00011411100000000007, 0.00011422199999999716, 0.00011380600000000102, 0.00011400000000000299, 0.00011369500000000393, 0.00011358399999999991, 0.00011445899999999731, 0.00011445800000000478, 0.00011369399999999752, 0.00011425000000000324, 0.00011413900000000615, 0.0001135420000000012, 0.00011380599999999408, 0.00011406900000000136, 0.00011429199999999501, 0.00011412499999999964, 0.00011412499999999964, 0.00011401399999999562, 0.00011379099999999504, 0.00011369399999999752, 0.00011358300000000043, 0.00011447199999999741, 0.00011429199999999501, 0.0001139169999999981, 0.00011434800000000023, 0.00011415199999999931, 0.00011447200000000435, 0.00011447199999999741, 0.00011356900000000086]</msg>
<status status="PASS" starttime="20201030 15:53:26.834" endtime="20201030 15:53:26.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.823" endtime="20201030 15:53:26.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.850" endtime="20201030 15:53:26.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.846" endtime="20201030 15:53:26.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.843" endtime="20201030 15:53:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.349" endtime="20201030 15:53:26.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.348" endtime="20201030 15:53:26.875"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.898" endtime="20201030 15:53:26.921"></status>
</kw>
<msg timestamp="20201030 15:53:26.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.895" endtime="20201030 15:53:26.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.924" endtime="20201030 15:53:26.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.930" endtime="20201030 15:53:26.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.887" endtime="20201030 15:53:26.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.882" endtime="20201030 15:53:26.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.954" endtime="20201030 15:53:27.297"></status>
</kw>
<msg timestamp="20201030 15:53:27.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041330431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041445056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.951" endtime="20201030 15:53:27.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041330431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041445056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.307" endtime="20201030 15:53:27.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.325" endtime="20201030 15:53:27.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.943" endtime="20201030 15:53:27.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.939" endtime="20201030 15:53:27.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.343" level="INFO">${RESULT} = [{'diff': 0.00011462500000000014}, {'diff': 0.00011458300000000143}, {'diff': 0.00011491599999999963}, {'diff': 0.00011470799999999809}, {'diff': 0.00011458300000000143}, {'diff': 0.000114999999999997...</msg>
<status status="PASS" starttime="20201030 15:53:27.334" endtime="20201030 15:53:27.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.354" level="INFO">${ACCURACY} = {'diff': [0.00011462500000000014, 0.00011458300000000143, 0.00011491599999999963, 0.00011470799999999809, 0.00011458300000000143, 0.00011499999999999705, 0.00011538900000000046, 0.00011480600000000202...</msg>
<status status="PASS" starttime="20201030 15:53:27.345" endtime="20201030 15:53:27.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.364" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.362" endtime="20201030 15:53:27.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.370" level="INFO">VALUE: [0.00011462500000000014, 0.00011458300000000143, 0.00011491599999999963, 0.00011470799999999809, 0.00011458300000000143, 0.00011499999999999705, 0.00011538900000000046, 0.00011480600000000202, 0.00011552800000000363, 0.00011545899999999831, 0.00011547300000000482, 0.00011544399999999927, 0.00011545799999999884, 0.0001148049999999956, 0.00011547199999999841, 0.00011461100000000057, 0.00011548600000000492, 0.00011461200000000005, 0.00011469499999999799, 0.00011513900000000021, 0.00011512500000000064, 0.0001153750000000009, 0.00011491599999999963, 0.00011508300000000193, 0.00011499999999999705, 0.00011465299999999928, 0.00011490299999999953, 0.00011457000000000134, 0.0001145699999999944, 0.00011513800000000074, 0.00011533300000000218, 0.0001152499999999973, 0.00011467999999999895, 0.0001153750000000009, 0.00011554100000000372, 0.00011470899999999756, 0.00011536100000000132, 0.00011455600000000177, 0.00011511100000000107, 0.00011502700000000365, 0.00011498600000000442, 0.00011462500000000014, 0.00011480500000000254, 0.00011513900000000021, 0.00011513900000000021, 0.00011490299999999953, 0.0001151249999999937, 0.00011547299999999788, 0.0001149169999999991, 0.00011534699999999481]</msg>
<status status="PASS" starttime="20201030 15:53:27.367" endtime="20201030 15:53:27.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.355" endtime="20201030 15:53:27.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.382" endtime="20201030 15:53:27.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.378" endtime="20201030 15:53:27.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.376" endtime="20201030 15:53:27.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.877" endtime="20201030 15:53:27.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.876" endtime="20201030 15:53:27.408"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.430" endtime="20201030 15:53:27.454"></status>
</kw>
<msg timestamp="20201030 15:53:27.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.427" endtime="20201030 15:53:27.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.458" endtime="20201030 15:53:27.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.464" endtime="20201030 15:53:27.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.420" endtime="20201030 15:53:27.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.414" endtime="20201030 15:53:27.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.488" endtime="20201030 15:53:27.866"></status>
</kw>
<msg timestamp="20201030 15:53:27.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041796403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:27.484" endtime="20201030 15:53:27.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041796403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:27.876" endtime="20201030 15:53:27.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.895" endtime="20201030 15:53:27.899"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.477" endtime="20201030 15:53:27.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.472" endtime="20201030 15:53:27.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.913" level="INFO">${RESULT} = [{'diff': 0.00011590300000000053}, {'diff': 0.00011626399999999787}, {'diff': 0.00011648599999999898}, {'diff': 0.00011591600000000063}, {'diff': 0.00011643100000000017}, {'diff': 0.000115693999999999...</msg>
<status status="PASS" starttime="20201030 15:53:27.904" endtime="20201030 15:53:27.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.923" level="INFO">${ACCURACY} = {'diff': [0.00011590300000000053, 0.00011626399999999787, 0.00011648599999999898, 0.00011591600000000063, 0.00011643100000000017, 0.00011569399999999952, 0.00011633300000000318, 0.00011612500000000164...</msg>
<status status="PASS" starttime="20201030 15:53:27.915" endtime="20201030 15:53:27.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.934" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.932" endtime="20201030 15:53:27.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.940" level="INFO">VALUE: [0.00011590300000000053, 0.00011626399999999787, 0.00011648599999999898, 0.00011591600000000063, 0.00011643100000000017, 0.00011569399999999952, 0.00011633300000000318, 0.00011612500000000164, 0.00011645799999999984, 0.00011568099999999942, 0.00011559699999999506, 0.00011601400000000456, 0.00011579200000000345, 0.00011597199999999891, 0.00011636100000000232, 0.00011612500000000164, 0.00011615300000000078, 0.00011569399999999952, 0.0001159170000000001, 0.0001162499999999983, 0.00011615300000000078, 0.00011634800000000223, 0.00011580500000000354, 0.000115597000000002, 0.0001162499999999983, 0.00011567999999999995, 0.00011552799999999669, 0.0001159029999999936, 0.00011613900000000121, 0.00011612500000000164, 0.00011557000000000234, 0.00011612500000000164, 0.00011569399999999952, 0.00011647199999999941, 0.00011554199999999626, 0.00011593099999999967, 0.00011613900000000121, 0.00011593099999999967, 0.00011631999999999615, 0.00011558399999999497, 0.00011615200000000131, 0.0001158049999999966, 0.00011558300000000243, 0.0001159300000000002, 0.00011570799999999909, 0.0001163750000000019, 0.0001162499999999983, 0.00011602800000000413, 0.00011594399999999977, 0.00011644499999999974]</msg>
<status status="PASS" starttime="20201030 15:53:27.937" endtime="20201030 15:53:27.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.925" endtime="20201030 15:53:27.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.953" endtime="20201030 15:53:27.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.949" endtime="20201030 15:53:27.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.946" endtime="20201030 15:53:27.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.410" endtime="20201030 15:53:27.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.409" endtime="20201030 15:53:27.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.109" endtime="20201030 15:53:27.979"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:34.979" endtime="20201030 15:53:27.981" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:38.342" endtime="20201030 15:53:27.991"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.130" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:28.146" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:28.964" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:28.126" endtime="20201030 15:53:28.966"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.972" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:53:28.968" endtime="20201030 15:53:31.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.124" endtime="20201030 15:53:31.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.979" endtime="20201030 15:53:32.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.976" endtime="20201030 15:53:32.235"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.249" endtime="20201030 15:53:32.263"></status>
</kw>
<msg timestamp="20201030 15:53:32.264" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.248" endtime="20201030 15:53:32.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.265" endtime="20201030 15:53:32.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.271" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:32.269" endtime="20201030 15:53:32.271"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:32.245" endtime="20201030 15:53:32.272"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:32.242" endtime="20201030 15:53:32.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.241" endtime="20201030 15:53:32.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:32.278" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:32.277" endtime="20201030 15:53:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.274" endtime="20201030 15:53:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.240" endtime="20201030 15:53:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.239" endtime="20201030 15:53:32.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.280" endtime="20201030 15:53:32.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.238" endtime="20201030 15:53:32.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.283" endtime="20201030 15:53:32.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.236" endtime="20201030 15:53:32.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.121" endtime="20201030 15:53:32.287"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:32.294" endtime="20201030 15:53:32.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.292" endtime="20201030 15:53:32.314"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.330" endtime="20201030 15:53:32.344"></status>
</kw>
<msg timestamp="20201030 15:53:32.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.328" endtime="20201030 15:53:32.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.348" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.346" endtime="20201030 15:53:32.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.351" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:32.349" endtime="20201030 15:53:32.351"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:32.325" endtime="20201030 15:53:32.352"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:32.322" endtime="20201030 15:53:32.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.321" endtime="20201030 15:53:32.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:32.357" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:32.357" endtime="20201030 15:53:32.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.354" endtime="20201030 15:53:32.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.320" endtime="20201030 15:53:32.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.319" endtime="20201030 15:53:32.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.359" endtime="20201030 15:53:32.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.317" endtime="20201030 15:53:32.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.315" endtime="20201030 15:53:32.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.290" endtime="20201030 15:53:32.363"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.376" endtime="20201030 15:53:38.499"></status>
</kw>
<msg timestamp="20201030 15:53:38.500" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.373" endtime="20201030 15:53:38.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.507" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.502" endtime="20201030 15:53:38.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.509" endtime="20201030 15:53:38.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.369" endtime="20201030 15:53:38.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.366" endtime="20201030 15:53:38.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.522" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:53:38.518" endtime="20201030 15:53:38.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.534" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:38.532" endtime="20201030 15:53:38.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.539" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:38.537" endtime="20201030 15:53:38.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.525" endtime="20201030 15:53:38.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.552" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:38.550" endtime="20201030 15:53:38.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.558" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:38.555" endtime="20201030 15:53:38.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.543" endtime="20201030 15:53:38.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.571" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:38.568" endtime="20201030 15:53:38.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.576" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:38.574" endtime="20201030 15:53:38.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.562" endtime="20201030 15:53:38.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.596" endtime="20201030 15:53:38.987"></status>
</kw>
<msg timestamp="20201030 15:53:38.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0727335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172761931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:38.593" endtime="20201030 15:53:38.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0727335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172761931, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:38.996" endtime="20201030 15:53:39.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.016" endtime="20201030 15:53:39.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.585" endtime="20201030 15:53:39.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.580" endtime="20201030 15:53:39.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:39.034" level="INFO">${FILTERED} = [{'diff': 0.100028431}, {'diff': 0.10000820900000001}, {'diff': 0.10001027800000001}, {'diff': 0.10001027700000004}, {'diff': 0.10001027800000001}, {'diff': 0.10001029100000003}, {'diff': 0.1000102640...</msg>
<status status="PASS" starttime="20201030 15:53:39.025" endtime="20201030 15:53:39.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:39.045" level="INFO">${RESULT} = {'diff': [0.100028431, 0.10000820900000001, 0.10001027800000001, 0.10001027700000004, 0.10001027800000001, 0.10001029100000003, 0.10001026400000002, 0.1000103200000001, 0.10001037499999998, 0.10001033...</msg>
<status status="PASS" starttime="20201030 15:53:39.036" endtime="20201030 15:53:39.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.056" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:39.053" endtime="20201030 15:53:39.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.062" level="INFO">VALUE: [0.100028431, 0.10000820900000001, 0.10001027800000001, 0.10001027700000004, 0.10001027800000001, 0.10001029100000003, 0.10001026400000002, 0.1000103200000001, 0.10001037499999998, 0.10001033400000003, 0.100010347, 0.10001033299999995, 0.10001031999999999, 0.100010347, 0.10001033299999995, 0.10001033299999995, 0.10001029200000011, 0.10001034800000008, 0.10001030600000016, 0.10001031900000013, 0.10001033299999973, 0.10001030500000008, 0.100010347, 0.10001030500000008, 0.10001030600000016, 0.10001033399999981, 0.10001030600000016, 0.10001031999999999, 0.100010347, 0.10001030600000016, 0.10001033300000017, 0.1000102909999998, 0.1000103189999999, 0.10001031999999999, 0.10001031999999999, 0.10001033399999981, 0.10001030599999972, 0.10001030500000008, 0.1000103189999999, 0.10001037500000054, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.1000108329999998, 0.1000103189999999, 0.10001027800000006, 0.10001027800000006]</msg>
<status status="PASS" starttime="20201030 15:53:39.059" endtime="20201030 15:53:39.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.047" endtime="20201030 15:53:39.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.095" endtime="20201030 15:53:39.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.080" endtime="20201030 15:53:39.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.071" endtime="20201030 15:53:39.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.364" endtime="20201030 15:53:39.140"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:32.287" endtime="20201030 15:53:39.145" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.169" endtime="20201030 15:53:39.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.164" endtime="20201030 15:53:39.193"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.229" endtime="20201030 15:53:39.248"></status>
</kw>
<msg timestamp="20201030 15:53:39.249" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.225" endtime="20201030 15:53:39.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.256" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.251" endtime="20201030 15:53:39.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.263" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:39.258" endtime="20201030 15:53:39.264"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:39.217" endtime="20201030 15:53:39.266"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:39.210" endtime="20201030 15:53:39.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.207" endtime="20201030 15:53:39.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:39.278" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:39.277" endtime="20201030 15:53:39.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.270" endtime="20201030 15:53:39.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.205" endtime="20201030 15:53:39.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.203" endtime="20201030 15:53:39.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.282" endtime="20201030 15:53:39.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.199" endtime="20201030 15:53:39.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.194" endtime="20201030 15:53:39.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.161" endtime="20201030 15:53:39.290"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.312" endtime="20201030 15:53:45.437"></status>
</kw>
<msg timestamp="20201030 15:53:45.438" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.308" endtime="20201030 15:53:45.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.445" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.441" endtime="20201030 15:53:45.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.447" endtime="20201030 15:53:45.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.301" endtime="20201030 15:53:45.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.295" endtime="20201030 15:53:45.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:45.461" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:53:45.457" endtime="20201030 15:53:45.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.472" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:45.469" endtime="20201030 15:53:45.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.477" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:45.474" endtime="20201030 15:53:45.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.463" endtime="20201030 15:53:45.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.489" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:45.487" endtime="20201030 15:53:45.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.494" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:45.492" endtime="20201030 15:53:45.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.480" endtime="20201030 15:53:45.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.507" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:45.504" endtime="20201030 15:53:45.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.511" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:53:45.509" endtime="20201030 15:53:45.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.498" endtime="20201030 15:53:45.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.531" endtime="20201030 15:53:45.913"></status>
</kw>
<msg timestamp="20201030 15:53:45.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134520597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234603417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.528" endtime="20201030 15:53:45.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134520597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234603417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.922" endtime="20201030 15:53:45.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.941" endtime="20201030 15:53:45.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.520" endtime="20201030 15:53:45.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.515" endtime="20201030 15:53:45.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:45.959" level="INFO">${FILTERED} = [{'diff': 0.10008282000000002}, {'diff': 5.419999999922709e-07}, {'diff': 0.10001079200000002}, {'diff': 0.100010292}, {'diff': 0.10001030499999997}, {'diff': 0.10001027800000006}, {'diff': 0.10001033...</msg>
<status status="PASS" starttime="20201030 15:53:45.950" endtime="20201030 15:53:45.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:45.970" level="INFO">${RESULT} = {'diff': [0.10008282000000002, 5.419999999922709e-07, 0.10001079200000002, 0.100010292, 0.10001030499999997, 0.10001027800000006, 0.10001033400000003, 5.419999999922709e-07, 5.410000001315751e-07, 5.4...</msg>
<status status="PASS" starttime="20201030 15:53:45.961" endtime="20201030 15:53:45.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.981" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:45.979" endtime="20201030 15:53:45.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.987" level="INFO">VALUE: [0.10008282000000002, 5.419999999922709e-07, 0.10001079200000002, 0.100010292, 0.10001030499999997, 0.10001027800000006, 0.10001033400000003, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10001076400000031, 0.10001033399999937, 0.1000102639999998, 0.10001029199999945, 0.10001030599999972, 0.10001029199999945, 0.10001029100000025, 0.1000103060000006, 0.10001031999999999, 5.420000004363601e-07, 0.10001073599999977]</msg>
<status status="PASS" starttime="20201030 15:53:45.984" endtime="20201030 15:53:45.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.972" endtime="20201030 15:53:45.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.000" endtime="20201030 15:53:46.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.996" endtime="20201030 15:53:46.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.993" endtime="20201030 15:53:46.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.291" endtime="20201030 15:53:46.026"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:39.153" endtime="20201030 15:53:46.028" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.045" endtime="20201030 15:53:46.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.041" endtime="20201030 15:53:46.070"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.109" endtime="20201030 15:53:46.129"></status>
</kw>
<msg timestamp="20201030 15:53:46.130" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.106" endtime="20201030 15:53:46.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.137" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.132" endtime="20201030 15:53:46.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.143" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:46.139" endtime="20201030 15:53:46.144"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:46.095" endtime="20201030 15:53:46.146"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:46.088" endtime="20201030 15:53:46.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.085" endtime="20201030 15:53:46.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:46.157" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:46.156" endtime="20201030 15:53:46.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.150" endtime="20201030 15:53:46.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.083" endtime="20201030 15:53:46.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.081" endtime="20201030 15:53:46.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.162" endtime="20201030 15:53:46.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.077" endtime="20201030 15:53:46.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.072" endtime="20201030 15:53:46.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.038" endtime="20201030 15:53:46.170"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.193" endtime="20201030 15:53:52.317"></status>
</kw>
<msg timestamp="20201030 15:53:52.318" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.189" endtime="20201030 15:53:52.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.324" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:52.320" endtime="20201030 15:53:52.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.327" endtime="20201030 15:53:52.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.182" endtime="20201030 15:53:52.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.176" endtime="20201030 15:53:52.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:52.340" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:53:52.336" endtime="20201030 15:53:52.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.357" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:52.352" endtime="20201030 15:53:52.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.362" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:52.360" endtime="20201030 15:53:52.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.342" endtime="20201030 15:53:52.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.380" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:52.377" endtime="20201030 15:53:52.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.387" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:52.383" endtime="20201030 15:53:52.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.369" endtime="20201030 15:53:52.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.404" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:52.400" endtime="20201030 15:53:52.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.408" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:53:52.407" endtime="20201030 15:53:52.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.392" endtime="20201030 15:53:52.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.420" endtime="20201030 15:53:52.788"></status>
</kw>
<msg timestamp="20201030 15:53:52.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138186861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.238337403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:52.418" endtime="20201030 15:53:52.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138186861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.238337403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:52.798" endtime="20201030 15:53:52.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.816" endtime="20201030 15:53:52.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.415" endtime="20201030 15:53:52.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.412" endtime="20201030 15:53:52.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:52.834" level="INFO">${FILTERED} = [{'diff': 0.10015054200000001}, {'diff': 0.09989354200000003}, {'diff': 0.10001031899999996}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:53:52.825" endtime="20201030 15:53:52.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:52.844" level="INFO">${RESULT} = {'diff': [0.10015054200000001, 0.09989354200000003, 0.10001031899999996, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 0.1000107779...</msg>
<status status="PASS" starttime="20201030 15:53:52.837" endtime="20201030 15:53:52.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.854" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:52.852" endtime="20201030 15:53:52.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.860" level="INFO">VALUE: [0.10015054200000001, 0.09989354200000003, 0.10001031899999996, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 0.10001077799999991, 0.10001029199999989, 0.10001026300000015, 0.10001027799999984, 0.10001029100000003, 0.10001026400000002, 0.10001027799999984, 0.10001029200000011, 0.10001026400000002, 0.10001029100000003, 0.100010347, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001084700000007, 0.10001033299999973, 0.100010347, 0.10001033399999981, 0.10001034800000008, 0.10001033400000026, 0.10001034800000008, 0.10001033399999981, 0.10001034699999956, 0.10001033300000017, 0.10001033300000017, 0.10001025000000041, 0.10001030500000052, 0.10001027800000006, 0.10001027800000006, 0.10001029200000033, 0.10001029199999945, 0.10001027699999998, 0.1000103060000006, 0.10001027800000006, 0.10001030499999963]</msg>
<status status="PASS" starttime="20201030 15:53:52.857" endtime="20201030 15:53:52.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.846" endtime="20201030 15:53:52.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:52.873" endtime="20201030 15:53:52.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.869" endtime="20201030 15:53:52.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.866" endtime="20201030 15:53:52.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.172" endtime="20201030 15:53:52.899"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:46.032" endtime="20201030 15:53:52.900" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:52.917" endtime="20201030 15:53:52.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.913" endtime="20201030 15:53:52.941"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.979" endtime="20201030 15:53:52.998"></status>
</kw>
<msg timestamp="20201030 15:53:52.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:52.975" endtime="20201030 15:53:52.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.001" endtime="20201030 15:53:53.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.013" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:53.009" endtime="20201030 15:53:53.014"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:52.968" endtime="20201030 15:53:53.016"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:52.960" endtime="20201030 15:53:53.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.958" endtime="20201030 15:53:53.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:53.028" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:53.026" endtime="20201030 15:53:53.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.021" endtime="20201030 15:53:53.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.956" endtime="20201030 15:53:53.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.952" endtime="20201030 15:53:53.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.032" endtime="20201030 15:53:53.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.948" endtime="20201030 15:53:53.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.943" endtime="20201030 15:53:53.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.911" endtime="20201030 15:53:53.040"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.063" endtime="20201030 15:53:59.189"></status>
</kw>
<msg timestamp="20201030 15:53:59.190" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.059" endtime="20201030 15:53:59.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.192" endtime="20201030 15:53:59.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.200" endtime="20201030 15:53:59.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.052" endtime="20201030 15:53:59.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.046" endtime="20201030 15:53:59.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.213" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:53:59.209" endtime="20201030 15:53:59.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.224" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:59.221" endtime="20201030 15:53:59.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.229" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:59.227" endtime="20201030 15:53:59.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.215" endtime="20201030 15:53:59.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.243" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:59.240" endtime="20201030 15:53:59.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.250" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:59.245" endtime="20201030 15:53:59.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.233" endtime="20201030 15:53:59.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.263" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:59.261" endtime="20201030 15:53:59.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.268" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:53:59.266" endtime="20201030 15:53:59.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.254" endtime="20201030 15:53:59.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.288" endtime="20201030 15:53:59.658"></status>
</kw>
<msg timestamp="20201030 15:53:59.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137389917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.237652806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.285" endtime="20201030 15:53:59.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137389917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.237652806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.668" endtime="20201030 15:53:59.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.687" endtime="20201030 15:53:59.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.277" endtime="20201030 15:53:59.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.272" endtime="20201030 15:53:59.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:59.705" level="INFO">${FILTERED} = [{'diff': 0.100262889}, {'diff': 0.100054153}, {'diff': 0.09974261100000004}, {'diff': 0.100009334}, {'diff': 0.10001030599999994}, {'diff': 0.1000103189999999}, {'diff': 0.10001033300000006}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:53:59.696" endtime="20201030 15:53:59.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.716" level="INFO">${RESULT} = {'diff': [0.100262889, 0.100054153, 0.09974261100000004, 0.100009334, 0.10001030599999994, 0.1000103189999999, 0.10001033300000006, 0.10001030499999997, 0.10001031900000013, 0.10001031999999999, 0.100...</msg>
<status status="PASS" starttime="20201030 15:53:59.707" endtime="20201030 15:53:59.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.736" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:59.730" endtime="20201030 15:53:59.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.743" level="INFO">VALUE: [0.100262889, 0.100054153, 0.09974261100000004, 0.100009334, 0.10001030599999994, 0.1000103189999999, 0.10001033300000006, 0.10001030499999997, 0.10001031900000013, 0.10001031999999999, 0.10001033400000003, 0.10001030600000016, 0.10001033400000003, 0.10001033400000003, 0.10001031999999999, 0.10001033299999995, 0.10001029100000003, 0.1000103189999999, 0.1000103189999999, 0.10001031999999999, 0.10001033399999981, 0.10001031999999999, 0.10001032000000043, 0.10001034800000008, 0.10001029199999989, 0.1000103189999999, 0.100010347, 0.10001033300000017, 0.1000102909999998, 0.1000103750000001, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001077799999969, 0.1000102639999998, 0.10001027799999918, 0.10001029100000025, 0.10001033300000017, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 15:53:59.739" endtime="20201030 15:53:59.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.722" endtime="20201030 15:53:59.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.760" endtime="20201030 15:53:59.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.755" endtime="20201030 15:53:59.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.751" endtime="20201030 15:53:59.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.041" endtime="20201030 15:53:59.785"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:52.905" endtime="20201030 15:53:59.787" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.803" endtime="20201030 15:53:59.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.799" endtime="20201030 15:53:59.826"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.859" endtime="20201030 15:53:59.877"></status>
</kw>
<msg timestamp="20201030 15:53:59.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.856" endtime="20201030 15:53:59.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.884" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.880" endtime="20201030 15:53:59.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.891" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:59.887" endtime="20201030 15:53:59.891"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:59.848" endtime="20201030 15:53:59.893"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:59.842" endtime="20201030 15:53:59.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.839" endtime="20201030 15:53:59.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:59.904" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:59.902" endtime="20201030 15:53:59.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.898" endtime="20201030 15:53:59.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.838" endtime="20201030 15:53:59.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.836" endtime="20201030 15:53:59.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.907" endtime="20201030 15:53:59.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.832" endtime="20201030 15:53:59.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.828" endtime="20201030 15:53:59.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.797" endtime="20201030 15:53:59.914"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.940" endtime="20201030 15:54:06.066"></status>
</kw>
<msg timestamp="20201030 15:54:06.068" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.933" endtime="20201030 15:54:06.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.075" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.071" endtime="20201030 15:54:06.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.078" endtime="20201030 15:54:06.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.924" endtime="20201030 15:54:06.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.919" endtime="20201030 15:54:06.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.090" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:54:06.086" endtime="20201030 15:54:06.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.101" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:06.098" endtime="20201030 15:54:06.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.105" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:06.103" endtime="20201030 15:54:06.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.092" endtime="20201030 15:54:06.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.118" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:06.115" endtime="20201030 15:54:06.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.124" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:06.121" endtime="20201030 15:54:06.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.109" endtime="20201030 15:54:06.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.139" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:06.137" endtime="20201030 15:54:06.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.144" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:54:06.141" endtime="20201030 15:54:06.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.128" endtime="20201030 15:54:06.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.164" endtime="20201030 15:54:06.529"></status>
</kw>
<msg timestamp="20201030 15:54:06.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128830889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229233986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.160" endtime="20201030 15:54:06.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128830889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.229233986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.538" endtime="20201030 15:54:06.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.556" endtime="20201030 15:54:06.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.152" endtime="20201030 15:54:06.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.147" endtime="20201030 15:54:06.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:06.573" level="INFO">${FILTERED} = [{'diff': 0.100403097}, {'diff': 0.10006490299999998}, {'diff': 0.09959502800000003}, {'diff': 0.10001030499999997}, {'diff': 0.100010292}, {'diff': 0.10001030600000005}, {'diff': 0.10001030600000005}...</msg>
<status status="PASS" starttime="20201030 15:54:06.564" endtime="20201030 15:54:06.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.583" level="INFO">${RESULT} = {'diff': [0.100403097, 0.10006490299999998, 0.09959502800000003, 0.10001030499999997, 0.100010292, 0.10001030600000005, 0.10001030600000005, 0.10001029100000003, 0.10001030600000005, 0.100010305999999...</msg>
<status status="PASS" starttime="20201030 15:54:06.575" endtime="20201030 15:54:06.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.593" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:06.591" endtime="20201030 15:54:06.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.599" level="INFO">VALUE: [0.100403097, 0.10006490299999998, 0.09959502800000003, 0.10001030499999997, 0.100010292, 0.10001030600000005, 0.10001030600000005, 0.10001029100000003, 0.10001030600000005, 0.10001030599999994, 0.10001031999999999, 0.10001027699999998, 0.10001030599999994, 0.10001029199999989, 0.10001030500000008, 0.10001029100000003, 0.10001031999999999, 0.10001030600000016, 0.10001030600000016, 0.10001036099999983, 5.409999999095305e-07, 5.409999999095305e-07, 0.10001079099999988, 0.10001029199999989, 0.10001029200000033, 0.1000103189999999, 0.1000102909999998, 0.10001030600000016, 0.10001029199999989, 0.10001030500000008, 0.1000103189999999, 0.10001029200000033, 0.10001029199999989, 0.10001030500000008, 0.10001030500000008, 0.10001030600000016, 0.10001030599999972, 0.10001034700000044, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 0.10001072200000038, 0.10001026400000068, 0.1000102639999998]</msg>
<status status="PASS" starttime="20201030 15:54:06.596" endtime="20201030 15:54:06.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.585" endtime="20201030 15:54:06.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.617" endtime="20201030 15:54:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.613" endtime="20201030 15:54:06.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.610" endtime="20201030 15:54:06.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.915" endtime="20201030 15:54:06.642"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:59.791" endtime="20201030 15:54:06.643" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.660" endtime="20201030 15:54:06.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.656" endtime="20201030 15:54:06.683"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.716" endtime="20201030 15:54:06.734"></status>
</kw>
<msg timestamp="20201030 15:54:06.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.713" endtime="20201030 15:54:06.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.738" endtime="20201030 15:54:06.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.749" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:06.744" endtime="20201030 15:54:06.749"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:06.706" endtime="20201030 15:54:06.751"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:06.699" endtime="20201030 15:54:06.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.697" endtime="20201030 15:54:06.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:06.763" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:06.762" endtime="20201030 15:54:06.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.755" endtime="20201030 15:54:06.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.695" endtime="20201030 15:54:06.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.693" endtime="20201030 15:54:06.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.767" endtime="20201030 15:54:06.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.689" endtime="20201030 15:54:06.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.685" endtime="20201030 15:54:06.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.653" endtime="20201030 15:54:06.773"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.794" endtime="20201030 15:54:12.919"></status>
</kw>
<msg timestamp="20201030 15:54:12.920" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.791" endtime="20201030 15:54:12.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.926" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.922" endtime="20201030 15:54:12.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.929" endtime="20201030 15:54:12.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.784" endtime="20201030 15:54:12.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.779" endtime="20201030 15:54:12.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:12.942" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:54:12.938" endtime="20201030 15:54:12.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.952" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:12.950" endtime="20201030 15:54:12.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.957" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:12.955" endtime="20201030 15:54:12.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.944" endtime="20201030 15:54:12.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.969" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:12.967" endtime="20201030 15:54:12.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.973" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:12.971" endtime="20201030 15:54:12.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.961" endtime="20201030 15:54:12.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.985" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:12.983" endtime="20201030 15:54:12.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.990" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:54:12.988" endtime="20201030 15:54:12.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.977" endtime="20201030 15:54:12.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.009" endtime="20201030 15:54:13.359"></status>
</kw>
<msg timestamp="20201030 15:54:13.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126741264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227327306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.005" endtime="20201030 15:54:13.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126741264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227327306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.368" endtime="20201030 15:54:13.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.386" endtime="20201030 15:54:13.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.998" endtime="20201030 15:54:13.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.993" endtime="20201030 15:54:13.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:13.403" level="INFO">${FILTERED} = [{'diff': 0.10058604200000001}, {'diff': 0.10006955599999998}, {'diff': 0.09941086199999999}, {'diff': 0.10001029199999995}, {'diff': 0.10001030499999997}, {'diff': 0.10001029100000003}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:54:13.395" endtime="20201030 15:54:13.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:13.414" level="INFO">${RESULT} = {'diff': [0.10058604200000001, 0.10006955599999998, 0.09941086199999999, 0.10001029199999995, 0.10001030499999997, 0.10001029100000003, 0.100010292, 0.1000102639999999, 0.10001030600000005, 0.10001027...</msg>
<status status="PASS" starttime="20201030 15:54:13.407" endtime="20201030 15:54:13.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.424" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:13.422" endtime="20201030 15:54:13.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.430" level="INFO">VALUE: [0.10058604200000001, 0.10006955599999998, 0.09941086199999999, 0.10001029199999995, 0.10001030499999997, 0.10001029100000003, 0.100010292, 0.1000102639999999, 0.10001030600000005, 0.10001027800000006, 0.10001024999999997, 0.10001023599999992, 0.10001030599999994, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 0.10001075000000004, 0.10001030500000008, 0.10001034700000044, 0.10001029100000025, 0.10001029200000033, 0.10001031999999999, 0.10001027800000006, 0.10001029199999945, 0.10001030599999972, 0.10001027800000006, 0.10001030500000052, 0.10001029200000033, 0.10001026400000068, 0.10001034700000044]</msg>
<status status="PASS" starttime="20201030 15:54:13.427" endtime="20201030 15:54:13.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.416" endtime="20201030 15:54:13.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:13.442" endtime="20201030 15:54:13.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.438" endtime="20201030 15:54:13.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.436" endtime="20201030 15:54:13.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.775" endtime="20201030 15:54:13.467"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:06.648" endtime="20201030 15:54:13.469" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:28.015" endtime="20201030 15:54:13.485"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:50:29.925" endtime="20201030 15:54:13.564"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
