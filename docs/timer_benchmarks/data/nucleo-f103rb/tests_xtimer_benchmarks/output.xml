<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 09:32:43.437" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:44.761" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:44.777" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:45.663" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:44.757" endtime="20201029 09:32:45.664"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:48.670" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:32:45.666" endtime="20201029 09:32:48.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:44.754" endtime="20201029 09:32:48.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:48.677" endtime="20201029 09:32:49.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:48.675" endtime="20201029 09:32:49.014"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.044" endtime="20201029 09:32:49.065"></status>
</kw>
<msg timestamp="20201029 09:32:49.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.041" endtime="20201029 09:32:49.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.069" endtime="20201029 09:32:49.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.080" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:49.076" endtime="20201029 09:32:49.081"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.035" endtime="20201029 09:32:49.083"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.029" endtime="20201029 09:32:49.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.026" endtime="20201029 09:32:49.086"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:49.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:49.093" endtime="20201029 09:32:49.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.088" endtime="20201029 09:32:49.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.024" endtime="20201029 09:32:49.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.022" endtime="20201029 09:32:49.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.098" endtime="20201029 09:32:49.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.019" endtime="20201029 09:32:49.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.105" endtime="20201029 09:32:49.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.015" endtime="20201029 09:32:49.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:44.751" endtime="20201029 09:32:49.111"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:49.128" endtime="20201029 09:32:49.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.125" endtime="20201029 09:32:49.152"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.188" endtime="20201029 09:32:49.207"></status>
</kw>
<msg timestamp="20201029 09:32:49.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.185" endtime="20201029 09:32:49.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.211" endtime="20201029 09:32:49.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:49.218" endtime="20201029 09:32:49.223"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.177" endtime="20201029 09:32:49.225"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:49.170" endtime="20201029 09:32:49.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.167" endtime="20201029 09:32:49.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:49.236" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:49.235" endtime="20201029 09:32:49.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.230" endtime="20201029 09:32:49.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.165" endtime="20201029 09:32:49.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.163" endtime="20201029 09:32:49.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.240" endtime="20201029 09:32:49.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.159" endtime="20201029 09:32:49.246"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.154" endtime="20201029 09:32:49.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.122" endtime="20201029 09:32:49.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.266" endtime="20201029 09:32:49.280"></status>
</kw>
<msg timestamp="20201029 09:32:49.281" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.262" endtime="20201029 09:32:49.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.287" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:49.283" endtime="20201029 09:32:49.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:49.290" endtime="20201029 09:32:49.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.254" endtime="20201029 09:32:49.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.249" endtime="20201029 09:32:49.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.309" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:32:49.307" endtime="20201029 09:32:49.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.314" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:32:49.312" endtime="20201029 09:32:49.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.300" endtime="20201029 09:32:49.316"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:32:49.113" endtime="20201029 09:32:49.318" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:43.701" endtime="20201029 09:32:49.325"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:49.480" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:49.496" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:50.358" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:49.477" endtime="20201029 09:32:50.360"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.365" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:32:50.362" endtime="20201029 09:32:53.367"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.474" endtime="20201029 09:32:53.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:53.373" endtime="20201029 09:32:53.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.370" endtime="20201029 09:32:53.713"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.745" endtime="20201029 09:32:53.766"></status>
</kw>
<msg timestamp="20201029 09:32:53.767" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.741" endtime="20201029 09:32:53.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.770" endtime="20201029 09:32:53.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.782" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:53.777" endtime="20201029 09:32:53.783"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:53.735" endtime="20201029 09:32:53.785"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:53.729" endtime="20201029 09:32:53.787"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.726" endtime="20201029 09:32:53.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:53.799" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:53.795" endtime="20201029 09:32:53.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.790" endtime="20201029 09:32:53.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.724" endtime="20201029 09:32:53.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.722" endtime="20201029 09:32:53.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.803" endtime="20201029 09:32:53.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.718" endtime="20201029 09:32:53.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.810" endtime="20201029 09:32:53.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.715" endtime="20201029 09:32:53.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:49.471" endtime="20201029 09:32:53.817"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:53.832" endtime="20201029 09:32:53.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.828" endtime="20201029 09:32:53.856"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.903" endtime="20201029 09:32:53.929"></status>
</kw>
<msg timestamp="20201029 09:32:53.930" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.896" endtime="20201029 09:32:53.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:53.933" endtime="20201029 09:32:53.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.944" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:53.939" endtime="20201029 09:32:53.945"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:53.887" endtime="20201029 09:32:53.947"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:53.874" endtime="20201029 09:32:53.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.871" endtime="20201029 09:32:53.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:53.957" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:53.956" endtime="20201029 09:32:53.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.951" endtime="20201029 09:32:53.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.869" endtime="20201029 09:32:53.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.867" endtime="20201029 09:32:53.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:53.961" endtime="20201029 09:32:53.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.862" endtime="20201029 09:32:53.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.858" endtime="20201029 09:32:53.968"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.825" endtime="20201029 09:32:53.968"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.057" endtime="20201029 09:32:54.070"></status>
</kw>
<msg timestamp="20201029 09:32:54.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.053" endtime="20201029 09:32:54.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.078" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.073" endtime="20201029 09:32:54.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.080" endtime="20201029 09:32:54.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.981" endtime="20201029 09:32:54.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.976" endtime="20201029 09:32:54.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.104" endtime="20201029 09:32:54.435"></status>
</kw>
<msg timestamp="20201029 09:32:54.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.215529083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.215541958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:54.101" endtime="20201029 09:32:54.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.215529083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.215541958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:54.442" endtime="20201029 09:32:54.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.455" endtime="20201029 09:32:54.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.093" endtime="20201029 09:32:54.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.089" endtime="20201029 09:32:54.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:54.471" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.903000000005546e-06}, {'diff': 9.971999999996983e-06}, {'diff': 1.5943999999989966e-05}, {'diff': 1.722299999998289e-05}, {'diff': 1.4445000000001817e-05}, {'diff': 1.38199999...</msg>
<status status="PASS" starttime="20201029 09:32:54.464" endtime="20201029 09:32:54.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:54.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.903000000005546e-06, 9.971999999996983e-06, 1.5943999999989966e-05, 1.722299999998289e-05, 1.4445000000001817e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.193000000002109e-05,...</msg>
<status status="PASS" starttime="20201029 09:32:54.474" endtime="20201029 09:32:54.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:54.487" endtime="20201029 09:32:54.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.495" level="INFO">VALUE: [0, 9.903000000005546e-06, 9.971999999996983e-06, 1.5943999999989966e-05, 1.722299999998289e-05, 1.4445000000001817e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.193000000002109e-05, 1.6665999999998515e-05, 1.1333000000002258e-05, 1.5999999999988246e-05, 1.0403000000019924e-05, 1.5973000000002457e-05, 6.333999999996731e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2263999999984065e-05, 1.0763999999996443e-05, 1.6999999999989246e-05, 1.2111000000009087e-05, 8.680000000010901e-06, 1.6486000000009993e-05, 8.111000000005086e-06, 1.0667000000019744e-05]</msg>
<status status="PASS" starttime="20201029 09:32:54.492" endtime="20201029 09:32:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.481" endtime="20201029 09:32:54.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.972" endtime="20201029 09:32:54.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.971" endtime="20201029 09:32:54.499"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.521" endtime="20201029 09:32:54.534"></status>
</kw>
<msg timestamp="20201029 09:32:54.535" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.518" endtime="20201029 09:32:54.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.537" endtime="20201029 09:32:54.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.544" endtime="20201029 09:32:54.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.510" endtime="20201029 09:32:54.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.505" endtime="20201029 09:32:54.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.573" endtime="20201029 09:32:54.926"></status>
</kw>
<msg timestamp="20201029 09:32:54.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.215529083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.215541958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:54.569" endtime="20201029 09:32:54.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.215529083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.215541958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:54.937" endtime="20201029 09:32:54.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.956" endtime="20201029 09:32:54.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.561" endtime="20201029 09:32:54.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.556" endtime="20201029 09:32:54.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:54.974" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.903000000005546e-06}, {'diff': 9.971999999996983e-06}, {'diff': 1.5943999999989966e-05}, {'diff': 1.722299999998289e-05}, {'diff': 1.4445000000001817e-05}, {'diff': 1.38199999...</msg>
<status status="PASS" starttime="20201029 09:32:54.965" endtime="20201029 09:32:54.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:54.986" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.903000000005546e-06, 9.971999999996983e-06, 1.5943999999989966e-05, 1.722299999998289e-05, 1.4445000000001817e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.193000000002109e-05,...</msg>
<status status="PASS" starttime="20201029 09:32:54.976" endtime="20201029 09:32:54.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.000" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:54.997" endtime="20201029 09:32:55.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.007" level="INFO">VALUE: [0, 9.903000000005546e-06, 9.971999999996983e-06, 1.5943999999989966e-05, 1.722299999998289e-05, 1.4445000000001817e-05, 1.3819999999997723e-05, 1.1111000000008087e-05, 1.193000000002109e-05, 1.6665999999998515e-05, 1.1333000000002258e-05, 1.5999999999988246e-05, 1.0403000000019924e-05, 1.5973000000002457e-05, 6.333999999996731e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2263999999984065e-05, 1.0763999999996443e-05, 1.6999999999989246e-05, 1.2111000000009087e-05, 8.680000000010901e-06, 1.6486000000009993e-05, 8.111000000005086e-06, 1.0667000000019744e-05, 0.45263819400000005, 1.2444000000000344e-05, 1.0222000000004172e-05, 1.387500000005204e-05, 1.168100000004113e-05, 1.4764000000000443e-05, 1.570899999991937e-05, 1.3736000000097448e-05, 1.5111000000067598e-05, 1.0903000000062057e-05, 1.1999999999900979e-05, 1.4459000000077715e-05, 1.2082999999996069e-05, 9.901999999950561e-06, 1.693099999999781e-05, 1.0014000000002632e-05, 9.902000000061584e-06, 1.6985999999996615e-05, 1.590299999998379e-05, 8.722999999988268e-06, 9.236000000023559e-06, 6.11200000000256e-06, 1.4568999999964305e-05, 1.4555000000027185e-05, 1.1569999999960778e-05]</msg>
<status status="PASS" starttime="20201029 09:32:55.003" endtime="20201029 09:32:55.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.989" endtime="20201029 09:32:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.501" endtime="20201029 09:32:55.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.500" endtime="20201029 09:32:55.013"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.037" endtime="20201029 09:32:55.050"></status>
</kw>
<msg timestamp="20201029 09:32:55.051" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.033" endtime="20201029 09:32:55.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.058" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.054" endtime="20201029 09:32:55.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.060" endtime="20201029 09:32:55.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.025" endtime="20201029 09:32:55.066"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.019" endtime="20201029 09:32:55.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.084" endtime="20201029 09:32:55.442"></status>
</kw>
<msg timestamp="20201029 09:32:55.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.215800097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.215815139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:55.080" endtime="20201029 09:32:55.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.215800097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.215815139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:55.454" endtime="20201029 09:32:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.478" endtime="20201029 09:32:55.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.073" endtime="20201029 09:32:55.484"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.068" endtime="20201029 09:32:55.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:55.499" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0403000000019924e-05}, {'diff': 1.5973000000002457e-05}, {'diff': 6.333999999996731e-06}, {'diff': 1.3889000000016916e-05}, {'diff': 1.6221999999982417e-05}, {'diff': 1.226399...</msg>
<status status="PASS" starttime="20201029 09:32:55.488" endtime="20201029 09:32:55.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:55.513" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0403000000019924e-05, 1.5973000000002457e-05, 6.333999999996731e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2263999999984065e-05, 1.0763999999996443e-05, 1.6999999999989246e-...</msg>
<status status="PASS" starttime="20201029 09:32:55.502" endtime="20201029 09:32:55.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.527" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:55.524" endtime="20201029 09:32:55.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.535" level="INFO">VALUE: [0, 1.0403000000019924e-05, 1.5973000000002457e-05, 6.333999999996731e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2263999999984065e-05, 1.0763999999996443e-05, 1.6999999999989246e-05, 1.2111000000009087e-05, 8.680000000010901e-06, 1.6486000000009993e-05, 8.111000000005086e-06, 1.0667000000019744e-05, 0.45263819400000005, 1.2444000000000344e-05, 1.0222000000004172e-05, 1.387500000005204e-05, 1.168100000004113e-05, 1.4764000000000443e-05, 1.570899999991937e-05, 1.3736000000097448e-05, 1.5111000000067598e-05, 1.0903000000062057e-05, 1.1999999999900979e-05, 1.4459000000077715e-05, 1.2082999999996069e-05, 9.901999999950561e-06, 1.693099999999781e-05, 1.0014000000002632e-05, 9.902000000061584e-06, 1.6985999999996615e-05, 1.590299999998379e-05, 8.722999999988268e-06, 9.236000000023559e-06, 6.11200000000256e-06, 1.4568999999964305e-05, 1.4555000000027185e-05, 1.1569999999960778e-05, 0.504654819, 1.2541000000032554e-05, 6.139000000127126e-06, 1.4986000000050126e-05, 9.346999999992889e-06, 1.1889000000042671e-05, 9.111000000006086e-06, 1.1443999999860566e-05, 1.444499999991855e-05, 1.766599999997176e-05, 6.458999999958692e-06, 1.3110999999899065e-05, 8.999999999925734e-06, 7.67999999995439e-06, 1.020799999995603e-05, 1.2764000000053954e-05, 1.4568999999964305e-05, 1.6443999999893322e-05, 1.7221999999872395e-05, 8.709000000051148e-06, 1.0222000000004172e-05, 1.3221999999979417e-05, 1.5180999999975242e-05, 7.2220000000289275e-06, 9.332999999944747e-06]</msg>
<status status="PASS" starttime="20201029 09:32:55.531" endtime="20201029 09:32:55.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.515" endtime="20201029 09:32:55.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.015" endtime="20201029 09:32:55.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.014" endtime="20201029 09:32:55.541"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.565" endtime="20201029 09:32:55.578"></status>
</kw>
<msg timestamp="20201029 09:32:55.579" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.562" endtime="20201029 09:32:55.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.586" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.582" endtime="20201029 09:32:55.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.588" endtime="20201029 09:32:55.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.553" endtime="20201029 09:32:55.594"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.547" endtime="20201029 09:32:55.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.612" endtime="20201029 09:32:56.031"></status>
</kw>
<msg timestamp="20201029 09:32:56.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.669038042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.669046292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:55.609" endtime="20201029 09:32:56.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.669038042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.669046292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:56.042" endtime="20201029 09:32:56.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.065" endtime="20201029 09:32:56.069"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.601" endtime="20201029 09:32:56.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.597" endtime="20201029 09:32:56.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:56.083" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2082999999996069e-05}, {'diff': 9.901999999950561e-06}, {'diff': 1.693099999999781e-05}, {'diff': 1.0014000000002632e-05}, {'diff': 9.902000000061584e-06}, {'diff': 1.69859999...</msg>
<status status="PASS" starttime="20201029 09:32:56.074" endtime="20201029 09:32:56.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:56.099" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2082999999996069e-05, 9.901999999950561e-06, 1.693099999999781e-05, 1.0014000000002632e-05, 9.902000000061584e-06, 1.6985999999996615e-05, 1.590299999998379e-05, 8.722999999988268e-06, ...</msg>
<status status="PASS" starttime="20201029 09:32:56.087" endtime="20201029 09:32:56.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.113" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:56.110" endtime="20201029 09:32:56.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.121" level="INFO">VALUE: [0, 1.2082999999996069e-05, 9.901999999950561e-06, 1.693099999999781e-05, 1.0014000000002632e-05, 9.902000000061584e-06, 1.6985999999996615e-05, 1.590299999998379e-05, 8.722999999988268e-06, 9.236000000023559e-06, 6.11200000000256e-06, 1.4568999999964305e-05, 1.4555000000027185e-05, 1.1569999999960778e-05, 0.504654819, 1.2541000000032554e-05, 6.139000000127126e-06, 1.4986000000050126e-05, 9.346999999992889e-06, 1.1889000000042671e-05, 9.111000000006086e-06, 1.1443999999860566e-05, 1.444499999991855e-05, 1.766599999997176e-05, 6.458999999958692e-06, 1.3110999999899065e-05, 8.999999999925734e-06, 7.67999999995439e-06, 1.020799999995603e-05, 1.2764000000053954e-05, 1.4568999999964305e-05, 1.6443999999893322e-05, 1.7221999999872395e-05, 8.709000000051148e-06, 1.0222000000004172e-05, 1.3221999999979417e-05, 1.5180999999975242e-05, 7.2220000000289275e-06, 9.332999999944747e-06, 0.5180984160000002, 1.1874999999994529e-05, 1.355600000008117e-05, 6.4580000000979965e-06, 9.417000000011555e-06, 1.3250000000075701e-05, 1.4653000000031113e-05, 1.201299999986638e-05, 1.3790999999985232e-05, 1.1223000000004646e-05, 1.3222000000201461e-05, 1.2348000000050874e-05, 1.5306000000103737e-05, 1.0763999999996443e-05, 7.77800000006934e-06, 1.3000000000040757e-05, 1.3000000000040757e-05, 7.666999999988988e-06, 1.1556000000023658e-05, 1.4999999999876223e-05, 1.7916000000006704e-05, 6.889000000009915e-06, 1.1110999999841553e-05, 1.3888999999878138e-05, 1.4222000000119195e-05]</msg>
<status status="PASS" starttime="20201029 09:32:56.117" endtime="20201029 09:32:56.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.102" endtime="20201029 09:32:56.125"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.543" endtime="20201029 09:32:56.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.542" endtime="20201029 09:32:56.129"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.155" endtime="20201029 09:32:56.168"></status>
</kw>
<msg timestamp="20201029 09:32:56.169" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.150" endtime="20201029 09:32:56.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.176" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.171" endtime="20201029 09:32:56.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.178" endtime="20201029 09:32:56.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.142" endtime="20201029 09:32:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.136" endtime="20201029 09:32:56.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.202" endtime="20201029 09:32:56.571"></status>
</kw>
<msg timestamp="20201029 09:32:56.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.174272486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.174287931, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:56.199" endtime="20201029 09:32:56.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.174272486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.174287931, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:56.583" endtime="20201029 09:32:56.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.606" endtime="20201029 09:32:56.609"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.192" endtime="20201029 09:32:56.611"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.187" endtime="20201029 09:32:56.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:56.624" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.999999999925734e-06}, {'diff': 7.67999999995439e-06}, {'diff': 1.020799999995603e-05}, {'diff': 1.2764000000053954e-05}, {'diff': 1.4568999999964305e-05}, {'diff': 1.644399999...</msg>
<status status="PASS" starttime="20201029 09:32:56.614" endtime="20201029 09:32:56.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:56.636" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.999999999925734e-06, 7.67999999995439e-06, 1.020799999995603e-05, 1.2764000000053954e-05, 1.4568999999964305e-05, 1.6443999999893322e-05, 1.7221999999872395e-05, 8.709000000051148e-06, ...</msg>
<status status="PASS" starttime="20201029 09:32:56.626" endtime="20201029 09:32:56.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.647" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:56.645" endtime="20201029 09:32:56.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.653" level="INFO">VALUE: [0, 8.999999999925734e-06, 7.67999999995439e-06, 1.020799999995603e-05, 1.2764000000053954e-05, 1.4568999999964305e-05, 1.6443999999893322e-05, 1.7221999999872395e-05, 8.709000000051148e-06, 1.0222000000004172e-05, 1.3221999999979417e-05, 1.5180999999975242e-05, 7.2220000000289275e-06, 9.332999999944747e-06, 0.5180984160000002, 1.1874999999994529e-05, 1.355600000008117e-05, 6.4580000000979965e-06, 9.417000000011555e-06, 1.3250000000075701e-05, 1.4653000000031113e-05, 1.201299999986638e-05, 1.3790999999985232e-05, 1.1223000000004646e-05, 1.3222000000201461e-05, 1.2348000000050874e-05, 1.5306000000103737e-05, 1.0763999999996443e-05, 7.77800000006934e-06, 1.3000000000040757e-05, 1.3000000000040757e-05, 7.666999999988988e-06, 1.1556000000023658e-05, 1.4999999999876223e-05, 1.7916000000006704e-05, 6.889000000009915e-06, 1.1110999999841553e-05, 1.3888999999878138e-05, 1.4222000000119195e-05, 0.5785720969999999, 1.1667000000326055e-05, 1.738800000028462e-05, 9.722000000156328e-06, 1.2223000000144424e-05, 1.4236000000167337e-05, 8.319999999617522e-06, 1.0472000000039117e-05, 1.7569000000161594e-05, 6.334000000052242e-06, 6.777999999929563e-06, 8.333999999887709e-06, 1.3000000000040757e-05, 8.680000000094168e-06, 1.0430000000116735e-05, 1.5679999999740346e-05, 9.236000000356626e-06, 9.111000000228131e-06, 1.1457999999908708e-05, 1.1360999999876498e-05, 8.041999999708338e-06, 1.10970000002375e-05, 9.3199999997573e-06, 9.444999999885795e-06, 1.6777999999995075e-05]</msg>
<status status="PASS" starttime="20201029 09:32:56.649" endtime="20201029 09:32:56.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.638" endtime="20201029 09:32:56.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.131" endtime="20201029 09:32:56.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.130" endtime="20201029 09:32:56.657"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.678" endtime="20201029 09:32:56.691"></status>
</kw>
<msg timestamp="20201029 09:32:56.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.674" endtime="20201029 09:32:56.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.699" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.695" endtime="20201029 09:32:56.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.702" endtime="20201029 09:32:56.706"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.667" endtime="20201029 09:32:56.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.662" endtime="20201029 09:32:56.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.726" endtime="20201029 09:32:57.099"></status>
</kw>
<msg timestamp="20201029 09:32:57.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.692940681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.692949222, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:56.723" endtime="20201029 09:32:57.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.692940681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.692949222, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:57.111" endtime="20201029 09:32:57.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.133" endtime="20201029 09:32:57.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.715" endtime="20201029 09:32:57.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.710" endtime="20201029 09:32:57.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:57.152" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5306000000103737e-05}, {'diff': 1.0763999999996443e-05}, {'diff': 7.77800000006934e-06}, {'diff': 1.3000000000040757e-05}, {'diff': 1.3000000000040757e-05}, {'diff': 7.6669999...</msg>
<status status="PASS" starttime="20201029 09:32:57.142" endtime="20201029 09:32:57.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:57.165" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5306000000103737e-05, 1.0763999999996443e-05, 7.77800000006934e-06, 1.3000000000040757e-05, 1.3000000000040757e-05, 7.666999999988988e-06, 1.1556000000023658e-05, 1.4999999999876223e-05...</msg>
<status status="PASS" starttime="20201029 09:32:57.155" endtime="20201029 09:32:57.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.176" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:57.174" endtime="20201029 09:32:57.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.182" level="INFO">VALUE: [0, 1.5306000000103737e-05, 1.0763999999996443e-05, 7.77800000006934e-06, 1.3000000000040757e-05, 1.3000000000040757e-05, 7.666999999988988e-06, 1.1556000000023658e-05, 1.4999999999876223e-05, 1.7916000000006704e-05, 6.889000000009915e-06, 1.1110999999841553e-05, 1.3888999999878138e-05, 1.4222000000119195e-05, 0.5785720969999999, 1.1667000000326055e-05, 1.738800000028462e-05, 9.722000000156328e-06, 1.2223000000144424e-05, 1.4236000000167337e-05, 8.319999999617522e-06, 1.0472000000039117e-05, 1.7569000000161594e-05, 6.334000000052242e-06, 6.777999999929563e-06, 8.333999999887709e-06, 1.3000000000040757e-05, 8.680000000094168e-06, 1.0430000000116735e-05, 1.5679999999740346e-05, 9.236000000356626e-06, 9.111000000228131e-06, 1.1457999999908708e-05, 1.1360999999876498e-05, 8.041999999708338e-06, 1.10970000002375e-05, 9.3199999997573e-06, 9.444999999885795e-06, 1.6777999999995075e-05, 0.512735223, 7.23600000007707e-06, 1.7082999999917803e-05, 1.1777999999740274e-05, 7.77800000006934e-06, 1.1778000000184363e-05, 1.1334000000307043e-05, 1.258300000017698e-05, 1.3000000000040757e-05, 7.443999999967588e-06, 1.09999999997612e-05, 9.555000000105451e-06, 1.0416999999929288e-05, 1.422199999989715e-05, 1.387500000005204e-05, 1.3556000000303214e-05, 1.809799999996642e-05, 8.556000000048414e-06, 1.244499999986104e-05, 1.0778000000044585e-05, 1.1332999999780213e-05, 7.667000000211033e-06, 1.0985999999935103e-05, 1.090300000017308e-05, 1.393099999980052e-05]</msg>
<status status="PASS" starttime="20201029 09:32:57.178" endtime="20201029 09:32:57.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.167" endtime="20201029 09:32:57.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.659" endtime="20201029 09:32:57.186"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.658" endtime="20201029 09:32:57.186"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.207" endtime="20201029 09:32:57.221"></status>
</kw>
<msg timestamp="20201029 09:32:57.222" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.203" endtime="20201029 09:32:57.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.229" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.225" endtime="20201029 09:32:57.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.231" endtime="20201029 09:32:57.235"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.196" endtime="20201029 09:32:57.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.191" endtime="20201029 09:32:57.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.255" endtime="20201029 09:32:57.631"></status>
</kw>
<msg timestamp="20201029 09:32:57.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.272084028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.272094264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:57.251" endtime="20201029 09:32:57.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.272084028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.272094264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:57.644" endtime="20201029 09:32:57.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.667" endtime="20201029 09:32:57.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.244" endtime="20201029 09:32:57.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.239" endtime="20201029 09:32:57.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:57.685" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3000000000040757e-05}, {'diff': 8.680000000094168e-06}, {'diff': 1.0430000000116735e-05}, {'diff': 1.5679999999740346e-05}, {'diff': 9.236000000356626e-06}, {'diff': 9.1110000...</msg>
<status status="PASS" starttime="20201029 09:32:57.675" endtime="20201029 09:32:57.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:57.697" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3000000000040757e-05, 8.680000000094168e-06, 1.0430000000116735e-05, 1.5679999999740346e-05, 9.236000000356626e-06, 9.111000000228131e-06, 1.1457999999908708e-05, 1.1360999999876498e-05...</msg>
<status status="PASS" starttime="20201029 09:32:57.687" endtime="20201029 09:32:57.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.709" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:57.707" endtime="20201029 09:32:57.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.716" level="INFO">VALUE: [0, 1.3000000000040757e-05, 8.680000000094168e-06, 1.0430000000116735e-05, 1.5679999999740346e-05, 9.236000000356626e-06, 9.111000000228131e-06, 1.1457999999908708e-05, 1.1360999999876498e-05, 8.041999999708338e-06, 1.10970000002375e-05, 9.3199999997573e-06, 9.444999999885795e-06, 1.6777999999995075e-05, 0.512735223, 7.23600000007707e-06, 1.7082999999917803e-05, 1.1777999999740274e-05, 7.77800000006934e-06, 1.1778000000184363e-05, 1.1334000000307043e-05, 1.258300000017698e-05, 1.3000000000040757e-05, 7.443999999967588e-06, 1.09999999997612e-05, 9.555000000105451e-06, 1.0416999999929288e-05, 1.422199999989715e-05, 1.387500000005204e-05, 1.3556000000303214e-05, 1.809799999996642e-05, 8.556000000048414e-06, 1.244499999986104e-05, 1.0778000000044585e-05, 1.1332999999780213e-05, 7.667000000211033e-06, 1.0985999999935103e-05, 1.090300000017308e-05, 1.393099999980052e-05, 0.5190001390000001, 9.457999999629152e-06, 6.445000000354639e-06, 1.545800000002373e-05, 1.342999999964789e-05, 1.1014000000031388e-05, 1.2069000000280994e-05, 7.096999999678388e-06, 1.2319000000093894e-05, 1.3556000000303214e-05, 1.6430000000067224e-05, 1.0693999999755732e-05, 1.6083999999860765e-05, 1.2889000000182449e-05, 1.620799999990652e-05, 1.2096999999933189e-05, 1.2861000000086165e-05, 1.2764000000053954e-05, 8.445000000190106e-06, 7.5700000001788226e-06, 1.5722000000106817e-05, 1.5235999999863026e-05, 1.4555999999998903e-05, 1.7403000000193458e-05, 1.7278000000064964e-05]</msg>
<status status="PASS" starttime="20201029 09:32:57.712" endtime="20201029 09:32:57.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.700" endtime="20201029 09:32:57.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.188" endtime="20201029 09:32:57.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.187" endtime="20201029 09:32:57.721"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.746" endtime="20201029 09:32:57.762"></status>
</kw>
<msg timestamp="20201029 09:32:57.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.741" endtime="20201029 09:32:57.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.766" endtime="20201029 09:32:57.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.773" endtime="20201029 09:32:57.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.733" endtime="20201029 09:32:57.779"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.727" endtime="20201029 09:32:57.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.799" endtime="20201029 09:32:58.184"></status>
</kw>
<msg timestamp="20201029 09:32:58.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.785370083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.785386264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:57.796" endtime="20201029 09:32:58.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.785370083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.785386264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:58.195" endtime="20201029 09:32:58.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.218" endtime="20201029 09:32:58.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.788" endtime="20201029 09:32:58.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.783" endtime="20201029 09:32:58.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:58.237" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0416999999929288e-05}, {'diff': 1.422199999989715e-05}, {'diff': 1.387500000005204e-05}, {'diff': 1.3556000000303214e-05}, {'diff': 1.809799999996642e-05}, {'diff': 8.55600000...</msg>
<status status="PASS" starttime="20201029 09:32:58.227" endtime="20201029 09:32:58.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:58.249" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0416999999929288e-05, 1.422199999989715e-05, 1.387500000005204e-05, 1.3556000000303214e-05, 1.809799999996642e-05, 8.556000000048414e-06, 1.244499999986104e-05, 1.0778000000044585e-05, ...</msg>
<status status="PASS" starttime="20201029 09:32:58.239" endtime="20201029 09:32:58.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.260" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:58.258" endtime="20201029 09:32:58.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.266" level="INFO">VALUE: [0, 1.0416999999929288e-05, 1.422199999989715e-05, 1.387500000005204e-05, 1.3556000000303214e-05, 1.809799999996642e-05, 8.556000000048414e-06, 1.244499999986104e-05, 1.0778000000044585e-05, 1.1332999999780213e-05, 7.667000000211033e-06, 1.0985999999935103e-05, 1.090300000017308e-05, 1.393099999980052e-05, 0.5190001390000001, 9.457999999629152e-06, 6.445000000354639e-06, 1.545800000002373e-05, 1.342999999964789e-05, 1.1014000000031388e-05, 1.2069000000280994e-05, 7.096999999678388e-06, 1.2319000000093894e-05, 1.3556000000303214e-05, 1.6430000000067224e-05, 1.0693999999755732e-05, 1.6083999999860765e-05, 1.2889000000182449e-05, 1.620799999990652e-05, 1.2096999999933189e-05, 1.2861000000086165e-05, 1.2764000000053954e-05, 8.445000000190106e-06, 7.5700000001788226e-06, 1.5722000000106817e-05, 1.5235999999863026e-05, 1.4555999999998903e-05, 1.7403000000193458e-05, 1.7278000000064964e-05, 0.5303000280000001, 8.305000000152774e-06, 1.531900000006914e-05, 1.3110999999899065e-05, 1.1458000000352797e-05, 1.545900000010647e-05, 1.2444000000222388e-05, 6.222000000111194e-06, 1.57640000000292e-05, 7.2089999996194365e-06, 1.4445000000140595e-05, 7.999999999785956e-06, 8.540999999695487e-06, 8.903000000337613e-06, 1.244499999986104e-05, 1.3236000000027559e-05, 9.945000000399773e-06, 8.77799999976503e-06, 9.791000000092254e-06, 1.5110999999734531e-05, 9.888999999763115e-06, 1.1221999999921906e-05, 1.2707999999861386e-05, 1.0236000000052314e-05, 1.5528000000042397e-05]</msg>
<status status="PASS" starttime="20201029 09:32:58.262" endtime="20201029 09:32:58.267"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.252" endtime="20201029 09:32:58.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.723" endtime="20201029 09:32:58.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.722" endtime="20201029 09:32:58.271"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.292" endtime="20201029 09:32:58.306"></status>
</kw>
<msg timestamp="20201029 09:32:58.307" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.288" endtime="20201029 09:32:58.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.313" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.309" endtime="20201029 09:32:58.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.316" endtime="20201029 09:32:58.319"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.281" endtime="20201029 09:32:58.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.276" endtime="20201029 09:32:58.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.340" endtime="20201029 09:32:58.733"></status>
</kw>
<msg timestamp="20201029 09:32:58.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.304953236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.304964319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:58.336" endtime="20201029 09:32:58.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.304953236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.304964319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:58.745" endtime="20201029 09:32:58.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.768" endtime="20201029 09:32:58.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.329" endtime="20201029 09:32:58.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.324" endtime="20201029 09:32:58.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:58.788" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6083999999860765e-05}, {'diff': 1.2889000000182449e-05}, {'diff': 1.620799999990652e-05}, {'diff': 1.2096999999933189e-05}, {'diff': 1.2861000000086165e-05}, {'diff': 1.276400...</msg>
<status status="PASS" starttime="20201029 09:32:58.778" endtime="20201029 09:32:58.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:58.800" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6083999999860765e-05, 1.2889000000182449e-05, 1.620799999990652e-05, 1.2096999999933189e-05, 1.2861000000086165e-05, 1.2764000000053954e-05, 8.445000000190106e-06, 7.5700000001788226e-0...</msg>
<status status="PASS" starttime="20201029 09:32:58.790" endtime="20201029 09:32:58.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.812" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:58.809" endtime="20201029 09:32:58.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.817" level="INFO">VALUE: [0, 1.6083999999860765e-05, 1.2889000000182449e-05, 1.620799999990652e-05, 1.2096999999933189e-05, 1.2861000000086165e-05, 1.2764000000053954e-05, 8.445000000190106e-06, 7.5700000001788226e-06, 1.5722000000106817e-05, 1.5235999999863026e-05, 1.4555999999998903e-05, 1.7403000000193458e-05, 1.7278000000064964e-05, 0.5303000280000001, 8.305000000152774e-06, 1.531900000006914e-05, 1.3110999999899065e-05, 1.1458000000352797e-05, 1.545900000010647e-05, 1.2444000000222388e-05, 6.222000000111194e-06, 1.57640000000292e-05, 7.2089999996194365e-06, 1.4445000000140595e-05, 7.999999999785956e-06, 8.540999999695487e-06, 8.903000000337613e-06, 1.244499999986104e-05, 1.3236000000027559e-05, 9.945000000399773e-06, 8.77799999976503e-06, 9.791000000092254e-06, 1.5110999999734531e-05, 9.888999999763115e-06, 1.1221999999921906e-05, 1.2707999999861386e-05, 1.0236000000052314e-05, 1.5528000000042397e-05, 0.5349843049999996, 1.1458000000352797e-05, 1.1985999999630792e-05, 1.5096999999464344e-05, 1.402699999974999e-05, 1.3346999999441778e-05, 1.3458999999826915e-05, 1.3888999999878138e-05, 1.2111000000203376e-05, 1.4555999999998903e-05, 8.735999999842647e-06, 1.0679999999929635e-05, 1.6444999999976062e-05, 1.1125000000333785e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4208000000515142e-05, 8.750000000112834e-06, 6.125000000523073e-06, 1.5679999999740346e-05, 1.4665999999330381e-05, 7.667000000211033e-06, 5.236000000685692e-06]</msg>
<status status="PASS" starttime="20201029 09:32:58.814" endtime="20201029 09:32:58.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.803" endtime="20201029 09:32:58.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.272" endtime="20201029 09:32:58.822"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.271" endtime="20201029 09:32:58.822"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.843" endtime="20201029 09:32:58.856"></status>
</kw>
<msg timestamp="20201029 09:32:58.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.839" endtime="20201029 09:32:58.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.860" endtime="20201029 09:32:58.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.866" endtime="20201029 09:32:58.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.832" endtime="20201029 09:32:58.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.827" endtime="20201029 09:32:58.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.890" endtime="20201029 09:32:59.277"></status>
</kw>
<msg timestamp="20201029 09:32:59.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.835867708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.835881167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:58.886" endtime="20201029 09:32:59.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.835867708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.835881167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:59.288" endtime="20201029 09:32:59.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.311" endtime="20201029 09:32:59.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.879" endtime="20201029 09:32:59.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.874" endtime="20201029 09:32:59.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:59.330" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.540999999695487e-06}, {'diff': 8.903000000337613e-06}, {'diff': 1.244499999986104e-05}, {'diff': 1.3236000000027559e-05}, {'diff': 9.945000000399773e-06}, {'diff': 8.777999999...</msg>
<status status="PASS" starttime="20201029 09:32:59.320" endtime="20201029 09:32:59.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:59.340" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.540999999695487e-06, 8.903000000337613e-06, 1.244499999986104e-05, 1.3236000000027559e-05, 9.945000000399773e-06, 8.77799999976503e-06, 9.791000000092254e-06, 1.5110999999734531e-05, 9....</msg>
<status status="PASS" starttime="20201029 09:32:59.332" endtime="20201029 09:32:59.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.351" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:59.349" endtime="20201029 09:32:59.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.357" level="INFO">VALUE: [0, 8.540999999695487e-06, 8.903000000337613e-06, 1.244499999986104e-05, 1.3236000000027559e-05, 9.945000000399773e-06, 8.77799999976503e-06, 9.791000000092254e-06, 1.5110999999734531e-05, 9.888999999763115e-06, 1.1221999999921906e-05, 1.2707999999861386e-05, 1.0236000000052314e-05, 1.5528000000042397e-05, 0.5349843049999996, 1.1458000000352797e-05, 1.1985999999630792e-05, 1.5096999999464344e-05, 1.402699999974999e-05, 1.3346999999441778e-05, 1.3458999999826915e-05, 1.3888999999878138e-05, 1.2111000000203376e-05, 1.4555999999998903e-05, 8.735999999842647e-06, 1.0679999999929635e-05, 1.6444999999976062e-05, 1.1125000000333785e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4208000000515142e-05, 8.750000000112834e-06, 6.125000000523073e-06, 1.5679999999740346e-05, 1.4665999999330381e-05, 7.667000000211033e-06, 5.236000000685692e-06, 0.5403483339999999, 1.555600000013868e-05, 1.0320000000341167e-05, 9.528000000535997e-06, 9.986000000239414e-06, 1.868000000015968e-05, 1.09999999997612e-05, 1.566599999947016e-05, 1.165299999961178e-05, 4.986000000428703e-06, 1.3596999999698767e-05, 8.889000000067426e-06, 1.4139000000135127e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.23600000082547e-06, 1.3444000000362166e-05, 7.68100000048122e-06, 1.1666999999881966e-05, 1.1542000000197561e-05, 1.1542000000197561e-05, 9.944999999511595e-06, 9.444999999885795e-06, 1.179100000037181e-05, 1.065300000036018e-05]</msg>
<status status="PASS" starttime="20201029 09:32:59.354" endtime="20201029 09:32:59.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.343" endtime="20201029 09:32:59.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.824" endtime="20201029 09:32:59.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.823" endtime="20201029 09:32:59.362"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.382" endtime="20201029 09:32:59.397"></status>
</kw>
<msg timestamp="20201029 09:32:59.398" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.379" endtime="20201029 09:32:59.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.405" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.401" endtime="20201029 09:32:59.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.407" endtime="20201029 09:32:59.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.371" endtime="20201029 09:32:59.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.367" endtime="20201029 09:32:59.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.431" endtime="20201029 09:32:59.823"></status>
</kw>
<msg timestamp="20201029 09:32:59.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.371428097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.371436097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:59.427" endtime="20201029 09:32:59.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.371428097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.371436097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:32:59.834" endtime="20201029 09:32:59.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.857" endtime="20201029 09:32:59.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.420" endtime="20201029 09:32:59.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.415" endtime="20201029 09:32:59.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:59.876" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6444999999976062e-05}, {'diff': 1.1125000000333785e-05}, {'diff': 1.46670000003013e-05}, {'diff': 1.2347000000190178e-05}, {'diff': 1.011099999992382e-05}, {'diff': 1.38889999...</msg>
<status status="PASS" starttime="20201029 09:32:59.866" endtime="20201029 09:32:59.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:59.888" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6444999999976062e-05, 1.1125000000333785e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4208000000515142e-05, 8.750000000112834e-06,...</msg>
<status status="PASS" starttime="20201029 09:32:59.878" endtime="20201029 09:32:59.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.899" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:59.897" endtime="20201029 09:32:59.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.905" level="INFO">VALUE: [0, 1.6444999999976062e-05, 1.1125000000333785e-05, 1.46670000003013e-05, 1.2347000000190178e-05, 1.011099999992382e-05, 1.3888999999878138e-05, 1.4208000000515142e-05, 8.750000000112834e-06, 6.125000000523073e-06, 1.5679999999740346e-05, 1.4665999999330381e-05, 7.667000000211033e-06, 5.236000000685692e-06, 0.5403483339999999, 1.555600000013868e-05, 1.0320000000341167e-05, 9.528000000535997e-06, 9.986000000239414e-06, 1.868000000015968e-05, 1.09999999997612e-05, 1.566599999947016e-05, 1.165299999961178e-05, 4.986000000428703e-06, 1.3596999999698767e-05, 8.889000000067426e-06, 1.4139000000135127e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.23600000082547e-06, 1.3444000000362166e-05, 7.68100000048122e-06, 1.1666999999881966e-05, 1.1542000000197561e-05, 1.1542000000197561e-05, 9.944999999511595e-06, 9.444999999885795e-06, 1.179100000037181e-05, 1.065300000036018e-05, 0.5309855419999998, 8.459000000016204e-06, 1.595900000062045e-05, 1.312500000061334e-05, 9.000000000369823e-06, 1.144500000016535e-05, 1.387500000049613e-05, 1.3458999999826915e-05, 9.680999999872597e-06, 1.001399999989161e-05, 8.221999999946661e-06, 1.5333999999533887e-05, 1.0346999999910622e-05, 1.0736000000122203e-05, 1.4903000000288102e-05, 1.179200000045455e-05, 1.1556000000467748e-05, 1.0778000000044585e-05, 8.444999999746017e-06, 1.333300000005977e-05, 1.2332999999919991e-05, 1.09999999997612e-05, 8.236000000216848e-06, 1.4541999999728716e-05, 1.0332999999640435e-05]</msg>
<status status="PASS" starttime="20201029 09:32:59.901" endtime="20201029 09:32:59.906"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.890" endtime="20201029 09:32:59.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.363" endtime="20201029 09:32:59.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.362" endtime="20201029 09:32:59.909"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.929" endtime="20201029 09:32:59.943"></status>
</kw>
<msg timestamp="20201029 09:32:59.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.926" endtime="20201029 09:32:59.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.951" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.947" endtime="20201029 09:32:59.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.953" endtime="20201029 09:32:59.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.919" endtime="20201029 09:32:59.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.914" endtime="20201029 09:32:59.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.977" endtime="20201029 09:33:00.363"></status>
</kw>
<msg timestamp="20201029 09:33:00.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.912351139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.91236225, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:32:59.973" endtime="20201029 09:33:00.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.912351139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.91236225, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 09:33:00.374" endtime="20201029 09:33:00.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.397" endtime="20201029 09:33:00.401"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.966" endtime="20201029 09:33:00.403"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.961" endtime="20201029 09:33:00.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:00.415" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4139000000135127e-05}, {'diff': 1.5443999999753544e-05}, {'diff': 1.3000000000040757e-05}, {'diff': 6.23600000082547e-06}, {'diff': 1.3444000000362166e-05}, {'diff': 7.6810000...</msg>
<status status="PASS" starttime="20201029 09:33:00.406" endtime="20201029 09:33:00.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:00.428" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4139000000135127e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.23600000082547e-06, 1.3444000000362166e-05, 7.68100000048122e-06, 1.1666999999881966e-05, 1.1542000000197561e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:00.417" endtime="20201029 09:33:00.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.439" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:00.436" endtime="20201029 09:33:00.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.445" level="INFO">VALUE: [0, 1.4139000000135127e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.23600000082547e-06, 1.3444000000362166e-05, 7.68100000048122e-06, 1.1666999999881966e-05, 1.1542000000197561e-05, 1.1542000000197561e-05, 9.944999999511595e-06, 9.444999999885795e-06, 1.179100000037181e-05, 1.065300000036018e-05, 0.5309855419999998, 8.459000000016204e-06, 1.595900000062045e-05, 1.312500000061334e-05, 9.000000000369823e-06, 1.144500000016535e-05, 1.387500000049613e-05, 1.3458999999826915e-05, 9.680999999872597e-06, 1.001399999989161e-05, 8.221999999946661e-06, 1.5333999999533887e-05, 1.0346999999910622e-05, 1.0736000000122203e-05, 1.4903000000288102e-05, 1.179200000045455e-05, 1.1556000000467748e-05, 1.0778000000044585e-05, 8.444999999746017e-06, 1.333300000005977e-05, 1.2332999999919991e-05, 1.09999999997612e-05, 8.236000000216848e-06, 1.4541999999728716e-05, 1.0332999999640435e-05, 0.5352245560000002, 8.360999999901253e-06, 1.60139999998421e-05, 8.443999999663276e-06, 1.1458000000352797e-05, 7.902999999309657e-06, 1.1887999999515841e-05, 1.0943999999568632e-05, 1.3153000000265536e-05, 9.763000000440059e-06, 1.5110999999734531e-05, 1.3778000000463919e-05, 1.1165999999285248e-05, 4.999999999810711e-06, 1.0346999999910622e-05, 1.5888999999269515e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5986000000189904e-05, 1.1971999999360605e-05, 8.987000000182377e-06, 1.3971999999640161e-05, 1.1429999999812424e-05, 1.545800000002373e-05, 1.13470000000504e-05]</msg>
<status status="PASS" starttime="20201029 09:33:00.441" endtime="20201029 09:33:00.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.430" endtime="20201029 09:33:00.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.911" endtime="20201029 09:33:00.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.910" endtime="20201029 09:33:00.449"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.470" endtime="20201029 09:33:00.484"></status>
</kw>
<msg timestamp="20201029 09:33:00.485" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.466" endtime="20201029 09:33:00.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.487" endtime="20201029 09:33:00.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.494" endtime="20201029 09:33:00.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.459" endtime="20201029 09:33:00.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.454" endtime="20201029 09:33:00.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.517" endtime="20201029 09:33:00.911"></status>
</kw>
<msg timestamp="20201029 09:33:00.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.443898653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.443914556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:00.514" endtime="20201029 09:33:00.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.443898653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.443914556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:00.923" endtime="20201029 09:33:00.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.946" endtime="20201029 09:33:00.950"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.507" endtime="20201029 09:33:00.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.502" endtime="20201029 09:33:00.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:00.965" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0346999999910622e-05}, {'diff': 1.0736000000122203e-05}, {'diff': 1.4903000000288102e-05}, {'diff': 1.179200000045455e-05}, {'diff': 1.1556000000467748e-05}, {'diff': 1.077800...</msg>
<status status="PASS" starttime="20201029 09:33:00.955" endtime="20201029 09:33:00.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:00.975" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0346999999910622e-05, 1.0736000000122203e-05, 1.4903000000288102e-05, 1.179200000045455e-05, 1.1556000000467748e-05, 1.0778000000044585e-05, 8.444999999746017e-06, 1.333300000005977e-05...</msg>
<status status="PASS" starttime="20201029 09:33:00.967" endtime="20201029 09:33:00.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.986" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:00.984" endtime="20201029 09:33:00.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.992" level="INFO">VALUE: [0, 1.0346999999910622e-05, 1.0736000000122203e-05, 1.4903000000288102e-05, 1.179200000045455e-05, 1.1556000000467748e-05, 1.0778000000044585e-05, 8.444999999746017e-06, 1.333300000005977e-05, 1.2332999999919991e-05, 1.09999999997612e-05, 8.236000000216848e-06, 1.4541999999728716e-05, 1.0332999999640435e-05, 0.5352245560000002, 8.360999999901253e-06, 1.60139999998421e-05, 8.443999999663276e-06, 1.1458000000352797e-05, 7.902999999309657e-06, 1.1887999999515841e-05, 1.0943999999568632e-05, 1.3153000000265536e-05, 9.763000000440059e-06, 1.5110999999734531e-05, 1.3778000000463919e-05, 1.1165999999285248e-05, 4.999999999810711e-06, 1.0346999999910622e-05, 1.5888999999269515e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5986000000189904e-05, 1.1971999999360605e-05, 8.987000000182377e-06, 1.3971999999640161e-05, 1.1429999999812424e-05, 1.545800000002373e-05, 1.13470000000504e-05, 0.53048582, 1.705499999982152e-05, 1.0792000000314772e-05, 1.6430999999705875e-05, 1.2458000000492575e-05, 1.5222000000036928e-05, 1.2429999999952202e-05, 1.2568999999906794e-05, 5.666999999931477e-06, 1.5847000000235312e-05, 1.1777999999296185e-05, 6.360999999621697e-06, 1.3110999999454975e-05, 1.655500000019572e-05, 1.3207999999487186e-05, 1.4278000000089719e-05, 7.874999999657462e-06, 1.4791999999985705e-05, 7.209000000507615e-06, 1.0875000000076795e-05, 8.596999999888055e-06, 1.333300000005977e-05, 1.3667000000161522e-05, 1.3236000000027559e-05, 1.5874999999887507e-05]</msg>
<status status="PASS" starttime="20201029 09:33:00.989" endtime="20201029 09:33:00.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.978" endtime="20201029 09:33:00.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.451" endtime="20201029 09:33:00.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.450" endtime="20201029 09:33:00.997"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.018" endtime="20201029 09:33:01.033"></status>
</kw>
<msg timestamp="20201029 09:33:01.035" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.014" endtime="20201029 09:33:01.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.043" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.038" endtime="20201029 09:33:01.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.047" endtime="20201029 09:33:01.053"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.007" endtime="20201029 09:33:01.055"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.002" endtime="20201029 09:33:01.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.081" endtime="20201029 09:33:01.473"></status>
</kw>
<msg timestamp="20201029 09:33:01.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.979688375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.979696653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:01.075" endtime="20201029 09:33:01.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.979688375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.979696653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:01.484" endtime="20201029 09:33:01.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.508" endtime="20201029 09:33:01.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.066" endtime="20201029 09:33:01.513"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.059" endtime="20201029 09:33:01.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:01.526" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1165999999285248e-05}, {'diff': 4.999999999810711e-06}, {'diff': 1.0346999999910622e-05}, {'diff': 1.5888999999269515e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.300000...</msg>
<status status="PASS" starttime="20201029 09:33:01.516" endtime="20201029 09:33:01.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:01.538" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1165999999285248e-05, 4.999999999810711e-06, 1.0346999999910622e-05, 1.5888999999269515e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5986000000189904e-05, 1.1971999999360605e-...</msg>
<status status="PASS" starttime="20201029 09:33:01.528" endtime="20201029 09:33:01.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.549" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:01.547" endtime="20201029 09:33:01.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.555" level="INFO">VALUE: [0, 1.1165999999285248e-05, 4.999999999810711e-06, 1.0346999999910622e-05, 1.5888999999269515e-05, 1.2111000000203376e-05, 1.3000000000040757e-05, 1.5986000000189904e-05, 1.1971999999360605e-05, 8.987000000182377e-06, 1.3971999999640161e-05, 1.1429999999812424e-05, 1.545800000002373e-05, 1.13470000000504e-05, 0.53048582, 1.705499999982152e-05, 1.0792000000314772e-05, 1.6430999999705875e-05, 1.2458000000492575e-05, 1.5222000000036928e-05, 1.2429999999952202e-05, 1.2568999999906794e-05, 5.666999999931477e-06, 1.5847000000235312e-05, 1.1777999999296185e-05, 6.360999999621697e-06, 1.3110999999454975e-05, 1.655500000019572e-05, 1.3207999999487186e-05, 1.4278000000089719e-05, 7.874999999657462e-06, 1.4791999999985705e-05, 7.209000000507615e-06, 1.0875000000076795e-05, 8.596999999888055e-06, 1.333300000005977e-05, 1.3667000000161522e-05, 1.3236000000027559e-05, 1.5874999999887507e-05, 0.540218834, 9.791999999286816e-06, 7.000000000090267e-06, 1.2778000000324141e-05, 1.377799999957574e-05, 6.263999999589487e-06, 1.3000000000040757e-05, 1.620899999998926e-05, 1.5013999999702321e-05, 1.144500000016535e-05, 1.4874999999747729e-05, 7.764000000243243e-06, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2250000000157968e-05, 1.2568999999906794e-05, 1.2332999999919991e-05, 1.5222000000036928e-05, 1.4903000000288102e-05, 1.2250000000157968e-05, 1.3457999999744175e-05, 1.5555999999250503e-05]</msg>
<status status="PASS" starttime="20201029 09:33:01.552" endtime="20201029 09:33:01.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.540" endtime="20201029 09:33:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.999" endtime="20201029 09:33:01.559"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.998" endtime="20201029 09:33:01.559"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.580" endtime="20201029 09:33:01.593"></status>
</kw>
<msg timestamp="20201029 09:33:01.595" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.577" endtime="20201029 09:33:01.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.597" endtime="20201029 09:33:01.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.603" endtime="20201029 09:33:01.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.569" endtime="20201029 09:33:01.609"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.565" endtime="20201029 09:33:01.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.627" endtime="20201029 09:33:02.015"></status>
</kw>
<msg timestamp="20201029 09:33:02.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.510771847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.510783153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:01.624" endtime="20201029 09:33:02.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.510771847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.510783153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:02.027" endtime="20201029 09:33:02.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.050" endtime="20201029 09:33:02.054"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.616" endtime="20201029 09:33:02.056"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.612" endtime="20201029 09:33:02.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.068" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3110999999454975e-05}, {'diff': 1.655500000019572e-05}, {'diff': 1.3207999999487186e-05}, {'diff': 1.4278000000089719e-05}, {'diff': 7.874999999657462e-06}, {'diff': 1.4791999...</msg>
<status status="PASS" starttime="20201029 09:33:02.059" endtime="20201029 09:33:02.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.081" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3110999999454975e-05, 1.655500000019572e-05, 1.3207999999487186e-05, 1.4278000000089719e-05, 7.874999999657462e-06, 1.4791999999985705e-05, 7.209000000507615e-06, 1.0875000000076795e-05...</msg>
<status status="PASS" starttime="20201029 09:33:02.070" endtime="20201029 09:33:02.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.092" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.089" endtime="20201029 09:33:02.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.098" level="INFO">VALUE: [0, 1.3110999999454975e-05, 1.655500000019572e-05, 1.3207999999487186e-05, 1.4278000000089719e-05, 7.874999999657462e-06, 1.4791999999985705e-05, 7.209000000507615e-06, 1.0875000000076795e-05, 8.596999999888055e-06, 1.333300000005977e-05, 1.3667000000161522e-05, 1.3236000000027559e-05, 1.5874999999887507e-05, 0.540218834, 9.791999999286816e-06, 7.000000000090267e-06, 1.2778000000324141e-05, 1.377799999957574e-05, 6.263999999589487e-06, 1.3000000000040757e-05, 1.620899999998926e-05, 1.5013999999702321e-05, 1.144500000016535e-05, 1.4874999999747729e-05, 7.764000000243243e-06, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2250000000157968e-05, 1.2568999999906794e-05, 1.2332999999919991e-05, 1.5222000000036928e-05, 1.4903000000288102e-05, 1.2250000000157968e-05, 1.3457999999744175e-05, 1.5555999999250503e-05, 0.5509660689999993, 9.888999999319026e-06, 1.1903000000756947e-05, 9.735999999982425e-06, 1.3097000000072967e-05, 1.431899999992936e-05, 1.1223000000448735e-05, 8.556000000048414e-06, 1.422199999989715e-05, 1.6763999999724888e-05, 1.1458000000352797e-05, 1.298599999977057e-05, 1.080499999961404e-05, 1.0014000000779788e-05, 1.60970000004923e-05, 1.5013999999702321e-05, 1.5777999999855297e-05, 7.555000000714074e-06, 8.443999999663276e-06, 8.402000000629073e-06, 1.46670000003013e-05, 1.5000000000320313e-05, 8.66700000035081e-06, 1.422299999997989e-05, 9.777999999904807e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.094" endtime="20201029 09:33:02.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.083" endtime="20201029 09:33:02.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.561" endtime="20201029 09:33:02.102"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.560" endtime="20201029 09:33:02.102"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.122" endtime="20201029 09:33:02.135"></status>
</kw>
<msg timestamp="20201029 09:33:02.136" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.119" endtime="20201029 09:33:02.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.139" endtime="20201029 09:33:02.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.145" endtime="20201029 09:33:02.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.112" endtime="20201029 09:33:02.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.107" endtime="20201029 09:33:02.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.169" endtime="20201029 09:33:02.546"></status>
</kw>
<msg timestamp="20201029 09:33:02.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.051588222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.051596014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:02.166" endtime="20201029 09:33:02.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.051588222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.051596014, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:02.557" endtime="20201029 09:33:02.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.582" endtime="20201029 09:33:02.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.158" endtime="20201029 09:33:02.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.154" endtime="20201029 09:33:02.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.600" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.144400000008261e-05}, {'diff': 8.999999999481645e-06}, {'diff': 1.2667000000021744e-05}, {'diff': 8.000000000230045e-06}, {'diff': 1.0666999999742188e-05}, {'diff': 1.22500000...</msg>
<status status="PASS" starttime="20201029 09:33:02.590" endtime="20201029 09:33:02.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.611" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2250000000157968e-05, 1.2568999999906794e-05, 1.2332999999919991e-05...</msg>
<status status="PASS" starttime="20201029 09:33:02.602" endtime="20201029 09:33:02.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.622" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.620" endtime="20201029 09:33:02.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.628" level="INFO">VALUE: [0, 1.144400000008261e-05, 8.999999999481645e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0666999999742188e-05, 1.2250000000157968e-05, 1.2568999999906794e-05, 1.2332999999919991e-05, 1.5222000000036928e-05, 1.4903000000288102e-05, 1.2250000000157968e-05, 1.3457999999744175e-05, 1.5555999999250503e-05, 0.5509660689999993, 9.888999999319026e-06, 1.1903000000756947e-05, 9.735999999982425e-06, 1.3097000000072967e-05, 1.431899999992936e-05, 1.1223000000448735e-05, 8.556000000048414e-06, 1.422199999989715e-05, 1.6763999999724888e-05, 1.1458000000352797e-05, 1.298599999977057e-05, 1.080499999961404e-05, 1.0014000000779788e-05, 1.60970000004923e-05, 1.5013999999702321e-05, 1.5777999999855297e-05, 7.555000000714074e-06, 8.443999999663276e-06, 8.402000000629073e-06, 1.46670000003013e-05, 1.5000000000320313e-05, 8.66700000035081e-06, 1.422299999997989e-05, 9.777999999904807e-06, 0.5328970000000002, 1.4444000001390123e-05, 1.433399999939411e-05, 1.5152999999656913e-05, 1.1888999999598582e-05, 8.985999999211458e-06, 8.665999999379892e-06, 1.3111999999537716e-05, 1.3014000000310944e-05, 1.5902999999539702e-05, 1.5389000001420072e-05, 8.221999999946661e-06, 1.3112000001314073e-05, 1.4542000000616895e-05, 1.1917000000138955e-05, 1.2333999999114553e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1237000000718922e-05, 1.100000000064938e-05, 9.958999999781781e-06, 9.332999999500657e-06, 9.22199999919826e-06, 1.1458000001240976e-05, 8.680000000538257e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.624" endtime="20201029 09:33:02.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.614" endtime="20201029 09:33:02.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.104" endtime="20201029 09:33:02.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.103" endtime="20201029 09:33:02.632"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.657" endtime="20201029 09:33:02.673"></status>
</kw>
<msg timestamp="20201029 09:33:02.674" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.652" endtime="20201029 09:33:02.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.681" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.676" endtime="20201029 09:33:02.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.684" endtime="20201029 09:33:02.688"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.644" endtime="20201029 09:33:02.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.638" endtime="20201029 09:33:02.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.711" endtime="20201029 09:33:03.115"></status>
</kw>
<msg timestamp="20201029 09:33:03.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.603132361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.603142139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:02.707" endtime="20201029 09:33:03.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.603132361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.603142139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:03.128" endtime="20201029 09:33:03.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.152" endtime="20201029 09:33:03.156"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.699" endtime="20201029 09:33:03.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.694" endtime="20201029 09:33:03.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:03.171" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.080499999961404e-05}, {'diff': 1.0014000000779788e-05}, {'diff': 1.60970000004923e-05}, {'diff': 1.5013999999702321e-05}, {'diff': 1.5777999999855297e-05}, {'diff': 7.55500000...</msg>
<status status="PASS" starttime="20201029 09:33:03.161" endtime="20201029 09:33:03.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:03.183" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.080499999961404e-05, 1.0014000000779788e-05, 1.60970000004923e-05, 1.5013999999702321e-05, 1.5777999999855297e-05, 7.555000000714074e-06, 8.443999999663276e-06, 8.402000000629073e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:03.173" endtime="20201029 09:33:03.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.195" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:03.192" endtime="20201029 09:33:03.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.201" level="INFO">VALUE: [0, 1.080499999961404e-05, 1.0014000000779788e-05, 1.60970000004923e-05, 1.5013999999702321e-05, 1.5777999999855297e-05, 7.555000000714074e-06, 8.443999999663276e-06, 8.402000000629073e-06, 1.46670000003013e-05, 1.5000000000320313e-05, 8.66700000035081e-06, 1.422299999997989e-05, 9.777999999904807e-06, 0.5328970000000002, 1.4444000001390123e-05, 1.433399999939411e-05, 1.5152999999656913e-05, 1.1888999999598582e-05, 8.985999999211458e-06, 8.665999999379892e-06, 1.3111999999537716e-05, 1.3014000000310944e-05, 1.5902999999539702e-05, 1.5389000001420072e-05, 8.221999999946661e-06, 1.3112000001314073e-05, 1.4542000000616895e-05, 1.1917000000138955e-05, 1.2333999999114553e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1237000000718922e-05, 1.100000000064938e-05, 9.958999999781781e-06, 9.332999999500657e-06, 9.22199999919826e-06, 1.1458000001240976e-05, 8.680000000538257e-06, 0.5268497639999996, 9.11100000067222e-06, 1.5110999999734531e-05, 1.5333000000339325e-05, 9.249999999738634e-06, 9.652999999332224e-06, 1.4903000000288102e-05, 1.3569000000046572e-05, 1.1375000001478952e-05, 1.3527999998430573e-05, 1.3652999999891335e-05, 9.332999999500657e-06, 1.2111000000203376e-05, 6.58400000119741e-06, 1.1347000000938579e-05, 7.097000001010656e-06, 1.0680999999124197e-05, 9.22199999919826e-06, 9.457999999185063e-06, 1.0889000000346982e-05, 1.6236000000446893e-05, 1.2277999999810163e-05, 1.1999999999900979e-05, 9.000000000369823e-06, 9.665999998631492e-06]</msg>
<status status="PASS" starttime="20201029 09:33:03.197" endtime="20201029 09:33:03.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.186" endtime="20201029 09:33:03.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.634" endtime="20201029 09:33:03.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.633" endtime="20201029 09:33:03.206"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.227" endtime="20201029 09:33:03.241"></status>
</kw>
<msg timestamp="20201029 09:33:03.242" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.224" endtime="20201029 09:33:03.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.249" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.245" endtime="20201029 09:33:03.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.252" endtime="20201029 09:33:03.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.216" endtime="20201029 09:33:03.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.211" endtime="20201029 09:33:03.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.276" endtime="20201029 09:33:03.685"></status>
</kw>
<msg timestamp="20201029 09:33:03.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.136597486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.136610819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:03.273" endtime="20201029 09:33:03.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.136597486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.136610819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:03.697" endtime="20201029 09:33:03.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.721" endtime="20201029 09:33:03.725"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.265" endtime="20201029 09:33:03.727"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.260" endtime="20201029 09:33:03.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:03.740" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3112000001314073e-05}, {'diff': 1.4542000000616895e-05}, {'diff': 1.1917000000138955e-05}, {'diff': 1.2333999999114553e-05}, {'diff': 1.1777999999296185e-05}, {'diff': 1.32360...</msg>
<status status="PASS" starttime="20201029 09:33:03.730" endtime="20201029 09:33:03.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:03.753" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3112000001314073e-05, 1.4542000000616895e-05, 1.1917000000138955e-05, 1.2333999999114553e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1237000000718922e-05, 1.100000000064938e-...</msg>
<status status="PASS" starttime="20201029 09:33:03.742" endtime="20201029 09:33:03.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.765" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:03.762" endtime="20201029 09:33:03.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.771" level="INFO">VALUE: [0, 1.3112000001314073e-05, 1.4542000000616895e-05, 1.1917000000138955e-05, 1.2333999999114553e-05, 1.1777999999296185e-05, 1.3236000000915737e-05, 1.1237000000718922e-05, 1.100000000064938e-05, 9.958999999781781e-06, 9.332999999500657e-06, 9.22199999919826e-06, 1.1458000001240976e-05, 8.680000000538257e-06, 0.5268497639999996, 9.11100000067222e-06, 1.5110999999734531e-05, 1.5333000000339325e-05, 9.249999999738634e-06, 9.652999999332224e-06, 1.4903000000288102e-05, 1.3569000000046572e-05, 1.1375000001478952e-05, 1.3527999998430573e-05, 1.3652999999891335e-05, 9.332999999500657e-06, 1.2111000000203376e-05, 6.58400000119741e-06, 1.1347000000938579e-05, 7.097000001010656e-06, 1.0680999999124197e-05, 9.22199999919826e-06, 9.457999999185063e-06, 1.0889000000346982e-05, 1.6236000000446893e-05, 1.2277999999810163e-05, 1.1999999999900979e-05, 9.000000000369823e-06, 9.665999998631492e-06, 0.5587509169999993, 1.4333000001087726e-05, 1.4554999999916163e-05, 1.1667000000770145e-05, 9.666000000407848e-06, 8.263999999869043e-06, 1.2222000000505773e-05, 1.4000000000180535e-05, 1.799999999896329e-05, 5.6659999998487365e-06, 1.1111000000951776e-05, 7.97200000057785e-06, 1.7096999998855722e-05, 1.2028000000441352e-05, 1.4332999999311369e-05, 6.667000000959433e-06, 6.986000000708259e-06, 1.1888999999598582e-05, 1.2209000001206505e-05, 1.5985999999301725e-05, 8.444000000551455e-06, 1.1888999999598582e-05, 1.512499999911654e-05, 1.3457999999744175e-05, 1.387500000049613e-05]</msg>
<status status="PASS" starttime="20201029 09:33:03.767" endtime="20201029 09:33:03.772"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.756" endtime="20201029 09:33:03.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.208" endtime="20201029 09:33:03.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.207" endtime="20201029 09:33:03.776"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.797" endtime="20201029 09:33:03.812"></status>
</kw>
<msg timestamp="20201029 09:33:03.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.794" endtime="20201029 09:33:03.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.815" endtime="20201029 09:33:03.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.822" endtime="20201029 09:33:03.828"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.786" endtime="20201029 09:33:03.830"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.781" endtime="20201029 09:33:03.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.851" endtime="20201029 09:33:04.268"></status>
</kw>
<msg timestamp="20201029 09:33:04.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.664032319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.664046097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:03.847" endtime="20201029 09:33:04.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.664032319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.664046097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:04.280" endtime="20201029 09:33:04.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.304" endtime="20201029 09:33:04.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.839" endtime="20201029 09:33:04.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.834" endtime="20201029 09:33:04.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.323" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2111000000203376e-05}, {'diff': 6.58400000119741e-06}, {'diff': 1.1347000000938579e-05}, {'diff': 7.097000001010656e-06}, {'diff': 1.0680999999124197e-05}, {'diff': 9.22199999...</msg>
<status status="PASS" starttime="20201029 09:33:04.313" endtime="20201029 09:33:04.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.334" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2111000000203376e-05, 6.58400000119741e-06, 1.1347000000938579e-05, 7.097000001010656e-06, 1.0680999999124197e-05, 9.22199999919826e-06, 9.457999999185063e-06, 1.0889000000346982e-05, 1...</msg>
<status status="PASS" starttime="20201029 09:33:04.325" endtime="20201029 09:33:04.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.346" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:04.343" endtime="20201029 09:33:04.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.352" level="INFO">VALUE: [0, 1.2111000000203376e-05, 6.58400000119741e-06, 1.1347000000938579e-05, 7.097000001010656e-06, 1.0680999999124197e-05, 9.22199999919826e-06, 9.457999999185063e-06, 1.0889000000346982e-05, 1.6236000000446893e-05, 1.2277999999810163e-05, 1.1999999999900979e-05, 9.000000000369823e-06, 9.665999998631492e-06, 0.5587509169999993, 1.4333000001087726e-05, 1.4554999999916163e-05, 1.1667000000770145e-05, 9.666000000407848e-06, 8.263999999869043e-06, 1.2222000000505773e-05, 1.4000000000180535e-05, 1.799999999896329e-05, 5.6659999998487365e-06, 1.1111000000951776e-05, 7.97200000057785e-06, 1.7096999998855722e-05, 1.2028000000441352e-05, 1.4332999999311369e-05, 6.667000000959433e-06, 6.986000000708259e-06, 1.1888999999598582e-05, 1.2209000001206505e-05, 1.5985999999301725e-05, 8.444000000551455e-06, 1.1888999999598582e-05, 1.512499999911654e-05, 1.3457999999744175e-05, 1.387500000049613e-05, 0.5577652079999993, 1.0764000000662577e-05, 1.1681000000152153e-05, 1.2778000000324141e-05, 1.3110999999454975e-05, 1.1347000000938579e-05, 1.3221999999757372e-05, 9.679999999789857e-06, 1.2014000001059344e-05, 1.1778000001072542e-05, 1.4568999999298171e-05, 1.0542000000057783e-05, 1.1222999999560557e-05, 1.1888999999598582e-05, 1.576400000047329e-05, 1.2695000000562118e-05, 1.1999999999900979e-05, 1.744399999914492e-05, 7.5000000006042455e-06, 1.4777000000520957e-05, 1.1333999999862954e-05, 1.1888999999598582e-05, 1.3570000000129312e-05, 1.0889000000346982e-05, 8.986000000987815e-06]</msg>
<status status="PASS" starttime="20201029 09:33:04.348" endtime="20201029 09:33:04.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.337" endtime="20201029 09:33:04.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.778" endtime="20201029 09:33:04.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.777" endtime="20201029 09:33:04.356"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.378" endtime="20201029 09:33:04.393"></status>
</kw>
<msg timestamp="20201029 09:33:04.394" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.375" endtime="20201029 09:33:04.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.401" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.397" endtime="20201029 09:33:04.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.404" endtime="20201029 09:33:04.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.367" endtime="20201029 09:33:04.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.362" endtime="20201029 09:33:04.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.428" endtime="20201029 09:33:04.874"></status>
</kw>
<msg timestamp="20201029 09:33:04.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.223365264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.223371306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:04.425" endtime="20201029 09:33:04.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.223365264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.223371306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:04.888" endtime="20201029 09:33:04.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.911" endtime="20201029 09:33:04.915"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.417" endtime="20201029 09:33:04.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.412" endtime="20201029 09:33:04.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.929" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7096999998855722e-05}, {'diff': 1.2028000000441352e-05}, {'diff': 1.4332999999311369e-05}, {'diff': 6.667000000959433e-06}, {'diff': 6.986000000708259e-06}, {'diff': 1.1888999...</msg>
<status status="PASS" starttime="20201029 09:33:04.919" endtime="20201029 09:33:04.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.940" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.7096999998855722e-05, 1.2028000000441352e-05, 1.4332999999311369e-05, 6.667000000959433e-06, 6.986000000708259e-06, 1.1888999999598582e-05, 1.2209000001206505e-05, 1.5985999999301725e-0...</msg>
<status status="PASS" starttime="20201029 09:33:04.931" endtime="20201029 09:33:04.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.951" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:04.949" endtime="20201029 09:33:04.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.957" level="INFO">VALUE: [0, 1.7096999998855722e-05, 1.2028000000441352e-05, 1.4332999999311369e-05, 6.667000000959433e-06, 6.986000000708259e-06, 1.1888999999598582e-05, 1.2209000001206505e-05, 1.5985999999301725e-05, 8.444000000551455e-06, 1.1888999999598582e-05, 1.512499999911654e-05, 1.3457999999744175e-05, 1.387500000049613e-05, 0.5577652079999993, 1.0764000000662577e-05, 1.1681000000152153e-05, 1.2778000000324141e-05, 1.3110999999454975e-05, 1.1347000000938579e-05, 1.3221999999757372e-05, 9.679999999789857e-06, 1.2014000001059344e-05, 1.1778000001072542e-05, 1.4568999999298171e-05, 1.0542000000057783e-05, 1.1222999999560557e-05, 1.1888999999598582e-05, 1.576400000047329e-05, 1.2695000000562118e-05, 1.1999999999900979e-05, 1.744399999914492e-05, 7.5000000006042455e-06, 1.4777000000520957e-05, 1.1333999999862954e-05, 1.1888999999598582e-05, 1.3570000000129312e-05, 1.0889000000346982e-05, 8.986000000987815e-06, 0.5701304440000001, 1.2458999998798959e-05, 1.53610000008797e-05, 1.1221999999477816e-05, 1.0665999999659448e-05, 1.3665999999190603e-05, 1.600000000046009e-05, 1.734700000000089e-05, 7.3329999992211015e-06, 1.233300000080817e-05, 1.5569000000326128e-05, 1.2264000000428155e-05, 5.416999998786309e-06, 1.0778000000044585e-05, 1.4541000000534154e-05, 9.125000000054229e-06, 1.2513999999796965e-05, 1.3014000000310944e-05, 1.2667000000021744e-05, 1.2667000000021744e-05, 7.3890000003018486e-06, 1.3097000000072967e-05, 8.000000001118224e-06, 7.570000001067001e-06, 1.1512999998686269e-05]</msg>
<status status="PASS" starttime="20201029 09:33:04.954" endtime="20201029 09:33:04.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.943" endtime="20201029 09:33:04.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.358" endtime="20201029 09:33:04.961"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.357" endtime="20201029 09:33:04.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.969" endtime="20201029 09:33:04.962"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:32:53.818" endtime="20201029 09:33:04.964" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:04.981" endtime="20201029 09:33:05.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.977" endtime="20201029 09:33:05.006"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.039" endtime="20201029 09:33:05.057"></status>
</kw>
<msg timestamp="20201029 09:33:05.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.036" endtime="20201029 09:33:05.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.060" endtime="20201029 09:33:05.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.071" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:05.067" endtime="20201029 09:33:05.072"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:05.028" endtime="20201029 09:33:05.074"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:05.022" endtime="20201029 09:33:05.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.019" endtime="20201029 09:33:05.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:05.084" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:05.082" endtime="20201029 09:33:05.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.078" endtime="20201029 09:33:05.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.018" endtime="20201029 09:33:05.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.016" endtime="20201029 09:33:05.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.087" endtime="20201029 09:33:05.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.012" endtime="20201029 09:33:05.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.007" endtime="20201029 09:33:05.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.975" endtime="20201029 09:33:05.094"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.119" endtime="20201029 09:33:05.133"></status>
</kw>
<msg timestamp="20201029 09:33:05.134" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.116" endtime="20201029 09:33:05.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.140" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.136" endtime="20201029 09:33:05.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.143" endtime="20201029 09:33:05.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.106" endtime="20201029 09:33:05.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.102" endtime="20201029 09:33:05.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.166" endtime="20201029 09:33:05.517"></status>
</kw>
<msg timestamp="20201029 09:33:05.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129234347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129235889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.162" endtime="20201029 09:33:05.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129234347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129235889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.527" endtime="20201029 09:33:05.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.546" endtime="20201029 09:33:05.550"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.155" endtime="20201029 09:33:05.551"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.151" endtime="20201029 09:33:05.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:05.563" level="INFO">${RESULT} = [{'diff': 1.541999999993271e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.500000000015378e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.5409999999937973e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:05.554" endtime="20201029 09:33:05.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:05.572" level="INFO">${OVERHEAD} = {'diff': [1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.500000000015378e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5270...</msg>
<status status="PASS" starttime="20201029 09:33:05.565" endtime="20201029 09:33:05.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.582" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:05.580" endtime="20201029 09:33:05.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.589" level="INFO">VALUE: [1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.500000000015378e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.541000000021553e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.555000000014184e-06, 1.596999999992077e-06, 1.541999999993271e-06, 1.5560000000136576e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.4999999999876223e-06, 1.52800000000064e-06, 1.5560000000136576e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.514000000008009e-06, 1.5560000000136576e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5839999999989196e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.596999999992077e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06]</msg>
<status status="PASS" starttime="20201029 09:33:05.586" endtime="20201029 09:33:05.590"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.574" endtime="20201029 09:33:05.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.098" endtime="20201029 09:33:05.593"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.097" endtime="20201029 09:33:05.594"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.615" endtime="20201029 09:33:05.629"></status>
</kw>
<msg timestamp="20201029 09:33:05.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.611" endtime="20201029 09:33:05.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.637" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.633" endtime="20201029 09:33:05.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.639" endtime="20201029 09:33:05.643"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.604" endtime="20201029 09:33:05.644"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.599" endtime="20201029 09:33:05.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.662" endtime="20201029 09:33:06.033"></status>
</kw>
<msg timestamp="20201029 09:33:06.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129500583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129502125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.659" endtime="20201029 09:33:06.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129500583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129502125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.044" endtime="20201029 09:33:06.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.067" endtime="20201029 09:33:06.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.652" endtime="20201029 09:33:06.072"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.647" endtime="20201029 09:33:06.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.085" level="INFO">${RESULT} = [{'diff': 1.541999999993271e-06}, {'diff': 1.5839999999989196e-06}, {'diff': 1.5420000000210266e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.5420000000210266e-06}, {'diff': 1.541999999993271e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:06.075" endtime="20201029 09:33:06.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.097" level="INFO">${OVERHEAD} = {'diff': [1.541999999993271e-06, 1.5839999999989196e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5...</msg>
<status status="PASS" starttime="20201029 09:33:06.087" endtime="20201029 09:33:06.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.107" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:06.104" endtime="20201029 09:33:06.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.112" level="INFO">VALUE: [1.541999999993271e-06, 1.5839999999989196e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.596999999992077e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.5270000000011663e-06, 1.5410000000493085e-06, 1.5409999999382862e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.4860000000505025e-06, 1.5559999999581464e-06, 1.5420000000210266e-06, 1.5270000000011663e-06, 1.5140000000357645e-06, 1.5409999999382862e-06, 1.5550000000974507e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5419999999100042e-06, 1.5420000000210266e-06, 1.4999999999876223e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5139999999247422e-06, 1.5549999999864283e-06, 1.5410000000493085e-06, 1.5279999999728844e-06, 1.5139999999247422e-06, 1.5560000000691687e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5560000000691687e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5409999999382862e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5419999999100042e-06, 1.5560000000691687e-06, 1.5419999999100042e-06, 1.5420000000210266e-06, 1.5969999999088103e-06]</msg>
<status status="PASS" starttime="20201029 09:33:06.109" endtime="20201029 09:33:06.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.098" endtime="20201029 09:33:06.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.596" endtime="20201029 09:33:06.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.594" endtime="20201029 09:33:06.200"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.220" endtime="20201029 09:33:06.235"></status>
</kw>
<msg timestamp="20201029 09:33:06.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.217" endtime="20201029 09:33:06.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.242" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.238" endtime="20201029 09:33:06.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.245" endtime="20201029 09:33:06.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.210" endtime="20201029 09:33:06.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.205" endtime="20201029 09:33:06.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.268" endtime="20201029 09:33:06.626"></status>
</kw>
<msg timestamp="20201029 09:33:06.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.614519875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.614521431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.265" endtime="20201029 09:33:06.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.614519875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.614521431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.638" endtime="20201029 09:33:06.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.660" endtime="20201029 09:33:06.664"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.258" endtime="20201029 09:33:06.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.253" endtime="20201029 09:33:06.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.680" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5560000000691687e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5409999999382862e-06}, {'diff': 1.5560000000691687e-...</msg>
<status status="PASS" starttime="20201029 09:33:06.668" endtime="20201029 09:33:06.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.690" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5560000000691687e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5409999999382862e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5420000000210266e-06...</msg>
<status status="PASS" starttime="20201029 09:33:06.682" endtime="20201029 09:33:06.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.700" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:06.698" endtime="20201029 09:33:06.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.706" level="INFO">VALUE: [1.5559999999581464e-06, 1.5560000000691687e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5409999999382862e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5419999999100042e-06, 1.5560000000691687e-06, 1.5419999999100042e-06, 1.5420000000210266e-06, 1.5969999999088103e-06, 1.5420000001320489e-06, 1.5829999999716904e-06, 1.5270000000011663e-06, 1.5419999999100042e-06, 1.4999999999876223e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5689999999235482e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5409999998272639e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.4579999998431958e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5700000000062886e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.598000000102573e-06, 1.527999999861862e-06, 1.5550000000974507e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5970000000198326e-06, 1.5270000000011663e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5280000000839067e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5129999999530241e-06, 1.5280000000839067e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5280000000839067e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.4860000001615248e-06, 1.5410000000493085e-06, 1.5970000000198326e-06, 1.5419999999100042e-06]</msg>
<status status="PASS" starttime="20201029 09:33:06.703" endtime="20201029 09:33:06.708"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.692" endtime="20201029 09:33:06.709"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.202" endtime="20201029 09:33:06.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.201" endtime="20201029 09:33:06.711"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.731" endtime="20201029 09:33:06.746"></status>
</kw>
<msg timestamp="20201029 09:33:06.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.728" endtime="20201029 09:33:06.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.749" endtime="20201029 09:33:06.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.756" endtime="20201029 09:33:06.759"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.721" endtime="20201029 09:33:06.761"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.716" endtime="20201029 09:33:06.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.780" endtime="20201029 09:33:07.154"></status>
</kw>
<msg timestamp="20201029 09:33:07.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.21092775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.210929292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:06.777" endtime="20201029 09:33:07.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.21092775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.210929292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:07.166" endtime="20201029 09:33:07.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.195" endtime="20201029 09:33:07.199"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.768" endtime="20201029 09:33:07.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.764" endtime="20201029 09:33:07.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.216" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999999100042e-06}, {'diff': 1.5129999999530241e-06}, {'diff': 1.5280000000839067e-06}, {'diff': 1.5419999999100042e-...</msg>
<status status="PASS" starttime="20201029 09:33:07.205" endtime="20201029 09:33:07.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.230" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5129999999530241e-06, 1.5280000000839067e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5280000000839067e-06...</msg>
<status status="PASS" starttime="20201029 09:33:07.219" endtime="20201029 09:33:07.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.240" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:07.238" endtime="20201029 09:33:07.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.246" level="INFO">VALUE: [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5129999999530241e-06, 1.5280000000839067e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5280000000839067e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.4860000001615248e-06, 1.5410000000493085e-06, 1.5970000000198326e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.6119999999286705e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5409999998272639e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5409999998272639e-06, 1.5280000000839067e-06, 1.5419999999100042e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5700000000062886e-06, 1.5410000000493085e-06, 1.5700000000062886e-06, 1.5280000000839067e-06, 1.527999999861862e-06, 1.554999999875406e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5280000000839067e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5550000000974507e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.5140000000357645e-06, 1.5280000000839067e-06, 1.4999999999876223e-06, 1.5410000000493085e-06, 1.5970000000198326e-06, 1.5559999999581464e-06, 1.5419999999100042e-06, 1.5410000000493085e-06]</msg>
<status status="PASS" starttime="20201029 09:33:07.242" endtime="20201029 09:33:07.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.231" endtime="20201029 09:33:07.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.713" endtime="20201029 09:33:07.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.712" endtime="20201029 09:33:07.251"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.272" endtime="20201029 09:33:07.287"></status>
</kw>
<msg timestamp="20201029 09:33:07.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.269" endtime="20201029 09:33:07.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.294" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.290" endtime="20201029 09:33:07.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.297" endtime="20201029 09:33:07.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.262" endtime="20201029 09:33:07.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.256" endtime="20201029 09:33:07.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.320" endtime="20201029 09:33:07.687"></status>
</kw>
<msg timestamp="20201029 09:33:07.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.712497792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.712499347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.317" endtime="20201029 09:33:07.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.712497792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.712499347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.698" endtime="20201029 09:33:07.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.720" endtime="20201029 09:33:07.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.309" endtime="20201029 09:33:07.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.305" endtime="20201029 09:33:07.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.739" level="INFO">${RESULT} = [{'diff': 1.5550000000974507e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.527999999861862e-06}, {'diff': 1.5840000000544308e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.4999999999876223e-0...</msg>
<status status="PASS" starttime="20201029 09:33:07.729" endtime="20201029 09:33:07.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.750" level="INFO">${OVERHEAD} = {'diff': [1.5550000000974507e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.5140000000357645e-06, 1.5280000000839067e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:07.741" endtime="20201029 09:33:07.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.761" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:07.758" endtime="20201029 09:33:07.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.766" level="INFO">VALUE: [1.5550000000974507e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.5140000000357645e-06, 1.5280000000839067e-06, 1.4999999999876223e-06, 1.5410000000493085e-06, 1.5970000000198326e-06, 1.5559999999581464e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.500000000209667e-06, 1.5419999996879596e-06, 1.5970000002418772e-06, 1.527999999861862e-06, 1.5690000001455928e-06, 1.527999999861862e-06, 1.5269999997791217e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5129999999530241e-06, 1.458000000287285e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.5550000003194953e-06, 1.5419999996879596e-06, 1.5970000002418772e-06, 1.5419999996879596e-06, 1.569999999784244e-06, 1.5269999997791217e-06, 1.5420000001320489e-06, 1.4999999997655777e-06, 1.596999999797788e-06, 1.5410000000493085e-06, 1.4860000003835694e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5829999999716904e-06, 1.527999999861862e-06, 1.527000000223211e-06, 1.500000000209667e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 09:33:07.763" endtime="20201029 09:33:07.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.752" endtime="20201029 09:33:07.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.252" endtime="20201029 09:33:07.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.251" endtime="20201029 09:33:07.771"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.792" endtime="20201029 09:33:07.806"></status>
</kw>
<msg timestamp="20201029 09:33:07.808" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.788" endtime="20201029 09:33:07.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.810" endtime="20201029 09:33:07.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.816" endtime="20201029 09:33:07.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.781" endtime="20201029 09:33:07.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.776" endtime="20201029 09:33:07.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.839" endtime="20201029 09:33:08.229"></status>
</kw>
<msg timestamp="20201029 09:33:08.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.242497889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.242499431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.836" endtime="20201029 09:33:08.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.242497889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.242499431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.240" endtime="20201029 09:33:08.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.262" endtime="20201029 09:33:08.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.829" endtime="20201029 09:33:08.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.824" endtime="20201029 09:33:08.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.281" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5550000003194953e-06}, {'diff': 1.527999999861862e-06}, {'diff': 1.5410000000493085e-06...</msg>
<status status="PASS" starttime="20201029 09:33:08.271" endtime="20201029 09:33:08.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.293" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:08.283" endtime="20201029 09:33:08.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.303" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:08.301" endtime="20201029 09:33:08.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.309" level="INFO">VALUE: [1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5829999999716904e-06, 1.527999999861862e-06, 1.527000000223211e-06, 1.500000000209667e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.527000000223211e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.5269999997791217e-06, 1.5560000004022356e-06, 1.5410000000493085e-06, 1.4719999996692934e-06, 1.5689999997015036e-06, 1.527999999861862e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.500000000209667e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.4720000001133826e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.4860000003835694e-06]</msg>
<status status="PASS" starttime="20201029 09:33:08.305" endtime="20201029 09:33:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.295" endtime="20201029 09:33:08.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.773" endtime="20201029 09:33:08.313"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.772" endtime="20201029 09:33:08.314"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.334" endtime="20201029 09:33:08.348"></status>
</kw>
<msg timestamp="20201029 09:33:08.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.331" endtime="20201029 09:33:08.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.352" endtime="20201029 09:33:08.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.358" endtime="20201029 09:33:08.362"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.323" endtime="20201029 09:33:08.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.319" endtime="20201029 09:33:08.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.381" endtime="20201029 09:33:08.766"></status>
</kw>
<msg timestamp="20201029 09:33:08.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.749702764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.749704306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.378" endtime="20201029 09:33:08.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.749702764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.749704306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.778" endtime="20201029 09:33:08.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.801" endtime="20201029 09:33:08.805"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.371" endtime="20201029 09:33:08.807"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.366" endtime="20201029 09:33:08.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.820" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5269999997791217e-...</msg>
<status status="PASS" starttime="20201029 09:33:08.810" endtime="20201029 09:33:08.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.830" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.5419999996879596e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201029 09:33:08.822" endtime="20201029 09:33:08.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.841" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:08.838" endtime="20201029 09:33:08.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.847" level="INFO">VALUE: [1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.4860000003835694e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.4999999997655777e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5829999999716904e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5829999999716904e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.596999999797788e-06, 1.5269999997791217e-06, 1.5269999997791217e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5280000003059513e-06]</msg>
<status status="PASS" starttime="20201029 09:33:08.843" endtime="20201029 09:33:08.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.832" endtime="20201029 09:33:08.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.315" endtime="20201029 09:33:08.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.315" endtime="20201029 09:33:08.852"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.879" endtime="20201029 09:33:08.893"></status>
</kw>
<msg timestamp="20201029 09:33:08.894" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.870" endtime="20201029 09:33:08.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.896" endtime="20201029 09:33:08.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.903" endtime="20201029 09:33:08.907"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.862" endtime="20201029 09:33:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.857" endtime="20201029 09:33:08.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.927" endtime="20201029 09:33:09.305"></status>
</kw>
<msg timestamp="20201029 09:33:09.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.282237639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.282239208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.923" endtime="20201029 09:33:09.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.282237639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.282239208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.317" endtime="20201029 09:33:09.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.340" endtime="20201029 09:33:09.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.916" endtime="20201029 09:33:09.345"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.911" endtime="20201029 09:33:09.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.358" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-...</msg>
<status status="PASS" starttime="20201029 09:33:09.348" endtime="20201029 09:33:09.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.370" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.596999999797788e-06, 1.5269999997791217e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:09.360" endtime="20201029 09:33:09.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.380" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:09.378" endtime="20201029 09:33:09.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.386" level="INFO">VALUE: [1.5690000001455928e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.596999999797788e-06, 1.5269999997791217e-06, 1.5269999997791217e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5139999995916753e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.4859999999394802e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.527999999861862e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5970000002418772e-06, 1.5409999996052193e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 09:33:09.383" endtime="20201029 09:33:09.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.372" endtime="20201029 09:33:09.390"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.853" endtime="20201029 09:33:09.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.852" endtime="20201029 09:33:09.391"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.412" endtime="20201029 09:33:09.427"></status>
</kw>
<msg timestamp="20201029 09:33:09.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.409" endtime="20201029 09:33:09.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.435" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.431" endtime="20201029 09:33:09.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.437" endtime="20201029 09:33:09.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.401" endtime="20201029 09:33:09.442"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.397" endtime="20201029 09:33:09.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.461" endtime="20201029 09:33:09.877"></status>
</kw>
<msg timestamp="20201029 09:33:09.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.815067347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.815068847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.457" endtime="20201029 09:33:09.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.815067347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.815068847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.890" endtime="20201029 09:33:09.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.916" endtime="20201029 09:33:09.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.450" endtime="20201029 09:33:09.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.445" endtime="20201029 09:33:09.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.940" level="INFO">${RESULT} = [{'diff': 1.500000000209667e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5970000002418772e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201029 09:33:09.928" endtime="20201029 09:33:09.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.955" level="INFO">${OVERHEAD} = {'diff': [1.500000000209667e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5970000002418772e-06, 1.5409999996052193e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:09.943" endtime="20201029 09:33:09.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.969" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:09.966" endtime="20201029 09:33:09.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.977" level="INFO">VALUE: [1.500000000209667e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5970000002418772e-06, 1.5409999996052193e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5000000006537562e-06, 1.596999999797788e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5129999999530241e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5280000003059513e-06]</msg>
<status status="PASS" starttime="20201029 09:33:09.973" endtime="20201029 09:33:09.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.958" endtime="20201029 09:33:09.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.393" endtime="20201029 09:33:09.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.392" endtime="20201029 09:33:09.985"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.010" endtime="20201029 09:33:10.024"></status>
</kw>
<msg timestamp="20201029 09:33:10.025" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.007" endtime="20201029 09:33:10.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.028" endtime="20201029 09:33:10.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.034" endtime="20201029 09:33:10.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.998" endtime="20201029 09:33:10.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.992" endtime="20201029 09:33:10.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.057" endtime="20201029 09:33:10.420"></status>
</kw>
<msg timestamp="20201029 09:33:10.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.338734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.338736319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.054" endtime="20201029 09:33:10.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.338734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.338736319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.432" endtime="20201029 09:33:10.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.454" endtime="20201029 09:33:10.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.047" endtime="20201029 09:33:10.460"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.042" endtime="20201029 09:33:10.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.472" level="INFO">${RESULT} = [{'diff': 1.5409999996052193e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5279999994177729e-06}, {'diff': 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201029 09:33:10.463" endtime="20201029 09:33:10.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.483" level="INFO">${OVERHEAD} = {'diff': [1.5409999996052193e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5129999999530241e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:10.474" endtime="20201029 09:33:10.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.493" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:10.491" endtime="20201029 09:33:10.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.499" level="INFO">VALUE: [1.5409999996052193e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5129999999530241e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5000000006537562e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5410000004933977e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.485999999495391e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 09:33:10.495" endtime="20201029 09:33:10.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.485" endtime="20201029 09:33:10.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.987" endtime="20201029 09:33:10.503"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.986" endtime="20201029 09:33:10.504"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.528" endtime="20201029 09:33:10.552"></status>
</kw>
<msg timestamp="20201029 09:33:10.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.521" endtime="20201029 09:33:10.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.562" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.556" endtime="20201029 09:33:10.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.569" endtime="20201029 09:33:10.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.513" endtime="20201029 09:33:10.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.509" endtime="20201029 09:33:10.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.594" endtime="20201029 09:33:10.951"></status>
</kw>
<msg timestamp="20201029 09:33:10.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.927434319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.927435861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.591" endtime="20201029 09:33:10.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.927434319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.927435861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.962" endtime="20201029 09:33:10.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.984" endtime="20201029 09:33:10.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.584" endtime="20201029 09:33:10.989"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.579" endtime="20201029 09:33:10.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.002" level="INFO">${RESULT} = [{'diff': 1.542000000576138e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5279999994177729e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:10.992" endtime="20201029 09:33:11.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.014" level="INFO">${OVERHEAD} = {'diff': [1.542000000576138e-06, 1.542000000576138e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.485999999495391e-06, 1.5419999996879596e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:33:11.004" endtime="20201029 09:33:11.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.024" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.022" endtime="20201029 09:33:11.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.030" level="INFO">VALUE: [1.542000000576138e-06, 1.542000000576138e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.485999999495391e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.4860000003835694e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.527000000223211e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5269999993350325e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.596999999797788e-06, 1.5410000004933977e-06]</msg>
<status status="PASS" starttime="20201029 09:33:11.026" endtime="20201029 09:33:11.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.016" endtime="20201029 09:33:11.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.506" endtime="20201029 09:33:11.034"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.505" endtime="20201029 09:33:11.035"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.055" endtime="20201029 09:33:11.070"></status>
</kw>
<msg timestamp="20201029 09:33:11.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.052" endtime="20201029 09:33:11.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.077" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.073" endtime="20201029 09:33:11.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.079" endtime="20201029 09:33:11.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.045" endtime="20201029 09:33:11.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.040" endtime="20201029 09:33:11.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.102" endtime="20201029 09:33:11.480"></status>
</kw>
<msg timestamp="20201029 09:33:11.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.436148472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.43615, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:33:11.099" endtime="20201029 09:33:11.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.436148472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.43615, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 09:33:11.494" endtime="20201029 09:33:11.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.521" endtime="20201029 09:33:11.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.092" endtime="20201029 09:33:11.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.087" endtime="20201029 09:33:11.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.540" level="INFO">${RESULT} = [{'diff': 1.5279999994177729e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5279999994177729e-...</msg>
<status status="PASS" starttime="20201029 09:33:11.531" endtime="20201029 09:33:11.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.553" level="INFO">${OVERHEAD} = {'diff': [1.5279999994177729e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5409999996052193e-06...</msg>
<status status="PASS" starttime="20201029 09:33:11.542" endtime="20201029 09:33:11.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.563" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.561" endtime="20201029 09:33:11.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.569" level="INFO">VALUE: [1.5279999994177729e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.596999999797788e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5979999998805283e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.485999999495391e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.596999999797788e-06, 1.5410000004933977e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 09:33:11.566" endtime="20201029 09:33:11.577"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.555" endtime="20201029 09:33:11.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.037" endtime="20201029 09:33:11.581"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.036" endtime="20201029 09:33:11.581"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.603" endtime="20201029 09:33:11.618"></status>
</kw>
<msg timestamp="20201029 09:33:11.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.599" endtime="20201029 09:33:11.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.625" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.621" endtime="20201029 09:33:11.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.628" endtime="20201029 09:33:11.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.591" endtime="20201029 09:33:11.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.586" endtime="20201029 09:33:11.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.651" endtime="20201029 09:33:12.056"></status>
</kw>
<msg timestamp="20201029 09:33:12.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.950809736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.950811278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.648" endtime="20201029 09:33:12.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.950809736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.950811278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.068" endtime="20201029 09:33:12.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.090" endtime="20201029 09:33:12.094"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.641" endtime="20201029 09:33:12.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.636" endtime="20201029 09:33:12.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.109" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5279999994177729e-06...</msg>
<status status="PASS" starttime="20201029 09:33:12.099" endtime="20201029 09:33:12.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.119" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:12.111" endtime="20201029 09:33:12.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.130" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.128" endtime="20201029 09:33:12.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.136" level="INFO">VALUE: [1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.485999999495391e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.596999999797788e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.5970000006859664e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.4719999992252042e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5140000000357645e-06, 1.596999999797788e-06, 1.485999999495391e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4720000001133826e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.132" endtime="20201029 09:33:12.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.121" endtime="20201029 09:33:12.139"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.583" endtime="20201029 09:33:12.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.582" endtime="20201029 09:33:12.141"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.161" endtime="20201029 09:33:12.178"></status>
</kw>
<msg timestamp="20201029 09:33:12.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.158" endtime="20201029 09:33:12.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.181" endtime="20201029 09:33:12.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.188" endtime="20201029 09:33:12.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.151" endtime="20201029 09:33:12.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.146" endtime="20201029 09:33:12.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.214" endtime="20201029 09:33:12.602"></status>
</kw>
<msg timestamp="20201029 09:33:12.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.487774181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.487775722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.211" endtime="20201029 09:33:12.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.487774181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.487775722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.616" endtime="20201029 09:33:12.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.643" endtime="20201029 09:33:12.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.203" endtime="20201029 09:33:12.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.197" endtime="20201029 09:33:12.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.665" level="INFO">${RESULT} = [{'diff': 1.5410000004933977e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.4720000001133826e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201029 09:33:12.655" endtime="20201029 09:33:12.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.677" level="INFO">${OVERHEAD} = {'diff': [1.5410000004933977e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4720000001133826e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201029 09:33:12.667" endtime="20201029 09:33:12.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.687" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:12.685" endtime="20201029 09:33:12.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.693" level="INFO">VALUE: [1.5410000004933977e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4720000001133826e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5000000006537562e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.596999999797788e-06]</msg>
<status status="PASS" starttime="20201029 09:33:12.690" endtime="20201029 09:33:12.695"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.679" endtime="20201029 09:33:12.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.143" endtime="20201029 09:33:12.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.142" endtime="20201029 09:33:12.698"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.719" endtime="20201029 09:33:12.734"></status>
</kw>
<msg timestamp="20201029 09:33:12.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.716" endtime="20201029 09:33:12.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.741" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.737" endtime="20201029 09:33:12.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.743" endtime="20201029 09:33:12.747"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.708" endtime="20201029 09:33:12.749"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.704" endtime="20201029 09:33:12.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.767" endtime="20201029 09:33:13.162"></status>
</kw>
<msg timestamp="20201029 09:33:13.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.036928208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.036929708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.764" endtime="20201029 09:33:13.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.036928208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.036929708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.174" endtime="20201029 09:33:13.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.197" endtime="20201029 09:33:13.202"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.756" endtime="20201029 09:33:13.203"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.752" endtime="20201029 09:33:13.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.216" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5279999994177729e-06}, {'diff': 1.542000000576138e-06...</msg>
<status status="PASS" starttime="20201029 09:33:13.206" endtime="20201029 09:33:13.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.229" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:13.218" endtime="20201029 09:33:13.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.240" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:13.237" endtime="20201029 09:33:13.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.246" level="INFO">VALUE: [1.4999999997655777e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5129999999530241e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5560000008463248e-06, 1.4999999997655777e-06, 1.5410000004933977e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5700000002283332e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.485999999495391e-06, 1.542000000576138e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 09:33:13.242" endtime="20201029 09:33:13.248"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.231" endtime="20201029 09:33:13.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.700" endtime="20201029 09:33:13.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.699" endtime="20201029 09:33:13.251"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.272" endtime="20201029 09:33:13.288"></status>
</kw>
<msg timestamp="20201029 09:33:13.289" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.269" endtime="20201029 09:33:13.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.295" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.291" endtime="20201029 09:33:13.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.298" endtime="20201029 09:33:13.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.262" endtime="20201029 09:33:13.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.257" endtime="20201029 09:33:13.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.321" endtime="20201029 09:33:13.718"></status>
</kw>
<msg timestamp="20201029 09:33:13.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.581778694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.581780236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.318" endtime="20201029 09:33:13.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.581778694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.581780236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.730" endtime="20201029 09:33:13.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.752" endtime="20201029 09:33:13.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.311" endtime="20201029 09:33:13.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.306" endtime="20201029 09:33:13.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.771" level="INFO">${RESULT} = [{'diff': 1.542000000576138e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5419999996879596e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:13.761" endtime="20201029 09:33:13.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.782" level="INFO">${OVERHEAD} = {'diff': [1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.527000000223211e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:33:13.773" endtime="20201029 09:33:13.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.792" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:13.790" endtime="20201029 09:33:13.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.799" level="INFO">VALUE: [1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5280000003059513e-06, 1.513999999147586e-06, 1.612000000150715e-06, 1.5410000013815761e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5410000013815761e-06, 1.5550000007635845e-06, 1.5970000006859664e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.624999999449983e-06, 1.527000000223211e-06, 1.5829999995276012e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.62500000122634e-06, 1.4860000003835694e-06, 1.5969999989096095e-06, 1.5690000001455928e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 09:33:13.794" endtime="20201029 09:33:13.800"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.784" endtime="20201029 09:33:13.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.253" endtime="20201029 09:33:13.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.252" endtime="20201029 09:33:13.804"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.825" endtime="20201029 09:33:13.845"></status>
</kw>
<msg timestamp="20201029 09:33:13.846" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.821" endtime="20201029 09:33:13.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.849" endtime="20201029 09:33:13.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.855" endtime="20201029 09:33:13.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.814" endtime="20201029 09:33:13.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.809" endtime="20201029 09:33:13.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.879" endtime="20201029 09:33:14.258"></status>
</kw>
<msg timestamp="20201029 09:33:14.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.126990306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.126991833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.875" endtime="20201029 09:33:14.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.126990306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.126991833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.269" endtime="20201029 09:33:14.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.292" endtime="20201029 09:33:14.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.868" endtime="20201029 09:33:14.298"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.863" endtime="20201029 09:33:14.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.310" level="INFO">${RESULT} = [{'diff': 1.527000000223211e-06}, {'diff': 1.5829999995276012e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201029 09:33:14.301" endtime="20201029 09:33:14.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.322" level="INFO">${OVERHEAD} = {'diff': [1.527000000223211e-06, 1.5829999995276012e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:14.312" endtime="20201029 09:33:14.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.332" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.330" endtime="20201029 09:33:14.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.338" level="INFO">VALUE: [1.527000000223211e-06, 1.5829999995276012e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.62500000122634e-06, 1.4860000003835694e-06, 1.5969999989096095e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.513999999147586e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5279999985295944e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.4860000003835694e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.4860000003835694e-06, 1.513999999147586e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.334" endtime="20201029 09:33:14.339"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.324" endtime="20201029 09:33:14.341"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.806" endtime="20201029 09:33:14.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.805" endtime="20201029 09:33:14.343"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.363" endtime="20201029 09:33:14.378"></status>
</kw>
<msg timestamp="20201029 09:33:14.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.359" endtime="20201029 09:33:14.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.381" endtime="20201029 09:33:14.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.387" endtime="20201029 09:33:14.391"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.352" endtime="20201029 09:33:14.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.348" endtime="20201029 09:33:14.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.411" endtime="20201029 09:33:14.804"></status>
</kw>
<msg timestamp="20201029 09:33:14.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.675083958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.6750855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:14.407" endtime="20201029 09:33:14.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.675083958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.6750855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:14.816" endtime="20201029 09:33:14.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.839" endtime="20201029 09:33:14.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.400" endtime="20201029 09:33:14.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.395" endtime="20201029 09:33:14.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.857" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5839999996103415e-06}, {'diff': 1.5280000003059513e-...</msg>
<status status="PASS" starttime="20201029 09:33:14.847" endtime="20201029 09:33:14.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.869" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.4860000003835694e-06, 1.513999999147586e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:14.859" endtime="20201029 09:33:14.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.880" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:14.877" endtime="20201029 09:33:14.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.886" level="INFO">VALUE: [1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.4860000003835694e-06, 1.513999999147586e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.526999998446854e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5129999990648457e-06, 1.5130000008412026e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.514000000923943e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5420000014643165e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.882" endtime="20201029 09:33:14.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.871" endtime="20201029 09:33:14.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.345" endtime="20201029 09:33:14.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.344" endtime="20201029 09:33:14.891"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.911" endtime="20201029 09:33:14.926"></status>
</kw>
<msg timestamp="20201029 09:33:14.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.908" endtime="20201029 09:33:14.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.929" endtime="20201029 09:33:14.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.936" endtime="20201029 09:33:14.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.901" endtime="20201029 09:33:14.941"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.896" endtime="20201029 09:33:14.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.959" endtime="20201029 09:33:15.354"></status>
</kw>
<msg timestamp="20201029 09:33:15.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.196925208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.19692675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:14.956" endtime="20201029 09:33:15.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.196925208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.19692675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:15.366" endtime="20201029 09:33:15.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.389" endtime="20201029 09:33:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.948" endtime="20201029 09:33:15.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.944" endtime="20201029 09:33:15.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.409" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5690000001455928e-0...</msg>
<status status="PASS" starttime="20201029 09:33:15.399" endtime="20201029 09:33:15.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.420" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:15.411" endtime="20201029 09:33:15.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.430" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.428" endtime="20201029 09:33:15.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.436" level="INFO">VALUE: [1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5980000007687067e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5970000006859664e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.5410000013815761e-06, 1.5279999985295944e-06, 1.5549999989872276e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5000000015419346e-06, 1.4580000016195527e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.513999999147586e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.62500000122634e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5410000013815761e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.432" endtime="20201029 09:33:15.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.421" endtime="20201029 09:33:15.439"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.892" endtime="20201029 09:33:15.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.891" endtime="20201029 09:33:15.441"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.462" endtime="20201029 09:33:15.478"></status>
</kw>
<msg timestamp="20201029 09:33:15.480" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.458" endtime="20201029 09:33:15.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.482" endtime="20201029 09:33:15.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.488" endtime="20201029 09:33:15.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.451" endtime="20201029 09:33:15.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.446" endtime="20201029 09:33:15.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.512" endtime="20201029 09:33:15.907"></status>
</kw>
<msg timestamp="20201029 09:33:15.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.736622667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.736624208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.509" endtime="20201029 09:33:15.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.736622667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.736624208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.918" endtime="20201029 09:33:15.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.942" endtime="20201029 09:33:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.502" endtime="20201029 09:33:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.497" endtime="20201029 09:33:15.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:15.960" level="INFO">${RESULT} = [{'diff': 1.5409999996052193e-06}, {'diff': 1.513999999147586e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5280000003059513e-0...</msg>
<status status="PASS" starttime="20201029 09:33:15.950" endtime="20201029 09:33:15.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:15.972" level="INFO">${OVERHEAD} = {'diff': [1.5409999996052193e-06, 1.513999999147586e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5280000003059513e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:15.962" endtime="20201029 09:33:15.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.982" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:15.980" endtime="20201029 09:33:15.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.988" level="INFO">VALUE: [1.5409999996052193e-06, 1.513999999147586e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.62500000122634e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5279999985295944e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5549999989872276e-06, 1.4999999997655777e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.624999999449983e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.514000000923943e-06, 1.5420000014643165e-06, 1.5410000013815761e-06, 1.5279999985295944e-06, 1.527000000223211e-06, 1.5560000008463248e-06, 1.5279999985295944e-06, 1.5279999985295944e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5000000015419346e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.4860000003835694e-06, 1.5420000014643165e-06]</msg>
<status status="PASS" starttime="20201029 09:33:15.985" endtime="20201029 09:33:15.990"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.974" endtime="20201029 09:33:15.992"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.443" endtime="20201029 09:33:15.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.442" endtime="20201029 09:33:15.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.096" endtime="20201029 09:33:15.994"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:04.968" endtime="20201029 09:33:15.995" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:16.014" endtime="20201029 09:33:16.036"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.010" endtime="20201029 09:33:16.038"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.071" endtime="20201029 09:33:16.090"></status>
</kw>
<msg timestamp="20201029 09:33:16.091" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.068" endtime="20201029 09:33:16.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.098" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.093" endtime="20201029 09:33:16.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.104" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:16.100" endtime="20201029 09:33:16.105"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.061" endtime="20201029 09:33:16.107"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.054" endtime="20201029 09:33:16.109"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.051" endtime="20201029 09:33:16.109"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:16.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:16.116" endtime="20201029 09:33:16.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.111" endtime="20201029 09:33:16.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.050" endtime="20201029 09:33:16.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.048" endtime="20201029 09:33:16.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.121" endtime="20201029 09:33:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.044" endtime="20201029 09:33:16.126"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.039" endtime="20201029 09:33:16.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.008" endtime="20201029 09:33:16.128"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.153" endtime="20201029 09:33:16.176"></status>
</kw>
<msg timestamp="20201029 09:33:16.177" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.149" endtime="20201029 09:33:16.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.184" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.179" endtime="20201029 09:33:16.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.186" endtime="20201029 09:33:16.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.140" endtime="20201029 09:33:16.192"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.134" endtime="20201029 09:33:16.194"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.199" endtime="20201029 09:33:16.204"></status>
</kw>
<msg timestamp="20201029 09:33:16.205" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:16.196" endtime="20201029 09:33:16.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.215" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:16.213" endtime="20201029 09:33:16.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.220" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:16.218" endtime="20201029 09:33:16.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.207" endtime="20201029 09:33:16.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.232" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:16.230" endtime="20201029 09:33:16.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.237" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:16.235" endtime="20201029 09:33:16.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.224" endtime="20201029 09:33:16.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.256" endtime="20201029 09:33:16.624"></status>
</kw>
<msg timestamp="20201029 09:33:16.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131941847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131946167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.252" endtime="20201029 09:33:16.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131941847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131946167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.634" endtime="20201029 09:33:16.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.654" endtime="20201029 09:33:16.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.245" endtime="20201029 09:33:16.660"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.240" endtime="20201029 09:33:16.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.673" level="INFO">${RESULT} = [{'diff': 4.3200000000021e-06}, {'diff': 4.499999999990623e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.4720000000053606e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.4720000000053606e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:16.664" endtime="20201029 09:33:16.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.685" level="INFO">${OVERHEAD} = {'diff': [4.3200000000021e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.4720...</msg>
<status status="PASS" starttime="20201029 09:33:16.675" endtime="20201029 09:33:16.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.697" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:16.694" endtime="20201029 09:33:16.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.703" level="INFO">VALUE: [4.3200000000021e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.486999999997465e-06, 4.429999999999712e-06, 4.471999999977605e-06, 4.527999999975885e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.473000000004834e-06, 4.471999999977605e-06, 4.4720000000053606e-06, 4.500000000018378e-06, 4.486999999997465e-06, 4.485999999997992e-06, 4.486000000025747e-06, 4.485999999997992e-06, 4.540999999996798e-06, 4.513999999983254e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.486000000025747e-06, 4.485999999997992e-06, 4.486999999997465e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.499999999990623e-06, 4.473000000004834e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.473000000004834e-06, 4.430999999999186e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.52800000000364e-06, 4.485999999997992e-06, 4.500000000018378e-06]</msg>
<status status="PASS" starttime="20201029 09:33:16.699" endtime="20201029 09:33:16.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.687" endtime="20201029 09:33:16.713"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.129" endtime="20201029 09:33:16.715"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:16.001" endtime="20201029 09:33:16.716" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:16.735" endtime="20201029 09:33:16.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.731" endtime="20201029 09:33:16.759"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.794" endtime="20201029 09:33:16.814"></status>
</kw>
<msg timestamp="20201029 09:33:16.816" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.791" endtime="20201029 09:33:16.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.818" endtime="20201029 09:33:16.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.829" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:16.825" endtime="20201029 09:33:16.830"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.783" endtime="20201029 09:33:16.832"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.776" endtime="20201029 09:33:16.834"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.774" endtime="20201029 09:33:16.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:16.843" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:16.841" endtime="20201029 09:33:16.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.837" endtime="20201029 09:33:16.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.772" endtime="20201029 09:33:16.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.770" endtime="20201029 09:33:16.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.847" endtime="20201029 09:33:16.850"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.766" endtime="20201029 09:33:16.852"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.761" endtime="20201029 09:33:16.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.728" endtime="20201029 09:33:16.854"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.880" endtime="20201029 09:33:16.961"></status>
</kw>
<msg timestamp="20201029 09:33:16.963" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.877" endtime="20201029 09:33:16.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.970" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.965" endtime="20201029 09:33:16.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.972" endtime="20201029 09:33:16.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.869" endtime="20201029 09:33:16.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.861" endtime="20201029 09:33:16.979"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.985" endtime="20201029 09:33:16.990"></status>
</kw>
<msg timestamp="20201029 09:33:16.991" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:16.981" endtime="20201029 09:33:16.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.002" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:16.999" endtime="20201029 09:33:17.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.007" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:17.005" endtime="20201029 09:33:17.008"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.993" endtime="20201029 09:33:17.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.020" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:17.017" endtime="20201029 09:33:17.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.025" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:17.022" endtime="20201029 09:33:17.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.011" endtime="20201029 09:33:17.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.045" endtime="20201029 09:33:17.428"></status>
</kw>
<msg timestamp="20201029 09:33:17.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139906764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139947847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.041" endtime="20201029 09:33:17.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139906764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139947847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.438" endtime="20201029 09:33:17.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.460" endtime="20201029 09:33:17.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.033" endtime="20201029 09:33:17.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.028" endtime="20201029 09:33:17.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:17.490" level="INFO">${RESULT} = [{'diff': 4.1082999999997316e-05}, {'diff': 4.098600000002062e-05}, {'diff': 4.094399999998721e-05}, {'diff': 4.0944999999986686e-05}, {'diff': 4.091600000000195e-05}, {'diff': 4.094500000001444e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:17.474" endtime="20201029 09:33:17.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:17.507" level="INFO">${OVERHEAD} = {'diff': [4.1082999999997316e-05, 4.098600000002062e-05, 4.094399999998721e-05, 4.0944999999986686e-05, 4.091600000000195e-05, 4.094500000001444e-05, 4.097200000000023e-05, 4.095900000000707e-05, 4.09...</msg>
<status status="PASS" starttime="20201029 09:33:17.494" endtime="20201029 09:33:17.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.519" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:17.517" endtime="20201029 09:33:17.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.525" level="INFO">VALUE: [4.1082999999997316e-05, 4.098600000002062e-05, 4.094399999998721e-05, 4.0944999999986686e-05, 4.091600000000195e-05, 4.094500000001444e-05, 4.097200000000023e-05, 4.095900000000707e-05, 4.0957999999979844e-05, 4.09580000000076e-05, 4.094400000001497e-05, 4.0917000000001424e-05, 4.095900000000707e-05, 4.09580000000076e-05, 4.099999999998549e-05, 4.09580000000076e-05, 4.097200000000023e-05, 4.09580000000076e-05, 4.09580000000076e-05, 4.094500000001444e-05, 4.097200000000023e-05, 4.09580000000076e-05, 4.097200000000023e-05, 4.0930999999994055e-05, 4.09580000000076e-05, 4.093000000002234e-05, 4.094400000001497e-05, 4.094500000001444e-05, 4.094400000001497e-05, 4.0944999999986686e-05, 4.092999999999458e-05, 4.094400000001497e-05, 4.094399999998721e-05, 4.094399999998721e-05, 4.094399999998721e-05, 4.094400000001497e-05, 4.09580000000076e-05, 4.098600000002062e-05, 4.0944999999986686e-05, 4.094400000001497e-05, 4.094399999998721e-05, 4.094400000001497e-05, 4.0917000000001424e-05, 4.0930999999994055e-05, 4.0874999999995776e-05, 4.0930999999994055e-05, 4.094400000001497e-05, 4.092999999999458e-05, 4.094500000001444e-05, 4.094399999998721e-05]</msg>
<status status="PASS" starttime="20201029 09:33:17.521" endtime="20201029 09:33:17.526"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.509" endtime="20201029 09:33:17.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.856" endtime="20201029 09:33:17.529"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:16.721" endtime="20201029 09:33:17.532" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:17.550" endtime="20201029 09:33:17.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.546" endtime="20201029 09:33:17.574"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.610" endtime="20201029 09:33:17.629"></status>
</kw>
<msg timestamp="20201029 09:33:17.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.606" endtime="20201029 09:33:17.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.633" endtime="20201029 09:33:17.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.645" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:17.640" endtime="20201029 09:33:17.645"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:17.598" endtime="20201029 09:33:17.647"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:17.591" endtime="20201029 09:33:17.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.589" endtime="20201029 09:33:17.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:17.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:17.657" endtime="20201029 09:33:17.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.652" endtime="20201029 09:33:17.661"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.587" endtime="20201029 09:33:17.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.585" endtime="20201029 09:33:17.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.664" endtime="20201029 09:33:17.668"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.580" endtime="20201029 09:33:17.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.576" endtime="20201029 09:33:17.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.543" endtime="20201029 09:33:17.671"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.695" endtime="20201029 09:33:17.933"></status>
</kw>
<msg timestamp="20201029 09:33:17.934" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.692" endtime="20201029 09:33:17.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.940" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.936" endtime="20201029 09:33:17.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.943" endtime="20201029 09:33:17.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.684" endtime="20201029 09:33:17.949"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.678" endtime="20201029 09:33:17.950"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.955" endtime="20201029 09:33:17.961"></status>
</kw>
<msg timestamp="20201029 09:33:17.962" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:17.952" endtime="20201029 09:33:17.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.973" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:17.970" endtime="20201029 09:33:17.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.977" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:17.975" endtime="20201029 09:33:17.978"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.964" endtime="20201029 09:33:17.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.990" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:17.988" endtime="20201029 09:33:17.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.995" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:17.992" endtime="20201029 09:33:17.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.981" endtime="20201029 09:33:17.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.016" endtime="20201029 09:33:18.413"></status>
</kw>
<msg timestamp="20201029 09:33:18.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141963431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142042681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.012" endtime="20201029 09:33:18.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141963431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142042681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.423" endtime="20201029 09:33:18.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.446" endtime="20201029 09:33:18.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.004" endtime="20201029 09:33:18.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.999" endtime="20201029 09:33:18.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.471" level="INFO">${RESULT} = [{'diff': 7.925000000000293e-05}, {'diff': 7.837499999999165e-05}, {'diff': 7.86110000000062e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.859700000001357e-05}, {'diff': 7.86110000000062e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:18.458" endtime="20201029 09:33:18.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:18.488" level="INFO">${OVERHEAD} = {'diff': [7.925000000000293e-05, 7.837499999999165e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.859700000001357e-05, 7.86110000000062e-05, 7.870800000001066e-05, 7.86110000000062e-05, 7.8708999...</msg>
<status status="PASS" starttime="20201029 09:33:18.475" endtime="20201029 09:33:18.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.503" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:18.500" endtime="20201029 09:33:18.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.509" level="INFO">VALUE: [7.925000000000293e-05, 7.837499999999165e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.859700000001357e-05, 7.86110000000062e-05, 7.870800000001066e-05, 7.86110000000062e-05, 7.870899999998238e-05, 7.836099999999901e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.859700000001357e-05, 7.861099999997845e-05, 7.859699999998582e-05, 7.862499999999883e-05, 7.833300000001375e-05, 7.866600000000501e-05, 7.862499999999883e-05, 7.859799999998529e-05, 7.863800000001975e-05, 7.859700000001357e-05, 7.862499999999883e-05, 7.858299999999319e-05, 7.840300000000466e-05, 7.857000000000003e-05, 7.866700000003224e-05, 7.86529999999841e-05, 7.863900000004698e-05, 7.858300000002094e-05, 7.86110000000062e-05, 7.861200000003343e-05, 7.834699999997863e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.838900000001203e-05, 7.859700000001357e-05, 7.85689999999728e-05, 7.863899999999147e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86529999999841e-05, 7.863899999999147e-05, 7.8332999999986e-05, 7.861099999995069e-05, 7.859700000001357e-05]</msg>
<status status="PASS" starttime="20201029 09:33:18.505" endtime="20201029 09:33:18.510"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.491" endtime="20201029 09:33:18.511"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.673" endtime="20201029 09:33:18.513"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:17.536" endtime="20201029 09:33:18.515" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:18.534" endtime="20201029 09:33:18.556"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.530" endtime="20201029 09:33:18.558"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.593" endtime="20201029 09:33:18.617"></status>
</kw>
<msg timestamp="20201029 09:33:18.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.590" endtime="20201029 09:33:18.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.626" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.621" endtime="20201029 09:33:18.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.632" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:18.628" endtime="20201029 09:33:18.633"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:18.582" endtime="20201029 09:33:18.635"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:18.575" endtime="20201029 09:33:18.637"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.572" endtime="20201029 09:33:18.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:18.646" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:18.645" endtime="20201029 09:33:18.647"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.640" endtime="20201029 09:33:18.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.570" endtime="20201029 09:33:18.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.569" endtime="20201029 09:33:18.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.650" endtime="20201029 09:33:18.654"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.564" endtime="20201029 09:33:18.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.559" endtime="20201029 09:33:18.657"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.527" endtime="20201029 09:33:18.658"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.681" endtime="20201029 09:33:18.706"></status>
</kw>
<msg timestamp="20201029 09:33:18.708" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.678" endtime="20201029 09:33:18.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.714" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.710" endtime="20201029 09:33:18.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.717" endtime="20201029 09:33:18.721"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.670" endtime="20201029 09:33:18.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.664" endtime="20201029 09:33:18.724"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.729" endtime="20201029 09:33:18.734"></status>
</kw>
<msg timestamp="20201029 09:33:18.736" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:18.726" endtime="20201029 09:33:18.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.746" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:18.744" endtime="20201029 09:33:18.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.751" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:18.749" endtime="20201029 09:33:18.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.738" endtime="20201029 09:33:18.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.764" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:18.761" endtime="20201029 09:33:18.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.769" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:18.766" endtime="20201029 09:33:18.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.755" endtime="20201029 09:33:18.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.789" endtime="20201029 09:33:19.171"></status>
</kw>
<msg timestamp="20201029 09:33:19.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141032417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14103375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:18.785" endtime="20201029 09:33:19.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141032417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14103375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:19.184" endtime="20201029 09:33:19.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.211" endtime="20201029 09:33:19.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.778" endtime="20201029 09:33:19.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.772" endtime="20201029 09:33:19.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.239" level="INFO">${RESULT} = [{'diff': 1.3330000000200126e-06}, {'diff': 1.3610000000052747e-06}, {'diff': 1.332999999992257e-06}, {'diff': 1.332999999992257e-06}, {'diff': 1.3330000000200126e-06}, {'diff': 1.346999999984888e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:19.226" endtime="20201029 09:33:19.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:19.251" level="INFO">${OVERHEAD} = {'diff': [1.3330000000200126e-06, 1.3610000000052747e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.3330000000200126e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.291999999986082e-06, 1.3...</msg>
<status status="PASS" starttime="20201029 09:33:19.242" endtime="20201029 09:33:19.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.262" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:19.260" endtime="20201029 09:33:19.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.268" level="INFO">VALUE: [1.3330000000200126e-06, 1.3610000000052747e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.3330000000200126e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.291999999986082e-06, 1.360999999977519e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.3479999999843617e-06, 1.332999999992257e-06, 1.3049999999792394e-06, 1.360999999977519e-06, 1.346999999984888e-06, 1.3479999999843617e-06, 1.3470000000126436e-06, 1.4030000000109233e-06, 1.3339999999917307e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3199999999990997e-06, 1.346999999984888e-06, 1.3479999999843617e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.360999999977519e-06, 1.4030000000109233e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.3470000000126436e-06, 1.360999999977519e-06, 1.332999999992257e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3480000000121173e-06, 1.3470000000126436e-06, 1.332999999992257e-06, 1.346999999984888e-06, 1.3480000000121173e-06, 1.346999999984888e-06, 1.3890000000182923e-06, 1.3480000000121173e-06, 1.3480000000121173e-06, 1.360999999977519e-06, 1.332999999992257e-06, 1.3610000000052747e-06, 1.3889999999905367e-06]</msg>
<status status="PASS" starttime="20201029 09:33:19.265" endtime="20201029 09:33:19.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.253" endtime="20201029 09:33:19.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.659" endtime="20201029 09:33:19.273"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:18.520" endtime="20201029 09:33:19.274" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.294" endtime="20201029 09:33:19.316"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.290" endtime="20201029 09:33:19.318"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.355" endtime="20201029 09:33:19.375"></status>
</kw>
<msg timestamp="20201029 09:33:19.376" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.351" endtime="20201029 09:33:19.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.378" endtime="20201029 09:33:19.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.390" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:19.385" endtime="20201029 09:33:19.390"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.343" endtime="20201029 09:33:19.392"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:19.335" endtime="20201029 09:33:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.332" endtime="20201029 09:33:19.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:19.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:19.402" endtime="20201029 09:33:19.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.397" endtime="20201029 09:33:19.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.330" endtime="20201029 09:33:19.405"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.328" endtime="20201029 09:33:19.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.407" endtime="20201029 09:33:19.411"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.324" endtime="20201029 09:33:19.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.319" endtime="20201029 09:33:19.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.286" endtime="20201029 09:33:19.415"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.440" endtime="20201029 09:33:19.522"></status>
</kw>
<msg timestamp="20201029 09:33:19.524" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.436" endtime="20201029 09:33:19.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.530" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.526" endtime="20201029 09:33:19.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.533" endtime="20201029 09:33:19.537"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.428" endtime="20201029 09:33:19.539"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.421" endtime="20201029 09:33:19.540"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.547" endtime="20201029 09:33:19.553"></status>
</kw>
<msg timestamp="20201029 09:33:19.555" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:19.542" endtime="20201029 09:33:19.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.573" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:19.568" endtime="20201029 09:33:19.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.580" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:19.577" endtime="20201029 09:33:19.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.559" endtime="20201029 09:33:19.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.600" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:19.597" endtime="20201029 09:33:19.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.605" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:19.603" endtime="20201029 09:33:19.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.589" endtime="20201029 09:33:19.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.628" endtime="20201029 09:33:20.007"></status>
</kw>
<msg timestamp="20201029 09:33:20.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140926403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140940667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.624" endtime="20201029 09:33:20.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140926403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140940667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.016" endtime="20201029 09:33:20.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.035" endtime="20201029 09:33:20.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.614" endtime="20201029 09:33:20.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.609" endtime="20201029 09:33:20.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.052" level="INFO">${RESULT} = [{'diff': 1.4263999999986066e-05}, {'diff': 1.4236000000000804e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4264000000013821e-...</msg>
<status status="PASS" starttime="20201029 09:33:20.044" endtime="20201029 09:33:20.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:20.062" level="INFO">${OVERHEAD} = {'diff': [1.4263999999986066e-05, 1.4236000000000804e-05, 1.4278000000006452e-05, 1.4291999999999083e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.436099999999052e-05, 1.4236000000000804e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:20.054" endtime="20201029 09:33:20.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.073" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:20.071" endtime="20201029 09:33:20.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.078" level="INFO">VALUE: [1.4263999999986066e-05, 1.4236000000000804e-05, 1.4278000000006452e-05, 1.4291999999999083e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.436099999999052e-05, 1.4236000000000804e-05, 1.4263999999986066e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4277000000006979e-05, 1.4249999999993435e-05, 1.4264000000013821e-05, 1.429099999999961e-05, 1.4276999999979223e-05, 1.4277999999978697e-05, 1.4278000000006452e-05, 1.4291999999999083e-05, 1.430499999999224e-05, 1.4249999999993435e-05, 1.429099999999961e-05, 1.4291999999999083e-05, 1.4263999999986066e-05, 1.4249999999993435e-05, 1.4278000000006452e-05, 1.4221999999980417e-05, 1.4291999999999083e-05, 1.4264000000013821e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.436200000001775e-05, 1.4264000000013821e-05, 1.4249999999993435e-05, 1.4291999999999083e-05, 1.4276999999979223e-05, 1.4334000000004732e-05, 1.4249999999993435e-05, 1.4277999999978697e-05, 1.4347999999997363e-05, 1.4264000000013821e-05, 1.4208000000015542e-05, 1.4291999999999083e-05, 1.4277000000006979e-05, 1.4263999999986066e-05, 1.4277000000006979e-05, 1.4278000000006452e-05, 1.4277999999978697e-05, 1.430600000001947e-05, 1.425000000002119e-05]</msg>
<status status="PASS" starttime="20201029 09:33:20.075" endtime="20201029 09:33:20.079"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.064" endtime="20201029 09:33:20.081"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.416" endtime="20201029 09:33:20.082"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:19.279" endtime="20201029 09:33:20.084" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:20.102" endtime="20201029 09:33:20.124"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.097" endtime="20201029 09:33:20.125"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.160" endtime="20201029 09:33:20.178"></status>
</kw>
<msg timestamp="20201029 09:33:20.179" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.156" endtime="20201029 09:33:20.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.181" endtime="20201029 09:33:20.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.192" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:20.188" endtime="20201029 09:33:20.193"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.149" endtime="20201029 09:33:20.195"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:20.143" endtime="20201029 09:33:20.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.140" endtime="20201029 09:33:20.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:20.207" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:20.205" endtime="20201029 09:33:20.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.199" endtime="20201029 09:33:20.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.138" endtime="20201029 09:33:20.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.137" endtime="20201029 09:33:20.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.211" endtime="20201029 09:33:20.216"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.131" endtime="20201029 09:33:20.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.127" endtime="20201029 09:33:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.095" endtime="20201029 09:33:20.222"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.253" endtime="20201029 09:33:20.492"></status>
</kw>
<msg timestamp="20201029 09:33:20.493" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.248" endtime="20201029 09:33:20.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.499" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.495" endtime="20201029 09:33:20.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.501" endtime="20201029 09:33:20.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.237" endtime="20201029 09:33:20.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.229" endtime="20201029 09:33:20.508"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.513" endtime="20201029 09:33:20.519"></status>
</kw>
<msg timestamp="20201029 09:33:20.521" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:20.510" endtime="20201029 09:33:20.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.535" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:20.532" endtime="20201029 09:33:20.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.541" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:20.538" endtime="20201029 09:33:20.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.523" endtime="20201029 09:33:20.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.558" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:20.554" endtime="20201029 09:33:20.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.564" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:20.560" endtime="20201029 09:33:20.567"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.547" endtime="20201029 09:33:20.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.596" endtime="20201029 09:33:21.000"></status>
</kw>
<msg timestamp="20201029 09:33:21.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.149104778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14913225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:20.591" endtime="20201029 09:33:21.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.149104778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14913225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:21.009" endtime="20201029 09:33:21.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.027" endtime="20201029 09:33:21.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.576" endtime="20201029 09:33:21.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.570" endtime="20201029 09:33:21.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.045" level="INFO">${RESULT} = [{'diff': 2.7472000000000607e-05}, {'diff': 2.7485999999993238e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7458000000007976e-05}, {'diff': 2.7485999999993238e-...</msg>
<status status="PASS" starttime="20201029 09:33:21.036" endtime="20201029 09:33:21.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:21.054" level="INFO">${OVERHEAD} = {'diff': [2.7472000000000607e-05, 2.7485999999993238e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7458000000007976e-05, 2.7485999999993238e-05, 2.747300000000008e-05, 2.747300000000008e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:21.047" endtime="20201029 09:33:21.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.065" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:21.063" endtime="20201029 09:33:21.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.071" level="INFO">VALUE: [2.7472000000000607e-05, 2.7485999999993238e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7458000000007976e-05, 2.7485999999993238e-05, 2.747300000000008e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.7458999999979694e-05, 2.7514000000006256e-05, 2.7458000000007976e-05, 2.7485999999993238e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.747300000000008e-05, 2.7458000000007976e-05, 2.7485999999993238e-05, 2.745799999998022e-05, 2.747300000000008e-05, 2.7500000000013625e-05, 2.7526999999971657e-05, 2.747199999997285e-05, 2.747199999997285e-05, 2.747300000000008e-05, 2.747199999997285e-05, 2.747199999997285e-05, 2.744399999998759e-05, 2.745799999998022e-05, 2.747199999997285e-05, 2.742999999999496e-05, 2.742999999999496e-05, 8.841600000003558e-05, 2.745799999998022e-05, 2.75410000000198e-05, 2.747199999997285e-05, 2.7472000000028363e-05, 2.755600000003966e-05, 2.747199999997285e-05, 2.745800000003573e-05, 2.745799999998022e-05, 2.747300000000008e-05, 2.7485999999965482e-05, 2.745799999998022e-05]</msg>
<status status="PASS" starttime="20201029 09:33:21.068" endtime="20201029 09:33:21.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.056" endtime="20201029 09:33:21.073"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.223" endtime="20201029 09:33:21.075"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:20.088" endtime="20201029 09:33:21.076" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.094" endtime="20201029 09:33:21.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.089" endtime="20201029 09:33:21.118"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.151" endtime="20201029 09:33:21.170"></status>
</kw>
<msg timestamp="20201029 09:33:21.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.148" endtime="20201029 09:33:21.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.177" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.173" endtime="20201029 09:33:21.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.184" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:21.179" endtime="20201029 09:33:21.185"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:21.141" endtime="20201029 09:33:21.186"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:21.135" endtime="20201029 09:33:21.188"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.132" endtime="20201029 09:33:21.189"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:21.196" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:21.195" endtime="20201029 09:33:21.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.190" endtime="20201029 09:33:21.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.130" endtime="20201029 09:33:21.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.128" endtime="20201029 09:33:21.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.200" endtime="20201029 09:33:21.204"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.124" endtime="20201029 09:33:21.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.120" endtime="20201029 09:33:21.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.086" endtime="20201029 09:33:21.207"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.216" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:21.232" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:22.110" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:21.212" endtime="20201029 09:33:22.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.117" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 09:33:22.114" endtime="20201029 09:33:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.209" endtime="20201029 09:33:25.120"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.129" endtime="20201029 09:33:25.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.125" endtime="20201029 09:33:25.153"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.179" endtime="20201029 09:33:25.190"></status>
</kw>
<msg timestamp="20201029 09:33:25.191" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.175" endtime="20201029 09:33:25.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.198" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.194" endtime="20201029 09:33:25.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.201" endtime="20201029 09:33:25.205"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.165" endtime="20201029 09:33:25.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.159" endtime="20201029 09:33:25.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.227" endtime="20201029 09:33:25.590"></status>
</kw>
<msg timestamp="20201029 09:33:25.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040289972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.040291486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:25.224" endtime="20201029 09:33:25.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040289972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.040291486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 09:33:25.600" endtime="20201029 09:33:25.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.620" endtime="20201029 09:33:25.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.216" endtime="20201029 09:33:25.626"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.211" endtime="20201029 09:33:25.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.638" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 4.611000000001586e-06}, {'diff': 4.54200000000321e-06}, {'diff': 4.568999999995937e-06}, {'diff': 4.51400000000407e-06}, {'diff': 4.555999999995841e-06}, {'diff': 4.569000000002...</msg>
<status status="PASS" starttime="20201029 09:33:25.629" endtime="20201029 09:33:25.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.648" level="INFO">${RESULT} = {'diff': [0, 4.611000000001586e-06, 4.54200000000321e-06, 4.568999999995937e-06, 4.51400000000407e-06, 4.555999999995841e-06, 4.569000000002876e-06, 4.555999999995841e-06, 4.55600000000278e-06, 4.5549...</msg>
<status status="PASS" starttime="20201029 09:33:25.640" endtime="20201029 09:33:25.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.660" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.658" endtime="20201029 09:33:25.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.668" level="INFO">VALUE: [0, 4.611000000001586e-06, 4.54200000000321e-06, 4.568999999995937e-06, 4.51400000000407e-06, 4.555999999995841e-06, 4.569000000002876e-06, 4.555999999995841e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.569000000002876e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.55600000000278e-06, 4.569999999995411e-06, 4.569000000002876e-06, 4.486999999997465e-06, 4.54200000000321e-06, 4.568999999995937e-06, 4.569000000002876e-06, 4.555999999995841e-06, 4.555000000003306e-06, 4.55600000000278e-06, 4.555999999995841e-06, 4.569000000002876e-06, 4.611000000001586e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.555000000003306e-06, 4.625000000001156e-06, 4.555000000003306e-06, 4.568999999995937e-06, 4.597000000002016e-06, 4.5549999999963675e-06, 4.555000000003306e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.555000000003306e-06, 4.569999999995411e-06, 4.54200000000321e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.583000000002446e-06, 4.513999999997131e-06, 4.555000000003306e-06, 4.540999999996798e-06, 4.57000000000235e-06, 4.55600000000278e-06, 4.513999999997131e-06]</msg>
<status status="PASS" starttime="20201029 09:33:25.665" endtime="20201029 09:33:25.669"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.650" endtime="20201029 09:33:25.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.154" endtime="20201029 09:33:25.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.123" endtime="20201029 09:33:25.673"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.679" endtime="20201029 09:33:25.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.675" endtime="20201029 09:33:25.703"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.726" endtime="20201029 09:33:25.737"></status>
</kw>
<msg timestamp="20201029 09:33:25.738" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.722" endtime="20201029 09:33:25.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.744" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.740" endtime="20201029 09:33:25.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.747" endtime="20201029 09:33:25.752"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.714" endtime="20201029 09:33:25.753"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.708" endtime="20201029 09:33:25.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.773" endtime="20201029 09:33:26.146"></status>
</kw>
<msg timestamp="20201029 09:33:26.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036923597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036932444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.769" endtime="20201029 09:33:26.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036923597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036932444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.156" endtime="20201029 09:33:26.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.177" endtime="20201029 09:33:26.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.761" endtime="20201029 09:33:26.183"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.756" endtime="20201029 09:33:26.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.194" level="INFO">${PHILIP_RES} = [{'diff': 8.846999999999328e-06}, {'diff': 8.833999999999231e-06}, {'diff': 8.846999999999328e-06}, {'diff': 8.916999999997177e-06}, {'diff': 8.833999999999231e-06}, {'diff': 8.846999999999328e-06}, {...</msg>
<status status="PASS" starttime="20201029 09:33:26.186" endtime="20201029 09:33:26.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.206" level="INFO">${RESULT} = {'diff': [8.846999999999328e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.916999999997177e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.84800000000574e-06, 8.87499...</msg>
<status status="PASS" starttime="20201029 09:33:26.196" endtime="20201029 09:33:26.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.217" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.215" endtime="20201029 09:33:26.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.223" level="INFO">VALUE: [8.846999999999328e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.916999999997177e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.84800000000574e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.86200000000531e-06, 8.792000000000522e-06, 8.791000000001048e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.791000000001048e-06, 8.84800000000574e-06, 8.846999999999328e-06, 8.902999999997607e-06, 8.889000000004976e-06, 8.819999999999661e-06, 8.846999999999328e-06, 8.847000000006267e-06, 8.901999999998134e-06, 8.860999999998898e-06, 8.84800000000574e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.887999999998564e-06, 8.916999999997177e-06, 8.847000000006267e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.819000000000188e-06, 8.847999999998801e-06, 8.860999999998898e-06, 8.861000000005836e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.833000000006697e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.847000000006267e-06, 8.847999999998801e-06, 8.832999999999758e-06, 8.847000000006267e-06]</msg>
<status status="PASS" starttime="20201029 09:33:26.220" endtime="20201029 09:33:26.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.208" endtime="20201029 09:33:26.226"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.704" endtime="20201029 09:33:26.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.674" endtime="20201029 09:33:26.228"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.234" endtime="20201029 09:33:26.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.230" endtime="20201029 09:33:26.258"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.280" endtime="20201029 09:33:26.291"></status>
</kw>
<msg timestamp="20201029 09:33:26.292" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.277" endtime="20201029 09:33:26.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.299" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.294" endtime="20201029 09:33:26.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.302" endtime="20201029 09:33:26.306"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.269" endtime="20201029 09:33:26.308"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.263" endtime="20201029 09:33:26.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.327" endtime="20201029 09:33:26.691"></status>
</kw>
<msg timestamp="20201029 09:33:26.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036852444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.324" endtime="20201029 09:33:26.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036852444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.701" endtime="20201029 09:33:26.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.722" endtime="20201029 09:33:26.726"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.316" endtime="20201029 09:33:26.728"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.311" endtime="20201029 09:33:26.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.739" level="INFO">${PHILIP_RES} = [{'diff': 1.3901999999996195e-05}, {'diff': 1.3860999999996959e-05}, {'diff': 1.384699999999739e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.3888999999996099e-0...</msg>
<status status="PASS" starttime="20201029 09:33:26.731" endtime="20201029 09:33:26.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.751" level="INFO">${RESULT} = {'diff': [1.3901999999996195e-05, 1.3860999999996959e-05, 1.384699999999739e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3902999999995669e-05, 1.3917000000002178e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:26.742" endtime="20201029 09:33:26.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.763" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.760" endtime="20201029 09:33:26.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.769" level="INFO">VALUE: [1.3901999999996195e-05, 1.3860999999996959e-05, 1.384699999999739e-05, 1.3889000000003038e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3902999999995669e-05, 1.3917000000002178e-05, 1.3903000000002608e-05, 1.3916000000002704e-05, 1.3916000000002704e-05, 1.3916999999995239e-05, 1.3902999999995669e-05, 1.3917000000002178e-05, 1.3930000000002274e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3902999999995669e-05, 1.3903000000002608e-05, 1.3888000000003564e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.3902999999995669e-05, 1.3902999999995669e-05, 1.3902000000003134e-05, 1.3917000000002178e-05, 1.3903000000002608e-05, 1.3945000000001317e-05, 1.3929999999995335e-05, 1.3901999999996195e-05, 1.3917000000002178e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3915999999995765e-05, 1.3833999999997293e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3902000000003134e-05, 1.3901999999996195e-05, 1.3943999999994905e-05, 1.3959000000000887e-05, 1.3973000000000457e-05, 1.3944000000001844e-05, 1.3916000000002704e-05, 1.3888999999996099e-05, 1.3944999999994379e-05, 1.3945000000001317e-05, 1.3902000000003134e-05, 1.3903000000002608e-05]</msg>
<status status="PASS" starttime="20201029 09:33:26.765" endtime="20201029 09:33:26.770"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.753" endtime="20201029 09:33:26.771"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.259" endtime="20201029 09:33:26.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.228" endtime="20201029 09:33:26.773"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.779" endtime="20201029 09:33:26.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.776" endtime="20201029 09:33:26.803"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.826" endtime="20201029 09:33:26.837"></status>
</kw>
<msg timestamp="20201029 09:33:26.838" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.822" endtime="20201029 09:33:26.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.846" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.840" endtime="20201029 09:33:26.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.848" endtime="20201029 09:33:26.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.815" endtime="20201029 09:33:26.855"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.809" endtime="20201029 09:33:26.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.875" endtime="20201029 09:33:27.259"></status>
</kw>
<msg timestamp="20201029 09:33:27.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036832569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.871" endtime="20201029 09:33:27.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036832569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.270" endtime="20201029 09:33:27.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.290" endtime="20201029 09:33:27.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.863" endtime="20201029 09:33:27.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.858" endtime="20201029 09:33:27.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.307" level="INFO">${PHILIP_RES} = [{'diff': 1.9721999999999795e-05}, {'diff': 1.9708000000000225e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9721999999999795e-...</msg>
<status status="PASS" starttime="20201029 09:33:27.299" endtime="20201029 09:33:27.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.318" level="INFO">${RESULT} = {'diff': [1.9721999999999795e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05...</msg>
<status status="PASS" starttime="20201029 09:33:27.309" endtime="20201029 09:33:27.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.329" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.327" endtime="20201029 09:33:27.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.335" level="INFO">VALUE: [1.9721999999999795e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9777999999998075e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9750000000005874e-05, 1.9750000000005874e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.976299999999903e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.980500000000468e-05, 1.972299999999927e-05, 1.973699999999884e-05, 1.973699999999884e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.969500000000013e-05, 1.9723000000006208e-05, 1.9722000000006734e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9735999999999365e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.331" endtime="20201029 09:33:27.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.319" endtime="20201029 09:33:27.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.805" endtime="20201029 09:33:27.339"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.774" endtime="20201029 09:33:27.339"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.346" endtime="20201029 09:33:27.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.342" endtime="20201029 09:33:27.370"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.392" endtime="20201029 09:33:27.409"></status>
</kw>
<msg timestamp="20201029 09:33:27.411" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.389" endtime="20201029 09:33:27.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.418" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.413" endtime="20201029 09:33:27.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.420" endtime="20201029 09:33:27.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.381" endtime="20201029 09:33:27.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.375" endtime="20201029 09:33:27.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.446" endtime="20201029 09:33:27.820"></status>
</kw>
<msg timestamp="20201029 09:33:27.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037067347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037093653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.442" endtime="20201029 09:33:27.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037067347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037093653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.830" endtime="20201029 09:33:27.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.850" endtime="20201029 09:33:27.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.434" endtime="20201029 09:33:27.856"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.429" endtime="20201029 09:33:27.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.868" level="INFO">${PHILIP_RES} = [{'diff': 2.6305999999996776e-05}, {'diff': 2.6304999999997303e-05}, {'diff': 2.6318999999996873e-05}, {'diff': 2.6319999999996346e-05}, {'diff': 2.6304999999997303e-05}, {'diff': 2.6291999999997206e-...</msg>
<status status="PASS" starttime="20201029 09:33:27.859" endtime="20201029 09:33:27.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.878" level="INFO">${RESULT} = {'diff': [2.6305999999996776e-05, 2.6304999999997303e-05, 2.6318999999996873e-05, 2.6319999999996346e-05, 2.6304999999997303e-05, 2.6291999999997206e-05, 2.6319999999996346e-05, 2.6318999999996873e-05...</msg>
<status status="PASS" starttime="20201029 09:33:27.870" endtime="20201029 09:33:27.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.889" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.887" endtime="20201029 09:33:27.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.895" level="INFO">VALUE: [2.6305999999996776e-05, 2.6304999999997303e-05, 2.6318999999996873e-05, 2.6319999999996346e-05, 2.6304999999997303e-05, 2.6291999999997206e-05, 2.6319999999996346e-05, 2.6318999999996873e-05, 2.6305999999996776e-05, 2.6291999999997206e-05, 2.6304999999997303e-05, 2.6319999999996346e-05, 2.6276999999998163e-05, 2.6304999999997303e-05, 2.6305999999996776e-05, 2.6318999999996873e-05, 2.6291999999997206e-05, 2.6306000000003715e-05, 2.630500000000424e-05, 2.6320000000003285e-05, 2.6262999999998593e-05, 2.630500000000424e-05, 2.637500000000209e-05, 2.630500000000424e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.6222000000006296e-05, 2.6306000000003715e-05, 2.6292000000004145e-05, 2.630500000000424e-05, 2.6306000000003715e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.6320000000003285e-05, 2.6305999999996776e-05, 2.6318999999996873e-05, 2.6305999999996776e-05, 2.6304999999997303e-05, 2.6304999999997303e-05, 2.6305999999996776e-05, 2.6263999999998067e-05, 2.6305999999996776e-05, 2.6291999999997206e-05, 2.6304999999997303e-05, 2.6305999999996776e-05, 2.6305999999996776e-05, 2.6318999999996873e-05, 2.6291999999997206e-05, 2.6304999999997303e-05, 2.6304999999997303e-05]</msg>
<status status="PASS" starttime="20201029 09:33:27.891" endtime="20201029 09:33:27.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.880" endtime="20201029 09:33:27.898"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.371" endtime="20201029 09:33:27.899"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.340" endtime="20201029 09:33:27.899"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.906" endtime="20201029 09:33:27.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.902" endtime="20201029 09:33:27.930"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.955" endtime="20201029 09:33:27.968"></status>
</kw>
<msg timestamp="20201029 09:33:27.969" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.951" endtime="20201029 09:33:27.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.976" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.971" endtime="20201029 09:33:27.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.978" endtime="20201029 09:33:27.982"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.943" endtime="20201029 09:33:27.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.937" endtime="20201029 09:33:27.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.004" endtime="20201029 09:33:28.366"></status>
</kw>
<msg timestamp="20201029 09:33:28.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040044875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.000" endtime="20201029 09:33:28.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040044875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.380" endtime="20201029 09:33:28.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.405" endtime="20201029 09:33:28.412"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.992" endtime="20201029 09:33:28.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.987" endtime="20201029 09:33:28.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.426" level="INFO">${PHILIP_RES} = [{'diff': 3.365300000000154e-05}, {'diff': 3.370899999999982e-05}, {'diff': 3.365300000000154e-05}, {'diff': 3.3624999999995464e-05}, {'diff': 3.3624999999995464e-05}, {'diff': 3.366700000000111e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:28.418" endtime="20201029 09:33:28.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.436" level="INFO">${RESULT} = {'diff': [3.365300000000154e-05, 3.370899999999982e-05, 3.365300000000154e-05, 3.3624999999995464e-05, 3.3624999999995464e-05, 3.366700000000111e-05, 3.3666999999994174e-05, 3.3610999999995894e-05, 3....</msg>
<status status="PASS" starttime="20201029 09:33:28.428" endtime="20201029 09:33:28.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.447" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.445" endtime="20201029 09:33:28.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.455" level="INFO">VALUE: [3.365300000000154e-05, 3.370899999999982e-05, 3.365300000000154e-05, 3.3624999999995464e-05, 3.3624999999995464e-05, 3.366700000000111e-05, 3.3666999999994174e-05, 3.3610999999995894e-05, 3.36659999999947e-05, 3.361199999999537e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.372199999999992e-05, 3.366600000000164e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.365200000000207e-05, 3.365300000000154e-05, 3.35700000000036e-05, 3.363900000000197e-05, 3.368100000000068e-05, 3.365200000000207e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.365300000000154e-05, 3.365300000000154e-05, 3.358300000000369e-05, 3.368000000000121e-05, 3.365300000000154e-05, 3.3652999999994604e-05, 3.3666999999994174e-05, 3.366700000000111e-05, 3.365199999999513e-05, 3.3638999999995034e-05, 3.3638999999995034e-05, 3.365300000000154e-05, 3.3638999999995034e-05, 3.365300000000154e-05, 3.372199999999992e-05, 3.368100000000068e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.36380000000025e-05, 3.365200000000207e-05, 3.365300000000154e-05, 3.363900000000197e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.450" endtime="20201029 09:33:28.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.438" endtime="20201029 09:33:28.458"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.931" endtime="20201029 09:33:28.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.900" endtime="20201029 09:33:28.460"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.466" endtime="20201029 09:33:28.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.462" endtime="20201029 09:33:28.490"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.513" endtime="20201029 09:33:28.526"></status>
</kw>
<msg timestamp="20201029 09:33:28.527" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.509" endtime="20201029 09:33:28.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.534" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.530" endtime="20201029 09:33:28.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.536" endtime="20201029 09:33:28.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.501" endtime="20201029 09:33:28.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.495" endtime="20201029 09:33:28.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.561" endtime="20201029 09:33:28.924"></status>
</kw>
<msg timestamp="20201029 09:33:28.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037451819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037493611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.558" endtime="20201029 09:33:28.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037451819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037493611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.934" endtime="20201029 09:33:28.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.954" endtime="20201029 09:33:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.550" endtime="20201029 09:33:28.960"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.545" endtime="20201029 09:33:28.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.972" level="INFO">${PHILIP_RES} = [{'diff': 4.179200000000577e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.1776999999999787e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:28.963" endtime="20201029 09:33:28.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.983" level="INFO">${RESULT} = {'diff': [4.179200000000577e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.179199999999883e-05, 4.1776999999999787e-05, 4.172200000000098e-05, 4.175000000000012e-05, 4.176...</msg>
<status status="PASS" starttime="20201029 09:33:28.974" endtime="20201029 09:33:28.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.995" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.992" endtime="20201029 09:33:28.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.001" level="INFO">VALUE: [4.179200000000577e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.179199999999883e-05, 4.1776999999999787e-05, 4.172200000000098e-05, 4.175000000000012e-05, 4.176300000000022e-05, 4.172200000000098e-05, 4.1819000000005435e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.177799999999926e-05, 4.1776999999999787e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.17780000000062e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.1790999999999356e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.173600000000055e-05, 4.176300000000022e-05, 4.17780000000062e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.170800000000141e-05, 4.176399999999969e-05, 4.17780000000062e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.177799999999926e-05, 4.176300000000022e-05, 4.183399999999754e-05, 4.173600000000055e-05, 4.177799999999926e-05, 4.176399999999969e-05]</msg>
<status status="PASS" starttime="20201029 09:33:28.997" endtime="20201029 09:33:29.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.985" endtime="20201029 09:33:29.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.491" endtime="20201029 09:33:29.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.460" endtime="20201029 09:33:29.005"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.011" endtime="20201029 09:33:29.033"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.007" endtime="20201029 09:33:29.035"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.058" endtime="20201029 09:33:29.071"></status>
</kw>
<msg timestamp="20201029 09:33:29.072" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.055" endtime="20201029 09:33:29.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.079" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.075" endtime="20201029 09:33:29.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.081" endtime="20201029 09:33:29.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.047" endtime="20201029 09:33:29.087"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.041" endtime="20201029 09:33:29.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.106" endtime="20201029 09:33:29.468"></status>
</kw>
<msg timestamp="20201029 09:33:29.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03715975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037210389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:29.103" endtime="20201029 09:33:29.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03715975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037210389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:29.478" endtime="20201029 09:33:29.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.498" endtime="20201029 09:33:29.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.095" endtime="20201029 09:33:29.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.090" endtime="20201029 09:33:29.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.516" level="INFO">${PHILIP_RES} = [{'diff': 5.0639000000005097e-05}, {'diff': 5.062499999999859e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.065299999999773e-05}, {'diff': 5.062500000000553e-05}, {'diff': 5.0653000000004667e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:29.507" endtime="20201029 09:33:29.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.528" level="INFO">${RESULT} = {'diff': [5.0639000000005097e-05, 5.062499999999859e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.062500000000553e-05, 5.0653000000004667e-05, 5.063899999999816e-05, 5.0651999999998254e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 09:33:29.518" endtime="20201029 09:33:29.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.539" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.537" endtime="20201029 09:33:29.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.545" level="INFO">VALUE: [5.0639000000005097e-05, 5.062499999999859e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.062500000000553e-05, 5.0653000000004667e-05, 5.063899999999816e-05, 5.0651999999998254e-05, 5.062499999999859e-05, 5.073600000000261e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.069499999999644e-05, 5.063899999999816e-05, 5.0639000000005097e-05, 5.058299999999988e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.0653000000004667e-05, 5.0639000000005097e-05, 5.058399999999935e-05, 5.065299999999773e-05, 5.0693999999996964e-05, 5.0639000000005097e-05, 5.0665999999997824e-05, 5.062499999999859e-05, 5.0665999999997824e-05, 5.0637999999998684e-05, 5.0639000000005097e-05, 5.06669999999973e-05, 5.063899999999816e-05, 5.063899999999816e-05, 5.062500000000553e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.062499999999859e-05, 5.063899999999816e-05, 5.062499999999859e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.0639000000005097e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.0665999999997824e-05, 5.0651999999998254e-05, 5.065200000000519e-05, 5.06669999999973e-05, 5.063899999999816e-05]</msg>
<status status="PASS" starttime="20201029 09:33:29.541" endtime="20201029 09:33:29.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.530" endtime="20201029 09:33:29.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.036" endtime="20201029 09:33:29.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.006" endtime="20201029 09:33:29.549"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.556" endtime="20201029 09:33:29.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.552" endtime="20201029 09:33:29.580"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.602" endtime="20201029 09:33:29.616"></status>
</kw>
<msg timestamp="20201029 09:33:29.617" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.599" endtime="20201029 09:33:29.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.624" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.619" endtime="20201029 09:33:29.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.626" endtime="20201029 09:33:29.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.591" endtime="20201029 09:33:29.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.586" endtime="20201029 09:33:29.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.651" endtime="20201029 09:33:30.024"></status>
</kw>
<msg timestamp="20201029 09:33:30.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037541194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037601486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.648" endtime="20201029 09:33:30.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037541194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037601486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.033" endtime="20201029 09:33:30.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.053" endtime="20201029 09:33:30.057"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.640" endtime="20201029 09:33:30.059"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.635" endtime="20201029 09:33:30.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.071" level="INFO">${PHILIP_RES} = [{'diff': 6.0292000000003454e-05}, {'diff': 6.029099999999704e-05}, {'diff': 6.029100000000398e-05}, {'diff': 6.030499999999661e-05}, {'diff': 6.034700000000226e-05}, {'diff': 6.0292000000003454e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:30.062" endtime="20201029 09:33:30.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.081" level="INFO">${RESULT} = {'diff': [6.0292000000003454e-05, 6.029099999999704e-05, 6.029100000000398e-05, 6.030499999999661e-05, 6.034700000000226e-05, 6.0292000000003454e-05, 6.0305999999996085e-05, 6.0264000000004314e-05, 6....</msg>
<status status="PASS" starttime="20201029 09:33:30.073" endtime="20201029 09:33:30.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.091" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.089" endtime="20201029 09:33:30.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.097" level="INFO">VALUE: [6.0292000000003454e-05, 6.029099999999704e-05, 6.029100000000398e-05, 6.030499999999661e-05, 6.034700000000226e-05, 6.0292000000003454e-05, 6.0305999999996085e-05, 6.0264000000004314e-05, 6.0277999999996945e-05, 6.0277999999996945e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 6.0334000000002164e-05, 6.029100000000398e-05, 6.027699999999747e-05, 6.0292000000003454e-05, 6.0305999999996085e-05, 6.0278000000003884e-05, 6.0292000000003454e-05, 6.027699999999747e-05, 6.029100000000398e-05, 6.030499999999661e-05, 6.0305999999996085e-05, 6.0292000000003454e-05, 6.0348000000001734e-05, 6.029100000000398e-05, 6.029100000000398e-05, 6.027699999999747e-05, 6.030500000000355e-05, 6.0263999999997375e-05, 6.0319999999995655e-05, 6.0278000000003884e-05, 6.027699999999747e-05, 6.0278000000003884e-05, 6.0306000000003024e-05, 6.0319999999995655e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.027699999999747e-05, 6.029100000000398e-05, 6.030499999999661e-05, 6.0306000000003024e-05, 6.0277999999996945e-05, 6.0347999999994795e-05, 6.0292000000003454e-05, 6.030499999999661e-05, 6.02629999999979e-05, 6.0277999999996945e-05, 6.0263999999997375e-05, 6.0264000000004314e-05]</msg>
<status status="PASS" starttime="20201029 09:33:30.094" endtime="20201029 09:33:30.098"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.082" endtime="20201029 09:33:30.099"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.581" endtime="20201029 09:33:30.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.550" endtime="20201029 09:33:30.101"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.108" endtime="20201029 09:33:30.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.104" endtime="20201029 09:33:30.132"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.153" endtime="20201029 09:33:30.167"></status>
</kw>
<msg timestamp="20201029 09:33:30.168" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.150" endtime="20201029 09:33:30.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.174" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.170" endtime="20201029 09:33:30.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.177" endtime="20201029 09:33:30.182"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.142" endtime="20201029 09:33:30.184"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.137" endtime="20201029 09:33:30.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.202" endtime="20201029 09:33:30.558"></status>
</kw>
<msg timestamp="20201029 09:33:30.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035757458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.199" endtime="20201029 09:33:30.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035686792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035757458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.567" endtime="20201029 09:33:30.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.587" endtime="20201029 09:33:30.591"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.191" endtime="20201029 09:33:30.592"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.187" endtime="20201029 09:33:30.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.603" level="INFO">${PHILIP_RES} = [{'diff': 7.066599999999701e-05}, {'diff': 7.069400000000309e-05}, {'diff': 7.068100000000299e-05}, {'diff': 7.069399999999615e-05}, {'diff': 7.066600000000395e-05}, {'diff': 7.068099999999605e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:30.595" endtime="20201029 09:33:30.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.613" level="INFO">${RESULT} = {'diff': [7.066599999999701e-05, 7.069400000000309e-05, 7.068100000000299e-05, 7.069399999999615e-05, 7.066600000000395e-05, 7.068099999999605e-05, 7.066600000000395e-05, 7.069400000000309e-05, 7.0693...</msg>
<status status="PASS" starttime="20201029 09:33:30.605" endtime="20201029 09:33:30.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.624" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.621" endtime="20201029 09:33:30.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.629" level="INFO">VALUE: [7.066599999999701e-05, 7.069400000000309e-05, 7.068100000000299e-05, 7.069399999999615e-05, 7.066600000000395e-05, 7.068099999999605e-05, 7.066600000000395e-05, 7.069400000000309e-05, 7.069399999999615e-05, 7.066700000000342e-05, 7.072299999999476e-05, 7.065299999999691e-05, 7.066599999999701e-05, 7.066699999999648e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.070800000000266e-05, 8.069500000000562e-05, 7.069500000000256e-05, 7.067999999999658e-05, 7.066600000000395e-05, 7.070900000000213e-05, 7.073700000000127e-05, 7.068000000000352e-05, 7.070799999999572e-05, 7.065300000000385e-05, 7.068100000000299e-05, 7.069399999999615e-05, 7.068100000000299e-05, 7.066699999999648e-05, 7.068100000000299e-05, 7.063899999999734e-05, 7.068099999999605e-05, 7.069500000000256e-05, 7.067999999999658e-05, 7.070800000000266e-05, 7.069500000000256e-05, 7.066699999999648e-05, 7.063900000000428e-05, 7.069399999999615e-05, 7.070800000000266e-05, 7.069500000000256e-05, 7.062499999999777e-05, 7.066600000000395e-05, 7.066699999999648e-05, 7.070900000000213e-05, 7.059699999999863e-05, 7.069399999999615e-05, 7.069500000000256e-05, 7.066599999999701e-05]</msg>
<status status="PASS" starttime="20201029 09:33:30.626" endtime="20201029 09:33:30.630"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.615" endtime="20201029 09:33:30.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.133" endtime="20201029 09:33:30.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.102" endtime="20201029 09:33:30.634"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.640" endtime="20201029 09:33:30.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.636" endtime="20201029 09:33:30.664"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.688" endtime="20201029 09:33:30.703"></status>
</kw>
<msg timestamp="20201029 09:33:30.704" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.684" endtime="20201029 09:33:30.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.711" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.706" endtime="20201029 09:33:30.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.713" endtime="20201029 09:33:30.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.677" endtime="20201029 09:33:30.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.672" endtime="20201029 09:33:30.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.737" endtime="20201029 09:33:31.088"></status>
</kw>
<msg timestamp="20201029 09:33:31.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038190028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038271889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.733" endtime="20201029 09:33:31.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038190028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038271889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.098" endtime="20201029 09:33:31.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.117" endtime="20201029 09:33:31.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.726" endtime="20201029 09:33:31.123"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.721" endtime="20201029 09:33:31.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.134" level="INFO">${PHILIP_RES} = [{'diff': 8.186100000000252e-05}, {'diff': 8.188900000000165e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.1846999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:31.126" endtime="20201029 09:33:31.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.143" level="INFO">${RESULT} = {'diff': [8.186100000000252e-05, 8.188900000000165e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.1846999999996e-05, 8.187499999999515e-05, 8.186199999999505e-05, 8.186099...</msg>
<status status="PASS" starttime="20201029 09:33:31.136" endtime="20201029 09:33:31.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.154" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.152" endtime="20201029 09:33:31.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.161" level="INFO">VALUE: [8.186100000000252e-05, 8.188900000000165e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.1846999999996e-05, 8.187499999999515e-05, 8.186199999999505e-05, 8.186099999999558e-05, 8.1846999999996e-05, 8.183300000000338e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.184700000000295e-05, 8.188799999999524e-05, 8.1846999999996e-05, 8.1846999999996e-05, 8.186100000000252e-05, 8.184800000000242e-05, 8.188900000000165e-05, 8.186100000000252e-05, 8.187500000000208e-05, 8.186099999999558e-05, 8.186099999999558e-05, 8.183299999999644e-05, 8.187500000000208e-05, 8.184800000000242e-05, 8.184700000000295e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.187500000000208e-05, 8.1846999999996e-05, 8.186099999999558e-05, 8.181899999999687e-05, 8.187500000000208e-05, 8.184700000000295e-05, 8.183300000000338e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.183299999999644e-05, 8.1846999999996e-05, 8.186099999999558e-05, 8.181999999999634e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.184800000000242e-05, 8.184700000000295e-05, 8.183299999999644e-05]</msg>
<status status="PASS" starttime="20201029 09:33:31.156" endtime="20201029 09:33:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.145" endtime="20201029 09:33:31.165"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.666" endtime="20201029 09:33:31.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.635" endtime="20201029 09:33:31.166"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.172" endtime="20201029 09:33:31.194"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.168" endtime="20201029 09:33:31.196"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.217" endtime="20201029 09:33:31.232"></status>
</kw>
<msg timestamp="20201029 09:33:31.233" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.214" endtime="20201029 09:33:31.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.239" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.235" endtime="20201029 09:33:31.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.242" endtime="20201029 09:33:31.245"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.206" endtime="20201029 09:33:31.247"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.201" endtime="20201029 09:33:31.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.267" endtime="20201029 09:33:31.608"></status>
</kw>
<msg timestamp="20201029 09:33:31.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035022194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035115931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.262" endtime="20201029 09:33:31.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035022194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035115931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.618" endtime="20201029 09:33:31.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.637" endtime="20201029 09:33:31.641"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.255" endtime="20201029 09:33:31.642"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.250" endtime="20201029 09:33:31.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.653" level="INFO">${PHILIP_RES} = [{'diff': 9.373700000000346e-05}, {'diff': 9.379199999999532e-05}, {'diff': 9.377800000000269e-05}, {'diff': 9.375000000000355e-05}, {'diff': 9.377800000000269e-05}, {'diff': 9.377699999999628e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:31.646" endtime="20201029 09:33:31.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.664" level="INFO">${RESULT} = {'diff': [9.373700000000346e-05, 9.379199999999532e-05, 9.377800000000269e-05, 9.375000000000355e-05, 9.377800000000269e-05, 9.377699999999628e-05, 9.377699999999628e-05, 9.380500000000236e-05, 9.3778...</msg>
<status status="PASS" starttime="20201029 09:33:31.655" endtime="20201029 09:33:31.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.676" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.674" endtime="20201029 09:33:31.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.682" level="INFO">VALUE: [9.373700000000346e-05, 9.379199999999532e-05, 9.377800000000269e-05, 9.375000000000355e-05, 9.377800000000269e-05, 9.377699999999628e-05, 9.377699999999628e-05, 9.380500000000236e-05, 9.377800000000269e-05, 9.377800000000269e-05, 9.374999999999661e-05, 9.379199999999532e-05, 9.380500000000236e-05, 9.379100000000279e-05, 9.380499999999542e-05, 9.379199999999532e-05, 9.377800000000269e-05, 9.377800000000269e-05, 9.377800000000269e-05, 9.38059999999949e-05, 9.379199999999532e-05, 9.379100000000279e-05, 9.379100000000279e-05, 9.376399999999618e-05, 9.377799999999575e-05, 9.379200000000226e-05, 9.38200000000014e-05, 9.379200000000226e-05, 9.386100000000064e-05, 9.380499999999542e-05, 9.377800000000269e-05, 9.379200000000226e-05, 9.380600000000183e-05, 9.377799999999575e-05, 9.379200000000226e-05, 9.377800000000269e-05, 9.373600000000398e-05, 9.372199999999747e-05, 9.377799999999575e-05, 9.374999999999661e-05, 9.379200000000226e-05, 9.380600000000183e-05, 9.386100000000064e-05, 9.376399999999618e-05, 9.377700000000322e-05, 9.377700000000322e-05, 9.375000000000355e-05, 9.384700000000107e-05, 9.377800000000269e-05, 9.38200000000014e-05]</msg>
<status status="PASS" starttime="20201029 09:33:31.679" endtime="20201029 09:33:31.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.667" endtime="20201029 09:33:31.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.197" endtime="20201029 09:33:31.687"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.167" endtime="20201029 09:33:31.687"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.693" endtime="20201029 09:33:31.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.689" endtime="20201029 09:33:31.717"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.738" endtime="20201029 09:33:31.754"></status>
</kw>
<msg timestamp="20201029 09:33:31.755" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.734" endtime="20201029 09:33:31.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.761" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.757" endtime="20201029 09:33:31.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.764" endtime="20201029 09:33:31.768"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.727" endtime="20201029 09:33:31.769"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.722" endtime="20201029 09:33:31.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.788" endtime="20201029 09:33:32.133"></status>
</kw>
<msg timestamp="20201029 09:33:32.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035252986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035359472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.784" endtime="20201029 09:33:32.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035252986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035359472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.142" endtime="20201029 09:33:32.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.160" endtime="20201029 09:33:32.164"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.777" endtime="20201029 09:33:32.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.772" endtime="20201029 09:33:32.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.176" level="INFO">${PHILIP_RES} = [{'diff': 0.00010648600000000286}, {'diff': 0.00010647200000000329}, {'diff': 0.00010647199999999635}, {'diff': 0.00010648600000000286}, {'diff': 0.00010649999999999549}, {'diff': 0.000106514000000002...</msg>
<status status="PASS" starttime="20201029 09:33:32.169" endtime="20201029 09:33:32.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.187" level="INFO">${RESULT} = {'diff': [0.00010648600000000286, 0.00010647200000000329, 0.00010647199999999635, 0.00010648600000000286, 0.00010649999999999549, 0.000106514000000002, 0.00010650000000000243, 0.00010648599999999592, ...</msg>
<status status="PASS" starttime="20201029 09:33:32.178" endtime="20201029 09:33:32.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.198" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.196" endtime="20201029 09:33:32.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.203" level="INFO">VALUE: [0.00010648600000000286, 0.00010647200000000329, 0.00010647199999999635, 0.00010648600000000286, 0.00010649999999999549, 0.000106514000000002, 0.00010650000000000243, 0.00010648599999999592, 0.00010647200000000329, 0.00010648599999999592, 0.00010648600000000286, 0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010648600000000286, 0.00010648599999999592, 0.00010650000000000243, 0.00010650000000000243, 0.00010648600000000286, 0.00010650000000000243, 0.00010647199999999635, 0.00010647200000000329, 0.00010645899999999625, 0.00010652800000000157, 0.00010645900000000319, 0.00010651399999999506, 0.00010648600000000286, 0.00010650000000000243, 0.00010647199999999635, 0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010641699999999754, 0.00010648699999999539, 0.00010648600000000286, 0.00010648599999999592, 0.00010650000000000243, 0.00010647200000000329, 0.00010648599999999592, 0.00010647200000000329, 0.00010655499999999429, 0.00010650000000000243, 0.00010647300000000276, 0.00010647199999999635, 0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010642999999999764]</msg>
<status status="PASS" starttime="20201029 09:33:32.200" endtime="20201029 09:33:32.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.189" endtime="20201029 09:33:32.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.718" endtime="20201029 09:33:32.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.688" endtime="20201029 09:33:32.215"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.220" endtime="20201029 09:33:32.242"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.217" endtime="20201029 09:33:32.244"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.265" endtime="20201029 09:33:32.281"></status>
</kw>
<msg timestamp="20201029 09:33:32.282" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.261" endtime="20201029 09:33:32.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.289" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.285" endtime="20201029 09:33:32.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.291" endtime="20201029 09:33:32.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.254" endtime="20201029 09:33:32.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.249" endtime="20201029 09:33:32.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.314" endtime="20201029 09:33:32.665"></status>
</kw>
<msg timestamp="20201029 09:33:32.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034936931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035056861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.311" endtime="20201029 09:33:32.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034936931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035056861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.674" endtime="20201029 09:33:32.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.692" endtime="20201029 09:33:32.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.304" endtime="20201029 09:33:32.698"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.299" endtime="20201029 09:33:32.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.708" level="INFO">${PHILIP_RES} = [{'diff': 0.0001199300000000042}, {'diff': 0.00011994500000000324}, {'diff': 0.00011988900000000496}, {'diff': 0.00011995900000000281}, {'diff': 0.0001199300000000042}, {'diff': 0.00011995900000000281...</msg>
<status status="PASS" starttime="20201029 09:33:32.701" endtime="20201029 09:33:32.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.718" level="INFO">${RESULT} = {'diff': [0.0001199300000000042, 0.00011994500000000324, 0.00011988900000000496, 0.00011995900000000281, 0.0001199300000000042, 0.00011995900000000281, 0.00011995800000000334, 0.00011994399999999683, ...</msg>
<status status="PASS" starttime="20201029 09:33:32.710" endtime="20201029 09:33:32.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.728" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.726" endtime="20201029 09:33:32.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.733" level="INFO">VALUE: [0.0001199300000000042, 0.00011994500000000324, 0.00011988900000000496, 0.00011995900000000281, 0.0001199300000000042, 0.00011995900000000281, 0.00011995800000000334, 0.00011994399999999683, 0.00011986199999999836, 0.0001199579999999964, 0.0001199449999999963, 0.00011994399999999683, 0.0001199449999999963, 0.0001199029999999976, 0.00011988899999999802, 0.00011992999999999726, 0.00011993099999999673, 0.00011992999999999726, 0.00011998600000000248, 0.00011994500000000324, 0.00011995800000000334, 0.00011994500000000324, 0.0001199300000000042, 0.00011994500000000324, 0.0001199300000000042, 0.00011994500000000324, 0.00011994400000000377, 0.00011994500000000324, 0.00011995800000000334, 0.00011993099999999673, 0.00011998600000000248, 0.0001199579999999964, 0.00011993099999999673, 0.00011994399999999683, 0.00011991699999999716, 0.0001199579999999964, 0.0001199449999999963, 0.00011994399999999683, 0.00011995899999999587, 0.00011994399999999683, 0.00011988899999999802, 0.00011993100000000367, 0.0001199300000000042, 0.00011994500000000324, 0.00011994400000000377, 0.00011993100000000367, 0.00011990200000000506, 0.00011994500000000324, 0.00011998600000000248, 0.00011993100000000367]</msg>
<status status="PASS" starttime="20201029 09:33:32.730" endtime="20201029 09:33:32.735"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.719" endtime="20201029 09:33:32.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.245" endtime="20201029 09:33:32.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.215" endtime="20201029 09:33:32.738"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.744" endtime="20201029 09:33:32.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.740" endtime="20201029 09:33:32.768"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.788" endtime="20201029 09:33:32.810"></status>
</kw>
<msg timestamp="20201029 09:33:32.812" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.785" endtime="20201029 09:33:32.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.818" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.814" endtime="20201029 09:33:32.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.820" endtime="20201029 09:33:32.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.778" endtime="20201029 09:33:32.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.773" endtime="20201029 09:33:32.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.844" endtime="20201029 09:33:33.191"></status>
</kw>
<msg timestamp="20201029 09:33:33.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039765722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039899889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.840" endtime="20201029 09:33:33.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039765722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039899889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.200" endtime="20201029 09:33:33.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.221" endtime="20201029 09:33:33.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.833" endtime="20201029 09:33:33.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.828" endtime="20201029 09:33:33.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.238" level="INFO">${PHILIP_RES} = [{'diff': 0.00013416699999999754}, {'diff': 0.0001341809999999971}, {'diff': 0.00013418100000000405}, {'diff': 0.00013416699999999754}, {'diff': 0.00013416700000000448}, {'diff': 0.0001341659999999980...</msg>
<status status="PASS" starttime="20201029 09:33:33.230" endtime="20201029 09:33:33.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.248" level="INFO">${RESULT} = {'diff': [0.00013416699999999754, 0.0001341809999999971, 0.00013418100000000405, 0.00013416699999999754, 0.00013416700000000448, 0.00013416599999999806, 0.00013415200000000543, 0.00013413799999999892,...</msg>
<status status="PASS" starttime="20201029 09:33:33.240" endtime="20201029 09:33:33.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.260" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.257" endtime="20201029 09:33:33.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.266" level="INFO">VALUE: [0.00013416699999999754, 0.0001341809999999971, 0.00013418100000000405, 0.00013416699999999754, 0.00013416700000000448, 0.00013416599999999806, 0.00013415200000000543, 0.00013413799999999892, 0.00013416700000000448, 0.00013416699999999754, 0.00013418100000000405, 0.00013416699999999754, 0.00013418100000000405, 0.00013415299999999797, 0.00013416699999999754, 0.0001342080000000037, 0.00013412499999999883, 0.0001341389999999984, 0.00013417999999999763, 0.0001341530000000049, 0.0001341939999999972, 0.00013416700000000448, 0.00013416699999999754, 0.00013415299999999797, 0.00013423599999999591, 0.00013416699999999754, 0.00013417999999999763, 0.00013417999999999763, 0.000134166000000005, 0.00013420799999999677, 0.00013419400000000414, 0.00013415299999999797, 0.00013412500000000577, 0.0001341809999999971, 0.00013416700000000448, 0.00013416699999999754, 0.00013416699999999754, 0.00013416699999999754, 0.0001341939999999972, 0.0001341809999999971, 0.00013416599999999806, 0.00013416700000000448, 0.00013417999999999763, 0.00013418100000000405, 0.00013415299999999797, 0.00013416700000000448, 0.00013416699999999754, 0.00013418000000000457, 0.0001341809999999971, 0.00013416599999999806]</msg>
<status status="PASS" starttime="20201029 09:33:33.262" endtime="20201029 09:33:33.268"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.250" endtime="20201029 09:33:33.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.769" endtime="20201029 09:33:33.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.739" endtime="20201029 09:33:33.271"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.278" endtime="20201029 09:33:33.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.274" endtime="20201029 09:33:33.302"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.324" endtime="20201029 09:33:33.342"></status>
</kw>
<msg timestamp="20201029 09:33:33.343" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.321" endtime="20201029 09:33:33.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.350" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.346" endtime="20201029 09:33:33.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.352" endtime="20201029 09:33:33.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.314" endtime="20201029 09:33:33.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.309" endtime="20201029 09:33:33.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.375" endtime="20201029 09:33:33.722"></status>
</kw>
<msg timestamp="20201029 09:33:33.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036746139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036895292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.372" endtime="20201029 09:33:33.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036746139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036895292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.732" endtime="20201029 09:33:33.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.750" endtime="20201029 09:33:33.754"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.365" endtime="20201029 09:33:33.755"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.360" endtime="20201029 09:33:33.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.766" level="INFO">${PHILIP_RES} = [{'diff': 0.00014915300000000603}, {'diff': 0.00014909699999999387}, {'diff': 0.00014911199999999986}, {'diff': 0.00014913899999999952}, {'diff': 0.00014916699999999866}, {'diff': 0.000149124999999999...</msg>
<status status="PASS" starttime="20201029 09:33:33.758" endtime="20201029 09:33:33.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.775" level="INFO">${RESULT} = {'diff': [0.00014915300000000603, 0.00014909699999999387, 0.00014911199999999986, 0.00014913899999999952, 0.00014916699999999866, 0.00014912499999999995, 0.00014913899999999952, 0.0001491659999999992,...</msg>
<status status="PASS" starttime="20201029 09:33:33.768" endtime="20201029 09:33:33.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.786" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.783" endtime="20201029 09:33:33.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.792" level="INFO">VALUE: [0.00014915300000000603, 0.00014909699999999387, 0.00014911199999999986, 0.00014913899999999952, 0.00014916699999999866, 0.00014912499999999995, 0.00014913899999999952, 0.0001491659999999992, 0.0001491529999999991, 0.00014915199999999962, 0.00014917999999999876, 0.00014915200000000656, 0.0001491529999999991, 0.0001491659999999992, 0.00014913899999999952, 0.0001491659999999992, 0.0001491529999999991, 0.00014915199999999962, 0.0001491529999999991, 0.0001491659999999992, 0.00014912499999999995, 0.0001491529999999991, 0.00014911100000000038, 0.00014915300000000603, 0.0001491529999999991, 0.0001491529999999991, 0.00014913899999999952, 0.0001491529999999991, 0.0001491529999999991, 0.0001491529999999991, 0.00014916699999999866, 0.00014916699999999866, 0.0001491529999999991, 0.0001491529999999991, 0.00014909699999999387, 0.0001492220000000044, 0.00014913899999999952, 0.0001491529999999991, 0.00014916699999999866, 0.0001491529999999991, 0.00014917999999999876, 0.00014918099999999823, 0.0001491659999999992, 0.00014913899999999952, 0.0001491659999999992, 0.0001491670000000056, 0.00014917999999999876, 0.00014916699999999866, 0.0001491659999999992, 0.0001491529999999991]</msg>
<status status="PASS" starttime="20201029 09:33:33.788" endtime="20201029 09:33:33.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.777" endtime="20201029 09:33:33.795"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.303" endtime="20201029 09:33:33.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.272" endtime="20201029 09:33:33.797"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.803" endtime="20201029 09:33:33.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.799" endtime="20201029 09:33:33.826"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.847" endtime="20201029 09:33:33.866"></status>
</kw>
<msg timestamp="20201029 09:33:33.867" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.844" endtime="20201029 09:33:33.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.873" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.869" endtime="20201029 09:33:33.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.876" endtime="20201029 09:33:33.879"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.837" endtime="20201029 09:33:33.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.831" endtime="20201029 09:33:33.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.899" endtime="20201029 09:33:34.266"></status>
</kw>
<msg timestamp="20201029 09:33:34.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0346005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034765389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:33.896" endtime="20201029 09:33:34.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0346005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034765389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:34.284" endtime="20201029 09:33:34.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.327" endtime="20201029 09:33:34.343"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.888" endtime="20201029 09:33:34.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.884" endtime="20201029 09:33:34.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.367" level="INFO">${PHILIP_RES} = [{'diff': 0.0001648890000000014}, {'diff': 0.00016490300000000097}, {'diff': 0.00016491700000000054}, {'diff': 0.00016491600000000106}, {'diff': 0.00016486100000000226}, {'diff': 0.0001649310000000001...</msg>
<status status="PASS" starttime="20201029 09:33:34.358" endtime="20201029 09:33:34.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.378" level="INFO">${RESULT} = {'diff': [0.0001648890000000014, 0.00016490300000000097, 0.00016491700000000054, 0.00016491600000000106, 0.00016486100000000226, 0.0001649310000000001, 0.0001648890000000014, 0.00016491700000000054, 0...</msg>
<status status="PASS" starttime="20201029 09:33:34.369" endtime="20201029 09:33:34.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.388" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.386" endtime="20201029 09:33:34.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.394" level="INFO">VALUE: [0.0001648890000000014, 0.00016490300000000097, 0.00016491700000000054, 0.00016491600000000106, 0.00016486100000000226, 0.0001649310000000001, 0.0001648890000000014, 0.00016491700000000054, 0.00016491700000000054, 0.0001649020000000015, 0.0001649020000000015, 0.00016494499999999968, 0.0001648890000000014, 0.00016486100000000226, 0.00016495799999999977, 0.00016493000000000063, 0.0001649020000000015, 0.00016491700000000054, 0.00016490299999999403, 0.0001649310000000001, 0.0001648890000000014, 0.0001648749999999949, 0.0001649020000000015, 0.00016490300000000097, 0.00016491700000000054, 0.00016497199999999934, 0.00016490300000000097, 0.00016490300000000097, 0.00016490199999999455, 0.0001648890000000014, 0.00016491700000000054, 0.0001649310000000001, 0.0001649310000000001, 0.00016490300000000097, 0.00016491600000000106, 0.00016490300000000097, 0.0001648890000000014, 0.0001648890000000014, 0.0001649310000000001, 0.00016491600000000106, 0.00016488800000000192, 0.00016491599999999412, 0.00016490300000000097, 0.0001649310000000001, 0.00016488899999999446, 0.00016490300000000097, 0.00016491600000000106, 0.00016490300000000097, 0.00016491700000000054, 0.00016490300000000097]</msg>
<status status="PASS" starttime="20201029 09:33:34.391" endtime="20201029 09:33:34.395"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.379" endtime="20201029 09:33:34.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.828" endtime="20201029 09:33:34.398"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.798" endtime="20201029 09:33:34.399"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.404" endtime="20201029 09:33:34.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.401" endtime="20201029 09:33:34.428"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.448" endtime="20201029 09:33:34.468"></status>
</kw>
<msg timestamp="20201029 09:33:34.469" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.445" endtime="20201029 09:33:34.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.475" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.471" endtime="20201029 09:33:34.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.478" endtime="20201029 09:33:34.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.438" endtime="20201029 09:33:34.483"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.433" endtime="20201029 09:33:34.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.501" endtime="20201029 09:33:34.844"></status>
</kw>
<msg timestamp="20201029 09:33:34.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03441425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034595681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:34.498" endtime="20201029 09:33:34.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03441425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034595681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:34.854" endtime="20201029 09:33:34.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.876" endtime="20201029 09:33:34.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.490" endtime="20201029 09:33:34.883"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.486" endtime="20201029 09:33:34.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.893" level="INFO">${PHILIP_RES} = [{'diff': 0.00018143100000000273}, {'diff': 0.0001814309999999958}, {'diff': 0.00018141700000000316}, {'diff': 0.00018141699999999622}, {'diff': 0.00018144499999999536}, {'diff': 0.0001814170000000031...</msg>
<status status="PASS" starttime="20201029 09:33:34.886" endtime="20201029 09:33:34.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.904" level="INFO">${RESULT} = {'diff': [0.00018143100000000273, 0.0001814309999999958, 0.00018141700000000316, 0.00018141699999999622, 0.00018144499999999536, 0.00018141700000000316, 0.00018141699999999622, 0.00018141699999999622,...</msg>
<status status="PASS" starttime="20201029 09:33:34.895" endtime="20201029 09:33:34.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.915" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.912" endtime="20201029 09:33:34.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.920" level="INFO">VALUE: [0.00018143100000000273, 0.0001814309999999958, 0.00018141700000000316, 0.00018141699999999622, 0.00018144499999999536, 0.00018141700000000316, 0.00018141699999999622, 0.00018141699999999622, 0.00018141700000000316, 0.0001814309999999958, 0.00018141700000000316, 0.0001814030000000036, 0.00018141699999999622, 0.00018143000000000326, 0.00018143000000000326, 0.00018142999999999632, 0.00018141600000000369, 0.00018138900000000402, 0.00018142999999999632, 0.00018143000000000326, 0.00018141699999999622, 0.00018140299999999665, 0.00018141700000000316, 0.00018140299999999665, 0.00018143100000000273, 0.00018141700000000316, 0.0001814309999999958, 0.0001814450000000023, 0.0001814450000000023, 0.0001814309999999958, 0.00018141700000000316, 0.0001814030000000036, 0.00018138899999999708, 0.00018141700000000316, 0.00018145900000000187, 0.00018145799999999546, 0.00018143000000000326, 0.00018142999999999632, 0.00018140199999999718, 0.00018143000000000326, 0.00018140199999999718, 0.00018141599999999675, 0.00018141700000000316, 0.00018141699999999622, 0.00018142999999999632, 0.0001814030000000036, 0.00018138899999999708, 0.00018140299999999665, 0.00018143100000000273, 0.0001814309999999958]</msg>
<status status="PASS" starttime="20201029 09:33:34.917" endtime="20201029 09:33:34.921"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.906" endtime="20201029 09:33:34.923"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.429" endtime="20201029 09:33:34.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.399" endtime="20201029 09:33:34.925"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.930" endtime="20201029 09:33:34.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.927" endtime="20201029 09:33:34.956"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.980" endtime="20201029 09:33:35.001"></status>
</kw>
<msg timestamp="20201029 09:33:35.002" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.976" endtime="20201029 09:33:35.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.008" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.004" endtime="20201029 09:33:35.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.011" endtime="20201029 09:33:35.015"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.969" endtime="20201029 09:33:35.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.963" endtime="20201029 09:33:35.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.035" endtime="20201029 09:33:35.377"></status>
</kw>
<msg timestamp="20201029 09:33:35.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037779556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037978278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.031" endtime="20201029 09:33:35.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037779556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037978278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.386" endtime="20201029 09:33:35.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.405" endtime="20201029 09:33:35.409"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.024" endtime="20201029 09:33:35.410"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.019" endtime="20201029 09:33:35.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.421" level="INFO">${PHILIP_RES} = [{'diff': 0.0001987219999999984}, {'diff': 0.00019870799999999883}, {'diff': 0.00019862500000000088}, {'diff': 0.00019869399999999926}, {'diff': 0.00019863800000000098}, {'diff': 0.0001986949999999987...</msg>
<status status="PASS" starttime="20201029 09:33:35.413" endtime="20201029 09:33:35.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.430" level="INFO">${RESULT} = {'diff': [0.0001987219999999984, 0.00019870799999999883, 0.00019862500000000088, 0.00019869399999999926, 0.00019863800000000098, 0.00019869499999999873, 0.00019868099999999916, 0.00019869499999999873,...</msg>
<status status="PASS" starttime="20201029 09:33:35.423" endtime="20201029 09:33:35.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.440" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.438" endtime="20201029 09:33:35.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.446" level="INFO">VALUE: [0.0001987219999999984, 0.00019870799999999883, 0.00019862500000000088, 0.00019869399999999926, 0.00019863800000000098, 0.00019869499999999873, 0.00019868099999999916, 0.00019869499999999873, 0.00019869399999999926, 0.00019870799999999883, 0.00019870799999999883, 0.00019862500000000088, 0.00019870900000000524, 0.00019863900000000045, 0.00019868099999999916, 0.00019870799999999883, 0.0001986799999999997, 0.00019870799999999883, 0.00019870799999999883, 0.00019868099999999916, 0.00019868099999999916, 0.00019869499999999873, 0.00019870799999999883, 0.00019869399999999926, 0.0001986799999999997, 0.0001986799999999997, 0.00019870799999999883, 0.00019868099999999916, 0.0001986810000000061, 0.00019869399999999926, 0.00019870799999999883, 0.0001986799999999997, 0.0001986799999999997, 0.00019869499999999873, 0.00019866600000000012, 0.0001987089999999983, 0.00019863900000000045, 0.0001986669999999996, 0.0001987219999999984, 0.00019870799999999883, 0.00019870799999999883, 0.00019874999999999754, 0.00019875000000000448, 0.00019876400000000405, 0.0001986940000000062, 0.00019869399999999926, 0.00019870799999999883, 0.0001987219999999984, 0.00019868099999999916, 0.0001987089999999983]</msg>
<status status="PASS" starttime="20201029 09:33:35.443" endtime="20201029 09:33:35.448"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.432" endtime="20201029 09:33:35.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.958" endtime="20201029 09:33:35.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.926" endtime="20201029 09:33:35.451"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.457" endtime="20201029 09:33:35.478"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.453" endtime="20201029 09:33:35.480"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.501" endtime="20201029 09:33:35.525"></status>
</kw>
<msg timestamp="20201029 09:33:35.526" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.498" endtime="20201029 09:33:35.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.532" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.529" endtime="20201029 09:33:35.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.535" endtime="20201029 09:33:35.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.490" endtime="20201029 09:33:35.540"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.485" endtime="20201029 09:33:35.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.558" endtime="20201029 09:33:35.892"></status>
</kw>
<msg timestamp="20201029 09:33:35.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036460236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.555" endtime="20201029 09:33:35.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036243458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036460236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.902" endtime="20201029 09:33:35.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.920" endtime="20201029 09:33:35.924"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.548" endtime="20201029 09:33:35.926"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.543" endtime="20201029 09:33:35.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.936" level="INFO">${PHILIP_RES} = [{'diff': 0.0002167780000000008}, {'diff': 0.00021673700000000157}, {'diff': 0.00021672299999999506}, {'diff': 0.00021672199999999558}, {'diff': 0.00021675000000000166}, {'diff': 0.0002167360000000021...</msg>
<status status="PASS" starttime="20201029 09:33:35.929" endtime="20201029 09:33:35.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.945" level="INFO">${RESULT} = {'diff': [0.0002167780000000008, 0.00021673700000000157, 0.00021672299999999506, 0.00021672199999999558, 0.00021675000000000166, 0.0002167360000000021, 0.00021675000000000166, 0.00021675000000000166, ...</msg>
<status status="PASS" starttime="20201029 09:33:35.938" endtime="20201029 09:33:35.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.956" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.954" endtime="20201029 09:33:35.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.961" level="INFO">VALUE: [0.0002167780000000008, 0.00021673700000000157, 0.00021672299999999506, 0.00021672199999999558, 0.00021675000000000166, 0.0002167360000000021, 0.00021675000000000166, 0.00021675000000000166, 0.00021675000000000166, 0.00021676400000000123, 0.00021675000000000166, 0.0002167360000000021, 0.00021672200000000252, 0.00021675000000000166, 0.00021675000000000166, 0.00021673599999999515, 0.00021676400000000123, 0.0002167780000000008, 0.000216723000000002, 0.00021666699999999678, 0.00021673599999999515, 0.00021673599999999515, 0.00021672200000000252, 0.00021680599999999994, 0.00021680599999999994, 0.00021675000000000166, 0.00021676299999999482, 0.000216723000000002, 0.0002167360000000021, 0.0002167360000000021, 0.0002167360000000021, 0.0002167360000000021, 0.00021674999999999472, 0.00021675000000000166, 0.00021675000000000166, 0.00021675000000000166, 0.00021675000000000166, 0.00021676400000000123, 0.00021673599999999515, 0.00021675000000000166, 0.0002167360000000021, 0.0002167360000000021, 0.0002167780000000008, 0.00021675000000000166, 0.00021672299999999506, 0.00021672200000000252, 0.00021675000000000166, 0.00021675000000000166, 0.0002167360000000021, 0.00021670799999999601]</msg>
<status status="PASS" starttime="20201029 09:33:35.958" endtime="20201029 09:33:35.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.947" endtime="20201029 09:33:35.964"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.481" endtime="20201029 09:33:35.974"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.452" endtime="20201029 09:33:35.975"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.981" endtime="20201029 09:33:36.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.977" endtime="20201029 09:33:36.005"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.027" endtime="20201029 09:33:36.050"></status>
</kw>
<msg timestamp="20201029 09:33:36.051" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.024" endtime="20201029 09:33:36.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.057" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.053" endtime="20201029 09:33:36.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.060" endtime="20201029 09:33:36.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.017" endtime="20201029 09:33:36.065"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.011" endtime="20201029 09:33:36.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.084" endtime="20201029 09:33:36.421"></status>
</kw>
<msg timestamp="20201029 09:33:36.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037175375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037410917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.080" endtime="20201029 09:33:36.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037175375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037410917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.430" endtime="20201029 09:33:36.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.448" endtime="20201029 09:33:36.452"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.073" endtime="20201029 09:33:36.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.068" endtime="20201029 09:33:36.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.465" level="INFO">${PHILIP_RES} = [{'diff': 0.00023554200000000525}, {'diff': 0.0002355419999999983}, {'diff': 0.00023556899999999797}, {'diff': 0.00023555599999999788}, {'diff': 0.00023555599999999788}, {'diff': 0.0002355560000000048...</msg>
<status status="PASS" starttime="20201029 09:33:36.457" endtime="20201029 09:33:36.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.474" level="INFO">${RESULT} = {'diff': [0.00023554200000000525, 0.0002355419999999983, 0.00023556899999999797, 0.00023555599999999788, 0.00023555599999999788, 0.00023555600000000482, 0.00023555599999999788, 0.0002355419999999983, ...</msg>
<status status="PASS" starttime="20201029 09:33:36.467" endtime="20201029 09:33:36.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.484" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.482" endtime="20201029 09:33:36.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.491" level="INFO">VALUE: [0.00023554200000000525, 0.0002355419999999983, 0.00023556899999999797, 0.00023555599999999788, 0.00023555599999999788, 0.00023555600000000482, 0.00023555599999999788, 0.0002355419999999983, 0.00023555600000000482, 0.00023556899999999797, 0.00023555599999999788, 0.0002355690000000049, 0.0002355549999999984, 0.00023552799999999874, 0.00023555600000000482, 0.00023559699999999711, 0.00023556899999999797, 0.0002355690000000049, 0.00023555599999999788, 0.00023555599999999788, 0.00023555500000000534, 0.0002355419999999983, 0.0002355419999999983, 0.00023554099999999883, 0.0002355549999999984, 0.0002354999999999996, 0.0002355549999999984, 0.0002355549999999984, 0.0002355549999999984, 0.0002355549999999984, 0.0002355549999999984, 0.00023555500000000534, 0.00023554099999999883, 0.00023554099999999883, 0.00023555500000000534, 0.00023556899999999797, 0.00023554099999999883, 0.00023561100000000362, 0.0002355549999999984, 0.00023548600000000003, 0.00023554100000000577, 0.00023554099999999883, 0.00023548600000000003, 0.0002355549999999984, 0.0002355549999999984, 0.0002355549999999984, 0.00023547200000000046, 0.0002355549999999984, 0.00023554099999999883, 0.0002355549999999984]</msg>
<status status="PASS" starttime="20201029 09:33:36.486" endtime="20201029 09:33:36.492"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.475" endtime="20201029 09:33:36.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.006" endtime="20201029 09:33:36.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.975" endtime="20201029 09:33:36.496"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.502" endtime="20201029 09:33:36.523"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.498" endtime="20201029 09:33:36.525"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.546" endtime="20201029 09:33:36.569"></status>
</kw>
<msg timestamp="20201029 09:33:36.570" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.542" endtime="20201029 09:33:36.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.577" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.573" endtime="20201029 09:33:36.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.579" endtime="20201029 09:33:36.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.535" endtime="20201029 09:33:36.584"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.530" endtime="20201029 09:33:36.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.602" endtime="20201029 09:33:36.951"></status>
</kw>
<msg timestamp="20201029 09:33:36.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034277792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034532903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.599" endtime="20201029 09:33:36.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034277792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034532903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.963" endtime="20201029 09:33:36.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.982" endtime="20201029 09:33:36.986"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.592" endtime="20201029 09:33:36.988"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.587" endtime="20201029 09:33:36.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.000" level="INFO">${PHILIP_RES} = [{'diff': 0.00025511099999999537}, {'diff': 0.0002551250000000019}, {'diff': 0.00025512499999999494}, {'diff': 0.0002551110000000023}, {'diff': 0.0002551800000000007}, {'diff': 0.00025508300000000317}...</msg>
<status status="PASS" starttime="20201029 09:33:36.991" endtime="20201029 09:33:37.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.012" level="INFO">${RESULT} = {'diff': [0.00025511099999999537, 0.0002551250000000019, 0.00025512499999999494, 0.0002551110000000023, 0.0002551800000000007, 0.00025508300000000317, 0.00025512499999999494, 0.00025513900000000145, 0...</msg>
<status status="PASS" starttime="20201029 09:33:37.002" endtime="20201029 09:33:37.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.024" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.021" endtime="20201029 09:33:37.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.030" level="INFO">VALUE: [0.00025511099999999537, 0.0002551250000000019, 0.00025512499999999494, 0.0002551110000000023, 0.0002551800000000007, 0.00025508300000000317, 0.00025512499999999494, 0.00025513900000000145, 0.00025512499999999494, 0.000255138000000002, 0.00025513900000000145, 0.0002551250000000019, 0.0002551250000000019, 0.0002551250000000019, 0.00025509700000000274, 0.00025513900000000145, 0.0002551250000000019, 0.0002550560000000035, 0.0002551110000000023, 0.0002551250000000019, 0.00025513900000000145, 0.00025513799999999504, 0.0002551250000000019, 0.0002551389999999945, 0.0002551110000000023, 0.00025512499999999494, 0.0002551110000000023, 0.00025512499999999494, 0.0002551110000000023, 0.00025513799999999504, 0.0002551250000000019, 0.00025518100000000016, 0.0002551250000000019, 0.0002551110000000023, 0.00025508300000000317, 0.0002551250000000019, 0.00025507000000000307, 0.0002551110000000023, 0.0002551250000000019, 0.00025513900000000145, 0.00025512499999999494, 0.0002551110000000023, 0.00025511099999999537, 0.00025513900000000145, 0.00025512499999999494, 0.0002551250000000019, 0.0002551529999999941, 0.0002551110000000023, 0.00025512499999999494, 0.00025507000000000307]</msg>
<status status="PASS" starttime="20201029 09:33:37.026" endtime="20201029 09:33:37.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.014" endtime="20201029 09:33:37.034"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.526" endtime="20201029 09:33:37.035"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.497" endtime="20201029 09:33:37.036"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.042" endtime="20201029 09:33:37.064"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.038" endtime="20201029 09:33:37.066"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.088" endtime="20201029 09:33:37.114"></status>
</kw>
<msg timestamp="20201029 09:33:37.115" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.085" endtime="20201029 09:33:37.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.122" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.118" endtime="20201029 09:33:37.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.124" endtime="20201029 09:33:37.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.077" endtime="20201029 09:33:37.130"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.071" endtime="20201029 09:33:37.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.150" endtime="20201029 09:33:37.512"></status>
</kw>
<msg timestamp="20201029 09:33:37.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036983014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037258458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.146" endtime="20201029 09:33:37.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036983014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037258458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.522" endtime="20201029 09:33:37.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.542" endtime="20201029 09:33:37.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.138" endtime="20201029 09:33:37.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.133" endtime="20201029 09:33:37.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.559" level="INFO">${PHILIP_RES} = [{'diff': 0.0002754439999999997}, {'diff': 0.00027545799999999926}, {'diff': 0.0002754439999999997}, {'diff': 0.00027545899999999873}, {'diff': 0.00027547199999999883}, {'diff': 0.0002755000000000049}...</msg>
<status status="PASS" starttime="20201029 09:33:37.551" endtime="20201029 09:33:37.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.571" level="INFO">${RESULT} = {'diff': [0.0002754439999999997, 0.00027545799999999926, 0.0002754439999999997, 0.00027545899999999873, 0.00027547199999999883, 0.0002755000000000049, 0.00027545899999999873, 0.0002754439999999997, 0....</msg>
<status status="PASS" starttime="20201029 09:33:37.562" endtime="20201029 09:33:37.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.582" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.580" endtime="20201029 09:33:37.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.588" level="INFO">VALUE: [0.0002754439999999997, 0.00027545799999999926, 0.0002754439999999997, 0.00027545899999999873, 0.00027547199999999883, 0.0002755000000000049, 0.00027545899999999873, 0.0002754439999999997, 0.0002754729999999983, 0.00027545799999999926, 0.00027547199999999883, 0.0002753890000000009, 0.00027547199999999883, 0.00027545899999999873, 0.00027545799999999926, 0.00027545899999999873, 0.000275417, 0.00027545799999999926, 0.0002754870000000048, 0.00027545799999999926, 0.00027551399999999754, 0.00027545799999999926, 0.00027547199999999883, 0.00027545899999999873, 0.00027545799999999926, 0.00027547199999999883, 0.00027547199999999883, 0.00027538899999999394, 0.00027545899999999873, 0.0002754580000000062, 0.00027544499999999916, 0.00027547199999999883, 0.00027547199999999883, 0.00027545899999999873, 0.00027547199999999883, 0.00027545899999999873, 0.00027545799999999926, 0.0002754439999999997, 0.0002754450000000061, 0.00027547199999999883, 0.00027545799999999926, 0.00027545799999999926, 0.00027547199999999883, 0.000291389000000003, 0.0002755420000000036, 0.00027540300000000045, 0.000275402000000001, 0.00027544499999999916, 0.0002754300000000001, 0.00027547199999999883]</msg>
<status status="PASS" starttime="20201029 09:33:37.585" endtime="20201029 09:33:37.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.573" endtime="20201029 09:33:37.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.067" endtime="20201029 09:33:37.599"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.037" endtime="20201029 09:33:37.600"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.606" endtime="20201029 09:33:37.628"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.602" endtime="20201029 09:33:37.630"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.653" endtime="20201029 09:33:37.679"></status>
</kw>
<msg timestamp="20201029 09:33:37.681" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.649" endtime="20201029 09:33:37.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.687" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.683" endtime="20201029 09:33:37.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.690" endtime="20201029 09:33:37.694"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.641" endtime="20201029 09:33:37.696"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.636" endtime="20201029 09:33:37.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.715" endtime="20201029 09:33:38.081"></status>
</kw>
<msg timestamp="20201029 09:33:38.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037568083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.711" endtime="20201029 09:33:38.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037568083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.091" endtime="20201029 09:33:38.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.111" endtime="20201029 09:33:38.115"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.704" endtime="20201029 09:33:38.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.699" endtime="20201029 09:33:38.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.128" level="INFO">${PHILIP_RES} = [{'diff': 0.00029656900000000347}, {'diff': 0.00029655499999999696}, {'diff': 0.00029654100000000433}, {'diff': 0.00029662500000000175}, {'diff': 0.0002965550000000039}, {'diff': 0.0002965549999999969...</msg>
<status status="PASS" starttime="20201029 09:33:38.120" endtime="20201029 09:33:38.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.138" level="INFO">${RESULT} = {'diff': [0.00029656900000000347, 0.00029655499999999696, 0.00029654100000000433, 0.00029662500000000175, 0.0002965550000000039, 0.00029655499999999696, 0.00029655499999999696, 0.00029656900000000347,...</msg>
<status status="PASS" starttime="20201029 09:33:38.130" endtime="20201029 09:33:38.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.149" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.147" endtime="20201029 09:33:38.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.155" level="INFO">VALUE: [0.00029656900000000347, 0.00029655499999999696, 0.00029654100000000433, 0.00029662500000000175, 0.0002965550000000039, 0.00029655499999999696, 0.00029655499999999696, 0.00029656900000000347, 0.000296569999999996, 0.00029657000000000294, 0.0002965139999999977, 0.00029655600000000337, 0.0002965279999999973, 0.00029655599999999643, 0.00029657000000000294, 0.00029655599999999643, 0.00029658300000000304, 0.00029656899999999653, 0.0003098330000000024, 0.0002965409999999974, 0.00029654199999999686, 0.00029656900000000347, 0.0002966119999999947, 0.00029657000000000294, 0.0002965279999999973, 0.0002965840000000025, 0.00029654199999999686, 0.00029656899999999653, 0.00029655600000000337, 0.00029655599999999643, 0.0002965420000000038, 0.00029655499999999696, 0.00029651400000000466, 0.00029656899999999653, 0.00029656900000000347, 0.0002965409999999974, 0.00029655499999999696, 0.0002965420000000038, 0.00029654199999999686, 0.00029655600000000337, 0.00029649999999999815, 0.00029655600000000337, 0.0002965139999999977, 0.00029657000000000294, 0.00029655600000000337, 0.00029654199999999686, 0.00029652800000000423, 0.0002965409999999974, 0.00029654100000000433, 0.00029655499999999696]</msg>
<status status="PASS" starttime="20201029 09:33:38.152" endtime="20201029 09:33:38.157"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.140" endtime="20201029 09:33:38.158"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.631" endtime="20201029 09:33:38.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.601" endtime="20201029 09:33:38.160"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.166" endtime="20201029 09:33:38.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.163" endtime="20201029 09:33:38.190"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.213" endtime="20201029 09:33:38.246"></status>
</kw>
<msg timestamp="20201029 09:33:38.247" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.209" endtime="20201029 09:33:38.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.254" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.249" endtime="20201029 09:33:38.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.256" endtime="20201029 09:33:38.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.202" endtime="20201029 09:33:38.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.196" endtime="20201029 09:33:38.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.281" endtime="20201029 09:33:38.644"></status>
</kw>
<msg timestamp="20201029 09:33:38.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042380528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042698903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.278" endtime="20201029 09:33:38.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042380528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042698903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.654" endtime="20201029 09:33:38.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.673" endtime="20201029 09:33:38.677"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.270" endtime="20201029 09:33:38.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.265" endtime="20201029 09:33:38.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.690" level="INFO">${PHILIP_RES} = [{'diff': 0.0003183750000000027}, {'diff': 0.00031844400000000106}, {'diff': 0.0003184160000000019}, {'diff': 0.00031843100000000096}, {'diff': 0.00031844400000000106}, {'diff': 0.00031844400000000106...</msg>
<status status="PASS" starttime="20201029 09:33:38.682" endtime="20201029 09:33:38.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.700" level="INFO">${RESULT} = {'diff': [0.0003183750000000027, 0.00031844400000000106, 0.0003184160000000019, 0.00031843100000000096, 0.00031844400000000106, 0.00031844400000000106, 0.00031843100000000096, 0.0003184160000000019, 0...</msg>
<status status="PASS" starttime="20201029 09:33:38.692" endtime="20201029 09:33:38.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.711" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.709" endtime="20201029 09:33:38.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.717" level="INFO">VALUE: [0.0003183750000000027, 0.00031844400000000106, 0.0003184160000000019, 0.00031843100000000096, 0.00031844400000000106, 0.00031844400000000106, 0.00031843100000000096, 0.0003184160000000019, 0.0003184170000000014, 0.00031843100000000096, 0.00031848599999999977, 0.0003184720000000002, 0.0003184300000000015, 0.00031842999999999455, 0.00031848599999999977, 0.00031842999999999455, 0.0003184170000000014, 0.00031841699999999445, 0.0003184300000000015, 0.000318430999999994, 0.00031844500000000053, 0.0003184019999999954, 0.0003183469999999966, 0.0003184300000000015, 0.00031844400000000106, 0.0003184030000000018, 0.0003184160000000019, 0.00031845800000000063, 0.00031838900000000225, 0.0003184160000000019, 0.00031843100000000096, 0.00031844500000000053, 0.000318415999999995, 0.00031843100000000096, 0.00031841699999999445, 0.00031840200000000235, 0.0003184029999999949, 0.00031834700000000354, 0.000318430999999994, 0.0003184170000000014, 0.0003184019999999954, 0.0003184170000000014, 0.00031843100000000096, 0.0003184160000000019, 0.00031843100000000096, 0.0003184300000000015, 0.0003184300000000015, 0.0003184030000000018, 0.0003184160000000019, 0.00031843100000000096]</msg>
<status status="PASS" starttime="20201029 09:33:38.713" endtime="20201029 09:33:38.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.702" endtime="20201029 09:33:38.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.192" endtime="20201029 09:33:38.722"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.161" endtime="20201029 09:33:38.722"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.728" endtime="20201029 09:33:38.750"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.724" endtime="20201029 09:33:38.752"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.776" endtime="20201029 09:33:38.805"></status>
</kw>
<msg timestamp="20201029 09:33:38.806" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.773" endtime="20201029 09:33:38.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.813" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.809" endtime="20201029 09:33:38.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.816" endtime="20201029 09:33:38.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.765" endtime="20201029 09:33:38.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.759" endtime="20201029 09:33:38.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.840" endtime="20201029 09:33:39.203"></status>
</kw>
<msg timestamp="20201029 09:33:39.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038488625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038829667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.837" endtime="20201029 09:33:39.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038488625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038829667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.213" endtime="20201029 09:33:39.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.233" endtime="20201029 09:33:39.237"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.829" endtime="20201029 09:33:39.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.824" endtime="20201029 09:33:39.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.250" level="INFO">${PHILIP_RES} = [{'diff': 0.00034104199999999973}, {'diff': 0.0003410270000000007}, {'diff': 0.00034102800000000016}, {'diff': 0.0003410559999999993}, {'diff': 0.00034104100000000026}, {'diff': 0.0003410559999999993}...</msg>
<status status="PASS" starttime="20201029 09:33:39.242" endtime="20201029 09:33:39.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.260" level="INFO">${RESULT} = {'diff': [0.00034104199999999973, 0.0003410270000000007, 0.00034102800000000016, 0.0003410559999999993, 0.00034104100000000026, 0.0003410559999999993, 0.0003410559999999993, 0.0003410689999999994, 0.0...</msg>
<status status="PASS" starttime="20201029 09:33:39.252" endtime="20201029 09:33:39.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.271" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.269" endtime="20201029 09:33:39.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.278" level="INFO">VALUE: [0.00034104199999999973, 0.0003410270000000007, 0.00034102800000000016, 0.0003410559999999993, 0.00034104100000000026, 0.0003410559999999993, 0.0003410559999999993, 0.0003410689999999994, 0.0003410699999999989, 0.0003410559999999993, 0.00034105499999999983, 0.00034104199999999973, 0.0003410559999999993, 0.00034104100000000026, 0.0003410699999999989, 0.00034104199999999973, 0.00034105499999999983, 0.00034108399999999844, 0.00034104199999999973, 0.00034105499999999983, 0.00034105499999999983, 0.0003410559999999993, 0.00034105499999999983, 0.0003410140000000006, 0.0003410559999999993, 0.00034104199999999973, 0.00034104100000000026, 0.00034104199999999973, 0.00034104199999999973, 0.0003410140000000006, 0.000341000000000001, 0.0003410559999999993, 0.00034108299999999897, 0.0003410559999999993, 0.00034108299999999897, 0.0003410689999999994, 0.0003410559999999993, 0.0003410689999999994, 0.00034105499999999983, 0.00034104199999999973, 0.0003410559999999993, 0.0003410689999999994, 0.0003410559999999993, 0.0003410559999999993, 0.00034105499999999983, 0.0003410559999999993, 0.0003410559999999993, 0.0003410689999999994, 0.00034104199999999973, 0.00034104199999999973]</msg>
<status status="PASS" starttime="20201029 09:33:39.274" endtime="20201029 09:33:39.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.262" endtime="20201029 09:33:39.282"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.753" endtime="20201029 09:33:39.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.723" endtime="20201029 09:33:39.284"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.290" endtime="20201029 09:33:39.312"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.286" endtime="20201029 09:33:39.314"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.336" endtime="20201029 09:33:39.366"></status>
</kw>
<msg timestamp="20201029 09:33:39.367" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.332" endtime="20201029 09:33:39.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.374" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.369" endtime="20201029 09:33:39.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.376" endtime="20201029 09:33:39.380"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.325" endtime="20201029 09:33:39.382"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.319" endtime="20201029 09:33:39.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.401" endtime="20201029 09:33:39.764"></status>
</kw>
<msg timestamp="20201029 09:33:39.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036932819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.398" endtime="20201029 09:33:39.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036568375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036932819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.774" endtime="20201029 09:33:39.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.793" endtime="20201029 09:33:39.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.390" endtime="20201029 09:33:39.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.385" endtime="20201029 09:33:39.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.811" level="INFO">${PHILIP_RES} = [{'diff': 0.0003644439999999985}, {'diff': 0.00036445799999999806}, {'diff': 0.00036444400000000543}, {'diff': 0.0003644299999999989}, {'diff': 0.0003644439999999985}, {'diff': 0.00036441700000000576}...</msg>
<status status="PASS" starttime="20201029 09:33:39.803" endtime="20201029 09:33:39.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.822" level="INFO">${RESULT} = {'diff': [0.0003644439999999985, 0.00036445799999999806, 0.00036444400000000543, 0.0003644299999999989, 0.0003644439999999985, 0.00036441700000000576, 0.00036444499999999797, 0.00036445899999999753, 0...</msg>
<status status="PASS" starttime="20201029 09:33:39.813" endtime="20201029 09:33:39.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.833" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.831" endtime="20201029 09:33:39.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.839" level="INFO">VALUE: [0.0003644439999999985, 0.00036445799999999806, 0.00036444400000000543, 0.0003644299999999989, 0.0003644439999999985, 0.00036441700000000576, 0.00036444499999999797, 0.00036445899999999753, 0.0003644450000000049, 0.00036444400000000543, 0.0003644019999999998, 0.0003645000000000037, 0.00036443000000000586, 0.0003644169999999988, 0.0003644309999999984, 0.0003644450000000049, 0.00036445799999999806, 0.0003643880000000002, 0.0003644439999999985, 0.00036444400000000543, 0.0003644439999999985, 0.0003644309999999984, 0.00036444499999999797, 0.00036444499999999797, 0.00036449999999999677, 0.00036445799999999806, 0.00036447200000000457, 0.0003644439999999985, 0.0003644439999999985, 0.0003644309999999984, 0.0003644450000000049, 0.00036444499999999797, 0.00036445799999999806, 0.00036443000000000586, 0.00036445799999999806, 0.0003644299999999989, 0.00036447200000000457, 0.00036452699999999644, 0.00036444499999999797, 0.00036444499999999797, 0.00036440299999999926, 0.0003644169999999988, 0.0003644439999999985, 0.000364458000000005, 0.0003644299999999989, 0.00036445899999999753, 0.00036444499999999797, 0.00036443100000000533, 0.00036444499999999797, 0.0003644309999999984]</msg>
<status status="PASS" starttime="20201029 09:33:39.836" endtime="20201029 09:33:39.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.824" endtime="20201029 09:33:39.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.315" endtime="20201029 09:33:39.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.285" endtime="20201029 09:33:39.844"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.850" endtime="20201029 09:33:39.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.846" endtime="20201029 09:33:39.874"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.896" endtime="20201029 09:33:39.928"></status>
</kw>
<msg timestamp="20201029 09:33:39.929" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.893" endtime="20201029 09:33:39.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.936" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.932" endtime="20201029 09:33:39.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.938" endtime="20201029 09:33:39.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.885" endtime="20201029 09:33:39.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.880" endtime="20201029 09:33:39.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.966" endtime="20201029 09:33:40.337"></status>
</kw>
<msg timestamp="20201029 09:33:40.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036781958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037170583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.961" endtime="20201029 09:33:40.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036781958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037170583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.347" endtime="20201029 09:33:40.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.367" endtime="20201029 09:33:40.371"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.952" endtime="20201029 09:33:40.372"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.947" endtime="20201029 09:33:40.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.384" level="INFO">${PHILIP_RES} = [{'diff': 0.00038862500000000355}, {'diff': 0.00038861099999999704}, {'diff': 0.00038859799999999695}, {'diff': 0.00038861099999999704}, {'diff': 0.0003885829999999979}, {'diff': 0.0003885829999999979...</msg>
<status status="PASS" starttime="20201029 09:33:40.376" endtime="20201029 09:33:40.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.395" level="INFO">${RESULT} = {'diff': [0.00038862500000000355, 0.00038861099999999704, 0.00038859799999999695, 0.00038861099999999704, 0.0003885829999999979, 0.0003885829999999979, 0.00038855499999999876, 0.00038859699999999747, ...</msg>
<status status="PASS" starttime="20201029 09:33:40.386" endtime="20201029 09:33:40.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.407" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.404" endtime="20201029 09:33:40.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.412" level="INFO">VALUE: [0.00038862500000000355, 0.00038861099999999704, 0.00038859799999999695, 0.00038861099999999704, 0.0003885829999999979, 0.0003885829999999979, 0.00038855499999999876, 0.00038859699999999747, 0.00038858300000000484, 0.0003886530000000027, 0.00038858300000000484, 0.0003885829999999979, 0.0003885829999999979, 0.00038856899999999833, 0.0003886669999999953, 0.00038861099999999704, 0.0003885829999999979, 0.00038861099999999704, 0.00038859699999999747, 0.00038858300000000484, 0.0003885980000000039, 0.000388611000000004, 0.00038854199999999867, 0.00038859699999999747, 0.0003885839999999974, 0.00038861099999999704, 0.0003885839999999974, 0.0003886119999999965, 0.0003885839999999974, 0.00038859799999999695, 0.0003886390000000031, 0.000388611000000004, 0.00038858300000000484, 0.000388611000000004, 0.0003885829999999979, 0.00038859699999999747, 0.00038859699999999747, 0.0003885699999999978, 0.00038859699999999747, 0.0003885829999999979, 0.00038859699999999747, 0.00038861099999999704, 0.0003885970000000044, 0.0003885550000000057, 0.0003885970000000044, 0.0003886390000000031, 0.00038856899999999833, 0.0003885829999999979, 0.00038854199999999867, 0.0003886389999999962]</msg>
<status status="PASS" starttime="20201029 09:33:40.409" endtime="20201029 09:33:40.414"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.397" endtime="20201029 09:33:40.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.876" endtime="20201029 09:33:40.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.845" endtime="20201029 09:33:40.418"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.424" endtime="20201029 09:33:40.446"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.420" endtime="20201029 09:33:40.448"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.470" endtime="20201029 09:33:40.502"></status>
</kw>
<msg timestamp="20201029 09:33:40.503" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.467" endtime="20201029 09:33:40.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.510" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.506" endtime="20201029 09:33:40.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.512" endtime="20201029 09:33:40.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.459" endtime="20201029 09:33:40.518"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.453" endtime="20201029 09:33:40.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.537" endtime="20201029 09:33:40.902"></status>
</kw>
<msg timestamp="20201029 09:33:40.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036919444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037332958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.534" endtime="20201029 09:33:40.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036919444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037332958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.912" endtime="20201029 09:33:40.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.932" endtime="20201029 09:33:40.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.526" endtime="20201029 09:33:40.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.521" endtime="20201029 09:33:40.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.949" level="INFO">${PHILIP_RES} = [{'diff': 0.0004135139999999968}, {'diff': 0.0004135280000000033}, {'diff': 0.0004135140000000037}, {'diff': 0.00041348600000000457}, {'diff': 0.0004135280000000033}, {'diff': 0.00041352799999999634},...</msg>
<status status="PASS" starttime="20201029 09:33:40.941" endtime="20201029 09:33:40.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.959" level="INFO">${RESULT} = {'diff': [0.0004135139999999968, 0.0004135280000000033, 0.0004135140000000037, 0.00041348600000000457, 0.0004135280000000033, 0.00041352799999999634, 0.0004135139999999968, 0.0004135140000000037, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:40.951" endtime="20201029 09:33:40.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.970" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.968" endtime="20201029 09:33:40.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.976" level="INFO">VALUE: [0.0004135139999999968, 0.0004135280000000033, 0.0004135140000000037, 0.00041348600000000457, 0.0004135280000000033, 0.00041352799999999634, 0.0004135139999999968, 0.0004135140000000037, 0.00041350000000000414, 0.0004135140000000037, 0.0004135139999999968, 0.00041359700000000166, 0.0004134999999999972, 0.0004135280000000033, 0.00041351300000000424, 0.00043327700000000274, 0.0004135140000000037, 0.00041345800000000543, 0.0004134999999999972, 0.0004134999999999972, 0.0004135560000000024, 0.0004135140000000037, 0.0004135140000000037, 0.0004135560000000024, 0.00041347199999999806, 0.0004135139999999968, 0.00041354200000000285, 0.0004135140000000037, 0.0004135410000000034, 0.0004135410000000034, 0.00041354099999999644, 0.0004135129999999973, 0.00041348599999999763, 0.0004135280000000033, 0.0004135280000000033, 0.00041348599999999763, 0.0004134579999999985, 0.0004135139999999968, 0.00041352699999999687, 0.0004135140000000037, 0.00041350000000000414, 0.00041352799999999634, 0.0004134999999999972, 0.0004135139999999968, 0.0004134999999999972, 0.0004135140000000037, 0.0004135270000000038, 0.00041348599999999763, 0.00041352699999999687, 0.00041348599999999763]</msg>
<status status="PASS" starttime="20201029 09:33:40.973" endtime="20201029 09:33:40.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.961" endtime="20201029 09:33:40.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.449" endtime="20201029 09:33:40.981"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.419" endtime="20201029 09:33:40.981"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.987" endtime="20201029 09:33:41.010"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.983" endtime="20201029 09:33:41.011"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.034" endtime="20201029 09:33:41.070"></status>
</kw>
<msg timestamp="20201029 09:33:41.071" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.030" endtime="20201029 09:33:41.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.078" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.074" endtime="20201029 09:33:41.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.080" endtime="20201029 09:33:41.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.023" endtime="20201029 09:33:41.086"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.017" endtime="20201029 09:33:41.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.106" endtime="20201029 09:33:41.469"></status>
</kw>
<msg timestamp="20201029 09:33:41.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038702431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039141625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.102" endtime="20201029 09:33:41.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038702431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039141625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.479" endtime="20201029 09:33:41.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.498" endtime="20201029 09:33:41.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.094" endtime="20201029 09:33:41.504"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.089" endtime="20201029 09:33:41.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.515" level="INFO">${PHILIP_RES} = [{'diff': 0.0004391939999999969}, {'diff': 0.00043918100000000376}, {'diff': 0.00043920899999999596}, {'diff': 0.00043919400000000386}, {'diff': 0.0004392079999999965}, {'diff': 0.00043919400000000386...</msg>
<status status="PASS" starttime="20201029 09:33:41.507" endtime="20201029 09:33:41.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.525" level="INFO">${RESULT} = {'diff': [0.0004391939999999969, 0.00043918100000000376, 0.00043920899999999596, 0.00043919400000000386, 0.0004392079999999965, 0.00043919400000000386, 0.0004391949999999964, 0.0004392090000000029, 0....</msg>
<status status="PASS" starttime="20201029 09:33:41.518" endtime="20201029 09:33:41.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.537" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.534" endtime="20201029 09:33:41.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.542" level="INFO">VALUE: [0.0004391939999999969, 0.00043918100000000376, 0.00043920899999999596, 0.00043919400000000386, 0.0004392079999999965, 0.00043919400000000386, 0.0004391949999999964, 0.0004392090000000029, 0.0004391939999999969, 0.00043919400000000386, 0.0004391939999999969, 0.00043918100000000376, 0.00043920899999999596, 0.00043920800000000343, 0.0004391939999999969, 0.00043920800000000343, 0.00043919500000000333, 0.0004391529999999977, 0.00043920800000000343, 0.0004392079999999965, 0.0004391660000000047, 0.0004391939999999969, 0.00043918100000000376, 0.0004392079999999965, 0.00043919400000000386, 0.0004391939999999969, 0.0004391670000000042, 0.0004392499999999952, 0.00043919500000000333, 0.0004391659999999978, 0.000439222000000003, 0.0004391939999999969, 0.00043919500000000333, 0.0004391809999999968, 0.000439222000000003, 0.0004392079999999965, 0.00043920800000000343, 0.0004392090000000029, 0.00043919500000000333, 0.00043919500000000333, 0.0004392079999999965, 0.00043920800000000343, 0.0004391939999999969, 0.0004392090000000029, 0.0004391949999999964, 0.00043919400000000386, 0.0004391939999999969, 0.00043919400000000386, 0.00043916699999999725, 0.00043919500000000333]</msg>
<status status="PASS" starttime="20201029 09:33:41.539" endtime="20201029 09:33:41.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.527" endtime="20201029 09:33:41.546"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.013" endtime="20201029 09:33:41.547"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.982" endtime="20201029 09:33:41.547"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:41.554" endtime="20201029 09:33:41.576"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.550" endtime="20201029 09:33:41.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.602" endtime="20201029 09:33:41.637"></status>
</kw>
<msg timestamp="20201029 09:33:41.638" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.598" endtime="20201029 09:33:41.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.645" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:41.640" endtime="20201029 09:33:41.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.647" endtime="20201029 09:33:41.651"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.590" endtime="20201029 09:33:41.653"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.585" endtime="20201029 09:33:41.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.672" endtime="20201029 09:33:42.033"></status>
</kw>
<msg timestamp="20201029 09:33:42.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038490389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038956042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.669" endtime="20201029 09:33:42.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038490389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038956042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.043" endtime="20201029 09:33:42.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.063" endtime="20201029 09:33:42.067"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.661" endtime="20201029 09:33:42.068"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.656" endtime="20201029 09:33:42.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.080" level="INFO">${PHILIP_RES} = [{'diff': 0.00046565300000000337}, {'diff': 0.00046566700000000294}, {'diff': 0.00046565300000000337}, {'diff': 0.00046566599999999653}, {'diff': 0.00046565299999999643}, {'diff': 0.000465651999999996...</msg>
<status status="PASS" starttime="20201029 09:33:42.072" endtime="20201029 09:33:42.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.090" level="INFO">${RESULT} = {'diff': [0.00046565300000000337, 0.00046566700000000294, 0.00046565300000000337, 0.00046566599999999653, 0.00046565299999999643, 0.00046565199999999696, 0.00046563899999999686, 0.00046565300000000337...</msg>
<status status="PASS" starttime="20201029 09:33:42.082" endtime="20201029 09:33:42.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.101" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.098" endtime="20201029 09:33:42.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.108" level="INFO">VALUE: [0.00046565300000000337, 0.00046566700000000294, 0.00046565300000000337, 0.00046566599999999653, 0.00046565299999999643, 0.00046565199999999696, 0.00046563899999999686, 0.00046565300000000337, 0.0004656390000000038, 0.00046566700000000294, 0.0004656249999999973, 0.00046565299999999643, 0.00046566599999999653, 0.00046565300000000337, 0.00046572200000000175, 0.0004656109999999977, 0.00046565299999999643, 0.00046568099999999557, 0.00046565299999999643, 0.0004656390000000038, 0.0004656390000000038, 0.0004657080000000022, 0.00046568099999999557, 0.00046566599999999653, 0.000465666999999996, 0.00046562500000000423, 0.00046566700000000294, 0.00046562500000000423, 0.0004656379999999974, 0.00046565299999999643, 0.0004656799999999961, 0.00046566700000000294, 0.00046565300000000337, 0.00046566700000000294, 0.0004656109999999977, 0.00046565199999999696, 0.00046563899999999686, 0.00046565199999999696, 0.00046565300000000337, 0.0004656390000000038, 0.0004656950000000021, 0.00046563899999999686, 0.00046559699999999815, 0.00046563899999999686, 0.00048376299999999817, 0.0004656390000000038, 0.00046565300000000337, 0.00046563899999999686, 0.00046565299999999643, 0.00046565200000001084]</msg>
<status status="PASS" starttime="20201029 09:33:42.103" endtime="20201029 09:33:42.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.091" endtime="20201029 09:33:42.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.579" endtime="20201029 09:33:42.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.548" endtime="20201029 09:33:42.114"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.120" endtime="20201029 09:33:42.142"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.116" endtime="20201029 09:33:42.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.166" endtime="20201029 09:33:42.204"></status>
</kw>
<msg timestamp="20201029 09:33:42.205" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.162" endtime="20201029 09:33:42.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.212" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.208" endtime="20201029 09:33:42.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.214" endtime="20201029 09:33:42.218"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.155" endtime="20201029 09:33:42.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.149" endtime="20201029 09:33:42.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.239" endtime="20201029 09:33:42.600"></status>
</kw>
<msg timestamp="20201029 09:33:42.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037451958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037944903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.236" endtime="20201029 09:33:42.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037451958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037944903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.610" endtime="20201029 09:33:42.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.629" endtime="20201029 09:33:42.633"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.228" endtime="20201029 09:33:42.635"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.223" endtime="20201029 09:33:42.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:42.646" level="INFO">${PHILIP_RES} = [{'diff': 0.0004929450000000016}, {'diff': 0.000492915999999996}, {'diff': 0.0004928469999999976}, {'diff': 0.0004928610000000042}, {'diff': 0.0004928749999999968}, {'diff': 0.0004929029999999959}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:42.638" endtime="20201029 09:33:42.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:42.658" level="INFO">${RESULT} = {'diff': [0.0004929450000000016, 0.000492915999999996, 0.0004928469999999976, 0.0004928610000000042, 0.0004928749999999968, 0.0004929029999999959, 0.0004928610000000042, 0.0004928470000000046, 0.00049...</msg>
<status status="PASS" starttime="20201029 09:33:42.649" endtime="20201029 09:33:42.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.669" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:42.666" endtime="20201029 09:33:42.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.674" level="INFO">VALUE: [0.0004929450000000016, 0.000492915999999996, 0.0004928469999999976, 0.0004928610000000042, 0.0004928749999999968, 0.0004929029999999959, 0.0004928610000000042, 0.0004928470000000046, 0.0004929030000000029, 0.0004928609999999972, 0.0004928189999999985, 0.0004928750000000037, 0.0004929300000000025, 0.0004928609999999972, 0.0004928890000000033, 0.0004928750000000037, 0.0004928609999999972, 0.0004927919999999988, 0.000492833000000005, 0.0004928329999999981, 0.0004928189999999985, 0.0004928479999999971, 0.0004928610000000042, 0.0004928609999999972, 0.0004928609999999972, 0.0004928619999999967, 0.0004928470000000046, 0.0004928469999999976, 0.0004928610000000042, 0.0004928609999999972, 0.0004928609999999972, 0.0004928610000000042, 0.0004928329999999981, 0.0004928609999999972, 0.0004928749999999968, 0.0004928480000000041, 0.0004928749999999968, 0.0004928609999999972, 0.0004928329999999981, 0.0004928610000000042, 0.0004928889999999964, 0.0004928609999999972, 0.0004928610000000042, 0.0004928750000000037, 0.0004929170000000024, 0.0004928619999999967, 0.0004928609999999972, 0.0004928609999999972, 0.0004928609999999972, 0.0004928470000000046]</msg>
<status status="PASS" starttime="20201029 09:33:42.671" endtime="20201029 09:33:42.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.659" endtime="20201029 09:33:42.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.145" endtime="20201029 09:33:42.686"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.114" endtime="20201029 09:33:42.686"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:42.692" endtime="20201029 09:33:42.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.688" endtime="20201029 09:33:42.716"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.739" endtime="20201029 09:33:42.776"></status>
</kw>
<msg timestamp="20201029 09:33:42.778" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.735" endtime="20201029 09:33:42.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:42.784" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:42.780" endtime="20201029 09:33:42.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.787" endtime="20201029 09:33:42.791"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.727" endtime="20201029 09:33:42.792"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.722" endtime="20201029 09:33:42.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:42.812" endtime="20201029 09:33:43.174"></status>
</kw>
<msg timestamp="20201029 09:33:43.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036677611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037198458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:42.808" endtime="20201029 09:33:43.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036677611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037198458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.184" endtime="20201029 09:33:43.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.204" endtime="20201029 09:33:43.208"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.800" endtime="20201029 09:33:43.210"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.795" endtime="20201029 09:33:43.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.222" level="INFO">${PHILIP_RES} = [{'diff': 0.0005208469999999979}, {'diff': 0.0005208189999999988}, {'diff': 0.0005208479999999974}, {'diff': 0.0005208339999999978}, {'diff': 0.0005208470000000048}, {'diff': 0.0005208329999999983}, {...</msg>
<status status="PASS" starttime="20201029 09:33:43.213" endtime="20201029 09:33:43.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.234" level="INFO">${RESULT} = {'diff': [0.0005208469999999979, 0.0005208189999999988, 0.0005208479999999974, 0.0005208339999999978, 0.0005208470000000048, 0.0005208329999999983, 0.0005208329999999983, 0.0005208339999999978, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:43.224" endtime="20201029 09:33:43.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.245" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.243" endtime="20201029 09:33:43.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.251" level="INFO">VALUE: [0.0005208469999999979, 0.0005208189999999988, 0.0005208479999999974, 0.0005208339999999978, 0.0005208470000000048, 0.0005208329999999983, 0.0005208329999999983, 0.0005208339999999978, 0.0005208330000000053, 0.0005207919999999991, 0.0005208339999999978, 0.0005208059999999987, 0.0005208470000000048, 0.0005208609999999975, 0.0005208479999999974, 0.0005208610000000044, 0.0005207909999999996, 0.0005208339999999978, 0.0005208339999999978, 0.0005208330000000053, 0.0005208889999999966, 0.0005208329999999983, 0.0005208339999999978, 0.0005208330000000053, 0.0005208189999999988, 0.0005208339999999978, 0.000520777, 0.0005207919999999991, 0.0005208329999999983, 0.0005207919999999991, 0.0005208470000000048, 0.0005208329999999983, 0.0005208469999999979, 0.0005208480000000043, 0.0005208330000000053, 0.0005208609999999975, 0.0005208339999999978, 0.0005208340000000047, 0.0005208329999999983, 0.0005208189999999988, 0.000520764, 0.0005208340000000047, 0.0005207909999999996, 0.0005208329999999983, 0.0005208339999999978, 0.0005208470000000048, 0.0005208189999999918, 0.0005208329999999983, 0.0005208339999999978, 0.0005208190000000057]</msg>
<status status="PASS" starttime="20201029 09:33:43.248" endtime="20201029 09:33:43.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.236" endtime="20201029 09:33:43.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.718" endtime="20201029 09:33:43.256"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:42.687" endtime="20201029 09:33:43.256"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.262" endtime="20201029 09:33:43.285"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.259" endtime="20201029 09:33:43.287"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.309" endtime="20201029 09:33:43.349"></status>
</kw>
<msg timestamp="20201029 09:33:43.350" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.305" endtime="20201029 09:33:43.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.356" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.352" endtime="20201029 09:33:43.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.359" endtime="20201029 09:33:43.363"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.298" endtime="20201029 09:33:43.365"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.292" endtime="20201029 09:33:43.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.384" endtime="20201029 09:33:43.702"></status>
</kw>
<msg timestamp="20201029 09:33:43.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036959444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037509014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.380" endtime="20201029 09:33:43.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036959444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037509014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:43.707" endtime="20201029 09:33:43.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.715" endtime="20201029 09:33:43.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.373" endtime="20201029 09:33:43.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.368" endtime="20201029 09:33:43.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:43.723" level="INFO">${PHILIP_RES} = [{'diff': 0.0005495699999999992}, {'diff': 0.0005495689999999998}, {'diff': 0.0005495550000000002}, {'diff': 0.0005495689999999998}, {'diff': 0.0005495699999999992}, {'diff': 0.0005495699999999992}, {...</msg>
<status status="PASS" starttime="20201029 09:33:43.719" endtime="20201029 09:33:43.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:43.727" level="INFO">${RESULT} = {'diff': [0.0005495699999999992, 0.0005495689999999998, 0.0005495550000000002, 0.0005495689999999998, 0.0005495699999999992, 0.0005495699999999992, 0.0005495839999999988, 0.000549624999999998, 0.00054...</msg>
<status status="PASS" starttime="20201029 09:33:43.724" endtime="20201029 09:33:43.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.733" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:43.731" endtime="20201029 09:33:43.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.735" level="INFO">VALUE: [0.0005495699999999992, 0.0005495689999999998, 0.0005495550000000002, 0.0005495689999999998, 0.0005495699999999992, 0.0005495699999999992, 0.0005495839999999988, 0.000549624999999998, 0.0005495689999999998, 0.0005495550000000002, 0.000549513999999994, 0.0005495839999999988, 0.0005495420000000001, 0.0005495699999999992, 0.0005496110000000054, 0.0005495689999999998, 0.0005495550000000002, 0.0005495699999999992, 0.0005495559999999997, 0.0005495559999999997, 0.0005495699999999992, 0.0005495000000000014, 0.0005495689999999998, 0.0005495550000000002, 0.0005495559999999997, 0.0005495840000000057, 0.0005495699999999992, 0.0005495829999999993, 0.0005495550000000002, 0.0005495689999999998, 0.0005495689999999998, 0.0005495699999999992, 0.0005704309999999962, 0.0005495550000000002, 0.0005494860000000018, 0.0005495690000000067, 0.0005495699999999992, 0.0005495559999999997, 0.0005495829999999993, 0.0005495550000000002, 0.0005495550000000002, 0.0005495969999999989, 0.0005495699999999992, 0.0005495700000000062, 0.0005495699999999992, 0.0005495560000000066, 0.0005495969999999989, 0.0005495830000000063, 0.0005495689999999998, 0.0005495699999999992]</msg>
<status status="PASS" starttime="20201029 09:33:43.734" endtime="20201029 09:33:43.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.728" endtime="20201029 09:33:43.737"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.288" endtime="20201029 09:33:43.738"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.257" endtime="20201029 09:33:43.738"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:43.741" endtime="20201029 09:33:43.760"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.739" endtime="20201029 09:33:43.761"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.771" endtime="20201029 09:33:43.813"></status>
</kw>
<msg timestamp="20201029 09:33:43.814" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.770" endtime="20201029 09:33:43.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:43.817" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:43.815" endtime="20201029 09:33:43.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.818" endtime="20201029 09:33:43.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.766" endtime="20201029 09:33:43.821"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.764" endtime="20201029 09:33:43.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:43.830" endtime="20201029 09:33:44.193"></status>
</kw>
<msg timestamp="20201029 09:33:44.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023385667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02396475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:43.828" endtime="20201029 09:33:44.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023385667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02396475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:44.203" endtime="20201029 09:33:44.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.222" endtime="20201029 09:33:44.227"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.824" endtime="20201029 09:33:44.228"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.822" endtime="20201029 09:33:44.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.240" level="INFO">${PHILIP_RES} = [{'diff': 0.0005790830000000011}, {'diff': 0.0005790829999999976}, {'diff': 0.0005790690000000015}, {'diff': 0.0005790550000000019}, {'diff': 0.0005790699999999975}, {'diff': 0.0005790830000000011}, {...</msg>
<status status="PASS" starttime="20201029 09:33:44.231" endtime="20201029 09:33:44.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.250" level="INFO">${RESULT} = {'diff': [0.0005790830000000011, 0.0005790829999999976, 0.0005790690000000015, 0.0005790550000000019, 0.0005790699999999975, 0.0005790830000000011, 0.0005790980000000001, 0.0005790969999999972, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:44.242" endtime="20201029 09:33:44.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.262" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.259" endtime="20201029 09:33:44.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.268" level="INFO">VALUE: [0.0005790830000000011, 0.0005790829999999976, 0.0005790690000000015, 0.0005790550000000019, 0.0005790699999999975, 0.0005790830000000011, 0.0005790980000000001, 0.0005790969999999972, 0.0005790840000000005, 0.0005790560000000014, 0.0005790839999999971, 0.0005790690000000015, 0.0005790830000000011, 0.0005790830000000011, 0.0005790409999999954, 0.0005790980000000001, 0.0005790690000000015, 0.000579070000000001, 0.0005790830000000011, 0.000579070000000001, 0.0005790689999999946, 0.0005790840000000005, 0.0005790970000000006, 0.0005934169999999989, 0.0005790690000000015, 0.000579069999999994, 0.0005790690000000015, 0.000579070000000001, 0.0005790830000000011, 0.0005790840000000005, 0.0005790970000000006, 0.0005790839999999936, 0.0005790830000000011, 0.0005790140000000027, 0.0005790690000000015, 0.0005791110000000002, 0.0005790830000000011, 0.0005790689999999946, 0.0005790980000000001, 0.0005790690000000015, 0.000579070000000001, 0.0005790830000000011, 0.000579070000000001, 0.0005790829999999941, 0.0005790840000000005, 0.0005790420000000018, 0.000579070000000001, 0.0005790690000000015, 0.0005790409999999954, 0.0005790840000000005]</msg>
<status status="PASS" starttime="20201029 09:33:44.264" endtime="20201029 09:33:44.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.252" endtime="20201029 09:33:44.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.761" endtime="20201029 09:33:44.273"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:43.738" endtime="20201029 09:33:44.273"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.279" endtime="20201029 09:33:44.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.276" endtime="20201029 09:33:44.303"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.327" endtime="20201029 09:33:44.370"></status>
</kw>
<msg timestamp="20201029 09:33:44.371" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.324" endtime="20201029 09:33:44.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.378" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.374" endtime="20201029 09:33:44.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.381" endtime="20201029 09:33:44.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.316" endtime="20201029 09:33:44.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.310" endtime="20201029 09:33:44.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.406" endtime="20201029 09:33:44.766"></status>
</kw>
<msg timestamp="20201029 09:33:44.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038439861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039049139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.402" endtime="20201029 09:33:44.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038439861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039049139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:44.776" endtime="20201029 09:33:44.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.795" endtime="20201029 09:33:44.799"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.395" endtime="20201029 09:33:44.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.389" endtime="20201029 09:33:44.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:44.812" level="INFO">${PHILIP_RES} = [{'diff': 0.0006092779999999978}, {'diff': 0.000609334000000003}, {'diff': 0.0006093470000000031}, {'diff': 0.0006093609999999958}, {'diff': 0.0006093470000000031}, {'diff': 0.0006093189999999971}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:44.804" endtime="20201029 09:33:44.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:44.822" level="INFO">${RESULT} = {'diff': [0.0006092779999999978, 0.000609334000000003, 0.0006093470000000031, 0.0006093609999999958, 0.0006093470000000031, 0.0006093189999999971, 0.0006093470000000031, 0.0006093329999999966, 0.00060...</msg>
<status status="PASS" starttime="20201029 09:33:44.815" endtime="20201029 09:33:44.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.833" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:44.831" endtime="20201029 09:33:44.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.840" level="INFO">VALUE: [0.0006092779999999978, 0.000609334000000003, 0.0006093470000000031, 0.0006093609999999958, 0.0006093470000000031, 0.0006093189999999971, 0.0006093470000000031, 0.0006093329999999966, 0.0006093330000000036, 0.0006093199999999965, 0.0006093050000000044, 0.0006093469999999962, 0.0006093610000000027, 0.0006093469999999962, 0.0006093750000000023, 0.0006093480000000026, 0.0006093750000000023, 0.0006093750000000023, 0.0006093620000000022, 0.0006093050000000044, 0.0006093329999999966, 0.0006093480000000026, 0.0006093749999999953, 0.0006093330000000036, 0.0006093339999999961, 0.0006093330000000036, 0.0006199019999999986, 0.0006093610000000027, 0.0006093890000000018, 0.0006093620000000022, 0.0006093610000000027, 0.0006093470000000031, 0.0006093199999999965, 0.0006093060000000039, 0.0006093469999999962, 0.0006093480000000026, 0.0006093329999999966, 0.0006093469999999962, 0.0006093610000000027, 0.0006093469999999962, 0.0006093469999999962, 0.0006093339999999892, 0.0006092909999999979, 0.0006093330000000036, 0.0006093610000000027, 0.0006092639999999983, 0.00060930599999999, 0.0006093610000000027, 0.0006093330000000036, 0.0006093469999999962]</msg>
<status status="PASS" starttime="20201029 09:33:44.836" endtime="20201029 09:33:44.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.824" endtime="20201029 09:33:44.844"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.304" endtime="20201029 09:33:44.845"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.274" endtime="20201029 09:33:44.846"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:44.852" endtime="20201029 09:33:44.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.848" endtime="20201029 09:33:44.876"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.898" endtime="20201029 09:33:44.943"></status>
</kw>
<msg timestamp="20201029 09:33:44.944" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.895" endtime="20201029 09:33:44.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:44.950" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:44.946" endtime="20201029 09:33:44.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.953" endtime="20201029 09:33:44.957"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.887" endtime="20201029 09:33:44.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.881" endtime="20201029 09:33:44.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:44.978" endtime="20201029 09:33:45.339"></status>
</kw>
<msg timestamp="20201029 09:33:45.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036592625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037233, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:44.974" endtime="20201029 09:33:45.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036592625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037233, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:45.349" endtime="20201029 09:33:45.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.369" endtime="20201029 09:33:45.373"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.967" endtime="20201029 09:33:45.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.962" endtime="20201029 09:33:45.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.386" level="INFO">${PHILIP_RES} = [{'diff': 0.0006403750000000055}, {'diff': 0.0006403750000000055}, {'diff': 0.0006403749999999986}, {'diff': 0.000640360999999999}, {'diff': 0.000667708000000003}, {'diff': 0.0006403469999999994}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:45.378" endtime="20201029 09:33:45.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.397" level="INFO">${RESULT} = {'diff': [0.0006403750000000055, 0.0006403750000000055, 0.0006403749999999986, 0.000640360999999999, 0.000667708000000003, 0.0006403469999999994, 0.0006403749999999986, 0.0006403749999999986, 0.000640...</msg>
<status status="PASS" starttime="20201029 09:33:45.388" endtime="20201029 09:33:45.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.408" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.406" endtime="20201029 09:33:45.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.414" level="INFO">VALUE: [0.0006403750000000055, 0.0006403750000000055, 0.0006403749999999986, 0.000640360999999999, 0.000667708000000003, 0.0006403469999999994, 0.0006403749999999986, 0.0006403749999999986, 0.000640360999999999, 0.0006403889999999982, 0.0006403750000000055, 0.0006403749999999986, 0.000640360999999999, 0.0006404299999999974, 0.0006403889999999982, 0.0006403890000000051, 0.0006403750000000055, 0.000640360999999999, 0.0006403879999999987, 0.0006403749999999986, 0.000640360999999999, 0.0006403749999999986, 0.0006404170000000042, 0.0006403749999999986, 0.0006403889999999982, 0.0006403749999999986, 0.0006403619999999985, 0.0006403749999999986, 0.0006403749999999986, 0.0006403470000000064, 0.0006403749999999986, 0.0006403889999999982, 0.000640360999999999, 0.0006403749999999986, 0.000640360999999999, 0.0006403750000000055, 0.000640360999999999, 0.0006403750000000055, 0.0006403750000000125, 0.0006403890000000051, 0.0006402920000000006, 0.0006403749999999986, 0.0006403749999999986, 0.0006403609999999921, 0.0006403749999999986, 0.0006403749999999986, 0.0006403749999999986, 0.0006403890000000051, 0.0006403749999999986, 0.0006403190000000003]</msg>
<status status="PASS" starttime="20201029 09:33:45.410" endtime="20201029 09:33:45.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.399" endtime="20201029 09:33:45.417"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.877" endtime="20201029 09:33:45.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:44.847" endtime="20201029 09:33:45.419"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:45.425" endtime="20201029 09:33:45.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.421" endtime="20201029 09:33:45.449"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.471" endtime="20201029 09:33:45.517"></status>
</kw>
<msg timestamp="20201029 09:33:45.519" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.468" endtime="20201029 09:33:45.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.525" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:45.521" endtime="20201029 09:33:45.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.528" endtime="20201029 09:33:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.460" endtime="20201029 09:33:45.534"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.455" endtime="20201029 09:33:45.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.553" endtime="20201029 09:33:45.912"></status>
</kw>
<msg timestamp="20201029 09:33:45.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036821486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037493681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.549" endtime="20201029 09:33:45.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036821486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037493681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:45.922" endtime="20201029 09:33:45.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:45.942" endtime="20201029 09:33:45.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.542" endtime="20201029 09:33:45.948"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.537" endtime="20201029 09:33:45.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:45.959" level="INFO">${PHILIP_RES} = [{'diff': 0.0006721950000000004}, {'diff': 0.0006721520000000022}, {'diff': 0.0006721670000000013}, {'diff': 0.0006721670000000013}, {'diff': 0.0006721660000000018}, {'diff': 0.0006722369999999991}, {...</msg>
<status status="PASS" starttime="20201029 09:33:45.951" endtime="20201029 09:33:45.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:45.970" level="INFO">${RESULT} = {'diff': [0.0006721950000000004, 0.0006721520000000022, 0.0006721670000000013, 0.0006721670000000013, 0.0006721660000000018, 0.0006722369999999991, 0.0006721809999999939, 0.0006721670000000013, 0.0006...</msg>
<status status="PASS" starttime="20201029 09:33:45.961" endtime="20201029 09:33:45.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.983" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:45.980" endtime="20201029 09:33:45.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:45.990" level="INFO">VALUE: [0.0006721950000000004, 0.0006721520000000022, 0.0006721670000000013, 0.0006721670000000013, 0.0006721660000000018, 0.0006722369999999991, 0.0006721809999999939, 0.0006721670000000013, 0.0006721800000000014, 0.000672111000000003, 0.0006721810000000009, 0.0006721800000000014, 0.0006721800000000014, 0.0006721810000000009, 0.0006721810000000009, 0.0006722079999999936, 0.0006722359999999997, 0.0006721530000000017, 0.0006721250000000026, 0.0006721390000000022, 0.0006721530000000017, 0.0006721530000000017, 0.0006721800000000014, 0.0006721670000000013, 0.0006721670000000013, 0.0006721799999999944, 0.0006721669999999944, 0.0006946249999999973, 0.0006721670000000013, 0.0006721659999999949, 0.0006721800000000014, 0.0006721950000000004, 0.000672194000000001, 0.0006721520000000022, 0.0006721810000000009, 0.0006721810000000009, 0.0006721660000000018, 0.0006721800000000083, 0.0006721670000000013, 0.0006721529999999948, 0.0006721799999999944, 0.0006721950000000004, 0.0006721530000000087, 0.0006721799999999944, 0.0006721809999999939, 0.0006722640000000057, 0.0006721380000000027, 0.0006721660000000018, 0.0006721809999999939, 0.0006721530000000087]</msg>
<status status="PASS" starttime="20201029 09:33:45.987" endtime="20201029 09:33:45.991"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.972" endtime="20201029 09:33:45.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.450" endtime="20201029 09:33:45.995"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.420" endtime="20201029 09:33:45.995"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.002" endtime="20201029 09:33:46.024"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.998" endtime="20201029 09:33:46.026"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.048" endtime="20201029 09:33:46.096"></status>
</kw>
<msg timestamp="20201029 09:33:46.097" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.044" endtime="20201029 09:33:46.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.104" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.099" endtime="20201029 09:33:46.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.106" endtime="20201029 09:33:46.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.037" endtime="20201029 09:33:46.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.031" endtime="20201029 09:33:46.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.131" endtime="20201029 09:33:46.494"></status>
</kw>
<msg timestamp="20201029 09:33:46.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03667075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037398486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:46.127" endtime="20201029 09:33:46.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03667075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037398486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:46.504" endtime="20201029 09:33:46.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.523" endtime="20201029 09:33:46.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.120" endtime="20201029 09:33:46.529"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.115" endtime="20201029 09:33:46.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:46.540" level="INFO">${PHILIP_RES} = [{'diff': 0.0007277359999999997}, {'diff': 0.000704749999999997}, {'diff': 0.000704749999999997}, {'diff': 0.0007047080000000053}, {'diff': 0.0007047359999999975}, {'diff': 0.0007047219999999979}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:46.532" endtime="20201029 09:33:46.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:46.550" level="INFO">${RESULT} = {'diff': [0.0007277359999999997, 0.000704749999999997, 0.000704749999999997, 0.0007047080000000053, 0.0007047359999999975, 0.0007047219999999979, 0.0007047220000000048, 0.0007047359999999975, 0.000704...</msg>
<status status="PASS" starttime="20201029 09:33:46.543" endtime="20201029 09:33:46.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.561" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:46.559" endtime="20201029 09:33:46.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.567" level="INFO">VALUE: [0.0007277359999999997, 0.000704749999999997, 0.000704749999999997, 0.0007047080000000053, 0.0007047359999999975, 0.0007047219999999979, 0.0007047220000000048, 0.0007047359999999975, 0.000704749999999997, 0.0007047360000000044, 0.0007047640000000036, 0.000704749999999997, 0.0007047359999999975, 0.0007047090000000047, 0.0007047079999999983, 0.000704749999999997, 0.0007047220000000048, 0.0007047089999999978, 0.0007047359999999975, 0.0007046950000000052, 0.0007047219999999979, 0.000704749999999997, 0.0007047230000000043, 0.0007047359999999975, 0.0007047219999999979, 0.0007047219999999979, 0.0007046950000000052, 0.0007046799999999992, 0.0007047359999999975, 0.0007047370000000039, 0.0007047219999999979, 0.0007048050000000028, 0.0007047220000000048, 0.0007047219999999979, 0.0007047219999999979, 0.000704721999999991, 0.0007047089999999978, 0.0007047359999999975, 0.000704667000000006, 0.0007046799999999992, 0.0007047359999999975, 0.0007047359999999975, 0.000704721999999991, 0.000704721999999991, 0.0007179999999999964, 0.000704736999999997, 0.000704721999999991, 0.0007047089999999978, 0.0007047359999999975, 0.0007047079999999983]</msg>
<status status="PASS" starttime="20201029 09:33:46.564" endtime="20201029 09:33:46.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.552" endtime="20201029 09:33:46.571"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.027" endtime="20201029 09:33:46.572"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:45.996" endtime="20201029 09:33:46.572"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:46.579" endtime="20201029 09:33:46.601"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.575" endtime="20201029 09:33:46.603"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.625" endtime="20201029 09:33:46.675"></status>
</kw>
<msg timestamp="20201029 09:33:46.677" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.621" endtime="20201029 09:33:46.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:46.683" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:46.679" endtime="20201029 09:33:46.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.686" endtime="20201029 09:33:46.690"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.614" endtime="20201029 09:33:46.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.608" endtime="20201029 09:33:46.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:46.711" endtime="20201029 09:33:47.072"></status>
</kw>
<msg timestamp="20201029 09:33:47.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038277236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039015264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:46.707" endtime="20201029 09:33:47.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038277236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039015264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.082" endtime="20201029 09:33:47.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.101" endtime="20201029 09:33:47.105"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.699" endtime="20201029 09:33:47.107"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.694" endtime="20201029 09:33:47.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.118" level="INFO">${PHILIP_RES} = [{'diff': 0.0007380280000000017}, {'diff': 0.0007380550000000013}, {'diff': 0.0007380420000000013}, {'diff': 0.0007380420000000013}, {'diff': 0.0007380550000000013}, {'diff': 0.0007380270000000022}, {...</msg>
<status status="PASS" starttime="20201029 09:33:47.110" endtime="20201029 09:33:47.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.128" level="INFO">${RESULT} = {'diff': [0.0007380280000000017, 0.0007380550000000013, 0.0007380420000000013, 0.0007380420000000013, 0.0007380550000000013, 0.0007380270000000022, 0.0007380000000000025, 0.0007380550000000013, 0.0007...</msg>
<status status="PASS" starttime="20201029 09:33:47.120" endtime="20201029 09:33:47.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.139" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.136" endtime="20201029 09:33:47.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.144" level="INFO">VALUE: [0.0007380280000000017, 0.0007380550000000013, 0.0007380420000000013, 0.0007380420000000013, 0.0007380550000000013, 0.0007380270000000022, 0.0007380000000000025, 0.0007380550000000013, 0.0007379999999999956, 0.0007380560000000008, 0.0007380419999999943, 0.0007380690000000009, 0.0007381249999999992, 0.0007380420000000013, 0.0007658889999999988, 0.000737985999999996, 0.000738084, 0.0007380410000000018, 0.0007380420000000013, 0.0007380280000000017, 0.0007380549999999944, 0.0007380420000000013, 0.0007380980000000065, 0.0007380280000000017, 0.0007380560000000008, 0.0007380420000000013, 0.0007380280000000017, 0.0007380550000000013, 0.0007380560000000008, 0.0007380280000000017, 0.0007380140000000021, 0.0007380420000000082, 0.0007380560000000008, 0.0007380410000000087, 0.0007380560000000008, 0.000737985999999996, 0.0007380410000000087, 0.0007380420000000082, 0.0007380419999999943, 0.0007380410000000087, 0.0007380560000000008, 0.0007380560000000008, 0.0007380550000000013, 0.0007380279999999878, 0.0007380419999999943, 0.0007380549999999875, 0.0007380550000000013, 0.0007380560000000008, 0.0007380419999999943, 0.0007380969999999931]</msg>
<status status="PASS" starttime="20201029 09:33:47.141" endtime="20201029 09:33:47.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.129" endtime="20201029 09:33:47.148"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.604" endtime="20201029 09:33:47.149"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:46.574" endtime="20201029 09:33:47.150"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.156" endtime="20201029 09:33:47.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.152" endtime="20201029 09:33:47.180"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.204" endtime="20201029 09:33:47.256"></status>
</kw>
<msg timestamp="20201029 09:33:47.257" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.200" endtime="20201029 09:33:47.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.264" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.259" endtime="20201029 09:33:47.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.266" endtime="20201029 09:33:47.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.193" endtime="20201029 09:33:47.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.187" endtime="20201029 09:33:47.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.291" endtime="20201029 09:33:47.593"></status>
</kw>
<msg timestamp="20201029 09:33:47.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038947181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039719292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.287" endtime="20201029 09:33:47.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038947181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039719292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.603" endtime="20201029 09:33:47.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.623" endtime="20201029 09:33:47.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.280" endtime="20201029 09:33:47.629"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.275" endtime="20201029 09:33:47.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:47.640" level="INFO">${PHILIP_RES} = [{'diff': 0.0007721110000000059}, {'diff': 0.0007721249999999985}, {'diff': 0.000772139000000005}, {'diff': 0.0007721109999999989}, {'diff': 0.0007721250000000054}, {'diff': 0.0007721379999999986}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:47.632" endtime="20201029 09:33:47.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:47.650" level="INFO">${RESULT} = {'diff': [0.0007721110000000059, 0.0007721249999999985, 0.000772139000000005, 0.0007721109999999989, 0.0007721250000000054, 0.0007721379999999986, 0.0007721379999999986, 0.0007720829999999998, 0.00077...</msg>
<status status="PASS" starttime="20201029 09:33:47.642" endtime="20201029 09:33:47.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.661" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:47.658" endtime="20201029 09:33:47.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.668" level="INFO">VALUE: [0.0007721110000000059, 0.0007721249999999985, 0.000772139000000005, 0.0007721109999999989, 0.0007721250000000054, 0.0007721379999999986, 0.0007721379999999986, 0.0007720829999999998, 0.0007721389999999981, 0.0007721389999999981, 0.0007721529999999976, 0.000772139000000005, 0.0007721249999999985, 0.0007721530000000046, 0.0007721529999999976, 0.0007721809999999968, 0.0007721659999999977, 0.0007721939999999969, 0.0007721529999999976, 0.0007721389999999981, 0.000772139000000005, 0.0007721529999999976, 0.0007721250000000054, 0.0007721379999999986, 0.0007721109999999989, 0.0007721249999999985, 0.0007721949999999964, 0.0007721389999999981, 0.0007721669999999903, 0.0007722080000000103, 0.000772139000000005, 0.000772139000000005, 0.0007720840000000062, 0.0007721249999999985, 0.0007721670000000042, 0.0007721249999999985, 0.0007721249999999985, 0.0007721249999999985, 0.000772139000000005, 0.000772139000000005, 0.0007721660000000047, 0.0007721380000000055, 0.0007721530000000115, 0.0007721389999999911, 0.000772139000000005, 0.000772139000000005, 0.0007720969999999994, 0.0007721249999999985, 0.0007721529999999976, 0.0007721249999999985]</msg>
<status status="PASS" starttime="20201029 09:33:47.663" endtime="20201029 09:33:47.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.652" endtime="20201029 09:33:47.672"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.181" endtime="20201029 09:33:47.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.150" endtime="20201029 09:33:47.674"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:47.680" endtime="20201029 09:33:47.702"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.676" endtime="20201029 09:33:47.704"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.726" endtime="20201029 09:33:47.780"></status>
</kw>
<msg timestamp="20201029 09:33:47.781" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.722" endtime="20201029 09:33:47.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:47.788" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:47.783" endtime="20201029 09:33:47.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.790" endtime="20201029 09:33:47.794"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.715" endtime="20201029 09:33:47.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.709" endtime="20201029 09:33:47.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:47.815" endtime="20201029 09:33:48.176"></status>
</kw>
<msg timestamp="20201029 09:33:48.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036894611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037701583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:47.811" endtime="20201029 09:33:48.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036894611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037701583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.186" endtime="20201029 09:33:48.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.205" endtime="20201029 09:33:48.209"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.804" endtime="20201029 09:33:48.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.799" endtime="20201029 09:33:48.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.222" level="INFO">${PHILIP_RES} = [{'diff': 0.0008069719999999961}, {'diff': 0.0008070000000000022}, {'diff': 0.0008070140000000017}, {'diff': 0.0008070139999999948}, {'diff': 0.0008069860000000026}, {'diff': 0.0008069859999999957}, {...</msg>
<status status="PASS" starttime="20201029 09:33:48.214" endtime="20201029 09:33:48.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.233" level="INFO">${RESULT} = {'diff': [0.0008069719999999961, 0.0008070000000000022, 0.0008070140000000017, 0.0008070139999999948, 0.0008069860000000026, 0.0008069859999999957, 0.0008069439999999969, 0.0008070000000000022, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:48.224" endtime="20201029 09:33:48.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.245" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.242" endtime="20201029 09:33:48.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.250" level="INFO">VALUE: [0.0008069719999999961, 0.0008070000000000022, 0.0008070140000000017, 0.0008070139999999948, 0.0008069860000000026, 0.0008069859999999957, 0.0008069439999999969, 0.0008070000000000022, 0.0008069859999999957, 0.000807055000000001, 0.0008069999999999952, 0.0008069870000000021, 0.0008069860000000026, 0.0008069729999999956, 0.0008070000000000022, 0.0008069999999999952, 0.0008069860000000026, 0.0008070000000000022, 0.0008069859999999957, 0.000806972000000003, 0.0008069859999999957, 0.0008070000000000022, 0.0008069860000000026, 0.0008070140000000017, 0.0008069860000000026, 0.0008069719999999961, 0.0008069860000000026, 0.0008069859999999957, 0.0008070130000000023, 0.0008070420000000009, 0.0008348479999999991, 0.0008069860000000095, 0.0008069869999999951, 0.0008070000000000022, 0.0008069450000000034, 0.0008069860000000095, 0.0008069859999999957, 0.000807055000000001, 0.0008070000000000022, 0.0008069859999999957, 0.0008069859999999957, 0.0008069859999999957, 0.0008069719999999891, 0.0008069579999999965, 0.0008069999999999883, 0.0008070139999999948, 0.0008069859999999957, 0.0008069859999999957, 0.0008069859999999957, 0.0008070129999999953]</msg>
<status status="PASS" starttime="20201029 09:33:48.247" endtime="20201029 09:33:48.257"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.235" endtime="20201029 09:33:48.259"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.705" endtime="20201029 09:33:48.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:47.675" endtime="20201029 09:33:48.261"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.268" endtime="20201029 09:33:48.289"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.264" endtime="20201029 09:33:48.291"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.314" endtime="20201029 09:33:48.369"></status>
</kw>
<msg timestamp="20201029 09:33:48.370" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.310" endtime="20201029 09:33:48.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.377" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.372" endtime="20201029 09:33:48.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.380" endtime="20201029 09:33:48.384"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.302" endtime="20201029 09:33:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.297" endtime="20201029 09:33:48.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.406" endtime="20201029 09:33:48.772"></status>
</kw>
<msg timestamp="20201029 09:33:48.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036823931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037666514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.402" endtime="20201029 09:33:48.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036823931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037666514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.783" endtime="20201029 09:33:48.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.802" endtime="20201029 09:33:48.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.394" endtime="20201029 09:33:48.808"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.389" endtime="20201029 09:33:48.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:48.819" level="INFO">${PHILIP_RES} = [{'diff': 0.0008425830000000009}, {'diff': 0.0008425830000000009}, {'diff': 0.0008426110000000001}, {'diff': 0.0008425970000000005}, {'diff': 0.0008426110000000001}, {'diff': 0.0008426119999999995}, {...</msg>
<status status="PASS" starttime="20201029 09:33:48.811" endtime="20201029 09:33:48.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:48.831" level="INFO">${RESULT} = {'diff': [0.0008425830000000009, 0.0008425830000000009, 0.0008426110000000001, 0.0008425970000000005, 0.0008426110000000001, 0.0008426119999999995, 0.0008425840000000004, 0.0008425690000000013, 0.0008...</msg>
<status status="PASS" starttime="20201029 09:33:48.822" endtime="20201029 09:33:48.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.842" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:48.840" endtime="20201029 09:33:48.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.848" level="INFO">VALUE: [0.0008425830000000009, 0.0008425830000000009, 0.0008426110000000001, 0.0008425970000000005, 0.0008426110000000001, 0.0008426119999999995, 0.0008425840000000004, 0.0008425690000000013, 0.0008425970000000005, 0.0008425830000000009, 0.0008425970000000005, 0.0008426110000000001, 0.0008425970000000005, 0.0008426110000000001, 0.0008426119999999995, 0.0008425970000000005, 0.0008425970000000005, 0.0008426249999999996, 0.0008426110000000001, 0.0008426110000000001, 0.0008425970000000005, 0.0008425970000000005, 0.0008426379999999997, 0.0008426119999999995, 0.0008426389999999992, 0.0008426110000000001, 0.0008426669999999983, 0.0008426529999999988, 0.0008426110000000001, 0.0008426249999999996, 0.0008425970000000005, 0.0008731810000000007, 0.0008425970000000005, 0.0008425970000000005, 0.0008425840000000073, 0.0008425839999999934, 0.0008425549999999948, 0.0008425970000000005, 0.0008425970000000005, 0.0008426390000000061, 0.0008426249999999996, 0.0008425970000000005, 0.0008426119999999926, 0.000842598, 0.000842598, 0.0008425970000000005, 0.000842582999999994, 0.0008426249999999996, 0.0008425970000000005, 0.000842611000000007]</msg>
<status status="PASS" starttime="20201029 09:33:48.845" endtime="20201029 09:33:48.849"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.833" endtime="20201029 09:33:48.851"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.293" endtime="20201029 09:33:48.853"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.262" endtime="20201029 09:33:48.853"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:48.859" endtime="20201029 09:33:48.881"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.855" endtime="20201029 09:33:48.883"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.906" endtime="20201029 09:33:48.963"></status>
</kw>
<msg timestamp="20201029 09:33:48.964" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.902" endtime="20201029 09:33:48.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:48.970" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:48.966" endtime="20201029 09:33:48.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:48.973" endtime="20201029 09:33:48.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.894" endtime="20201029 09:33:48.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.889" endtime="20201029 09:33:48.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.000" endtime="20201029 09:33:49.370"></status>
</kw>
<msg timestamp="20201029 09:33:49.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037002917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:48.996" endtime="20201029 09:33:49.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037002917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.380" endtime="20201029 09:33:49.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.400" endtime="20201029 09:33:49.404"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.987" endtime="20201029 09:33:49.406"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.982" endtime="20201029 09:33:49.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:49.418" level="INFO">${PHILIP_RES} = [{'diff': 0.0008789859999999983}, {'diff': 0.0008789859999999983}, {'diff': 0.0008789999999999978}, {'diff': 0.0008789859999999983}, {'diff': 0.0008789729999999982}, {'diff': 0.000878944999999999}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:49.409" endtime="20201029 09:33:49.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:49.428" level="INFO">${RESULT} = {'diff': [0.0008789859999999983, 0.0008789859999999983, 0.0008789999999999978, 0.0008789859999999983, 0.0008789729999999982, 0.000878944999999999, 0.0008789859999999983, 0.0008789859999999983, 0.00087...</msg>
<status status="PASS" starttime="20201029 09:33:49.420" endtime="20201029 09:33:49.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.439" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:49.437" endtime="20201029 09:33:49.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.445" level="INFO">VALUE: [0.0008789859999999983, 0.0008789859999999983, 0.0008789999999999978, 0.0008789859999999983, 0.0008789729999999982, 0.000878944999999999, 0.0008789859999999983, 0.0008789859999999983, 0.0008789859999999983, 0.0008789729999999982, 0.0008789869999999977, 0.0008789859999999983, 0.0008789719999999987, 0.0008789579999999991, 0.0008789859999999983, 0.0008789869999999977, 0.0008789859999999983, 0.0008789859999999983, 0.0008789859999999983, 0.0008790420000000035, 0.0008789869999999977, 0.0008789719999999987, 0.0008789999999999978, 0.0008790560000000031, 0.0008789999999999978, 0.0008789730000000051, 0.0008789999999999978, 0.0008789859999999983, 0.0009034999999999876, 0.0008789589999999986, 0.0008789720000000056, 0.0008789440000000065, 0.0008789859999999983, 0.0008790000000000048, 0.0008789589999999986, 0.0008789859999999983, 0.0008789719999999918, 0.0008789859999999983, 0.0008789859999999983, 0.0008789729999999912, 0.0008789579999999991, 0.0008789579999999991, 0.0008789999999999909, 0.0008789859999999983, 0.0008789729999999912, 0.0008789720000000056, 0.0008789859999999983, 0.0008789719999999918, 0.0008789719999999918, 0.0008790280000000039]</msg>
<status status="PASS" starttime="20201029 09:33:49.442" endtime="20201029 09:33:49.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.430" endtime="20201029 09:33:49.449"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.885" endtime="20201029 09:33:49.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:48.854" endtime="20201029 09:33:49.450"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:49.457" endtime="20201029 09:33:49.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.453" endtime="20201029 09:33:49.481"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.503" endtime="20201029 09:33:49.567"></status>
</kw>
<msg timestamp="20201029 09:33:49.568" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.500" endtime="20201029 09:33:49.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.575" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:49.570" endtime="20201029 09:33:49.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.578" endtime="20201029 09:33:49.582"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.492" endtime="20201029 09:33:49.583"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.486" endtime="20201029 09:33:49.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.602" endtime="20201029 09:33:49.963"></status>
</kw>
<msg timestamp="20201029 09:33:49.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042260306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043176444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.599" endtime="20201029 09:33:49.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:49.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042260306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043176444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:49.973" endtime="20201029 09:33:49.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:49.993" endtime="20201029 09:33:49.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.591" endtime="20201029 09:33:49.999"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.586" endtime="20201029 09:33:50.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:50.010" level="INFO">${PHILIP_RES} = [{'diff': 0.0009161380000000038}, {'diff': 0.0009161249999999968}, {'diff': 0.0009161670000000025}, {'diff': 0.0009161109999999972}, {'diff': 0.0009161109999999972}, {'diff': 0.0009161390000000033}, {...</msg>
<status status="PASS" starttime="20201029 09:33:50.002" endtime="20201029 09:33:50.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:50.020" level="INFO">${RESULT} = {'diff': [0.0009161380000000038, 0.0009161249999999968, 0.0009161670000000025, 0.0009161109999999972, 0.0009161109999999972, 0.0009161390000000033, 0.0009161249999999968, 0.0009161110000000042, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:33:50.012" endtime="20201029 09:33:50.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.031" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:50.029" endtime="20201029 09:33:50.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.037" level="INFO">VALUE: [0.0009161380000000038, 0.0009161249999999968, 0.0009161670000000025, 0.0009161109999999972, 0.0009161109999999972, 0.0009161390000000033, 0.0009161249999999968, 0.0009161110000000042, 0.0009160979999999971, 0.0009161249999999968, 0.0009161390000000033, 0.0009161249999999968, 0.0009161530000000029, 0.0009161110000000042, 0.0009261249999999999, 0.0009161249999999968, 0.0009161250000000037, 0.0009160559999999984, 0.0009161249999999968, 0.0009161110000000042, 0.0009160560000000054, 0.0009161389999999964, 0.0009161249999999899, 0.0009161389999999964, 0.0009160979999999902, 0.0009161109999999972, 0.0009161250000000037, 0.0009161250000000037, 0.0009161390000000103, 0.0009161250000000037, 0.0009161250000000037, 0.0009160970000000046, 0.0009161379999999969, 0.0009161389999999964, 0.0009161249999999899, 0.0009160980000000041, 0.0009160970000000046, 0.0009161250000000037, 0.0009161250000000037, 0.0009161250000000037, 0.0009161379999999969, 0.0009161390000000103, 0.0009161250000000037, 0.0009160839999999976, 0.0009161250000000037, 0.0009161250000000037, 0.0009161250000000037, 0.0009456250000000055, 0.0009161379999999969, 0.0009161800000000025]</msg>
<status status="PASS" starttime="20201029 09:33:50.034" endtime="20201029 09:33:50.038"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.022" endtime="20201029 09:33:50.040"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.482" endtime="20201029 09:33:50.042"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:49.451" endtime="20201029 09:33:50.042"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:50.048" endtime="20201029 09:33:50.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.044" endtime="20201029 09:33:50.072"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.096" endtime="20201029 09:33:50.157"></status>
</kw>
<msg timestamp="20201029 09:33:50.158" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.092" endtime="20201029 09:33:50.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.165" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.160" endtime="20201029 09:33:50.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.167" endtime="20201029 09:33:50.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.085" endtime="20201029 09:33:50.173"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.079" endtime="20201029 09:33:50.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.192" endtime="20201029 09:33:50.554"></status>
</kw>
<msg timestamp="20201029 09:33:50.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038358667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039312694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.189" endtime="20201029 09:33:50.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038358667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039312694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.564" endtime="20201029 09:33:50.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.584" endtime="20201029 09:33:50.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.181" endtime="20201029 09:33:50.589"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.176" endtime="20201029 09:33:50.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:50.601" level="INFO">${PHILIP_RES} = [{'diff': 0.0009540270000000031}, {'diff': 0.0009540280000000026}, {'diff': 0.0009540409999999958}, {'diff': 0.0009540419999999952}, {'diff': 0.000954014000000003}, {'diff': 0.0009540280000000026}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:50.592" endtime="20201029 09:33:50.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:50.611" level="INFO">${RESULT} = {'diff': [0.0009540270000000031, 0.0009540280000000026, 0.0009540409999999958, 0.0009540419999999952, 0.000954014000000003, 0.0009540280000000026, 0.0009540280000000026, 0.0009540279999999957, 0.00095...</msg>
<status status="PASS" starttime="20201029 09:33:50.603" endtime="20201029 09:33:50.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.622" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:50.619" endtime="20201029 09:33:50.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.629" level="INFO">VALUE: [0.0009540270000000031, 0.0009540280000000026, 0.0009540409999999958, 0.0009540419999999952, 0.000954014000000003, 0.0009540280000000026, 0.0009540280000000026, 0.0009540279999999957, 0.0009540560000000017, 0.0009540410000000027, 0.0009540000000000035, 0.0009540129999999966, 0.0009539999999999965, 0.0009540269999999962, 0.0009540420000000022, 0.000985139000000003, 0.0009540419999999952, 0.0009540699999999944, 0.000954014000000003, 0.000954097000000001, 0.0009540280000000026, 0.0009540279999999957, 0.0009540129999999966, 0.0009540279999999957, 0.0009540269999999962, 0.0009540280000000095, 0.0009540560000000087, 0.0009540550000000092, 0.0009540279999999957, 0.0009539999999999965, 0.0009539719999999974, 0.0009540280000000095, 0.0009540280000000095, 0.0009540130000000036, 0.000954014000000003, 0.0009540269999999962, 0.0009540279999999957, 0.0009540139999999891, 0.0009539999999999965, 0.0009540420000000022, 0.0009540410000000027, 0.0009540420000000022, 0.0009540410000000027, 0.0009540420000000022, 0.0009540410000000027, 0.0009540280000000095, 0.0009540550000000092, 0.0009540279999999957, 0.0009754029999999997, 0.0009539860000000039]</msg>
<status status="PASS" starttime="20201029 09:33:50.624" endtime="20201029 09:33:50.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.612" endtime="20201029 09:33:50.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.073" endtime="20201029 09:33:50.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.043" endtime="20201029 09:33:50.635"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:50.641" endtime="20201029 09:33:50.663"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.637" endtime="20201029 09:33:50.665"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.687" endtime="20201029 09:33:50.750"></status>
</kw>
<msg timestamp="20201029 09:33:50.751" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.683" endtime="20201029 09:33:50.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:50.758" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:50.753" endtime="20201029 09:33:50.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.760" endtime="20201029 09:33:50.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.675" endtime="20201029 09:33:50.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.670" endtime="20201029 09:33:50.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:50.785" endtime="20201029 09:33:51.146"></status>
</kw>
<msg timestamp="20201029 09:33:51.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036708917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037701625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:50.782" endtime="20201029 09:33:51.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036708917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037701625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.155" endtime="20201029 09:33:51.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.175" endtime="20201029 09:33:51.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.774" endtime="20201029 09:33:51.181"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.769" endtime="20201029 09:33:51.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:51.192" level="INFO">${PHILIP_RES} = [{'diff': 0.0009927080000000019}, {'diff': 0.0009927080000000019}, {'diff': 0.0009927080000000019}, {'diff': 0.0009926940000000023}, {'diff': 0.0009927090000000013}, {'diff': 0.0009927080000000019}, {...</msg>
<status status="PASS" starttime="20201029 09:33:51.184" endtime="20201029 09:33:51.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:51.203" level="INFO">${RESULT} = {'diff': [0.0009927080000000019, 0.0009927080000000019, 0.0009927080000000019, 0.0009926940000000023, 0.0009927090000000013, 0.0009927080000000019, 0.0009926940000000023, 0.0009926939999999954, 0.0009...</msg>
<status status="PASS" starttime="20201029 09:33:51.194" endtime="20201029 09:33:51.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.215" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:51.212" endtime="20201029 09:33:51.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.220" level="INFO">VALUE: [0.0009927080000000019, 0.0009927080000000019, 0.0009927080000000019, 0.0009926940000000023, 0.0009927090000000013, 0.0009927080000000019, 0.0009926940000000023, 0.0009926939999999954, 0.000992707999999995, 0.0009927090000000013, 0.0009926939999999954, 0.0009927089999999944, 0.0009926939999999954, 0.0009926939999999954, 0.0010178619999999944, 0.0009926939999999954, 0.0009926939999999954, 0.0009927640000000001, 0.0009926939999999954, 0.0009927089999999944, 0.000992707999999995, 0.0009927640000000001, 0.0009927629999999937, 0.000992736000000001, 0.0009926950000000087, 0.0009927080000000088, 0.0009926529999999961, 0.0009927220000000014, 0.0009927220000000014, 0.0009926950000000018, 0.0009926940000000023, 0.0009927089999999944, 0.0009927220000000014, 0.0009927089999999944, 0.0009926810000000091, 0.0009927220000000014, 0.0009927089999999944, 0.0009926809999999953, 0.0009926809999999953, 0.0009926669999999888, 0.0009926939999999884, 0.000992694999999988, 0.000992707999999995, 0.0009927089999999944, 0.000992707999999995, 0.0010216110000000056, 0.0009926940000000023, 0.0009927089999999944, 0.0009927080000000088, 0.0009927220000000014]</msg>
<status status="PASS" starttime="20201029 09:33:51.217" endtime="20201029 09:33:51.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.205" endtime="20201029 09:33:51.224"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.666" endtime="20201029 09:33:51.225"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:50.635" endtime="20201029 09:33:51.225"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:51.232" endtime="20201029 09:33:51.254"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.228" endtime="20201029 09:33:51.256"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.278" endtime="20201029 09:33:51.343"></status>
</kw>
<msg timestamp="20201029 09:33:51.344" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.274" endtime="20201029 09:33:51.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.350" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.346" endtime="20201029 09:33:51.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.353" endtime="20201029 09:33:51.357"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.267" endtime="20201029 09:33:51.359"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.261" endtime="20201029 09:33:51.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.378" endtime="20201029 09:33:51.740"></status>
</kw>
<msg timestamp="20201029 09:33:51.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036752806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037784917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.374" endtime="20201029 09:33:51.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036752806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037784917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.749" endtime="20201029 09:33:51.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.769" endtime="20201029 09:33:51.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.367" endtime="20201029 09:33:51.775"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.362" endtime="20201029 09:33:51.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:51.786" level="INFO">${PHILIP_RES} = [{'diff': 0.0010321110000000022}, {'diff': 0.0010321940000000002}, {'diff': 0.0010321390000000014}, {'diff': 0.0010321800000000006}, {'diff': 0.0010321390000000014}, {'diff': 0.001032153000000001}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:51.778" endtime="20201029 09:33:51.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:51.797" level="INFO">${RESULT} = {'diff': [0.0010321110000000022, 0.0010321940000000002, 0.0010321390000000014, 0.0010321800000000006, 0.0010321390000000014, 0.001032153000000001, 0.0010321250000000018, 0.0010321250000000018, 0.00103...</msg>
<status status="PASS" starttime="20201029 09:33:51.788" endtime="20201029 09:33:51.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.809" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:51.806" endtime="20201029 09:33:51.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.814" level="INFO">VALUE: [0.0010321110000000022, 0.0010321940000000002, 0.0010321390000000014, 0.0010321800000000006, 0.0010321390000000014, 0.001032153000000001, 0.0010321250000000018, 0.0010321250000000018, 0.0010321669999999936, 0.0010321250000000018, 0.0010321380000000019, 0.0010321390000000014, 0.0010637359999999957, 0.0010321250000000018, 0.001032153000000001, 0.0010321249999999949, 0.0010321250000000018, 0.0010321390000000014, 0.0010320689999999966, 0.0010321390000000014, 0.0010320980000000021, 0.0010321250000000018, 0.0010321390000000014, 0.001032153000000001, 0.0010321250000000087, 0.0010321390000000014, 0.0010321380000000019, 0.001032069999999996, 0.0010321249999999949, 0.0010321250000000087, 0.0010321389999999875, 0.0010321390000000014, 0.0010321390000000014, 0.0010321389999999875, 0.001032152999999994, 0.0010321249999999949, 0.0010321670000000005, 0.0010321520000000084, 0.0010321390000000014, 0.0010321250000000087, 0.0010320969999999957, 0.0010321519999999945, 0.001064903000000006, 0.0010321530000000079, 0.0010321389999999875, 0.0010321530000000079, 0.0010321390000000014, 0.0010321390000000014, 0.001032083000000003, 0.001032166000000001]</msg>
<status status="PASS" starttime="20201029 09:33:51.811" endtime="20201029 09:33:51.816"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.799" endtime="20201029 09:33:51.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.257" endtime="20201029 09:33:51.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.226" endtime="20201029 09:33:51.820"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:51.826" endtime="20201029 09:33:51.848"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.822" endtime="20201029 09:33:51.850"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.872" endtime="20201029 09:33:51.939"></status>
</kw>
<msg timestamp="20201029 09:33:51.940" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.869" endtime="20201029 09:33:51.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:51.947" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:51.942" endtime="20201029 09:33:51.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.949" endtime="20201029 09:33:51.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.861" endtime="20201029 09:33:51.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.856" endtime="20201029 09:33:51.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:51.974" endtime="20201029 09:33:52.308"></status>
</kw>
<msg timestamp="20201029 09:33:52.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037137611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038209944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:51.971" endtime="20201029 09:33:52.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037137611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038209944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.318" endtime="20201029 09:33:52.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.338" endtime="20201029 09:33:52.342"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.963" endtime="20201029 09:33:52.344"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.958" endtime="20201029 09:33:52.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:52.355" level="INFO">${PHILIP_RES} = [{'diff': 0.0010723330000000017}, {'diff': 0.0010723330000000017}, {'diff': 0.0010723199999999947}, {'diff': 0.0010723610000000008}, {'diff': 0.0010723340000000012}, {'diff': 0.0010723189999999952}, {...</msg>
<status status="PASS" starttime="20201029 09:33:52.347" endtime="20201029 09:33:52.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:52.365" level="INFO">${RESULT} = {'diff': [0.0010723330000000017, 0.0010723330000000017, 0.0010723199999999947, 0.0010723610000000008, 0.0010723340000000012, 0.0010723189999999952, 0.0010723330000000017, 0.0010723480000000007, 0.0010...</msg>
<status status="PASS" starttime="20201029 09:33:52.357" endtime="20201029 09:33:52.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.376" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:52.374" endtime="20201029 09:33:52.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.382" level="INFO">VALUE: [0.0010723330000000017, 0.0010723330000000017, 0.0010723199999999947, 0.0010723610000000008, 0.0010723340000000012, 0.0010723189999999952, 0.0010723330000000017, 0.0010723480000000007, 0.0010920420000000014, 0.0010723480000000007, 0.0010723479999999938, 0.0010723200000000016, 0.0010723200000000016, 0.0010723340000000012, 0.001072278000000003, 0.0010723340000000012, 0.0010723480000000007, 0.0010723340000000012, 0.0010723480000000007, 0.0010723340000000012, 0.0010723200000000016, 0.001072360999999994, 0.001072360999999994, 0.001072360999999994, 0.0010723610000000078, 0.0010723620000000073, 0.0010723470000000013, 0.001072305999999995, 0.0010723199999999877, 0.0010723470000000013, 0.0010723470000000013, 0.0010723329999999948, 0.0010723470000000013, 0.001072360999999994, 0.0010723190000000021, 0.0010723330000000086, 0.0010723329999999948, 0.0010910280000000078, 0.0010723339999999942, 0.0010723750000000004, 0.001072389000000007, 0.0010723339999999942, 0.0010723339999999942, 0.0010723200000000016, 0.0010723339999999942, 0.0010723339999999942, 0.0010723750000000004, 0.0010723750000000004, 0.0010724029999999996, 0.0010723329999999948]</msg>
<status status="PASS" starttime="20201029 09:33:52.378" endtime="20201029 09:33:52.383"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.367" endtime="20201029 09:33:52.385"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.851" endtime="20201029 09:33:52.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:51.820" endtime="20201029 09:33:52.387"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:52.393" endtime="20201029 09:33:52.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.389" endtime="20201029 09:33:52.417"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.439" endtime="20201029 09:33:52.510"></status>
</kw>
<msg timestamp="20201029 09:33:52.511" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:52.436" endtime="20201029 09:33:52.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.518" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:52.514" endtime="20201029 09:33:52.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.521" endtime="20201029 09:33:52.525"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.428" endtime="20201029 09:33:52.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.422" endtime="20201029 09:33:52.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.547" endtime="20201029 09:33:52.909"></status>
</kw>
<msg timestamp="20201029 09:33:52.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038395056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039508361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.543" endtime="20201029 09:33:52.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038395056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039508361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:52.919" endtime="20201029 09:33:52.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:52.938" endtime="20201029 09:33:52.942"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.536" endtime="20201029 09:33:52.944"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.530" endtime="20201029 09:33:52.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:52.955" level="INFO">${PHILIP_RES} = [{'diff': 0.001113305000000002}, {'diff': 0.0011133610000000002}, {'diff': 0.0011132910000000024}, {'diff': 0.0011133610000000002}, {'diff': 0.0011132359999999966}, {'diff': 0.001113305000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:52.947" endtime="20201029 09:33:52.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:52.965" level="INFO">${RESULT} = {'diff': [0.001113305000000002, 0.0011133610000000002, 0.0011132910000000024, 0.0011133610000000002, 0.0011132359999999966, 0.001113305000000002, 0.0011132780000000023, 0.0011132500000000031, 0.001113...</msg>
<status status="PASS" starttime="20201029 09:33:52.957" endtime="20201029 09:33:52.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.976" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:52.974" endtime="20201029 09:33:52.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:52.982" level="INFO">VALUE: [0.001113305000000002, 0.0011133610000000002, 0.0011132910000000024, 0.0011133610000000002, 0.0011132359999999966, 0.001113305000000002, 0.0011132780000000023, 0.0011132500000000031, 0.0011133190000000015, 0.0011133060000000014, 0.0011133060000000014, 0.0011132780000000023, 0.001113320000000001, 0.0011132780000000023, 0.0011133190000000015, 0.0011133060000000014, 0.0011133190000000015, 0.0011133060000000014, 0.0011132780000000023, 0.001113333000000001, 0.0011133059999999945, 0.001113320000000001, 0.0011132910000000024, 0.0011132499999999962, 0.0011133749999999998, 0.0011133190000000015, 0.0011314310000000022, 0.0011132920000000018, 0.0011132920000000018, 0.0011133059999999945, 0.0011133190000000015, 0.0011133190000000015, 0.001113291999999988, 0.0011132909999999885, 0.0011132640000000027, 0.0011133059999999945, 0.001113304999999995, 0.0011132920000000018, 0.0011132920000000018, 0.001113304999999995, 0.0011133059999999945, 0.0011133190000000015, 0.0011132910000000024, 0.0011132779999999953, 0.0011133190000000015, 0.0011132780000000092, 0.0011133060000000083, 0.0011133749999999998, 0.001113320000000001, 0.0011133059999999945]</msg>
<status status="PASS" starttime="20201029 09:33:52.978" endtime="20201029 09:33:52.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.967" endtime="20201029 09:33:52.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.418" endtime="20201029 09:33:52.987"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:52.388" endtime="20201029 09:33:52.987"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.121" endtime="20201029 09:33:52.987"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:21.080" endtime="20201029 09:33:52.989" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:49.339" endtime="20201029 09:33:53.013"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:32:43.447" endtime="20201029 09:33:53.099"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
